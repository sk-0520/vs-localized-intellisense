<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Formats.Asn1</name>
  </assembly>
  <members>
    <member name="T:System.Formats.Asn1.Asn1Tag">
      <summary vsli:raw="This type represents an ASN.1 tag, as described in ITU-T Recommendation X.680.">이 형식은 ITU-T 권장 X.680에 설명된 대로 ASN.1 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Boolean">
      <summary vsli:raw="Represents the universal class tag for a Boolean value.">부울 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedBitString">
      <summary vsli:raw="Represents the universal class tag for a Bit String value under a constructed encoding.">생성된 인코딩에서 비트 문자열 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedOctetString">
      <summary vsli:raw="Represents the universal class tag for a Octet String value under a constructed encoding.">생성된 인코딩에서 옥텟 문자열 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Enumerated">
      <summary vsli:raw="Represents the universal class tag for an Enumerated value.">열거형 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.GeneralizedTime">
      <summary vsli:raw="Represents the universal class tag for a GeneralizedTime value.">GeneralizedTime 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Integer">
      <summary vsli:raw="Represents the universal class tag for an Integer value.">정수 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Null">
      <summary vsli:raw="Represents the universal class tag for a &lt;see langword=&quot;null&quot; /&gt; value.">
        <see langword="null" /> 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ObjectIdentifier">
      <summary vsli:raw="Represents the universal class tag for an Object Identifier value.">개체 식별자 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveBitString">
      <summary vsli:raw="Represents the universal class tag for a Bit String value under a primitive encoding.">기본 인코딩에서 비트 문자열 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveOctetString">
      <summary vsli:raw="Represents the universal class tag for an Octet String value under a primitive encoding.">기본 인코딩에서 옥텟 문자열 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Sequence">
      <summary vsli:raw="Represents the universal class tag for a Sequence value (always a constructed encoding).">시퀀스 값의 범용 클래스 태그를 나타냅니다(항상 생성된 인코딩).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.SetOf">
      <summary vsli:raw="Represents the universal class tag for a SetOf value (always a constructed encoding).">SetOf 값의 범용 클래스 태그를 나타냅니다(항상 생성된 인코딩).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.UtcTime">
      <summary vsli:raw="Represents the universal class tag for a UtcTime value.">UtcTime 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.TagClass,System.Int32,System.Boolean)">
      <summary vsli:raw="Create an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; for a specified value within a specified tag class.">지정된 태그 클래스 내의 지정된 값에 대한 <see cref="T:System.Formats.Asn1.Asn1Tag" />를 만듭니다.</summary>
      <param name="tagClass" vsli:raw="The tag class for this tag.">태그의 태그 클래스입니다.</param>
      <param name="tagValue" vsli:raw="The numeric value for this tag.">태그의 숫자 값입니다.</param>
      <param name="isConstructed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for a constructed tag, &lt;see langword=&quot;false&quot; /&gt; for a primitive tag.">생성된 태그의 경우 <see langword="true" />이고, 기본 태그의 경우 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;tagClass&quot; /&gt; is not a known value.&#xA;             -or- &#xA;               &lt;paramref name=&quot;tagValue&quot; /&gt; is negative.">
        <paramref name="tagClass" />는 알려진 값이 아닙니다.
-또는- <paramref name="tagValue" />가 음수입니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.UniversalTagNumber,System.Boolean)">
      <summary vsli:raw="Create an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; for a tag from the UNIVERSAL class.">범용 클래스의 태그에 대한 <see cref="T:System.Formats.Asn1.Asn1Tag" />를 만듭니다.</summary>
      <param name="universalTagNumber" vsli:raw="One of the enumeration values that specifies the semantic type for this tag.">이 태그의 의미 체계 유형을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="isConstructed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for a constructed tag, &lt;see langword=&quot;false&quot; /&gt; for a primitive tag.">생성된 태그의 경우 <see langword="true" />이고, 기본 태그의 경우 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;universalTagNumber&quot; /&gt; is not a known value.">
        <paramref name="universalTagNumber" />는 알려진 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsConstructed">
      <summary vsli:raw="Produces a tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 및 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 값이 같지만 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />가 <see langword="true" />인 태그를 생성합니다.</summary>
      <returns vsli:raw="A tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 및 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 값이 같지만 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />가 <see langword="true" />인 태그입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsPrimitive">
      <summary vsli:raw="Produces a tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 및 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 값이 같지만 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />가 <see langword="false" />인 태그를 생성합니다.</summary>
      <returns vsli:raw="A tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 및 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 값이 같지만 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />가 <see langword="false" />인 태그입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize">
      <summary vsli:raw="Reports the number of bytes required for the BER-encoding of this tag.">태그의 BER 인코딩에 필요한 바이트 수를 보고합니다.</summary>
      <returns vsli:raw="The number of bytes required for the BER-encoding of this tag.">태그의 BER 인코딩에 필요한 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Decode(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary vsli:raw="Reads a BER-encoded tag which starts at &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />에서 시작하는 BER로 인코딩된 태그를 읽습니다.</summary>
      <param name="source" vsli:raw="The read only byte sequence whose beginning is a BER-encoded tag.">시작 부분이 BER로 인코딩된 태그인 읽기 전용 바이트 시퀀스입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains the number of bytes that contributed to the encoded tag. This parameter is treated as uninitialized.">이 메서드가 반환되는 경우 인코딩된 태그에 적용된 바이트 수를 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The provided data does not decode to a tag.">제공된 데이터는 태그로 디코딩되지 않습니다.</exception>
      <returns vsli:raw="The decoded tag.">디코딩된 태그입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Encode(System.Span{System.Byte})">
      <summary vsli:raw="Writes the BER-encoded form of this tag to &lt;paramref name=&quot;destination&quot; /&gt;.">태그의 BER로 인코딩된 형식을 <paramref name="destination" />에 씁니다.</summary>
      <param name="destination" vsli:raw="The start of where the encoded tag should be written.">인코딩된 태그를 기록할 위치의 시작입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt;.&lt;see cref=&quot;P:System.Span`1.Length&quot; /&gt; &amp;lt; &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt;.">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />.</exception>
      <returns vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">
        <paramref name="destination" />에 쓰인 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;other&quot; /&gt; has the same encoding as this tag.">
        <paramref name="other" />가 이 태그와 인코딩이 같은지 테스트합니다.</summary>
      <param name="other" vsli:raw="Tag to test for equality.">같은지 테스트할 태그입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; has the same values for &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt;, &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt;, and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <paramref name="other" />의 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />, <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 및 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Object)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;obj&quot; /&gt; is an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; with the same encoding as this tag.">
        <paramref name="obj" />가 태그와 인코딩이 같은 <see cref="T:System.Formats.Asn1.Asn1Tag" />인지 테스트합니다.</summary>
      <param name="obj" vsli:raw="Object to test for value equality.">값이 같은지 테스트할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is not an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt;, &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)&quot; /&gt; otherwise.">
        <paramref name="obj" />가 <see cref="T:System.Formats.Asn1.Asn1Tag" />가 아니면 <see langword="false" />이고, 그렇지 않으면 <see cref="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.HasSameClassAndValue(System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;other&quot; /&gt; has the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values as this tag, and does not compare &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt;.">
        <paramref name="other" />이 태그와 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 및 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 값이 같은지 테스트하고 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />를 비교하지 않습니다.</summary>
      <param name="other" vsli:raw="Tag to test for concept equality.">개념이 같은지 테스트할 태그입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; has the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; as this tag, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <paramref name="other" />이 태그와 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 및 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Equality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if two &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; values have the same BER encoding.">두 <see cref="T:System.Formats.Asn1.Asn1Tag" /> 값의 BER 인코딩이 같은지 테스트합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; have the same BER encoding, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <paramref name="left" /> 및 <paramref name="right" />의 BER 인코딩이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Inequality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if two &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; values have a different BER encoding.">두 <see cref="T:System.Formats.Asn1.Asn1Tag" /> 값의 BER 인코딩이 다른지 테스트합니다.</summary>
      <param name="left" vsli:raw="The first value to compare.">비교할 첫 번째 값입니다.</param>
      <param name="right" vsli:raw="The second value to compare.">비교할 두 번째 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; have a different BER encoding, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <paramref name="left" /> 및 <paramref name="right" />의 BER 인코딩이 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.ToString">
      <summary vsli:raw="Provides a text representation of this tag suitable for debugging.">디버깅에 적합한 태그의 텍스트 표현을 제공합니다.</summary>
      <returns vsli:raw="A text representation of this tag suitable for debugging.">디버깅에 적합한 태그의 텍스트 표현입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryDecode(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.Asn1Tag@,System.Int32@)">
      <summary vsli:raw="Attempts to read a BER-encoded tag which starts at &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />에서 시작하는 BER로 인코딩된 태그를 읽으려고 합니다.</summary>
      <param name="source" vsli:raw="The read only byte sequence whose beginning is a BER-encoded tag.">시작 부분이 BER로 인코딩된 태그인 읽기 전용 바이트 시퀀스입니다.</param>
      <param name="tag" vsli:raw="The decoded tag.">디코딩된 태그입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains the number of bytes that contributed to the encoded tag, 0 on failure. This parameter is treated as uninitialized.">이 메서드가 반환되는 경우 인코딩된 태그에 적용된 바이트 수를 포함하며, 실패하면 0을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a tag was correctly decoded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">태그가 올바로 디코딩된 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to write the BER-encoded form of this tag to &lt;paramref name=&quot;destination&quot; /&gt;.">태그의 BER로 인코딩된 형식을 <paramref name="destination" />에 쓰려고 합니다.</summary>
      <param name="destination" vsli:raw="The start of where the encoded tag should be written.">인코딩된 태그를 기록할 위치의 시작입니다.</param>
      <param name="bytesWritten" vsli:raw="Receives the value from &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt; on success, 0 on failure.">성공하면 <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />에서 값을 받고, 실패하면 0을 받습니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt;.&lt;see cref=&quot;P:System.Span`1.Length&quot; /&gt; &amp;lt; &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt;(), &lt;see langword=&quot;true&quot; /&gt; otherwise.">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" />이면 <see langword="false" />입니다. &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />()이고, 그렇지 않으면 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.IsConstructed">
      <summary vsli:raw="Indicates if the tag represents a constructed encoding (&lt;see langword=&quot;true&quot; /&gt;), or a primitive encoding (&lt;see langword=&quot;false&quot; /&gt;).">태그가 생성된 인코딩을 나타내는지( <see langword="true" /> ) 또는 기본 인코딩을 나타내는지(<see langword="false" />)를 나타냅니다.</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagClass">
      <summary vsli:raw="The tag class to which this tag belongs.">태그가 속한 태그 클래스입니다.</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagValue">
      <summary vsli:raw="The numeric value for this tag.">태그의 숫자 값입니다.</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnContentException">
      <summary vsli:raw="The exception that is thrown when an encoded ASN.1 value cannot be successfully decoded.">인코딩된 ASN.1 값을 성공적으로 디코딩할 수 없는 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the default message.">기본 메시지를 사용하여 <see cref="T:System.Formats.Asn1.AsnContentException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class with serialized data.">serialize된 데이터를 사용하여 <see cref="T:System.Formats.Asn1.AsnContentException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">serialize된 개체 데이터를 보유하는 개체입니다.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the provided message.">제공된 메시지를 사용하여 <see cref="T:System.Formats.Asn1.AsnContentException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the provided message and exception that is the cause of this exception.">제공된 메시지와 이 예외를 발생시킨 예외를 사용하여 <see cref="T:System.Formats.Asn1.AsnContentException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">현재 예외의 원인인 예외입니다.</param>
    </member>
    <member name="T:System.Formats.Asn1.AsnDecoder">
      <summary vsli:raw="Provides stateless methods for decoding BER-encoded, CER-encoded, and DER-encoded ASN.1 data.">BER, CER 또는 DER로 인코딩된 ASN.1 데이터를 디코딩하기 위한 상태 비저장 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents in a new array.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 비트 문자열 값을 읽어 콘텐츠를 새 배열로 반환합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">성공하면 기록기에서 “사용 안 함”으로 보고한 마지막 바이트의 비트 수를 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 3)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="An array containing the contents of the Bit String value.">비트 문자열 값의 콘텐츠를 포함하는 배열입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBoolean(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Boolean value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 부울 값을 읽습니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 1)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The decoded value.">디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadCharacterString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, returning the decoded string.">다음 값을 지정된 태그 및 인코딩 형식의 문자열로 읽어 디코딩된 문자열을 반환합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values which represents the value type to process.">처리할 값 형식을 나타내는 열거형 값 중 하나입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">읽기 전에 확인할 태그이거나, 요청된 인코딩 형식에 적합한 유니버설 태그의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.
-또는- <paramref name="encodingType" />이 알려진 문자열 형식이 아닙니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 문자열이 디코딩되지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 <paramref name="encodingType" />과 같지 않습니다.</exception>
      <returns vsli:raw="The decoded value.">디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@)">
      <summary vsli:raw="Locates the contents range for the encoded value at the beginning of the &lt;paramref name=&quot;source&quot; /&gt; buffer using the specified encoding rules.">지정된 인코딩 규칙을 사용하여 <paramref name="source" /> 버퍼의 시작 부분에서 인코딩된 값의 콘텐츠 범위를 찾습니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;              This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="source" />의 시작에 상대적인 콘텐츠 페이로드의 오프셋입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;              This parameter is treated as uninitialized.">이 메서드가 반환될 때 콘텐츠 페이로드의 바이트 수(0일 수 있음)입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;              This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not represent a value encoded under the specified encoding rules.">
        <paramref name="source" />는 지정된 인코딩 규칙에 따라 인코딩된 값을 나타내지 않습니다.</exception>
      <returns vsli:raw="The tag identifying the content.">콘텐츠를 식별하는 태그입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents as a slice of the buffer.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 열거형 값을 읽어 콘텐츠를 버퍼 조각으로 반환합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 10)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The slice of the buffer containing the bytes of the Enumerated value, in signed big-endian form.">부호 있는 big-endian 형식의 열거형 값 바이트를 포함하는 버퍼의 조각입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;enumType&quot; /&gt;.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 열거형을 읽어 <paramref name="enumType" />으로 지정된 비 [<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="enumType" vsli:raw="Type object representing the destination type.">대상 형식을 나타내는 형식 개체입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 10)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <paramref name="enumType" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="enumType" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <paramref name="enumType" />이 선언되었습니다.
-또는- <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />는 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="enumType" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;paramref name=&quot;enumType&quot; /&gt;.">
        <paramref name="enumType" />으로 변환된 열거형 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 열거형을 읽어 <typeparamref name="TEnum" />으로 지정된 비 [<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 10)의 경우 <see langword="null" />입니다.</param>
      <typeparam name="TEnum" vsli:raw="Destination enum type.">대상 열거형 형식</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <typeparamref name="TEnum" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TEnum&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TEnum" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <typeparamref name="TEnum" />이 선언되었습니다.
-또는- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />는 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">
        <typeparamref name="TEnum" />으로 변환된 열거형 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadGeneralizedTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a GeneralizedTime value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 GeneralizedTime 값을 읽습니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 24)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The decoded value.">디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadInteger(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 정수 값을 읽습니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The decoded numeric value.">디코딩된 숫자 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadIntegerBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents as a slice of the buffer.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 정수 값을 읽어 콘텐츠를 버퍼 조각으로 반환합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The slice of the buffer containing the bytes of the Integer value, in signed big-endian form.">부호 있는 big-endian 형식의 정수 값 바이트를 포함하는 버퍼의 조각입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitList(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 NamedBitList 값을 읽습니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 3)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The bits from the encoded value.">인코딩된 값의 비트입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 NamedBitList를 읽어 <paramref name="flagsEnumType" />으로 지정된 [<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="flagsEnumType" vsli:raw="Type object representing the destination type.">대상 형식을 나타내는 형식 개체입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 3)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;flagsEnumType&quot; /&gt; value.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <paramref name="flagsEnumType" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;flagsEnumType&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="flagsEnumType" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <paramref name="flagsEnumType" />이 선언되지 않았습니다. -또는- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />가 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="flagsEnumType" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">
        <paramref name="flagsEnumType" />으로 변환된 NamedBitList 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 NamedBitList를 읽어 <typeparamref name="TFlagsEnum" />으로 지정된 [<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 3)의 경우 <see langword="null" />입니다.</param>
      <typeparam name="TFlagsEnum" vsli:raw="Destination enum type.">대상 열거형 형식</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TFlagsEnum&quot; /&gt; value.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <typeparamref name="TFlagsEnum" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TFlagsEnum" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <typeparamref name="TFlagsEnum" />이 선언되지 않았습니다. -또는- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />가 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">
        <typeparamref name="TFlagsEnum" />으로 변환된 NamedBitList 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNull(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a &lt;see langword=&quot;null&quot; /&gt; value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 <see langword="null" /> 값을 읽습니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 5)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadObjectIdentifier(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Object Identifier value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 개체 식별자 값을 읽습니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 6)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The decoded object identifier, in dotted-decimal notation.">점으로 구분된 10진수 표기법의 디코딩된 개체 식별자입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents in a new array.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 옥텟 문자열 값을 읽어 콘텐츠를 새 배열로 반환합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 4)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="An array containing the contents of the Octet String value.">옥텟 문자열 값의 콘텐츠를 포함하는 배열입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSequence(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Sequence or Sequence-Of value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 시퀀스 또는 Sequence-Of 값을 읽습니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="source" />의 시작에 상대적인 콘텐츠 페이로드의 오프셋입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 콘텐츠 페이로드의 바이트 수(0일 수 있음)입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 16)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSetOf(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Set-Of value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 Set-Of 값을 읽습니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="source" />의 시작에 상대적인 콘텐츠 페이로드의 오프셋입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 콘텐츠 페이로드의 바이트 수(0일 수 있음)입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="skipSortOrderValidation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always accept the data in the order it is presented, &lt;see langword=&quot;false&quot; /&gt; to verify that the data is sorted correctly when the encoding rules say sorting was required (CER and DER).">
        <see langword="true" />이면 항상 데이터를 표시되는 순서로 적용하고 <see langword="false" />이면 인코딩 규칙에 정렬이 필요했다고 명시된 경우 데이터가 올바로 정렬되어 있는지 확인합니다(CER 및 DER).</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 17)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadUtcTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a UtcTime value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 UtcTime 값을 읽습니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="twoDigitYearMax" vsli:raw="The largest year to represent with this value.&#xA;               The default value, 2049, represents the 1950-2049 range for X.509 certificates.">이 값으로 나타낼 가장 큰 연도입니다.
기본값 2049는 X.509 인증서의 1950~2049 범위를 나타냅니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 24)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;twoDigitYearMax&quot; /&gt; is not in the range [99, 9999].">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.
-또는- <paramref name="twoDigitYearMax" />가 [99, 9999] 범위에 없습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The decoded value.">디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadBitString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to copy a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules into &lt;paramref name=&quot;destination&quot; /&gt;.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 비트 문자열 값을 <paramref name="destination" />으로 복사하려고 합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">쓸 수 있는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">성공하면 기록기에서 “사용 안 함”으로 보고한 마지막 바이트의 비트 수를 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="destination" />에 기록되는 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 3)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <paramref name="destination" />이 <paramref name="source" />와 겹칩니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the Bit String; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="destination" />이 비트 문자열의 값을 받을 만큼 충분히 크면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterString(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the decoded string into a provided destination buffer.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 문자열 값을 읽어 디코딩된 문자열을 제공된 대상 버퍼에 복사합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">쓸 수 있는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values which represents the value type to process.">처리할 값 형식을 나타내는 열거형 값 중 하나입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="charsWritten" vsli:raw="When this method returns, the number of chars written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="destination" />에 기록되는 문자 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">읽기 전에 확인할 태그이거나, 요청된 인코딩 형식에 적합한 유니버설 태그의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.
-또는- <paramref name="encodingType" />이 알려진 문자열 형식이 아닙니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 문자열이 디코딩되지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 <paramref name="encodingType" />과 같지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> 길이가 충분하여 값을 받은 경우 <paramref name="destination" />이며 판독기를 앞으로 이동하고 그러지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.Int32@,System.Int32@)">
      <summary vsli:raw="Attempts to read a character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the unprocessed bytes into the provided destination buffer.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 문자열 값을 읽어 처리되지 않은 바이트를 제공된 대상 버퍼에 복사합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">쓸 수 있는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">읽기 전에 확인할 태그입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">성공하면 <paramref name="destination" />에 쓴 바이트 수를 받습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 문자열 태그 형식이 아닙니다.
-또는- <paramref name="destination" />이 <paramref name="source" />와 겹칩니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the unprocessed character string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="destination" />이 처리되지 않은 문자열의 값을 받을 만큼 충분히 크면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag@,System.Int32@,System.Int32@,System.Int32@)">
      <summary vsli:raw="Attempts locate the contents range for the encoded value at the beginning of the &lt;paramref name=&quot;source&quot; /&gt; buffer using the specified encoding rules.">지정된 인코딩 규칙을 사용하여 <paramref name="source" /> 버퍼의 시작 부분에서 인코딩된 값의 콘텐츠 범위를 찾으려고 합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="tag" vsli:raw="When this method returns, the tag identifying the content.&#xA;              This parameter is treated as uninitialized.">이 메서드가 반환될 때 콘텐츠를 식별하는 태그입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;              This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="source" />의 시작에 상대적인 콘텐츠 페이로드의 오프셋입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;              This parameter is treated as uninitialized.">이 메서드가 반환될 때 콘텐츠 페이로드의 바이트 수(0일 수 있음)입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;              This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;source&quot; /&gt; represents a valid structural encoding for the specified encoding rules; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="source" />이 지정된 인코딩 규칙의 유효한 구조적 인코딩을 나타내면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as a signed 32-bit value.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 정수 값을 부호 있는 32비트 값으로 읽으려고 합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">성공하면 해석된 숫자 값을 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">정수가 <see cref="F:System.Int32.MinValue" />에서 <see cref="F:System.Int32.MaxValue" />(포함) 사이의 값을 나타내면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as a signed 64-bit value.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 정수 값을 부호 있는 64비트 값으로 읽으려고 합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">성공하면 해석된 숫자 값을 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">정수가 <see cref="F:System.Int64.MinValue" />에서 <see cref="F:System.Int64.MaxValue" />(포함) 사이의 값을 나타내면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadOctetString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the value into the provided destination buffer.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 옥텟 문자열 값을 읽어 값을 제공된 대상 버퍼에 복사합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">쓸 수 있는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="destination" />에 기록되는 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 4)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <paramref name="destination" />이 <paramref name="source" />와 겹칩니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the Octet String; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="destination" />이 옥텟 문자열의 값을 받을 만큼 충분히 크면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">해당 값이 단일(기본) 인코딩에 포함된 경우 지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 비트 문자열 값을 가져오려고 합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">성공하면 기록기에서 “사용 안 함”으로 보고한 마지막 바이트의 비트 수를 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Bit String.&#xA;               This parameter is treated as uninitialized.">성공하면 비트 문자열의 값에 해당하는 입력 버퍼의 조각을 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 3)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Bit String value has a primitive encoding and all of the bits reported as unused are set to 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">비트 문자열 값에 기본 인코딩이 있고 사용되지 않음으로 보고된 모든 비트가 0으로 설정된 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.ReadOnlySpan{System.Byte}@,System.Int32@)">
      <summary vsli:raw="Attempts to get an unprocessed character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">해당 값이 단일(기본) 인코딩에 포함된 경우 지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 처리되지 않은 문자열 값을 가져오려고 합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">읽기 전에 확인할 태그입니다.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Bit String.&#xA;               This parameter is treated as uninitialized.">성공하면 비트 문자열의 값에 해당하는 입력 버퍼의 조각을 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 문자열 태그 형식이 아닙니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the character string value has a primitive encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">문자열 값이 기본 인코딩을 사용하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">해당 값이 단일(기본) 인코딩에 포함된 경우 지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 옥텟 문자열 값을 가져오려고 합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Octet String.&#xA;               This parameter is treated as uninitialized.">성공하면 옥텟 문자열의 값에 해당하는 입력 버퍼의 조각을 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 4)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Octet String value has a primitive encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">옥텟 문자열 값이 기본 인코딩을 사용하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as an unsigned 32-bit value.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 정수 값을 부호 없는 32비트 값으로 읽으려고 합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">성공하면 해석된 숫자 값을 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">정수가 <see cref="F:System.UInt32.MinValue" />에서 <see cref="F:System.UInt32.MaxValue" />(포함) 사이의 값을 나타내면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as an unsigned 64-bit value.">지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 정수 값을 부호 없는 64비트 값으로 읽으려고 합니다.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">성공하면 해석된 숫자 값을 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">정수가 <see cref="F:System.UInt64.MinValue" />에서 <see cref="F:System.UInt64.MaxValue" />(포함) 사이의 값을 나타내면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnEncodingRules">
      <summary vsli:raw="The encoding ruleset for an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt; or &lt;see cref=&quot;T:System.Formats.Asn1.AsnWriter&quot; /&gt;.">
        <see cref="T:System.Formats.Asn1.AsnReader" /> 또는 <see cref="T:System.Formats.Asn1.AsnWriter" />의 인코딩 규칙 집합입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.BER">
      <summary vsli:raw="ITU-T X.690 Basic Encoding Rules.">ITU-T X.690 기본 인코딩 규칙</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.CER">
      <summary vsli:raw="ITU-T X.690 Canonical Encoding Rules.">ITU-T X.690 정식 인코딩 규칙</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.DER">
      <summary vsli:raw="ITU-T X.690 Distinguished Encoding Rules.">ITU-T X.690 고유 인코딩 규칙</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnReader">
      <summary vsli:raw="A stateful, forward-only reader for BER-, CER-, or DER-encoded ASN.1 data.">BER, CER 또는 DER로 인코딩된 ASN.1 데이터를 위한 상태 저장 정방향 전용 판독기입니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.AsnReaderOptions)">
      <summary vsli:raw="Construct an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt; over &lt;paramref name=&quot;data&quot; /&gt; with a given ruleset.">지정된 규칙 집합을 사용하는 <paramref name="data" />를 통해 <see cref="T:System.Formats.Asn1.AsnReader" />를 생성합니다.</summary>
      <param name="data" vsli:raw="The data to read.">읽을 데이터입니다.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints for the reader.">판독기에 대한 인코딩 제약 조건입니다.</param>
      <param name="options" vsli:raw="Additional options for the reader.">판독기에 대한 추가 옵션입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekContentBytes">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the content octets (bytes) of the next encoded value without advancing the reader.">판독기를 앞으로 이동하지 않고 인코딩된 다음 값의 콘텐츠 옥텟(바이트)에 대한 <see cref="T:System.ReadOnlyMemory`1" /> 뷰를 가져옵니다.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The reader is positioned at a point where the tag or length is invalid under the current encoding rules.">현재 인코딩 규칙에서는 태그 또는 길이가 유효하지 않은 지점에 판독기가 배치되었습니다.</exception>
      <returns vsli:raw="The bytes of the contents octets of the next encoded value.">다음 인코딩된 값의 콘텐츠 옥텟 바이트입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekEncodedValue">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value without advancing the reader. For indefinite length encodings this includes the End of Contents marker.">판독기를 앞으로 이동하지 않고 다음 인코딩된 값의 <see cref="T:System.ReadOnlyMemory`1" /> 뷰를 가져옵니다. 무한 길이 인코딩의 경우 콘텐츠 끝 마커가 포함됩니다.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The reader is positioned at a point where the tag or length is invalid under the current encoding rules.">현재 인코딩 규칙에서는 태그 또는 길이가 유효하지 않은 지점에 판독기가 배치되었습니다.</exception>
      <returns vsli:raw="The bytes of the next encoded value.">다음 인코딩된 값의 바이트입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekTag">
      <summary vsli:raw="Read the encoded tag at the next data position, without advancing the reader.">판독기를 앞으로 이동하지 않고 다음 데이터 위치에서 인코딩된 태그를 읽습니다.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="A tag could not be decoded at the reader's current position.">판독기의 현재 위치에서 태그를 디코딩할 수 없습니다.</exception>
      <returns vsli:raw="The decoded tag value.">디코딩된 태그 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBitString(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, returning the value in a byte array.">지정된 태그가 포함된 BIT STRING으로 다음 값을 읽고 바이트 배열로 값을 반환합니다.</summary>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">성공하면 기록기에서 “사용 안 함”으로 보고한 마지막 바이트의 비트 수를 받습니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 1)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="A copy of the value in a newly allocated, precisely sized, array.">새로 할당되고 정확하게 크기 지정된 배열로 된 값의 복사본입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBoolean(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Boolean with a specified tag.">지정된 태그가 포함된 부울로 다음 값을 읽습니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 1)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The decoded value.">디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadCharacterString(System.Formats.Asn1.UniversalTagNumber,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, returning the decoded value as a string.">지정된 태그 및 인코딩 형식이 포함된 문자열로 다음 값을 읽고 문자열로 디코딩된 값을 반환합니다.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the value type to process.">처리할 값 형식을 나타내는 열거형 값 중 하나입니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">읽기 전에 확인할 태그이거나, 요청된 인코딩 형식에 적합한 유니버설 태그의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="encodingType" />은 알려진 문자열 형식이 아닙니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 문자열이 디코딩되지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 <paramref name="encodingType" />과 같지 않습니다.</exception>
      <returns vsli:raw="The decoded value.">디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEncodedValue">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value, and advance the reader past it. For an indefinite length encoding this includes the End of Contents marker.">다음 인코딩된 값의 <see cref="T:System.ReadOnlyMemory`1" /> 뷰를 가져오고 판독기를 해당 값 앞으로 이동합니다. 무한 길이 인코딩의 경우 콘텐츠 끝 마커가 포함됩니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value.">다음 인코딩된 값의 <see cref="T:System.ReadOnlyMemory`1" /> 뷰입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Enumerated with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">지정된 태그가 포함된 열거형으로 다음 값을 읽고 원래 데이터에 대한 <see cref="T:System.ReadOnlyMemory`1" />로 콘텐츠를 반환합니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 10)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The bytes of the Enumerated value, in signed big-endian form.">부호 있는 big endian 형식의 열거형 값 바이트입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Enumerated with a specified tag, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;enumType&quot; /&gt;.">지정된 태그가 포함된 열거형으로 다음 값을 읽고 <paramref name="enumType" />을 통해 지정된 비[<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="enumType" vsli:raw="Type object representing the destination type.">대상 형식을 나타내는 형식 개체입니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 10)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <paramref name="enumType" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="enumType" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <paramref name="enumType" />이 선언되었습니다.
-또는- <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />는 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="enumType" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;paramref name=&quot;enumType&quot; /&gt;.">
        <paramref name="enumType" />으로 변환된 열거형 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Enumerated with a specified tag, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">지정된 태그가 포함된 열거형으로 다음 값을 읽고 <typeparamref name="TEnum" />을 통해 지정된 비[<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 10)의 경우 <see langword="null" />입니다.</param>
      <typeparam name="TEnum" vsli:raw="Destination enum type.">대상 열거형 형식</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TEnum&quot; /&gt; value.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <typeparamref name="TEnum" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TEnum&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TEnum" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <typeparamref name="TEnum" />이 선언되었습니다.
-또는- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />는 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">
        <typeparamref name="TEnum" />으로 변환된 열거형 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadGeneralizedTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a GeneralizedTime with a specified tag.">지정된 태그가 포함된 GeneralizedTime으로 다음 값을 읽습니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 24)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The decoded value.">디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadInteger(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Integer with a specified tag.">지정된 태그가 포함된 정수로 다음 값을 읽습니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The decoded value.">디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadIntegerBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Integer with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">지정된 태그가 포함된 정수로 다음 값을 읽고 원래 데이터에 대한 <see cref="T:System.ReadOnlyMemory`1" />로 콘텐츠를 반환합니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The bytes of the Integer value, in signed big-endian form.">부호 있는 big endian 형식의 정수 값 바이트입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitList(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag.">지정된 태그가 포함된 NamedBitList로 다음 값을 읽습니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">읽기 전에 확인할 태그입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The bits from the encoded value.">인코딩된 값의 비트입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">지정된 태그가 포함된 NamedBitList로 다음 값을 읽고 <paramref name="flagsEnumType" />을 통해 지정된 [<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="flagsEnumType" vsli:raw="Type object representing the destination type.">대상 형식을 나타내는 형식 개체입니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">읽기 전에 확인할 태그입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;flagsEnumType&quot; /&gt; value.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <paramref name="flagsEnumType" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;flagsEnumType&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="flagsEnumType" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <paramref name="flagsEnumType" />이 선언되지 않았습니다. -또는- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />가 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="flagsEnumType" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">
        <paramref name="flagsEnumType" />으로 변환된 NamedBitList 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">지정된 태그가 포함된 NamedBitList로 다음 값을 읽고 <typeparamref name="TFlagsEnum" />을 통해 지정된 [<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">읽기 전에 확인할 태그입니다.</param>
      <typeparam name="TFlagsEnum" vsli:raw="Destination enum type.">대상 열거형 형식</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TFlagsEnum&quot; /&gt; value.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <typeparamref name="TFlagsEnum" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TFlagsEnum" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <typeparamref name="TFlagsEnum" />이 선언되지 않았습니다. -또는- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />가 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">
        <typeparamref name="TFlagsEnum" />으로 변환된 NamedBitList 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NULL with a specified tag.">지정된 태그가 포함된 NULL로 다음 값을 읽습니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 5)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadObjectIdentifier(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OBJECT IDENTIFIER with a specified tag, returning the value in a dotted decimal format string.">지정된 태그가 포함된 OBJECT IDENTIFIER로 다음 값을 읽고 점으로 구분된 10진 형식 문자열로 값을 반환합니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 6)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The object identifier value in a dotted decimal format string.">점으로 구분된 10진수 형식 문자열의 개체 식별자 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OCTET STRING with tag UNIVERSAL 4, returning the value in a byte array.">범용 4 태그를 사용하여 다음 값을 OCTET STRING으로 읽고 바이트 배열로 값을 반환합니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 4)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="A copy of the value in a newly allocated, precisely sized, array.">새로 할당되고 정확하게 크기 지정된 배열로 된 값의 복사본입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SEQUENCE or SEQUENCE-OF with the specified tag and returns the result as a new reader positioned at the first value in the sequence (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">지정된 태그가 포함된 SEQUENCE 또는 SEQUENCE-OF로 다음 값을 읽고 시퀀스의 첫 번째 값에 배치된(또는 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />인) 새 판독기로 결과를 반환합니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 16)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the sequence (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">시퀀스의 첫 번째 값에 배치된(또는 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />인) 새 판독기입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SET-OF with the specified tag and returns the result as a new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">지정된 태그가 포함된 SET-OF로 다음 값을 읽고 set-of의 첫 번째 값에 배치된(또는 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />인) 새 판독기로 결과를 반환합니다.</summary>
      <param name="skipSortOrderValidation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always accept the data in the order it is presented, &lt;see langword=&quot;false&quot; /&gt; to verify that the data is sorted correctly when the encoding rules say sorting was required (CER and DER).">
        <see langword="true" />이면 항상 데이터를 표시되는 순서로 적용하고 <see langword="false" />이면 인코딩 규칙에 정렬이 필요했다고 명시된 경우 데이터가 올바로 정렬되어 있는지 확인합니다(CER 및 DER).</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 17)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">set-of의 첫 번째 값에 배치된(또는 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />인) 새 판독기입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SET-OF with the specified tag and returns the result as a new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;), using the &lt;see cref=&quot;P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification&quot; /&gt; value from the constructor (default &lt;see langword=&quot;false&quot; /&gt;).">지정된 태그가 포함된 SET-OF로 다음 값을 읽고 생성자의 <see cref="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification" /> 값(기본값은 <see langword="false" />)을 사용하여 set-of의 첫 번째 값에 배치된(또는 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />인) 새 판독기로 결과를 반환합니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 17)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">set-of의 첫 번째 값에 배치된(또는 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />인) 새 판독기입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a UTCTime with a specified tag.">지정된 태그가 포함된 UTCTime으로 다음 값을 읽습니다.</summary>
      <param name="twoDigitYearMax" vsli:raw="The largest year to represent with this value.">이 값으로 나타낼 가장 큰 연도입니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 23)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The decoded value.">디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a UTCTime with a specified tag using the &lt;see cref=&quot;P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax&quot; /&gt; value from options passed to the constructor (with a default of 2049).">생성자에 전달된 옵션의 <see cref="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax" /> 값(기본값은 2049)을 사용하여 지정된 태그가 포함된 UTCTime으로 다음 값을 읽습니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 23)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="The decoded value.">디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ThrowIfNotEmpty">
      <summary vsli:raw="Throws a standardized &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; if the reader has remaining data, performs no function if &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">판독기에 남은 데이터가 있는 경우 표준화된 <see cref="T:System.Formats.Asn1.AsnContentException" />을 throw하고 <see cref="P:System.Formats.Asn1.AsnReader.HasData" />가 <see langword="false" />를 반환하는 경우 함수를 실행하지 않습니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadBitString(System.Span{System.Byte},System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, copying the value into a provided destination buffer.">지정된 태그가 포함된 BIT STRING으로 다음 값을 읽고 제공된 대상 버퍼에 해당 값을 복사합니다.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">쓸 수 있는 버퍼입니다.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">성공하면 기록기에서 “사용 안 함”으로 보고한 마지막 바이트의 비트 수를 받습니다.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">성공하면 <paramref name="destination" />에 쓴 바이트 수를 받습니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 1)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> 길이가 충분하여 값을 받은 경우 <paramref name="destination" />이며 판독기를 앞으로 이동하고 그러지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterString(System.Span{System.Char},System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, copying the decoded value into a provided destination buffer.">지정된 태그 및 인코딩 형식이 포함된 문자열로 다음 값을 읽고 제공된 대상 버퍼에 디코딩된 값을 복사합니다.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">쓸 수 있는 버퍼입니다.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the value type to process.">처리할 값 형식을 나타내는 열거형 값 중 하나입니다.</param>
      <param name="charsWritten" vsli:raw="On success, receives the number of chars written to &lt;paramref name=&quot;destination&quot; /&gt;.">성공하면 <paramref name="destination" />에 쓴 문자 수를 받습니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">읽기 전에 확인할 태그이거나, 요청된 인코딩 형식에 적합한 유니버설 태그의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="encodingType" />은 알려진 문자열 형식이 아닙니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 문자열이 디코딩되지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 <paramref name="encodingType" />과 같지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> 길이가 충분하여 값을 받은 경우 <paramref name="destination" />이며 판독기를 앞으로 이동하고 그러지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterStringBytes(System.Span{System.Byte},System.Formats.Asn1.Asn1Tag,System.Int32@)">
      <summary vsli:raw="Reads the next value as character string with the specified tag, copying the unprocessed bytes into a provided destination buffer.">지정된 태그가 포함된 문자열로 다음 값을 읽고 제공된 대상 버퍼에 처리되지 않은 바이트를 복사합니다.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">쓸 수 있는 버퍼입니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">읽기 전에 확인할 태그입니다.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">성공하면 <paramref name="destination" />에 쓴 바이트 수를 받습니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 문자열 태그 형식이 아닙니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> 길이가 충분하여 값을 받은 경우 <paramref name="destination" />이며 판독기를 앞으로 이동하고 그러지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt32(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as a signed 32-bit value.">부호 있는 32비트 값인 지정된 태그가 포함된 정수로 다음 값을 읽으려고 합니다.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">성공하면 디코딩된 값을 받습니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">값이 <see cref="F:System.Int32.MinValue" /> 및 <see cref="F:System.Int32.MaxValue" />(포함) 사이에 있지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않고 그렇지 않은 경우 <see langword="true" />를 반환하며 판독기를 앞으로 이동합니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt64(System.Int64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as a signed 64-bit value.">부호 있는 64비트 값인 지정된 태그가 포함된 정수로 다음 값을 읽으려고 합니다.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">성공하면 디코딩된 값을 받습니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">값이 <see cref="F:System.Int64.MinValue" /> 및 <see cref="F:System.Int64.MaxValue" />(포함) 사이에 있지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않고 그렇지 않은 경우 <see langword="true" />를 반환하며 판독기를 앞으로 이동합니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadOctetString(System.Span{System.Byte},System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OCTET STRING with a specified tag, copying the value into a provided destination buffer.">지정된 태그가 포함된 OCTET STRING으로 다음 값을 읽고 제공된 대상 버퍼에 해당 값을 복사합니다.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">쓸 수 있는 버퍼입니다.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">성공하면 <paramref name="destination" />에 쓴 바이트 수를 받습니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 4)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> 길이가 충분하여 값을 받은 경우 <paramref name="destination" />이며 판독기를 앞으로 이동하고 그러지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveBitString(System.Int32@,System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">지정된 태그가 포함된 BIT STRING으로 다음 값을 읽고 원래 데이터에 대한 <see cref="T:System.ReadOnlyMemory`1" />로 콘텐츠를 반환합니다.</summary>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">성공하면 기록기에서 “사용 안 함”으로 보고한 마지막 바이트의 비트 수를 받습니다.</param>
      <param name="value" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the BIT STRING.">성공하면 BIT STRING 값에 해당하는 원래 데이터에 대한 <see cref="T:System.ReadOnlyMemory`1" />을 받습니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 1)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the BIT STRING value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">BIT STRING 값에 기본 인코딩이 있는 경우 <see langword="true" />이며 판독기를 앞으로 이동하고 값에 생성된 인코딩이 있는 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveCharacterStringBytes(System.Formats.Asn1.Asn1Tag,System.ReadOnlyMemory{System.Byte}@)">
      <summary vsli:raw="Reads the next value as a character with a specified tag, returning the contents as an unprocessed &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">지정된 태그가 포함된 문자로 다음 값을 읽고 원래 데이터에 대한 처리되지 않은 <see cref="T:System.ReadOnlyMemory`1" />로 콘텐츠를 반환합니다.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">읽기 전에 확인할 태그입니다.</param>
      <param name="contents" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the character string.">성공하면 문자열 값에 해당하는 원래 데이터에 대한 <see cref="T:System.ReadOnlyMemory`1" />을 받습니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 문자열 태그 형식이 아닙니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the character string value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">문자열 값에 기본 인코딩이 있는 경우 <see langword="true" />이며 판독기를 앞으로 이동하고 값에 생성된 인코딩이 있는 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveOctetString(System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an OCTET STRING with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">지정된 태그가 포함된 OCTET STRING으로 다음 값을 읽고 원래 데이터에 대한 <see cref="T:System.ReadOnlyMemory`1" />로 콘텐츠를 반환합니다.</summary>
      <param name="contents" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the OCTET STRING.">성공하면 OCTET STRING 값에 해당하는 원래 데이터에 대한 <see cref="T:System.ReadOnlyMemory`1" />을 받습니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">읽기 전에 확인할 태그입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the OCTET STRING value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">OCTET STRING 값에 기본 인코딩이 있는 경우 <see langword="true" />이며 판독기를 앞으로 이동하고 값에 생성된 인코딩이 있는 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt32(System.UInt32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as an unsigned 32-bit value.">부호 없는 32비트 값인 지정된 태그가 포함된 정수로 다음 값을 읽으려고 합니다.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">성공하면 디코딩된 값을 받습니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">값이 <see cref="F:System.UInt32.MinValue" /> 및 <see cref="F:System.UInt32.MaxValue" />(포함) 사이에 있지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않고 그렇지 않은 경우 <see langword="true" />를 반환하며 판독기를 앞으로 이동합니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt64(System.UInt64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as an unsigned 64-bit value.">부호 없는 64비트 값인 지정된 태그가 포함된 정수로 다음 값을 읽으려고 합니다.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">성공하면 디코딩된 값을 받습니다.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">값이 <see cref="F:System.UInt64.MinValue" /> 및 <see cref="F:System.UInt64.MaxValue" />(포함) 사이에 있지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않고 그렇지 않은 경우 <see langword="true" />를 반환하며 판독기를 앞으로 이동합니다.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.HasData">
      <summary vsli:raw="Gets an indication of whether the reader has remaining data available to process.">판독기에 처리할 수 있는 남은 데이터가 있는지 여부를 나타내는 표시를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is more data available for the reader to process; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 판독기에서 처리 하는 데 사용할 수 있는 데이터가 더 있는 경우 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.RuleSet">
      <summary vsli:raw="Gets the encoding rules in use by this reader.">이 판독기에서 사용 중인 인코딩 규칙을 가져옵니다.</summary>
      <returns vsli:raw="The encoding rules in use by this reader.">이 판독기에서 사용 하는 인코딩 규칙입니다.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnReaderOptions">
      <summary vsli:raw="Specifies options that modify the behavior of an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt;.">
        <see cref="T:System.Formats.Asn1.AsnReader" />의 동작을 수정하는 옵션을 지정합니다.</summary>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification">
      <summary vsli:raw="Gets or sets a value that indicates whether the reader should bypass sort ordering on a Set or Set-Of value.">판독기가 집합 또는 Set-Of 값에서 정렬 순서를 무시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader should not validate that a Set or Set-Of value is sorted correctly for the current encoding rules; otherwise &lt;see langword=&quot;false&quot; /&gt;.&#xA;              The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 판독기가 집합 또는 값 집합이 현재 인코딩 규칙에 맞게 정렬 되었는지 확인 하지 않아야 하면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" /> 입니다.
기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax">
      <summary vsli:raw="Gets or sets the largest year to represent with a UtcTime value.">UtcTime 값으로 나타낼 가장 큰 연도를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The largest year to represent with a UtcTime value. The default is 2049.">UtcTime 값을 나타내는 가장 큰 연도입니다. 기본값은 2049입니다.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter">
      <summary vsli:raw="A writer for BER-, CER-, and DER-encoded ASN.1 data.">BER, CER 및 DER로 인코딩된 ASN.1 데이터의 기록기입니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)">
      <summary vsli:raw="Create a new &lt;see cref=&quot;T:System.Formats.Asn1.AsnWriter&quot; /&gt; with a given set of encoding rules.">지정된 인코딩 규칙 집합을 사용하여 새 <see cref="T:System.Formats.Asn1.AsnWriter" />를 만듭니다.</summary>
      <param name="ruleSet" vsli:raw="The encoding constraints for the writer.">기록기의 인코딩 제약 조건입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)">
      <summary vsli:raw="Copy the value of this writer into another.">기록기의 값을 다른 기록기에 복사합니다.</summary>
      <param name="destination" vsli:raw="The writer to receive the value.">값을 받을 기록기입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.&#xA;             -or- &#xA;               This writer is empty.&#xA;             -or- &#xA;               This writer represents more than one top-level value.&#xA;             -or- &#xA;               This writer's value is encoded in a manner that is not compatible with the ruleset for the destination writer.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />가 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 통해 닫히지 않았습니다.
-또는- 이 기록기가 비어 있습니다.
-또는- 이 기록기가 둘 이상의 최상위 값을 나타냅니다.
-또는- 이 기록기의 값이 대상 기록기의 규칙 집합과 호환되지 않는 방식으로 인코딩되었습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode">
      <summary vsli:raw="Return a new array containing the encoded value.">인코딩된 값을 포함하는 새 배열을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />가 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 통해 닫히지 않았습니다.</exception>
      <returns vsli:raw="A precisely-sized array containing the encoded value.">인코딩된 값을 포함하는 정확히 크기 지정된 배열입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})">
      <summary vsli:raw="Writes the encoded representation of the data to &lt;paramref name=&quot;destination&quot; /&gt;.">데이터의 인코딩된 표현을 <paramref name="destination" />에 씁니다.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">쓸 수 있는 버퍼입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />가 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 통해 닫히지 않았습니다.</exception>
      <returns vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">
        <paramref name="destination" />에 쓰인 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)">
      <summary vsli:raw="Determines if &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.Encode&quot; /&gt; would produce an output identical to &lt;paramref name=&quot;other&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.Encode" />가 <paramref name="other" />과 동일한 출력을 생성할지 여부를 결정합니다.</summary>
      <param name="other" vsli:raw="The instance to compare encoded values against.">인코딩된 값을 비교할 인스턴스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />가 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 통해 닫히지 않았습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the pending encoded data is identical to &lt;paramref name=&quot;other&quot; /&gt;, &lt;see langword=&quot;false&quot; /&gt; otherwise.">보류 중인 인코딩된 데이터가 <paramref name="other" />과 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Determines if &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.Encode&quot; /&gt; would produce an output identical to &lt;paramref name=&quot;other&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.Encode" />가 <paramref name="other" />과 동일한 출력을 생성할지 여부를 결정합니다.</summary>
      <param name="other" vsli:raw="The encoded value to compare against.">비교할 인코딩된 값입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />가 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 통해 닫히지 않았습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the pending encoded data is identical to &lt;paramref name=&quot;other&quot; /&gt;, &lt;see langword=&quot;false&quot; /&gt; otherwise.">보류 중인 인코딩된 데이터가 <paramref name="other" />과 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.GetEncodedLength">
      <summary vsli:raw="Gets the number of bytes that would be written by &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />에 의해 기록될 바이트 수를 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;, &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;, or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; was called without the corresponding Pop method.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />이 해당 Pop 메서드 없이 호출되었습니다.</exception>
      <returns vsli:raw="The number of bytes that would be written by &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />에 의해 기록될 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Octet String with the tag UNIVERSAL 4 is closed, returning the writer to the parent context.">범용 4 태그가 있는 열린 옥텟 문자열이 닫혀 기록기를 부모 컨텍스트로 반환함을 나타냅니다.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">쓸 태그이거나, 기본 태그(유니버설 4)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within an Octet String with the specified tag.">현재 기록기가 지정된 태그가 있는 옥텟 문자열 내에 있지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Sequence with the specified tag is closed, returning the writer to the parent context.">지정된 태그가 있는 열린 시퀀스가 닫혀 기록기를 부모 컨텍스트로 반환함을 나타냅니다.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">쓸 태그이거나, 기본 태그(유니버설 16)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within a Sequence with the specified tag.">현재 기록기가 지정된 태그가 있는 시퀀스 내에 있지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Set-Of with the specified tag is closed, returning the writer to the parent context.">지정된 태그가 있는 열린 Set-Of가 닫혀 기록기를 부모 컨텍스트로 반환함을 나타냅니다.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">쓸 태그이거나, 기본 태그(유니버설 17)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within a Set-Of with the specified tag.">현재 기록기가 지정된 태그가 있는 Set-Of 내에 있지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing an Octet String value with a specified tag.">지정된 태그가 있는 옥텟 문자열 값을 쓰기 시작합니다.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">쓸 태그이거나, 기본 태그(유니버설 4)인 경우 <see langword="null" />입니다.</param>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />을 자동으로 호출할 삭제 가능한 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing a Sequence with a specified tag.">지정된 태그가 있는 시퀀스를 쓰기 시작합니다.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">쓸 태그이거나, 기본 태그(유니버설 16)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 자동으로 호출할 삭제 가능한 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing a Set-Of with a specified tag.">지정된 태그가 있는 Set-Of를 쓰기 시작합니다.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">쓸 태그이거나, 기본 태그(유니버설 17)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 자동으로 호출할 삭제 가능한 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Reset">
      <summary vsli:raw="Reset the writer to have no data, without releasing resources.">리소스를 해제하지 않고 데이터가 없도록 기록기를 초기화합니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to write the encoded representation of the data to &lt;paramref name=&quot;destination&quot; /&gt;.">데이터의 인코딩된 표현을 <paramref name="destination" />에 쓰려고 합니다.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">쓸 수 있는 버퍼입니다.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">성공하면 <paramref name="destination" />에 쓴 바이트 수를 받습니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />가 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 통해 닫히지 않았습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the encode succeeded, &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is too small.">인코딩에 성공하면 <see langword="true" />이고, <paramref name="destination" />이 너무 작으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a Bit String value with a specified tag.">지정된 태그가 있는 비트 문자열 값을 씁니다.</summary>
      <param name="value" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="unusedBitCount" vsli:raw="The number of trailing bits which are not semantic.">의미 체계가 아닌 후행 비트의 수입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">쓸 태그이거나, 기본 태그(유니버설 3)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; has length 0 and &lt;paramref name=&quot;unusedBitCount&quot; /&gt; is not 0 &#xA;               -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not empty and any of the bits identified by &lt;paramref name=&quot;unusedBitCount&quot; /&gt; is set.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <paramref name="value" />는 길이가 0이고 <paramref name="unusedBitCount" />는 0이 아닙니다. -또는- <paramref name="value" />는 비어 있지 않고 <paramref name="unusedBitCount" />로 식별된 비트 중 하나가 설정되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;unusedBitCount&quot; /&gt; is not in the range [0,7].">
        <paramref name="unusedBitCount" />는 [0,7] 범위에 있지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a Boolean value with a specified tag.">지정된 태그가 있는 부울 값을 씁니다.</summary>
      <param name="value" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">쓸 태그이거나, 기본 태그(유니버설 1)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.">인코딩 형식에 해당하는 지정된 태그를 사용하여 지정된 인코딩 형식을 사용하여 제공된 문자열을 씁니다.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the encoding to use.">사용할 인코딩을 나타내는 열거형 값 중 하나입니다.</param>
      <param name="str" vsli:raw="The string to write.">쓸 문자열입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">쓸 태그이거나, 요청된 인코딩 형식에 적합한 유니버설 태그의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a restricted character string encoding type.&#xA;             -or- &#xA;               &lt;paramref name=&quot;encodingType&quot; /&gt; is a restricted character string encoding type that is not currently supported by this method.">
        <paramref name="encodingType" />은 제한된 문자열 인코딩 형식이 아닙니다.
-또는- <paramref name="encodingType" />은 이 메서드에서 현재 지원되지 않는 제한된 문자열 인코딩 형식입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.">인코딩 형식에 해당하는 지정된 태그를 사용하여 지정된 인코딩 형식을 사용하여 제공된 문자열을 씁니다.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the encoding to use.">사용할 인코딩을 나타내는 열거형 값 중 하나입니다.</param>
      <param name="value" vsli:raw="The string to write.">쓸 문자열입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">쓸 태그이거나, 요청된 인코딩 형식에 적합한 유니버설 태그의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="value" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a restricted character string encoding type.&#xA;             -or- &#xA;               &lt;paramref name=&quot;encodingType&quot; /&gt; is a restricted character string encoding type that is not currently supported by this method.">
        <paramref name="encodingType" />은 제한된 문자열 인코딩 형식이 아닙니다.
-또는- <paramref name="encodingType" />은 이 메서드에서 현재 지원되지 않는 제한된 문자열 인코딩 형식입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Write a single value which has already been encoded.">이미 인코딩된 단일 값을 씁니다.</summary>
      <param name="value" vsli:raw="The value to write.">작성할 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; could not be read under the current encoding rules.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; has data beyond the end of the first value.">
        <paramref name="value" />는 현재 인코딩 규칙에서 읽을 수 없습니다.
-또는- <paramref name="value" />는 첫 번째 값의 끝을 넘는 데이터를 포함합니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as an Enumerated with tag UNIVERSAL 10.">비 [<see cref="T:System.FlagsAttribute" />] 열거형 값을 범용 10 태그가 있는 열거형으로 씁니다.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">쓸 boxing된 열거형 값입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">쓸 태그이거나, 기본 태그(유니버설 10)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not a boxed enum value.&#xA;             -or- &#xA;               the unboxed type of &lt;paramref name=&quot;value&quot; /&gt; is declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <paramref name="value" />는 boxing된 열거형 값이 아닙니다.
-또는- unboxing된 형식의 <paramref name="value" />가 선언되었습니다[<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as an Enumerated with tag UNIVERSAL 10.">비 [<see cref="T:System.FlagsAttribute" />] 열거형 값을 범용 10 태그가 있는 열거형으로 씁니다.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">쓸 boxing된 열거형 값입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">쓸 태그이거나, 기본 태그(유니버설 10)인 경우 <see langword="null" />입니다.</param>
      <typeparam name="TEnum" vsli:raw="The non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enumeration type to write.">쓸 비 [ <see cref="T:System.FlagsAttribute" /> ] 열거형 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <typeparamref name="TEnum" />은 열거형이 아닙니다.
-또는- <typeparamref name="TEnum" />이 선언되었습니다[<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; as a GeneralizedTime with a specified UNIVERSAL 24, optionally excluding the fractional seconds.">제공된 <see cref="T:System.DateTimeOffset" />을 지정된 범용 24가 있는 GeneralizedTime으로 씁니다(필요에 따라 소수 부분 제외).</summary>
      <param name="value" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="omitFractionalSeconds" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to treat the fractional seconds in &lt;paramref name=&quot;value&quot; /&gt; as 0 even if a non-zero value is present.">0이 아닌 값이 있더라도 <paramref name="value" />에서 소수 부분을 0으로 처리하려면 <see langword="true" />입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">쓸 태그이거나, 기본 태그(유니버설 24)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">지정된 태그가 있는 정수 값을 씁니다.</summary>
      <param name="value" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">쓸 태그이거나, 기본 태그(유니버설 2)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">지정된 태그가 있는 정수 값을 씁니다.</summary>
      <param name="value" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">쓸 태그이거나, 기본 태그(유니버설 2)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">지정된 태그가 있는 정수 값을 씁니다.</summary>
      <param name="value" vsli:raw="The integer value to write, in signed big-endian byte order.">부호 있는 big-endian 바이트 순서로 쓸 정수 값입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">쓸 태그이거나, 기본 태그(유니버설 2)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="the 9 most significant bits are all set.&#xA;             -or- &#xA;               the 9 most significant bits are all unset.">9개의 가장 중요한 비트가 모두 설정되었습니다.
-또는- 9개의 가장 중요한 비트가 모두 설정되지 않았습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">지정된 태그가 있는 정수 값을 씁니다.</summary>
      <param name="value" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">쓸 태그이거나, 기본 태그(유니버설 2)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">지정된 태그가 있는 정수 값을 씁니다.</summary>
      <param name="value" vsli:raw="The integer value to write, in unsigned big-endian byte order.">부호 없는 big-endian 바이트 순서로 쓸 정수 값입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">쓸 태그이거나, 기본 태그(유니버설 2)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="the 9 most significant bits are all unset.">9개의 가장 중요한 비트가 모두 설정되지 않았습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a bit array value as a NamedBitList with a specified tag.">비트 배열 값을 지정된 태그가 있는 NamedBitList로 씁니다.</summary>
      <param name="value" vsli:raw="The bits to write.">쓸 비트입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">쓸 태그이거나, 기본 태그(유니버설 3)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as a NamedBitList with a specified tag.">[<see cref="T:System.FlagsAttribute" />] 열거형 값을 지정된 태그가 있는 NamedBitList로 씁니다.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">쓸 boxing된 열거형 값입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">쓸 태그이거나, 기본 태그(유니버설 3)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not a boxed enum value.&#xA;             -or- &#xA;               the unboxed type of &lt;paramref name=&quot;value&quot; /&gt; is not declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <paramref name="value" />는 boxing된 열거형 값이 아닙니다.
-또는- unboxing된 형식의 <paramref name="value" />가 선언되지 않았습니다[<see cref="T:System.FlagsAttribute" />].</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as a NamedBitList with a specified tag.">[<see cref="T:System.FlagsAttribute" />] 열거형 값을 지정된 태그가 있는 NamedBitList로 씁니다.</summary>
      <param name="value" vsli:raw="The enumeration value to write.">쓸 열거형 값입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">쓸 태그이거나, 기본 태그(유니버설 3)인 경우 <see langword="null" />입니다.</param>
      <typeparam name="TEnum" vsli:raw="The [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enumeration type to write.">쓸 [ <see cref="T:System.FlagsAttribute" /> ] 열거형 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum value.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <typeparamref name="TEnum" />은 열거형 값이 아닙니다.
-또는- <typeparamref name="TEnum" />이 선언되지 않았습니다[<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write NULL with a specified tag.">지정된 태그와 함께 NULL을 씁니다.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">쓸 태그이거나, 기본 태그(유니버설 5)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Object Identifier with a specified tag.">지정된 태그가 있는 개체 식별자를 씁니다.</summary>
      <param name="oidValue" vsli:raw="The object identifier to write.">쓸 개체 식별자입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">쓸 태그이거나, 기본 태그(유니버설 6)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;oidValue&quot; /&gt; is not a valid dotted decimal object identifier.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <paramref name="oidValue" />는 유효한 점으로 구분된 10진수 개체 식별자가 아닙니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Object Identifier with a specified tag.">지정된 태그가 있는 개체 식별자를 씁니다.</summary>
      <param name="oidValue" vsli:raw="The object identifier to write.">쓸 개체 식별자입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">쓸 태그이거나, 기본 태그(유니버설 6)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;oidValue&quot; /&gt; is not a valid dotted decimal object identifier.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <paramref name="oidValue" />는 유효한 점으로 구분된 10진수 개체 식별자가 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;oidValue&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="oidValue" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Octet String value with a specified tag.">지정된 태그가 있는 옥텟 문자열 값을 씁니다.</summary>
      <param name="value" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">쓸 태그이거나, 기본 태그(유니버설 4)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided value as a UTCTime with a specified tag, provided the year is in the allowed range.">연도가 허용 범위 내에 있는 경우 제공된 값을 지정된 태그가 있는 UTCTime으로 씁니다.</summary>
      <param name="value" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="twoDigitYearMax" vsli:raw="The maximum valid year for &lt;paramref name=&quot;value&quot; /&gt;, after conversion to UTC.&#xA;              For the X.509 Time.utcTime range of 1950-2049, pass &lt;c&gt;2049&lt;/c&gt;.">UTC로 변환 후 <paramref name="value" />의 유효한 최대 연도입니다.
X.509 Time.utcTime 범위 1950~2049의 경우 <c>2049</c>를 전달합니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">쓸 태그이거나, 기본 태그(유니버설 23)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt;.&lt;see cref=&quot;P:System.DateTimeOffset.Year&quot; /&gt; (after conversion to UTC) is not in the range (&lt;paramref name=&quot;twoDigitYearMax&quot; /&gt; - 100, &lt;paramref name=&quot;twoDigitYearMax&quot; /&gt;].">
        <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> UTC로 변환 후 (<paramref name="twoDigitYearMax" /> - 100, <paramref name="twoDigitYearMax" />] 범위에 있지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided value as a UTCTime with a specified tag, accepting the two-digit year as valid in context.">제공된 값을 지정된 태그가 있는 UTCTime으로 쓰고, 두 자리 연도를 컨텍스트에서 유효한 것으로 허용합니다.</summary>
      <param name="value" vsli:raw="The value to write.">작성할 값입니다.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">쓸 태그이거나, 기본 태그(유니버설 23)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="P:System.Formats.Asn1.AsnWriter.RuleSet">
      <summary vsli:raw="Gets the encoding rules in use by this writer.">이 기록기에서 사용 중인 인코딩 규칙을 가져옵니다.</summary>
      <returns vsli:raw="The encoding rules in use by this writer.">이 작성기에서 사용 하는 인코딩 규칙입니다.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter.Scope">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; target for safely closing an opened tag by using a lexical scope as a logical scope.">어휘 범위를 논리 범위로 사용하여 열린 태그를 안전하게 닫기 위한 <see cref="T:System.IDisposable" /> 대상을 제공합니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Scope.Dispose">
      <summary vsli:raw="Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.">관리되지 않는 리소스의 확보, 해제 또는 다시 설정과 관련된 애플리케이션 정의 작업을 수행합니다.</summary>
    </member>
    <member name="T:System.Formats.Asn1.TagClass">
      <summary vsli:raw="The tag class for a particular ASN.1 tag.">특정 ASN.1 태그의 태그 클래스입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Application">
      <summary vsli:raw="The Application tag class.">애플리케이션 태그 클래스</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.ContextSpecific">
      <summary vsli:raw="The Context-Specific tag class.">컨텍스트별 태그 클래스</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Private">
      <summary vsli:raw="The Private tag class.">프라이빗 태그 클래스</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Universal">
      <summary vsli:raw="The Universal tag class.">유니버설 태그 클래스</summary>
    </member>
    <member name="T:System.Formats.Asn1.UniversalTagNumber">
      <summary vsli:raw="Tag assignments for the UNIVERSAL class in ITU-T X.680.">ITU-T X.680에서 범용 클래스의 태그 할당입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BitString">
      <summary vsli:raw="The universal class tag value for Bit String.">비트 문자열의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BMPString">
      <summary vsli:raw="The universal class tag value for BMPString.">BMPString의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Boolean">
      <summary vsli:raw="The universal class tag value for Boolean.">부울의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Date">
      <summary vsli:raw="The universal class tag value for Date.">날짜의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.DateTime">
      <summary vsli:raw="The universal class tag value for Date-Time.">날짜-시간의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Duration">
      <summary vsli:raw="The universal class tag value for Duration.">기간의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Embedded">
      <summary vsli:raw="The universal class tag value for Embedded-PDV.">포함-PDV의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.EndOfContents">
      <summary vsli:raw="The reserved identifier for the End-of-Contents marker in an indefinite length encoding.">무한 길이 인코딩에서 End-of-Contents 마커의 예약된 식별자입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Enumerated">
      <summary vsli:raw="The universal class tag value for Enumerated.">열거형의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.External">
      <summary vsli:raw="The universal class tag value for External.">외부의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralizedTime">
      <summary vsli:raw="The universal class tag value for GeneralizedTime.">GeneralizedTime의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralString">
      <summary vsli:raw="The universal class tag value for GeneralString.">GeneralString의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GraphicString">
      <summary vsli:raw="The universal class tag value for GraphicString.">GraphicString의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.IA5String">
      <summary vsli:raw="The universal class tag value for IA5String.">IA5String의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.InstanceOf">
      <summary vsli:raw="The universal class tag value for Instance-Of.">Instance-Of의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Integer">
      <summary vsli:raw="The universal class tag value for Integer.">정수의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ISO646String">
      <summary vsli:raw="The universal class tag value for ISO646String (VisibleString).">ISO646String(VisibleString)의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Null">
      <summary vsli:raw="The universal class tag value for Null.">Null의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.NumericString">
      <summary vsli:raw="The universal class tag value for NumericString.">NumericString의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectDescriptor">
      <summary vsli:raw="The universal class tag value for Object Descriptor.">개체 설명자의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifier">
      <summary vsli:raw="The universal class tag value for Object Identifier.">개체 식별자의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifierIRI">
      <summary vsli:raw="The universal class tag value for Object Identifier Internationalized Resource Identifier (IRI).">개체 식별자 IRI(Internationalized Resource Identifier)의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.OctetString">
      <summary vsli:raw="The universal class tag value for Octet String.">옥텟 문자열의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.PrintableString">
      <summary vsli:raw="The universal class tag value for PrintableString.">PrintableString의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Real">
      <summary vsli:raw="The universal class tag value for Real.">실제의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifier">
      <summary vsli:raw="The universal class tag value for Relative Object Identifier.">상대 개체 식별자의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifierIRI">
      <summary vsli:raw="The universal class tag value for Relative Object Identifier Internationalized Resource Identifier (IRI).">상대 개체 식별자 IRI(Internationalized Resource Identifier)의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Sequence">
      <summary vsli:raw="The universal class tag value for Sequence.">시퀀스의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SequenceOf">
      <summary vsli:raw="The universal class tag value for Sequence-Of.">Sequence-Of의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Set">
      <summary vsli:raw="The universal class tag value for Set.">집합의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SetOf">
      <summary vsli:raw="The universal class tag value for Set-Of.">Set-Of의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.T61String">
      <summary vsli:raw="The universal class tag value for T61String (TeletexString).">T61String(TeletexString)의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TeletexString">
      <summary vsli:raw="The universal class tag value for TeletexString (T61String).">TeletexString(T61String)의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Time">
      <summary vsli:raw="The universal class tag value for Time.">시간의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TimeOfDay">
      <summary vsli:raw="The universal class tag value for Time-Of-Day.">Time-Of-Day의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UniversalString">
      <summary vsli:raw="The universal class tag value for UniversalString.">UniversalString의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UnrestrictedCharacterString">
      <summary vsli:raw="The universal class tag value for an unrestricted character string.">제한 없는 문자열의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UtcTime">
      <summary vsli:raw="The universal class tag value for UTCTime.">UTCTime의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UTF8String">
      <summary vsli:raw="The universal class tag value for UTF8String.">UTF8String의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VideotexString">
      <summary vsli:raw="The universal class tag value for VideotexString.">VideotexString의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VisibleString">
      <summary vsli:raw="The universal class tag value for VisibleString (ISO646String).">VisibleString(ISO646String)의 범용 클래스 태그 값입니다.</summary>
    </member>
  </members>
</doc>