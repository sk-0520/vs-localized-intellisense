<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Overlapped</name>
  </assembly>
  <members>
    <member name="T:System.Threading.IOCompletionCallback">
      <summary vsli:raw="Receives the error code, number of bytes, and overlapped value type when an I/O operation completes on the thread pool.">當執行緒集區的 I/O 作業完成時，可接收錯誤碼、位元組的數目和重疊的實值型別 (Value Type)。</summary>
      <param name="errorCode" vsli:raw="The error code.">錯誤碼。</param>
      <param name="numBytes" vsli:raw="The number of bytes that are transferred.">傳輸的位元組數目。</param>
      <param name="pOVERLAP" vsli:raw="A &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; representing an unmanaged pointer to the native overlapped value type.">
        <see cref="T:System.Threading.NativeOverlapped" />，代表原生 (Native) 重疊實值型別的 Unmanaged 指標。</param>
    </member>
    <member name="T:System.Threading.NativeOverlapped">
      <summary vsli:raw="Provides an explicit layout that is visible from unmanaged code and that will have the same layout as the Win32 OVERLAPPED structure with additional reserved fields at the end.">提供明確配置，這套配置為從 Unmanaged 程式碼可見，並且和 Win32 OVERLAPPED 結構有相同的配置，結尾還額外加有保留欄位。</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.EventHandle">
      <summary vsli:raw="Specifies the handle to an event set to the signaled state when the operation is complete. The calling process must set this member either to zero or to a valid event handle before calling any overlapped functions.">指定事件的控制碼，當作業完成時會被設定為信號狀態。 呼叫程序必須先把這個成員設定為零或是有效的事件控制代碼，才能呼叫重疊的函式。</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalHigh">
      <summary vsli:raw="Specifies the length of the data transferred. Reserved for operating system use.">指定所傳輸資料的長度。 保留供作業系統使用。</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalLow">
      <summary vsli:raw="Specifies a system-dependent status. Reserved for operating system use.">指定系統相依的狀態。 保留供作業系統使用。</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetHigh">
      <summary vsli:raw="Specifies the high word of the byte offset at which to start the transfer.">指定傳輸開始之處位元組的位移的高位字。</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetLow">
      <summary vsli:raw="Specifies a file position at which to start the transfer.">指定開始傳輸的檔案位置。</summary>
    </member>
    <member name="T:System.Threading.Overlapped">
      <summary vsli:raw="Provides a managed representation of a Win32 &lt;c&gt;OVERLAPPED&lt;/c&gt; structure, including methods to transfer information from an &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; instance to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">提供受管理的 Win32 <c>OVERLAPPED</c> 結構表示法，包括從 <see cref="T:System.Threading.Overlapped" /> 執行個體傳送資訊到 <see cref="T:System.Threading.NativeOverlapped" /> 結構的方法。</summary>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor">
      <summary vsli:raw="Initializes a new, empty instance of the &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; class.">初始化 <see cref="T:System.Threading.Overlapped" /> 類別的新的空執行個體。</summary>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; class with the specified file position, the 32-bit integer handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.">使用指定的檔案位置、當 I/O 作業完成時收到信號的事件控制代碼 (32 位元整數)，以及傳回作業結果所透過的介面，初始化 <see cref="T:System.Threading.Overlapped" /> 類別的新執行個體。</summary>
      <param name="offsetLo" vsli:raw="The low word of the file position at which to start the transfer.">要開始傳輸之檔案位置的低位文字。</param>
      <param name="offsetHi" vsli:raw="The high word of the file position at which to start the transfer.">要開始傳輸之檔案位置的高位文字。</param>
      <param name="hEvent" vsli:raw="The handle to an event that is signaled when the I/O operation is complete.">當 I/O 作業完成時收到信號的事件控制代碼。</param>
      <param name="ar" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface and provides status information on the I/O operation.">實作 <see cref="T:System.IAsyncResult" /> 介面並提供 I/O 作業狀態資訊的物件。</param>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; class with the specified file position, the handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.">使用指定的檔案位置、當 I/O 作業完成時收到信號的事件控制代碼，以及傳回作業結果所透過的介面，初始化 <see cref="T:System.Threading.Overlapped" /> 類別的新執行個體。</summary>
      <param name="offsetLo" vsli:raw="The low word of the file position at which to start the transfer.">要開始傳輸之檔案位置的低位文字。</param>
      <param name="offsetHi" vsli:raw="The high word of the file position at which to start the transfer.">要開始傳輸之檔案位置的高位文字。</param>
      <param name="hEvent" vsli:raw="The handle to an event that is signaled when the I/O operation is complete.">當 I/O 作業完成時收到信號的事件控制代碼。</param>
      <param name="ar" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface and provides status information on the I/O operation.">實作 <see cref="T:System.IAsyncResult" /> 介面並提供 I/O 作業狀態資訊的物件。</param>
    </member>
    <member name="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Frees the unmanaged memory associated with a native overlapped structure allocated by the &lt;see cref=&quot;Overload:System.Threading.Overlapped.Pack&quot; /&gt; method.">釋放 Unmanaged 記憶體，而此記憶體與 <see cref="Overload:System.Threading.Overlapped.Pack" /> 方法所配置的原生重疊結構相關聯。</summary>
      <param name="nativeOverlappedPtr" vsli:raw="A pointer to the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure to be freed.">要釋放的 <see cref="T:System.Threading.NativeOverlapped" /> 結構的指標。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;nativeOverlappedPtr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nativeOverlappedPtr" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying the delegate to be invoked when the asynchronous I/O operation is complete.">將目前的執行個體封裝到 <see cref="T:System.Threading.NativeOverlapped" /> 結構，指定非同步的 I/O 作業完成時所要叫用的委派。</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">
        <see cref="T:System.Threading.IOCompletionCallback" /> 委派，表示非同步的 I/O 作業完成時所要叫用的回呼方法。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; has already been packed.">目前的 <see cref="T:System.Threading.Overlapped" /> 已被封裝。</exception>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">
        <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</returns>
    </member>
    <member name="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete and a managed object that serves as a buffer.">將目前的執行個體封裝到 <see cref="T:System.Threading.NativeOverlapped" /> 結構，指定非同步的 I/O 作業完成時所叫用的委派，以及當做緩衝區的 Managed 物件。</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">
        <see cref="T:System.Threading.IOCompletionCallback" /> 委派，表示非同步的 I/O 作業完成時所要叫用的回呼方法。</param>
      <param name="userData" vsli:raw="An object or array of objects representing the input or output buffer for the operation. Each object represents a buffer, for example an array of bytes.">物件或物件陣列，表示作業的輸入或輸出緩衝區。 每個物件代表一個緩衝區，例如位元組陣列。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; has already been packed.">目前的 <see cref="T:System.Threading.Overlapped" /> 已被封裝。</exception>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">
        <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</returns>
    </member>
    <member name="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Unpacks the specified unmanaged &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure into a managed &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; object.">將指定 Unmanaged <see cref="T:System.Threading.NativeOverlapped" /> 結構解除封裝到 Managed <see cref="T:System.Threading.Overlapped" /> 物件。</summary>
      <param name="nativeOverlappedPtr" vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">
        <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;nativeOverlappedPtr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nativeOverlappedPtr" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; object containing the information unpacked from the native structure.">
        <see cref="T:System.Threading.Overlapped" /> 物件，包含從原生結構解除封裝的資訊。</returns>
    </member>
    <member name="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure specifying the delegate to invoke when the asynchronous I/O operation is complete. Does not propagate the calling stack.">將目前的執行個體封裝到 <see cref="T:System.Threading.NativeOverlapped" /> 結構，指定非同步的 I/O 作業完成時所要叫用的委派。 不會散佈呼叫堆疊。</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">
        <see cref="T:System.Threading.IOCompletionCallback" /> 委派，表示非同步的 I/O 作業完成時所要叫用的回呼方法。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; has already been packed.">目前的 <see cref="T:System.Threading.Overlapped" /> 已被封裝。</exception>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">
        <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</returns>
    </member>
    <member name="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying the delegate to invoke when the asynchronous I/O operation is complete and the managed object that serves as a buffer. Does not propagate the calling stack.">將目前的執行個體封裝到 <see cref="T:System.Threading.NativeOverlapped" /> 結構，指定非同步的 I/O 作業完成時所叫用的委派，以及當做緩衝區的 Managed 物件。 不會散佈呼叫堆疊。</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">
        <see cref="T:System.Threading.IOCompletionCallback" /> 委派，表示非同步的 I/O 作業完成時所要叫用的回呼方法。</param>
      <param name="userData" vsli:raw="An object or array of objects representing the input or output buffer for the operation. Each object represents a buffer, for example an array of bytes.">物件或物件陣列，表示作業的輸入或輸出緩衝區。 每個物件代表一個緩衝區，例如位元組陣列。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">呼叫端沒有必要的權限。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; is already packed.">目前的 <see cref="T:System.Threading.Overlapped" /> 已被封裝。</exception>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">
        <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</returns>
    </member>
    <member name="P:System.Threading.Overlapped.AsyncResult">
      <summary vsli:raw="Gets or sets the object that provides status information on the I/O operation.">取得或設定提供 I/O 作業狀態資訊的物件。</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface.">實作 <see cref="T:System.IAsyncResult" /> 介面的物件。</returns>
    </member>
    <member name="P:System.Threading.Overlapped.EventHandle">
      <summary vsli:raw="Gets or sets the 32-bit integer handle to a synchronization event that is signaled when the I/O operation is complete.">取得或設定當 I/O 作業完成時，收到信號之同步處理事件的控制代碼 (32 位元整數)。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the handle of the synchronization event.">
        <see cref="T:System.Int32" /> 值，表示同步處理事件的控制代碼。</returns>
    </member>
    <member name="P:System.Threading.Overlapped.EventHandleIntPtr">
      <summary vsli:raw="Gets or sets the handle to the synchronization event that is signaled when the I/O operation is complete.">取得或設定當 I/O 作業完成時，收到信號之同步處理事件的控制代碼。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; representing the handle of the event.">
        <see cref="T:System.IntPtr" />，表示事件的控制代碼。</returns>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetHigh">
      <summary vsli:raw="Gets or sets the high-order word of the file position at which to start the transfer. The file position is a byte offset from the start of the file.">取得或設定要開始傳輸之檔案位置的高序位文字。 檔案位置在離檔案開頭一個位元組位移的地方。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the high word of the file position.">
        <see cref="T:System.Int32" /> 值，表示檔案位置的高位文字。</returns>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetLow">
      <summary vsli:raw="Gets or sets the low-order word of the file position at which to start the transfer. The file position is a byte offset from the start of the file.">取得或設定要開始傳輸之檔案位置的低序位文字。 檔案位置在離檔案開頭一個位元組位移的地方。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the low word of the file position.">
        <see cref="T:System.Int32" /> 值，表示檔案位置的低位文字。</returns>
    </member>
    <member name="T:System.Threading.PreAllocatedOverlapped">
      <summary vsli:raw="Represents pre-allocated state for native overlapped I/O operations.">代表原生重疊 I/O 作業的預先配置狀態。</summary>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.PreAllocatedOverlapped&quot; /&gt; class and specifies a delegate to invoke when each asynchronous I/O operation is complete, a user-provided object that provides context, and managed objects that serve as buffers.">初始化 <see cref="T:System.Threading.PreAllocatedOverlapped" /> 類別的新執行個體，並指定當每個非同步 I/O 作業完成時叫用的委派、提供內容的使用者提供物件，以及作為緩衝區的 Managed 物件。</summary>
      <param name="callback" vsli:raw="A delegate that represents the callback method to invoke when each asynchronous I/O operation completes.">委派，表示當每個非同步 I/O 作業完成時叫用的回呼方法。</param>
      <param name="state" vsli:raw="A user-supplied object that distinguishes the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance produced from this object from other &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instances. Its value can be &lt;see langword=&quot;null&quot; /&gt;.">使用者提供的物件，可區別此物件與其他 <see cref="T:System.Threading.NativeOverlapped" /> 執行個體產生的 <see cref="T:System.Threading.NativeOverlapped" /> 執行個體。 其值可以是 <see langword="null" />。</param>
      <param name="pinData" vsli:raw="An object or array of objects that represent the input or output buffer for the operations. Each object represents a buffer, such as an array of bytes. Its value can be &lt;see langword=&quot;null&quot; /&gt;.">物件或物件陣列，代表作業的輸入或輸出緩衝區。 每個物件代表一個緩衝區，例如位元組陣列。 其值可以是 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; was disposed.">處置 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 後才呼叫這個方法。</exception>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.Dispose">
      <summary vsli:raw="Frees the resources associated with this &lt;see cref=&quot;T:System.Threading.PreAllocatedOverlapped&quot; /&gt; instance.">釋出與此 <see cref="T:System.Threading.PreAllocatedOverlapped" /> 執行個體建立關聯的資源。</summary>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.Finalize">
      <summary vsli:raw="Frees unmanaged resources before the current instance is reclaimed by garbage collection.">在記憶體回收回收目前的執行個體前，先釋出 Unmanaged 資源。</summary>
    </member>
    <member name="T:System.Threading.ThreadPoolBoundHandle">
      <summary vsli:raw="Represents an I/O handle that is bound to the system thread pool and enables low-level components to receive notifications for asynchronous I/O operations.">表示 I/O 控制代碼，繫結至系統執行緒集區，並讓低階元件接收非同步 I/O 作業的通知。</summary>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)">
      <summary vsli:raw="Returns an unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete, a user-provided object that supplies context, and managed objects that serve as buffers.">傳回 <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標，指定於非同步 I/O 作業完成時叫用的委派、提供內容的使用者提供物件，以及作為緩衝區的 Managed 物件。</summary>
      <param name="callback" vsli:raw="A delegate that represents the callback method to invoke when the asynchronous I/O operation completes.">委派，表示當非同步 I/O 作業完成時叫用的回呼方法。</param>
      <param name="state" vsli:raw="A user-provided object that distinguishes this &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance from other &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instances.">使用者提供的物件，可區別此 <see cref="T:System.Threading.NativeOverlapped" /> 執行個體和其他 <see cref="T:System.Threading.NativeOverlapped" /> 執行個體。</param>
      <param name="pinData" vsli:raw="An object or array of objects that represent the input or output buffer for the operation, or &lt;see langword=&quot;null&quot; /&gt;. Each object represents a buffer, such an array of bytes.">物件或物件陣列，代表作業的輸入或輸出緩衝區或 <see langword="null" />。 每個物件代表一個緩衝區，例如位元組陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; object was disposed.">處置 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 物件後才呼叫這個方法。</exception>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">
        <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</returns>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)">
      <summary vsli:raw="Returns an unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure using the callback state and buffers associated with the specified &lt;see cref=&quot;T:System.Threading.PreAllocatedOverlapped&quot; /&gt; object.">傳回 <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標，此結構使用回呼狀態以及與指定 <see cref="T:System.Threading.PreAllocatedOverlapped" /> 物件建立關聯的緩衝區。</summary>
      <param name="preAllocated" vsli:raw="An object from which to create the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; pointer.">要從中建立 <see cref="T:System.Threading.NativeOverlapped" /> 指標的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;preAllocated&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="preAllocated" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;preAllocated&quot; /&gt; is currently in use for another I/O operation.">另一個 I/O 作業目前正在使用 <paramref name="preAllocated" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; was disposed.  &#xA;  &#xA; -or-  &#xA;  &#xA; This method was called after &lt;paramref name=&quot;preAllocated&quot; /&gt; was disposed.">處置 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 後才呼叫這個方法。  
  
-或- 
處置 <paramref name="preAllocated" /> 後才呼叫這個方法。</exception>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">
        <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</returns>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; for the specified handle, which is bound to the system thread pool.">傳回指定控制代碼的 <see cref="T:System.Threading.ThreadPoolBoundHandle" />，它繫結至系統執行緒集區。</summary>
      <param name="handle" vsli:raw="An object that holds the operating system handle. The handle must have been opened for overlapped I/O in unmanaged code.">物件，持有作業系統控制代碼。 控制代碼必須已經對 Unmanaged 程式碼中的重疊 I/O 開啟。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handle" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; has been disposed.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;handle&quot; /&gt; does not refer to a valid I/O handle.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;handle&quot; /&gt; refers to a handle that has not been opened for overlapped I/O.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;handle&quot; /&gt; refers to a handle that has already been bound.">已處置 <paramref name="handle" />。  
  
-或- 
 <paramref name="handle" /> 不表示有效的 I/O 控制代碼。  
  
-或- 
 <paramref name="handle" /> 是指重疊 I/O 尚未開啟的控制代碼。  
  
-或- 
 <paramref name="handle" /> 是指已繫結的控制代碼。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; for &lt;paramref name=&quot;handle&quot; /&gt;, which is bound to the system thread pool.">
        <paramref name="handle" /> 的 <see cref="T:System.Threading.ThreadPoolBoundHandle" />，它繫結至系統執行緒集區。</returns>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.Dispose">
      <summary vsli:raw="Releases all unmanaged resources used by the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; instance.">釋放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 執行個體使用的所有 Unmanaged 資源。</summary>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Frees the memory associated with a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure allocated by the &lt;see cref=&quot;Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped&quot; /&gt; method.">釋放 <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> 方法所配置之與 <see cref="T:System.Threading.NativeOverlapped" /> 結構建立關聯的記憶體。</summary>
      <param name="overlapped" vsli:raw="An unmanaged pointer to the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure to be freed.">要釋放之 <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;overlapped&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="overlapped" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; object was disposed.">處置 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 物件後才呼叫這個方法。</exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Returns the user-provided object that was specified when the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance was allocated by calling the &lt;see cref=&quot;M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)&quot; /&gt; method.">傳回透過呼叫 <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" /> 方法配置 <see cref="T:System.Threading.NativeOverlapped" /> 執行個體時，指定的使用者提供物件。</summary>
      <param name="overlapped" vsli:raw="An unmanaged pointer to the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure from which to return the associated user-provided object.">傳回相關聯的使用者提供物件之 <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;overlapped&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="overlapped" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A user-provided object that distinguishes this &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance from other &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instances, or &lt;see langword=&quot;null&quot; /&gt; if one was not specified when the instance was allocated by calling the &lt;see cref=&quot;Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped&quot; /&gt; method.">使用者提供的物件，可將此 <see cref="T:System.Threading.NativeOverlapped" /> 執行個體與其他 <see cref="T:System.Threading.NativeOverlapped" /> 執行個體區別；或當呼叫 <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> 方法配置執行個體時沒有指定一個，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Threading.ThreadPoolBoundHandle.Handle">
      <summary vsli:raw="Gets the bound operating system handle.">取得繫結作業系統控制代碼。</summary>
      <returns vsli:raw="An object that holds the bound operating system handle.">物件，持有繫結作業系統控制代碼。</returns>
    </member>
  </members>
</doc>