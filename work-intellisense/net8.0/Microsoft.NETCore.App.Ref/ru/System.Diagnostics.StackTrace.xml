<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Diagnostics.StackTrace</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.StackFrame">
      <summary vsli:raw="Provides information about a &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt;, which represents a function call on the call stack for the current thread.">Предоставляет сведения об объекте <see cref="T:System.Diagnostics.StackFrame" />, который представляет вызов функции в стеке вызовов для текущего потока.</summary>
    </member>
    <member name="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN">
      <summary vsli:raw="Defines the value that is returned from the &lt;see cref=&quot;M:System.Diagnostics.StackFrame.GetNativeOffset&quot; /&gt; or &lt;see cref=&quot;M:System.Diagnostics.StackFrame.GetILOffset&quot; /&gt; method when the native or Microsoft intermediate language (MSIL) offset is unknown. This field is constant.">Определяет значение, возвращаемое методом <see cref="M:System.Diagnostics.StackFrame.GetNativeOffset" />, или <see cref="M:System.Diagnostics.StackFrame.GetILOffset" />, если смещение в исходном коде или коде на языке MSIL неизвестно. Это поле является константой.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackFrame" />.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class, optionally capturing source information.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackFrame" /> и дополнительно может собирать сведения об источнике.</summary>
      <param name="needFileInfo" vsli:raw="" />
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class that corresponds to a frame above the current stack frame.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackFrame" />, соответствующий кадру, который расположен над текущим кадром стека.</summary>
      <param name="skipFrames" vsli:raw="The number of frames up the stack to skip.">Количество пропускаемых кадров вверх по стеку.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class that corresponds to a frame above the current stack frame, optionally capturing source information.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackFrame" />, соответствующий кадру, который расположен над текущим кадром стека и дополнительно может собирать сведения об источнике.</summary>
      <param name="skipFrames" vsli:raw="The number of frames up the stack to skip.">Количество пропускаемых кадров вверх по стеку.</param>
      <param name="needFileInfo" vsli:raw="" />
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class that contains only the given file name and line number.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackFrame" />, содержащий только заданное имя файла и номер строки.</summary>
      <param name="fileName" vsli:raw="The file name.">Имя файла.</param>
      <param name="lineNumber" vsli:raw="The line number in the specified file.">Номер строки в указанном файле.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class that contains only the given file name, line number, and column number.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackFrame" />, содержащий только заданное имя файла, номер строки и номер столбца.</summary>
      <param name="fileName" vsli:raw="The file name.">Имя файла.</param>
      <param name="lineNumber" vsli:raw="The line number in the specified file.">Номер строки в указанном файле.</param>
      <param name="colNumber" vsli:raw="The column number in the specified file.">Номер столбца в указанном файле.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
      <summary vsli:raw="Gets the column number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.">Получает номер столбца в файле, содержащем выполняемый код. Эти сведения обычно извлекаются из символов отладки для исполняемого файла.</summary>
      <returns vsli:raw="The file column number, or 0 (zero) if the file column number cannot be determined.">Номер столбца в файле или 0 (нуль), если номер столбца в файле определить не удалось.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileLineNumber">
      <summary vsli:raw="Gets the line number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.">Получает номер строки в файле, содержащем выполняемый код. Эти сведения обычно извлекаются из символов отладки для исполняемого файла.</summary>
      <returns vsli:raw="The file line number, or 0 (zero) if the file line number cannot be determined.">Номер строки в файле или 0 (нуль), если номер строки в файле определить не удалось.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileName">
      <summary vsli:raw="Gets the file name that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.">Получает имя файла, содержащего выполняемый код. Эти сведения обычно извлекаются из символов отладки для исполняемого файла.</summary>
      <returns vsli:raw="The file name, or &lt;see langword=&quot;null&quot; /&gt; if the file name cannot be determined.">Имя файла или <see langword="null" />, если имя файла определить не удалось.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetILOffset">
      <summary vsli:raw="Gets the offset from the start of the Microsoft intermediate language (MSIL) code for the method that is executing. This offset might be an approximation depending on whether or not the just-in-time (JIT) compiler is generating debugging code. The generation of this debugging information is controlled by the &lt;see cref=&quot;T:System.Diagnostics.DebuggableAttribute&quot; /&gt;.">Получает смещение от начала кода на языке MSIL для выполняемого метода. Это смещение может быть приблизительным, в зависимости от того, создает ли JIT-компилятор код отладки. Управление созданием этих сведений отладки осуществляется классом <see cref="T:System.Diagnostics.DebuggableAttribute" />.</summary>
      <returns vsli:raw="The offset from the start of the MSIL code for the method that is executing.">Смещение от начала кода на языке MSIL для выполняемого метода.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetMethod">
      <summary vsli:raw="Gets the method in which the frame is executing.">Получает метод, в котором выполняется кадр.</summary>
      <returns vsli:raw="The method in which the frame is executing.">Метод, в котором выполняется кадр.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetNativeOffset">
      <summary vsli:raw="Gets the offset from the start of the native just-in-time (JIT)-compiled code for the method that is being executed. The generation of this debugging information is controlled by the &lt;see cref=&quot;T:System.Diagnostics.DebuggableAttribute&quot; /&gt; class.">Получает смещение от начала исходного, скомпилированного JIT-компилятором кода для исполняемого метода. Управление созданием этих сведений отладки осуществляется классом <see cref="T:System.Diagnostics.DebuggableAttribute" />.</summary>
      <returns vsli:raw="The offset from the start of the JIT-compiled code for the method that is being executed.">Смещение от начала кода, скомпилированного JIT-компилятором для выполняемого метода.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.ToString">
      <summary vsli:raw="Builds a readable representation of the stack trace.">Создает доступное для чтения представление трассировки стека.</summary>
      <returns vsli:raw="A readable representation of the stack trace.">Доступное для чтения представление трассировки стека.</returns>
    </member>
    <member name="T:System.Diagnostics.StackFrameExtensions">
      <summary vsli:raw="Provides extension methods for the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class, which represents a function call on the call stack for the current thread.">Предоставляет методы расширения для класса <see cref="T:System.Diagnostics.StackFrame" />, который представляет вызов функции в стеке вызовов для текущего потока.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Returns a pointer to the base address of the native image that this stack frame is executing.">Возвращает указатель на базовый адрес собственного образа, который выполняется в этом кадре стека.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Кадр стека.</param>
      <returns vsli:raw="A pointer to the base address of the native image or &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; if you're targeting the .NET Framework.">Указатель на базовый адрес собственного образа или <see cref="F:System.IntPtr.Zero" />, если целевой платформой является .NET Framework.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Gets an interface pointer to the start of the native code for the method that is being executed.">Получает указатель интерфейса на начало машинного код для выполняющегося метода.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Кадр стека.</param>
      <returns vsli:raw="An interface pointer to the start of the native code for the method that is being executed or &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; if you're targeting the .NET Framework.">Указатель интерфейса на начало машинного кода для выполняющегося метода или <see cref="F:System.IntPtr.Zero" />, если целевой платформой является .NET Framework.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Indicates whether an offset from the start of the IL code for the method that is executing is available.">Указывает, доступно ли смещение от начала кода на языке IL для выполняемого метода.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Кадр стека.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the offset is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если смещение доступно; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Indicates whether information about the method in which the specified frame is executing is available.">Указывает, доступны ли сведения о методе, в котором выполняется заданный кадр.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Кадр стека.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if information about the method in which the current frame is executing is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если доступны сведения о методе, в котором выполняется текущий; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Indicates whether the native image is available for the specified stack frame.">Указывает, доступен ли собственный образ для указанного кадра стека.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Кадр стека.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a native image is available for this stack frame; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если собственный образ доступен для этого кадра стека; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Indicates whether the file that contains the code that the specified stack frame is executing is available.">Указывает, доступен ли файл, содержащий код, который выполняется в указанном кадре стека.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Кадр стека.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code that the specified stack frame is executing is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если доступен код, который выполняется в указанном кадре стека; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.StackTrace">
      <summary vsli:raw="Represents a stack trace, which is an ordered collection of one or more stack frames.">Представляет трассировку стека — упорядоченный набор из одного или нескольких кадров стека.</summary>
    </member>
    <member name="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
      <summary vsli:raw="Defines the default for the number of methods to omit from the stack trace. This field is constant.">Определяет значение по умолчанию для числа методов, которые нужно пропустить в трассировке стека. Это поле является константой.</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class from the caller's frame.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> из фрагмента вызывающего оператора.</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class from the caller's frame, optionally capturing source information.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> из фрагмента вызывающего оператора и дополнительно может собирать сведения об источнике.</summary>
      <param name="fNeedFileInfo" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to capture the file name, line number, and column number; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для извлечения имени файла, номера строки и номера столбца, в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class that contains a single frame.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" />, содержащий один фрагмент.</summary>
      <param name="frame" vsli:raw="The frame that the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; object should contain.">Фрагмент, который должен содержаться в объекте <see cref="T:System.Diagnostics.StackTrace" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class using the provided exception object.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> с использованием предоставленного объекта исключения.</summary>
      <param name="e" vsli:raw="The exception object from which to construct the stack trace.">Объект исключения, на основе которого создается трассировка стека.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="e" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class, using the provided exception object and optionally capturing source information.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> с использованием предоставленного объекта исключения и дополнительно может собирать сведения об источнике.</summary>
      <param name="e" vsli:raw="The exception object from which to construct the stack trace.">Объект исключения, на основе которого создается трассировка стека.</param>
      <param name="fNeedFileInfo" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to capture the file name, line number, and column number; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для извлечения имени файла, номера строки и номера столбца, в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="e" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class using the provided exception object and skipping the specified number of frames.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> с использованием предоставленного объекта, пропуская указанное число фрагментов.</summary>
      <param name="e" vsli:raw="The exception object from which to construct the stack trace.">Объект исключения, на основе которого создается трассировка стека.</param>
      <param name="skipFrames" vsli:raw="The number of frames up the stack from which to start the trace.">Количество фрагментов вверх по стеку, с которого начинается трассировка.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="e" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;skipFrames&quot; /&gt; parameter is negative.">Параметр <paramref name="skipFrames" /> имеет отрицательное значение.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class using the provided exception object, skipping the specified number of frames and optionally capturing source information.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> с использованием предоставленного объекта исключения, пропуская заданное число фрагментов и дополнительно собирая сведения об источнике.</summary>
      <param name="e" vsli:raw="The exception object from which to construct the stack trace.">Объект исключения, на основе которого создается трассировка стека.</param>
      <param name="skipFrames" vsli:raw="The number of frames up the stack from which to start the trace.">Количество фрагментов вверх по стеку, с которого начинается трассировка.</param>
      <param name="fNeedFileInfo" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to capture the file name, line number, and column number; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для извлечения имени файла, номера строки и номера столбца, в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="e" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;skipFrames&quot; /&gt; parameter is negative.">Параметр <paramref name="skipFrames" /> имеет отрицательное значение.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class from the caller's frame, skipping the specified number of frames.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> из фрагмента вызывающего оператора, пропуская заданное число фрагментов.</summary>
      <param name="skipFrames" vsli:raw="The number of frames up the stack from which to start the trace.">Количество фрагментов вверх по стеку, с которого начинается трассировка.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;skipFrames&quot; /&gt; parameter is negative.">Параметр <paramref name="skipFrames" /> имеет отрицательное значение.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class from the caller's frame, skipping the specified number of frames and optionally capturing source information.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> из фрагмента вызывающего оператора, пропуская заданное число фрагментов и дополнительно собирая сведения об источнике.</summary>
      <param name="skipFrames" vsli:raw="The number of frames up the stack from which to start the trace.">Количество фрагментов вверх по стеку, с которого начинается трассировка.</param>
      <param name="fNeedFileInfo" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to capture the file name, line number, and column number; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для извлечения имени файла, номера строки и номера столбца, в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;skipFrames&quot; /&gt; parameter is negative.">Параметр <paramref name="skipFrames" /> имеет отрицательное значение.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
      <summary vsli:raw="Gets the specified stack frame.">Возвращает указанный кадр стека.</summary>
      <param name="index" vsli:raw="The index of the stack frame requested.">Индекс запрашиваемого кадра стека.</param>
      <returns vsli:raw="The specified stack frame.">Указанный кадр стека.</returns>
    </member>
    <member name="M:System.Diagnostics.StackTrace.GetFrames">
      <summary vsli:raw="Returns a copy of all stack frames in the current stack trace.">Возвращает копию всех кадров стека в текущей трассировке стека.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; representing the function calls in the stack trace.">Массив типа <see cref="T:System.Diagnostics.StackFrame" />, представляющий вызовы функции в трассировке стека.</returns>
    </member>
    <member name="M:System.Diagnostics.StackTrace.ToString">
      <summary vsli:raw="Builds a readable representation of the stack trace.">Создает доступное для чтения представление трассировки стека.</summary>
      <returns vsli:raw="A readable representation of the stack trace.">Доступное для чтения представление трассировки стека.</returns>
    </member>
    <member name="P:System.Diagnostics.StackTrace.FrameCount">
      <summary vsli:raw="Gets the number of frames in the stack trace.">Возвращает число фрагментов в трассировке стека.</summary>
      <returns vsli:raw="The number of frames in the stack trace.">Число кадров в трассировке стека.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolBinder">
      <summary vsli:raw="Represents a symbol binder for managed code.">Представляет модуль привязки символов для управляемого кода.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolBinder.GetReader(System.Int32,System.String,System.String)">
      <summary vsli:raw="Gets the interface of the symbol reader for the current file.">Получает интерфейс средства чтения символов для текущего файла.</summary>
      <param name="importer" vsli:raw="The metadata import interface.">Интерфейс импорта метаданных.</param>
      <param name="filename" vsli:raw="The name of the file for which the reader interface is required.">Имя файла, для которого требуется интерфейс средства чтения.</param>
      <param name="searchPath" vsli:raw="The search path used to locate the symbol file.">Путь поиска, используемый для поиска файла символов.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolReader&quot; /&gt; interface that reads the debugging symbols.">Интерфейс <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader" /> для чтения символов отладки.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolBinder1">
      <summary vsli:raw="Represents a symbol binder for managed code.">Представляет модуль привязки символов для управляемого кода.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolBinder1.GetReader(System.IntPtr,System.String,System.String)">
      <summary vsli:raw="Gets the interface of the symbol reader for the current file.">Получает интерфейс средства чтения символов для текущего файла.</summary>
      <param name="importer" vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; that refers to the metadata import interface.">Объект <see cref="T:System.IntPtr" />, ссылающийся на интерфейс импорта метаданных.</param>
      <param name="filename" vsli:raw="The name of the file for which the reader interface is required.">Имя файла, для которого требуется интерфейс средства чтения.</param>
      <param name="searchPath" vsli:raw="The search path used to locate the symbol file.">Путь поиска, используемый для поиска файла символов.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolReader&quot; /&gt; interface that reads the debugging symbols.">Интерфейс <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader" /> для чтения символов отладки.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolDocument">
      <summary vsli:raw="Represents a document referenced by a symbol store.">Представляет документ, на который ссылается хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.FindClosestLine(System.Int32)">
      <summary vsli:raw="Returns the closest line that is a sequence point, given a line in the current document that might or might not be a sequence point.">Возвращает ближайшую строку, являющуюся точкой следования, для заданной строки документа, которая может являться или не являться точкой следования.</summary>
      <param name="line" vsli:raw="The specified line in the document.">Заданная строка в документе.</param>
      <returns vsli:raw="The closest line that is a sequence point.">Ближайшая строка, являющаяся точкой следования.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.GetCheckSum">
      <summary vsli:raw="Gets the checksum.">Возвращает контрольную сумму.</summary>
      <returns vsli:raw="The checksum.">Контрольная сумма.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.GetSourceRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Gets the embedded document source for the specified range.">Возвращает внедренный источник документа для указанного диапазона.</summary>
      <param name="startLine" vsli:raw="The starting line in the current document.">Начальная строка текущего документа.</param>
      <param name="startColumn" vsli:raw="The starting column in the current document.">Начальный столбец текущего документа.</param>
      <param name="endLine" vsli:raw="The ending line in the current document.">Конечная строка текущего документа.</param>
      <param name="endColumn" vsli:raw="The ending column in the current document.">Конечный столбец текущего документа.</param>
      <returns vsli:raw="The document source for the specified range.">Источник документа для указанного диапазона.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.CheckSumAlgorithmId">
      <summary vsli:raw="Gets the checksum algorithm identifier.">Возвращает идентификатор алгоритма подсчета контрольной суммы.</summary>
      <returns vsli:raw="A GUID identifying the checksum algorithm. The value is all zeros, if there is no checksum.">Идентификатор GUID алгоритма подсчета контрольной суммы. Все значения равны нулю, если контрольная сумма отсутствует.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.DocumentType">
      <summary vsli:raw="Gets the type of the current document.">Возвращает тип текущего документа.</summary>
      <returns vsli:raw="The type of the current document.">Тип текущего документа.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.HasEmbeddedSource">
      <summary vsli:raw="Checks whether the current document is stored in the symbol store.">Проверяет, хранится ли текущий документ в хранилище символов.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current document is stored in the symbol store; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Возвращает значение <see langword="true" />, если текущий документ хранится в хранилище символов; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.Language">
      <summary vsli:raw="Gets the language of the current document.">Возвращает язык текущего документа.</summary>
      <returns vsli:raw="The language of the current document.">Язык текущего документа.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.LanguageVendor">
      <summary vsli:raw="Gets the language vendor of the current document.">Возвращает поставщика языка текущего документа.</summary>
      <returns vsli:raw="The language vendor of the current document.">Поставщик языка текущего документа.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.SourceLength">
      <summary vsli:raw="Gets the length, in bytes, of the embedded source.">Возвращает длину внедренного источника в байтах.</summary>
      <returns vsli:raw="The source length of the current document.">Длина источника текущего документа.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.URL">
      <summary vsli:raw="Gets the URL of the current document.">Возвращает URL-адрес текущего документа.</summary>
      <returns vsli:raw="The URL of the current document.">URL-адрес текущего документа.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter">
      <summary vsli:raw="Represents a document referenced by a symbol store.">Представляет документ, на который ссылается хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetCheckSum(System.Guid,System.Byte[])">
      <summary vsli:raw="Sets checksum information.">Задает сведения о контрольной сумме.</summary>
      <param name="algorithmId" vsli:raw="The GUID representing the algorithm ID.">Идентификатор GUID, представляющий идентификатор алгоритма.</param>
      <param name="checkSum" vsli:raw="The checksum.">Контрольная сумма.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetSource(System.Byte[])">
      <summary vsli:raw="Stores the raw source for a document in the symbol store.">Сохраняет необработанный источник документа в хранилище символов.</summary>
      <param name="source" vsli:raw="The document source represented as unsigned bytes.">Источник документа, представленный байтами без знака.</param>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolMethod">
      <summary vsli:raw="Represents a method within a symbol store.">Представляет метод в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace">
      <summary vsli:raw="Gets the namespace that the current method is defined within.">Возвращает пространство имен, в котором определен текущий метод.</summary>
      <returns vsli:raw="The namespace that the current method is defined within.">Пространство имен, в котором определен текущий метод.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary vsli:raw="Gets the Microsoft intermediate language (MSIL) offset within the method that corresponds to the specified position.">Получает смещение на языке MSIL в методе, соответствующее заданной позиции.</summary>
      <param name="document" vsli:raw="The document for which the offset is requested.">Документ, для которого запрашивается смещение.</param>
      <param name="line" vsli:raw="The document line corresponding to the offset.">Строка документа, соответствующая смещению.</param>
      <param name="column" vsli:raw="The document column corresponding to the offset.">Столбец документа, соответствующий смещению.</param>
      <returns vsli:raw="The offset within the specified document.">Смещение в заданном документе.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters">
      <summary vsli:raw="Gets the parameters for the current method.">Получает параметры текущего метода.</summary>
      <returns vsli:raw="The array of parameters for the current method.">Массив параметров текущего метода.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary vsli:raw="Gets an array of start and end offset pairs that correspond to the ranges of Microsoft intermediate language (MSIL) that a given position covers within this method.">Возвращает массив пар начального и конечного смещения, соответствующих диапазонам на языке MSIL, занимаемым данной позицией в этом методе.</summary>
      <param name="document" vsli:raw="The document for which the offset is requested.">Документ, для которого запрашивается смещение.</param>
      <param name="line" vsli:raw="The document line corresponding to the ranges.">Строка документа, соответствующая этим диапазонам.</param>
      <param name="column" vsli:raw="The document column corresponding to the ranges.">Столбец документа, соответствующий этим диапазонам.</param>
      <returns vsli:raw="An array of start and end offset pairs.">Массив пар начального и конечного смещения.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)">
      <summary vsli:raw="Returns the most enclosing lexical scope when given an offset within a method.">Возвращает наиболее узкую внешнюю лексическую область, если задано смещение в методе.</summary>
      <param name="offset" vsli:raw="The byte offset within the method of the lexical scope.">Смещение в байтах лексической области в методе.</param>
      <returns vsli:raw="The most enclosing lexical scope for the given byte offset within the method.">Наиболее узкая внешняя лексическая область для заданного смещения в байтах в методе.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary vsli:raw="Gets the sequence points for the current method.">Возвращает точки следования для текущего метода.</summary>
      <param name="offsets" vsli:raw="The array of byte offsets from the beginning of the method for the sequence points.">Массив смещений в байтах от начала метода для точек следования.</param>
      <param name="documents" vsli:raw="The array of documents in which the sequence points are located.">Массив документов, в которых находятся точки следования.</param>
      <param name="lines" vsli:raw="The array of lines in the documents at which the sequence points are located.">Массив строк в документах, в которых находятся точки следования.</param>
      <param name="columns" vsli:raw="The array of columns in the documents at which the sequence points are located.">Массив столбцов в документах, в которых находятся точки следования.</param>
      <param name="endLines" vsli:raw="The array of lines in the documents at which the sequence points end.">Массив строк в документах, в которых заканчиваются точки следования.</param>
      <param name="endColumns" vsli:raw="The array of columns in the documents at which the sequence points end.">Массив столбцов в документах, в которых заканчиваются точки следования.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])">
      <summary vsli:raw="Gets the start and end positions for the source of the current method.">Возвращает начальную и конечную позицию для исходных документов текущего метода.</summary>
      <param name="docs" vsli:raw="The starting and ending source documents.">Начальный и конечный исходные документы.</param>
      <param name="lines" vsli:raw="The starting and ending lines in the corresponding source documents.">Начальная и конечная строки соответствующих исходных документов.</param>
      <param name="columns" vsli:raw="The starting and ending columns in the corresponding source documents.">Начальный и конечный столбцы соответствующих исходных документов.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the positions were defined; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если эти позиции определены; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.RootScope">
      <summary vsli:raw="Gets the root lexical scope for the current method. This scope encloses the entire method.">Получает корневую лексическую область для текущего метода. Эта область включает весь метод.</summary>
      <returns vsli:raw="The root lexical scope that encloses the entire method.">Корневая лексическая область, которая включает весь метод.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount">
      <summary vsli:raw="Gets a count of the sequence points in the method.">Возвращает число точек следования в методе.</summary>
      <returns vsli:raw="The count of the sequence points in the method.">Число точек следования в методе.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.Token">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; containing the metadata for the current method.">Возвращает объект <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />, содержащий метаданные для текущего метода.</summary>
      <returns vsli:raw="The metadata token for the current method.">Токен метаданных для текущего метода.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolNamespace">
      <summary vsli:raw="Represents a namespace within a symbol store.">Представляет пространство имен в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolNamespace.GetNamespaces">
      <summary vsli:raw="Gets the child members of the current namespace.">Получает дочерние члены текущего пространства имен.</summary>
      <returns vsli:raw="The child members of the current namespace.">Дочерние члены текущего пространства имен.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolNamespace.GetVariables">
      <summary vsli:raw="Gets all the variables defined at global scope within the current namespace.">Получает все переменные, определенные в глобальной области в текущем пространстве имен.</summary>
      <returns vsli:raw="The variables defined at global scope within the current namespace.">Переменные, определенные в глобальной области в текущем пространстве имен.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolNamespace.Name">
      <summary vsli:raw="Gets the current namespace.">Получает текущее пространство имен.</summary>
      <returns vsli:raw="The current namespace.">Текущее пространство имен.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolReader">
      <summary vsli:raw="Represents a symbol reader for managed code.">Представляет средство чтения символов для управляемого кода.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary vsli:raw="Gets a document specified by the language, vendor, and type.">Получает документ на основании заданного языка, поставщика и типа.</summary>
      <param name="url" vsli:raw="The URL that identifies the document.">URL-адрес, предназначенный для идентификации документа.</param>
      <param name="language" vsli:raw="The document language. You can specify this parameter as &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Язык документа. Этому параметру можно присвоить значение <see cref="F:System.Guid.Empty" />.</param>
      <param name="languageVendor" vsli:raw="The identity of the vendor for the document language. You can specify this parameter as &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Удостоверение поставщика языка документа. Этому параметру можно присвоить значение <see cref="F:System.Guid.Empty" />.</param>
      <param name="documentType" vsli:raw="The type of the document. You can specify this parameter as &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Тип документа. Этому параметру можно присвоить значение <see cref="F:System.Guid.Empty" />.</param>
      <returns vsli:raw="The specified document.">Заданный документ.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments">
      <summary vsli:raw="Gets an array of all documents defined in the symbol store.">Получает массив всех документов, определенных в хранилище символов.</summary>
      <returns vsli:raw="An array of all documents defined in the symbol store.">Массив всех документов, определенных в хранилище символов.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables">
      <summary vsli:raw="Gets all global variables in the module.">Получает все глобальные переменные в модуле.</summary>
      <returns vsli:raw="An array of all variables in the module.">Массив всех глобальных переменных в модуле.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Gets a symbol reader method object when given the identifier of a method.">Получает объект метода средства чтения символов для заданного идентификатора метода.</summary>
      <param name="method" vsli:raw="The metadata token of the method.">Токен метаданных метода.</param>
      <returns vsli:raw="The symbol reader method object for the specified method identifier.">Объект метода средства чтения символов для заданного идентификатора метода.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)">
      <summary vsli:raw="Gets a symbol reader method object when given the identifier of a method and its edit and continue version.">Получает объект метода средства чтения символов для заданных идентификатора метода и его версии в режиме "Изменить и продолжить".</summary>
      <param name="method" vsli:raw="The metadata token of the method.">Токен метаданных метода.</param>
      <param name="version" vsli:raw="The edit and continue version of the method.">Версия в режиме "Изменить и продолжить" этого метода.</param>
      <returns vsli:raw="The symbol reader method object for the specified method identifier.">Объект метода средства чтения символов для заданного идентификатора метода.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary vsli:raw="Gets a symbol reader method object that contains a specified position in a document.">Получает объект метода средства чтения символов, содержащий указанную позицию в документе.</summary>
      <param name="document" vsli:raw="The document in which the method is located.">Документ, в котором находится метод.</param>
      <param name="line" vsli:raw="The position of the line within the document. The lines are numbered, beginning with 1.">Позиция строки в документе. Нумерация строк начинается с 1.</param>
      <param name="column" vsli:raw="The position of column within the document. The columns are numbered, beginning with 1.">Позиция столбца в документе. Нумерация столбцов начинается с 1.</param>
      <returns vsli:raw="The reader method object for the specified position in the document.">Объект метода средства чтения для заданной позиции в документе.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces">
      <summary vsli:raw="Gets the namespaces that are defined in the global scope within the current symbol store.">Получает пространства имен, определенные в глобальной области в текущем хранилище символов.</summary>
      <returns vsli:raw="The namespaces defined in the global scope within the current symbol store.">Пространства имен, определенные в глобальной области в текущем хранилище символов.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)">
      <summary vsli:raw="Gets an attribute value when given the attribute name.">Получает значение атрибута для заданного имени атрибута.</summary>
      <param name="parent" vsli:raw="The metadata token for the object for which the attribute is requested.">маркер метаданных объекта, для которого запрашивается этот атрибут.</param>
      <param name="name" vsli:raw="The attribute name.">Имя атрибута.</param>
      <returns vsli:raw="The value of the attribute.">Значение атрибута.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Gets the variables that are not local when given the parent.">Получает переменные, не являющиеся локальными, для заданного родительского объекта.</summary>
      <param name="parent" vsli:raw="The metadata token for the type for which the variables are requested.">маркер метаданных типа, для которого запрашиваются эти переменные.</param>
      <returns vsli:raw="An array of variables for the parent.">Массив переменных для родительского объекта.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint">
      <summary vsli:raw="Gets the metadata token for the method that was specified as the user entry point for the module, if any.">Получает токен метаданных для метода, заданного в качестве точки входа пользователя для модуля (если существует).</summary>
      <returns vsli:raw="The metadata token for the method that is the user entry point for the module.">Токен метаданных для метода, который является точкой входа пользователя для модуля.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolScope">
      <summary vsli:raw="Represents a lexical scope within &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolMethod&quot; /&gt;, providing access to the start and end offsets of the scope, as well as its child and parent scopes.">Представляет лексическую область видимости в объекте <see cref="T:System.Diagnostics.SymbolStore.ISymbolMethod" />, обеспечивая доступ к начальному и конечному смещениям этой области, а также к ее дочерним и родительской областям.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetChildren">
      <summary vsli:raw="Gets the child lexical scopes of the current lexical scope.">Возвращает дочерние лексические области видимости текущей лексической области видимости.</summary>
      <returns vsli:raw="The child lexical scopes that of the current lexical scope.">Дочерние лексические области текущей лексической области.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetLocals">
      <summary vsli:raw="Gets the local variables within the current lexical scope.">Возвращает локальные переменные в текущей лексической области видимости.</summary>
      <returns vsli:raw="The local variables within the current lexical scope.">Локальные переменные в текущей лексической области видимости.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetNamespaces">
      <summary vsli:raw="Gets the namespaces that are used within the current scope.">Получает пространства имен, используемые в текущей области.</summary>
      <returns vsli:raw="The namespaces that are used within the current scope.">Пространства имен, используемые в текущей области.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.EndOffset">
      <summary vsli:raw="Gets the end offset of the current lexical scope.">Возвращает конечное смещение текущей лексической области видимости.</summary>
      <returns vsli:raw="The end offset of the current lexical scope.">Конечное смещение текущей лексической области.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.Method">
      <summary vsli:raw="Gets the method that contains the current lexical scope.">Возвращает метод, содержащий текущую лексическую область видимости.</summary>
      <returns vsli:raw="The method that contains the current lexical scope.">Метод, содержащий текущую лексическую область видимости.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.Parent">
      <summary vsli:raw="Gets the parent lexical scope of the current scope.">Возвращает родительскую лексическую область видимости текущей области видимости.</summary>
      <returns vsli:raw="The parent lexical scope of the current scope.">Родительская лексическая область текущей области.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.StartOffset">
      <summary vsli:raw="Gets the start offset of the current lexical scope.">Возвращает начальное смещение текущей лексической области видимости.</summary>
      <returns vsli:raw="The start offset of the current lexical scope.">Начальное смещение текущей лексической области.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolVariable">
      <summary vsli:raw="Represents a variable within a symbol store.">Представляет переменную в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolVariable.GetSignature">
      <summary vsli:raw="Gets the variable signature.">Возвращает подпись переменной.</summary>
      <returns vsli:raw="The variable signature as an opaque blob.">Подпись переменной в виде непрозрачного большого двоичного объекта.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField1">
      <summary vsli:raw="Gets the first address of a variable.">Возвращает первый адрес переменной.</summary>
      <returns vsli:raw="The first address of the variable.">Первый адрес переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField2">
      <summary vsli:raw="Gets the second address of a variable.">Возвращает второй адрес переменной.</summary>
      <returns vsli:raw="The second address of the variable.">Второй адрес переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField3">
      <summary vsli:raw="Gets the third address of a variable.">Возвращает третий адрес переменной.</summary>
      <returns vsli:raw="The third address of the variable.">Третий адрес переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressKind">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymAddressKind&quot; /&gt; value describing the type of the address.">Возвращает значение <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />, описывающее тип адреса.</summary>
      <returns vsli:raw="The type of the address. One of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymAddressKind&quot; /&gt; values.">Тип адреса. Одно из значений перечисления <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.Attributes">
      <summary vsli:raw="Gets the attributes of the variable.">Возвращает атрибуты переменной.</summary>
      <returns vsli:raw="The variable attributes.">Атрибуты переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.EndOffset">
      <summary vsli:raw="Gets the end offset of a variable within the scope of the variable.">Возвращает конечное смещение переменной в области этой переменной.</summary>
      <returns vsli:raw="The end offset of the variable.">Конечное смещение переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.Name">
      <summary vsli:raw="Gets the name of the variable.">Возвращает имя переменной.</summary>
      <returns vsli:raw="The name of the variable.">Имя переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.StartOffset">
      <summary vsli:raw="Gets the start offset of the variable within the scope of the variable.">Возвращает начальное смещение переменной в области этой переменной.</summary>
      <returns vsli:raw="The start offset of the variable.">Начальное смещение переменной.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolWriter">
      <summary vsli:raw="Represents a symbol writer for managed code.">Представляет модуль записи символов для управляемого кода.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.Close">
      <summary vsli:raw="Closes &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolWriter&quot; /&gt; and commits the symbols to the symbol store.">Закрывает интерфейс <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> и сохраняет символы в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod">
      <summary vsli:raw="Closes the current method.">Закрывает текущий метод.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace">
      <summary vsli:raw="Closes the most recent namespace.">Закрывает последнее пространство имен.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
      <summary vsli:raw="Closes the current lexical scope.">Закрывает текущую лексическую область видимости.</summary>
      <param name="endOffset" vsli:raw="The points past the last instruction in the scope.">точки после последней инструкции в области.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary vsli:raw="Defines a source document.">Определяет исходный документ.</summary>
      <param name="url" vsli:raw="The URL that identifies the document.">URL-адрес, предназначенный для идентификации документа.</param>
      <param name="language" vsli:raw="The document language. This parameter can be &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Язык документа. Этот параметр может иметь значение <see cref="F:System.Guid.Empty" />.</param>
      <param name="languageVendor" vsli:raw="The identity of the vendor for the document language. This parameter can be &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Удостоверение поставщика языка документа. Этот параметр может иметь значение <see cref="F:System.Guid.Empty" />.</param>
      <param name="documentType" vsli:raw="The type of the document. This parameter can be &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Тип документа. Этот параметр может иметь значение <see cref="F:System.Guid.Empty" />.</param>
      <returns vsli:raw="The object that represents the document.">Объект, представляющий документ.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines a field in a type or a global field.">Определяет поле в типе или глобальное поле.</summary>
      <param name="parent" vsli:raw="The metadata type or method token.">Тип метаданных или маркер метода.</param>
      <param name="name" vsli:raw="The field name.">Имя поля.</param>
      <param name="attributes" vsli:raw="A bitwise combination of the field attributes.">Побитовое сочетание атрибутов полей.</param>
      <param name="signature" vsli:raw="The field signature.">Подпись поля.</param>
      <param name="addrKind" vsli:raw="The address types for &lt;paramref name=&quot;addr1&quot; /&gt; and &lt;paramref name=&quot;addr2&quot; /&gt;.">Типы адресов <paramref name="addr1" /> и <paramref name="addr2" />.</param>
      <param name="addr1" vsli:raw="The first address for the field specification.">Первый адрес для спецификации поля.</param>
      <param name="addr2" vsli:raw="The second address for the field specification.">Второй адрес для спецификации поля.</param>
      <param name="addr3" vsli:raw="The third address for the field specification.">Третий адрес для спецификации поля.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines a single global variable.">Определяет одну глобальную переменную.</summary>
      <param name="name" vsli:raw="The global variable name.">Имя глобальной переменной.</param>
      <param name="attributes" vsli:raw="A bitwise combination of the global variable attributes.">Побитовое сочетание атрибутов глобальной переменной.</param>
      <param name="signature" vsli:raw="The global variable signature.">Подпись глобальной переменной.</param>
      <param name="addrKind" vsli:raw="The address types for &lt;paramref name=&quot;addr1&quot; /&gt;, &lt;paramref name=&quot;addr2&quot; /&gt;, and &lt;paramref name=&quot;addr3&quot; /&gt;.">Типы адресов <paramref name="addr1" />, <paramref name="addr2" /> и <paramref name="addr3" />.</param>
      <param name="addr1" vsli:raw="The first address for the global variable specification.">Первый адрес для спецификации глобальной переменной.</param>
      <param name="addr2" vsli:raw="The second address for the global variable specification.">Второй адрес для спецификации глобальной переменной.</param>
      <param name="addr3" vsli:raw="The third address for the global variable specification.">Третий адрес для спецификации глобальной переменной.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines a single variable in the current lexical scope.">Определяет одну переменную в текущей лексической области видимости.</summary>
      <param name="name" vsli:raw="The local variable name.">Имя локальной переменной.</param>
      <param name="attributes" vsli:raw="A bitwise combination of the local variable attributes.">Побитовое сочетание атрибутов локальной переменной.</param>
      <param name="signature" vsli:raw="The local variable signature.">Подпись локальной переменной.</param>
      <param name="addrKind" vsli:raw="The address types for &lt;paramref name=&quot;addr1&quot; /&gt;, &lt;paramref name=&quot;addr2&quot; /&gt;, and &lt;paramref name=&quot;addr3&quot; /&gt;.">Типы адресов <paramref name="addr1" />, <paramref name="addr2" /> и <paramref name="addr3" />.</param>
      <param name="addr1" vsli:raw="The first address for the local variable specification.">Первый адрес для спецификации локальной переменной.</param>
      <param name="addr2" vsli:raw="The second address for the local variable specification.">Второй адрес для спецификации локальной переменной.</param>
      <param name="addr3" vsli:raw="The third address for the local variable specification.">Третий адрес для спецификации локальной переменной.</param>
      <param name="startOffset" vsli:raw="The start offset for the variable. If this parameter is zero, it is ignored and the variable is defined throughout the entire scope. If the parameter is nonzero, the variable falls within the offsets of the current scope.">Начальное смещение для переменной. Если этот параметр равен нулю, он не обрабатывается и переменная определяется для всей области. Если параметр имеет ненулевое значение, переменная находится в границах смещений текущей области.</param>
      <param name="endOffset" vsli:raw="The end offset for the variable. If this parameter is zero, it is ignored and the variable is defined throughout the entire scope. If the parameter is nonzero, the variable falls within the offsets of the current scope.">Конечное смещение для переменной. Если этот параметр равен нулю, он не обрабатывается и переменная определяется для всей области. Если параметр имеет ненулевое значение, переменная находится в границах смещений текущей области.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines a single parameter in the current method. The type of each parameter is taken from its position within the signature of the method.">Определяет один параметр в текущем методе. Тип каждого параметра извлекается из подписи метода в соответствии с его положением.</summary>
      <param name="name" vsli:raw="The parameter name.">Имя параметра.</param>
      <param name="attributes" vsli:raw="A bitwise combination of the parameter attributes.">Побитовое сочетание атрибутов параметра.</param>
      <param name="sequence" vsli:raw="The parameter signature.">Подпись параметра.</param>
      <param name="addrKind" vsli:raw="The address types for &lt;paramref name=&quot;addr1&quot; /&gt;, &lt;paramref name=&quot;addr2&quot; /&gt;, and &lt;paramref name=&quot;addr3&quot; /&gt;.">Типы адресов <paramref name="addr1" />, <paramref name="addr2" /> и <paramref name="addr3" />.</param>
      <param name="addr1" vsli:raw="The first address for the parameter specification.">Первый адрес для спецификации параметра.</param>
      <param name="addr2" vsli:raw="The second address for the parameter specification.">Второй адрес для спецификации параметра.</param>
      <param name="addr3" vsli:raw="The third address for the parameter specification.">Третий адрес для спецификации параметра.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary vsli:raw="Defines a group of sequence points within the current method.">Определяет группу точек следования в текущем методе.</summary>
      <param name="document" vsli:raw="The document object for which the sequence points are being defined.">Объект документа, для которого определяются точки следования.</param>
      <param name="offsets" vsli:raw="The sequence point offsets measured from the beginning of methods.">Смещения точек следования определяются от начала методов.</param>
      <param name="lines" vsli:raw="The document lines for the sequence points.">Строки документа для точек следования.</param>
      <param name="columns" vsli:raw="The document positions for the sequence points.">Позиции в документе для точек следования.</param>
      <param name="endLines" vsli:raw="The document end lines for the sequence points.">Конечные строки документа для точек следования.</param>
      <param name="endColumns" vsli:raw="The document end positions for the sequence points.">Конечные позиции документа для точек следования.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
      <summary vsli:raw="Sets the metadata emitter interface to associate with a writer.">Задает интерфейс включения метаданных, который требуется связать со средством записи.</summary>
      <param name="emitter" vsli:raw="The metadata emitter interface.">Интерфейс порождения метаданных.</param>
      <param name="filename" vsli:raw="The file name for which the debugging symbols are written. Some writers require a file name, and others do not. If a file name is specified for a writer that does not use file names, this parameter is ignored.">Имя файла, для которого записываются символы отладки. Имя файла требуется не для всех средств записи. Если имя файла задано для модуля записи, который не использует имена файлов, этот параметр пропускается.</param>
      <param name="fFullBuild" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; indicates that this is a full rebuild; &lt;see langword=&quot;false&quot; /&gt; indicates that this is an incremental compilation.">Значение <see langword="true" /> указывает, что это полное перестроение; <see langword="false" /> — что это добавочная компиляция.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Opens a method to place symbol information into.">Открывает метод для размещения символьной информации.</summary>
      <param name="method" vsli:raw="The metadata token for the method to be opened.">Токен метаданных для открываемого метода.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
      <summary vsli:raw="Opens a new namespace.">Открывает новое пространство имен.</summary>
      <param name="name" vsli:raw="The name of the new namespace.">Имя нового пространства имен.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
      <summary vsli:raw="Opens a new lexical scope in the current method.">Открывает новую лексическую область видимости в текущем методе.</summary>
      <param name="startOffset" vsli:raw="The offset, in bytes, from the beginning of the method to the first instruction in the lexical scope.">Смещение в байтах от начала метода до первой инструкции в лексической области.</param>
      <returns vsli:raw="An opaque scope identifier that can be used with &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)&quot; /&gt; to define the start and end offsets of a scope at a later time. In this case, the offsets passed to &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)&quot; /&gt; and &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)&quot; /&gt; are ignored. A scope identifier is valid only in the current method.">Непрозрачный идентификатор области видимости, который можно использовать с методом <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> для определения начального и конечного смещений области видимости в дальнейшем. В этом случае смещения, переданные методам <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" /> и <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" />, пропускаются. Идентификатор области видимости действителен только в текущем методе.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
      <summary vsli:raw="Specifies the true start and end of a method within a source file. Use &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)&quot; /&gt; to specify the extent of a method, independent of the sequence points that exist within the method.">Указывает истинные начало и конец метода в исходном файле. Метод <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" /> следует использовать для задания длины метода независимо от точек следования, имеющихся в методе.</summary>
      <param name="startDoc" vsli:raw="The document that contains the starting position.">Документ, в котором находится начальная позиция.</param>
      <param name="startLine" vsli:raw="The starting line number.">Номер начальной строки.</param>
      <param name="startColumn" vsli:raw="The starting column.">Начальный столбец.</param>
      <param name="endDoc" vsli:raw="The document that contains the ending position.">Документ, в котором находится конечная позиция.</param>
      <param name="endLine" vsli:raw="The ending line number.">Номер конечной строки.</param>
      <param name="endColumn" vsli:raw="The ending column number.">Номер конечного столбца.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines the offset range for the specified lexical scope.">Определяет диапазон смещений для заданной лексической области видимости.</summary>
      <param name="scopeID" vsli:raw="The identifier of the lexical scope.">Идентификатор лексической области.</param>
      <param name="startOffset" vsli:raw="The byte offset of the beginning of the lexical scope.">Смещение начала лексической области в байтах.</param>
      <param name="endOffset" vsli:raw="The byte offset of the end of the lexical scope.">Смещение конца лексической области в байтах.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
      <summary vsli:raw="Defines an attribute when given the attribute name and the attribute value.">Определяет атрибут для заданного имени и значения атрибута.</summary>
      <param name="parent" vsli:raw="The metadata token for which the attribute is being defined.">Токен метаданных, для которого определяется атрибут.</param>
      <param name="name" vsli:raw="The attribute name.">Имя атрибута.</param>
      <param name="data" vsli:raw="The attribute value.">Значение атрибута.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
      <summary vsli:raw="Sets the underlying &lt;see langword=&quot;ISymUnmanagedWriter&quot; /&gt; (the corresponding unmanaged interface) that a managed &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolWriter&quot; /&gt; uses to emit symbols.">Задает основной интерфейс <see langword="ISymUnmanagedWriter" /> (соответствующий неуправляемый интерфейс), который используется управляемым интерфейсом <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> для генерации символов.</summary>
      <param name="underlyingWriter" vsli:raw="A pointer to code that represents the underlying writer.">Указатель на код, представляющий основное средство записи.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Identifies the user-defined method as the entry point for the current module.">Идентифицирует пользовательский метод в качестве точки входа для текущего модуля.</summary>
      <param name="entryMethod" vsli:raw="The metadata token for the method that is the user entry point.">Токен метаданных для метода, который является пользовательской точкой входа.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
      <summary vsli:raw="Specifies that the given, fully qualified namespace name is used within the open lexical scope.">Указывает, что в открытой лексической области видимости используется заданное полное имя пространства имен.</summary>
      <param name="fullName" vsli:raw="The fully qualified name of the namespace.">Полное имя пространства имен.</param>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymAddressKind">
      <summary vsli:raw="Specifies address types for local variables, parameters, and fields in the methods &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)&quot; /&gt;, &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)&quot; /&gt;, and &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)&quot; /&gt; of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolWriter&quot; /&gt; interface.">Задает типы адресов локальных переменных, параметров и полей в методах <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />, <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" /> и <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" /> интерфейса <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.BitField">
      <summary vsli:raw="A bit field. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the position where the field starts, and the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the field length.">Битовое поле. Параметр <paramref name="addr1" /> представляет позицию, с которой начинается поле, а параметр <paramref name="addr2" /> — длину поля.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.ILOffset">
      <summary vsli:raw="A Microsoft intermediate language (MSIL) offset. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the MSIL local variable or parameter index.">Смещение на языке MSIL. Параметр <paramref name="addr1" /> представляет индекс локальной переменной или параметра языка MSIL.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset">
      <summary vsli:raw="A native offset. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the offset from the start of the parent.">Исходное смещение. Параметр <paramref name="addr1" /> — это смещение от начала родительского объекта.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister">
      <summary vsli:raw="A native register address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the register in which the variable is stored.">Адрес машинного регистра. Параметр <paramref name="addr1" /> — это регистр, в котором хранится переменная.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister">
      <summary vsli:raw="A register-relative address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the low-order register, and the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the high-order register.">Относительный адрес регистра. Параметр <paramref name="addr1" /> — младший регистр, параметр <paramref name="addr2" /> — старший регистр.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative">
      <summary vsli:raw="A register-relative address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the register, and the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the offset.">Относительный адрес регистра. Параметр <paramref name="addr1" /> — регистр, параметр <paramref name="addr2" /> — смещение.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack">
      <summary vsli:raw="A register-relative address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the low-order register, the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the stack register, and the &lt;paramref name=&quot;addr3&quot; /&gt; parameter is the offset from the stack pointer to the high-order part of the value.">Относительный адрес регистра. Параметр <paramref name="addr1" /> — младший регистр, параметр <paramref name="addr2" /> — регистр стека, а параметр <paramref name="addr3" /> — смещение от указателя стека до старшей части значения.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA">
      <summary vsli:raw="A native Relevant Virtual Address (RVA). The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the RVA in the module.">Исходный относительный виртуальный адрес (RVA). Параметр <paramref name="addr1" /> — RVA-адрес в модуле.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset">
      <summary vsli:raw="A native section offset. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the section, and the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the offset.">Исходное смещение раздела. Параметр <paramref name="addr1" /> представляет раздел, а параметр <paramref name="addr2" /> — смещение.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister">
      <summary vsli:raw="A register-relative address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the stack register, the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the offset from the stack pointer to the low-order part of the value, and the &lt;paramref name=&quot;addr3&quot; /&gt; parameter is the high-order register.">Относительный адрес регистра. Параметр <paramref name="addr1" /> — регистр стека, параметр <paramref name="addr2" /> — смещение от указателя стека до младшей части значения, параметр <paramref name="addr3" /> — старший регистр.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymbolToken">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure is an object representation of a token that represents symbolic information.">Структура <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> — это объектное представление маркера, представляющего символьные данные.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure when given a value.">Инициализирует новый экземпляр структуры <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> для заданного значения.</summary>
      <param name="val" vsli:raw="The value to be used for the token.">Значение, используемое для маркера.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Determines whether &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance.">Определяет, равен ли объект <paramref name="obj" /> данному экземпляру.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; to check.">Проверяемый элемент <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение параметра <paramref name="obj" /> равно данному экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Object)">
      <summary vsli:raw="Determines whether &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; and is equal to this instance.">Определяет, является ли объект <paramref name="obj" /> экземпляром класса <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> и равен ли этому экземпляру.</summary>
      <param name="obj" vsli:raw="The object to check.">Объект для проверки.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; and is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект <paramref name="obj" /> является экземпляром класса <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> и равен этому экземпляру, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.GetHashCode">
      <summary vsli:raw="Generates the hash code for the current token.">Создает хэш-код для текущего маркера.</summary>
      <returns vsli:raw="The hash code for the current token.">Хэш-код для текущего маркера.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.GetToken">
      <summary vsli:raw="Gets the value of the current token.">Получает значение текущего маркера.</summary>
      <returns vsli:raw="The value of the current token.">Значение текущего маркера.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.op_Equality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Returns a value indicating whether two &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; objects are equal.">Возвращает значение, показывающее, равны ли два объекта <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</summary>
      <param name="a" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure.">Структура <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <param name="b" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure.">Структура <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="a" /> и <paramref name="b" /> равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Returns a value indicating whether two &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; objects are not equal.">Возвращает значение, показывающее, являются ли два объекта <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> неравными.</summary>
      <param name="a" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure.">Структура <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <param name="b" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure.">Структура <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="a" /> и <paramref name="b" /> не равны друг другу; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymDocumentType">
      <summary vsli:raw="Holds the public GUIDs for document types to be used with the symbol store.">Хранит открытые идентификаторы GUID типов документов, используемые в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymDocumentType.Text">
      <summary vsli:raw="Specifies the GUID of the document type to be used with the symbol store.">Задает идентификатор GUID типа документов, используемый в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymDocumentType&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.SymbolStore.SymDocumentType" />.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymLanguageType">
      <summary vsli:raw="Holds the public GUIDs for language types to be used with the symbol store.">Хранит открытые идентификаторы GUID для типов языков, используемые в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Basic">
      <summary vsli:raw="Specifies the GUID of the Basic language type to be used with the symbol store.">Задает идентификатор GUID для типа языка Basic, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.C">
      <summary vsli:raw="Specifies the GUID of the C language type to be used with the symbol store.">Задает идентификатор GUID для типа языка C, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Cobol">
      <summary vsli:raw="Specifies the GUID of the Cobol language type to be used with the symbol store.">Задает идентификатор GUID для типа языка Cobol, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.CPlusPlus">
      <summary vsli:raw="Specifies the GUID of the C++ language type to be used with the symbol store.">Задает идентификатор GUID для типа языка C++, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.CSharp">
      <summary vsli:raw="Specifies the GUID of the C# language type to be used with the symbol store.">Задает идентификатор GUID для типа языка C#, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.ILAssembly">
      <summary vsli:raw="Specifies the GUID of the ILAssembly language type to be used with the symbol store.">Задает идентификатор GUID для типа языка ILAssembly, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Java">
      <summary vsli:raw="Specifies the GUID of the Java language type to be used with the symbol store.">Задает идентификатор GUID для типа языка Java, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.JScript">
      <summary vsli:raw="Specifies the GUID of the JScript language type to be used with the symbol store.">Задает идентификатор GUID для типа языка JScript, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.MCPlusPlus">
      <summary vsli:raw="Specifies the GUID of the C++ language type to be used with the symbol store.">Задает идентификатор GUID для типа языка C++, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Pascal">
      <summary vsli:raw="Specifies the GUID of the Pascal language type to be used with the symbol store.">Задает идентификатор GUID для типа языка Pascal, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.SMC">
      <summary vsli:raw="Specifies the GUID of the SMC language type to be used with the symbol store.">Задает идентификатор GUID для типа языка SMC, используемый в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymLanguageType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymLanguageType&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.SymbolStore.SymLanguageType" />.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymLanguageVendor">
      <summary vsli:raw="Holds the public GUIDs for language vendors to be used with the symbol store.">Хранит открытые идентификаторы GUID поставщиков языков, используемые в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageVendor.Microsoft">
      <summary vsli:raw="Specifies the GUID of the Microsoft language vendor.">Задает идентификатор GUID поставщика языка Microsoft.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymLanguageVendor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymLanguageVendor&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.SymbolStore.SymLanguageVendor" />.</summary>
    </member>
  </members>
</doc>