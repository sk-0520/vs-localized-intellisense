<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Formats.Asn1</name>
  </assembly>
  <members>
    <member name="T:System.Formats.Asn1.Asn1Tag">
      <summary vsli:raw="This type represents an ASN.1 tag, as described in ITU-T Recommendation X.680.">Этот тип представляет тег ASN.1, как описано в рекомендации ITU-T X. 680.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Boolean">
      <summary vsli:raw="Represents the universal class tag for a Boolean value.">Представляет тег универсального класса для логического значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedBitString">
      <summary vsli:raw="Represents the universal class tag for a Bit String value under a constructed encoding.">Представляет тег универсального класса для значения в формате битовой строки при кодировании с использованием конструктора.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedOctetString">
      <summary vsli:raw="Represents the universal class tag for a Octet String value under a constructed encoding.">Представляет тег универсального класса для значения в формате строки октетов при кодировании с использованием конструктора.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Enumerated">
      <summary vsli:raw="Represents the universal class tag for an Enumerated value.">Представляет тег универсального класса для перечислимого значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.GeneralizedTime">
      <summary vsli:raw="Represents the universal class tag for a GeneralizedTime value.">Представляет тег универсального класса для значения GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Integer">
      <summary vsli:raw="Represents the universal class tag for an Integer value.">Представляет тег универсального класса для целочисленного значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Null">
      <summary vsli:raw="Represents the universal class tag for a &lt;see langword=&quot;null&quot; /&gt; value.">Представляет тег универсального класса для значения <see langword="null" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ObjectIdentifier">
      <summary vsli:raw="Represents the universal class tag for an Object Identifier value.">Представляет тег универсального класса для значения идентификатора объекта.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveBitString">
      <summary vsli:raw="Represents the universal class tag for a Bit String value under a primitive encoding.">Представляет тег универсального класса для значения в формате битовой строки при примитивном кодировании.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveOctetString">
      <summary vsli:raw="Represents the universal class tag for an Octet String value under a primitive encoding.">Представляет тег универсального класса для значения в формате строки октетов при примитивном кодировании.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Sequence">
      <summary vsli:raw="Represents the universal class tag for a Sequence value (always a constructed encoding).">Представляет тег универсального класса для значения Sequence при кодировании с использованием конструктора.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.SetOf">
      <summary vsli:raw="Represents the universal class tag for a SetOf value (always a constructed encoding).">Представляет тег универсального класса для значения SetOf при кодировании с использованием конструктора.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.UtcTime">
      <summary vsli:raw="Represents the universal class tag for a UtcTime value.">Представляет тег универсального класса для значения UtcTime.</summary>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.TagClass,System.Int32,System.Boolean)">
      <summary vsli:raw="Create an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; for a specified value within a specified tag class.">Создание <see cref="T:System.Formats.Asn1.Asn1Tag" /> для указанного значения в заданном классе тегов.</summary>
      <param name="tagClass" vsli:raw="The tag class for this tag.">Класс тегов для этого тега.</param>
      <param name="tagValue" vsli:raw="The numeric value for this tag.">Числовое значение для этого тега.</param>
      <param name="isConstructed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for a constructed tag, &lt;see langword=&quot;false&quot; /&gt; for a primitive tag.">Значение <see langword="true" /> для сконструированного тега и значение <see langword="false" /> для примитивного тега.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;tagClass&quot; /&gt; is not a known value.&#xA;             -or- &#xA;               &lt;paramref name=&quot;tagValue&quot; /&gt; is negative.">
        <paramref name="tagClass" /> не является известным значением.
—или— <paramref name="tagValue" /> является отрицательным.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.UniversalTagNumber,System.Boolean)">
      <summary vsli:raw="Create an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; for a tag from the UNIVERSAL class.">Создание <see cref="T:System.Formats.Asn1.Asn1Tag" /> для тега из универсального класса.</summary>
      <param name="universalTagNumber" vsli:raw="One of the enumeration values that specifies the semantic type for this tag.">Одно из значений перечисления, которое задает семантический тип для данного тега.</param>
      <param name="isConstructed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for a constructed tag, &lt;see langword=&quot;false&quot; /&gt; for a primitive tag.">Значение <see langword="true" /> для сконструированного тега и значение <see langword="false" /> для примитивного тега.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;universalTagNumber&quot; /&gt; is not a known value.">
        <paramref name="universalTagNumber" /> не является известным значением.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsConstructed">
      <summary vsli:raw="Produces a tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Создает тег с одинаковыми значениями <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> и <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, у которого <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> имеет значение <see langword="true" />.</summary>
      <returns vsli:raw="A tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Тег с одинаковыми значениями <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> и <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, у которого <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> имеет значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsPrimitive">
      <summary vsli:raw="Produces a tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">Создает тег с одинаковыми значениями <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> и <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, у которого <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> имеет значение <see langword="false" />.</summary>
      <returns vsli:raw="A tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">Тег с одинаковыми значениями <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> и <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, у которого <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> имеет значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize">
      <summary vsli:raw="Reports the number of bytes required for the BER-encoding of this tag.">Сообщает число байтов, необходимых для кодирования этого тега с использованием BER.</summary>
      <returns vsli:raw="The number of bytes required for the BER-encoding of this tag.">Число байтов, необходимых для кодирования этого тега с использованием BER.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Decode(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary vsli:raw="Reads a BER-encoded tag which starts at &lt;paramref name=&quot;source&quot; /&gt;.">Считывает тег, закодированный с использованием BER и начинающийся с <paramref name="source" />.</summary>
      <param name="source" vsli:raw="The read only byte sequence whose beginning is a BER-encoded tag.">Последовательность байтов только для чтения, начало которой является тегом, закодированным с использованием BER.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains the number of bytes that contributed to the encoded tag. This parameter is treated as uninitialized.">При возврате из этого метода содержит число байтов, которые учитываются в закодированном теге. Этот параметр обрабатывается как неинициализированный.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The provided data does not decode to a tag.">Предоставленные данные не декодируются в тег.</exception>
      <returns vsli:raw="The decoded tag.">Декодированный тег.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Encode(System.Span{System.Byte})">
      <summary vsli:raw="Writes the BER-encoded form of this tag to &lt;paramref name=&quot;destination&quot; /&gt;.">Записывает закодированную с использованием BER форму этого тега в <paramref name="destination" />.</summary>
      <param name="destination" vsli:raw="The start of where the encoded tag should be written.">Начало места, в которое должен быть записан кодированный тег.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt;.&lt;see cref=&quot;P:System.Span`1.Length&quot; /&gt; &amp;lt; &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt;.">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />.</exception>
      <returns vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Число байтов, записанных в <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;other&quot; /&gt; has the same encoding as this tag.">Проверяет, совпадает ли кодирование у <paramref name="other" /> и этого тега.</summary>
      <param name="other" vsli:raw="Tag to test for equality.">Тег для проверки на равенство.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; has the same values for &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt;, &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt;, and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">Возвращает значение <see langword="true" />, если <paramref name="other" /> имеет одинаковые значения для <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />, <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> и <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Object)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;obj&quot; /&gt; is an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; with the same encoding as this tag.">Проверяет, является ли <paramref name="obj" /> элементом <see cref="T:System.Formats.Asn1.Asn1Tag" /> с таким же кодированием, как у этого тега.</summary>
      <param name="obj" vsli:raw="Object to test for value equality.">Объект для проверки на равенство значений</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is not an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt;, &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)&quot; /&gt; otherwise.">Возвращает значение <see langword="false" />, если значение <paramref name="obj" /> не равно <see cref="T:System.Formats.Asn1.Asn1Tag" />; в противном случае возвращает значение <see cref="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Возвращает хэш-код данного экземпляра.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.HasSameClassAndValue(System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;other&quot; /&gt; has the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values as this tag, and does not compare &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt;.">Проверяет, имеет ли <paramref name="other" /> те же значения <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> и <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, что и этот тег, и не сравнивает <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />.</summary>
      <param name="other" vsli:raw="Tag to test for concept equality.">Тег для проверки на равенство концепций.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; has the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; as this tag, &lt;see langword=&quot;false&quot; /&gt; otherwise.">Возвращает значение <see langword="true" />, если <paramref name="other" /> имеет такие же <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> и <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, что и данный тег; в противном случае возвращает <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Equality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if two &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; values have the same BER encoding.">Проверяет, применяется ли для двух значений <see cref="T:System.Formats.Asn1.Asn1Tag" /> одинаковое кодирование с использованием BER.</summary>
      <param name="left" vsli:raw="The first value to compare.">Первое сравниваемое значение.</param>
      <param name="right" vsli:raw="The second value to compare.">Второе сравниваемое значение.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; have the same BER encoding, &lt;see langword=&quot;false&quot; /&gt; otherwise.">Возвращает значение <see langword="true" />, если для <paramref name="left" /> и <paramref name="right" /> применяется одинаковое кодирование с использованием BER; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Inequality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if two &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; values have a different BER encoding.">Проверяет, применяется ли для двух значений <see cref="T:System.Formats.Asn1.Asn1Tag" /> разное кодирование с использованием BER.</summary>
      <param name="left" vsli:raw="The first value to compare.">Первое сравниваемое значение.</param>
      <param name="right" vsli:raw="The second value to compare.">Второе сравниваемое значение.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; have a different BER encoding, &lt;see langword=&quot;false&quot; /&gt; otherwise.">Возвращает значение <see langword="true" />, если для <paramref name="left" /> и <paramref name="right" /> применяется разное кодирование с использованием BER; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.ToString">
      <summary vsli:raw="Provides a text representation of this tag suitable for debugging.">Предоставляет текстовое представление этого тега, подходящее для отладки.</summary>
      <returns vsli:raw="A text representation of this tag suitable for debugging.">Текстовое представление этого тега, подходящее для отладки.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryDecode(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.Asn1Tag@,System.Int32@)">
      <summary vsli:raw="Attempts to read a BER-encoded tag which starts at &lt;paramref name=&quot;source&quot; /&gt;.">Пытается считать тег, закодированный с использованием BER и начинающийся с <paramref name="source" />.</summary>
      <param name="source" vsli:raw="The read only byte sequence whose beginning is a BER-encoded tag.">Последовательность байтов только для чтения, начало которой является тегом, закодированным с использованием BER.</param>
      <param name="tag" vsli:raw="The decoded tag.">Декодированный тег.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains the number of bytes that contributed to the encoded tag, 0 on failure. This parameter is treated as uninitialized.">При возврате из этого метода содержит число байтов, которые учитываются в закодированном теге, или 0 в случае сбоя. Этот параметр обрабатывается как неинициализированный.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a tag was correctly decoded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Возвращает значение <see langword="true" />, если тег декодирован правильно; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to write the BER-encoded form of this tag to &lt;paramref name=&quot;destination&quot; /&gt;.">Пытается записать закодированную с использованием BER форму этого тега в <paramref name="destination" />.</summary>
      <param name="destination" vsli:raw="The start of where the encoded tag should be written.">Начало места, в которое должен быть записан кодированный тег.</param>
      <param name="bytesWritten" vsli:raw="Receives the value from &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt; on success, 0 on failure.">Получает значение от <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" /> при успешном выполнении или 0 при сбое.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt;.&lt;see cref=&quot;P:System.Span`1.Length&quot; /&gt; &amp;lt; &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt;(), &lt;see langword=&quot;true&quot; /&gt; otherwise.">Возвращает значение <see langword="false" />, если <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />(); в противном случае возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.IsConstructed">
      <summary vsli:raw="Indicates if the tag represents a constructed encoding (&lt;see langword=&quot;true&quot; /&gt;), or a primitive encoding (&lt;see langword=&quot;false&quot; /&gt;).">Указывает, какое кодирование представляет тег: с использованием конструктора (<see langword="true" />) или примитивное (<see langword="false" />).</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagClass">
      <summary vsli:raw="The tag class to which this tag belongs.">Класс тегов, к которому принадлежит этот тег.</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagValue">
      <summary vsli:raw="The numeric value for this tag.">Числовое значение для этого тега.</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnContentException">
      <summary vsli:raw="The exception that is thrown when an encoded ASN.1 value cannot be successfully decoded.">Исключение, которое появляется, если не удается декодировать закодированное значение ASN.1.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the default message.">Инициализирует новый экземпляр класса <see cref="T:System.Formats.Asn1.AsnContentException" /> с использованием сообщения по умолчанию.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Formats.Asn1.AsnContentException" /> с сериализованными данными.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the provided message.">Инициализирует новый экземпляр класса <see cref="T:System.Formats.Asn1.AsnContentException" /> с использованием указанного сообщения.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the provided message and exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Formats.Asn1.AsnContentException" /> с использованием указанного сообщения и исключения, которое стало причиной этого исключения.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">Исключение, которое является причиной текущего исключения.</param>
    </member>
    <member name="T:System.Formats.Asn1.AsnDecoder">
      <summary vsli:raw="Provides stateless methods for decoding BER-encoded, CER-encoded, and DER-encoded ASN.1 data.">Предоставляет методы без отслеживания состояния для декодирования данных ASN.1, кодированных с помощью BER, CER или DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents in a new array.">Считывает значение в формате битовой строки из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, возвращая содержимое в новом массиве.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">При успешном выполнении получает количество битов в последнем байте, которые были обозначены модулем записи как "неиспользованные".
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="An array containing the contents of the Bit String value.">Массив, содержащий значение в формате битовой строки.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBoolean(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Boolean value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Считывает логическое значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 1).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The decoded value.">Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadCharacterString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, returning the decoded string.">Считывает следующее значение в виде символьной строки с указанным тегом и типом кодирования, возвращая декодированную строку.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values which represents the value type to process.">Одно из значений перечисления, которое представляет тип значения для обработки.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Тег для проверки перед чтением или <see langword="null" /> для универсального тега, соответствующего запрошенному типу кодирования.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="ruleSet" /> не определен.
—или— <paramref name="encodingType" /> не является известным типом символьной строки.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— строка не была успешно декодирована.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не равно <paramref name="encodingType" />.</exception>
      <returns vsli:raw="The decoded value.">Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@)">
      <summary vsli:raw="Locates the contents range for the encoded value at the beginning of the &lt;paramref name=&quot;source&quot; /&gt; buffer using the specified encoding rules.">Помещает диапазон содержимого для закодированного значения в начало буфера <paramref name="source" />, используя указанные правила кодирования.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;              This parameter is treated as uninitialized.">При возврате из этого метода — смещение полезных данных содержимого относительно начала <paramref name="source" />.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;              This parameter is treated as uninitialized.">При возврате из этого метода — число байтов в полезных данных содержимого (которое может быть равно 0).
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;              This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not represent a value encoded under the specified encoding rules.">
        <paramref name="source" /> не представляет значение, закодированное в соответствии с указанными правилами кодирования.</exception>
      <returns vsli:raw="The tag identifying the content.">Тег, определяющий содержимое.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents as a slice of the buffer.">Считывает перечислимое значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, возвращая содержимое в виде среза буфера.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The slice of the buffer containing the bytes of the Enumerated value, in signed big-endian form.">Срез буфера, содержащий байты перечислимого значения в форме со знаком и обратным порядком байтов.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;enumType&quot; /&gt;.">Считывает перечислимое значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, преобразуя его в неперечислимое [<see cref="T:System.FlagsAttribute" />], указанное в <paramref name="enumType" />.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="enumType" vsli:raw="Type object representing the destination type.">Объект Type представляющий тип назначения.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <paramref name="enumType" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="enumType" /> не является типом перечисления.
—или— тип <paramref name="enumType" /> объявлен с <see cref="T:System.FlagsAttribute" />.
—или— <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="enumType" /> имеет значение <see langword="null" />.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;paramref name=&quot;enumType&quot; /&gt;.">Перечислимое значение, преобразованное в <paramref name="enumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">Считывает перечислимое значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, преобразуя его в неперечислимое [<see cref="T:System.FlagsAttribute" />], указанное в <typeparamref name="TEnum" />.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <typeparam name="TEnum" vsli:raw="Destination enum type.">Тип перечисления назначения</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <typeparamref name="TEnum" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TEnum&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TEnum" /> не является типом перечисления.
—или— тип <typeparamref name="TEnum" /> объявлен с <see cref="T:System.FlagsAttribute" />.
—или— <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">Перечислимое значение, преобразованное в <typeparamref name="TEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadGeneralizedTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a GeneralizedTime value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Считывает значение GeneralizedTime из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The decoded value.">Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadInteger(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Считывает целочисленное значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The decoded numeric value.">Декодированное числовое значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadIntegerBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents as a slice of the buffer.">Считывает целочисленное значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, возвращая содержимое в виде среза буфера.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The slice of the buffer containing the bytes of the Integer value, in signed big-endian form.">Срез буфера, содержащий байты целочисленного значения в форме со знаком и обратным порядком байтов.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitList(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Считывает значение NamedBitList из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The bits from the encoded value.">Биты из закодированного значения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">Считывает значение NamedBitList из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, преобразуя его в перечислимое [<see cref="T:System.FlagsAttribute" />], указанное в <paramref name="flagsEnumType" />.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="flagsEnumType" vsli:raw="Type object representing the destination type.">Объект Type представляющий тип назначения.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;flagsEnumType&quot; /&gt; value.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <paramref name="flagsEnumType" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;flagsEnumType&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="flagsEnumType" /> не является типом перечисления.
—или— тип <paramref name="flagsEnumType" /> не объявлен с использованием <see cref="T:System.FlagsAttribute" /> —или— <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="flagsEnumType" /> равно <see langword="null" /></exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">Значение NamedBitList, преобразованное в <paramref name="flagsEnumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">Считывает значение NamedBitList из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, преобразуя его в перечислимое [<see cref="T:System.FlagsAttribute" />], указанное в <typeparamref name="TFlagsEnum" />.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <typeparam name="TFlagsEnum" vsli:raw="Destination enum type.">Тип перечисления назначения</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TFlagsEnum&quot; /&gt; value.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <typeparamref name="TFlagsEnum" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TFlagsEnum" /> не является типом перечисления.
—или— тип <typeparamref name="TFlagsEnum" /> не объявлен с использованием <see cref="T:System.FlagsAttribute" /> —или— <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">Значение NamedBitList, преобразованное в <typeparamref name="TFlagsEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNull(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a &lt;see langword=&quot;null&quot; /&gt; value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Считывает значение <see langword="null" /> из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 5).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadObjectIdentifier(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Object Identifier value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Считывает значение в формате идентификатора объекта из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 6).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The decoded object identifier, in dotted-decimal notation.">Декодированный идентификатор объекта в нотации с точкой в качестве разделителя чисел.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents in a new array.">Считывает значение в формате строки октетов из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, возвращая содержимое в новом массиве.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="An array containing the contents of the Octet String value.">Массив, содержащий значение в формате строки октетов.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSequence(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Sequence or Sequence-Of value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Считывает значение Sequence или Sequence-Of из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — смещение полезных данных содержимого относительно начала <paramref name="source" />.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — число байтов в полезных данных содержимого (которое может быть равно 0).
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 16).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSetOf(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Set-Of value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Считывает значение Set-Of из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — смещение полезных данных содержимого относительно начала <paramref name="source" />.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — число байтов в полезных данных содержимого (которое может быть равно 0).
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="skipSortOrderValidation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always accept the data in the order it is presented, &lt;see langword=&quot;false&quot; /&gt; to verify that the data is sorted correctly when the encoding rules say sorting was required (CER and DER).">Значение <see langword="true" /> чтобы всегда принимать данные в том порядке, в котором они представлены; значение <see langword="false" />, чтобы обеспечить правильную сортировку данных, если она требуется согласно правилам кодирования (CER и DER).</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 17).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadUtcTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a UtcTime value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Считывает значение UtcTime из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="twoDigitYearMax" vsli:raw="The largest year to represent with this value.&#xA;               The default value, 2049, represents the 1950-2049 range for X.509 certificates.">Самое большое значение года, которое будет представлено этим значением.
Значение по умолчанию (2049) представляет диапазон 1950–2049 для сертификатов X. 509.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;twoDigitYearMax&quot; /&gt; is not in the range [99, 9999].">
        <paramref name="ruleSet" /> не определен.
—или— или <paramref name="twoDigitYearMax" /> не принадлежит диапазону [99, 9999].</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The decoded value.">Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadBitString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to copy a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules into &lt;paramref name=&quot;destination&quot; /&gt;.">Пытается скопировать значение в формате битовой строки из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования в <paramref name="destination" />.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">Буфер, в который должна выполняться запись.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">При успешном выполнении получает количество битов в последнем байте, которые были обозначены модулем записи как "неиспользованные".
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Этот метод возвращает общее количество байтов, записанных в <paramref name="destination" />.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <paramref name="destination" /> перекрывает <paramref name="source" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the Bit String; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Возвращает значение <see langword="true" />, если размер <paramref name="destination" /> достаточен для получения значения битовой строки; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterString(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the decoded string into a provided destination buffer.">Считывает значение в формате символьной строки из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования и копирует декодированную строку в предоставленный буфер назначения.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">Буфер, в который должна выполняться запись.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values which represents the value type to process.">Одно из значений перечисления, которое представляет тип значения для обработки.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="charsWritten" vsli:raw="When this method returns, the number of chars written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — число символов, записанных в <paramref name="destination" />.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Тег для проверки перед чтением или <see langword="null" /> для универсального тега, соответствующего запрошенному типу кодирования.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="ruleSet" /> не определен.
—или— <paramref name="encodingType" /> не является известным типом символьной строки.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— строка не была успешно декодирована.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не равно <paramref name="encodingType" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если длина <paramref name="destination" /> была достаточной для получения значения, в противном случае возвращает значение <see langword="false" />, а позиция чтения модуля чтения не перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.Int32@,System.Int32@)">
      <summary vsli:raw="Attempts to read a character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the unprocessed bytes into the provided destination buffer.">Пытается считать значение в формате символьной строки из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, копируя необработанные байты в указанный буфер назначения.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">Буфер, в который должна выполняться запись.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Тег для проверки перед чтением.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">При успешном выполнении получает число байтов, записанных в <paramref name="destination" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является типом тега символьной строки.
—или— <paramref name="destination" /> перекрывает <paramref name="source" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the unprocessed character string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Возвращает значение <see langword="true" />, если размер <paramref name="destination" /> достаточен для получения значения необработанной символьной строки; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag@,System.Int32@,System.Int32@,System.Int32@)">
      <summary vsli:raw="Attempts locate the contents range for the encoded value at the beginning of the &lt;paramref name=&quot;source&quot; /&gt; buffer using the specified encoding rules.">Пытается поместить диапазон содержимого для закодированного значения в начало буфера <paramref name="source" />, используя указанные правила кодирования.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="tag" vsli:raw="When this method returns, the tag identifying the content.&#xA;              This parameter is treated as uninitialized.">При возврате из этого метода — тег, определяющий содержимое.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;              This parameter is treated as uninitialized.">При возврате из этого метода — смещение полезных данных содержимого относительно начала <paramref name="source" />.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;              This parameter is treated as uninitialized.">При возврате из этого метода — число байтов в полезных данных содержимого (которое может быть равно 0).
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;              This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;source&quot; /&gt; represents a valid structural encoding for the specified encoding rules; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Возвращает значение <see langword="true" />, если <paramref name="source" /> представляет допустимое структурное кодирование для указанных правил кодирования; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as a signed 32-bit value.">Пытается считать целочисленное значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования в качестве 32-разрядного значения со знаком.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">При успешном выполнении получает интерпретируемое числовое значение.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Возвращает значение <see langword="true" />, если целое число представляет значение в диапазоне от <see cref="F:System.Int32.MinValue" /> до <see cref="F:System.Int32.MaxValue" /> включительно; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as a signed 64-bit value.">Пытается считать целочисленное значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования в качестве 64-разрядного значения со знаком.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">При успешном выполнении получает интерпретируемое числовое значение.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Возвращает значение <see langword="true" />, если целое число представляет значение в диапазоне от <see cref="F:System.Int64.MinValue" /> до <see cref="F:System.Int64.MaxValue" /> включительно; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadOctetString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the value into the provided destination buffer.">Пытается получить значение в формате строки октетов из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, копируя значение в указанный буфер назначения.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">Буфер, в который должна выполняться запись.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Этот метод возвращает общее количество байтов, записанных в <paramref name="destination" />.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <paramref name="destination" /> перекрывает <paramref name="source" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the Octet String; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Возвращает значение <see langword="true" />, если размер <paramref name="destination" /> достаточен для получения значения строки октетов; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">Пытается получить значение в формате битовой строки из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, если значение представлено в одиночном (примитивном) кодировании.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">При успешном выполнении получает количество битов в последнем байте, которые были обозначены модулем записи как "неиспользованные".
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Bit String.&#xA;               This parameter is treated as uninitialized.">При успешном выполнении получает срез входного буфера, соответствующий значению битовой строки.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Bit String value has a primitive encoding and all of the bits reported as unused are set to 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Возвращает значение <see langword="true" />, если значение в формате битовой строки имеет примитивное кодирование, а для всех битов, полученных в качестве неиспользуемых, задано значение 0; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.ReadOnlySpan{System.Byte}@,System.Int32@)">
      <summary vsli:raw="Attempts to get an unprocessed character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">Пытается получить значение в формате необработанной символьной строки из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, если значение представлено в одиночном (примитивном) кодировании.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Тег для проверки перед чтением.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Bit String.&#xA;               This parameter is treated as uninitialized.">При успешном выполнении получает срез входного буфера, соответствующий значению битовой строки.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является типом тега символьной строки.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the character string value has a primitive encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Возвращает значение <see langword="true" />, если значение в формате символьной строки имеет примитивное кодирование; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">Пытается получить значение в формате строки октетов из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, если значение представлено в одиночном (примитивном) кодировании.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Octet String.&#xA;               This parameter is treated as uninitialized.">При успешном выполнении получает срез входного буфера, соответствующий значению строки октетов.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Octet String value has a primitive encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Возвращает значение <see langword="true" />, если строка октетов имеет примитивное кодирование; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as an unsigned 32-bit value.">Пытается считать целочисленное значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования в качестве 32-разрядного значения без знака.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">При успешном выполнении получает интерпретируемое числовое значение.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Возвращает значение <see langword="true" />, если целое число представляет значение в диапазоне от <see cref="F:System.UInt32.MinValue" /> до <see cref="F:System.UInt32.MaxValue" /> включительно; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as an unsigned 64-bit value.">Пытается считать целочисленное значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования в качестве 64-разрядного значения без знака.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">При успешном выполнении получает интерпретируемое числовое значение.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Возвращает значение <see langword="true" />, если целое число представляет значение в диапазоне от <see cref="F:System.UInt64.MinValue" /> до <see cref="F:System.UInt64.MaxValue" /> включительно; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnEncodingRules">
      <summary vsli:raw="The encoding ruleset for an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt; or &lt;see cref=&quot;T:System.Formats.Asn1.AsnWriter&quot; /&gt;.">Набор правил кодирования для <see cref="T:System.Formats.Asn1.AsnReader" /> или <see cref="T:System.Formats.Asn1.AsnWriter" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.BER">
      <summary vsli:raw="ITU-T X.690 Basic Encoding Rules.">ITU-T X.690 Basic Encoding Rules (Базовые правила кодирования)</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.CER">
      <summary vsli:raw="ITU-T X.690 Canonical Encoding Rules.">ITU-T X.690 Canonical Encoding Rules (Канонические правила кодирования)</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.DER">
      <summary vsli:raw="ITU-T X.690 Distinguished Encoding Rules.">ITU-T X.690 Distinguished Encoding Rules (Особые правила кодирования)</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnReader">
      <summary vsli:raw="A stateful, forward-only reader for BER-, CER-, or DER-encoded ASN.1 data.">модуль чтения с отслеживанием состояния и последовательным доступом для данных ASN.1, кодированных с помощью BER, CER или DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.AsnReaderOptions)">
      <summary vsli:raw="Construct an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt; over &lt;paramref name=&quot;data&quot; /&gt; with a given ruleset.">Создание <see cref="T:System.Formats.Asn1.AsnReader" /> с помощью <paramref name="data" /> с заданным набором правил.</summary>
      <param name="data" vsli:raw="The data to read.">Данные для чтения.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints for the reader.">Ограничения кодирования для модуля чтения.</param>
      <param name="options" vsli:raw="Additional options for the reader.">Дополнительные параметры для модуля чтения.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekContentBytes">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the content octets (bytes) of the next encoded value without advancing the reader.">Получение представления <see cref="T:System.ReadOnlyMemory`1" /> октетов содержимого (байтов) следующего закодированного значения без перемещения позиции чтения модуля чтения.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The reader is positioned at a point where the tag or length is invalid under the current encoding rules.">модуль чтения помещается в точку, в которой тег или длина являются недопустимыми с точки зрения текущих правил кодирования.</exception>
      <returns vsli:raw="The bytes of the contents octets of the next encoded value.">Байты содержимого октета следующего закодированного значения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekEncodedValue">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value without advancing the reader. For indefinite length encodings this includes the End of Contents marker.">Получение представления <see cref="T:System.ReadOnlyMemory`1" /> следующего закодированного значения без перемещения позиции чтения модуля чтения. Для кодирования неопределенной длины оно включает маркер конца содержимого.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The reader is positioned at a point where the tag or length is invalid under the current encoding rules.">модуль чтения помещается в точку, в которой тег или длина являются недопустимыми с точки зрения текущих правил кодирования.</exception>
      <returns vsli:raw="The bytes of the next encoded value.">Байты следующего закодированного значения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekTag">
      <summary vsli:raw="Read the encoded tag at the next data position, without advancing the reader.">Чтение закодированного тега в следующей позиции данных без перемещения позиции чтения модуля чтения.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="A tag could not be decoded at the reader's current position.">не удалось декодировать тег в текущей позиции модуля чтения.</exception>
      <returns vsli:raw="The decoded tag value.">Декодированное значение тега.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBitString(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, returning the value in a byte array.">Считывает следующее значение в виде BIT STRING с указанным тегом, возвращая значение в байтовом массиве.</summary>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">При успешном выполнении получает количество битов в последнем байте, которые были обозначены модулем записи как "неиспользованные".</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="A copy of the value in a newly allocated, precisely sized, array.">Копия значения в новом выделенном массиве с точно заданным размером.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBoolean(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Boolean with a specified tag.">Считывает следующее значение в виде логического значения с указанным тегом.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The decoded value.">Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadCharacterString(System.Formats.Asn1.UniversalTagNumber,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, returning the decoded value as a string.">Считывает следующее значение в виде символьной строки с указанным тегом и типом кодирования, возвращая декодированное значение в виде строки.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the value type to process.">Одно из значений перечисления, представляющее тип значения для обработки.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Тег для проверки перед чтением или <see langword="null" /> для универсального тега, соответствующего запрошенному типу кодирования.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="encodingType" /> не является известным типом символьной строки.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— строка не была успешно декодирована.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не равно <paramref name="encodingType" />.</exception>
      <returns vsli:raw="The decoded value.">Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEncodedValue">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value, and advance the reader past it. For an indefinite length encoding this includes the End of Contents marker.">Получение представления <see cref="T:System.ReadOnlyMemory`1" /> следующего закодированного значения с перемещением позиции чтения модуля чтения в позицию после него. Для кодирования неопределенной длины оно включает маркер конца содержимого.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value.">Представление <see cref="T:System.ReadOnlyMemory`1" /> следующего закодированного значения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Enumerated with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Считывает следующее значение в виде перечислимого с указанным тегом, возвращая содержимое в виде <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The bytes of the Enumerated value, in signed big-endian form.">Байты перечислимого значения в форме со знаком и обратным порядком байтов.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Enumerated with a specified tag, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;enumType&quot; /&gt;.">Считывает следующее значение в виде перечислимого с указанным тегом и преобразует его в неперечислимое [<see cref="T:System.FlagsAttribute" />], заданное с помощью <paramref name="enumType" />.</summary>
      <param name="enumType" vsli:raw="Type object representing the destination type.">Объект Type представляющий тип назначения.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <paramref name="enumType" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="enumType" /> не является типом перечисления.
—или— тип <paramref name="enumType" /> объявлен с <see cref="T:System.FlagsAttribute" />.
—или— <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="enumType" /> имеет значение <see langword="null" />.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;paramref name=&quot;enumType&quot; /&gt;.">Перечислимое значение, преобразованное в <paramref name="enumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Enumerated with a specified tag, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">Считывает следующее значение в виде перечислимого с указанным тегом и преобразует его в неперечислимое [<see cref="T:System.FlagsAttribute" />], заданное с помощью <typeparamref name="TEnum" />.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <typeparam name="TEnum" vsli:raw="Destination enum type.">Тип перечисления назначения</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TEnum&quot; /&gt; value.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <typeparamref name="TEnum" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TEnum&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TEnum" /> не является типом перечисления.
—или— тип <typeparamref name="TEnum" /> объявлен с <see cref="T:System.FlagsAttribute" />.
—или— <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">Перечислимое значение, преобразованное в <typeparamref name="TEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadGeneralizedTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a GeneralizedTime with a specified tag.">Считывает следующее значение в виде значения GeneralizedTime с указанным тегом.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 24).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The decoded value.">Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadInteger(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Integer with a specified tag.">Считывает следующее значение в виде целочисленного значения с указанным тегом.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The decoded value.">Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadIntegerBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Integer with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Считывает следующее значение в виде целочисленного с указанным тегом, возвращая содержимое в виде <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The bytes of the Integer value, in signed big-endian form.">Байты целочисленного значения в форме со знаком и обратным порядком байтов.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitList(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag.">Считывает следующее значение в виде значения NamedBitList с указанным тегом.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Тег для проверки перед чтением.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The bits from the encoded value.">Биты из закодированного значения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">Считывает следующее значение в виде NamedBitList с указанным тегом и преобразует его в перечислимое [<see cref="T:System.FlagsAttribute" />], заданное с помощью <paramref name="flagsEnumType" />.</summary>
      <param name="flagsEnumType" vsli:raw="Type object representing the destination type.">Объект Type представляющий тип назначения.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Тег для проверки перед чтением.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;flagsEnumType&quot; /&gt; value.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <paramref name="flagsEnumType" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;flagsEnumType&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="flagsEnumType" /> не является типом перечисления.
—или— тип <paramref name="flagsEnumType" /> не объявлен с использованием <see cref="T:System.FlagsAttribute" /> —или— <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="flagsEnumType" /> равно <see langword="null" /></exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">Значение NamedBitList, преобразованное в <paramref name="flagsEnumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">Считывает следующее значение в виде NamedBitList с указанным тегом и преобразует его в перечислимое [<see cref="T:System.FlagsAttribute" />], заданное с помощью <typeparamref name="TFlagsEnum" />.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Тег для проверки перед чтением.</param>
      <typeparam name="TFlagsEnum" vsli:raw="Destination enum type.">Тип перечисления назначения</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TFlagsEnum&quot; /&gt; value.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <typeparamref name="TFlagsEnum" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TFlagsEnum" /> не является типом перечисления.
—или— тип <typeparamref name="TFlagsEnum" /> не объявлен с использованием <see cref="T:System.FlagsAttribute" /> —или— <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">Значение NamedBitList, преобразованное в <typeparamref name="TFlagsEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NULL with a specified tag.">Считывает следующее значение в виде значения NULL с указанным тегом.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 5).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadObjectIdentifier(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OBJECT IDENTIFIER with a specified tag, returning the value in a dotted decimal format string.">Считывает следующее значение в виде значения OBJECT IDENTIFIER с указанным тегом, возвращая значение в виде строки в формате, в котором в качестве разделителя чисел используется точка.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 6).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The object identifier value in a dotted decimal format string.">Значение идентификатора объекта в виде строки в формате, в котором в качестве разделителя чисел используется точка.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OCTET STRING with tag UNIVERSAL 4, returning the value in a byte array.">Считывает следующее значение в виде OCTET STRING с тегом UNIVERSAL 4, возвращая значение в байтовом массиве.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="A copy of the value in a newly allocated, precisely sized, array.">Копия значения в новом выделенном массиве с точно заданным размером.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SEQUENCE or SEQUENCE-OF with the specified tag and returns the result as a new reader positioned at the first value in the sequence (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Считывает следующее значение в виде SEQUENCE или SEQUENCE-OF с указанным тегом и возвращает результат в виде нового модуля чтения, помещенного в позицию первого значения в последовательности (или с <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 16).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the sequence (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Новое модуль чтения, помещенное в позицию первого значения в последовательности (или с <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SET-OF with the specified tag and returns the result as a new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Считывает следующее значение в виде SET-OF с указанным тегом и возвращает результат в виде нового модуля чтения, помещенного в позицию первого значения в наборе (или с <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="skipSortOrderValidation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always accept the data in the order it is presented, &lt;see langword=&quot;false&quot; /&gt; to verify that the data is sorted correctly when the encoding rules say sorting was required (CER and DER).">Значение <see langword="true" /> чтобы всегда принимать данные в том порядке, в котором они представлены; значение <see langword="false" />, чтобы обеспечить правильную сортировку данных, если она требуется согласно правилам кодирования (CER и DER).</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Новое модуль чтения, помещенное в позицию первого значения в наборе (или с <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SET-OF with the specified tag and returns the result as a new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;), using the &lt;see cref=&quot;P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification&quot; /&gt; value from the constructor (default &lt;see langword=&quot;false&quot; /&gt;).">Считывает следующее значение в виде SET-OF с указанным тегом и возвращает результат в виде нового модуля чтения, помещенного в позицию первого значения в наборе (или с <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />), используя значение <see cref="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification" /> из конструктора (по умолчанию <see langword="false" />).</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Новое модуль чтения, помещенное в позицию первого значения в наборе (или с <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a UTCTime with a specified tag.">Считывает следующее значение в виде UTCTime с указанным тегом.</summary>
      <param name="twoDigitYearMax" vsli:raw="The largest year to represent with this value.">Самое большое значение года, которое будет представлено этим значением.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The decoded value.">Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a UTCTime with a specified tag using the &lt;see cref=&quot;P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax&quot; /&gt; value from options passed to the constructor (with a default of 2049).">Считывает следующее значение в виде UTCTime с указанным тегом, используя значение <see cref="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax" /> из параметров, переданных конструктору (значение по умолчанию — 2049).</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="The decoded value.">Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ThrowIfNotEmpty">
      <summary vsli:raw="Throws a standardized &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; if the reader has remaining data, performs no function if &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">Создает стандартизованное исключение <see cref="T:System.Formats.Asn1.AsnContentException" />, если в модуле чтения остались данные, и не выполняет никаких функций, если <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> возвращает <see langword="false" />.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadBitString(System.Span{System.Byte},System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, copying the value into a provided destination buffer.">Считывает следующее значение в виде BIT STRING с указанным тегом, копируя значение в указанный буфер назначения.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Буфер, в который должна выполняться запись.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">При успешном выполнении получает количество битов в последнем байте, которые были обозначены модулем записи как "неиспользованные".</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">При успешном выполнении получает число байтов, записанных в <paramref name="destination" />.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если длина <paramref name="destination" /> была достаточной для получения значения, в противном случае возвращает значение <see langword="false" />, а позиция чтения модуля чтения не перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterString(System.Span{System.Char},System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, copying the decoded value into a provided destination buffer.">Считывает следующее значение в виде символьной строки с указанным тегом и типом кодирования, копируя декодированное значение в указанный буфер назначения.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Буфер, в который должна выполняться запись.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the value type to process.">Одно из значений перечисления, представляющее тип значения для обработки.</param>
      <param name="charsWritten" vsli:raw="On success, receives the number of chars written to &lt;paramref name=&quot;destination&quot; /&gt;.">При успешном выполнении получает число символов, записанных в <paramref name="destination" />.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Тег для проверки перед чтением или <see langword="null" /> для универсального тега, соответствующего запрошенному типу кодирования.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="encodingType" /> не является известным типом символьной строки.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— строка не была успешно декодирована.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не равно <paramref name="encodingType" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если длина <paramref name="destination" /> была достаточной для получения значения, в противном случае возвращает значение <see langword="false" />, а позиция чтения модуля чтения не перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterStringBytes(System.Span{System.Byte},System.Formats.Asn1.Asn1Tag,System.Int32@)">
      <summary vsli:raw="Reads the next value as character string with the specified tag, copying the unprocessed bytes into a provided destination buffer.">Считывает следующее значение в виде символьной строки с указанным тегом, копируя необработанные байты в указанный буфер назначения.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Буфер, в который должна выполняться запись.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Тег для проверки перед чтением.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">При успешном выполнении получает число байтов, записанных в <paramref name="destination" />.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является типом тега символьной строки.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если длина <paramref name="destination" /> была достаточной для получения значения, в противном случае возвращает значение <see langword="false" />, а позиция чтения модуля чтения не перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt32(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as a signed 32-bit value.">Пытается прочитать следующее значение как целочисленное с указанным тегом в формате 32-разрядного значения со знаком.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">При успешном выполнении получает декодированное значение.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">Возвращает значение <see langword="false" /> и не перемещает модуль чтения, если значение не принадлежит диапазону от <see cref="F:System.Int32.MinValue" /> до <see cref="F:System.Int32.MaxValue" /> включительно; в противном случае возвращает <see langword="true" />, а позиция чтения модуля чтения перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt64(System.Int64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as a signed 64-bit value.">Пытается прочитать следующее значение как целочисленное с указанным тегом в формате 64-разрядного значения со знаком.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">При успешном выполнении получает декодированное значение.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">Возвращает значение <see langword="false" /> и не перемещает модуль чтения, если значение не принадлежит диапазону от <see cref="F:System.Int64.MinValue" /> до <see cref="F:System.Int64.MaxValue" /> включительно; в противном случае возвращает <see langword="true" />, а позиция чтения модуля чтения перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadOctetString(System.Span{System.Byte},System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OCTET STRING with a specified tag, copying the value into a provided destination buffer.">Считывает следующее значение в виде OCTET STRING с указанным тегом, копируя значение в указанный буфер назначения.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Буфер, в который должна выполняться запись.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">При успешном выполнении получает число байтов, записанных в <paramref name="destination" />.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если длина <paramref name="destination" /> была достаточной для получения значения, в противном случае возвращает значение <see langword="false" />, а позиция чтения модуля чтения не перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveBitString(System.Int32@,System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Считывает следующее значение в виде BIT STRING с указанным тегом, возвращая содержимое в виде <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных.</summary>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">При успешном выполнении получает количество битов в последнем байте, которые были обозначены модулем записи как "неиспользованные".</param>
      <param name="value" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the BIT STRING.">При успешном выполнении получает <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных, что соответствует значению BIT STRING.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the BIT STRING value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если значение BIT STRING имеет примитивное кодирование. Если же оно имеет сконструированное кодирование, возвращает значение <see langword="false" /> и не перемещает позицию чтения модуля чтения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveCharacterStringBytes(System.Formats.Asn1.Asn1Tag,System.ReadOnlyMemory{System.Byte}@)">
      <summary vsli:raw="Reads the next value as a character with a specified tag, returning the contents as an unprocessed &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Считывает следующее значение в виде символа с указанным тегом, возвращая содержимое в виде необработанного экземпляра <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Тег для проверки перед чтением.</param>
      <param name="contents" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the character string.">При успешном выполнении получает <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных, что соответствует значению символьной строки.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является типом тега символьной строки.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the character string value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если значение символьной строки имеет примитивное кодирование. Если же оно имеет сконструированное кодирование, возвращает значение <see langword="false" /> и не перемещает позицию чтения модуля чтения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveOctetString(System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an OCTET STRING with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Пытается считать следующее значение в виде OCTET STRING с указанным тегом, возвращая содержимое в виде <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных.</summary>
      <param name="contents" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the OCTET STRING.">При успешном выполнении получает <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных, что соответствует значению OCTET STRING.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Тег для проверки перед чтением.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the OCTET STRING value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если значение OCTET STRING имеет примитивное кодирование. Если же оно имеет сконструированное кодирование, возвращает значение <see langword="false" /> и не перемещает позицию чтения модуля чтения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt32(System.UInt32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as an unsigned 32-bit value.">Пытается прочитать следующее значение как целочисленное с указанным тегом в формате 32-разрядного значения без знака.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">При успешном выполнении получает декодированное значение.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">Возвращает значение <see langword="false" /> и не перемещает модуль чтения, если значение не принадлежит диапазону от <see cref="F:System.UInt32.MinValue" /> до <see cref="F:System.UInt32.MaxValue" /> включительно; в противном случае возвращает <see langword="true" />, а позиция чтения модуля чтения перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt64(System.UInt64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as an unsigned 64-bit value.">Пытается прочитать следующее значение как целочисленное с указанным тегом в формате 64-разрядного значения без знака.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">При успешном выполнении получает декодированное значение.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">Возвращает значение <see langword="false" /> и не перемещает модуль чтения, если значение не принадлежит диапазону от <see cref="F:System.UInt64.MinValue" /> до <see cref="F:System.UInt64.MaxValue" /> включительно; в противном случае возвращает <see langword="true" />, а позиция чтения модуля чтения перемещается.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.HasData">
      <summary vsli:raw="Gets an indication of whether the reader has remaining data available to process.">Получает сведения о том, остались ли у модуля чтения данные для обработки.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is more data available for the reader to process; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> значение, если для процесса чтения доступно больше данных; в противном случае — <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.RuleSet">
      <summary vsli:raw="Gets the encoding rules in use by this reader.">Получает правила кодирования, используемые этим модулем чтения.</summary>
      <returns vsli:raw="The encoding rules in use by this reader.">Правила кодирования, используемые этим модулем чтения.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnReaderOptions">
      <summary vsli:raw="Specifies options that modify the behavior of an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt;.">Задает параметры, изменяющие поведение <see cref="T:System.Formats.Asn1.AsnReader" />.</summary>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification">
      <summary vsli:raw="Gets or sets a value that indicates whether the reader should bypass sort ordering on a Set or Set-Of value.">Получает или задает значение, указывающее, должен ли модуль чтения обходить порядок сортировки для значения Set ил Set-Of.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader should not validate that a Set or Set-Of value is sorted correctly for the current encoding rules; otherwise &lt;see langword=&quot;false&quot; /&gt;.&#xA;              The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> значение, если модуль чтения не должен проверять, правильно ли упорядочен набор или набор значений для текущих правил кодирования. в противном случае — значение <see langword="false" /> .
Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax">
      <summary vsli:raw="Gets or sets the largest year to represent with a UtcTime value.">Получает или задает самый крупный год для представления со значением UtcTime.</summary>
      <returns vsli:raw="The largest year to represent with a UtcTime value. The default is 2049.">Самый крупный год для представления со значением Утктиме. Значение по умолчанию — 2049.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter">
      <summary vsli:raw="A writer for BER-, CER-, and DER-encoded ASN.1 data.">Модуль записи для данных ASN.1, кодированных с помощью BER, CER или DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)">
      <summary vsli:raw="Create a new &lt;see cref=&quot;T:System.Formats.Asn1.AsnWriter&quot; /&gt; with a given set of encoding rules.">Создание нового <see cref="T:System.Formats.Asn1.AsnWriter" /> с заданным набором правил кодирования.</summary>
      <param name="ruleSet" vsli:raw="The encoding constraints for the writer.">Ограничения кодирования для модуля записи.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> не определен.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)">
      <summary vsli:raw="Copy the value of this writer into another.">Копирование значение этого модуля записи в другое.</summary>
      <param name="destination" vsli:raw="The writer to receive the value.">Модуль записи для получения значения.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.&#xA;             -or- &#xA;               This writer is empty.&#xA;             -or- &#xA;               This writer represents more than one top-level value.&#xA;             -or- &#xA;               This writer's value is encoded in a manner that is not compatible with the ruleset for the destination writer.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> не были закрыты с помощью <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.
—или— Этот модуль записи пуст.
—или— Этот модуль записи представляет несколько значений верхнего уровня.
—или— Значение этого модуля записи кодируется способом, который несовместим с набором правил для модуля записи назначения.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode">
      <summary vsli:raw="Return a new array containing the encoded value.">Возвращает новый массив байтов, в котором содержится закодированное значение.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> не были закрыты с помощью <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="A precisely-sized array containing the encoded value.">Новый массив байтов с точно заданным размером, в котором содержится закодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})">
      <summary vsli:raw="Writes the encoded representation of the data to &lt;paramref name=&quot;destination&quot; /&gt;.">Записывает закодированное представление данных в <paramref name="destination" />.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Буфер, в который должна выполняться запись.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> не были закрыты с помощью <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Число байтов, записанных в <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)">
      <summary vsli:raw="Determines if &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.Encode&quot; /&gt; would produce an output identical to &lt;paramref name=&quot;other&quot; /&gt;.">Определяет, будет ли <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> выдавать результат, идентичный <paramref name="other" />.</summary>
      <param name="other" vsli:raw="The instance to compare encoded values against.">Экземпляр для сравнения закодированных значений.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> не были закрыты с помощью <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the pending encoded data is identical to &lt;paramref name=&quot;other&quot; /&gt;, &lt;see langword=&quot;false&quot; /&gt; otherwise.">Возвращает значение <see langword="true" />, если ожидающие кодирования данные идентичны <paramref name="other" />; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Determines if &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.Encode&quot; /&gt; would produce an output identical to &lt;paramref name=&quot;other&quot; /&gt;.">Определяет, будет ли <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> выдавать результат, идентичный <paramref name="other" />.</summary>
      <param name="other" vsli:raw="The encoded value to compare against.">Закодированное значение для сравнения.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> не были закрыты с помощью <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the pending encoded data is identical to &lt;paramref name=&quot;other&quot; /&gt;, &lt;see langword=&quot;false&quot; /&gt; otherwise.">Возвращает значение <see langword="true" />, если ожидающие кодирования данные идентичны <paramref name="other" />; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.GetEncodedLength">
      <summary vsli:raw="Gets the number of bytes that would be written by &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)&quot; /&gt;.">Получает число байтов, которые были бы записаны с помощью <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;, &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;, or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; was called without the corresponding Pop method.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> были вызваны без соответствующего метода POP.</exception>
      <returns vsli:raw="The number of bytes that would be written by &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)&quot; /&gt;.">Число байтов, которые были бы записаны с помощью <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Octet String with the tag UNIVERSAL 4 is closed, returning the writer to the parent context.">Указывает, что открытая строка октетов с тегом UNIVERSAL 4 закрыта, а модуль записи возвращен в родительский контекст.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within an Octet String with the specified tag.">в настоящий момент позиция записи модуля записи не находится в строке октетов с указанным тегом.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Sequence with the specified tag is closed, returning the writer to the parent context.">Указывает, что открытая последовательность Sequence с указанным тегом закрыта, а модуль записи возвращен в родительский контекст.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 16).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within a Sequence with the specified tag.">в настоящий момент позиция записи модуля записи не находится в последовательности Sequence с указанным тегом.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Set-Of with the specified tag is closed, returning the writer to the parent context.">Указывает, что открытый набор Set-Of с указанным тегом закрыт, а модуль записи возвращен в родительский контекст.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 17).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within a Set-Of with the specified tag.">в настоящий момент позиция записи модуля записи не находится в наборе Set-Of с указанным тегом.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing an Octet String value with a specified tag.">Начало записи значения в формате строки октетов с указанным тегом.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Удаляемое значение, которое будет автоматически вызывать <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing a Sequence with a specified tag.">Начало записи последовательности Sequence с указанным тегом.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 16).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Удаляемое значение, которое будет автоматически вызывать <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing a Set-Of with a specified tag.">Начало записи набора Set-Of с указанным тегом.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 17).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Удаляемое значение, которое будет автоматически вызывать <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Reset">
      <summary vsli:raw="Reset the writer to have no data, without releasing resources.">Сброс модуля записи для очистки его от всех данных без освобождения ресурсов.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to write the encoded representation of the data to &lt;paramref name=&quot;destination&quot; /&gt;.">Пытается записать закодированное представление данных в <paramref name="destination" />.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Буфер, в который должна выполняться запись.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">При успешном выполнении получает число байтов, записанных в <paramref name="destination" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> не были закрыты с помощью <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the encode succeeded, &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is too small.">Возвращает значение <see langword="true" />, если кодирование выполнено успешно, и значение <see langword="false" />, если размер <paramref name="destination" /> слишком мал.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a Bit String value with a specified tag.">Запись значения в формате битовой строки с указанным тегом.</summary>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="unusedBitCount" vsli:raw="The number of trailing bits which are not semantic.">Число конечных битов, не являющихся семантическими.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; has length 0 and &lt;paramref name=&quot;unusedBitCount&quot; /&gt; is not 0 &#xA;               -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not empty and any of the bits identified by &lt;paramref name=&quot;unusedBitCount&quot; /&gt; is set.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <paramref name="value" /> имеет длину 0, а значение <paramref name="unusedBitCount" /> не равно 0 —или— значение <paramref name="value" /> не является пустым, и задан любой из битов, определенных <paramref name="unusedBitCount" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;unusedBitCount&quot; /&gt; is not in the range [0,7].">
        <paramref name="unusedBitCount" /> не принадлежит диапазону [0,7].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a Boolean value with a specified tag.">Запись логического значения с указанным тегом.</summary>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 1).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.">Запись предоставленной строки с использованием указанного типа кодирования и с применением указанного тега к соответствующему типу кодирования.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the encoding to use.">Одно из значений перечисления, представляющее используемое кодирование.</param>
      <param name="str" vsli:raw="The string to write.">Строка для записи.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Тег для записи или <see langword="null" /> для универсального тега, соответствующего запрошенному типу кодирования.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a restricted character string encoding type.&#xA;             -or- &#xA;               &lt;paramref name=&quot;encodingType&quot; /&gt; is a restricted character string encoding type that is not currently supported by this method.">
        <paramref name="encodingType" /> не является ограниченным типом кодирования символьных строк.
—или— <paramref name="encodingType" /> — это ограниченный тип кодирования символьных строк, который в настоящее время не поддерживается данным методом.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.">Запись предоставленной строки с использованием указанного типа кодирования и с применением указанного тега к соответствующему типу кодирования.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the encoding to use.">Одно из значений перечисления, представляющее используемое кодирование.</param>
      <param name="value" vsli:raw="The string to write.">Строка для записи.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Тег для записи или <see langword="null" /> для универсального тега, соответствующего запрошенному типу кодирования.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="value" /> равно <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a restricted character string encoding type.&#xA;             -or- &#xA;               &lt;paramref name=&quot;encodingType&quot; /&gt; is a restricted character string encoding type that is not currently supported by this method.">
        <paramref name="encodingType" /> не является ограниченным типом кодирования символьных строк.
—или— <paramref name="encodingType" /> — это ограниченный тип кодирования символьных строк, который в настоящее время не поддерживается данным методом.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Write a single value which has already been encoded.">Запись одного значения, которое уже закодировано.</summary>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; could not be read under the current encoding rules.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; has data beyond the end of the first value.">
        <paramref name="value" /> не удалось считать в соответствии с текущими правилами кодирования.
—или— <paramref name="value" /> содержит данные за конечной позицией первого значения.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as an Enumerated with tag UNIVERSAL 10.">Запись значения перечисления, отличного от [<see cref="T:System.FlagsAttribute" />], в виде перечисления с тегом UNIVERSAL 10.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">Записываемое упакованное значение перечисления.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not a boxed enum value.&#xA;             -or- &#xA;               the unboxed type of &lt;paramref name=&quot;value&quot; /&gt; is declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <paramref name="value" /> не является упакованным значением перечисления.
—или— неупакованный тип <paramref name="value" /> объявлен как [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as an Enumerated with tag UNIVERSAL 10.">Запись значения перечисления, отличного от [<see cref="T:System.FlagsAttribute" />], в виде перечисления с тегом UNIVERSAL 10.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">Записываемое упакованное значение перечисления.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <typeparam name="TEnum" vsli:raw="The non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enumeration type to write.">
        <see cref="T:System.FlagsAttribute" />Тип перечислений, не применяющий [].</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <typeparamref name="TEnum" /> не является перечислением.
—или— <typeparamref name="TEnum" /> объявлен как [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; as a GeneralizedTime with a specified UNIVERSAL 24, optionally excluding the fractional seconds.">Запись предоставленного значения <see cref="T:System.DateTimeOffset" /> как GeneralizedTime с указанным тегом UNIVERSAL 24 (при необходимости без долей секунды).</summary>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="omitFractionalSeconds" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to treat the fractional seconds in &lt;paramref name=&quot;value&quot; /&gt; as 0 even if a non-zero value is present.">Возвращает значение <see langword="true" />, если доли секунды в <paramref name="value" /> необходимо интерпретировать как 0 даже при наличии ненулевого значения.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 24).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Запись целочисленного значения с указанным тегом.</summary>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Запись целочисленного значения с указанным тегом.</summary>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Запись целочисленного значения с указанным тегом.</summary>
      <param name="value" vsli:raw="The integer value to write, in signed big-endian byte order.">Целочисленное значение для записи со знаком и обратным порядком байтов.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="the 9 most significant bits are all set.&#xA;             -or- &#xA;               the 9 most significant bits are all unset.">заданы все 9 наиболее значимых битов.
—или— не задан ни один из 9 наиболее значимых битов.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Запись целочисленного значения с указанным тегом.</summary>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Запись целочисленного значения с указанным тегом.</summary>
      <param name="value" vsli:raw="The integer value to write, in unsigned big-endian byte order.">Целочисленное значение для записи без знака и с обратным порядком байтов.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="the 9 most significant bits are all unset.">не задан ни один из 9 наиболее значимых битов.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a bit array value as a NamedBitList with a specified tag.">Записывает значение в формате битового массива в виде значения NamedBitList с указанным тегом.</summary>
      <param name="value" vsli:raw="The bits to write.">Записываемые биты</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as a NamedBitList with a specified tag.">Запись значения перечисления <see cref="T:System.FlagsAttribute" /> в виде значения NamedBitList с указанным тегом.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">Записываемое упакованное значение перечисления</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not a boxed enum value.&#xA;             -or- &#xA;               the unboxed type of &lt;paramref name=&quot;value&quot; /&gt; is not declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <paramref name="value" /> не является упакованным значением перечисления.
—или— неупакованный тип <paramref name="value" /> не объявлен как [<see cref="T:System.FlagsAttribute" />].</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as a NamedBitList with a specified tag.">Запись значения перечисления <see cref="T:System.FlagsAttribute" /> в виде значения NamedBitList с указанным тегом.</summary>
      <param name="value" vsli:raw="The enumeration value to write.">Записываемое значение перечисления</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <typeparam name="TEnum" vsli:raw="The [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enumeration type to write.">
        <see cref="T:System.FlagsAttribute" />Тип перечисления [] для записи.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum value.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <typeparamref name="TEnum" /> не является значением перечисления.
—или— перечисление <typeparamref name="TEnum" /> не объявлено как [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write NULL with a specified tag.">Запись значения NULL с указанным тегом.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 5).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Object Identifier with a specified tag.">Запись идентификатора объекта с указанным тегом.</summary>
      <param name="oidValue" vsli:raw="The object identifier to write.">Записываемый идентификатор объекта.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 6).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;oidValue&quot; /&gt; is not a valid dotted decimal object identifier.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <paramref name="oidValue" /> не является допустимым идентификатором с точкой в качестве разделителя чисел.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Object Identifier with a specified tag.">Запись идентификатора объекта с указанным тегом.</summary>
      <param name="oidValue" vsli:raw="The object identifier to write.">Записываемый идентификатор объекта.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 6).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;oidValue&quot; /&gt; is not a valid dotted decimal object identifier.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <paramref name="oidValue" /> не является допустимым идентификатором с точкой в качестве разделителя чисел.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;oidValue&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="oidValue" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Octet String value with a specified tag.">Запись значения в формате строки октетов с указанным тегом.</summary>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided value as a UTCTime with a specified tag, provided the year is in the allowed range.">Запись предоставленного значения в формате UTCTime с указанным тегом, если год находится в допустимом диапазоне.</summary>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="twoDigitYearMax" vsli:raw="The maximum valid year for &lt;paramref name=&quot;value&quot; /&gt;, after conversion to UTC.&#xA;              For the X.509 Time.utcTime range of 1950-2049, pass &lt;c&gt;2049&lt;/c&gt;.">Максимально допустимый год для <paramref name="value" /> после преобразования в UTC.
Для диапазона X.509 Time.utcTime 1950–2049 передается значение <c>2049</c>.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 23).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt;.&lt;see cref=&quot;P:System.DateTimeOffset.Year&quot; /&gt; (after conversion to UTC) is not in the range (&lt;paramref name=&quot;twoDigitYearMax&quot; /&gt; - 100, &lt;paramref name=&quot;twoDigitYearMax&quot; /&gt;].">
        <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> (после преобразования в UTC) не принадлежит диапазону (<paramref name="twoDigitYearMax" />– 100, <paramref name="twoDigitYearMax" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided value as a UTCTime with a specified tag, accepting the two-digit year as valid in context.">Запись предоставленного значения в формате UTCTime с указанным тегом, при которой допустимо принимать год из двух цифр в контексте.</summary>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 23).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="P:System.Formats.Asn1.AsnWriter.RuleSet">
      <summary vsli:raw="Gets the encoding rules in use by this writer.">Получает правила кодирования, используемые этим модулем записи.</summary>
      <returns vsli:raw="The encoding rules in use by this writer.">Правила кодирования, используемые этим модулем записи.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter.Scope">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; target for safely closing an opened tag by using a lexical scope as a logical scope.">Предоставляет целевой объект <see cref="T:System.IDisposable" /> для безопасного закрытия открытого тега с помощью лексической области в качестве логической области.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Scope.Dispose">
      <summary vsli:raw="Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.">Выполняет определяемые приложением задачи, связанные с удалением, высвобождением или сбросом неуправляемых ресурсов.</summary>
    </member>
    <member name="T:System.Formats.Asn1.TagClass">
      <summary vsli:raw="The tag class for a particular ASN.1 tag.">Класс тегов для определенного тега ASN.1.</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Application">
      <summary vsli:raw="The Application tag class.">Класс тегов приложения</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.ContextSpecific">
      <summary vsli:raw="The Context-Specific tag class.">Класс тегов, зависящий от контекста</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Private">
      <summary vsli:raw="The Private tag class.">Класс закрытых тегов</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Universal">
      <summary vsli:raw="The Universal tag class.">Класс универсальных тегов</summary>
    </member>
    <member name="T:System.Formats.Asn1.UniversalTagNumber">
      <summary vsli:raw="Tag assignments for the UNIVERSAL class in ITU-T X.680.">Назначения тегов для универсального класса в ITU-T X.680.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BitString">
      <summary vsli:raw="The universal class tag value for Bit String.">Значение тега универсального класса для битовой строки.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BMPString">
      <summary vsli:raw="The universal class tag value for BMPString.">Значение тега универсального класса для значения BMPString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Boolean">
      <summary vsli:raw="The universal class tag value for Boolean.">Значение тега универсального класса для логического значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Date">
      <summary vsli:raw="The universal class tag value for Date.">Значение тега универсального класса для даты.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.DateTime">
      <summary vsli:raw="The universal class tag value for Date-Time.">Значение тега универсального класса для даты и времени.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Duration">
      <summary vsli:raw="The universal class tag value for Duration.">Значение тега универсального класса для продолжительности.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Embedded">
      <summary vsli:raw="The universal class tag value for Embedded-PDV.">Значение тега универсального класса для значения Embedded-PDV.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.EndOfContents">
      <summary vsli:raw="The reserved identifier for the End-of-Contents marker in an indefinite length encoding.">Зарезервированный идентификатор маркера конца содержимого при кодировании с неопределенной длиной.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Enumerated">
      <summary vsli:raw="The universal class tag value for Enumerated.">Значение тега универсального класса для перечислимого значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.External">
      <summary vsli:raw="The universal class tag value for External.">Значение тега универсального класса для внешнего значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralizedTime">
      <summary vsli:raw="The universal class tag value for GeneralizedTime.">Значение тега универсального класса для значения GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralString">
      <summary vsli:raw="The universal class tag value for GeneralString.">Значение тега универсального класса для значения GeneralString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GraphicString">
      <summary vsli:raw="The universal class tag value for GraphicString.">Значение тега универсального класса для значения GraphicString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.IA5String">
      <summary vsli:raw="The universal class tag value for IA5String.">Значение тега универсального класса для значения IA5String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.InstanceOf">
      <summary vsli:raw="The universal class tag value for Instance-Of.">Значение тега универсального класса для значения Instance-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Integer">
      <summary vsli:raw="The universal class tag value for Integer.">Значение тега универсального класса для целочисленного значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ISO646String">
      <summary vsli:raw="The universal class tag value for ISO646String (VisibleString).">Значение тега универсального класса для ISO646String (VisibleString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Null">
      <summary vsli:raw="The universal class tag value for Null.">Значение тега универсального класса для значения NULL.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.NumericString">
      <summary vsli:raw="The universal class tag value for NumericString.">Значение тега универсального класса для значения NumericString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectDescriptor">
      <summary vsli:raw="The universal class tag value for Object Descriptor.">Значение тега универсального класса для дескриптора объекта.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifier">
      <summary vsli:raw="The universal class tag value for Object Identifier.">Значение тега универсального класса для идентификатора объекта.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifierIRI">
      <summary vsli:raw="The universal class tag value for Object Identifier Internationalized Resource Identifier (IRI).">Значение тега универсального класса для международного идентификатора ресурса (IRI), используемого для идентификатора объекта.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.OctetString">
      <summary vsli:raw="The universal class tag value for Octet String.">Значение тега универсального класса для строки октетов.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.PrintableString">
      <summary vsli:raw="The universal class tag value for PrintableString.">Значение тега универсального класса для значения PrintableString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Real">
      <summary vsli:raw="The universal class tag value for Real.">Значение тега универсального класса для вещественного значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifier">
      <summary vsli:raw="The universal class tag value for Relative Object Identifier.">Значение тега универсального класса для относительного идентификатора объекта.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifierIRI">
      <summary vsli:raw="The universal class tag value for Relative Object Identifier Internationalized Resource Identifier (IRI).">Значение тега универсального класса для международного идентификатора ресурса (IRI), используемого для относительного идентификатора объекта.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Sequence">
      <summary vsli:raw="The universal class tag value for Sequence.">Значение тега универсального класса для последовательности Sequence.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SequenceOf">
      <summary vsli:raw="The universal class tag value for Sequence-Of.">Значение тега универсального класса для последовательности Sequence-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Set">
      <summary vsli:raw="The universal class tag value for Set.">Значение тега универсального класса для набора.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SetOf">
      <summary vsli:raw="The universal class tag value for Set-Of.">Значение тега универсального класса для набора Set-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.T61String">
      <summary vsli:raw="The universal class tag value for T61String (TeletexString).">Значение тега универсального класса для T61String (TeletexString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TeletexString">
      <summary vsli:raw="The universal class tag value for TeletexString (T61String).">Значение тега универсального класса для TeletexString (T61String).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Time">
      <summary vsli:raw="The universal class tag value for Time.">Значение тега универсального класса для времени.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TimeOfDay">
      <summary vsli:raw="The universal class tag value for Time-Of-Day.">Значение тега универсального класса для значения Time-Of-Day.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UniversalString">
      <summary vsli:raw="The universal class tag value for UniversalString.">Значение тега универсального класса для значения UniversalString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UnrestrictedCharacterString">
      <summary vsli:raw="The universal class tag value for an unrestricted character string.">Значение тега универсального класса для неограниченной символьной строки.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UtcTime">
      <summary vsli:raw="The universal class tag value for UTCTime.">Значение тега универсального класса для значения UTCTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UTF8String">
      <summary vsli:raw="The universal class tag value for UTF8String.">Значение тега универсального класса для значения UTF8String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VideotexString">
      <summary vsli:raw="The universal class tag value for VideotexString.">Значение тега универсального класса для значения VideotexString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VisibleString">
      <summary vsli:raw="The universal class tag value for VisibleString (ISO646String).">Значение тега универсального класса для VisibleString (ISO646String).</summary>
    </member>
  </members>
</doc>