<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Linq.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Linq.OrderedParallelQuery`1">
      <summary vsli:raw="Represents a sorted, parallel sequence.">Stellt eine sortierte parallele Sequenz dar.</summary>
      <typeparam name="TSource" vsli:raw="The type of elements in the source collection.">Der Typ der Elemente in der Quellauflistung.</typeparam>
    </member>
    <member name="M:System.Linq.OrderedParallelQuery`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">Gibt einen Enumerator zurück, der die Sequenz durchläuft.</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">Ein Enumerator, der die Sequenz durchläuft.</returns>
    </member>
    <member name="T:System.Linq.ParallelEnumerable">
      <summary vsli:raw="Provides a set of methods for querying objects that implement ParallelQuery{TSource}. This is the parallel equivalent of &lt;see cref=&quot;T:System.Linq.Enumerable&quot; /&gt;.">Stellt einen Satz von Methoden zum Abfragen von Objekten bereit, die ParallelQuery{TSource} implementieren. Dies ist die parallele Entsprechung von <see cref="T:System.Linq.Enumerable" />.</summary>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence.">Wendet parallel eine Akkumulatorfunktion auf eine Sequenz an.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Eine Sequenz, die aggregiert werden soll.</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">Eine Akkumulatorfunktion, die für jedes Element aufgerufen werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="func" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The final accumulator value.">Der letzte Akkumulatorwert.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. The specified seed value is used as the initial accumulator value.">Wendet parallel eine Akkumulatorfunktion auf eine Sequenz an. Der angegebene Startwert wird als erster Akkumulatorwert verwendet.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Eine Sequenz, die aggregiert werden soll.</param>
      <param name="seed" vsli:raw="The initial accumulator value.">Der erste Akkumulatorwert.</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">Eine Akkumulatorfunktion, die für jedes Element aufgerufen werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">Der Typ des Akkumulatorwerts.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="func" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The final accumulator value.">Der letzte Akkumulatorwert.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. This overload is not available in the sequential implementation.">Wendet parallel eine Akkumulatorfunktion auf eine Sequenz an. Diese Überladung ist in der sequenziellen Implementierung nicht verfügbar.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Eine Sequenz, die aggregiert werden soll.</param>
      <param name="seed" vsli:raw="The initial accumulator value.">Der erste Akkumulatorwert.</param>
      <param name="updateAccumulatorFunc" vsli:raw="An accumulator function to be invoked on each element in a partition.">Eine Akkumulatorfunktion, die für jedes Element in einer Partition aufgerufen werden soll.</param>
      <param name="combineAccumulatorsFunc" vsli:raw="An accumulator function to be invoked on the yielded accumulator result from each partition.">Eine Akkumulatorfunktion, die für das zurückgegebene Akkumulatorergebnis jeder Partition aufgerufen werden soll.</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">Eine Funktion zum Transformieren des letzten Akkumulatorwerts in den Ergebniswert.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">Der Typ des Akkumulatorwerts.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">Der Typ des Ergebniswerts.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;updateAccumulatorFunc&quot; /&gt; or &lt;paramref name=&quot;combineAccumulatorsFunc&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="updateAccumulatorFunc" /> oder <paramref name="combineAccumulatorsFunc" /> oder <paramref name="resultSelector" /> ist ein NULL-Verweis (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The transformed final accumulator value.">Der transformierte letzte Akkumulatorwert.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.">Wendet parallel eine Akkumulatorfunktion auf eine Sequenz an. Der angegebene Startwert wird als erster Akkumulatorwert verwendet, und der Ergebniswert wird mit der angegebenen Funktion ausgewählt.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Eine Sequenz, die aggregiert werden soll.</param>
      <param name="seed" vsli:raw="The initial accumulator value.">Der erste Akkumulatorwert.</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">Eine Akkumulatorfunktion, die für jedes Element aufgerufen werden soll.</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">Eine Funktion zum Transformieren des letzten Akkumulatorwerts in den Ergebniswert.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">Der Typ des Akkumulatorwerts.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">Der Typ des Ergebniswerts.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="func" /> oder <paramref name="resultSelector" /> ist ein NULL-Verweis (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The transformed final accumulator value.">Der transformierte letzte Akkumulatorwert.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. This overload is not available in the sequential implementation.">Wendet parallel eine Akkumulatorfunktion auf eine Sequenz an. Diese Überladung ist in der sequenziellen Implementierung nicht verfügbar.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Eine Sequenz, die aggregiert werden soll.</param>
      <param name="seedFactory" vsli:raw="A function that returns the initial accumulator value.">Eine Funktion, die den Anfangsakkumulatorwert zurückgibt.</param>
      <param name="updateAccumulatorFunc" vsli:raw="An accumulator function to be invoked on each element in a partition.">Eine Akkumulatorfunktion, die für jedes Element in einer Partition aufgerufen werden soll.</param>
      <param name="combineAccumulatorsFunc" vsli:raw="An accumulator function to be invoked on the yielded accumulator result from each partition.">Eine Akkumulatorfunktion, die für das zurückgegebene Akkumulatorergebnis jeder Partition aufgerufen werden soll.</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">Eine Funktion zum Transformieren des letzten Akkumulatorwerts in den Ergebniswert.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">Der Typ des Akkumulatorwerts.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">Der Typ des Ergebniswerts.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;seedFactory&quot; /&gt; or &lt;paramref name=&quot;updateAccumulatorFunc&quot; /&gt; or &lt;paramref name=&quot;combineAccumulatorsFunc&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />, <paramref name="seedFactory" />, <paramref name="updateAccumulatorFunc" />, <paramref name="combineAccumulatorsFunc" /> oder <paramref name="resultSelector" /> ist ein NULL-Verweis (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The transformed final accumulator value.">Der transformierte letzte Akkumulatorwert.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Determines in parallel whether all elements of a sequence satisfy a condition.">Bestimmt parallel, ob alle Elemente einer Sequenz eine Bedingung erfüllen.</summary>
      <param name="source" vsli:raw="A sequence whose elements to apply the predicate to.">Eine Sequenz, auf deren Elemente das Prädikat angewendet werden soll.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn jedes Element der Quellsequenz im angegebenen Prädikat erfolgreich überprüft wird oder wenn die Sequenz leer ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Determines whether a parallel sequence contains any elements.">Bestimmt, ob eine parallele Sequenz Elemente enthält.</summary>
      <param name="source" vsli:raw="The sequence to check for emptiness.">Die Sequenz, für die überprüft werden soll, ob sie leer ist.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains any elements; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Quellsequenz Elemente enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Determines in parallel whether any element of a sequence satisfies a condition.">Bestimmt parallel, ob ein Element einer Sequenz eine Bedingung erfüllt.</summary>
      <param name="source" vsli:raw="A sequence to whose elements the predicate will be applied.">Eine Sequenz, auf deren Elemente das Prädikat angewendet werden soll.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any elements in the source sequence pass the test in the specified predicate; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Elemente der Quellsequenz im angegebenen Prädikat erfolgreich überprüft werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; into an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to force sequential evaluation of the query.">Konvertiert ein <see cref="T:System.Linq.ParallelQuery`1" /> in ein <see cref="T:System.Collections.Generic.IEnumerable`1" />, um die sequenzielle Auswertung der Abfrage zu erzwingen.</summary>
      <param name="source" vsli:raw="The sequence to cast as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">Die Sequenz, die in <see cref="T:System.Collections.Generic.IEnumerable`1" /> umgewandelt werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <returns vsli:raw="The input sequence typed as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">Die als <see cref="T:System.Collections.Generic.IEnumerable`1" /> typisierte Eingabesequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
      <summary vsli:raw="Enables treatment of a data source as if it were ordered, overriding the default of unordered. AsOrdered may only be invoked on non-generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.">Ermöglicht die Behandlung einer Datenquelle als sortierte Datenquelle, indem die Standardeinstellung "unsortiert" überschrieben wird. AsOrdered kann nur für nicht generische Sequenzen aufgerufen werden, die von AsParallel, ParallelEnumerable.Range und ParallelEnumerable.Repeat zurückgegeben werden.</summary>
      <param name="source" vsli:raw="The input sequence.">Die Eingabesequenz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="thrown if &lt;paramref name=&quot;source&quot; /&gt; contains no elements&#xA;&#xA; -or-&#xA;&#xA; if &lt;see langword=&quot;AsOrdered&quot; /&gt; is called midway through a query. It is allowed to be called immediately after &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)&quot; /&gt;, &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)&quot; /&gt;, or &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;source&quot; /&gt; is not one of &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)&quot; /&gt;, &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)&quot; /&gt;, or &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)&quot; /&gt;.">ausgelöst, wenn <paramref name="source" /> keine Elemente enthält 
- oder - 
wenn <see langword="AsOrdered" /> in der Mitte einer Abfrage aufgerufen wird. Der Aufruf kann direkt nach <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> oder <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" /> erfolgen.

- oder -

<paramref name="source" /> ist weder <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> noch <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" />.</exception>
      <returns vsli:raw="The source sequence which will maintain the original ordering in the subsequent query operators.">Die Quellsequenz, die die ursprüngliche Reihenfolge in den nachfolgenden Abfrageoperatoren beibehält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Enables treatment of a data source as if it were ordered, overriding the default of unordered. AsOrdered may only be invoked on generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.">Ermöglicht die Behandlung einer Datenquelle als sortierte Datenquelle, indem die Standardeinstellung "unsortiert" überschrieben wird. AsOrdered kann nur für generische Sequenzen aufgerufen werden, die von AsParallel, ParallelEnumerable.Range und ParallelEnumerable.Repeat zurückgegeben werden.</summary>
      <param name="source" vsli:raw="The input sequence.">Die Eingabesequenz.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;source&quot; /&gt; is not one of AsParallel, ParallelEnumerable.Range, or ParallelEnumerable.Repeat.">Ausgelöst, wenn <paramref name="source" /> keine Elemente enthält 
- oder - 
wenn <paramref name="source" /> nicht AsParallel, ParallelEnumerable.Range oder ParallelEnumerable.Repeat ist.</exception>
      <returns vsli:raw="The source sequence which will maintain the original ordering in the subsequent query operators.">Die Quellsequenz, die die ursprüngliche Reihenfolge in den nachfolgenden Abfrageoperatoren beibehält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
      <summary vsli:raw="Enables parallelization of a query.">Ermöglicht die Parallelisierung einer Abfrage.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.Linq.ParallelQuery&quot; /&gt;.">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />, das in ein <see cref="T:System.Linq.ParallelQuery" /> konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <returns vsli:raw="The source as a ParallelQuery to bind to ParallelEnumerable extension methods.">Die Quelle als ParallelQuery, die an ParallelEnumerable-Erweiterungsmethoden gebunden werden soll.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
      <summary vsli:raw="Enables parallelization of a query, as sourced by a custom partitioner that is responsible for splitting the input sequence into partitions.">Ermöglicht die Parallelisierung einer Abfrage mit einem benutzerdefinierten Partitionierer, der für die Aufteilung der Eingabesequenz in Partitionen zuständig ist, als Quelle.</summary>
      <param name="source" vsli:raw="A partitioner over the input sequence.">Ein Partitionierer für die Eingabesequenz.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <returns vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; as a ParallelQuery to bind to ParallelEnumerable extension methods.">Die <paramref name="source" /> als ParallelQuery, die an ParallelEnumerable-Erweiterungsmethoden gebunden werden soll.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Enables parallelization of a query.">Ermöglicht die Parallelisierung einer Abfrage.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />, das in ein <see cref="T:System.Linq.ParallelQuery`1" /> konvertiert werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <returns vsli:raw="The source as a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; to bind to ParallelEnumerable extension methods.">Die Quelle als <see cref="T:System.Linq.ParallelQuery`1" />, das an ParallelEnumerable-Erweiterungsmethoden gebunden werden soll.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; into an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to force sequential evaluation of the query.">Konvertiert ein <see cref="T:System.Linq.ParallelQuery`1" /> in ein <see cref="T:System.Collections.Generic.IEnumerable`1" />, um die sequenzielle Auswertung der Abfrage zu erzwingen.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; to convert to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">Ein <see cref="T:System.Linq.ParallelQuery`1" />, das in ein <see cref="T:System.Collections.Generic.IEnumerable`1" /> konvertiert werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <returns vsli:raw="The source as an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to bind to sequential extension methods.">Die Quelle als <see cref="T:System.Collections.Generic.IEnumerable`1" />, das an sequenzielle Erweiterungsmethoden gebunden werden soll.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Allows an intermediate query to be treated as if no ordering is implied among the elements.">Ermöglicht es, eine Zwischenabfrage so zu behandeln, als würde keine Reihenfolge zwischen den Elementen vorausgesetzt.</summary>
      <param name="source" vsli:raw="The input sequence.">Die Eingabesequenz.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <returns vsli:raw="The source sequence with arbitrary order.">Die Quellsequenz mit beliebiger Reihenfolge.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Berechnet parallel den Durchschnitt einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Berechnet parallel den Durchschnitt einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Berechnet parallel den Durchschnitt einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe oder Anzahl der Elemente in der Sequenz ist größer als <see cref="F:System.Int32.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Berechnet parallel den Durchschnitt einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe oder Anzahl der Elemente in der Sequenz ist größer als <see cref="F:System.Int32.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Berechnet parallel den Durchschnitt einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Berechnet parallel den Durchschnitt einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="The source sequence.">Die Quellsequenz.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Berechnet parallel den Durchschnitt einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe oder Anzahl der Elemente in der Sequenz ist größer als <see cref="F:System.Int32.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Berechnet parallel den Durchschnitt einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe oder Anzahl der Elemente in der Sequenz ist größer als <see cref="F:System.Int32.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Berechnet parallel den Durchschnitt einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Berechnet parallel den Durchschnitt einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel den Durchschnitt einer Sequenz von Werten, die durch den Aufruf einer Transformationsfunktion für jedes Element der Eingabesequenz ermittelt wird.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Ausgelöst als interne Ausnahme von einer <see cref="T:System.AggregateException" />). Die <paramref name="selector" />-Funktion gibt einen Wert größer als MaxValue für den Elementtyp zurück.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel den Durchschnitt einer Sequenz von Werten, die durch den Aufruf einer Transformationsfunktion für jedes Element der Eingabesequenz ermittelt wird.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Ausgelöst als interne Ausnahme von einer <see cref="T:System.AggregateException" />). Die <paramref name="selector" />-Funktion gibt einen Wert größer als MaxValue für den Elementtyp zurück.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel den Durchschnitt einer Sequenz von Werten, die durch den Aufruf einer Transformationsfunktion für jedes Element der Eingabesequenz ermittelt wird.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe oder Anzahl der Elemente in der Sequenz ist größer als <see cref="F:System.Int32.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Ausgelöst als interne Ausnahme von einer <see cref="T:System.AggregateException" />). Die <paramref name="selector" />-Funktion gibt einen Wert größer als MaxValue für den Elementtyp zurück.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel den Durchschnitt einer Sequenz von Werten, die durch den Aufruf einer Transformationsfunktion für jedes Element der Eingabesequenz ermittelt wird.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe oder Anzahl der Elemente in der Sequenz ist größer als <see cref="F:System.Int32.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Ausgelöst als interne Ausnahme von einer <see cref="T:System.AggregateException" />). Die <paramref name="selector" />-Funktion gibt einen Wert größer als MaxValue für den Elementtyp zurück.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel den Durchschnitt einer Sequenz von Werten, die durch den Aufruf einer Transformationsfunktion für jedes Element der Eingabesequenz ermittelt wird.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Ausgelöst als interne Ausnahme von einer <see cref="T:System.AggregateException" />). Die <paramref name="selector" />-Funktion gibt einen Wert größer als MaxValue für den Elementtyp zurück.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel den Durchschnitt einer Sequenz von Werten, die durch den Aufruf einer Transformationsfunktion für jedes Element der Eingabesequenz ermittelt wird.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Ausgelöst als interne Ausnahme von einer <see cref="T:System.AggregateException" />). Die <paramref name="selector" />-Funktion gibt einen Wert größer als MaxValue für den Elementtyp zurück.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel den Durchschnitt einer Sequenz von Werten, die durch den Aufruf einer Transformationsfunktion für jedes Element der Eingabesequenz ermittelt wird.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe oder Anzahl der Elemente in der Sequenz ist größer als <see cref="F:System.Int32.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Ausgelöst als interne Ausnahme von einer <see cref="T:System.AggregateException" />). Die <paramref name="selector" />-Funktion gibt einen Wert größer als MaxValue für den Elementtyp zurück.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel den Durchschnitt einer Sequenz von Werten, die durch den Aufruf einer Transformationsfunktion für jedes Element der Eingabesequenz ermittelt wird.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe oder Anzahl der Elemente in der Sequenz ist größer als <see cref="F:System.Int64.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Ausgelöst als interne Ausnahme von einer <see cref="T:System.AggregateException" />). Die <paramref name="selector" />-Funktion gibt einen Wert größer als MaxValue für den Elementtyp zurück.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel den Durchschnitt einer Sequenz von Werten, die durch den Aufruf einer Transformationsfunktion für jedes Element der Eingabesequenz ermittelt wird.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Ausgelöst als interne Ausnahme von einer <see cref="T:System.AggregateException" />). Die <paramref name="selector" />-Funktion gibt einen Wert größer als MaxValue für den Elementtyp zurück.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel den Durchschnitt einer Sequenz von Werten, die durch den Aufruf einer Transformationsfunktion für jedes Element der Eingabesequenz ermittelt wird.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Eine Sequenz von Werten, mit denen ein Durchschnittswert berechnet wird.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Ausgelöst als interne Ausnahme von einer <see cref="T:System.AggregateException" />). Die <paramref name="selector" />-Funktion gibt einen Wert größer als MaxValue für den Elementtyp zurück.</exception>
      <returns vsli:raw="The average of the sequence of values.">Der Durchschnitt der Sequenz von Werten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
      <summary vsli:raw="Converts the elements of a ParallelQuery to the specified type.">Konvertiert die Elemente einer ParallelQuery in den angegebenen Typ.</summary>
      <param name="source" vsli:raw="The sequence that contains the elements to be converted.">Die Sequenz, die die zu konvertierenden Elemente enthält.</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of &lt;paramref name=&quot;source&quot; /&gt; to.">Der Typ, in den die Elemente von <paramref name="source" /> konvertiert werden sollen.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source sequence could not be converted to &lt;paramref name=&quot;TResult&quot; /&gt;.">Der Typ der Quellsequenz konnte nicht in <paramref name="TResult" /> konvertiert werden.</exception>
      <returns vsli:raw="A sequence that contains each element of the source sequence converted to the specified type.">Eine Sequenz, die jedes in den angegebenen Typ konvertierte Element der Quellsequenz enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Concat overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Diese Concat-Überladung sollte nie aufgerufen werden. Diese Methode wird als veraltet markiert und löst beim Aufrufen immer <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="second" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Die Ausnahme, die auftritt, wenn die Methode aufgerufen wird.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Überladung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Concatenates two parallel sequences.">Verkettet zwei parallele Sequenzen.</summary>
      <param name="first" vsli:raw="The first sequence to concatenate.">Die erste zu verkettende Sequenz.</param>
      <param name="second" vsli:raw="The sequence to concatenate to the first sequence.">Die Sequenz, die mit der ersten Sequenz verkettet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Der Typ der Elemente der Eingabesequenzen.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> oder <paramref name="second" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <returns vsli:raw="A sequence that contains the concatenated elements of the two input sequences.">Eine Sequenz, die die verketteten Elemente der zwei Eingabesequenzen enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
      <summary vsli:raw="Determines in parallel whether a sequence contains a specified element by using the default equality comparer.">Bestimmt parallel mithilfe des Standardgleichheitsvergleichs, ob eine Sequenz ein angegebenes Element enthält.</summary>
      <param name="source" vsli:raw="A sequence in which to locate a value.">Eine Sequenz, in der ein Wert gesucht werden soll.</param>
      <param name="value" vsli:raw="The value to locate in the sequence.">Der Wert, der in der Sequenz gesucht werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Quellsequenz ein Element mit dem angegebenen Wert enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines in parallel whether a sequence contains a specified element by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">Bestimmt parallel mithilfe eines angegebenen <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, ob eine Sequenz ein angegebenes Element enthält.</summary>
      <param name="source" vsli:raw="A sequence in which to locate a value.">Eine Sequenz, in der ein Wert gesucht werden soll.</param>
      <param name="value" vsli:raw="The value to locate in the sequence.">Der Wert, der in der Sequenz gesucht werden soll.</param>
      <param name="comparer" vsli:raw="An equality comparer to compare values.">Ein Gleichheitsvergleich zum Vergleichen von Werten.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Quellsequenz ein Element mit dem angegebenen Wert enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the number of elements in a parallel sequence.">Gibt die Anzahl von Elementen in einer parallelen Sequenz zurück.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">Eine Sequenz, die zu zählende Elemente enthält.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. (In this case the InnerException is &lt;see cref=&quot;T:System.OverflowException&quot; /&gt;) -or- One or more exceptions occurred during the evaluation of the query.">Die Anzahl der Elemente in der Quelle ist größer als <see cref="F:System.Int32.MaxValue" />. (In diesem Fall ist der InnerException <see cref="T:System.OverflowException" />) - oder - Eine oder mehrere Ausnahmen sind während der Auswertung für die Abfrage aufgetreten.</exception>
      <returns vsli:raw="The number of elements in the input sequence.">Die Anzahl der Elemente in der Eingabesequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns a number that represents how many elements in the specified parallel sequence satisfy a condition.">Gibt eine Zahl zurück, die die Anzahl von Elementen in der angegebenen parallelen Sequenz angibt, die eine Bedingung erfüllen.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">Eine Sequenz, die zu zählende Elemente enthält.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. (In this case the InnerException is &lt;see cref=&quot;T:System.OverflowException&quot; /&gt;) -or- One or more exceptions occurred during the evaluation of the query.">Die Anzahl der Elemente in der Quelle ist größer als <see cref="F:System.Int32.MaxValue" />. (In diesem Fall ist der InnerException <see cref="T:System.OverflowException" />) - oder - Eine oder mehrere Ausnahmen sind während der Auswertung für die Abfrage aufgetreten.</exception>
      <returns vsli:raw="A number that represents how many elements in the sequence satisfy the condition in the predicate function.">Eine Zahl, die die Anzahl der Elemente in der Sequenz darstellt, die die Bedingung in der Prädikatfunktion erfüllen.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the elements of the specified parallel sequence or the type parameter's default value in a singleton collection if the sequence is empty.">Gibt die Elemente der angegebenen parallelen Sequenz oder den Standardwert des Typparameters in einer Singletonauflistung zurück, wenn die Sequenz leer ist.</summary>
      <param name="source" vsli:raw="The sequence to return a default value for if it is empty.">Die Sequenz, für die ein Standardwert zurückgegeben werden soll, wenn sie leer ist.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">Eine Sequenz, die default(TSource) enthält, wenn <paramref name="source" /> leer ist, andernfalls <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
      <summary vsli:raw="Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.">Gibt die Elemente der angegebenen parallelen Sequenz zurück, oder den angegebenen Wert in einer Singletonauflistung, wenn die Sequenz leer ist.</summary>
      <param name="source" vsli:raw="The sequence to return the specified value for if it is empty.">Die Sequenz, für die der angegebene Wert zurückgegeben werden soll, wenn sie leer ist.</param>
      <param name="defaultValue" vsli:raw="The value to return if the sequence is empty.">Der Wert, der zurückgegeben werden soll, wenn die Sequenz leer ist.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains defaultValue if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">Eine Sequenz, die defaultValue enthält, wenn <paramref name="source" /> leer ist, andernfalls <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.">Gibt mithilfe des Standardgleichheitsvergleichs zum Vergleichen von Werten unterschiedliche Elemente aus einer parallelen Sequenz zurück.</summary>
      <param name="source" vsli:raw="The sequence to remove duplicate elements from.">Die Sequenz, aus der doppelte Elemente entfernt werden sollen.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains distinct elements from the source sequence.">Eine Sequenz, die unterschiedliche Elemente aus der Quellsequenz enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Returns distinct elements from a parallel sequence by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">Gibt mithilfe eines angegebenen <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> zum Vergleichen von Werten unterschiedliche Elemente aus einer parallelen Sequenz zurück.</summary>
      <param name="source" vsli:raw="The sequence to remove duplicate elements from.">Die Sequenz, aus der doppelte Elemente entfernt werden sollen.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">Ein <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> zum Vergleichen von Werten.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains distinct elements from the source sequence.">Eine Sequenz, die unterschiedliche Elemente aus der Quellsequenz enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a parallel sequence.">Gibt das Element an einem angegebenen Index in einer parallelen Sequenz zurück.</summary>
      <param name="source" vsli:raw="A sequence to return an element from.">Eine Sequenz, aus der ein Element zurückgegeben werden soll.</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">Der auf 0 (null) basierende Index des abzurufenden Elements.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than or equal to the number of elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="index" /> ist kleiner als 0 bzw. größer oder gleich der Anzahl der Elemente in <paramref name="source" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The element at the specified position in the source sequence.">Das Element an der angegebenen Position in der Quellsequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a parallel sequence or a default value if the index is out of range.">Gibt das Element an einem angegebenen Index in einer parallelen Sequenz oder einen Standardwert zurück, wenn der Index außerhalb des gültigen Bereichs liegt.</summary>
      <param name="source" vsli:raw="A sequence to return an element from.">Eine Sequenz, aus der ein Element zurückgegeben werden soll.</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">Der auf 0 (null) basierende Index des abzurufenden Elements.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="default(TSource) if the index is outside the bounds of the source sequence; otherwise, the element at the specified position in the source sequence.">default(TSource), wenn der Index außerhalb der Begrenzungen der Quellsequenz liegt, andernfalls das Element an der angegebenen Position in der Quellsequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Empty``1">
      <summary vsli:raw="Returns an empty ParallelQuery{TResult} that has the specified type argument.">Gibt ein leeres ParallelQuery{TResult} mit dem angegebenen Typargument zurück.</summary>
      <typeparam name="TResult" vsli:raw="The type to assign to the type parameter of the returned generic sequence.">Der Typ, der dem Typparameter der zurückgegebenen generischen Sequenz zugewiesen werden soll.</typeparam>
      <returns vsli:raw="An empty sequence whose type argument is &lt;paramref name=&quot;TResult&quot; /&gt;.">Eine leere Sequenz, deren Typargument <paramref name="TResult" /> ist.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Except overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Diese Except-Überladung sollte nie aufgerufen werden. Diese Methode wird als veraltet markiert und löst beim Aufrufen immer <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="second" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Die Ausnahme, die auftritt, wenn die Methode aufgerufen wird.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Überladung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Except overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Diese Except-Überladung sollte nie aufgerufen werden. Diese Methode wird als veraltet markiert und löst beim Aufrufen immer <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="second" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Die Ausnahme, die auftritt, wenn die Methode aufgerufen wird.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Überladung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set difference of two parallel sequences by using the default equality comparer to compare values.">Erzeugt die Differenz zweier paralleler Sequenzen mithilfe des Standardgleichheitsvergleichs zum Vergleichen von Werten.</summary>
      <param name="first" vsli:raw="A sequence whose elements that are not also in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">Eine Sequenz, deren nicht auch in <paramref name="second" /> enthaltenen Elemente zurückgegeben werden.</param>
      <param name="second" vsli:raw="A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.">Eine Sequenz, deren auch in der ersten Sequenz enthaltenen Elemente aus der zurückgegebenen Sequenz entfernt werden.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Der Typ der Elemente der Eingabesequenzen.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> oder <paramref name="second" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains the set difference of the elements of two sequences.">Eine Sequenz, die die Differenzmenge der Elemente von zwei Sequenzen enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set difference of two parallel sequences by using the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">Erzeugt mithilfe des angegebenen <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> zum Vergleichen von Werten die Differenzmenge zweier paralleler Sequenzen.</summary>
      <param name="first" vsli:raw="A sequence whose elements that are not also in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">Eine Sequenz, deren nicht auch in <paramref name="second" /> enthaltenen Elemente zurückgegeben werden.</param>
      <param name="second" vsli:raw="A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.">Eine Sequenz, deren auch in der ersten Sequenz enthaltenen Elemente aus der zurückgegebenen Sequenz entfernt werden.</param>
      <param name="comparer" vsli:raw="&lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> zum Vergleichen von Werten.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Der Typ der Elemente der Eingabesequenzen.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> oder <paramref name="second" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains the set difference of the elements of two sequences.">Eine Sequenz, die die Differenzmenge der Elemente von zwei Sequenzen enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the first element of a parallel sequence.">Gibt das erste Element einer parallelen Sequenz zurück.</summary>
      <param name="source" vsli:raw="The sequence to return the first element of.">Die Sequenz, deren erstes Element zurückgegeben werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The first element in the specified sequence.">Das erste Element in der angegebenen Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the first element in a parallel sequence that satisfies a specified condition.">Gibt das erste Element in einer parallelen Sequenz zurück, das eine angegebene Bedingung erfüllt.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Die Sequenz, aus der ein Element zurückgegeben werden soll.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element in &lt;paramref name=&quot;source&quot; /&gt; satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">Kein Element in <paramref name="source" /> erfüllt die Bedingung in <paramref name="predicate" />.</exception>
      <returns vsli:raw="The first element in the sequence that passes the test in the specified predicate function.">Das erste Element in der Sequenz, das mit der angegebenen Prädikatfunktion erfolgreich überprüft wird.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.">Gibt das erste Element einer parallelen Sequenz zurück oder einen Standardwert, wenn die Sequenz keine Elemente enthält.</summary>
      <param name="source" vsli:raw="The sequence to return the first element of.">Die Sequenz, deren erstes Element zurückgegeben werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt;.">default(TSource), wenn <paramref name="source" /> leer ist, andernfalls das erste Element in <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the first element of the parallel sequence that satisfies a condition or a default value if no such element is found.">Gibt das erste Element der parallelen Sequenz zurück, das eine Bedingung erfüllt, oder einen Standardwert, wenn ein solches Element nicht gefunden wird.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Die Sequenz, aus der ein Element zurückgegeben werden soll.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty or if no element passes the test specified by predicate; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt; that passes the test specified by predicate.">default(TSource), wenn <paramref name="source" /> leer ist oder die vom Prädikat angegebene Überprüfung für kein Element erfolgreich ausgeführt wird, andernfalls das erste Element in <paramref name="source" />, für das die vom Prädikat angegebene Überprüfung erfolgreich ausgeführt wird.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
      <summary vsli:raw="Invokes in parallel the specified action for each element in the &lt;paramref name=&quot;source&quot; /&gt;.">Ruft parallel die angegebene Aktion für jedes Element in der <paramref name="source" /> auf.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; whose elements will be processed by &lt;paramref name=&quot;action&quot; /&gt;.">Das <see cref="T:System.Linq.ParallelQuery`1" />, dessen Elemente von <paramref name="action" /> verarbeitet werden.</param>
      <param name="action" vsli:raw="An Action to invoke on each element.">Eine Aktion, die für jedes Element aufgerufen werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function.">Gruppiert parallel die Elemente einer Sequenz entsprechend einer angegebenen Schlüsselauswahlfunktion.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource}that contains elements to sort.">Ein OrderedParallelQuery{TSource}, das zu sortierende Elemente enthält.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">Eine Sequenz von Gruppen, die entsprechend ihrem <paramref name="TKey" /> absteigend sortiert werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and compares the keys by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt;.">Gruppiert parallel die Elemente einer Sequenz entsprechend einer angegebenen Schlüsselauswahlfunktion und vergleicht die Schlüssel mithilfe eines angegebenen <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.OrderedParallelQuery`1&quot; /&gt; that contains elements to sort.">Ein <see cref="T:System.Linq.OrderedParallelQuery`1" /> mit den zu sortierenden Elementen.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von zurückgegebenen Schlüssels <paramref name="keySelector" /> &gt; .</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">Eine Sequenz von Gruppen, die entsprechend ihrem <paramref name="TKey" /> absteigend sortiert werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.">Gruppiert parallel die Elemente einer Sequenz entsprechend einer angegebenen Schlüsselauswahlfunktion und projiziert die Elemente für jede Gruppe mithilfe einer angegebenen Funktion.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.OrderedParallelQuery`1&quot; /&gt; that contains elements to sort.">Ein <see cref="T:System.Linq.OrderedParallelQuery`1" /> mit den zu sortierenden Elementen.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">Eine Funktion, mit der jedes Quellelement einem Element in einem <see cref="T:System.Linq.IGrouping`2" /> zugeordnet wird.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">Der Typ der Elemente im <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">Eine Sequenz von Gruppen, die entsprechend ihrem <paramref name="TKey" /> absteigend sortiert werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a key selector function. The keys are compared by using a comparer and each group's elements are projected by using a specified function.">Gruppiert parallel die Elemente einer Sequenz entsprechend einer Schlüsselauswahlfunktion. Die Schlüssel werden mithilfe eines Vergleichs verglichen, und die Elemente jeder Gruppe werden mithilfe einer angegebenen Funktion projiziert.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource}that contains elements to sort.">Ein OrderedParallelQuery{TSource}, das zu sortierende Elemente enthält.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping.">Eine Funktion, mit der jedes Quellelement einem Element in einer IGrouping zugeordnet wird.</param>
      <param name="comparer" vsli:raw="An IComparer{TSource} to compare keys.">Ein IComparer{TSource} zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the IGrouping.">Der Typ der Elemente in der IGrouping.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">Eine Sequenz von Gruppen, die entsprechend ihrem <paramref name="TKey" /> absteigend sortiert werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.">Gruppiert parallel die Elemente einer Sequenz entsprechend einer angegebenen Schlüsselauswahlfunktion und erstellt aus jeder Gruppe und ihrem Schlüssel einen Ergebniswert.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">Eine Sequenz, deren Elemente gruppiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">Eine Funktion zum Extrahieren des Schlüssels für jedes Element.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">Eine Funktion, mit der aus jeder Gruppe ein Ergebniswert erstellt wird.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">Der Typ des von <paramref name="resultSelector" /> zurückgegebenen Ergebniswerts.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">Eine Sequenz von Elementen vom Typ <paramref name="TResult" />, wobei jedes Element eine Projektion über eine Gruppe und ihren Schlüssel darstellt.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The keys are compared by using a specified comparer.">Gruppiert parallel die Elemente einer Sequenz entsprechend einer angegebenen Schlüsselauswahlfunktion und erstellt aus jeder Gruppe und ihrem Schlüssel einen Ergebniswert. Die Schlüssel werden mithilfe eines angegebenen Vergleichs verglichen.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">Eine Sequenz, deren Elemente gruppiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">Eine Funktion zum Extrahieren des Schlüssels für jedes Element.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">Eine Funktion, mit der aus jeder Gruppe ein Ergebniswert erstellt wird.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">Ein <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">Der Typ des von <paramref name="resultSelector" /> zurückgegebenen Ergebniswerts.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence of groups.">Eine Folge von Gruppen.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The elements of each group are projected by using a specified function.">Gruppiert parallel die Elemente einer Sequenz entsprechend einer angegebenen Schlüsselauswahlfunktion und erstellt aus jeder Gruppe und ihrem Schlüssel einen Ergebniswert. Die Elemente jeder Gruppe werden mithilfe einer angegebenen Funktion projiziert.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">Eine Sequenz, deren Elemente gruppiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">Eine Funktion zum Extrahieren des Schlüssels für jedes Element.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping&amp;lt;TKey, TElement&amp;gt;.">Eine Funktion, mit der jedes Quellelement einem Element in einem IGrouping&lt;Key, TElement&gt; zugeordnet wird.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">Eine Funktion, mit der aus jeder Gruppe ein Ergebniswert erstellt wird.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each IGrouping{TKey, TElement}.">Der Typ der Elemente in jedem IGrouping{TKey, TElement}.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">Der Typ des von <paramref name="resultSelector" /> zurückgegebenen Ergebniswerts.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> oder <paramref name="keySelector" /> oder <paramref name="elementSelector" /> oder <paramref name="resultSelector" /> ist <see langword="null" /> (in Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">Eine Sequenz von Elementen vom Typ <paramref name="TResult" />, wobei jedes Element eine Projektion über eine Gruppe und ihren Schlüssel darstellt.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.">Gruppiert die Elemente einer Sequenz entsprechend einer angegebenen Schlüsselauswahlfunktion und erstellt aus jeder Gruppe und ihrem Schlüssel einen Ergebniswert. Schlüsselwerte werden mithilfe eines angegebenen Vergleichs verglichen, und die Elemente jeder Gruppe werden mithilfe einer angegebenen Funktion projiziert.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">Eine Sequenz, deren Elemente gruppiert werden sollen.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">Eine Funktion zum Extrahieren des Schlüssels für jedes Element.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping{Key, TElement}.">Eine Funktion, mit der jedes Quellelement einem Element in einem IGrouping{Key, TElement} zugeordnet wird.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">Eine Funktion, mit der aus jeder Gruppe ein Ergebniswert erstellt wird.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">Ein <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each IGrouping{TKey, TElement}.">Der Typ der Elemente in jedem IGrouping{TKey, TElement}.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">Der Typ des von <paramref name="resultSelector" /> zurückgegebenen Ergebniswerts.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> oder <paramref name="keySelector" /> oder <paramref name="elementSelector" /> oder <paramref name="resultSelector" /> ist <see langword="null" /> (in Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">Eine Sequenz von Elementen vom Typ <paramref name="TResult" />, wobei jedes Element eine Projektion über eine Gruppe und ihren Schlüssel darstellt.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary vsli:raw="This GroupJoin overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Diese GroupJoin-Überladung sollte nie aufgerufen werden. Diese Methode wird als veraltet markiert und löst beim Aufrufen immer <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="inner" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Die Ausnahme, die auftritt, wenn die Methode aufgerufen wird.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Überladung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="This GroupJoin overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Diese GroupJoin-Überladung sollte nie aufgerufen werden. Diese Methode wird als veraltet markiert und löst beim Aufrufen immer <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="inner" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Die Ausnahme, die auftritt, wenn die Methode aufgerufen wird.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Überladung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on equality of keys and groups the results. The default equality comparer is used to compare keys.">Korreliert parallel die Elemente zweier Sequenzen basierend auf der Gleichheit der Schlüssel und gruppiert die Ergebnisse. Schlüssel werden mithilfe des Standardgleichheitsvergleichs verglichen.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">Die erste zu verknüpfende Sequenz.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">Die Sequenz, die mit der ersten Sequenz verknüpft werden soll.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">Eine Funktion zum Extrahieren des Joinschlüssels aus jedem Element der ersten Sequenz.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">Eine Funktion zum Extrahieren des Joinschlüssels aus jedem Element der zweiten Sequenz.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">Eine Funktion zum Erstellen eines Ergebniselements anhand eines Elements aus der ersten Sequenz und einer Auflistung von übereinstimmenden Elementen aus der zweiten Sequenz.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">Der Typ der Elemente der ersten Sequenz.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">Der Typ der Elemente der zweiten Sequenz.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">Der Typ der von den Schlüsselauswahlfunktionen zurückgegebenen Schlüssel.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">Der Typ der Ergebniselemente.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> oder <paramref name="outer" /> oder <paramref name="inner" /> oder <paramref name="outerKeySelector" /> oder <paramref name="innerKeySelector" /> oder <paramref name="resultSelector" /> ist <see langword="null" /> (in Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing a grouped join on two sequences.">Eine Sequenz, die Elemente des Typs <paramref name="TResult" /> enthält, die durch Ausführen eines Group Joins von zwei Sequenzen ermittelt werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on key equality and groups the results. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">Korreliert parallel die Elemente zweier Sequenzen basierend auf der Gleichheit der Schlüssel und gruppiert die Ergebnisse. Schlüssel werden mithilfe eines angegebenen <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> verglichen.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">Die erste zu verknüpfende Sequenz.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">Die Sequenz, die mit der ersten Sequenz verknüpft werden soll.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">Eine Funktion zum Extrahieren des Joinschlüssels aus jedem Element der ersten Sequenz.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">Eine Funktion zum Extrahieren des Joinschlüssels aus jedem Element der zweiten Sequenz.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">Eine Funktion zum Erstellen eines Ergebniselements anhand eines Elements aus der ersten Sequenz und einer Auflistung von übereinstimmenden Elementen aus der zweiten Sequenz.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">Ein <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> zum Hashen und Vergleichen von Schlüsseln.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">Der Typ der Elemente der ersten Sequenz.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">Der Typ der Elemente der zweiten Sequenz.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">Der Typ der von den Schlüsselauswahlfunktionen zurückgegebenen Schlüssel.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">Der Typ der Ergebniselemente.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> oder <paramref name="outer" /> oder <paramref name="inner" /> oder <paramref name="outerKeySelector" /> oder <paramref name="innerKeySelector" /> oder <paramref name="resultSelector" /> ist <see langword="null" /> (in Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing a grouped join on two sequences.">Eine Sequenz, die Elemente des Typs <paramref name="TResult" /> enthält, die durch Ausführen eines Group Joins von zwei Sequenzen ermittelt werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Intersect overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Diese Intersect-Überladung sollte nie aufgerufen werden. Diese Methode wird als veraltet markiert und löst beim Aufrufen immer <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="second" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Die Ausnahme, die auftritt, wenn die Methode aufgerufen wird.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Überladung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Intersect overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Diese Intersect-Überladung sollte nie aufgerufen werden. Diese Methode wird als veraltet markiert und löst beim Aufrufen immer <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="second" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Die Ausnahme, die auftritt, wenn die Methode aufgerufen wird.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Überladung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set intersection of two parallel sequences by using the default equality comparer to compare values.">Erzeugt die Schnittmenge zweier paralleler Sequenzen mithilfe des Standardgleichheitsvergleichs zum Vergleichen von Werten.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements that also appear in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">Eine Sequenz, deren unterschiedliche Elemente, die auch in <paramref name="second" /> vorhanden sind, zurückgegeben werden.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements that also appear in the first sequence will be returned.">Eine Sequenz, deren unterschiedliche Elemente, die auch in der ersten Sequenz vorhanden sind, zurückgegeben werden.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Der Typ der Elemente der Eingabesequenzen.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains the elements that form the set intersection of two sequences.">Eine Sequenz, die die Elemente enthält, die die Schnittmenge von zwei Sequenzen bilden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set intersection of two parallel sequences by using the specified IEqualityComparer{T} to compare values.">Erzeugt mithilfe des angegebenen IEqualityComparer{T} zum Vergleichen von Werten die Schnittmenge zweier paralleler Sequenzen.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements that also appear in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">Eine Sequenz, deren unterschiedliche Elemente, die auch in <paramref name="second" /> vorhanden sind, zurückgegeben werden.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements that also appear in the first sequence will be returned.">Eine Sequenz, deren unterschiedliche Elemente, die auch in der ersten Sequenz vorhanden sind, zurückgegeben werden.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">Ein <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> zum Vergleichen von Werten.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Der Typ der Elemente der Eingabesequenzen.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains the elements that form the set intersection of two sequences.">Eine Sequenz, die die Elemente enthält, die die Schnittmenge von zwei Sequenzen bilden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary vsli:raw="This Join overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">Diese Join-Überladung sollte nie aufgerufen werden. Diese Methode wird als veraltet markiert und löst beim Aufrufen immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="inner" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Die Ausnahme, die auftritt, wenn die Methode aufgerufen wird.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Überladung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="This Join overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">Diese Join-Überladung sollte nie aufgerufen werden. Diese Methode wird als veraltet markiert und löst beim Aufrufen immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="inner" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Die Ausnahme, die auftritt, wenn die Methode aufgerufen wird.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Überladung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on matching keys. The default equality comparer is used to compare keys.">Korreliert parallel die Elemente zweier Sequenzen auf der Grundlage von übereinstimmenden Schlüsseln. Schlüssel werden mithilfe des Standardgleichheitsvergleichs verglichen.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">Die erste zu verknüpfende Sequenz.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">Die Sequenz, die mit der ersten Sequenz verknüpft werden soll.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">Eine Funktion zum Extrahieren des Joinschlüssels aus jedem Element der ersten Sequenz.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">Eine Funktion zum Extrahieren des Joinschlüssels aus jedem Element der zweiten Sequenz.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">Eine Funktion zum Erstellen eines Ergebniselements aus zwei übereinstimmenden Elementen.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">Der Typ der Elemente der ersten Sequenz.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">Der Typ der Elemente der zweiten Sequenz.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">Der Typ der von den Schlüsselauswahlfunktionen zurückgegebenen Schlüssel.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">Der Typ der Ergebniselemente.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> oder <paramref name="outer" /> oder <paramref name="inner" /> oder <paramref name="outerKeySelector" /> oder <paramref name="innerKeySelector" /> oder <paramref name="resultSelector" /> ist <see langword="null" /> (in Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing an inner join on two sequences.">Eine Sequenz, die Elemente des Typs <paramref name="TResult" /> enthält, die durch Ausführen eines Inner Joins von zwei Sequenzen ermittelt werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on matching keys. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">Korreliert parallel die Elemente zweier Sequenzen auf der Grundlage von übereinstimmenden Schlüsseln. Schlüssel werden mithilfe eines angegebenen <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> verglichen.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">Die erste zu verknüpfende Sequenz.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">Die Sequenz, die mit der ersten Sequenz verknüpft werden soll.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">Eine Funktion zum Extrahieren des Joinschlüssels aus jedem Element der ersten Sequenz.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">Eine Funktion zum Extrahieren des Joinschlüssels aus jedem Element der zweiten Sequenz.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">Eine Funktion zum Erstellen eines Ergebniselements aus zwei übereinstimmenden Elementen.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">Ein <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> zum Hashen und Vergleichen von Schlüsseln.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">Der Typ der Elemente der ersten Sequenz.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">Der Typ der Elemente der zweiten Sequenz.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">Der Typ der von den Schlüsselauswahlfunktionen zurückgegebenen Schlüssel.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">Der Typ der Ergebniselemente.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> oder <paramref name="action" /> oder <paramref name="outer" /> oder <paramref name="inner" /> oder <paramref name="outerKeySelector" /> oder <paramref name="innerKeySelector" /> oder <paramref name="resultSelector" /> ist <see langword="null" /> (in Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing an inner join on two sequences.">Eine Sequenz, die Elemente des Typs <paramref name="TResult" /> enthält, die durch Ausführen eines Inner Joins von zwei Sequenzen ermittelt werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the last element of a parallel sequence.">Gibt das letzte Element einer parallelen Sequenz zurück.</summary>
      <param name="source" vsli:raw="The sequence to return the last element from.">Die Sequenz, aus der das letzte Element zurückgegeben werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The value at the last position in the source sequence.">Der Wert an der letzten Position in der Quellsequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the last element of a parallel sequence that satisfies a specified condition.">Gibt das letzte Element einer parallelen Sequenz zurück, das eine angegebene Bedingung erfüllt.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Die Sequenz, aus der ein Element zurückgegeben werden soll.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element in &lt;paramref name=&quot;source&quot; /&gt; satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">Kein Element in <paramref name="source" /> erfüllt die Bedingung in <paramref name="predicate" />.</exception>
      <returns vsli:raw="The last element in the sequence that passes the test in the specified predicate function.">Das letzte Element in der Sequenz, das mit der angegebenen Prädikatfunktion erfolgreich überprüft wird.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.">Gibt das letzte Element einer parallelen Sequenz zurück oder einen Standardwert, wenn die Sequenz keine Elemente enthält.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Die Sequenz, aus der ein Element zurückgegeben werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="default() if the source sequence is empty; otherwise, the last element in the sequence.">default(), wenn die Quellsequenz leer ist, andernfalls das letzte Element in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the last element of a parallel sequence that satisfies a condition, or a default value if no such element is found.">Gibt das letzte Element einer parallelen Sequenz zurück, das eine Bedingung erfüllt, oder einen Standardwert, wenn ein solches Element nicht gefunden wird.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Die Sequenz, aus der ein Element zurückgegeben werden soll.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="default() if the sequence is empty or if no elements pass the test in the predicate function; otherwise, the last element that passes the test in the predicate function.">default(), wenn die Sequenz leer ist oder keine Elemente von der Prädikatfunktion erfolgreich überprüft werden, andernfalls das letzte Element, das von der Prädikatfunktion erfolgreich überprüft wird.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns an Int64 that represents the total number of elements in a parallel sequence.">Gibt eine Int64 zurück, die die Gesamtanzahl von Elementen in einer parallelen Sequenz darstellt.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">Eine Sequenz, die zu zählende Elemente enthält.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Anzahl der Elemente in der Quelle ist größer als <see cref="F:System.Int32.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The computed result is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Das berechnete Ergebnis ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns vsli:raw="The number of elements in the input sequence.">Die Anzahl der Elemente in der Eingabesequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns an Int64 that represents how many elements in a parallel sequence satisfy a condition.">Gibt eine Int64 zurück, die die Anzahl von Elementen in einer parallelen Sequenz darstellt, die eine Bedingung erfüllen.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">Eine Sequenz, die zu zählende Elemente enthält.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Anzahl der Elemente in der Quelle ist größer als <see cref="F:System.Int32.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The computed result is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Das berechnete Ergebnis ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns vsli:raw="A number that represents how many elements in the sequence satisfy the condition in the predicate function.">Eine Zahl, die die Anzahl der Elemente in der Sequenz darstellt, die die Bedingung in der Prädikatfunktion erfüllen.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Gibt den Höchstwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Gibt den Höchstwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Gibt den Höchstwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Gibt den Höchstwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Gibt den Höchstwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Gibt den Höchstwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Gibt den Höchstwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Gibt den Höchstwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Gibt den Höchstwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Gibt den Höchstwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Gibt den Höchstwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements in the source sequence.">Der Typ der Elemente in der Quellsequenz.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Ruft parallel für jedes Element einer Sequenz eine Transformierenfunktion auf und gibt den Höchstwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Ruft parallel für jedes Element einer Sequenz eine Transformierenfunktion auf und gibt den Höchstwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Ruft parallel für jedes Element einer Sequenz eine Transformierenfunktion auf und gibt den Höchstwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Ruft parallel für jedes Element einer Sequenz eine Transformierenfunktion auf und gibt den Höchstwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Ruft parallel für jedes Element einer Sequenz eine Transformierenfunktion auf und gibt den Höchstwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Ruft parallel für jedes Element einer Sequenz eine Transformierenfunktion auf und gibt den Höchstwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Ruft parallel für jedes Element einer Sequenz eine Transformierenfunktion auf und gibt den Höchstwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Ruft parallel für jedes Element einer Sequenz eine Transformierenfunktion auf und gibt den Höchstwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Ruft parallel für jedes Element einer Sequenz eine Transformierenfunktion auf und gibt den Höchstwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Ruft parallel für jedes Element einer Sequenz eine Transformierenfunktion auf und gibt den Höchstwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Ruft parallel für jedes Element einer Sequenz eine Transformierenfunktion auf und gibt den Höchstwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Eine Sequenz von Werten, deren Höchstwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">Der Typ des von <paramref name="selector" /> zurückgegebenen Werts.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Der Höchstwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Gibt den Mindestwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Gibt den Mindestwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Gibt den Mindestwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Gibt den Mindestwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Gibt den Mindestwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Gibt den Mindestwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Gibt den Mindestwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Gibt den Mindestwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Gibt den Mindestwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Gibt den Mindestwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Gibt den Mindestwert in einer parallelen Sequenz von Werten zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Ruft parallel für jedes Element einer Sequenz eine Transformationsfunktion auf und gibt den Mindestwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Ruft parallel für jedes Element einer Sequenz eine Transformationsfunktion auf und gibt den Mindestwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Ruft parallel für jedes Element einer Sequenz eine Transformationsfunktion auf und gibt den Mindestwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Ruft parallel für jedes Element einer Sequenz eine Transformationsfunktion auf und gibt den Mindestwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Ruft parallel für jedes Element einer Sequenz eine Transformationsfunktion auf und gibt den Mindestwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Ruft parallel für jedes Element einer Sequenz eine Transformationsfunktion auf und gibt den Mindestwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Ruft parallel für jedes Element einer Sequenz eine Transformationsfunktion auf und gibt den Mindestwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Ruft parallel für jedes Element einer Sequenz eine Transformationsfunktion auf und gibt den Mindestwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Ruft parallel für jedes Element einer Sequenz eine Transformationsfunktion auf und gibt den Mindestwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> enthält keine Elemente.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Ruft parallel für jedes Element einer Sequenz eine Transformationsfunktion auf und gibt den Mindestwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Ruft parallel für jedes Element einer Sequenz eine Transformationsfunktion auf und gibt den Mindestwert zurück.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Eine Sequenz von Werten, deren Mindestwert bestimmt werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">Der Typ des von <paramref name="selector" /> zurückgegebenen Werts.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> enthält keine Elemente und <paramref name="TSource" /> ist ein nicht auf 0 (null) festlegbarer Werttyp.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Der Mindestwert in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
      <summary vsli:raw="Filters the elements of a ParallelQuery based on a specified type.">Filtert die Elemente einer ParallelQuery anhand eines angegebenen Typs.</summary>
      <param name="source" vsli:raw="The sequence with elements to filter.">Die Sequenz, deren Elemente gefiltert werden sollen.</param>
      <typeparam name="TResult" vsli:raw="The type to filter the elements of the sequence on.">Der Typ, nach dem die Elemente der Sequenz gefiltert werden sollen.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains elements from the input sequence filtered by type.">Eine Sequenz, die Elemente der Eingabesequenz enthält, die nach Typ gefiltert sind.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in ascending order according to a key.">Sortiert parallel die Elemente einer Sequenz in aufsteigender Reihenfolge nach einem Schlüssel.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">Eine Sequenz von anzuordnenden Werten.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">Ein OrderedParallelQuery{TSource}, dessen Elemente nach einem Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in ascending order by using a specified comparer.">Sortiert parallel die Elemente einer Sequenz mithilfe eines angegebenen Vergleichs in aufsteigender Reihenfolge.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">Eine Sequenz von anzuordnenden Werten.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">Ein IComparer{TKey} zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">Ein OrderedParallelQuery{TSource}, dessen Elemente nach einem Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in descending order according to a key.">Sortiert parallel die Elemente einer Sequenz in absteigender Reihenfolge nach einem Schlüssel.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">Eine Sequenz von anzuordnenden Werten.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.">Ein OrderedParallelQuery{TSource}, dessen Elemente in absteigender Reihenfolge nach einem Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the elements of a sequence in descending order by using a specified comparer.">Sortiert die Elemente einer Sequenz mithilfe eines angegebenen Vergleichs in absteigender Reihenfolge.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">Eine Sequenz von anzuordnenden Werten.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">Ein IComparer{TKey} zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;KeySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="KeySelector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.">Ein OrderedParallelQuery{TSource}, dessen Elemente in absteigender Reihenfolge nach einem Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
      <summary vsli:raw="Generates a parallel sequence of integral numbers within a specified range.">Generiert eine parallele Sequenz von ganzen Zahlen in einem angegebenen Bereich.</summary>
      <param name="start" vsli:raw="The value of the first integer in the sequence.">Der Wert der ersten ganzen Zahl in der Sequenz.</param>
      <param name="count" vsli:raw="The number of sequential integers to generate.">Die Anzahl der aufeinander folgenden ganzen Zahlen, die generiert werden sollen.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than 0 -or- &lt;paramref name=&quot;start&quot; /&gt; + &lt;paramref name=&quot;count&quot; /&gt; - 1 is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="count" /> ist kleiner als 0 oder <paramref name="start" /> + <paramref name="count" /> –1 ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns vsli:raw="An IEnumerable&amp;lt;Int32&amp;gt; in C# or IEnumerable(Of Int32) in Visual Basic that contains a range of sequential integral numbers.">Eine IEnumerable&lt;Int32&gt;-Schnittstelle in C# oder IEnumerable(Of Int32) in Visual Basic, die einen Bereich sequenzieller ganzer Zahlen enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
      <summary vsli:raw="Generates a parallel sequence that contains one repeated value.">Generiert eine parallele Sequenz, die einen wiederholten Wert enthält.</summary>
      <param name="element" vsli:raw="The value to be repeated.">Der zu wiederholende Wert.</param>
      <param name="count" vsli:raw="The number of times to repeat the value in the generated sequence.">Die gewünschte Anzahl der Wiederholungen des Werts in der generierten Sequenz.</param>
      <typeparam name="TResult" vsli:raw="The type of the value to be repeated in the result sequence.">Der Typ des Werts, der in der Ergebnissequenz wiederholt werden soll.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="count" /> ist kleiner als 0.</exception>
      <returns vsli:raw="A sequence that contains a repeated value.">Eine Sequenz, die einen wiederholten Wert enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Inverts the order of the elements in a parallel sequence.">Kehrt die Reihenfolge der Elemente in einer parallelen Sequenz um.</summary>
      <param name="source" vsli:raw="A sequence of values to reverse.">Eine umzukehrende Sequenz von Werten.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence whose elements correspond to those of the input sequence in reverse order.">Eine Sequenz , deren Elemente den Elementen der Eingabesequenz in umgekehrter Reihenfolge entsprechen.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects in parallel each element of a sequence into a new form.">Projiziert parallel jedes Element einer Sequenz in ein neues Format.</summary>
      <param name="source" vsli:raw="A sequence of values to invoke a transform function on.">Eine Sequenz von Werten, für die eine Transformationsfunktion aufgerufen werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements returned by selector.">Der Typ der von der Auswahl zurückgegebenen Elemente.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">Eine Sequenz, deren Elemente das Ergebnis des Aufrufs einer Transformationsfunktion für jedes Element von <paramref name="source" /> sind.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
      <summary vsli:raw="Projects in parallel each element of a sequence into a new form by incorporating the element's index.">Projiziert parallel jedes Element einer Sequenz in ein neues Format, indem der Index des Elements integriert wird.</summary>
      <param name="source" vsli:raw="A sequence of values to invoke a transform function on.">Eine Sequenz von Werten, für die eine Transformationsfunktion aufgerufen werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements returned by selector.">Der Typ der von der Auswahl zurückgegebenen Elemente.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query. This condition might occur in streaming scenarios.">Mehr als <see cref="F:System.Int32.MaxValue" /> Elemente werden von der Abfrage aufgezählt. Diese Bedingung könnte im Streamingmodus auftreten.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;, based on the index supplied to &lt;paramref name=&quot;selector&quot; /&gt;.">Eine Sequenz, deren Elemente das Ergebnis eines Aufrufs der Transformationsfunktion für jedes Element von <paramref name="source" /> ist, basierend auf dem für <paramref name="selector" /> bereitgestellten Index.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
      <summary vsli:raw="Projects in parallel each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; and flattens the resulting sequences into one sequence.">Projiziert jedes Element einer Sequenz parallel in ein <see cref="T:System.Collections.Generic.IEnumerable`1" /> und fasst die resultierenden Sequenzen in einer einzelnen Sequenz zusammen.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">Eine Sequenz von zu projizierenden Werten.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by selector.">Der von der Auswahl zurückgegebene Typ der Elemente der Sequenz.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.">Eine Sequenz, deren Elemente das Ergebnis eines Aufrufs der 1:n-Transformierenfunktion für jedes Element der Eingabesequenz sind.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
      <summary vsli:raw="Projects in parallel each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, and flattens the resulting sequences into one sequence. The index of each source element is used in the projected form of that element.">Projiziert jedes Element einer Sequenz parallel in ein <see cref="T:System.Collections.Generic.IEnumerable`1" /> und fasst die resultierenden Sequenzen in einer einzelnen Sequenz zusammen. Der Index jedes Quellelements wird im projizierten Format des jeweiligen Elements verwendet.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">Eine Sequenz von zu projizierenden Werten.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by selector.">Der von der Auswahl zurückgegebene Typ der Elemente der Sequenz.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Mehr als <see cref="F:System.Int32.MaxValue" /> Elemente werden von der Abfrage aufgezählt.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.">Eine Sequenz, deren Elemente das Ergebnis eines Aufrufs der 1:n-Transformierenfunktion für jedes Element der Eingabesequenz sind.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.">Projiziert jedes Element einer Sequenz in ein <see cref="T:System.Collections.Generic.IEnumerable`1" />, fasst die resultierenden Sequenzen zu einer einzigen Sequenz zusammen und ruft für jedes Element in dieser Sequenz eine Ergebnisauswahlfunktion auf.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">Eine Sequenz von zu projizierenden Werten.</param>
      <param name="collectionSelector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">Eine Transformierenfunktion, die auf jedes Quellelement angewendet werden soll. Der zweite Parameter der Funktion stellt den Index des Quellelements dar.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">Eine Funktion zum Erstellen eines Ergebniselements anhand eines Elements aus der ersten Sequenz und einer Auflistung von übereinstimmenden Elementen aus der zweiten Sequenz.</param>
      <typeparam name="TSource" vsli:raw="The type of the intermediate elements collected by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">Der Typ der Zwischenelemente, die von <paramref name="collectionSelector" /> erfasst werden.</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements in the result sequence.">Der Typ der Elemente in der Ergebnissequenz.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Mehr als <see cref="F:System.Int32.MaxValue" /> Elemente werden von der Abfrage aufgezählt.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; based on the index supplied to &lt;paramref name=&quot;collectionSelector&quot; /&gt;, and then mapping each of those sequence elements and their corresponding source element to a result element.">Eine Sequenz, deren Elemente das Ergebnis eines Aufrufs der 1:n-Transform-Funktion <paramref name="collectionSelector" /> für jedes Element von <paramref name="source" /> auf der Basis des für <paramref name="collectionSelector" /> angegebenen Indexes und die anschließende Zuordnung jedes dieser Sequenzelemente und ihrer entsprechenden Quellelemente zu einem Ergebniselement sind.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein. The index of each source element is used in the intermediate projected form of that element.">Projiziert jedes Element einer Sequenz in ein <see cref="T:System.Collections.Generic.IEnumerable`1" />, fasst die resultierenden Sequenzen zu einer einzigen Sequenz zusammen und ruft für jedes Element in dieser Sequenz eine Ergebnisauswahlfunktion auf. Der Index jedes Quellelements wird im projizierten Zwischenformat des jeweiligen Elements verwendet.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">Eine Sequenz von zu projizierenden Werten.</param>
      <param name="collectionSelector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">Eine Transformierenfunktion, die auf jedes Quellelement angewendet werden soll. Der zweite Parameter der Funktion stellt den Index des Quellelements dar.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">Eine Funktion zum Erstellen eines Ergebniselements anhand eines Elements aus der ersten Sequenz und einer Auflistung von übereinstimmenden Elementen aus der zweiten Sequenz.</param>
      <typeparam name="TSource" vsli:raw="The type of the intermediate elements collected by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">Der Typ der Zwischenelemente, die von <paramref name="collectionSelector" /> erfasst werden.</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements to return.">Der zurückzugebende Elementtyp.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Mehr als <see cref="F:System.Int32.MaxValue" /> Elemente werden von der Abfrage aufgezählt.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; based on the index supplied to &lt;paramref name=&quot;collectionSelector&quot; /&gt;, and then mapping each of those sequence elements and their corresponding source element to a result element.">Eine Sequenz, deren Elemente das Ergebnis eines Aufrufs der 1:n-Transform-Funktion <paramref name="collectionSelector" /> für jedes Element von <paramref name="source" /> auf der Basis des für <paramref name="collectionSelector" /> angegebenen Indexes und die anschließende Zuordnung jedes dieser Sequenzelemente und ihrer entsprechenden Quellelemente zu einem Ergebniselement sind.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This SequenceEqual overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Diese SequenceEqual-Überladung sollte nie aufgerufen werden. Diese Methode wird als veraltet markiert und löst beim Aufrufen immer <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="second" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="Thrown every time this method is called.">Wird jedes Mal ausgelöst, wenn diese Methode aufgerufen wird.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Überladung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This SequenceEqual overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Diese SequenceEqual-Überladung sollte nie aufgerufen werden. Diese Methode wird als veraltet markiert und löst beim Aufrufen immer <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="second" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="Thrown every time this method is called.">Wird jedes Mal ausgelöst, wenn diese Methode aufgerufen wird.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Überladung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Determines whether two parallel sequences are equal by comparing the elements by using the default equality comparer for their type.">Bestimmt, ob zwei parallele Sequenzen gleich sind, indem die Elemente mithilfe des Standardgleichheitsvergleichs für ihren Typ verglichen werden.</summary>
      <param name="first" vsli:raw="A sequence to compare to second.">Eine Sequenz, die mit einer zweiten Sequenz verglichen werden soll.</param>
      <param name="second" vsli:raw="A sequence to compare to the first input sequence.">Eine Sequenz, die mit der ersten Eingabesequenz verglichen werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Der Typ der Elemente der Eingabesequenzen.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> oder <paramref name="second" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die zwei Quellsequenzen von gleicher Länge sind und ihre entsprechenden Elemente durch den Standardgleichheitsvergleich für ihren Typ als gleich bestimmt werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines whether two parallel sequences are equal by comparing their elements by using a specified IEqualityComparer{T}.">Bestimmt, ob zwei parallele Sequenzen gleich sind, indem ihre Elemente mithilfe eines angegebenen IEqualityComparer{T} verglichen werden.</summary>
      <param name="first" vsli:raw="A sequence to compare to &lt;paramref name=&quot;second&quot; /&gt;.">Eine Sequenz, die mit <paramref name="second" /> verglichen werden soll.</param>
      <param name="second" vsli:raw="A sequence to compare to the first input sequence.">Eine Sequenz, die mit der ersten Eingabesequenz verglichen werden soll.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to use to compare elements.">Ein <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, der zum Vergleichen von Elementen verwendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Der Typ der Elemente der Eingabesequenzen.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> oder <paramref name="second" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die zwei Quellsequenzen von gleicher Länge sind und ihre entsprechenden Elemente durch den Standardgleichheitsvergleich für ihren Typ als gleich bestimmt werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.">Gibt das einzige Element einer parallelen Sequenz zurück und löst eine Ausnahme aus, wenn nicht genau ein Element in der Sequenz vorhanden ist.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">Die Sequenz, deren einziges Element zurückgegeben werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The input sequence contains more than one element. -or- The input sequence is empty.">Die Eingabesequenz enthält mehr als ein Element. -oder- Die Eingabesequenz ist leer.</exception>
      <returns vsli:raw="The single element of the input sequence.">Das einzige Element der Eingabesequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the only element of a parallel sequence that satisfies a specified condition, and throws an exception if more than one such element exists.">Gibt das einzige Element einer parallelen Sequenz zurück, das eine angegebene Bedingung erfüllt, und löst eine Ausnahme aus, wenn mehrere solche Elemente vorhanden sind.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">Die Sequenz, deren einziges Element zurückgegeben werden soll.</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">Eine Funktion zum Überprüfen eines Elements auf eine Bedingung.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;. -or- More than one element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">Kein Element erfüllt die Bedingung in <paramref name="predicate" />. -oder- Mehrere Elemente erfüllen die Bedingung in <paramref name="predicate" />.</exception>
      <returns vsli:raw="The single element of the input sequence that satisfies a condition.">Das einzige Element der Eingabesequenz, das eine Bedingung erfüllt.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.">Gibt das einzige Element einer parallelen Sequenz zurück oder einen Standardwert, wenn die Sequenz leer ist. Diese Methode löst eine Ausnahme aus, wenn mehrere Elemente in der Sequenz vorhanden sind.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">Die Sequenz, deren einziges Element zurückgegeben werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; has more than one element.">
        <paramref name="source" /> hat mehr als ein Element.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The single element of the input sequence, or default() if the sequence contains no elements.">Das einzige Element der Eingabesequenz oder default(), wenn die Sequenz keine Elemente enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the only element of a parallel sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.">Gibt das einzige Element einer parallelen Sequenz zurück, das eine angegebene Bedingung erfüllt, oder einen Standardwert, wenn kein solches Element vorhanden ist. Diese Methode löst eine Ausnahme aus, wenn mehrere Elemente die Bedingung erfüllen.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">Die Sequenz, deren einziges Element zurückgegeben werden soll.</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">Eine Funktion zum Überprüfen eines Elements auf eine Bedingung.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is empty or multiple elements are returned.">
        <paramref name="source" /> ist leer oder mehrere Elemente werden zurückgegeben.</exception>
      <returns vsli:raw="The single element of the input sequence that satisfies the condition, or default() if no such element is found.">Gibt das einzige Element der Eingabesequenz zurück, das die Bedingung erfüllt, oder default(), wenn ein solches Element nicht gefunden wird.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Bypasses a specified number of elements in a parallel sequence and then returns the remaining elements.">Umgeht eine festgelegte Anzahl von Elementen in einer parallelen Sequenz und gibt dann die übrigen Elemente zurück.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Die Sequenz, aus der Elemente zurückgegeben werden sollen.</param>
      <param name="count" vsli:raw="The number of elements to skip before returning the remaining elements.">Die Anzahl der Elemente, die übersprungen werden sollen, bevor die übrigen Elemente zurückgegeben werden.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Count is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;">Anzahl ist größer als <see cref="F:System.Int32.MaxValue" /></exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains the elements that occur after the specified index in the input sequence.">Eine Sequenz, die die Elemente enthält, die nach dem angegebenen Index in der Eingabesequenz auftreten.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.">Umgeht Elemente in einer parallelen Sequenz, solange eine angegebene Bedingung true ist, und gibt dann die übrigen Elemente zurück.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Die Sequenz, aus der Elemente zurückgegeben werden sollen.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.">Eine Sequenz, die die Elemente aus der Eingabesequenz ab dem ersten Element in der linearen Reihe enthält, für das die vom Prädikat angegebene Überprüfung nicht erfolgreich ausgeführt wird.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements. The element's index is used in the logic of the predicate function.">Umgeht Elemente in einer parallelen Sequenz, solange eine angegebene Bedingung true ist, und gibt dann die übrigen Elemente zurück. In der Logik der Prädikatfunktion wird der Index des Elements verwendet.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Die Sequenz, aus der Elemente zurückgegeben werden sollen.</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">Eine Funktion zum Überprüfen jedes Quellelements auf eine Bedingung. Der zweite Parameter der Funktion stellt den Index des Quellelements dar.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Mehr als <see cref="F:System.Int32.MaxValue" /> Elemente werden von der Abfrage aufgezählt.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.">Eine Sequenz, die die Elemente aus der Eingabesequenz ab dem ersten Element in der linearen Reihe enthält, für das die vom Prädikat angegebene Überprüfung nicht erfolgreich ausgeführt wird.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Berechnet parallel die Summe einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Decimal.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Berechnet parallel die Summe einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Double.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Berechnet parallel die Summe einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Int32.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Berechnet parallel die Summe einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Int64.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Berechnet parallel die Summe einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Decimal.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Berechnet parallel die Summe einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Double.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Berechnet parallel die Summe einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Int32.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Berechnet parallel die Summe einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Int64.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Berechnet parallel die Summe einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or-  One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Single.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Berechnet parallel die Summe einer Sequenz von Werten.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Single.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel die Summe einer Sequenz von Werten, die durch den Aufruf einer Transformierenfunktion für jedes Element der Eingabesequenz ermittelt werden.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Decimal.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel die Summe einer Sequenz von Werten, die durch den Aufruf einer Transformierenfunktion für jedes Element der Eingabesequenz ermittelt werden.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Double.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel die Summe einer Sequenz von Werten, die durch den Aufruf einer Transformierenfunktion für jedes Element der Eingabesequenz ermittelt werden.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements in the source sequence.">Der Typ der Elemente in der Quellsequenz.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Int32.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel die Summe einer Sequenz von Werten, die durch den Aufruf einer Transformierenfunktion für jedes Element der Eingabesequenz ermittelt werden.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Int64.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel die Summe einer Sequenz von Werten, die durch den Aufruf einer Transformierenfunktion für jedes Element der Eingabesequenz ermittelt werden.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Decimal.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel die Summe einer Sequenz von Werten, die durch den Aufruf einer Transformierenfunktion für jedes Element der Eingabesequenz ermittelt werden.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Double.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel die Summe einer Sequenz von Werten, die durch den Aufruf einer Transformierenfunktion für jedes Element der Eingabesequenz ermittelt werden.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Int32.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel die Summe einer Sequenz von Werten, die durch den Aufruf einer Transformierenfunktion für jedes Element der Eingabesequenz ermittelt werden.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Int64.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel die Summe einer Sequenz von Werten, die durch den Aufruf einer Transformierenfunktion für jedes Element der Eingabesequenz ermittelt werden.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or-  One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Single.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Berechnet parallel die Summe einer Sequenz von Werten, die durch den Aufruf einer Transformierenfunktion für jedes Element der Eingabesequenz ermittelt werden.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Eine Sequenz von Werten, deren Summe berechnet werden soll.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="selector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Die Summe ist größer als <see cref="F:System.Single.MaxValue" />. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Die Summe der projizierten Werte in der Sequenz.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns a specified number of contiguous elements from the start of a parallel sequence.">Gibt eine angegebene Anzahl von zusammenhängenden Elementen ab dem Anfang einer parallelen Sequenz zurück.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Die Sequenz, aus der Elemente zurückgegeben werden sollen.</param>
      <param name="count" vsli:raw="The number of elements to return.">Die Anzahl der zurückzugebenden Elemente.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains the specified number of elements from the start of the input sequence.">Eine Sequenz, die die festgelegte Anzahl von Elementen ab dem Anfang der Eingabesequenz enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns elements from a parallel sequence as long as a specified condition is true.">Gibt Elemente aus einer parallelen Sequenz zurück, solange eine angegebene Bedingung true ist.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Die Sequenz, aus der Elemente zurückgegeben werden sollen.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains the elements from the input sequence that occur before the element at which the test no longer passes.">Eine Sequenz, die die Elemente aus der Eingabesequenz enthält, die vor dem Element auftreten, bei dem die Überprüfung nicht mehr erfolgreich ist.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Returns elements from a parallel sequence as long as a specified condition is true. The element's index is used in the logic of the predicate function.">Gibt Elemente aus einer parallelen Sequenz zurück, solange eine angegebene Bedingung true ist. In der Logik der Prädikatfunktion wird der Index des Elements verwendet.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Die Sequenz, aus der Elemente zurückgegeben werden sollen.</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">Eine Funktion zum Überprüfen jedes Quellelements auf eine Bedingung. Der zweite Parameter der Funktion stellt den Index des Quellelements dar.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by this query.">Mehr als <see cref="F:System.Int32.MaxValue" /> Elemente werden von dieser Abfrage aufgelistet.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains elements from the input sequence that occur before the element at which the test no longer passes.">Eine Sequenz, die Elemente aus der Eingabesequenz enthält, die vor dem Element auftreten, bei dem die Überprüfung nicht mehr erfolgreich ist.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in ascending order according to a key.">Führt parallel eine nachfolgende Sortierung der Elemente in einer Sequenz in aufsteigender Reihenfolge nach einem Schlüssel durch.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">Ein OrderedParallelQuery{TSource}, das zu sortierende Elemente enthält.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">Ein OrderedParallelQuery{TSource}, dessen Elemente nach einem Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.">Führt parallel mithilfe eines angegebenen Vergleichs eine nachfolgende Sortierung der Elemente in einer Sequenz in aufsteigender Reihenfolge durch.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">Ein OrderedParallelQuery{TSource}, das zu sortierende Elemente enthält.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">Ein IComparer{TKey} zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">Ein OrderedParallelQuery{TSource}, dessen Elemente nach einem Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in descending order, according to a key.">Führt parallel eine nachfolgende Sortierung der Elemente in einer Sequenz in absteigender Reihenfolge nach einem Schlüssel durch.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">Ein OrderedParallelQuery{TSource}, das zu sortierende Elemente enthält.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence whose elements are sorted descending according to a key.">Eine Sequenz, deren Elemente in absteigender Reihenfolge nach einem Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.">Führt parallel mithilfe eines angegebenen Vergleichs eine nachfolgende Sortierung der Elemente in einer Sequenz in absteigender Reihenfolge durch.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">Ein OrderedParallelQuery{TSource}, das zu sortierende Elemente enthält.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">Ein IComparer{TKey} zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence whose elements are sorted descending according to a key.">Eine Sequenz, deren Elemente in absteigender Reihenfolge nach einem Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Creates an array from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">Erstellt ein Array aus einem <see cref="T:System.Linq.ParallelQuery`1" />.</summary>
      <param name="source" vsli:raw="A sequence to create an array from.">Eine Sequenz, aus der ein Array erstellt werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="An array that contains the elements from the input sequence.">Ein Array, das die Elemente aus der Eingabesequenz enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function.">Erstellt ein <see cref="T:System.Collections.Generic.Dictionary`2" /> aus einem <see cref="T:System.Linq.ParallelQuery`1" /> gemäß einer angegebenen Schlüsselauswahlfunktion.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">Eine Sequenz, aus der ein <see cref="T:System.Collections.Generic.Dictionary`2" /> erstellt werden soll.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Eine Funktion zum Extrahieren eines Schlüssels aus jedem Element.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> generiert einen Schlüssel, der ein NULL-Verweis ist (Nothing in Visual Basic). -oder- <paramref name="keySelector" /> erzeugt für zwei Elemente doppelte Schlüssel. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains keys and values.">Ein <see cref="T:System.Collections.Generic.Dictionary`2" />, das Schlüssel und Werte enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function and key comparer.">Erstellt ein <see cref="T:System.Collections.Generic.Dictionary`2" /> aus einer <see cref="T:System.Linq.ParallelQuery`1" /> gemäß einer angegebenen Schlüsselauswahlfunktion und eines angegebenen Schlüsselvergleichs.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">Eine Sequenz, aus der ein <see cref="T:System.Collections.Generic.Dictionary`2" /> erstellt werden soll.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Eine Funktion zum Extrahieren eines Schlüssels aus jedem Element.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">Ein <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> generiert einen Schlüssel, der ein NULL-Verweis ist (Nothing in Visual Basic). -oder- <paramref name="keySelector" /> erzeugt für zwei Elemente doppelte Schlüssel. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains keys and values.">Ein <see cref="T:System.Collections.Generic.Dictionary`2" />, das Schlüssel und Werte enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to specified key selector and element selector functions.">Erstellt ein <see cref="T:System.Collections.Generic.Dictionary`2" /> aus einem <see cref="T:System.Linq.ParallelQuery`1" /> entsprechend der angegebenen Schlüsselauswahlfunktion und Elementauswahlfunktion.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">Eine Sequenz, aus der ein <see cref="T:System.Collections.Generic.Dictionary`2" /> erstellt werden soll.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Eine Funktion zum Extrahieren eines Schlüssels aus jedem Element.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">Eine Transformationsfunktion, mit der aus jedem Element ein Ergebniselementwert erzeugt wird.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">Der Typ des von <paramref name="elementSelector" /> zurückgegebenen Werts.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> oder <paramref name="elementSelector" /> ist ein NULL-Verweis (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> generiert einen Schlüssel, der ein NULL-Verweis ist (Nothing in Visual Basic). -oder- <paramref name="keySelector" /> erzeugt für zwei Elemente doppelte Schlüssel. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">Ein <see cref="T:System.Collections.Generic.Dictionary`2" />, das Werte vom Typ <paramref name="TElement" /> enthält, die aus der Eingabesequenz ausgewählt werden</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function, a comparer, and an element selector function.">Erstellt ein <see cref="T:System.Collections.Generic.Dictionary`2" /> aus einem <see cref="T:System.Linq.ParallelQuery`1" /> entsprechend einer angegebenen Schlüsselauswahlfunktion, einem Vergleich und einer Elementauswahlfunktion.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">Eine Sequenz, aus der ein <see cref="T:System.Collections.Generic.Dictionary`2" /> erstellt werden soll.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Eine Funktion zum Extrahieren eines Schlüssels aus jedem Element.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">Eine Transformationsfunktion, mit der aus jedem Element ein Ergebniselementwert erzeugt wird.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">Ein <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">Der Typ des von <paramref name="elementSelector" /> zurückgegebenen Werts.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> oder <paramref name="elementSelector" /> ist ein NULL-Verweis (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> generiert einen Schlüssel, der ein NULL-Verweis ist (Nothing in Visual Basic). -oder- <paramref name="keySelector" /> erzeugt für zwei Elemente doppelte Schlüssel. Oder: Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">Ein <see cref="T:System.Collections.Generic.Dictionary`2" />, das Werte vom Typ <paramref name="TElement" /> enthält, die aus der Eingabesequenz ausgewählt werden</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; from an &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">Erstellt ein <see cref="T:System.Collections.Generic.List`1" /> aus einem <see cref="T:System.Linq.ParallelQuery`1" />.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; from.">Eine Sequenz, aus der ein <see cref="T:System.Collections.Generic.List`1" /> erstellt werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that contains elements from the input sequence.">Eine <see cref="T:System.Collections.Generic.List`1" />, die Elemente aus der Eingabesequenz enthält</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function.">Erstellt ein <see cref="T:System.Linq.ILookup`2" /> aus einem <see cref="T:System.Linq.ParallelQuery`1" /> gemäß einer angegebenen Schlüsselauswahlfunktion.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">Die Sequenz, aus der ein <see cref="T:System.Linq.ILookup`2" /> erstellt werden soll.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Eine Funktion zum Extrahieren eines Schlüssels aus jedem Element.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains keys and values.">Ein <see cref="T:System.Linq.ILookup`2" />, das Schlüssel und Werte enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function and key comparer.">Erstellt ein <see cref="T:System.Linq.ILookup`2" /> aus einem <see cref="T:System.Linq.ParallelQuery`1" /> gemäß einer angegebenen Schlüsselauswahlfunktion und eines angegebenen Schlüsselvergleichs.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">Die Sequenz, aus der ein <see cref="T:System.Linq.ILookup`2" /> erstellt werden soll.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Eine Funktion zum Extrahieren eines Schlüssels aus jedem Element.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">Ein <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> ist ein NULL-Verweis (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains keys and values.">Ein <see cref="T:System.Linq.ILookup`2" />, das Schlüssel und Werte enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to specified key selector and element selector functions.">Erstellt ein <see cref="T:System.Linq.ILookup`2" /> aus einem <see cref="T:System.Linq.ParallelQuery`1" /> entsprechend der angegebenen Schlüsselauswahlfunktion und Elementauswahlfunktion.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">Die Sequenz, aus der ein <see cref="T:System.Linq.ILookup`2" /> erstellt werden soll.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Eine Funktion zum Extrahieren eines Schlüssels aus jedem Element.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">Eine Transformationsfunktion, mit der aus jedem Element ein Ergebniselementwert erzeugt wird.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">Der Typ des von <paramref name="elementSelector" /> zurückgegebenen Werts.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> oder <paramref name="elementSelector" /> ist ein NULL-Verweis (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">Ein <see cref="T:System.Linq.ILookup`2" />, das Werte vom Typ <paramref name="TElement" /> enthält, die aus der Eingabesequenz ausgewählt werden.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function, a comparer and an element selector function.">Erstellt ein <see cref="T:System.Linq.ILookup`2" /> aus einem <see cref="T:System.Linq.ParallelQuery`1" /> entsprechend einer angegebenen Schlüsselauswahlfunktion, einem Vergleich und einer Elementauswahlfunktion.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">Die Sequenz, aus der ein <see cref="T:System.Linq.ILookup`2" /> erstellt werden soll.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Eine Funktion zum Extrahieren eines Schlüssels aus jedem Element.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">Eine Transformationsfunktion, mit der aus jedem Element ein Ergebniselementwert erzeugt wird.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">Ein <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">Der Typ des von <paramref name="elementSelector" /> zurückgegebenen Werts.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="keySelector" /> oder <paramref name="elementSelector" /> ist ein NULL-Verweis (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A Lookup&amp;lt;(Of &amp;lt;(TKey, TElement&amp;gt;)&amp;gt;) that contains values of type TElement selected from the input sequence.">Ein Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;), das aus der Eingabesequenz ausgewählte Werte des Typs „TElement“ enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Union overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Diese Union-Überladung sollte nie aufgerufen werden. Diese Methode wird als veraltet markiert und löst beim Aufrufen immer <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="second" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Die Ausnahme, die auftritt, wenn die Methode aufgerufen wird.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Überladung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Union overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Diese Union-Überladung sollte nie aufgerufen werden. Diese Methode wird als veraltet markiert und löst beim Aufrufen immer <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="second" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Die Ausnahme, die auftritt, wenn die Methode aufgerufen wird.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Überladung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set union of two parallel sequences by using the default equality comparer.">Erzeugt die Vereinigungsmenge zweier paralleler Sequenzen mithilfe des Standardgleichheitsvergleichs.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements form the first set for the union.">Eine Sequenz, deren unterschiedliche Elemente den ersten Satz für die Vereinigungsmengenbildung darstellen.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements form the second set for the union.">Eine Sequenz, deren unterschiedliche Elemente den zweiten Satz für die Vereinigungsmengenbildung darstellen.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Der Typ der Elemente der Eingabesequenzen.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> oder <paramref name="second" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains the elements from both input sequences, excluding duplicates.">Eine Sequenz, die die Elemente aus beiden Eingabesequenzen ohne Duplikate enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set union of two parallel sequences by using a specified IEqualityComparer{T}.">Erzeugt mithilfe eines angegebenen IEqualityComparer{T} die Vereinigungsmenge zweier paralleler Sequenzen.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements form the first set for the union.">Eine Sequenz, deren unterschiedliche Elemente den ersten Satz für die Vereinigungsmengenbildung darstellen.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements form the second set for the union.">Eine Sequenz, deren unterschiedliche Elemente den zweiten Satz für die Vereinigungsmengenbildung darstellen.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">Ein <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> zum Vergleichen von Werten.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Der Typ der Elemente der Eingabesequenzen.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> oder <paramref name="second" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains the elements from both input sequences, excluding duplicates.">Eine Sequenz, die die Elemente aus beiden Eingabesequenzen ohne Duplikate enthält.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters in parallel a sequence of values based on a predicate.">Filtert parallel eine Sequenz von Werten nach einem Prädikat.</summary>
      <param name="source" vsli:raw="A sequence to filter.">Eine zu filternde Sequenz.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of source.">Der Typ der Elemente der Quelle.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains elements from the input sequence that satisfy the condition.">Eine Sequenz, die Elemente aus der Eingabesequenz enthält, die die Bedingung erfüllen.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Filters in parallel a sequence of values based on a predicate. Each element's index is used in the logic of the predicate function.">Filtert parallel eine Sequenz von Werten nach einem Prädikat. In der Logik der Prädikatfunktion wird der Index der einzelnen Elemente verwendet.</summary>
      <param name="source" vsli:raw="A sequence to filter.">Eine zu filternde Sequenz.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of source.">Der Typ der Elemente der Quelle.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> oder <paramref name="predicate" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Mehr als <see cref="F:System.Int32.MaxValue" /> Elemente werden von der Abfrage aufgezählt.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that contains elements from the input sequence that satisfy the condition.">Eine Sequenz, die Elemente aus der Eingabesequenz enthält, die die Bedingung erfüllen.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; to associate with the query.">Legt das <see cref="T:System.Threading.CancellationToken" /> fest, das der Abfrage zugeordnet werden soll.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">Eine ParallelQuery, für die die Option festgelegt werden soll.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Ein Abbruchtoken.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;paramref name=&quot;cancellationToken&quot; /&gt; has been disposed.">Die <see cref="T:System.Threading.CancellationTokenSource" />, die dem freigegebenen <paramref name="cancellationToken" /> zugeordnet ist.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt; is used multiple times in the query.">
        <paramref name="WithCancellation" /> wird mehrmals in der Abfrage verwendet.</exception>
      <returns vsli:raw="A ParallelQuery representing the same query as &lt;paramref name=&quot;source&quot; /&gt;, but with the registered cancellation token.">Eine ParallelQuery, die die gleiche Abfrage wie die Quelle darstellt, jedoch entsprechend dem registrierten Abbruchtoken.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Sets the degree of parallelism to use in a query. Degree of parallelism is the maximum number of concurrently executing tasks that will be used to process the query.">Legt den Grad der Parallelität für eine Abfrage fest. Der Grad der Parallelität ist die maximale Anzahl gleichzeitig ausgeführter Aufgaben, die zum Verarbeiten der Abfrage verwendet werden.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the limit on the degrees of parallelism.">Eine ParallelQuery, für die der Grenzwert für den Grad der Parallelität festgelegt werden soll.</param>
      <param name="degreeOfParallelism" vsli:raw="The degree of parallelism for the query.">Der Grad der Parallelität für die Abfrage.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;degreeOfParallelism&quot; /&gt; is less than 1 or greater than 512.">
        <paramref name="degreeOfParallelism" /> ist kleiner als 1 oder größer als 512.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="WithDegreeOfParallelism is used multiple times in the query.">WithDegreeOfParallelism wird mehrmals in der Abfrage verwendet.</exception>
      <returns vsli:raw="ParallelQuery representing the same query as source, with the limit on the degrees of parallelism set.">Eine ParallelQuery, die die gleiche Abfrage wie die Quelle mit festgelegtem Grenzwert für den Grad der Parallelität darstellt.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
      <summary vsli:raw="Sets the execution mode of the query.">Legt den Ausführungsmodus der Abfrage fest.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">Eine ParallelQuery, für die die Option festgelegt werden soll.</param>
      <param name="executionMode" vsli:raw="The mode in which to execute the query.">Der Modus, in dem die Abfrage ausgeführt werden soll.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;executionMode&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Linq.ParallelExecutionMode&quot; /&gt; value.">
        <paramref name="executionMode" /> ist kein gültiger <see cref="T:System.Linq.ParallelExecutionMode" />-Wert.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="WithExecutionMode is used multiple times in the query.">WithExecutionMode wird mehrmals in der Abfrage verwendet.</exception>
      <returns vsli:raw="ParallelQuery representing the same query as source, but with the registered execution mode.">Eine ParallelQuery, die die gleiche Abfrage wie die Quelle darstellt, jedoch entsprechend dem registrierten Ausführungsmodus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
      <summary vsli:raw="Sets the merge options for this query, which specify how the query will buffer output.">Legt die Zusammenführungsoptionen für diese Abfrage fest. Diese Optionen geben an, wie die Abfrage die Ausgabe puffert.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">Eine ParallelQuery, für die die Option festgelegt werden soll.</param>
      <param name="mergeOptions" vsli:raw="The merge options to set for this query.">Die Mergeoptionen, die für diese Abfrage festgelegt werden sollen.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Der Typ der Elemente von <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mergeOptions&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Linq.ParallelMergeOptions&quot; /&gt; value.">
        <paramref name="mergeOptions" /> ist kein gültiger <see cref="T:System.Linq.ParallelMergeOptions" />-Wert.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;WithMergeOptions&quot; /&gt; is used multiple times in the query.">
        <paramref name="WithMergeOptions" /> wird mehrmals in der Abfrage verwendet.</exception>
      <returns vsli:raw="ParallelQuery representing the same query as source, but with the registered merge options.">Eine ParallelQuery, die die gleiche Abfrage wie die Quelle darstellt, jedoch entsprechend den registrierten Mergeoptionen.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
      <summary vsli:raw="This Zip overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">Diese Zip-Überladung sollte nie aufgerufen werden. Diese Methode wird als veraltet markiert und löst beim Aufrufen immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="second" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Dieser Parameter wird nicht verwendet.</param>
      <typeparam name="TFirst" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <typeparam name="TSecond" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Dieser Typparameter wird nicht verwendet.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Die Ausnahme, die auftritt, wenn die Methode aufgerufen wird.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Überladung löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
      <summary vsli:raw="Merges in parallel two sequences by using the specified predicate function.">Führt parallel zwei Sequenzen unter Verwendung der angegebenen Prädikatfunktion zusammen.</summary>
      <param name="first" vsli:raw="The first sequence to zip.">Die erste Sequenz, die gezippt werden soll.</param>
      <param name="second" vsli:raw="The second sequence to zip.">Die zweite Sequenz, die gezippt werden soll.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">Eine Funktion zum Erstellen eines Ergebniselements aus zwei übereinstimmenden Elementen.</param>
      <typeparam name="TFirst" vsli:raw="The type of the elements of the first sequence.">Der Typ der Elemente der ersten Sequenz.</typeparam>
      <typeparam name="TSecond" vsli:raw="The type of the elements of the second sequence.">Der Typ der Elemente der zweiten Sequenz.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the return elements.">Der Typ der Rückgabeelemente.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> oder <paramref name="second" /> oder <paramref name="resultSelector" /> ist ein NULL-Verweis (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">Die Abfrage wurde abgebrochen, wobei das Token über <paramref name="WithCancellation" /> übergeben wurde.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Während der Auswertung der Abfrage ist mindestens eine Ausnahme aufgetreten.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing &lt;paramref name=&quot;resultSelector&quot; /&gt; pairwise on two sequences. If the sequence lengths are unequal, this truncates to the length of the shorter sequence.">Eine Sequenz, die Elemente des Typs <paramref name="TResult" /> enthält, die durch paarweises Ausführen von <paramref name="resultSelector" /> für zwei Sequenzen ermittelt werden. Wenn die Sequenzlängen ungleich sind, wird auf die Länge der kürzeren Sequenz gekürzt.</returns>
    </member>
    <member name="T:System.Linq.ParallelExecutionMode">
      <summary vsli:raw="The query execution mode is a hint that specifies how the system should handle performance trade-offs when parallelizing queries.">Der Abfrageausführungsmodus ist ein Hinweis, der angibt, wie das System Leistungskompromisse beim Parallelisieren von Abfragen behandeln soll.</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.Default">
      <summary vsli:raw="This is the default setting. PLINQ will examine the query's structure and will only parallelize the query if will likely result in speedup. If the query structure indicates that speedup is not likely to be obtained, then PLINQ will execute the query as an ordinary LINQ to Objects query.">Dies ist die Standardeinstellung. PLINQ untersucht die Struktur der Abfrage und parallelisiert die Abfrage nur, wenn dies wahrscheinlich zu einer Geschwindigkeitssteigerung führt. Wenn die Abfragestruktur angibt, dass wahrscheinlich keine Geschwindigkeitssteigerung erreicht wird, führt PLINQ die Abfrage als normale LINQ to Objects-Abfrage aus.</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.ForceParallelism">
      <summary vsli:raw="Parallelize the entire query, even if that means using high-overhead algorithms. Use this flag in cases where you know that parallel execution of the query will result in speedup, but PLINQ in the Default mode would execute it as sequential.">Parallelisiert die gesamte Abfrage, auch wenn dies die Verwendung von Algorithmen mit hohem Mehraufwand beinhaltet. Verwenden Sie dieses Flag in Fällen, in denen Sie wissen, dass die parallele Ausführung der Abfrage zu einer Geschwindigkeitssteigerung führt, PLINQ im Standardmodus jedoch eine sequenzielle Ausführung bedeuten würde.</summary>
    </member>
    <member name="T:System.Linq.ParallelMergeOptions">
      <summary vsli:raw="Specifies the preferred type of output merge to use in a query. In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence. This is a hint only, and may not be respected by the system when parallelizing all queries.">Gibt den bevorzugten Typ der Ausgabe Zusammenführung an, der in einer Abfrage verwendet werden soll. Mit anderen Worten: Gibt an, wie PLINQ die Ergebnisse aus den verschiedenen Partitionen wieder zu einer einzelnen Ergebnissequenz zusammenführen soll. Hierbei handelt es sich nur um einen Hinweis, der unter Umständen nicht vom System eingehalten wird, wenn alle Abfragen parallelisiert werden.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.AutoBuffered">
      <summary vsli:raw="Use a merge with output buffers of a size chosen by the system. Results will accumulate into an output buffer before they are available to the consumer of the query.">Verwendet eine Zusammenführung mit Ausgabepuffern einer vom System ausgewählten Größe. Ergebnisse werden in einem Ausgabepuffer gesammelt, bevor sie für den Consumer der Abfrage verfügbar gemacht werden.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.Default">
      <summary vsli:raw="Use the default merge type, which is AutoBuffered.">Verwendet den Standardzusammenführungstyp AutoBuffered.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.FullyBuffered">
      <summary vsli:raw="Use a merge with full output buffers. The system will accumulate all of the results before making any of them available to the consumer of the query.">Verwendet eine Zusammenführung mit vollständigen Ausgabepuffern. Das System sammelt alle Ergebnisse, bevor sie für den Consumer der Abfrage verfügbar gemacht werden.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.NotBuffered">
      <summary vsli:raw="Use a merge without output buffers. As soon as result elements have been computed, make that element available to the consumer of the query.">Verwendet eine Zusammenführung ohne Ausgabepuffer. Sobald Ergebniselemente berechnet wurden, werden sie für den Consumer der Abfrage verfügbar gemacht.</summary>
    </member>
    <member name="T:System.Linq.ParallelQuery">
      <summary vsli:raw="Represents a parallel sequence.">Stellt eine parallele Sequenz dar.</summary>
    </member>
    <member name="M:System.Linq.ParallelQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">Gibt einen Enumerator zurück, der die Sequenz durchläuft.</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">Ein Enumerator, der die Sequenz durchläuft.</returns>
    </member>
    <member name="T:System.Linq.ParallelQuery`1">
      <summary vsli:raw="Represents a parallel sequence.">Stellt eine parallele Sequenz dar.</summary>
      <typeparam name="TSource" vsli:raw="The type of element in the source sequence.">Der Elementtyp in der Quellsequenz.</typeparam>
    </member>
    <member name="M:System.Linq.ParallelQuery`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">Gibt einen Enumerator zurück, der die Sequenz durchläuft.</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">Ein Enumerator, der die Sequenz durchläuft.</returns>
    </member>
  </members>
</doc>