<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Http</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ByteArrayContent">
      <summary vsli:raw="Provides HTTP content based on a byte array.">提供基于字节数组的 HTTP 内容。</summary>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 类的新实例。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">用于初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 的内容。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 类的新实例。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">用于初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 的内容。</param>
      <param name="offset" vsli:raw="The offset, in bytes, in the &lt;paramref name=&quot;content&quot; /&gt; parameter used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">
        <paramref name="content" /> 参数中用于初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 的偏移量（以字节为单位）。</param>
      <param name="count" vsli:raw="The number of bytes in the &lt;paramref name=&quot;content&quot; /&gt; starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">
        <paramref name="content" /> 中从用于初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 的 <paramref name="offset" /> 参数开始的字节数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of content specified by the &lt;paramref name=&quot;content&quot; /&gt; parameter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;count&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;count&quot; /&gt; parameter is greater than the length of content specified by the &lt;paramref name=&quot;content&quot; /&gt; parameter - minus the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> 参数小于零。  
  
- 或 - 
<paramref name="offset" /> 参数大于 <paramref name="content" />  参数指定的内容的长度。  
  
- 或 - 
<paramref name="count" /> 参数小于零。  
  
- 或 - 
<paramref name="count" /> 参数大于由 <paramref name="content" /> 参数减去 <paramref name="offset" /> 参数所指定的内容长度。</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an HTTP content stream for reading. It uses the memory from the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; as a backing store.">创建 HTTP 内容流以进行读取。 它使用 <see cref="T:System.Net.Http.ByteArrayContent" /> 中的内存作为后备存储。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The HTTP content stream.">HTTP 内容流。</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Creates an HTTP content stream as an asynchronous operation for reading whose backing store is memory from the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">异步创建 HTTP 内容流，用于读取哪一个对象的后备存储是 <see cref="T:System.Net.Http.ByteArrayContent" /> 的内存。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes and writes the byte array provided in the constructor to an HTTP content stream.">将构造函数中提供的字节数组序列化并写入一个 HTTP 内容流。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Optional information about the transport, like the channel binding token. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的可选信息，例如通道绑定令牌。 此参数可以为 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.">作为一个异步操作，将构造函数中提供的字节数组序列化并写入一个 HTTP 内容流。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息，例如通道绑定令牌。 此参数可以为 <see langword="null" />。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.">作为一个异步操作，将构造函数中提供的字节数组序列化并写入一个 HTTP 内容流。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息，例如通道绑定令牌。 此参数可以为 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether a byte array has a valid length in bytes.">确定字节数组的长度是否有效（以字节为单位）。</summary>
      <param name="length" vsli:raw="The length in bytes of the byte array.">字节数组的长度（以字节为单位）。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="length" /> 是有效长度，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.ClientCertificateOption">
      <summary vsli:raw="Specifies how client certificates are provided.">指定如何提供客户端证书。</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Automatic">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; will attempt to provide  all available client certificates  automatically.">
        <see cref="T:System.Net.Http.HttpClientHandler" /> 将尝试自动提供所有可用的客户端证书。</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Manual">
      <summary vsli:raw="The application manually provides the client certificates to the &lt;see cref=&quot;T:System.Net.Http.WebRequestHandler&quot; /&gt;. This value is the default.">该应用程序向 <see cref="T:System.Net.Http.WebRequestHandler" /> 手动提供客户端证书。 此值是默认值。</summary>
    </member>
    <member name="T:System.Net.Http.DelegatingHandler">
      <summary vsli:raw="A type for HTTP handlers that delegate the processing of HTTP response messages to another handler, called the inner handler.">将 HTTP 响应消息的处理委托给另一处理程序（称为“内部处理程序”）的 HTTP 处理程序的类型。</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt; class.">创建 <see cref="T:System.Net.Http.DelegatingHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt; class with a specific inner handler.">创建特定内部处理程序的 <see cref="T:System.Net.Http.DelegatingHandler" /> 类的新实例。</summary>
      <param name="innerHandler" vsli:raw="The inner handler which is responsible for processing the HTTP response messages.">负责处理 HTTP 响应消息的内部处理程序。</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt;, and optionally disposes of the managed resources.">释放由 <see cref="T:System.Net.Http.DelegatingHandler" /> 使用的非托管资源，并可根据需要释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server.">将 HTTP 请求发送到内部处理程序，然后再发送到服务器。</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">要发送到服务器的 HTTP 请求消息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel operation.">用于取消操作的取消标记。</param>
      <returns vsli:raw="An HTTP response message.">HTTP 响应消息。</returns>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.">异步发送 HTTP 请求到要发送到服务器的内部处理程序。</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">要发送到服务器的 HTTP 请求消息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel operation.">用于取消操作的取消标记。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 是 <see langword="null" />。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="P:System.Net.Http.DelegatingHandler.InnerHandler">
      <summary vsli:raw="Gets or sets the inner handler which processes the HTTP response messages.">获取或设置处理 HTTP 响应消息的内部处理程序。</summary>
      <returns vsli:raw="The inner handler for HTTP response messages.">HTTP 响应消息的内部处理程序。</returns>
    </member>
    <member name="T:System.Net.Http.FormUrlEncodedContent">
      <summary vsli:raw="A container for name/value tuples encoded using application/x-www-form-urlencoded MIME type.">使用应用程序/x-www-form-urlencoded MIME 类型编码的名称/值元组的容器。</summary>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.FormUrlEncodedContent&quot; /&gt; class with a specific collection of name/value pairs.">使用指定的名称/值对集合初始化 <see cref="T:System.Net.Http.FormUrlEncodedContent" /> 类的新实例。</summary>
      <param name="nameValueCollection" vsli:raw="A collection of name/value pairs.">名称/值对的集合。</param>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write all name/value tuples provided in the constructor to an HTTP content stream as an asynchronous operation.">作为一个异步操作，将构造函数中提供的所有名称/值序列化并写入一个 HTTP 内容流。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息，例如通道绑定令牌。 此参数可以为 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="T:System.Net.Http.HeaderEncodingSelector`1">
      <summary vsli:raw="Represents a method that specifies the encoding to use when interpreting header values.">表示指定在解释标头值时要使用的编码的方法。</summary>
      <param name="headerName" vsli:raw="The name of the header to specify for the encoding.">要为编码指定的标头的名称。</param>
      <param name="context" vsli:raw="The type we are encoding/decoding the headers for.">要编码/解码标头的类型。</param>
      <typeparam name="TContext" vsli:raw="The type of the headers that are being encoded/decoded." />
      <returns vsli:raw="The encoding to use, or &lt;see langword=&quot;null&quot; /&gt; to use the default behavior.">要使用的编码，或为 <see langword="null" /> 以使用默认行为。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <summary vsli:raw="Represents authentication information in Authorization, ProxyAuthorization, WWW-Authenticate, and Proxy-Authenticate header values.">表示 Authorization、ProxyAuthorization、WWW-Authneticate 和 Proxy-Authenticate 标头值中的验证信息。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 类的新实例。</summary>
      <param name="scheme" vsli:raw="The scheme to use for authorization.">用于身份验证的方案。</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 类的新实例。</summary>
      <param name="scheme" vsli:raw="The scheme to use for authorization.">用于身份验证的方案。</param>
      <param name="parameter" vsli:raw="The credentials containing the authentication information of the user agent for the resource being requested.">包含请求资源的用户代理的身份验证消息的凭证。</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an  &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents authentication header value information.">表示身份验证标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid authentication header value information.">
        <paramref name="input" /> 是无效的身份验证标头值信息。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter">
      <summary vsli:raw="Gets the credentials containing the authentication information of the user agent for the resource being requested.">获取包含所请求资源的用户代理的身份验证信息的凭据。</summary>
      <returns vsli:raw="The credentials containing the authentication information.">包含身份验证信息的凭据。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme">
      <summary vsli:raw="Gets the scheme to use for authorization.">获取用于身份验证的方案。</summary>
      <returns vsli:raw="The scheme to use for authorization.">用于身份验证的方案。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.CacheControlHeaderValue">
      <summary vsli:raw="Represents the value of the Cache-Control header.">表示 Cache-Control 标头的值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a  &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents cache-control header value information.">表示缓存控制标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid cache-control header value information.">
        <paramref name="input" /> 是无效的缓存控制标头值信息。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions">
      <summary vsli:raw="Cache-extension tokens, each with an optional assigned value.">Cache-extension 标记，每个标记都有一个可选分配值。</summary>
      <returns vsli:raw="A collection of cache-extension tokens each with an optional assigned value.">Cache-extension 标记集合，每个标记都有一个可选分配值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge">
      <summary vsli:raw="The maximum age, specified in seconds, that the HTTP client is willing to accept a response.">HTTP 客户端愿意接受响应的最长时间（秒）。</summary>
      <returns vsli:raw="The time in seconds.">时间值（以秒计）。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale">
      <summary vsli:raw="Whether an HTTP client is willing to accept a response that has exceeded its expiration time.">是否一个 HTTP 客户端愿意接受一个已超出其过期时间的响应。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 HTTP 客户端愿意接受一个已超出其过期时间的响应，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit">
      <summary vsli:raw="The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.">HTTP 客户端愿意接受已超出其过期时间的响应的最大时间值（以秒为单位）。</summary>
      <returns vsli:raw="The time in seconds.">时间值（以秒计）。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh">
      <summary vsli:raw="The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.">HTTP 客户端愿意接受响应的新鲜度时长（以秒为单位）。</summary>
      <returns vsli:raw="The time in seconds.">时间值（以秒计）。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate">
      <summary vsli:raw="Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.">当缓存条目变得陈旧时，源服务器是否需要对任何后续使用的缓存条目进行重新验证。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果缓存条目变得陈旧时，源服务器需要对任何后续使用的缓存条目进行重新验证，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache">
      <summary vsli:raw="Whether an HTTP client is willing to accept a cached response.">HTTP 客户端是否愿意接受缓存的响应。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP client is not willing to accept a cached response; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果 HTTP 客户端不愿意接受缓存的响应，则为;否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders">
      <summary vsli:raw="A collection of fieldnames in the &quot;no-cache&quot; directive in a cache-control header field on an HTTP response.">HTTP 响应上一个缓存控制标头字段中“no-cache”指令内的字段名的集合。</summary>
      <returns vsli:raw="A collection of fieldnames.">字段名的集合。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore">
      <summary vsli:raw="Whether a cache must not store any part of either the HTTP request message or any response.">缓存是否不得存储 HTTP 请求消息或任何响应的任何部分。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache must not store any part of either the HTTP request message or any response; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果缓存不能存储 HTTP 请求消息或任何响应的任何部分，则为;否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform">
      <summary vsli:raw="Whether a cache or proxy must not change any aspect of the entity-body.">缓存或代理是否不能更改实体正文的任何方面。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache or proxy must not change any aspect of the entity-body; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果缓存或代理不能更改实体正文的任何方面，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached">
      <summary vsli:raw="Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.">缓存是否应使用与该 HTTP 请求的其他约束一致的已缓存条目进行响应或使用 504（网关超时）状态进行响应。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果缓存应使用与该 HTTP 请求的其他约束一致的已缓存条目进行响应或使用 504（网关超时）状态进行响应，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Private">
      <summary vsli:raw="Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.">是否全部或部分 HTTP 响应消息用于单个用户，且不能由共享缓存进行缓存。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果全部或部分 HTTP 响应消息用于单个用户，且不能由共享缓存进行缓存，则为 <see langword="true" />，反之则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders">
      <summary vsli:raw="A collection fieldnames in the &quot;private&quot; directive in a cache-control header field on an HTTP response.">“private”指令中的集合字段名，其位于 HTTP 响应的缓存控制标头字段中。</summary>
      <returns vsli:raw="A collection of fieldnames.">字段名的集合。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate">
      <summary vsli:raw="Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.">当缓存条目针对于共享用户代理缓存变得陈旧时，源服务器是否需要对任何后续使用的缓存条目进行重新验证。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">当缓存条目针对于共享用户代理缓存变得陈旧时，如果源服务器需要对任何后续使用的条目进行重新验证，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Public">
      <summary vsli:raw="Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.">是否一个 HTTP 响应可由任何缓存进行缓存，即使该响应通常为不可缓存或只能在非共享缓存中缓存。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 HTTP 响应可由任何缓存进行缓存，即使该响应通常为不可缓存或只能在非共享缓存中缓存也是如此，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge">
      <summary vsli:raw="The shared maximum age, specified in seconds, in an HTTP response that overrides the &quot;max-age&quot; directive in a cache-control header or an Expires header for a shared cache.">HTTP 响应中共享的最长使用期限（以秒为单位），该响应为一个共享缓存重写缓存控制标头或 Expires 标头中的 "max-age" 指令。</summary>
      <returns vsli:raw="The time in seconds.">时间值（以秒计）。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <summary vsli:raw="Represents the value of the Content-Disposition header.">表示 Content-Disposition 标头的值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 类的新实例。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 类的新实例。</summary>
      <param name="dispositionType" vsli:raw="A string that contains a &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt;.">包含 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 的字符串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an  &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents content disposition header value information.">表示内容处置标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid content disposition header value information.">
        <paramref name="input" /> 为无效内容处置标头值信息。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate">
      <summary vsli:raw="The date at which   the file was created.">创建文件的日期。</summary>
      <returns vsli:raw="The file creation date.">文件创建日期。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType">
      <summary vsli:raw="The disposition type for a content body part.">内容正文部分的处置类型。</summary>
      <returns vsli:raw="The disposition type.">处置类型。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName">
      <summary vsli:raw="A suggestion for how to construct a filename for   storing the message payload to be used if the entity is   detached and stored in a separate file.">有关如果实体被分离并存储在单独的文件中时，如何构建用于存储要使用的消息有效载荷的文件名的建议。</summary>
      <returns vsli:raw="A suggested filename.">建议的文件名。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar">
      <summary vsli:raw="A suggestion for how to construct filenames for   storing message payloads to be used if the entities are    detached and stored in a separate files.">一条建议，提议在实体被分离并存储在单独文件中时如何构建文件名来存储要使用的消息有效负载。</summary>
      <returns vsli:raw="A suggested filename of the form filename*.">建议的表单文件名*。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate">
      <summary vsli:raw="The date at   which the file was last modified.">上次修改文件的日期。</summary>
      <returns vsli:raw="The file modification date.">文件修改日期。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name">
      <summary vsli:raw="The name for a content body part.">内容正文部分的名称。</summary>
      <returns vsli:raw="The name for the content body part.">内容正文部分的名称。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters">
      <summary vsli:raw="A set of parameters included the Content-Disposition header.">一组包含 Content-disposition 标头的参数。</summary>
      <returns vsli:raw="A collection of parameters.">参数的集合。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate">
      <summary vsli:raw="The date the file was last read.">上次读取文件的日期。</summary>
      <returns vsli:raw="The last read date.">上次读取日期。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size">
      <summary vsli:raw="The approximate size, in bytes, of the file.">文件的近似大小（以字节为单位）。</summary>
      <returns vsli:raw="The approximate size, in bytes.">以字节为单位的近似大小。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <summary vsli:raw="Represents the value of the Content-Range header.">表示 Content-Range 标头的值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 类的新实例。</summary>
      <param name="length" vsli:raw="The starting or ending point of the range, in bytes.">范围的开始点或结束点（以字节为单位）。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 类的新实例。</summary>
      <param name="from" vsli:raw="The position, in bytes, at which to start sending data.">开始发送数据的位置（以字节为单位）。</param>
      <param name="to" vsli:raw="The position, in bytes, at which to stop sending data.">停止发送数据的位置，以字节为单位。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 类的新实例。</summary>
      <param name="from" vsli:raw="The position, in bytes, at which to start sending data.">开始发送数据的位置（以字节为单位）。</param>
      <param name="to" vsli:raw="The position, in bytes, at which to stop sending data.">停止发送数据的位置，以字节为单位。</param>
      <param name="length" vsli:raw="The starting or ending point of the range, in bytes.">范围的开始点或结束点（以字节为单位）。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">确定指定的对象是否等于当前 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents content range header value information.">表示内容范围标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid content range header value information.">
        <paramref name="input" /> 为无效内容范围标头值信息。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.From">
      <summary vsli:raw="Gets the position at which to start sending data.">获取开始发送数据的位置。</summary>
      <returns vsli:raw="The position, in bytes, at which to start sending data.">开始发送数据的位置（以字节为单位）。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength">
      <summary vsli:raw="Gets whether the Content-Range header has a length specified.">获取 Content-Range 标头是否具有指定的长度。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Content-Range has a length specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 Content-Range 标头具有指定的长度，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange">
      <summary vsli:raw="Gets whether the Content-Range has a range specified.">获取判断结果，即 Content-Range 是否指定了范围。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Content-Range has a range specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 Content-Range 指定了范围，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length">
      <summary vsli:raw="Gets the length of the full entity-body.">获取完整实体主体的长度。</summary>
      <returns vsli:raw="The length of the full entity-body.">完整实体主体的长度。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.To">
      <summary vsli:raw="Gets the position at which to stop sending data.">获取停止发送数据的位置。</summary>
      <returns vsli:raw="The position at which to stop sending data.">停止发送数据的位置。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit">
      <summary vsli:raw="The range units used.">使用的范围单位。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains range units.">包含范围单位的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.EntityTagHeaderValue">
      <summary vsli:raw="Represents an entity-tag header value.">表示实体标记标头值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 类的新实例。</summary>
      <param name="tag" vsli:raw="A string that contains an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">包含 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 的字符串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 类的新实例。</summary>
      <param name="tag" vsli:raw="A string that contains an  &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">包含 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 的字符串。</param>
      <param name="isWeak" vsli:raw="A value that indicates if this entity-tag header is a weak validator. If the entity-tag header is weak validator, then &lt;paramref name=&quot;isWeak&quot; /&gt; should be set to &lt;see langword=&quot;true&quot; /&gt;. If the entity-tag header is a strong validator, then &lt;paramref name=&quot;isWeak&quot; /&gt; should be set to &lt;see langword=&quot;false&quot; /&gt;.">一个指示此实体标记标头是否为弱验证程序的值。 如果实体标记标头为弱验证程序，则应将 <paramref name="isWeak" /> 设置为 <see langword="true" />。 如果实体标记标头为强验证程序，则应将 <paramref name="isWeak" /> 设置为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents entity tag header value information.">表示实体标记标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid entity tag header value information.">
        <paramref name="input" /> 是无效的实体标记标头值信息。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Any">
      <summary vsli:raw="Gets the entity-tag header value.">获取实体标记标头值。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">返回 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak">
      <summary vsli:raw="Gets whether the entity-tag is prefaced by a weakness indicator.">获取判断结果，即该实体标记是否以漏洞指示器开头。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entity-tag is prefaced by a weakness indicator; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该实体标记以漏洞指示器开头，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag">
      <summary vsli:raw="Gets the opaque quoted string.">获取不透明的带引号的字符串。</summary>
      <returns vsli:raw="An opaque quoted string.">不透明的带引号的字符串。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpContentHeaders">
      <summary vsli:raw="Represents the collection of Content Headers as defined in RFC 2616.">表示 RFC 2616 中定义的“内容标头”的集合。</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Allow">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Allow&quot; /&gt; content header on an HTTP response.">获取 HTTP 响应上的 <see langword="Allow" /> 内容标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Allow&quot; /&gt; header on an HTTP response.">HTTP 响应上的 <see langword="Allow" /> 标头的值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Disposition&quot; /&gt; content header on an HTTP response.">获取 HTTP 响应上的 <see langword="Content-Disposition" /> 内容标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Disposition&quot; /&gt; content header on an HTTP response.">HTTP 响应上的 <see langword="Content-Disposition" /> 内容标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Encoding&quot; /&gt; content header on an HTTP response.">获取 HTTP 响应上的 <see langword="Content-Encoding" /> 内容标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Encoding&quot; /&gt; content header on an HTTP response.">HTTP 响应上的 <see langword="Content-Encoding" /> 内容标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Language&quot; /&gt; content header on an HTTP response.">获取 HTTP 响应上的 <see langword="Content-Language" /> 内容标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Language&quot; /&gt; content header on an HTTP response.">HTTP 响应上的 <see langword="Content-Language" /> 内容标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Length&quot; /&gt; content header on an HTTP response.">获取或设置 HTTP 响应上的 <see langword="Content-Length" /> 内容标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Length&quot; /&gt; content header on an HTTP response.">HTTP 响应上的 <see langword="Content-Length" /> 内容标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Location&quot; /&gt; content header on an HTTP response.">获取或设置 HTTP 响应上的 <see langword="Content-Location" /> 内容标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Location&quot; /&gt; content header on an HTTP response.">HTTP 响应上的 <see langword="Content-Location" /> 内容标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-MD5&quot; /&gt; content header on an HTTP response.">获取或设置 HTTP 响应上的 <see langword="Content-MD5" /> 内容标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-MD5&quot; /&gt; content header on an HTTP response.">HTTP 响应上的 <see langword="Content-MD5" /> 内容标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Range&quot; /&gt; content header on an HTTP response.">获取或设置 HTTP 响应上的 <see langword="Content-Range" /> 内容标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Range&quot; /&gt; content header on an HTTP response.">HTTP 响应上的 <see langword="Content-Range" /> 内容标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentType">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Type&quot; /&gt; content header on an HTTP response.">获取或设置 HTTP 响应上的 <see langword="Content-Type" /> 内容标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Type&quot; /&gt; content header on an HTTP response.">HTTP 响应上的 <see langword="Content-Type" /> 内容标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Expires">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Expires&quot; /&gt; content header on an HTTP response.">获取或设置 HTTP 响应上的 <see langword="Expires" /> 内容标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Expires&quot; /&gt; content header on an HTTP response.">HTTP 响应上的 <see langword="Expires" /> 内容标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.LastModified">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Last-Modified&quot; /&gt; content header on an HTTP response.">获取或设置 HTTP 响应上的 <see langword="Last-Modified" /> 内容标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Last-Modified&quot; /&gt; content header on an HTTP response.">HTTP 响应上的 <see langword="Last-Modified" /> 内容标头值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaders">
      <summary vsli:raw="A collection of headers and their values as defined in RFC 2616.">RFC 2616 中定义标头及其值的集合。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Adds the specified header and its values into the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">添加指定的标头及其值到 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中。</summary>
      <param name="name" vsli:raw="The header to add to the collection.">要添加到集合中的标头。</param>
      <param name="values" vsli:raw="A list of header values to add to the collection.">要向集合中添加的标头值的列表。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name cannot be null or empty.">名称不能为 NULL 或为空。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The values cannot be null or empty.">值不能为 NULL 或为空。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.">标头名称使用不当。 请确保请求头与 HttpRequestMessage 一起使用、响应头与 HttpResponseMessage 一起使用，而内容头与 HttpContent 对象一起使用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="The header name format is invalid.&#xA;&#xA;-or-&#xA;&#xA;New line characters in header values must be followed by a white-space character.">标头名称格式无效。

- 或 -

标头值中的新行字符必须后接一个空格。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)">
      <summary vsli:raw="Adds the specified header and its value into the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">添加指定的标头及其值到 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中。</summary>
      <param name="name" vsli:raw="The header to add to the collection.">要添加到集合中的标头。</param>
      <param name="value" vsli:raw="The content of the header.">标头的内容。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name cannot be null or empty.">名称不能为 NULL 或为空。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.">标头名称使用不当。 请确保请求头与 HttpRequestMessage 一起使用、响应头与 HttpResponseMessage 一起使用，而内容头与 HttpContent 对象一起使用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="The header name format is invalid.&#xA;&#xA;-or-&#xA;&#xA;New line characters in header values must be followed by a white-space character.">标头名称格式无效。

- 或 -

标头值中的新行字符必须后接一个空格。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Clear">
      <summary vsli:raw="Removes all headers from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">从 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中移除所有标头。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)">
      <summary vsli:raw="Returns if  a specific header exists in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">在 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中存在特定标头时返回。</summary>
      <param name="name" vsli:raw="The specific header.">特定标头。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header exists in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果集合中存在特定标头，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; instance.">返回可循环访问 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 实例的枚举器。</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">用于 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 的枚举数。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)">
      <summary vsli:raw="Returns all header values for a specified header stored in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">返回存储于 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中的指定标头的所有标头值。</summary>
      <param name="name" vsli:raw="The specified header to return values for.">要为其返回值的指定标头。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The header cannot be found.">找不到标头。</exception>
      <returns vsli:raw="An array of header strings.">标头字符串数组。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)">
      <summary vsli:raw="Removes the specified header from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">从 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中移除指定的标头。</summary>
      <param name="name" vsli:raw="The name of the header to remove from the collection.">要从集合中移除的标头名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was not found in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection or if &lt;paramref name=&quot;item&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through a &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">获取可循环访问 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 的枚举器。</summary>
      <returns vsli:raw="An instance of an implementation of an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can iterate through a &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">可循环访问 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 的一个 <see cref="T:System.Collections.IEnumerator" /> 的实现的实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Returns a value that indicates whether the specified header and its values were added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection without validating the provided information.">返回一个值，该值指示指定的标头及其值是否添加到 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合，而无需验证提供的信息。</summary>
      <param name="name" vsli:raw="The header to add to the collection.">要添加到集合中的标头。</param>
      <param name="values" vsli:raw="The values of the header.">标头的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;values&quot; /&gt; could be added to the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果指定的标头 <paramref name="name" /> 和 <paramref name="values" /> 可能被添加到集合，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)">
      <summary vsli:raw="Returns a value that indicates whether the specified header and its value were added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection without validating the provided information.">返回一个值，该值指示指定的标头及其值是否添加到了 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合，而无需验证提供的信息。</summary>
      <param name="name" vsli:raw="The header to add to the collection.">要添加到集合中的标头。</param>
      <param name="value" vsli:raw="The content of the header.">标头的内容。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;value&quot; /&gt; could be added to the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果指定的标头 <paramref name="name" /> 和 <paramref name="value" /> 可能被添加到集合，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
      <summary vsli:raw="Return if a specified header and specified values are stored in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">如果指定的标头和指定的值存储在 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中，则返回。</summary>
      <param name="name" vsli:raw="The specified header.">指定的标头。</param>
      <param name="values" vsli:raw="The specified header values.">指定的标头值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;see langword=&quot;values&quot; /&gt; are stored in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果指定的标头 <paramref name="name" /> 和 <see langword="values" /> 存储在集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <summary vsli:raw="Represents a collection of header values.">表示标头值的集合。</summary>
      <typeparam name="T" vsli:raw="The header collection type.">标头集合类型。</typeparam>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)">
      <summary vsli:raw="Adds an entry to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">将某项添加到 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 中。</summary>
      <param name="item" vsli:raw="The item to add to the header collection.">要添加到标头集合的项。</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear">
      <summary vsli:raw="Removes all entries from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">从 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 中移除所有项。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)">
      <summary vsli:raw="Determines if the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; contains an item.">确定 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 是否包含一个项。</summary>
      <param name="item" vsli:raw="The item to find to the header collection.">要查找的标头集合的项。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entry is contained in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该条目包含在 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 实例中，则为 <see langword="true" />；否则为 <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">从目标数组的指定索引处开始将整个 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 复制到兼容的一维 <see cref="T:System.Array" />。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 复制的元素的目标。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">返回循环访问 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 的枚举数。</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 实例的枚举器。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)">
      <summary vsli:raw="Parses and adds an entry to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">分析项并将其添加到 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。</summary>
      <param name="input" vsli:raw="The entry to add.">要添加的项。</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)">
      <summary vsli:raw="Removes the specified item from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">从 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 中删除指定的项。</summary>
      <param name="item" vsli:raw="The item to remove.">要移除的项。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;item&quot; /&gt; was removed from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已删除 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 实例中的 <paramref name="item" />，则为 <see langword="true" />；否则为 <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">返回循环访问 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 的枚举数。</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 实例的枚举器。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; object. object.">返回表示当前 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 对象的字符串。 的名称。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)">
      <summary vsli:raw="Determines whether the input could be parsed and added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">确定是否可以解析输入并将其添加到 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。</summary>
      <param name="input" vsli:raw="The entry to validate.">要验证的条目。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;input&quot; /&gt; could be parsed and added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 可以解析并添加到 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 实例，则为 <see langword="true" />；否则为 <see langword="false" /></returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count">
      <summary vsli:raw="Gets the number of headers in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">获取 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 中的标头数。</summary>
      <returns vsli:raw="The number of headers in a collection.">集合中的标头数</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance is read-only.">获取一个值，该值指示 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 实例是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 实例为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpRequestHeaders">
      <summary vsli:raw="Represents the collection of Request Headers as defined in RFC 2616.">表示 RFC 2616 中定义的“请求标头”的集合。</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Accept">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="Accept" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Accept" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Charset&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="Accept-Charset" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Charset&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Accept-Charset" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Encoding&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="Accept-Encoding" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Encoding&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Accept-Encoding" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Language&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="Accept-Language" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Language&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Accept-Language" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Authorization&quot; /&gt; header for an HTTP request.">获取或设置 HTTP 请求的 <see langword="Authorization" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Authorization&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Authorization" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP request.">获取或设置 HTTP 请求的 <see langword="Cache-Control" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Cache-Control" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Connection">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="Connection" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Connection" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request contains Close.">获取或设置一个值，该值表明 HTTP 请求的 <see langword="Connection" /> 标头是否含有 Close。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Connection&quot; /&gt; header contains Close, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="Connection" /> 标头含有 Close，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Date">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP request.">获取或设置 HTTP 请求的 <see langword="Date" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Date" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Expect">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="Expect" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Expect" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request contains Continue.">获取或设置一个值，该值指示 HTTP 请求的 <see langword="Expect" /> 标头是否含有 Continue。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Expect&quot; /&gt; header contains Continue, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="Expect" /> 标头含有 Continue 则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.From">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;From&quot; /&gt; header for an HTTP request.">获取或设置 HTTP 请求的 <see langword="From" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;From&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="From" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Host">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Host&quot; /&gt; header for an HTTP request.">获取或设置 HTTP 请求的 <see langword="Host" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Host&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Host" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;If-Match&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="If-Match" /> 标头值。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.  &#xA;  &#xA; The value of the &lt;see langword=&quot;If-Match&quot; /&gt; header for an HTTP request.">返回 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。  
  
HTTP 请求的 <see langword="If-Match" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; header for an HTTP request.">获取或设置 HTTP 请求的 <see langword="If-Modified-Since" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="If-Modified-Since" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;If-None-Match&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="If-None-Match" /> 标头值。</summary>
      <returns vsli:raw="Gets the value of the &lt;see langword=&quot;If-None-Match&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="If-None-Match" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Range&quot; /&gt; header for an HTTP request.">获取或设置 HTTP 请求的 <see langword="If-Range" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Range&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="If-Range" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Unmodified-Since&quot; /&gt; header for an HTTP request.">获取或设置 HTTP 请求的 <see langword="If-Unmodified-Since" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Unmodified-Since&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="If-Unmodified-Since" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Max-Forwards&quot; /&gt; header for an HTTP request.">获取或设置 HTTP 请求的 <see langword="Max-Forwards" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Max-Forwards&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Max-Forwards" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="Pragma" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Pragma" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Proxy-Authorization&quot; /&gt; header for an HTTP request.">获取或设置 HTTP 请求的 <see langword="Proxy-Authorization" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Proxy-Authorization&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Proxy-Authorization" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Range">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Range&quot; /&gt; header for an HTTP request.">获取或设置 HTTP 请求的 <see langword="Range" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Range&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Range" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Referer&quot; /&gt; header for an HTTP request.">获取或设置 HTTP 请求的 <see langword="Referer" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Referer&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Referer" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TE">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;TE&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="TE" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;TE&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="TE" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="Trailer" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Trailer" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="Transfer-Encoding" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Transfer-Encoding" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request contains chunked.">获取或设置一个值，该值表明 HTTP 请求的 <see langword="Transfer-Encoding" /> 标头是否含有 chunked。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header contains chunked, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="Transfer-Encoding" /> 标头含有 chunked，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="Upgrade" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Upgrade" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;User-Agent&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="User-Agent" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;User-Agent&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="User-Agent" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Via">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="Via" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Via" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Warning">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP request.">获取 HTTP 请求的 <see langword="Warning" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP request.">HTTP 请求的 <see langword="Warning" /> 标头值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpResponseHeaders">
      <summary vsli:raw="Represents the collection of Response Headers as defined in RFC 2616.">表示 RFC 2616 中定义的“响应标头”的集合。</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Ranges&quot; /&gt; header for an HTTP response.">获取 HTTP 响应的 <see langword="Accept-Ranges" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Ranges&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Accept-Ranges" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Age">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Age&quot; /&gt; header for an HTTP response.">获取或设置 HTTP 响应的 <see langword="Age" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Age&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Age" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP response.">获取或设置 HTTP 响应的 <see langword="Cache-Control" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Cache-Control" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Connection">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response.">获取 HTTP 响应的 <see langword="Connection" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Connection" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response contains Close.">获取或设置一个值，该值表明 HTTP 响应的 <see langword="Connection" /> 标头是否含有 Close。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Connection&quot; /&gt; header contains Close, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="Connection" /> 标头含有 Close，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Date">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP response.">获取或设置 HTTP 响应的 <see langword="Date" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Date" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ETag">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;ETag&quot; /&gt; header for an HTTP response.">获取或设置 HTTP 响应的 <see langword="ETag" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;ETag&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="ETag" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Location">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Location&quot; /&gt; header for an HTTP response.">获取或设置 HTTP 响应的 <see langword="Location" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Location&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Location" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP response.">获取 HTTP 响应的 <see langword="Pragma" /> 标头值。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.  &#xA;  &#xA; The value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP response.">返回 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。  
  
HTTP 响应的 <see langword="Pragma" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Proxy-Authenticate&quot; /&gt; header for an HTTP response.">获取 HTTP 响应的 <see langword="Proxy-Authenticate" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Proxy-Authenticate&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Proxy-Authenticate" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Retry-After&quot; /&gt; header for an HTTP response.">获取或设置 HTTP 响应的 <see langword="Retry-After" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Retry-After&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Retry-After" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Server">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Server&quot; /&gt; header for an HTTP response.">获取 HTTP 响应的 <see langword="Server" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Server&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Server" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP response.">获取 HTTP 响应的 <see langword="Trailer" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Trailer" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response.">获取 HTTP 响应的 <see langword="Transfer-Encoding" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Transfer-Encoding" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response contains chunked.">获取或设置一个值，该值指示 HTTP 响应的 <see langword="Transfer-Encoding" /> 标头是否含有 chunked。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header contains chunked, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="Transfer-Encoding" /> 标头含有 chunked，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP response.">获取 HTTP 响应的 <see langword="Upgrade" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Upgrade" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Vary">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Vary&quot; /&gt; header for an HTTP response.">获取 HTTP 响应的 <see langword="Vary" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Vary&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Vary" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Via">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP response.">获取 HTTP 响应的 <see langword="Via" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Via" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Warning">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP response.">获取 HTTP 响应的 <see langword="Warning" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="Warning" /> 标头值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;WWW-Authenticate&quot; /&gt; header for an HTTP response.">获取 HTTP 响应的 <see langword="WWW-Authenticate" /> 标头值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;WWW-Authenticate&quot; /&gt; header for an HTTP response.">HTTP 响应的 <see langword="WWW-Authenticate" /> 标头值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <summary vsli:raw="Represents a media type used in a Content-Type header as defined in the RFC 2616.">表示使用 Content-Type 标头的在 RFC 2616 中定义的媒体类型。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 类的新实例。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object used to initialize the new instance.">用于初始化新实例的 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 对象。</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 类的新实例。</summary>
      <param name="mediaType" vsli:raw="The source represented as a string to initialize the new instance.">一个以用于初始化新实例的字符串的形式表示的源。</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents media type header value information.">表示媒体类型标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid media type header value information.">
        <paramref name="input" /> 为无效媒体类型标头值信息。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet">
      <summary vsli:raw="Gets or sets the character set.">获取或设置字符集。</summary>
      <returns vsli:raw="The character set.">字符集。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType">
      <summary vsli:raw="Gets or sets the media-type header value.">获取或设置媒体类型标头值。</summary>
      <returns vsli:raw="The media-type header value.">媒体类型标头值参数。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters">
      <summary vsli:raw="Gets or sets the media-type header value parameters.">获取或设置媒体类型标头值参数。</summary>
      <returns vsli:raw="The media-type header value parameters.">媒体类型标头值参数。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <summary vsli:raw="Represents a media type with an additional quality factor used in a Content-Type header.">表示在 Content-Type 标头中使用的具有额外质量因素的媒体类型。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 类的新实例。</summary>
      <param name="mediaType" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; represented as string to initialize the new instance.">一个 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />，它表示要用于初始化新实例的字符串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 类的新实例。</summary>
      <param name="mediaType" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; represented as string to initialize the new instance.">一个 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />，它表示要用于初始化新实例的字符串。</param>
      <param name="quality" vsli:raw="The quality associated with this header value.">与标头值关联的质量。</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents media type with quality header value information.">一个字符串，它表示具有质量标头值信息的媒体类型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid media type with quality header value information.">
        <paramref name="input" /> 不是具有质量标头值信息的有效媒体类型。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets or sets the quality value for the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt;.">获取或设置 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 的质量值。</summary>
      <returns vsli:raw="The quality value for the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 对象的质量值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueHeaderValue">
      <summary vsli:raw="Represents a name/value pair used in various headers as defined in RFC 2616.">表示用于各种标头的在 RFC 2616 中定义的名称/值对。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 类的新实例。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object used to initialize the new instance.">用于初始化新实例的 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 对象。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The header name.">标头名称。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The header name.">标头名称。</param>
      <param name="value" vsli:raw="The header value.">标头值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents name value header value information.">表示名称值标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid name value header value information.">
        <paramref name="input" /> 为无效名称值标头值信息。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Name">
      <summary vsli:raw="Gets the header name.">获取标头名称。</summary>
      <returns vsli:raw="The header name.">标头名称。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Value">
      <summary vsli:raw="Gets the header value.">获取标头值。</summary>
      <returns vsli:raw="The header value.">标头值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <summary vsli:raw="Represents a name/value pair with parameters used in various headers as defined in RFC 2616.">表示用于各种标头的在 RFC 2616 中定义的具有参数的名称/值对。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 类的新实例。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object used to initialize the new instance.">用于初始化新实例的 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 对象。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The header name.">标头名称。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The header name.">标头名称。</param>
      <param name="value" vsli:raw="The header value.">标头值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents name value with parameter header value information.">一个代表名称值的字符串，该值带有参数标头值信息。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid name value with parameter header value information.">
        <paramref name="input" /> 不是有效的含参数标头值信息的名称值。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters">
      <summary vsli:raw="Gets the parameters from the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">从 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 对象获取参数。</summary>
      <returns vsli:raw="A collection containing the parameters.">一个包含参数的集合。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductHeaderValue">
      <summary vsli:raw="Represents a product token value in a User-Agent header.">表示 User-Agent 标头中的产品标记值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The product name.">产品名称。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The product name value.">产品名称值。</param>
      <param name="version" vsli:raw="The product version value.">产品版本值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents product header value information.">表示产品标头值信息的字符串。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Name">
      <summary vsli:raw="Gets the name of the product token.">获取产品令牌名称。</summary>
      <returns vsli:raw="The name of the product token.">产品令牌名称。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Version">
      <summary vsli:raw="Gets the version of the product token.">获取产品令牌的版本。</summary>
      <returns vsli:raw="The version of the product token.">产品令牌的版本。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <summary vsli:raw="Represents a value which can either be a product or a comment in a User-Agent header.">表示可以是 User-Agent 标头中的产品或注释的值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 类的新实例。</summary>
      <param name="product" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object used to initialize the new instance.">用于初始化新实例的 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 对象。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 类的新实例。</summary>
      <param name="comment" vsli:raw="A comment value.">一个注释值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 类的新实例。</summary>
      <param name="productName" vsli:raw="The product name value.">产品名称值。</param>
      <param name="productVersion" vsli:raw="The product version value.">产品版本值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents product info header value information.">表示产品信息标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid product info header value information.">
        <paramref name="input" /> 是无效的产品信息标头值信息。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment">
      <summary vsli:raw="Gets the comment from the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">获取 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 对象的注释。</summary>
      <returns vsli:raw="The comment value this &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt;.">此 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 的注释值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product">
      <summary vsli:raw="Gets the product from the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">获取 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 对象的产品。</summary>
      <returns vsli:raw="The product value from this &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt;.">此 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 的产品值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <summary vsli:raw="Represents an If-Range header value which can either be a date/time or an entity-tag value.">表示可以是日期/时间或实体标记值 If-Range 标题值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 类的新实例。</summary>
      <param name="date" vsli:raw="A date value used to initialize the new instance.">用于初始化新实例的数据值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 类的新实例。</summary>
      <param name="entityTag" vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object used to initialize the new instance.">用于初始化新实例的 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 对象。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 类的新实例。</summary>
      <param name="entityTag" vsli:raw="An entity tag represented as a string used to initialize the new instance.">一个实体标记，它以用于初始化新实例的字符串的形式表示。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents range condition header value information.">表示范围条件标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid range Condition header value information.">
        <paramref name="input" /> 不是有效的范围条件标头值信息。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date">
      <summary vsli:raw="Gets the date from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">获取日期 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 对象中的日期。</summary>
      <returns vsli:raw="The date from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 对象中的日期。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag">
      <summary vsli:raw="Gets the entity tag from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">从 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 对象获取实体标记。</summary>
      <returns vsli:raw="The entity tag from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 对象的实体标记。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeHeaderValue">
      <summary vsli:raw="Represents a Range header value.">表示 Range 标头值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; class with a byte range.">使用字节范围初始化 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 类的新实例。</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">开始发送数据的位置。</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">停止发送数据的位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" /> 大于 <paramref name="to" />  
  
- 或 - 
 <paramref name="from" /> 或 <paramref name="to" /> 小于 0。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents range header value information.">表示范围标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid range header value information.">
        <paramref name="input" /> 是无效的范围标头值信息。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="he string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Ranges">
      <summary vsli:raw="Gets the ranges specified from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">获取从 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 对象指定的范围。</summary>
      <returns vsli:raw="The ranges from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 对象中的范围。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Unit">
      <summary vsli:raw="Gets the unit from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">获取 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 对象的单位。</summary>
      <returns vsli:raw="The unit from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 对象的单位。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeItemHeaderValue">
      <summary vsli:raw="Represents a byte range in a Range header value.">表示 Range 标头值中的字节范围。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 类的新实例。</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">开始发送数据的位置。</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">停止发送数据的位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" /> 大于 <paramref name="to" />  
  
- 或 - 
 <paramref name="from" /> 或 <paramref name="to" /> 小于 0。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.From">
      <summary vsli:raw="Gets the position at which to start sending data.">获取开始发送数据的位置。</summary>
      <returns vsli:raw="The position at which to start sending data.">开始发送数据的位置。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.To">
      <summary vsli:raw="Gets the position at which to stop sending data.">获取停止发送数据的位置。</summary>
      <returns vsli:raw="The position at which to stop sending data.">停止发送数据的位置。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <summary vsli:raw="Represents a Retry-After header value which can either be a date/time or a timespan value.">表示 Retry-After 标头值，它可以是日期/时间或时间跨度值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 类的新实例。</summary>
      <param name="date" vsli:raw="The date and time offset used to initialize the new instance.">用于初始化新实例的日期和时间偏移量。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 类的新实例。</summary>
      <param name="delta" vsli:raw="The delta, in seconds, used to initialize the new instance.">用于初始化新实例的增量（以秒为单位）。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents retry condition header value information.">表示重试条件标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid retry condition header value information.">
        <paramref name="input" /> 是无效的重试条件标头值信息。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date">
      <summary vsli:raw="Gets the date and time offset from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">获取 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 对象中的日期和时间偏移量。</summary>
      <returns vsli:raw="The date and time offset from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 对象中的日期和时间偏移量。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta">
      <summary vsli:raw="Gets the delta in seconds from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">从 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 对象获取增量（以秒为单位）。</summary>
      <returns vsli:raw="The delta in seconds from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">来自 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 对象的增量（以秒为单位）。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <summary vsli:raw="Represents a string header value with an optional quality.">表示具有可选质量的字符串标头值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 类的新实例。</summary>
      <param name="value" vsli:raw="The string used to initialize the new instance.">用于初始化新实例的字符串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 类的新实例。</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">用于初始化新实例的字符串。</param>
      <param name="quality" vsli:raw="A quality factor used to initialize the new instance.">用于初始化新实例的质量因子。</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">确定指定的对象是否等于当前 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents quality header value information.">表示质量标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid string with quality header value information.">
        <paramref name="input" /> 不是具有质量标头值信息的有效字符串。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets the quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">获取 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 对象的质量因子。</summary>
      <returns vsli:raw="The quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 对象的质量因子。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value">
      <summary vsli:raw="Gets the string value from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">获取 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 对象中的字符串值。</summary>
      <returns vsli:raw="The string value from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 对象中的字符串值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <summary vsli:raw="Represents an accept-encoding header value.">表示 Acept-Ecoding 标头值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 类的新实例。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object used to initialize the new instance.">用于初始化新实例的 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 对象。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 类的新实例。</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">用于初始化新实例的字符串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">确定指定的对象是否等于当前 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents transfer-coding header value information.">表示传输编码标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid transfer-coding header value information.">
        <paramref name="input" /> 是无效的传输编码标头值信息。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters">
      <summary vsli:raw="Gets the transfer-coding parameters.">获取传输编码参数。</summary>
      <returns vsli:raw="The transfer-coding parameters.">传输编码参数。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value">
      <summary vsli:raw="Gets the transfer-coding value.">获取传输编码值。</summary>
      <returns vsli:raw="The transfer-coding value.">传输编码值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <summary vsli:raw="Represents an Accept-Encoding header value with optional quality factor.">表示具有可选额外质量因素的 Accept-Encoding 标头值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 类的新实例。</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">用于初始化新实例的字符串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 类的新实例。</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">用于初始化新实例的字符串。</param>
      <param name="quality" vsli:raw="A value for the quality factor.">质量因素的一个值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents transfer-coding value information.">表示传输编码值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid transfer-coding with quality header value information.">
        <paramref name="input" /> 不是具有质量标头值信息的有效传输编码。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets the quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt;.">获取 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 中的质量因子。</summary>
      <returns vsli:raw="The quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 中的质量因子。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ViaHeaderValue">
      <summary vsli:raw="Represents the value of a Via header.">表示 Via 标头的值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 类的新实例。</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">接受协议的协议版本。</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">接收请求或响应的主机和端口。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 类的新实例。</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">接受协议的协议版本。</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">接收请求或响应的主机和端口。</param>
      <param name="protocolName" vsli:raw="The protocol name of the received protocol.">接受协议的协议名称。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 类的新实例。</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">接受协议的协议版本。</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">接收请求或响应的主机和端口。</param>
      <param name="protocolName" vsli:raw="The protocol name of the received protocol.">接受协议的协议名称。</param>
      <param name="comment" vsli:raw="The comment field used to identify the software of the recipient proxy or gateway.">用于标识收件人代理软件或网关软件的注释字段。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents via header value information.">表示 via 标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid via header value information.">
        <paramref name="input" /> 是无效的 via 标头值信息。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">一个 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current instance.">当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.Comment">
      <summary vsli:raw="Gets the comment field used to identify the software of the recipient proxy or gateway.">获取用于标识收件人代理软件或网关软件的注释字段。</summary>
      <returns vsli:raw="The comment field used to identify the software of the recipient proxy or gateway.">用于标识收件人代理软件或网关软件的注释字段。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName">
      <summary vsli:raw="Gets the protocol name of the received protocol.">获取接收的协议的名称。</summary>
      <returns vsli:raw="The protocol name.">协议名称。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion">
      <summary vsli:raw="Gets the protocol version of the received protocol.">获取接收的协议的版本。</summary>
      <returns vsli:raw="The protocol version.">协议版本。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy">
      <summary vsli:raw="Gets the host and port that the request or response was received by.">获取接收请求或响应的主机和端口。</summary>
      <returns vsli:raw="The host and port that the request or response was received by.">接收请求或响应的主机和端口。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.WarningHeaderValue">
      <summary vsli:raw="Represents a warning value used by the Warning header.">表示 Warning 标头使用的警告值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 类的新实例。</summary>
      <param name="code" vsli:raw="The specific warning code.">特定的警告代码。</param>
      <param name="agent" vsli:raw="The host that attached the warning.">附加警告的主机。</param>
      <param name="text" vsli:raw="A quoted-string containing the warning text.">包含警告文本的引用字符串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 类的新实例。</summary>
      <param name="code" vsli:raw="The specific warning code.">特定的警告代码。</param>
      <param name="agent" vsli:raw="The host that attached the warning.">附加警告的主机。</param>
      <param name="text" vsli:raw="A quoted-string containing the warning text.">包含警告文本的引用字符串。</param>
      <param name="date" vsli:raw="The date/time stamp of the warning.">警告的日期/时间戳。</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 对象。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 等于当前的对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">充当 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 对象的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">将字符串转换为 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 实例。</summary>
      <param name="input" vsli:raw="A string that represents authentication header value information.">表示身份验证标头值信息的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是一个 <see langword="null" /> 引用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid authentication header value information.">
        <paramref name="input" /> 是无效的身份验证标头值信息。</exception>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">返回 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 实例。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">创建作为当前 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 实例副本的新对象。</summary>
      <returns vsli:raw="Returns a copy of the current instance.">返回当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">返回表示当前 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 对象的字符串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; information.">确定一个字符串是否为有效的 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 信息。</summary>
      <param name="input" vsli:raw="The string to validate.">要验证的字符串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 为有效 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Agent">
      <summary vsli:raw="Gets the host that attached the warning.">获取附加警告的主机。</summary>
      <returns vsli:raw="The host that attached the warning.">附加警告的主机。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Code">
      <summary vsli:raw="Gets the specific warning code.">获取特定的警告代码。</summary>
      <returns vsli:raw="The specific warning code.">特定的警告代码。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Date">
      <summary vsli:raw="Gets the date/time stamp of the warning.">获取警告的日期/时间戳。</summary>
      <returns vsli:raw="The date/time stamp of the warning.">警告的日期/时间戳。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Text">
      <summary vsli:raw="Gets a quoted-string containing the warning text.">获取包含警告文本的引用字符串。</summary>
      <returns vsli:raw="A quoted-string containing the warning text.">包含警告文本的引用字符串。</returns>
    </member>
    <member name="T:System.Net.Http.HttpClient">
      <summary vsli:raw="Provides a class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.">提供基本类，用于发送 HTTP 请求和接收来自通过 URI 确认的资源的 HTTP 响应。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class using a &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; that is disposed when this instance is disposed.">使用释放此实例时释放的 <see cref="T:System.Net.Http.HttpClientHandler" /> 初始化 <see cref="T:System.Net.Http.HttpClient" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class with the specified handler. The handler is disposed when this instance is disposed.">使用指定的处理程序初始化 <see cref="T:System.Net.Http.HttpClient" /> 类的新实例。 处理程序在释放此实例时被释放。</summary>
      <param name="handler" vsli:raw="The HTTP handler stack to use for sending requests.">要用于发送请求的 HTTP 处理程序堆栈。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class with the provided handler, and specifies whether that handler should be disposed when this instance is disposed.">使用提供的处理程序初始化 <see cref="T:System.Net.Http.HttpClient" /> 类的新实例，并指定在释放此实例时是否应释放该处理程序。</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">负责处理 HTTP 响应消息的 <see cref="T:System.Net.Http.HttpMessageHandler" />。</param>
      <param name="disposeHandler" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner handler should be disposed of by HttpClient.Dispose; &lt;see langword=&quot;false&quot; /&gt; if you intend to reuse the inner handler.">如果内部处理程序应由 HttpClient.Dispose 释放，则为 <see langword="true" />；如果希望重新使用内部处理程序，则为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.CancelPendingRequests">
      <summary vsli:raw="Cancel all pending requests on this instance.">取消该实例所有挂起的请求。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
      <summary vsli:raw="Send a DELETE request to the specified Uri as an asynchronous operation.">以异步操作将 DELETE 请求发送给指定 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">请求消息已由 <see cref="T:System.Net.Http.HttpClient" /> 实例发送。

- 或 -

<paramref name="requestUri" /> 不是一个绝对 URI。

- 或 -

未设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.">用以异步操作的取消标记发送 DELETE 请求到指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">请求消息已由 <see cref="T:System.Net.Http.HttpClient" /> 实例发送。

- 或 -

<paramref name="requestUri" /> 不是一个绝对 URI。

- 或 -

未设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
      <summary vsli:raw="Send a DELETE request to the specified Uri as an asynchronous operation.">以异步操作将 DELETE 请求发送给指定 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">请求消息已由 <see cref="T:System.Net.Http.HttpClient" /> 实例发送。

- 或 -

<paramref name="requestUri" /> 不是一个绝对 URI。

- 或 -

未设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.">用以异步操作的取消标记发送 DELETE 请求到指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">请求消息已由 <see cref="T:System.Net.Http.HttpClient" /> 实例发送。

- 或 -

<paramref name="requestUri" /> 不是一个绝对 URI。

- 或 -

未设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; and optionally disposes of the managed resources.">释放由 <see cref="T:System.Net.Http.HttpClient" /> 使用的非托管资源，并可根据需要释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri as an asynchronous operation.">以异步操作将 GET 请求发送给指定 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.">用以异步操作的 HTTP 完成选项发送 GET 请求到指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="completionOption" vsli:raw="An HTTP completion option value that indicates when the operation should be considered completed.">指示操作应视为已完成的时间的 HTTP 完成选项值。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.">用以异步操作的 HTTP 完成选项和取消标记发送 GET 请求到指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="completionOption" vsli:raw="An HTTP  completion option value that indicates when the operation should be considered completed.">指示操作应视为已完成的时间的 HTTP 完成选项值。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.">用以异步操作的取消标记发送 GET 请求到指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri as an asynchronous operation.">以异步操作将 GET 请求发送给指定 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.">用以异步操作的 HTTP 完成选项发送 GET 请求到指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="completionOption" vsli:raw="An HTTP completion option value that indicates when the operation should be considered completed.">指示操作应视为已完成的时间的 HTTP 完成选项值。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.">用以异步操作的 HTTP 完成选项和取消标记发送 GET 请求到指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="completionOption" vsli:raw="An HTTP  completion option value that indicates when the operation should be considered completed.">指示操作应视为已完成的时间的 HTTP 完成选项值。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.">用以异步操作的取消标记发送 GET 请求到指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
      <summary vsli:raw="Sends a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">将 GET 请求发送到指定 URI 并在异步操作中以字节数组的形式返回响应正文。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">将 GET 请求发送到指定 URI 并在异步操作中以字节数组的形式返回响应正文。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或仅 .NET Framework 超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">将 GET 请求发送到指定 URI 并在异步操作中以字节数组的形式返回响应正文。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或仅 .NET Framework 超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">将 GET 请求发送到指定 URI 并在异步操作中以字节数组的形式返回响应正文。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或仅 .NET Framework 超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">将 GET 请求发送到指定 URI 并在异步操作中以流的形式返回响应正文。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或仅 .NET Framework 超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">将 GET 请求发送到指定 URI 并在异步操作中以流的形式返回响应正文。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">将 GET 请求发送到指定 URI 并在异步操作中以流的形式返回响应正文。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或仅 .NET Framework 超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">将 GET 请求发送到指定 URI 并在异步操作中以流的形式返回响应正文。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或仅 .NET Framework 超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">将 GET 请求发送到指定 URI 并在异步操作中以字符串的形式返回响应正文。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或仅 .NET Framework 超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">将 GET 请求发送到指定 URI 并在异步操作中以字符串的形式返回响应正文。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或仅 .NET Framework 超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">将 GET 请求发送到指定 URI 并在异步操作中以字符串的形式返回响应正文。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或仅 .NET Framework 超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">将 GET 请求发送到指定 URI 并在异步操作中以字符串的形式返回响应正文。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或仅 .NET Framework 超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Sends a PATCH request to a Uri designated as a string as an asynchronous operation.">以异步操作方式将 PATCH 请求发送到指定为字符串的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">发送到服务器的 HTTP 请求内容。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a PATCH request with a cancellation token to a Uri represented as a string as an asynchronous operation.">以异步操作方式将带有取消令牌的 PATCH 请求发送到表示为字符串的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">发送到服务器的 HTTP 请求内容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Sends a PATCH request as an asynchronous operation.">以异步操作方式发送 PATCH 请求。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">发送到服务器的 HTTP 请求内容。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a PATCH request with a cancellation token as an asynchronous operation.">以异步操作方式发送带有取消令牌的 PATCH 请求。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">发送到服务器的 HTTP 请求内容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a POST request to the specified Uri as an asynchronous operation.">以异步操作将 POST 请求发送给指定 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">发送到服务器的 HTTP 请求内容。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a POST request with a cancellation token as an asynchronous operation.">用以异步操作的取消标记发送 POST 请求。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">发送到服务器的 HTTP 请求内容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a POST request to the specified Uri as an asynchronous operation.">以异步操作将 POST 请求发送给指定 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">发送到服务器的 HTTP 请求内容。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a POST request with a cancellation token as an asynchronous operation.">用以异步操作的取消标记发送 POST 请求。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">发送到服务器的 HTTP 请求内容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a PUT request to the specified Uri as an asynchronous operation.">以异步操作将 PUT 请求发送给指定 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">发送到服务器的 HTTP 请求内容。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a PUT request with a cancellation token as an asynchronous operation.">用以异步操作的取消标记发送 PUT 请求。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">发送到服务器的 HTTP 请求内容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a PUT request to the specified Uri as an asynchronous operation.">以异步操作将 PUT 请求发送给指定 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">发送到服务器的 HTTP 请求内容。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a PUT request with a cancellation token as an asynchronous operation.">用以异步操作的取消标记发送 PUT 请求。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">请求发送到的 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">发送到服务器的 HTTP 请求内容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必须为绝对 URI 或必须设置 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage)">
      <summary vsli:raw="Sends an HTTP request with the specified request.">发送带有指定请求的 HTTP 请求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要发送的 HTTP 请求消息。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA;The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">HTTP 版本为 2.0 或更高版本，或者版本策略设置为 <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />。

- 或 -

派生自 <see cref="T:System.Net.Http.HttpContent" /> 的自定义类不会重写 <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" /> 方法。

- 或 -

自定义 <see cref="T:System.Net.Http.HttpMessageHandler" /> 不会重写 <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">请求消息已由 <see cref="T:System.Net.Http.HttpClient" /> 实例发送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">由于基础问题（如网络连接性、DNS 失败或服务器证书验证），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">如果 <see cref="T:System.Threading.Tasks.TaskCanceledException" /> 异常会嵌套 <see cref="T:System.TimeoutException" />：请求因超时而失败。</exception>
      <returns vsli:raw="An HTTP response message.">HTTP 响应消息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Sends an HTTP request.">发送 HTTP 请求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要发送的 HTTP 请求消息。</param>
      <param name="completionOption" vsli:raw="One of the enumeration values that specifies when the operation should complete (as soon as a response is available or after reading the response content).">枚举值之一，用于指定操作应完成的时间（在响应可用或在读取响应内容之后）。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">HTTP 版本为 2.0 或更高版本，或者版本策略设置为 <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />。

- 或 -

派生自 <see cref="T:System.Net.Http.HttpContent" /> 的自定义类不会重写 <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" /> 方法。

- 或 -

自定义 <see cref="T:System.Net.Http.HttpMessageHandler" /> 不会重写 <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">请求消息已由 <see cref="T:System.Net.Http.HttpClient" /> 实例发送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">由于基础问题（如网络连接性、DNS 失败或服务器证书验证），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">如果 <see cref="T:System.Threading.Tasks.TaskCanceledException" /> 异常会嵌套 <see cref="T:System.TimeoutException" />：请求因超时而失败。</exception>
      <returns vsli:raw="The HTTP response message.">HTTP 响应消息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request with the specified request, completion option and cancellation token.">发送带有指定请求、完成选项和取消标记的 HTTP 请求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要发送的 HTTP 请求消息。</param>
      <param name="completionOption" vsli:raw="One of the enumeration values that specifies when the operation should complete (as soon as a response is available or after reading the response content).">枚举值之一，用于指定操作应完成的时间（在响应可用或在读取响应内容之后）。</param>
      <param name="cancellationToken" vsli:raw="The token to cancel the operation.">用于取消此操作的令牌。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">HTTP 版本为 2.0 或更高版本，或者版本策略设置为 <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />。

- 或 -

派生自 <see cref="T:System.Net.Http.HttpContent" /> 的自定义类不会重写 <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" /> 方法。

- 或 -

自定义 <see cref="T:System.Net.Http.HttpMessageHandler" /> 不会重写 <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">请求消息已由 <see cref="T:System.Net.Http.HttpClient" /> 实例发送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">由于基础问题（如网络连接性、DNS 失败或服务器证书验证），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="The request was canceled.&#xA;&#xA; -or-&#xA;&#xA; If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">请求已被取消。

- 或 -

如果 <see cref="T:System.Threading.Tasks.TaskCanceledException" /> 异常会嵌套 <see cref="T:System.TimeoutException" />：请求因超时而失败。</exception>
      <returns vsli:raw="The HTTP response message.">HTTP 响应消息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request with the specified request and cancellation token.">发送带有指定请求和取消标记的 HTTP 请求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要发送的 HTTP 请求消息。</param>
      <param name="cancellationToken" vsli:raw="The token to cancel the operation.">用于取消此操作的令牌。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">HTTP 版本为 2.0 或更高版本，或者版本策略设置为 <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />。

- 或 -

派生自 <see cref="T:System.Net.Http.HttpContent" /> 的自定义类不会重写 <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" /> 方法。

- 或 -

自定义 <see cref="T:System.Net.Http.HttpMessageHandler" /> 不会重写 <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">请求消息已由 <see cref="T:System.Net.Http.HttpClient" /> 实例发送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">由于基础问题（如网络连接性、DNS 失败或服务器证书验证），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="The request was canceled.&#xA;&#xA; -or-&#xA;&#xA; If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">请求已被取消。

- 或 -

如果 <see cref="T:System.Threading.Tasks.TaskCanceledException" /> 异常会嵌套 <see cref="T:System.TimeoutException" />：请求因超时而失败。</exception>
      <returns vsli:raw="The HTTP response message.">HTTP 响应消息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">以异步操作发送 HTTP 请求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要发送的 HTTP 请求消息。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">请求消息已由 <see cref="T:System.Net.Http.HttpClient" /> 实例发送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">以异步操作发送 HTTP 请求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要发送的 HTTP 请求消息。</param>
      <param name="completionOption" vsli:raw="When the operation should complete (as soon as a response is available or after reading the whole response content).">操作应完成时（在响应可利用或在读取整个响应内容之后）。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">请求消息已由 <see cref="T:System.Net.Http.HttpClient" /> 实例发送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">以异步操作发送 HTTP 请求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要发送的 HTTP 请求消息。</param>
      <param name="completionOption" vsli:raw="When the operation should complete (as soon as a response is available or after reading the whole response content).">操作应完成时（在响应可利用或在读取整个响应内容之后）。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">取消操作的取消标记。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">请求消息已由 <see cref="T:System.Net.Http.HttpClient" /> 实例发送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">以异步操作发送 HTTP 请求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要发送的 HTTP 请求消息。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">取消操作的取消标记。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">请求消息已由 <see cref="T:System.Net.Http.HttpClient" /> 实例发送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">仅限 .NET Core 和 .NET 5.0 及更高版本：请求因超时而失败。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.BaseAddress">
      <summary vsli:raw="Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.">获取或设置发送请求时使用的 Internet 资源的统一资源标识符 (URI) 的基址。</summary>
      <returns vsli:raw="The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.">发送请求时使用的 Internet 资源的统一资源标识符 (URI) 的基址。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultProxy">
      <summary vsli:raw="Gets or sets the global HTTP proxy.">获取或设置全局 HTTP 代理。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value passed cannot be &lt;see langword=&quot;null&quot; /&gt;.">传递的值不能为 <see langword="null" />。</exception>
      <returns vsli:raw="A proxy used by every HTTP request.">用于实例化的每个调用所使用的代理 <see cref="T:System.Net.HttpWebRequest" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
      <summary vsli:raw="Gets the headers which should be sent with each request.">获取与每个请求一起发送的标题。</summary>
      <returns vsli:raw="The headers which should be sent with each request.">应与每一个请求一起发送的标题。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestVersion">
      <summary vsli:raw="Gets or sets the default HTTP version used on subsequent requests made by this &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">获取或设置对此 <see cref="T:System.Net.Http.HttpClient" /> 实例发出的后续请求使用的默认 HTTP 版本。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="In a set operation, &lt;see langword=&quot;DefaultRequestVersion&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">在设置操作中，<see langword="DefaultRequestVersion" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance has already started one or more requests.">
        <see cref="T:System.Net.Http.HttpClient" /> 实例已启动一个或多个请求。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance has already been disposed.">
        <see cref="T:System.Net.Http.HttpClient" /> 实例已被释放。</exception>
      <returns vsli:raw="The default version to use for any requests made with this &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">用于此实例发出的任何请求的默认版本 <see cref="T:System.Net.Http.HttpClient" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultVersionPolicy">
      <summary vsli:raw="Gets or sets the default version policy for implicitly created requests in convenience methods, for example, &lt;see cref=&quot;M:System.Net.Http.HttpClient.GetAsync(System.String)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)&quot; /&gt;.">获取或设置便捷方法中隐式创建的请求的默认版本策略，例如 <see cref="M:System.Net.Http.HttpClient.GetAsync(System.String)" /> 和 <see cref="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />。</summary>
      <returns vsli:raw="The HttpVersionPolicy used when the HTTP connection is established.">建立 HTTP 连接时使用的 HttpVersionPolicy。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
      <summary vsli:raw="Gets or sets the maximum number of bytes to buffer when reading the response content.">获取或设置读取响应内容时要缓冲的最大字节数。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The size specified is less than or equal to zero.">指定大小小于或等于零。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An operation has already been started on the current instance.">已在当前实例上启动了一个操作。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">已释放当前实例。</exception>
      <returns vsli:raw="The maximum number of bytes to buffer when reading the response content. The default value for this property is 2 gigabytes.">当读取响应内容时缓冲区的最大字节数。 此属性的默认值为 2 GB。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.Timeout">
      <summary vsli:raw="Gets or sets the timespan to wait before the request times out.">获取或设置请求超时前等待的时间跨度。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The timeout specified is less than or equal to zero and is not &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">指定的超时值小于或等于零，而不是 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An operation has already been started on the current instance.">已在当前实例上启动了一个操作。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">已释放当前实例。</exception>
      <returns vsli:raw="The timespan to wait before the request times out.">请求超时前等待的时间跨度。</returns>
    </member>
    <member name="T:System.Net.Http.HttpClientHandler">
      <summary vsli:raw="The default message handler used by &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; in .NET Framework and .NET Core 2.0 and earlier.">.NET Framework 和 .NET Core 2.0 及更低版本中由 <see cref="T:System.Net.Http.HttpClient" /> 使用的默认消息处理程序。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; class.">创建 <see cref="T:System.Net.Http.HttpClientHandler" /> 类的实例。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; and optionally disposes of the managed resources.">释放由 <see cref="T:System.Net.Http.HttpClientHandler" /> 使用的非托管资源，并可根据需要释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an instance of  &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; based on the information provided in the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt;.">基于在 <see cref="T:System.Net.Http.HttpRequestMessage" /> 中提供的信息创建 <see cref="T:System.Net.Http.HttpResponseMessage" /> 的实例。</summary>
      <param name="request" vsli:raw="The HTTP request message.">HTTP 请求消息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel the operation.">用于取消操作的取消标记。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 是 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="For HTTP/2 and higher or when requesting version upgrade is enabled by &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; If using custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA; If using custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">用于 HTTP/2 和更高版本，或者 <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" /> 启用了请求版本升级时。

- 或 -

如果使用派生自 <see cref="T:System.Net.Http.HttpContent" /> 的自定义类不重写 <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" /> 方法。

- 或 -

如果使用自定义 <see cref="T:System.Net.Http.HttpMessageHandler" /> 不重写 <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="The request was canceled.&#xA;&#xA; -or-&#xA;&#xA; If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">请求已被取消。

- 或 -

如果 <see cref="T:System.Threading.Tasks.TaskCanceledException" /> 异常会嵌套 <see cref="T:System.TimeoutException" />：请求因超时而失败。</exception>
      <returns vsli:raw="The HTTP response message.">HTTP 响应消息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an instance of  &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; based on the information provided in the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; as an operation that will not block.">基于作为不会阻止的操作在 <see cref="T:System.Net.Http.HttpRequestMessage" /> 中提供的信息创建 <see cref="T:System.Net.Http.HttpResponseMessage" /> 的实例。</summary>
      <param name="request" vsli:raw="The HTTP request message.">HTTP 请求消息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel the operation.">用于取消操作的取消标记。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 是 <see langword="null" />。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should follow redirection responses.">获取或设置一个值，该值指示处理程序是否应跟随重定向响应。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should follow redirection responses; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 如果处理程序应跟随重定向响应，则为;否则为 <see langword="false" /> 。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.">获取或设置处理程序用于自动解压缩 HTTP 内容响应的解压缩方法类型。</summary>
      <returns vsli:raw="The automatic decompression method used by the handler.">处理程序使用的自动解压缩方法。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList">
      <summary vsli:raw="Gets or sets a value that indicates whether the certificate is checked against the certificate authority revocation list.">获取或设置一个值，该值指示是否根据证书颁发机构吊销列表检查证书。</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Framework 4.7.1 only: This property is not implemented.">仅 .NET Framework 4.7.1：未实现此属性。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the certificate revocation list is checked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果检查证书吊销列表，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions">
      <summary vsli:raw="Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.">获取或设置一个值，该值指示是否从证书存储自动挑选证书，或者是否允许调用方通过特定的客户端证书。</summary>
      <returns vsli:raw="The collection of security certificates associated with this handler.">与此处理程序关联的安全证书集合。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificates">
      <summary vsli:raw="Gets the collection of security certificates that are associated with requests to the server.">获取与对服务器的请求相关联的安全证书集合。</summary>
      <returns vsli:raw="The X509CertificateCollection that is presented to the server when performing certificate based client authentication.">执行基于证书的客户端身份验证时向服务器提供的 X509CertificateCollection。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CookieContainer">
      <summary vsli:raw="Gets or sets the cookie container used to store server cookies by the handler.">获取或设置用于通过处理程序存储服务器 Cookie 的 Cookie 容器。</summary>
      <returns vsli:raw="The cookie container used to store server cookies by the handler.">用于通过处理程序存储服务器 Cookie 的 Cookie 容器。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Credentials">
      <summary vsli:raw="Gets or sets authentication information used by this handler.">获取或设置此处理程序使用的身份验证信息。</summary>
      <returns vsli:raw="The authentication credentials associated with the handler. The default is &lt;see langword=&quot;null&quot; /&gt;.">与该处理程序关联的身份验证凭据。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator">
      <summary vsli:raw="Gets a cached delegate that always returns &lt;see langword=&quot;true&quot; /&gt;.">获取始终返回 <see langword="true" /> 的缓存委托。</summary>
      <returns vsli:raw="A cached delegate that always returns &lt;see langword=&quot;true&quot; /&gt;.">始终返回 <see langword="true" /> 的缓存委托。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials">
      <summary vsli:raw="When the default (system) proxy is being used, gets or sets the credentials to submit to the default proxy server for authentication. The default proxy is used only when &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.UseProxy&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.Proxy&quot; /&gt; is set to &lt;see langword=&quot;null&quot; /&gt;.">使用默认（系统）代理时，获取或设置要提交到默认代理服务器进行身份验证的凭据。 只有在 <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> 设置为 <see langword="true" /> 且 <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> 设置为 <see langword="null" /> 时才使用默认代理。</summary>
      <returns vsli:raw="The credentials needed to authenticate a request to the default proxy server.">对默认代理服务器的请求进行身份验证所需的凭据。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of redirects that the handler follows.">获取或设置处理程序遵循的重定向的最大数目。</summary>
      <returns vsli:raw="The maximum number of redirection responses that the handler follows. The default value is 50.">处理程序遵循的重定向响应的最大数目。 默认值为 50。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer">
      <summary vsli:raw="Gets or sets the maximum number of concurrent connections (per server endpoint) allowed when making requests using an &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; object. Note that the limit is per server endpoint, so for example a value of 256 would permit 256 concurrent connections to http://www.adatum.com/ and another 256 to http://www.adventure-works.com/.">获取或设置使用 <see cref="T:System.Net.Http.HttpClient" /> 对象发出请求时允许的最大并发连接数（每个服务器终结点）。 请注意，该限制针对每个服务器终结点，例如，值为 256 表示允许 256 个到 http://www.adatum.com/ 的并发连接，以及另外 256 个到 http://www.adventure-works.com/ 的并发连接。</summary>
      <returns vsli:raw="The maximum number of concurrent connections (per server endpoint) allowed by an &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; object.">对象允许 (每个服务器终结点) 的最大并发连接数 <see cref="T:System.Net.Http.HttpClient" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize">
      <summary vsli:raw="Gets or sets the maximum request content buffer size used by the handler.">获取或设置处理程序使用的最大请求内容缓冲区大小。</summary>
      <returns vsli:raw="The maximum request content buffer size in bytes. The default value is 2 gigabytes.">最大请求内容缓冲区大小（以字节为单位）。 默认值为 2 GB。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers. For example, if the value is 64, then 65536 bytes are allowed for the maximum response headers' length.">获取或设置响应标头的最大长度，以千字节（1024 字节）为单位。 例如，如果该值为 64，那么允许的最大响应标头长度为 65536 字节。</summary>
      <returns vsli:raw="The maximum length, in kilobytes (1024 bytes), of the response headers.">响应标头的最大长度（kb (1024 字节) ）。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler sends an Authorization header with the request.">获取或设置一个值，该值指示处理程序是否随请求发送授权标头。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示处理程序在发生身份验证之后随请求一起发送 HTTP 授权标头；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Properties">
      <summary vsli:raw="Gets a writable dictionary (that is, a map) of custom properties for the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; requests. The dictionary is initialized empty; you can insert and query key-value pairs for your custom handlers and special processing.">获取 <see cref="T:System.Net.Http.HttpClient" /> 的自定义属性的可写字典（即地图）。 初始字典为空；可以为自定义处理程序和特殊处理插入和查询键值对。</summary>
      <returns vsli:raw="a writable dictionary of custom properties.">自定义属性的可写字典。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Proxy">
      <summary vsli:raw="Gets or sets proxy information used by the handler.">获取或设置处理程序使用的代理信息。</summary>
      <returns vsli:raw="The proxy information used by the handler. The default value is &lt;see langword=&quot;null&quot; /&gt;.">处理程序使用的代理信息。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback">
      <summary vsli:raw="Gets or sets a callback method to validate the server certificate.">获取或设置用于验证服务器证书的回调方法。</summary>
      <returns vsli:raw="A callback method to validate the server certificate.">用于验证服务器证书的回调方法。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SslProtocols">
      <summary vsli:raw="Gets or sets the TLS/SSL protocol used by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; objects managed by the HttpClientHandler object.">获取或设置 HttpClientHandler 对象管理的 <see cref="T:System.Net.Http.HttpClient" /> 对象所用的 TLS/SSL 协议。</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Framework 4.7.1 only: This property is not implemented.">仅 .NET Framework 4.7.1：未实现此属性。</exception>
      <returns vsli:raw="One of the values defined in the &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; enumeration.">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 枚举中定义的值之一。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression">
      <summary vsli:raw="Gets a value that indicates whether the handler supports automatic response content decompression.">获取一个值，该值指示处理程序是否支持自动响应内容解压缩。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports automatic response content decompression; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">如果该处理程序支持自动响应内容解压缩，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsProxy">
      <summary vsli:raw="Gets a value that indicates whether the handler supports proxy settings.">获取一个值，该值指示处理程序是否支持代理设置。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports proxy settings; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">如果处理程序支持代理设置，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration">
      <summary vsli:raw="Gets a value that indicates whether the handler supports configuration settings for the &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.AllowAutoRedirect&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections&quot; /&gt; properties.">获取一个值，该值表示处理程序是否支持 <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> 和 <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> 属性的配置设置。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports configuration settings for the &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.AllowAutoRedirect&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections&quot; /&gt; properties; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">如果处理程序支持 <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> 和 <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> 属性的配置设置，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseCookies">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler uses the  &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.CookieContainer&quot; /&gt; property  to store server cookies and uses these cookies when sending requests.">获取或设置一个值，该值指示处理程序是否使用 <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> 属性来存储服务器 Cookie 并在发送请求时使用这些 Cookie。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports uses the  &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.CookieContainer&quot; /&gt; property  to store server cookies and uses these cookies when sending requests; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">如果处理程序支持使用 <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> 属性来存储服务器 Cookie 并在发送请求时使用这些 Cookie，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials">
      <summary vsli:raw="Gets or sets a value that controls whether default credentials are sent with requests by the handler.">获取或设置一个值，该值控制处理程序是否随请求一起发送默认凭据。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default credentials are used; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">如果使用默认凭据，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseProxy">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler uses a proxy for requests.">获取或设置一个值，该值表示处理程序是否对请求使用代理。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should use a proxy for requests; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">如果处理程序应对请求使用代理，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="T:System.Net.Http.HttpCompletionOption">
      <summary vsli:raw="Indicates if &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; operations should be considered completed either as soon as a response is available, or after reading the entire response message including the content.">指示 <see cref="T:System.Net.Http.HttpClient" /> 操作是在响应可利用时立即视为已完成，还是在读取包含上下文的整个答案信息之后才视为已完成。</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseContentRead">
      <summary vsli:raw="The operation should complete after reading the entire response including the content.">操作应在阅读包括该内容的整个响应之后完成。</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead">
      <summary vsli:raw="The operation should complete as soon as a response is available and headers are read. The content is not read yet.">响应一可用且标题可读时即应完成的操作。 尚未读取的内容。</summary>
    </member>
    <member name="T:System.Net.Http.HttpContent">
      <summary vsli:raw="A base class representing an HTTP entity body and content headers.">表示 HTTP 实体正文和内容标头的基类。</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.HttpContent" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyTo(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content into a stream of bytes and copies it to &lt;paramref name=&quot;stream&quot; /&gt;.">将 HTTP 内容序列化为字节流，并将其复制到 <paramref name="stream" />。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息（例如通道绑定令牌）。 此参数可以为 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stream&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> 是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">将 HTTP 内容序列化为字节流，并将其复制到作为 <paramref name="stream" /> 参数提供的流对象。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">将 HTTP 内容序列化为字节流，并将其复制到作为 <paramref name="stream" /> 参数提供的流对象。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息（例如信道绑定令牌）。 此参数可以为 <see langword="null" />。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">将 HTTP 内容序列化为字节流，并将其复制到作为 <paramref name="stream" /> 参数提供的流对象。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息（例如信道绑定令牌）。 此参数可以为 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">将 HTTP 内容序列化为字节流，并将其复制到作为 <paramref name="stream" /> 参数提供的流对象。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation." />
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Serialize the HTTP content to a memory stream as an asynchronous operation.">采用异步操作将 HTTP 内容序列化到内存流。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content to a memory stream as an asynchronous operation.">采用异步操作将 HTTP 内容序列化到内存流。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt;.">释放由 <see cref="T:System.Net.Http.HttpContent" /> 使用的非托管资源和托管资源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; and optionally disposes of the managed resources.">释放由 <see cref="T:System.Net.Http.HttpContent" /> 使用的非托管资源，并可根据需要释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <summary vsli:raw="Serialize the HTTP content to a memory buffer as an asynchronous operation.">以异步操作方式将 HTTP 内容序列化到内存缓冲区。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)">
      <summary vsli:raw="Serialize the HTTP content to a memory buffer as an asynchronous operation.">以异步操作方式将 HTTP 内容序列化到内存缓冲区。</summary>
      <param name="maxBufferSize" vsli:raw="The maximum size, in bytes, of the buffer to use.">要使用的缓冲区最大大小。（以字节为单位）。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync">
      <summary vsli:raw="Serialize the HTTP content to a byte array as an asynchronous operation.">将 HTTP 内容序列化到字节数组，此为异步操作。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a byte array as an asynchronous operation.">将 HTTP 内容序列化到字节数组，此为异步操作。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStream">
      <summary vsli:raw="Serializes the HTTP content and returns a stream that represents the content.">将 HTTP 内容序列化并返回表示内容的流。</summary>
      <returns vsli:raw="The stream that represents the HTTP content.">表示 HTTP 内容的流。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content and returns a stream that represents the content.">将 HTTP 内容序列化并返回表示内容的流。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The stream that represents the HTTP content.">表示 HTTP 内容的流。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync">
      <summary vsli:raw="Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.">将 HTTP 内容序列化并返回将内容表示为异步操作的流。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.">将 HTTP 内容序列化并返回将内容表示为异步操作的流。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync">
      <summary vsli:raw="Serialize the HTTP content to a string as an asynchronous operation.">将 HTTP 内容序列化到字符串，此为异步操作。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a string as an asynchronous operation.">将 HTTP 内容序列化到字符串，此为异步操作。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="When overridden in a derived class, serializes the HTTP content to a stream. Otherwise, throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">当在派生类中被重写时，将 HTTP 内容序列化为流。 否则，将引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息（例如通道绑定令牌）。 此参数可以为 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The method is not overridden in the derived class.">此方法不会在派生类中被重写。</exception>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">将 HTTP 内容序列化到流，此为异步操作。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息（例如信道绑定令牌）。 此参数可以为 <see langword="null" />。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">将 HTTP 内容序列化到流，此为异步操作。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息（例如信道绑定令牌）。 此参数可以为 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the HTTP content has a valid length in bytes.">确定 HTTP 内容是否具有有效的长度（以字节为单位）。</summary>
      <param name="length" vsli:raw="The length in bytes of the HTTP content.">HTTP 内容的长度（以字节为单位）。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="length" /> 是有效长度，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpContent.Headers">
      <summary vsli:raw="Gets the HTTP content headers as defined in RFC 2616.">获取 RFC 2616 中定义的 HTTP 内容标头。</summary>
      <returns vsli:raw="The content headers as defined in RFC 2616.">RFC 2616 中定义的内容标头。</returns>
    </member>
    <member name="T:System.Net.Http.HttpKeepAlivePingPolicy">
      <summary vsli:raw="Specifies when the HTTP/2 ping frame is sent on an idle connection.">指定在空闲连接上发送 HTTP/2 ping 帧的时间。</summary>
    </member>
    <member name="F:System.Net.Http.HttpKeepAlivePingPolicy.Always">
      <summary vsli:raw="Sends a keep alive ping for the whole lifetime of the connection.">为连接的整个生存期发送“保持活动状态”ping。</summary>
    </member>
    <member name="F:System.Net.Http.HttpKeepAlivePingPolicy.WithActiveRequests">
      <summary vsli:raw="Sends a keep alive ping only when there are active streams on the connection.">仅当连接上存在活动流时才发送“保持活动状态”ping。</summary>
    </member>
    <member name="T:System.Net.Http.HttpMessageHandler">
      <summary vsli:raw="A base type for HTTP message handlers.">HTTP 消息处理程序的基类。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.HttpMessageHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">释放由 <see cref="T:System.Net.Http.HttpMessageHandler" /> 使用的非托管资源和托管资源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; and optionally disposes of the managed resources.">释放由 <see cref="T:System.Net.Http.HttpMessageHandler" /> 使用的非托管资源，并可根据需要释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="When overridden in a derived class, sends an HTTP request with the specified request and cancellation token. Otherwise, throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">在派生类中被重写时，发送带有指定请求和取消标记的 HTTP 请求。 否则，将引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要发送的 HTTP 请求消息。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">取消操作的取消标记。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The method is not overridden in the derived class.">此方法不会在派生类中被重写。</exception>
      <returns vsli:raw="The HTTP response message.">HTTP 响应消息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">以异步操作发送 HTTP 请求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要发送的 HTTP 请求消息。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">取消操作的取消标记。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 是 <see langword="null" />。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="T:System.Net.Http.HttpMessageInvoker">
      <summary vsli:raw="A specialty class that allows applications to call the &lt;see cref=&quot;M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method on an HTTP handler chain.">一个特殊类，它允许应用程序对 HTTP 处理程序链调用 <see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Initializes an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; class with a specific &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">使用指定的 <see cref="T:System.Net.Http.HttpMessageHandler" /> 初始化 <see cref="T:System.Net.Http.HttpMessageInvoker" /> 类的实例。</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">负责处理 HTTP 响应消息的 <see cref="T:System.Net.Http.HttpMessageHandler" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary vsli:raw="Initializes an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; class with a specific &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">使用指定的 <see cref="T:System.Net.Http.HttpMessageHandler" /> 初始化 <see cref="T:System.Net.Http.HttpMessageInvoker" /> 类的实例。</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">负责处理 HTTP 响应消息的 <see cref="T:System.Net.Http.HttpMessageHandler" />。</param>
      <param name="disposeHandler" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner handler should be disposed of by Dispose(), &lt;see langword=&quot;false&quot; /&gt; if you intend to reuse the inner handler.">如果内部处理程序应由 Dispose() 处置，则为 <see langword="true" />，如果希望重新使用内部处理程序,则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt;.">释放由 <see cref="T:System.Net.Http.HttpMessageInvoker" /> 使用的非托管资源和托管资源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; and optionally disposes of the managed resources.">释放由 <see cref="T:System.Net.Http.HttpMessageInvoker" /> 使用的非托管资源，并可根据需要释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request with the specified request and cancellation token.">发送带有指定请求和取消标记的 HTTP 请求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要发送的 HTTP 请求消息。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">取消操作的取消标记。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 是 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="For HTTP/2 and higher or when requesting version upgrade is enabled by &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; If using custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA; If using custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">用于 HTTP/2 和更高版本，或者 <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" /> 启用了请求版本升级时。

- 或 -

如果使用派生自 <see cref="T:System.Net.Http.HttpContent" /> 的自定义类不重写 <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" /> 方法。

- 或 -

如果使用自定义 <see cref="T:System.Net.Http.HttpMessageHandler" /> 不重写 <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</exception>
      <returns vsli:raw="The HTTP response message.">HTTP 响应消息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">以异步操作发送 HTTP 请求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要发送的 HTTP 请求消息。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">取消操作的取消标记。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 是 <see langword="null" />。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="T:System.Net.Http.HttpMethod">
      <summary vsli:raw="A helper class for retrieving and comparing standard HTTP methods and for creating new HTTP methods.">一个帮助器类，它用于检索并比较标准 HTTP 方法并且用于创建新的 HTTP 方法。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMethod.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; class with a specific HTTP method.">使用指定的 HTTP 方法初始化 <see cref="T:System.Net.Http.HttpMethod" /> 类的新实例。</summary>
      <param name="method" vsli:raw="The HTTP method.">HTTP 方法。</param>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">确定指定的 <see cref="T:System.Net.Http.HttpMethod" /> 是否等同于当前的 <see cref="T:System.Object" />。</summary>
      <param name="other" vsli:raw="The HTTP method to compare with the current object.">要与当前对象进行比较的 HTTP 方法。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的对象是等于当前对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">确定指定的 <see cref="T:System.Object" /> 是否等同于当前的 <see cref="T:System.Object" />。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的对象是等于当前对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.GetHashCode">
      <summary vsli:raw="Serves as a hash function for this type.">作为此类型的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">当前 <see cref="T:System.Object" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary vsli:raw="The equality operator for comparing two &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; objects.">用于比较两个 <see cref="T:System.Net.Http.HttpMethod" /> 对象的相等运算符。</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an equality operator.">相等运算符左侧的 <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an equality operator.">相等运算符右侧的 <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <paramref name="left" /> 和 <paramref name="right" /> 参数相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary vsli:raw="The inequality operator for comparing two &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; objects.">用于比较两个 <see cref="T:System.Net.Http.HttpMethod" /> 对象的不相等运算符。</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an inequality operator.">不相等运算符左侧的 <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an inequality operator.">不相等运算符右侧的 <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are inequal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <paramref name="left" /> 和 <paramref name="right" /> 参数不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">返回表示当前对象的字符串。</summary>
      <returns vsli:raw="A string representing the current object.">表示当前对象的字符串。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Delete">
      <summary vsli:raw="Represents an HTTP DELETE protocol method.">表示一个 HTTP DELETE 协议方法。</summary>
      <returns vsli:raw="The HTTP DELETE method.">返回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Get">
      <summary vsli:raw="Represents an HTTP GET protocol method.">表示一个 HTTP GET 协议方法。</summary>
      <returns vsli:raw="The HTTP GET method.">返回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Head">
      <summary vsli:raw="Represents an HTTP HEAD protocol method. The HEAD method is identical to GET except that the server only returns message-headers in the response, without a message-body.">表示一个 HTTP HEAD 协议方法。 除了服务器在响应中只返回消息头不返回消息体以外，HEAD 方法和 GET 是一样的。</summary>
      <returns vsli:raw="The HTTP HEAD method.">返回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Method">
      <summary vsli:raw="An HTTP method.">HTTP 方法。</summary>
      <returns vsli:raw="An HTTP method represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">表示为 <see cref="T:System.String" /> 的 HTTP 方法。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Options">
      <summary vsli:raw="Represents an HTTP OPTIONS protocol method.">表示一个 HTTP OPTIONS 协议方法。</summary>
      <returns vsli:raw="The HTTP OPTIONS method.">返回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Patch">
      <summary vsli:raw="Gets the HTTP PATCH protocol method.">获取 HTTP 修补协议方法。</summary>
      <returns vsli:raw="The HTTP PATCH protocol method.">HTTP 修补协议方法。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Post">
      <summary vsli:raw="Represents an HTTP POST protocol method that is used to post a new entity as an addition to a URI.">表示一个 HTTP POST 协议方法，该方法用于将新实体作为补充发送到某个 URI。</summary>
      <returns vsli:raw="The HTTP POST method.">返回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Put">
      <summary vsli:raw="Represents an HTTP PUT protocol method that is used to replace an entity identified by a URI.">表示一个 HTTP PUT 协议方法，该方法用于替换 URI 标识的实体。</summary>
      <returns vsli:raw="The HTTP PUT method.">返回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Trace">
      <summary vsli:raw="Represents an HTTP TRACE protocol method.">表示一个 HTTP TRACE 协议方法。</summary>
      <returns vsli:raw="The HTTP TRACE method.">返回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestException">
      <summary vsli:raw="A base class for exceptions thrown by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; and &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; classes.">
        <see cref="T:System.Net.Http.HttpClient" /> 和 <see cref="T:System.Net.Http.HttpMessageHandler" /> 所引发的异常的基类。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.HttpRequestException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception.">使用特定的描述当前异常的消息初始化 <see cref="T:System.Net.Http.HttpRequestException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">描述当前异常的消息。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception and an inner exception.">使用特定的描述当前异常和内部异常的消息初始化 <see cref="T:System.Net.Http.HttpRequestException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">描述当前异常的消息。</param>
      <param name="inner" vsli:raw="The inner exception.">内部异常。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception,System.Nullable{System.Net.HttpStatusCode})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception, an inner exception, and an HTTP status code.">
        <see cref="T:System.Net.Http.HttpRequestException" />使用描述当前异常的特定消息、内部异常和 HTTP 状态代码初始化类的新实例。</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">描述当前异常的消息。</param>
      <param name="inner" vsli:raw="The inner exception.">内部异常。</param>
      <param name="statusCode" vsli:raw="The HTTP status code.">HTTP 状态代码。</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestException.StatusCode">
      <summary vsli:raw="Gets the HTTP status code to be returned with the exception.">获取与异常一起返回的 HTTP 状态代码。</summary>
      <returns vsli:raw="An HTTP status code if the exception represents a non-successful result, otherwise &lt;c&gt;null&lt;/c&gt;.">如果异常表示不成功的结果，则返回 HTTP 状态代码; 否则为 <c>null</c>。</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessage">
      <summary vsli:raw="Represents a HTTP request message.">表示一条 HTTP 请求消息。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.HttpRequestMessage" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class with an HTTP method and a request &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">初始化 HTTP 方法和请求 <see cref="T:System.Net.Http.HttpRequestMessage" /> 的 <see cref="T:System.Uri" /> 类的新实例。</summary>
      <param name="method" vsli:raw="The HTTP method.">HTTP 方法。</param>
      <param name="requestUri" vsli:raw="A string that represents the request  &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">表示请求 <see cref="T:System.Uri" /> 的字符串。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class with an HTTP method and a request &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">初始化 HTTP 方法和请求 <see cref="T:System.Net.Http.HttpRequestMessage" /> 的 <see cref="T:System.Uri" /> 类的新实例。</summary>
      <param name="method" vsli:raw="The HTTP method.">HTTP 方法。</param>
      <param name="requestUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; to request.">要请求的 <see cref="T:System.Uri" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt;.">释放由 <see cref="T:System.Net.Http.HttpRequestMessage" /> 使用的非托管资源和托管资源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; and optionally disposes of the managed resources.">释放由 <see cref="T:System.Net.Http.HttpRequestMessage" /> 使用的非托管资源，并可根据需要释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">返回表示当前对象的字符串。</summary>
      <returns vsli:raw="A string representation of the current object.">当前对象的字符串表示形式。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Content">
      <summary vsli:raw="Gets or sets the contents of the HTTP message.">获取或设置 HTTP 消息的内容。</summary>
      <returns vsli:raw="The content of a message.">消息的内容</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Headers">
      <summary vsli:raw="Gets the collection of HTTP request headers.">获取 HTTP 请求标头的集合。</summary>
      <returns vsli:raw="The collection of HTTP request headers.">HTTP 请求标头的集合。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Method">
      <summary vsli:raw="Gets or sets the HTTP method used by the HTTP request message.">获取或设置 HTTP 请求消息使用的 HTTP 方法。</summary>
      <returns vsli:raw="The HTTP method used by the request message. The default is the GET method.">请求消息使用的 HTTP 方法。 默认为 GET 方法。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Options" />
    <member name="P:System.Net.Http.HttpRequestMessage.Properties">
      <summary vsli:raw="Gets a set of properties for the HTTP request.">获取 HTTP 请求的属性集。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">返回 <see cref="T:System.Collections.Generic.IDictionary`2" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.RequestUri">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Uri&quot; /&gt; used for the HTTP request.">获取或设置用于 HTTP 请求的 <see cref="T:System.Uri" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; used for the HTTP request.">用于 HTTP 请求的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Version">
      <summary vsli:raw="Gets or sets the HTTP message version.">获取或设置 HTTP 消息版本。</summary>
      <returns vsli:raw="The HTTP message version. The default value is &lt;c&gt;1.1&lt;/c&gt;, unless you're targeting .NET Core 2.1 or 2.2. In that case, the default value is &lt;c&gt;2.0&lt;/c&gt;.">HTTP 消息版本。 默认值为 <c>1.1</c>，除非你面向的是 .net Core 2.1 或2.2。 在这种情况下，默认值为 <c>2.0</c>。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.VersionPolicy">
      <summary vsli:raw="Gets or sets the policy that determines how &lt;see cref=&quot;System.Net.Http.HttpRequestMessage.Version&quot; /&gt; is interpreted and how the final HTTP version is negotiated with the server.">获取或设置策略，该策略确定如何解释 <see cref="System.Net.Http.HttpRequestMessage.Version" />，以及如何与服务器协商最终的 HTTP 版本。</summary>
      <returns vsli:raw="The HttpVersionPolicy used when the HTTP connection is established.">建立 HTTP 连接时使用的 HttpVersionPolicy。</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestOptions" />
    <member name="M:System.Net.Http.HttpRequestOptions.#ctor" />
    <member name="M:System.Net.Http.HttpRequestOptions.Set``1(System.Net.Http.HttpRequestOptionsKey{``0},``0)">
      <param name="key" vsli:raw="The strongly typed key for the HTTP request option." />
      <param name="value" vsli:raw="The value of the HTTP request option." />
      <typeparam name="TValue" vsli:raw="The type of the HTTP value as defined by &lt;paramref name=&quot;key&quot; /&gt;." />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">将某项添加到 <see cref="T:System.Collections.Generic.ICollection`1" /> 中。</summary>
      <param name="item" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">要添加到 <see cref="T:System.Collections.Generic.ICollection`1" /> 的对象。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Clear">
      <summary vsli:raw="Removes all items from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">从 <see cref="T:System.Collections.Generic.ICollection`1" /> 中移除所有项。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; contains a specific value.">确定 <see cref="T:System.Collections.Generic.ICollection`1" /> 是否包含特定值。</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">要在 <see cref="T:System.Collections.Generic.ICollection`1" /> 中定位的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在 <see langword="true" /> 中找到 <paramref name="item" />，则为 <see cref="T:System.Collections.Generic.ICollection`1" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">从特定的 <see cref="T:System.Collections.Generic.ICollection`1" /> 索引开始，将 <see cref="T:System.Array" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.Generic.ICollection`1" /> 复制的元素的目标。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">从 <see cref="T:System.Collections.Generic.ICollection`1" /> 中移除特定对象的第一个匹配项。</summary>
      <param name="item" vsli:raw="The object to remove from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">要从 <see cref="T:System.Collections.Generic.ICollection`1" /> 中删除的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was successfully removed from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is not found in the original &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">如果从 <see langword="true" /> 中成功移除 <paramref name="item" />，则为 <see cref="T:System.Collections.Generic.ICollection`1" />；否则为 <see langword="false" />。 如果在原始 <see langword="false" /> 中没有找到 <paramref name="item" />，该方法也会返回 <see cref="T:System.Collections.Generic.ICollection`1" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Add(System.String,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">向 <see cref="T:System.Collections.Generic.IDictionary`2" /> 添加一个带有所提供的键和值的元素。</summary>
      <param name="key" vsli:raw="The object to use as the key of the element to add.">用作要添加的元素的键的对象。</param>
      <param name="value" vsli:raw="The object to use as the value of the element to add.">用作要添加的元素的值的对象。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; contains an element with the specified key.">确定是否 <see cref="T:System.Collections.Generic.IDictionary`2" /> 包含带有指定键的元素。</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">要在 <see cref="T:System.Collections.Generic.IDictionary`2" /> 中定位的键。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 包含具有键的元素，则为 <see cref="T:System.Collections.Generic.IDictionary`2" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Remove(System.String)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">从 <see cref="T:System.Collections.Generic.IDictionary`2" /> 中移除包含指定键的元素。</summary>
      <param name="key" vsli:raw="The key of the element to remove.">要移除的元素的键。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; was not found in the original &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">如果该元素已成功移除，则为 <see langword="true" />；否则为 <see langword="false" />。 如果在原始 <see langword="false" /> 中没有找到 <paramref name="key" />，此方法也会返回 <see cref="T:System.Collections.Generic.IDictionary`2" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#TryGetValue(System.String,System.Object@)">
      <param name="key" vsli:raw="The key of the value to get." />
      <param name="value" vsli:raw="When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the &lt;paramref name=&quot;value&quot; /&gt; parameter. This parameter is passed uninitialized." />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">返回一个循环访问集合的枚举器。</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">用于循环访问集合的枚举数。</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">返回循环访问集合的枚举数。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.TryGetValue``1(System.Net.Http.HttpRequestOptionsKey{``0},``0@)">
      <param name="key" vsli:raw="The strongly typed key to get the value of an HTTP request option." />
      <param name="value" vsli:raw="When this method returns, contains the value of the specified HTTP request option." />
      <typeparam name="TValue" vsli:raw="The type of the HTTP value as defined by &lt;paramref name=&quot;key&quot; /&gt;." />
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">获取 <see cref="T:System.Collections.Generic.ICollection`1" /> 中包含的元素数。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 中包含的元素数。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only.">获取一个值，该值指示 <see cref="T:System.Collections.Generic.ICollection`1" /> 是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Collections.Generic.ICollection`1" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Item(System.String)">
      <summary vsli:raw="Gets or sets the element with the specified key.">获取或设置具有指定键的元素。</summary>
      <param name="key" vsli:raw="The key of the element to get or set.">要获取或设置的元素的键。</param>
      <returns vsli:raw="The element with the specified key.">带有指定键的元素。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">获取包含 <see cref="T:System.Collections.Generic.ICollection`1" /> 的键的 <see cref="T:System.Collections.Generic.IDictionary`2" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the keys of the object that implements &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">一个 <see cref="T:System.Collections.Generic.ICollection`1" />，它包含实现 <see cref="T:System.Collections.Generic.IDictionary`2" /> 的对象的键。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">获取一个 <see cref="T:System.Collections.Generic.ICollection`1" />，它包含 <see cref="T:System.Collections.Generic.IDictionary`2" /> 中的值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the values in the object that implements &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">一个 <see cref="T:System.Collections.Generic.ICollection`1" />，它包含实现 <see cref="T:System.Collections.Generic.IDictionary`2" /> 的对象中的值。</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestOptionsKey`1">
      <typeparam name="TValue" vsli:raw="The type of the value of the option." />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptionsKey`1.#ctor(System.String)">
      <param name="key" vsli:raw="Name of the HTTP request option." />
    </member>
    <member name="P:System.Net.Http.HttpRequestOptionsKey`1.Key" />
    <member name="T:System.Net.Http.HttpResponseMessage">
      <summary vsli:raw="Represents a HTTP response message including the status code and data.">表示包括状态代码和数据的 HTTP 响应消息。</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.HttpResponseMessage" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; class with a specific &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.StatusCode&quot; /&gt;.">初始化指定的 <see cref="T:System.Net.Http.HttpResponseMessage" /> 的 <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> 类的新实例。</summary>
      <param name="statusCode" vsli:raw="The status code of the HTTP response.">HTTP 响应的状态代码。</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt;.">释放由 <see cref="T:System.Net.Http.HttpResponseMessage" /> 使用的非托管资源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; and optionally disposes of the managed resources.">释放由 <see cref="T:System.Net.Http.HttpResponseMessage" /> 使用的非托管资源，并可根据需要释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode">
      <summary vsli:raw="Throws an exception if the &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode&quot; /&gt; property for the HTTP response is &lt;see langword=&quot;false&quot; /&gt;.">如果 HTTP 响应的 <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" /> 属性是 <see langword="false" />，则引发异常。</summary>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The HTTP response is unsuccessful.">HTTP 响应失败。</exception>
      <returns vsli:raw="The HTTP response message if the call is successful.">如果调用成功，HTTP 则响应消息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">返回表示当前对象的字符串。</summary>
      <returns vsli:raw="A string representation of the current object.">当前对象的字符串表示形式。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Content">
      <summary vsli:raw="Gets or sets the content of a HTTP response message.">获取或设置 HTTP 响应消息的内容。</summary>
      <returns vsli:raw="The content of the HTTP response message.">HTTP 响应消息的内容。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Headers">
      <summary vsli:raw="Gets the collection of HTTP response headers.">获取 HTTP 响应标头的集合。</summary>
      <returns vsli:raw="The collection of HTTP response headers.">HTTP 响应标头的集合。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode">
      <summary vsli:raw="Gets a value that indicates if the HTTP response was successful.">获取一个值，该值指示 HTTP 响应是否成功。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.StatusCode&quot; /&gt; was in the range 200-299; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果 <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> 在200-299 范围内，则为; 否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.ReasonPhrase">
      <summary vsli:raw="Gets or sets the reason phrase which typically is sent by servers together with the status code.">获取或设置通常由服务器发出的原因短语（与状态代码一起发出）。</summary>
      <returns vsli:raw="The reason phrase sent by the server.">服务器发送的原因短语。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.RequestMessage">
      <summary vsli:raw="Gets or sets the request message which led to this response message.">获取或设置导致此响应消息的请求消息。</summary>
      <returns vsli:raw="The request message which led to this response message.">导致此响应消息的请求消息。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.StatusCode">
      <summary vsli:raw="Gets or sets the status code of the HTTP response.">获取或设置 HTTP 响应的状态代码。</summary>
      <returns vsli:raw="The status code of the HTTP response.">HTTP 响应的状态代码。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.TrailingHeaders">
      <summary vsli:raw="Gets the collection of trailing headers included in an HTTP response.">获取 HTTP 响应中包含的尾随标头的集合。</summary>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="PROTOCOL_ERROR: The HTTP/2 response contains pseudo-headers in the Trailing Headers Frame.">PROTOCOL_ERROR： HTTP/2 响应包含尾随标头帧中的伪标头。</exception>
      <returns vsli:raw="The collection of trailing headers in the HTTP response.">HTTP 响应中尾随标头的集合。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Version">
      <summary vsli:raw="Gets or sets the HTTP message version.">获取或设置 HTTP 消息版本。</summary>
      <returns vsli:raw="The HTTP message version. The default is 1.1.">HTTP 消息版本。 默认值为 1.1。</returns>
    </member>
    <member name="T:System.Net.Http.HttpVersionPolicy">
      <summary vsli:raw="Specifies behaviors for selecting and negotiating the HTTP version for a request.">指定用于选择和协商请求的 HTTP 版本的行为。</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionExact">
      <summary vsli:raw="&lt;para&gt;Only use the requested version.&lt;/para&gt;&lt;para&gt;This option allows for use of a prenegotiated clear text connection for the requested version.&lt;/para&gt;">仅使用请求的版本。</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher">
      <summary vsli:raw="&lt;para&gt;Use the highest available version, downgrading only to the requested version but not below.&lt;/para&gt;&lt;para&gt;If the server supports a higher version than the requested version (either negotiated via ALPN (H2) or advertised via Alt-Svc (H3)) and a secure connection is requested, the result is the highest available version. Otherwise, the version downgrades to &lt;see cref=&quot;System.Net.Http.HttpRequestMessage.Version&quot; /&gt;. This option allows use of a prenegotiated clear text connection for the requested version but not for a higher version.&lt;/para&gt;">使用最高的可用版本，只会降级到请求的版本，而不会降级到更低版本。</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrLower">
      <summary vsli:raw="&lt;para&gt;Use the requested version or downgrade to a lower one. This is the default behavior.&lt;/para&gt;&lt;para&gt;If the server supports the requested version, either negotiated via ALPN (H2) or advertised via Alt-Svc (H3), and a secure connection is being requested, the result is the &lt;see cref=&quot;System.Net.Http.HttpRequestMessage.Version&quot; /&gt;. Otherwise, the version downgrades to HTTP/1.1. This option does not allow use of a prenegotiated clear text connection, for example, H2C.&lt;/para&gt;">使用请求的版本或降级到较低的版本。 这是默认行为。</summary>
    </member>
    <member name="T:System.Net.Http.MessageProcessingHandler">
      <summary vsli:raw="A base type for handlers which only do some small processing of request and/or response messages.">仅对请求和/或响应消息进行一些小型处理的处理程序的基类。</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.MessageProcessingHandler&quot; /&gt; class.">创建 <see cref="T:System.Net.Http.MessageProcessingHandler" /> 类的实例。</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.MessageProcessingHandler&quot; /&gt; class with a specific inner handler.">创建特定内部处理程序的 <see cref="T:System.Net.Http.MessageProcessingHandler" /> 类的实例。</summary>
      <param name="innerHandler" vsli:raw="The inner handler which is responsible for processing the HTTP response messages.">负责处理 HTTP 响应消息的内部处理程序。</param>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Performs processing on each request sent to the server.">处理每个发送到服务器的请求。</summary>
      <param name="request" vsli:raw="The HTTP request message to process.">要处理的 HTTP 请求消息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <returns vsli:raw="The HTTP request message that was processed.">已处理的 HTTP 请求消息。</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Perform processing on each response from the server.">处理来自服务器的每个响应。</summary>
      <param name="response" vsli:raw="The HTTP response message to process.">要处理的 HTTP 响应消息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <returns vsli:raw="The HTTP response message that was processed.">已处理的 HTTP 响应消息。</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server.">将 HTTP 请求发送到内部处理程序，然后再发送到服务器。</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">要发送到服务器的 HTTP 请求消息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <returns vsli:raw="The HTTP response message.">HTTP 响应消息。</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.">异步发送 HTTP 请求到要发送到服务器的内部处理程序。</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">要发送到服务器的 HTTP 请求消息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">可由其他对象或线程用以接收取消通知的取消标记。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 是 <see langword="null" />。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="T:System.Net.Http.MultipartContent">
      <summary vsli:raw="Provides a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">提供 <see cref="T:System.Net.Http.HttpContent" /> 对象的集合，其可通过使用多部分/* 内容类型规范序列化。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">创建 <see cref="T:System.Net.Http.MultipartContent" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">创建 <see cref="T:System.Net.Http.MultipartContent" /> 类的新实例。</summary>
      <param name="subtype" vsli:raw="The subtype of the multipart content.">多部分内容的子类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;subtype&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="subtype" /> 为 <see langword="null" /> 或者只包含空格字符。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">创建 <see cref="T:System.Net.Http.MultipartContent" /> 类的新实例。</summary>
      <param name="subtype" vsli:raw="The subtype of the multipart content.">多部分内容的子类型。</param>
      <param name="boundary" vsli:raw="The boundary string for the multipart content.">多部分内容的边界字符串。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;subtype&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; ends with a space character.">该 <paramref name="subtype" /> 为 <see langword="null" /> 或空字符串。  
  
<paramref name="boundary" /> 为 <see langword="null" /> 或者只包含空格字符。  
  
或 
<paramref name="boundary" /> 以空格字符结尾。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of the &lt;paramref name=&quot;boundary&quot; /&gt; was greater than 70.">
        <paramref name="boundary" /> 的长度大于 70。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
      <summary vsli:raw="Add multipart HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">添加多部分 HTTP 内容到 <see cref="T:System.Net.Http.HttpContent" /> 对象的集合，其可通过使用多部分/* 内容类型规范获取序列化。</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">要添加到集合中的 HTTP 内容。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding.">使用 multipart/* 编码将 HTTP 内容序列化到流。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The HTTP content stream that represents the multipart/* encoded HTTP content.">HTTP 内容流，它表示 multipart/* 编码的 HTTP 内容。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding as an asynchronous operation.">以异步操作方式，使用 multipart/* 编码将 HTTP 内容序列化到流。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding as an asynchronous operation.">以异步操作方式，使用 multipart/* 编码将 HTTP 内容序列化到流。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; and optionally disposes of the managed resources.">释放由 <see cref="T:System.Net.Http.MultipartContent" /> 使用的非托管资源，并可根据需要释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">返回循环访问 <see cref="T:System.Net.Http.HttpContent" /> 对象集合的枚举器，该对象集合使用多部分/* 内容类型规范进行序列化。</summary>
      <returns vsli:raw="An object that can be used to iterate through the collection.">一个可用于循环访问集合的对象。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the multipart HTTP content to a stream.">将多部分 HTTP 内容序列化为流。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息（例如通道绑定令牌）。 此参数可以为 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the multipart HTTP content to a stream as an asynchronous operation.">以异步操作方式，将多部分 HTTP 内容序列化到流。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息（例如信道绑定令牌）。 此参数可以为 <see langword="null" />。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the multipart HTTP content to a stream as an asynchronous operation.">以异步操作方式，将多部分 HTTP 内容序列化到流。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息（例如信道绑定令牌）。 此参数可以为 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="The explicit implementation of the &lt;see cref=&quot;M:System.Net.Http.MultipartContent.GetEnumerator&quot; /&gt; method.">
        <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" /> 方法的显式实现。</summary>
      <returns vsli:raw="An object that can be used to iterate through the collection.">一个可用于循环访问集合的对象。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the HTTP multipart content has a valid length in bytes.">确定 HTTP 多部分内容的长度是否有效（以字节为单位）。</summary>
      <param name="length" vsli:raw="The length in bytes of the HTTP content.">HTTP 内容的长度（以字节为单位）。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="length" /> 是有效长度，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.MultipartContent.HeaderEncodingSelector">
      <summary vsli:raw="Gets or sets a callback that decode response header values.">获取或设置对响应头值进行解码的回调。</summary>
      <returns vsli:raw="The header encoding selector callback to decode the value for the specified response header name, or &lt;see langword=&quot;null&quot; /&gt; to indicate the default behavior.">标头编码选择器回调，用于对指定的响应标头名称的值进行解码，或 <see langword="null" /> 指示默认行为。</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataContent">
      <summary vsli:raw="Provides a container for content encoded using multipart/form-data MIME type.">为使用 multipart/form-data MIME 类型进行编码的内容提供容器。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartFormDataContent&quot; /&gt; class.">创建 <see cref="T:System.Net.Http.MultipartFormDataContent" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartFormDataContent&quot; /&gt; class.">创建 <see cref="T:System.Net.Http.MultipartFormDataContent" /> 类的新实例。</summary>
      <param name="boundary" vsli:raw="The boundary string for the multipart form data content.">多部分窗体数据内容的边界字符串。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;boundary&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; ends with a space character.">
        <paramref name="boundary" /> 为 <see langword="null" /> 或者只包含空格字符。  
  
- 或 - 
<paramref name="boundary" /> 以空格字符结尾。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of the &lt;paramref name=&quot;boundary&quot; /&gt; was greater than 70.">
        <paramref name="boundary" /> 的长度大于 70。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">向序列化为多部/窗体数据 MIME 类型的 <see cref="T:System.Net.Http.HttpContent" /> 对象集合添加 HTTP 内容。</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">要添加到集合中的 HTTP 内容。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">向序列化为多部/窗体数据 MIME 类型的 <see cref="T:System.Net.Http.HttpContent" /> 对象集合添加 HTTP 内容。</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">要添加到集合中的 HTTP 内容。</param>
      <param name="name" vsli:raw="The name for the HTTP content to add.">要添加的 HTTP 内容的名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="name" /> 为 <see langword="null" /> 或者只包含空格字符。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">向序列化为多部/窗体数据 MIME 类型的 <see cref="T:System.Net.Http.HttpContent" /> 对象集合添加 HTTP 内容。</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">要添加到集合中的 HTTP 内容。</param>
      <param name="name" vsli:raw="The name for the HTTP content to add.">要添加的 HTTP 内容的名称。</param>
      <param name="fileName" vsli:raw="The file name for the HTTP content to add to the collection.">要添加到集合中的 HTTP 内容的文件名。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;fileName&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="name" /> 为 <see langword="null" /> 或者只包含空格字符。  
  
- 或 - 
<paramref name="fileName" /> 为 <see langword="null" /> 或者只包含空格字符。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write the content provided in the constructor to an HTTP content stream as an asynchronous operation.">作为一个异步操作，将构造函数中提供的内容序列化并写入一个 HTTP 内容流。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息，例如通道绑定令牌。 此参数可以为 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="T:System.Net.Http.ReadOnlyMemoryContent">
      <summary vsli:raw="Provides HTTP content based on a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt;.">提供基于 <see cref="T:System.ReadOnlyMemory`1" /> 的 HTTP 内容。</summary>
    </member>
    <member name="M:System.Net.Http.ReadOnlyMemoryContent.#ctor(System.ReadOnlyMemory{System.Byte})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ReadOnlyMemoryContent&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.ReadOnlyMemoryContent" /> 类的新实例。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ReadOnlyMemoryContent&quot; /&gt;.">用于初始化 <see cref="T:System.Net.Http.ReadOnlyMemoryContent" /> 的内容。</param>
    </member>
    <member name="T:System.Net.Http.SocketsHttpConnectionContext">
      <summary vsli:raw="Represents the context passed to the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.ConnectCallback&quot; /&gt; for a &lt;see cref=&quot;T:System.Net.Http.SocketsHttpHandler&quot; /&gt; instance. .">表示传递到 <see cref="T:System.Net.Http.SocketsHttpHandler" /> 实例的 <see cref="P:System.Net.Http.SocketsHttpHandler.ConnectCallback" /> 的上下文。 。</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpConnectionContext.DnsEndPoint">
      <summary vsli:raw="Gets the DNS endpoint to be used by the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.ConnectCallback&quot; /&gt; to establish the connection.">获取 <see cref="P:System.Net.Http.SocketsHttpHandler.ConnectCallback" /> 用于建立连接的 DNS 终结点。</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpConnectionContext.InitialRequestMessage">
      <summary vsli:raw="Gets the initial HttpRequestMessage that is causing the connection to be created.">获取导致连接被创建的初始 HTTP 请求消息。</summary>
      <returns vsli:raw="The request message that's causing the connection to be created.">导致创建连接的请求消息。</returns>
    </member>
    <member name="T:System.Net.Http.SocketsHttpHandler">
      <summary vsli:raw="Provides the default message handler used by &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; in .NET Core 2.1 and later.">提供在 .NET Core 2.1 及更高版本中由 <see cref="T:System.Net.Http.HttpClient" /> 使用的默认消息处理程序。</summary>
    </member>
    <member name="M:System.Net.Http.SocketsHttpHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.SocketsHttpHandler&quot; /&gt; class.">创建 <see cref="T:System.Net.Http.SocketsHttpHandler" /> 类的实例。</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should follow redirection responses.">获取或设置一个值，该值指示处理程序是否应跟随重定向响应。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should follow redirection responses; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 如果处理程序应跟随重定向响应，则为;否则为 <see langword="false" /> 。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.">获取或设置处理程序用于自动解压缩 HTTP 内容响应的解压缩方法类型。</summary>
      <returns vsli:raw="The type of decompression method used by the handler for automatic decompression of the HTTP content response.">处理程序用于自动解压缩 HTTP 内容响应的解压缩方法类型。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectCallback">
      <summary vsli:raw="Gets or sets a custom callback used to open new connections.">获取或设置用于打开新连接的自定义回调。</summary>
      <returns vsli:raw="A callback method to create a stream.">用于创建流的回调方法。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout">
      <summary vsli:raw="Gets or sets the timespan to wait before the connection establishing times out.">获取或设置连接建立超时前等待的时间跨度。</summary>
      <returns vsli:raw="The timespan to wait before the connection establishing times out. The default value is &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">连接建立超时前等待的时间跨度。默认值为 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.CookieContainer">
      <summary vsli:raw="Gets or sets the managed cookie container object.">获取或设置托管 cookie 容器对象。</summary>
      <returns vsli:raw="The managed cookie container object.">托管 cookie 容器对象。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Credentials">
      <summary vsli:raw="Gets or sets authentication information used by this handler.">获取或设置此处理程序使用的身份验证信息。</summary>
      <returns vsli:raw="The authentication credentials associated with the handler. The default value is &lt;see langword=&quot;null&quot; /&gt;.">与该处理程序关联的身份验证凭据。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials">
      <summary vsli:raw="When the default (system) proxy is used, gets or sets the credentials used to submit to the default proxy server for authentication.">使用默认（系统）代理时，获取或设置用于提交到默认代理服务器进行身份验证的凭据。</summary>
      <returns vsli:raw="The credentials used to authenticate the user to an authenticating proxy.">用于向身份验证代理验证用户身份的凭据。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.EnableMultipleHttp2Connections">
      <summary vsli:raw="Gets or sets a value that indicates whether additional HTTP/2 connections can be established to the same server when the maximum number of concurrent streams is reached on all existing connections.">获取或设置一个值，用于指示在所有现有连接上达到最大并发流数时，是否可以在同一服务器上建立其他 HTTP/2 连接。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if additional HTTP/2 connections are allowed to be created; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果允许创建其他 HTTP/2 连接，则为;否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout">
      <summary vsli:raw="Gets or sets the time-out value for server HTTP 100 Continue response.">获取或设置服务器 HTTP 100 Continue 响应的超时值。</summary>
      <returns vsli:raw="The timespan to wait for the HTTP 100 Continue. The default value is 1 second.">等待 HTTP 100 的时间跨度继续。 默认值为 1 秒钟。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.IsSupported">
      <summary vsli:raw="Gets a value that indicates whether the handler is supported on the current platform.">获取一个值，用于指示当前平台是否支持处理程序。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler is supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果支持处理程序，则为; 否则为。否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingDelay">
      <summary vsli:raw="Gets or sets the keep alive ping delay.">获取或设置保持活动状态 ping 延迟。</summary>
      <returns vsli:raw="The keep alive ping delay. Defaults to &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">保持活动的 ping 延迟。 默认为 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingPolicy">
      <summary vsli:raw="Gets or sets the keep alive ping behaviour.">获取或设置保持活动状态 ping 行为。</summary>
      <returns vsli:raw="The keep alive ping behaviour.">保持活动 ping 的行为。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingTimeout">
      <summary vsli:raw="Gets or sets the keep alive ping timeout.">获取或设置保持活动状态 ping 超时。</summary>
      <returns vsli:raw="The keep alive ping timeout. Defaults to 20 seconds.">保持活动状态的 ping 超时。 默认值为20秒。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of allowed HTTP redirects.">获取或设置允许的最大 HTTP 重定向数。</summary>
      <returns vsli:raw="The maximum number of allowed HTTP redirects.">允许的最大 HTTP 重定向数。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer">
      <summary vsli:raw="Gets or sets the maximum number of simultaneous TCP connections allowed to a single server.">获取或设置允许向单个服务器连接的最大并行 TCP 连接数。</summary>
      <returns vsli:raw="The maximum number of simultaneous TCP connections allowed to a single server.">单个服务器允许的最大并发 TCP 连接数。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize">
      <summary vsli:raw="Gets or sets the maximum amount of data that can be drained from responses in bytes.">获取或设置可从响应中排出的最大数据量（以字节为单位）。</summary>
      <returns vsli:raw="The maximum amount of data that can be drained from responses in bytes.">可从响应中排出的最大数据量（以字节为单位）。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.">获取或设置响应标头的最大长度，以千字节（1024 字节）为单位。</summary>
      <returns vsli:raw="The maximum size of the header portion from the server response, in kilobytes.">服务器响应中的标头部分的最大大小（kb）。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PlaintextStreamFilter">
      <summary vsli:raw="Gets or sets a custom callback that provides access to the plaintext HTTP protocol stream.">获取或设置一个自定义回叫，用于提供对纯文本 HTTP 协议流的访问。</summary>
      <returns vsli:raw="A callback that provides access to the plaintext HTTP protocol stream.">提供对纯文本 HTTP 协议流的访问的回调。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout">
      <summary vsli:raw="Gets or sets how long a connection can be idle in the pool to be considered reusable.">获取或设置池中的连接处于空闲状态多长时间后才能视为可重复使用。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; (except &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;).">指定的值小于 <see cref="F:System.TimeSpan.Zero" /> 或等于 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</exception>
      <returns vsli:raw="The maximum idle time for a connection in the pool. The default value for this property is 1 minute in .NET 6 and later versions; the default value is 2 minutes in .NET Core and .NET 5">池中连接的最长空闲时间。 此属性的默认值为2分钟。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime">
      <summary vsli:raw="Gets or sets how long a connection can be in the pool to be considered reusable.">获取或设置池中的连接持续多长时间后才能视为可重复使用。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; or is equal to &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">指定的值小于 <see cref="F:System.TimeSpan.Zero" /> 或等于 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</exception>
      <returns vsli:raw="The maximum time for a connection to be in the pool. The default value for this property is &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">连接在池中的最长时间。 此属性的默认值为 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler sends an Authorization header with the request.">获取或设置一个值，该值指示处理程序是否随请求发送授权标头。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler sends an Authorization header with the request; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果处理程序使用请求发送 Authorization 标头，则为; 否则为。否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Properties" />
    <member name="P:System.Net.Http.SocketsHttpHandler.Proxy">
      <summary vsli:raw="Gets or sets the custom proxy when the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.UseProxy&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">当 <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" />属性为 <see langword="true" /> 时，获取或设置自定义代理。</summary>
      <returns vsli:raw="The custom proxy.">自定义代理。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.RequestHeaderEncodingSelector">
      <summary vsli:raw="Gets or sets a callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to encode request header values.">获取或设置对请求头值进行解码的回调。</summary>
      <returns vsli:raw="The header encoding selector callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to encode the value for the specified request header name, or &lt;see langword=&quot;null&quot; /&gt; to indicate the default behavior.">标头编码选择器回调，用于对指定的响应标头名称的值进行解码，或 <see langword="null" /> 指示默认行为。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout">
      <summary vsli:raw="Gets or sets the timespan to wait for data to be drained from responses.">获取或设置等待数据从响应中排出的时间跨度。</summary>
      <returns vsli:raw="The timespan to wait for data to be drained from responses.">等待数据从响应中排出的时间跨度。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseHeaderEncodingSelector">
      <summary vsli:raw="Gets or sets a callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to decode response header values.">获取或设置对响应头值进行解码的回调。</summary>
      <returns vsli:raw="The header encoding selector callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to decode the value for the specified response header name, or &lt;see langword=&quot;null&quot; /&gt; to indicate the default behavior.">标头编码选择器回调，用于对指定的响应标头名称的值进行解码，或 <see langword="null" /> 指示默认行为。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.SslOptions">
      <summary vsli:raw="Gets or sets the set of options used for client TLS authentication.">获取或设置用于客户端 TLS 身份验证的选项集。</summary>
      <returns vsli:raw="The set of options used for client TLS authentication.">用于客户端 TLS 身份验证的选项集。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseCookies">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should use cookies.">获取或设置一个值，该值指示处理程序是否应使用 cookie。</summary>
      <returns vsli:raw="A value that indicates whether the handler should use cookies.">一个值，该值指示处理程序是否应使用 cookie。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseProxy">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should use a proxy.">获取或设置一个值，该值指示处理程序是否应使用代理。</summary>
      <returns vsli:raw="A value that indicates whether the handler should use a proxy.">一个值，该值指示处理程序是否应使用代理。</returns>
    </member>
    <member name="T:System.Net.Http.SocketsHttpPlaintextStreamFilterContext">
      <summary vsli:raw="Represents the context passed to the PlaintextStreamFilter for a SocketsHttpHandler instance.">表示为 SocketsHttpHandler 实例传递给 PlaintextStreamFilter 的上下文。</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.InitialRequestMessage">
      <summary vsli:raw="Gets the initial HttpRequestMessage that is causing the stream to be used.">获取导致流被使用的初始 HTTP 请求消息。</summary>
      <returns vsli:raw="The HTTP request message that is causing the stream to be used.">导致使用流的 HTTP 请求消息。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.NegotiatedHttpVersion">
      <summary vsli:raw="Gets the version of HTTP in use for this stream.">获取用于此流的 HTTP 版本。</summary>
      <returns vsli:raw="The version of HTTP in use for this stream.">此流使用的 HTTP 版本。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.PlaintextStream">
      <summary vsli:raw="Gets the plaintext Stream that will be used for HTTP protocol requests and responses.">获取用于 HTTP 协议请求和响应的纯文本流。</summary>
      <returns vsli:raw="The plaintext stream that will be used for HTTP protocol requests and responses.">将用于 HTTP 协议请求和响应的纯文本流。</returns>
    </member>
    <member name="T:System.Net.Http.StreamContent">
      <summary vsli:raw="Provides HTTP content based on a stream.">基于流提供 HTTP 内容。</summary>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; class.">创建 <see cref="T:System.Net.Http.StreamContent" /> 类的新实例。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">用于初始化 <see cref="T:System.Net.Http.StreamContent" />的内容。</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; class.">创建 <see cref="T:System.Net.Http.StreamContent" /> 类的新实例。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">用于初始化 <see cref="T:System.Net.Http.StreamContent" /> 的内容。</param>
      <param name="bufferSize" vsli:raw="The size, in bytes, of the buffer for the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.StreamContent" /> 的缓冲区的大小（以字节为单位）。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 是 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;bufferSize&quot; /&gt; was less than or equal to zero.">
        <paramref name="bufferSize" /> 小于或等于零。</exception>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns the HTTP stream as a read-only stream.">以只读流的形式返回 HTTP 流。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The HTTP content stream.">HTTP 内容流。</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Returns the HTTP stream as a read-only stream as an asynchronous operation.">作为一个异步操作，返回 HTTP 流作为只读流。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; and optionally disposes of the managed resources.">释放由 <see cref="T:System.Net.Http.StreamContent" /> 使用的非托管资源，并可根据需要释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the multipart HTTP content to a stream.">将多部分 HTTP 内容序列化为流。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息（例如通道绑定令牌）。 此参数可以为 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">将 HTTP 内容序列化到流，此为异步操作。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息（例如信道绑定令牌）。 此参数可以为 <see langword="null" />。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">将 HTTP 内容序列化到流，此为异步操作。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息（例如信道绑定令牌）。 此参数可以为 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the stream content has a valid length in bytes.">确定流内容是否具有有效的长度（以字节为单位）。</summary>
      <param name="length" vsli:raw="The length in bytes of the stream content.">用字节表示的流内容长度。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="length" /> 是有效长度，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.StringContent">
      <summary vsli:raw="Provides HTTP content based on a string.">基于字符串提供 HTTP 内容。</summary>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">创建 <see cref="T:System.Net.Http.StringContent" /> 类的新实例。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">用于初始化 <see cref="T:System.Net.Http.StringContent" />的内容。</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">创建 <see cref="T:System.Net.Http.StringContent" /> 类的新实例。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">用于初始化 <see cref="T:System.Net.Http.StringContent" />的内容。</param>
      <param name="encoding" vsli:raw="The encoding to use for the content.">用于内容的编码。</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">创建 <see cref="T:System.Net.Http.StringContent" /> 类的新实例。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">用于初始化 <see cref="T:System.Net.Http.StringContent" />的内容。</param>
      <param name="encoding" vsli:raw="The encoding to use for the content.">用于内容的编码。</param>
      <param name="mediaType" vsli:raw="The media type to use for the content.">要用于该内容的媒体。</param>
    </member>
    <member name="M:System.Net.Http.StringContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write the string provided in the constructor to an HTTP content stream as an asynchronous operation.">作为一个异步操作，将构造函数中提供的字符串序列化并写入一个 HTTP 内容流。</summary>
      <param name="stream" vsli:raw="The target stream.">目标流。</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">有关传输的信息，例如通道绑定令牌。 此参数可以为 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用于取消操作的取消令牌。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">表示异步操作的任务对象。</returns>
    </member>
  </members>
</doc>