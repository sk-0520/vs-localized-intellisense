<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>Microsoft.VisualBasic.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary vsli:raw="Indicates the window style to use for the invoked program when calling the &lt;see langword=&quot;Shell&quot; /&gt; function.">
        <see langword="Shell" /> 함수를 호출할 때 호출된 프로그램에 사용할 창 스타일을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary vsli:raw="Window is hidden and focus is passed to the hidden window. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHide&quot; /&gt;.">창이 숨겨지고 포커스가 숨겨진 창에 전달됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbHide" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary vsli:raw="Window is maximized with focus. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMaximizedFocus&quot; /&gt;.">창이 포커스가 있는 전체 화면으로 표시됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbMaximizedFocus" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary vsli:raw="Window is displayed as an icon with focus. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMinimizedFocus&quot; /&gt;.">창이 포커스가 있는 아이콘으로 표시됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbMinimizedFocus" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary vsli:raw="Window is displayed as an icon. The currently active window remains active. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMinimizedNoFocus&quot; /&gt;.">창이 아이콘으로 표시됩니다. 현재 활성 창은 활성 상태로 남습니다. 이 멤버는 Visual Basic 상수 <see langword="vbMinimizedNoFocus" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary vsli:raw="Window has focus and is restored to its original size and position. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormalFocus&quot; /&gt;.">창에 포커스가 생기며 원래 크기와 위치로 복원됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbNormalFocus" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary vsli:raw="Window is restored to its most recent size and position. The currently active window remains active. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormalNoFocus&quot; /&gt;.">창이 가장 최근 크기와 위치로 복원됩니다. 현재 활성 창은 활성 상태로 남습니다. 이 멤버는 Visual Basic 상수 <see langword="vbNormalNoFocus" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary vsli:raw="Indicates the type of procedure being invoked when calling the &lt;see langword=&quot;CallByName&quot; /&gt; function.">
        <see langword="CallByName" /> 함수를 호출할 때 호출되는 프로시저 형식을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary vsli:raw="A property value is being retrieved.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbGet&quot; /&gt;.">속성 값을 가져옵니다.  이 멤버는 Visual Basic 상수 <see langword="vbGet" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary vsli:raw="An Object property value is being determined. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLet&quot; /&gt;.">개체 속성 값을 결정합니다. 이 멤버는 Visual Basic 상수 <see langword="vbLet" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary vsli:raw="A method is being invoked.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMethod&quot; /&gt;.">메서드를 호출합니다.  이 멤버는 Visual Basic 상수 <see langword="vbMethod" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary vsli:raw="A property value is being determined.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSet&quot; /&gt;.">속성 값을 결정합니다.  이 멤버는 Visual Basic 상수 <see langword="vbSet" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary vsli:raw="A Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; is an ordered set of items that can be referred to as a unit.">Visual Basic <see langword="Collection" />은 하나의 단위로 참조할 수 있는 정렬된 항목 집합입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary vsli:raw="Creates and returns a new Visual Basic &lt;see cref=&quot;T:Microsoft.VisualBasic.Collection&quot; /&gt; object.">새 Visual Basic <see cref="T:Microsoft.VisualBasic.Collection" /> 개체를 만들어 반환합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary vsli:raw="Adds an element to a &lt;see langword=&quot;Collection&quot; /&gt; object.">
        <see langword="Collection" /> 개체에 요소를 추가합니다.</summary>
      <param name="Item" vsli:raw="Required. An object of any type that specifies the element to add to the collection.">필수 요소. 컬렉션에 추가할 요소를 지정하는 임의의 유형의 개체입니다.</param>
      <param name="Key" vsli:raw="Optional. A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.">선택 사항입니다. 위치 인덱스 대신 컬렉션의 이 새 요소에 액세스하는 데 사용할 수 있는 키 문자열을 지정하는 고유 <see langword="String" /> 식입니다.</param>
      <param name="Before" vsli:raw="Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection before the element identified by the &lt;paramref name=&quot;Before&quot; /&gt; argument. If &lt;paramref name=&quot;Before&quot; /&gt; is a numeric expression, it must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. If &lt;paramref name=&quot;Before&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, it must correspond to the key string specified when the element being referred to was added to the collection. You cannot specify both &lt;paramref name=&quot;Before&quot; /&gt; and &lt;paramref name=&quot;After&quot; /&gt;.">선택 사항입니다. 컬렉션에서 상대적 위치를 지정하는 식입니다. 컬렉션에서 추가되는 요소는 <paramref name="Before" /> 인수에 의해 식별되는 요소 앞에 옵니다. <paramref name="Before" />가 숫자 식인 경우 이 인수는 1에서 컬렉션의 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 속성 값 사이의 숫자여야 합니다. <paramref name="Before" />가 <see langword="String" /> 식인 경우 이 인수는 참조되는 요소가 컬렉션에 추가될 때 지정한 키 문자열과 일치해야 합니다. <paramref name="Before" />와 <paramref name="After" />를 둘 다 지정할 수는 없습니다.</param>
      <param name="After" vsli:raw="Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection after the element identified by the &lt;paramref name=&quot;After&quot; /&gt; argument. If &lt;paramref name=&quot;After&quot; /&gt; is a numeric expression, it must be a number from 1 through the value of the collection's &lt;see langword=&quot;Count&quot; /&gt; property. If &lt;paramref name=&quot;After&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, it must correspond to the key string specified when the element referred to was added to the collection. You cannot specify both &lt;paramref name=&quot;Before&quot; /&gt; and &lt;paramref name=&quot;After&quot; /&gt;.">선택 사항입니다. 컬렉션에서 상대적 위치를 지정하는 식입니다. 컬렉션에서 추가되는 요소는 <paramref name="After" /> 인수에 의해 식별되는 요소 뒤에 옵니다. <paramref name="After" />가 숫자 식인 경우 이 인수는 1에서 컬렉션의 <see langword="Count" /> 속성 값 사이의 숫자여야 합니다. <paramref name="After" />가 <see langword="String" /> 식인 경우 이 인수는 참조되는 요소가 컬렉션에 추가될 때 지정한 키 문자열과 일치해야 합니다. <paramref name="Before" />와 <paramref name="After" />를 둘 다 지정할 수는 없습니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary vsli:raw="Deletes all elements of a Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object.">Visual Basic <see langword="Collection" /> 개체의 모든 요소를 삭제합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object contains an element with a specific key.">Visual Basic <see langword="Collection" /> 개체에 특정 키를 가진 요소가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="Key" vsli:raw="Required. A &lt;see langword=&quot;String&quot; /&gt; expression that specifies the key for which to search the elements of the collection.">필수 요소. 컬렉션 요소를 검색할 키를 지정하는 <see langword="String" /> 식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object contains an element with a specific key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Visual Basic <see langword="Collection" /> 개체에 특정 키가 있는 요소가 포함되어 있으면 <see langword="true" />이고. 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">컬렉션을 반복하는 데 사용할 수 있는 열거자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary vsli:raw="Removes an element from a &lt;see langword=&quot;Collection&quot; /&gt; object.">
        <see langword="Collection" /> 개체에서 요소를 제거합니다.</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property.">컬렉션 요소의 위치를 지정하는 숫자 식입니다. <paramref name="Index" />는 1에서 컬렉션의 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 속성 값 사이의 숫자여야 합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary vsli:raw="Removes an element from a &lt;see langword=&quot;Collection&quot; /&gt; object.">
        <see langword="Collection" /> 개체에서 요소를 제거합니다.</summary>
      <param name="Key" vsli:raw="A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. &lt;paramref name=&quot;Key&quot; /&gt; must correspond to the &lt;paramref name=&quot;Key&quot; /&gt; argument specified when the element was added to the collection.">위치 인덱스 대신 컬렉션의 요소에 액세스하는 데 사용할 수 있는 키 문자열을 지정하는 고유 <see langword="String" /> 식입니다. <paramref name="Key" />는 요소가 컬렉션에 추가될 때 지정한 <paramref name="Key" /> 인수와 일치해야 합니다.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary vsli:raw="Gets the number of elements in a collection.">컬렉션에 있는 요소 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of elements in a collection.">컬렉션에 있는 요소 수입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">위치나 키를 기준으로 <see langword="Collection" /> 개체의 특정 요소를 가져옵니다.</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. Or (B) An &lt;see langword=&quot;Object&quot; /&gt; expression that specifies the position or key string of an element of the collection.">컬렉션 요소의 위치를 지정하는 숫자 식입니다. <paramref name="Index" />는 1에서 컬렉션의 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 속성 값 사이의 숫자여야 합니다. 또는 (B) 컬렉션 요소의 키 문자열이나 위치를 지정하는 <see langword="Object" /> 식입니다.</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">
        <see langword="Collection" />위치나 키를 기준으로 하는 개체의 특정 요소입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">위치나 키를 기준으로 <see langword="Collection" /> 개체의 특정 요소를 가져옵니다.</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. Or (B) An &lt;see langword=&quot;Object&quot; /&gt; expression that specifies the position or key string of an element of the collection.">컬렉션 요소의 위치를 지정하는 숫자 식입니다. <paramref name="Index" />는 1에서 컬렉션의 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 속성 값 사이의 숫자여야 합니다. 또는 (B) 컬렉션 요소의 키 문자열이나 위치를 지정하는 <see langword="Object" /> 식입니다.</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">
        <see langword="Collection" />위치나 키를 기준으로 하는 개체의 특정 요소입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">위치나 키를 기준으로 <see langword="Collection" /> 개체의 특정 요소를 가져옵니다.</summary>
      <param name="Key" vsli:raw="A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. &lt;paramref name=&quot;Key&quot; /&gt; must correspond to the &lt;paramref name=&quot;Key&quot; /&gt; argument specified when the element was added to the collection.">위치 인덱스 대신 컬렉션의 요소에 액세스하는 데 사용할 수 있는 키 문자열을 지정하는 고유 <see langword="String" /> 식입니다. <paramref name="Key" />는 요소가 컬렉션에 추가될 때 지정한 <paramref name="Key" /> 인수와 일치해야 합니다.</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">
        <see langword="Collection" />위치나 키를 기준으로 하는 개체의 특정 요소입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary vsli:raw="The &lt;see langword=&quot;ComClassAttribute&quot; /&gt; attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object.">
        <see langword="ComClassAttribute" /> 특성은 메타데이터를 추가하도록 컴파일러에 지시하여 클래스를 COM 개체로 노출할 수 있도록 합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">
        <see langword="ComClassAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">
        <see langword="ComClassAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">클래스를 고유하게 식별하는 데 사용되는 <see langword="ClassID" /> 속성 값을 초기화합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">
        <see langword="ComClassAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">클래스를 고유하게 식별하는 데 사용되는 <see langword="ClassID" /> 속성 값을 초기화합니다.</param>
      <param name="_InterfaceID" vsli:raw="Initializes the value of the &lt;see langword=&quot;InterfaceID&quot; /&gt; property that is used to uniquely identify an interface.">인터페이스를 고유하게 식별하는 데 사용되는 <see langword="InterfaceID" /> 속성 값을 초기화합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">
        <see langword="ComClassAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">클래스를 고유하게 식별하는 데 사용되는 <see langword="ClassID" /> 속성 값을 초기화합니다.</param>
      <param name="_InterfaceID" vsli:raw="Initializes the value of the &lt;see langword=&quot;InterfaceID&quot; /&gt; property that is used to uniquely identify an interface.">인터페이스를 고유하게 식별하는 데 사용되는 <see langword="InterfaceID" /> 속성 값을 초기화합니다.</param>
      <param name="_EventId" vsli:raw="Initializes the value of the &lt;see langword=&quot;EventID&quot; /&gt; property that is used to uniquely identify an event.">이벤트를 고유하게 식별하는 데 사용되는 <see langword="EventID" /> 속성 값을 초기화합니다.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary vsli:raw="Gets a class ID used to uniquely identify a class.">클래스를 고유하게 식별하는 데 사용되는 클래스 ID를 가져옵니다.</summary>
      <returns vsli:raw="Read-only. A string that can be used by the compiler to uniquely identify the class when a COM object is created.">읽기 전용입니다. COM 개체를 만들 때 컴파일러에서 클래스를 고유하게 식별하는 데 사용할 수 있는 문자열입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary vsli:raw="Gets an event ID used to uniquely identify an event.">이벤트를 고유하게 식별하는 데 사용되는 이벤트 ID를 가져옵니다.</summary>
      <returns vsli:raw="Read only. A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.">읽기 전용입니다. COM 개체를 만들 때 컴파일러에서 해당 클래스의 이벤트를 고유하게 식별하는 데 사용할 수 있는 문자열입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary vsli:raw="Gets an interface ID used to uniquely identify an interface.">인터페이스를 고유하게 식별하는 데 사용되는 인터페이스 ID를 가져옵니다.</summary>
      <returns vsli:raw="Read-only. A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.">읽기 전용입니다. COM 개체를 만들 때 컴파일러에서 해당 클래스의 인터페이스를 고유하게 식별하는 데 사용할 수 있는 문자열입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary vsli:raw="Indicates that the COM interface name shadows another member of the class or base class.">COM 인터페이스 이름이 해당 클래스나 기본 클래스의 다른 멤버를 숨긴다는 것을 나타냅니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that indicates that the COM interface name shadows another member of the class or base class.">COM 인터페이스 이름이 해당 클래스나 기본 클래스의 다른 멤버를 숨긴다는 것을 나타내는 <see langword="Boolean" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary vsli:raw="Indicates how to compare strings when calling comparison functions.">비교 함수를 호출할 때 문자열이 비교되는 방법을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary vsli:raw="Performs a binary comparison. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbBinaryCompare&quot; /&gt;.">이진 비교를 수행합니다. 이 멤버는 Visual Basic 상수 <see langword="vbBinaryCompare" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary vsli:raw="Performs a textual comparison. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTextCompare&quot; /&gt;.">텍스트 비교를 수행합니다. 이 멤버는 Visual Basic 상수 <see langword="vbTextCompare" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to the specified object.">지정된 개체에 해당하는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Boolean&quot; /&gt; value.">필수 요소. <see langword="Boolean" /> 값으로 변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Boolean" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to the specified string.">지정된 문자열에 해당하는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Boolean&quot; /&gt; value.">필수 요소. <see langword="Boolean" /> 값으로 변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Boolean" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to the specified object.">지정된 개체에 해당하는 <see langword="Byte" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Byte&quot; /&gt; value.">필수 요소. <see langword="Byte" /> 값으로 변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Byte" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to the specified string.">지정된 문자열에 해당하는 <see langword="Byte" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Byte&quot; /&gt; value.">필수 요소. <see langword="Byte" /> 값으로 변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Byte" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to the specified object.">지정된 개체에 해당하는 <see langword="CharArray" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;CharArray&quot; /&gt; value.">필수 요소. <see langword="CharArray" /> 값으로 변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="CharArray" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to the specified string.">지정된 문자열에 해당하는 <see langword="CharArray" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;CharArray&quot; /&gt; value.">필수 요소. <see langword="CharArray" /> 값으로 변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="CharArray" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to the specified object.">지정된 개체에 해당하는 <see langword="Char" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Char&quot; /&gt; value.">필수 요소. <see langword="Char" /> 값으로 변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Char" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to the specified string.">지정된 문자열에 해당하는 <see langword="Char" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Char&quot; /&gt; value.">필수 요소. <see langword="Char" /> 값으로 변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Char" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary vsli:raw="Provides methods that perform various type conversions.">다양한 유형 변환을 수행하는 메서드를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">개체를 지정된 형식으로 변환합니다.</summary>
      <param name="Expression" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">개체를 변환할 대상 형식입니다.</param>
      <returns vsli:raw="An object of the specified target type.">지정된 대상 형식의 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">개체를 지정된 형식으로 변환합니다.</summary>
      <param name="Expression" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">개체를 변환할 대상 형식입니다.</param>
      <returns vsli:raw="An object of the specified target type.">지정된 대상 형식의 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; value to a string, given a byte count.">지정된 바이트 수를 사용하여 <see cref="T:System.Char" /> 값을 문자열로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value to convert.">변환할 <see langword="Char" /> 값입니다.</param>
      <param name="Count" vsli:raw="The byte count of the &lt;see langword=&quot;Char&quot; /&gt; value.">
        <see langword="Char" /> 값의 바이트 수입니다.</param>
      <returns vsli:raw="The string representation of the specified value.">지정된 값의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; array to a string.">
        <see cref="T:System.Char" /> 배열을 문자열로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; array to convert.">변환할 <see langword="Char" /> 배열입니다.</param>
      <returns vsli:raw="The string representation of the specified array.">지정된 배열의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Converts a subset of a &lt;see cref=&quot;T:System.Char&quot; /&gt; array to a string.">
        <see cref="T:System.Char" /> 배열의 하위 집합을 문자열로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; array to convert.">변환할 <see langword="Char" /> 배열입니다.</param>
      <param name="StartIndex" vsli:raw="Zero-based index of the start position.">시작 위치의 인덱스(0부터 시작)입니다.</param>
      <param name="Length" vsli:raw="Length of the subset in bytes.">하위 집합의 길이(바이트)입니다.</param>
      <returns vsli:raw="The string representation of the specified array from the start position to the specified length.">시작 위치에서 지정된 길이까지의 주어진 배열에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">개체를 <see cref="T:System.Boolean" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value. Returns &lt;see langword=&quot;False&quot; /&gt; if the object is null; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" /> 값입니다. 개체가 null이면 <see langword="False" />이고, 그렇지 않으면 <see langword="True" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">문자열을 <see cref="T:System.Boolean" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value. Returns &lt;see langword=&quot;False&quot; /&gt; if the string is null; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" /> 값입니다. 문자열이 null이면 <see langword="False" />이고, 그렇지 않으면 <see langword="True" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">개체를 <see cref="T:System.Byte" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value of the object.">개체의 <see langword="Byte" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">문자열을 <see cref="T:System.Byte" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value of the string.">문자열의 <see langword="Byte" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">개체를 <see cref="T:System.Char" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value of the object.">개체의 <see langword="Char" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">문자열을 <see cref="T:System.Char" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value of the string.">문자열의 <see langword="Char" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary vsli:raw="Converts an object to a one-dimensional &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">개체를 1차원 <see cref="T:System.Char" /> 배열로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="A one-dimensional &lt;see langword=&quot;Char&quot; /&gt; array.">1차원 <see langword="Char" /> 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary vsli:raw="Converts a string to a one-dimensional &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">문자열을 1차원 <see cref="T:System.Char" /> 배열로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="A one-dimensional &lt;see langword=&quot;Char&quot; /&gt; array.">1차원 <see langword="Char" /> 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">개체를 <see cref="T:System.DateTime" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value of the object.">개체의 <see langword="DateTime" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">문자열을 <see cref="T:System.DateTime" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value of the string.">문자열의 <see langword="DateTime" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">
        <see cref="T:System.Boolean" /> 값을 <see cref="T:System.Decimal" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="A Boolean value to convert.">변환할 부울 값입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the Boolean value.">부울 값의 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">개체를 <see cref="T:System.Decimal" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the object.">개체의 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">문자열을 <see cref="T:System.Decimal" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the string.">문자열의 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">개체를 <see cref="T:System.Double" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value of the object.">개체의 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">문자열을 <see cref="T:System.Double" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value of the string.">문자열의 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary vsli:raw="Converts an object to a generic type &lt;paramref name=&quot;T&quot; /&gt;.">개체를 제네릭 형식 <paramref name="T" />로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <typeparam name="T" vsli:raw="The type to convert &lt;paramref name=&quot;Value&quot; /&gt; to.">
        <paramref name="Value" />를 변환할 형식입니다.</typeparam>
      <returns vsli:raw="A structure or object of generic type &lt;paramref name=&quot;T&quot; /&gt;.">제네릭 형식 <paramref name="T" />의 개체 또는 구조체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary vsli:raw="Converts an object to an integer value.">개체를 정수 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value of the object.">개체의 <see langword="int" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary vsli:raw="Converts a string to an integer value.">문자열을 정수 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value of the string.">문자열의 <see langword="int" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Long&quot; /&gt; value.">개체를 <see langword="Long" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value of the object.">개체의 <see langword="Long" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Long&quot; /&gt; value.">문자열을 <see langword="Long" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value of the string.">문자열의 <see langword="Long" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary vsli:raw="Converts an object to an &lt;see cref=&quot;T:System.SByte&quot; /&gt; value.">개체를 <see cref="T:System.SByte" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;SByte&quot; /&gt; value of the object.">개체의 <see langword="SByte" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.SByte&quot; /&gt; value.">문자열을 <see cref="T:System.SByte" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;SByte&quot; /&gt; value of the string.">문자열의 <see langword="SByte" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Short&quot; /&gt; value.">개체를 <see langword="Short" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value of the object.">개체의 <see langword="Short" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Short&quot; /&gt; value.">문자열을 <see langword="Short" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value of the string.">문자열의 <see langword="Short" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">개체를 <see cref="T:System.Single" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value of the object.">개체의 <see cref="T:System.Single" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">
        <see cref="T:System.String" />을 <see cref="T:System.Single" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value of the string.">문자열의 <see cref="T:System.Single" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Boolean" /> 값을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value to convert.">변환할 <see langword="Boolean" /> 값입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Boolean&quot; /&gt; value.">
        <see langword="String" /> 값의 <see langword="Boolean" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Byte" /> 값을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value to convert.">변환할 <see langword="Byte" /> 값입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Byte&quot; /&gt; value.">
        <see langword="String" /> 값의 <see langword="Byte" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Char" /> 값을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value to convert.">변환할 <see langword="Char" /> 값입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Char&quot; /&gt; value.">
        <see langword="String" /> 값의 <see langword="Char" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see cref="T:System.DateTime" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value to convert.">변환할 <see langword="DateTime" /> 값입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;DateTime&quot; /&gt; value.">
        <see langword="String" /> 값의 <see langword="DateTime" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see cref="T:System.Decimal" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value to convert.">변환할 <see langword="Decimal" /> 값입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Decimal&quot; /&gt; value.">
        <see langword="String" /> 값의 <see langword="Decimal" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">지정된 숫자 서식을 사용하여 <see cref="T:System.Decimal" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; value to convert.">변환할 <see langword="decimal" /> 값입니다.</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">
        <see cref="T:System.Globalization.NumberFormatInfo" />에 따라 사용할 숫자 서식입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Decimal&quot; /&gt; value.">
        <see langword="String" /> 값의 <see langword="Decimal" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see cref="T:System.Double" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to convert.">변환할 <see cref="T:System.Double" /> 값입니다.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">
        <see cref="T:System.Double" /> 값의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">지정된 숫자 서식을 사용하여 <see cref="T:System.Double" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to convert.">변환할 <see cref="T:System.Double" /> 값입니다.</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">
        <see cref="T:System.Globalization.NumberFormatInfo" />에 따라 사용할 숫자 서식입니다.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">
        <see cref="T:System.Double" /> 값의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Short&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see langword="Short" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value to convert.">변환할 <see langword="Short" /> 값입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Short&quot; /&gt; value.">
        <see langword="String" /> 값의 <see langword="Short" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary vsli:raw="Converts an integer value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">정수 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value to convert.">변환할 <see langword="int" /> 값입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;int&quot; /&gt; value.">
        <see langword="String" /> 값의 <see langword="int" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Long&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see langword="Long" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value to convert.">변환할 <see langword="Long" /> 값입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Long&quot; /&gt; value.">
        <see langword="String" /> 값의 <see langword="Long" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">개체를 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the object.">개체의 <see langword="String" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Single&quot; /&gt; value (a single-precision floating point number) to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see cref="T:System.Single" /> 값(단정밀도 부동 소수점 숫자)을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value to convert.">변환할 <see cref="T:System.Single" /> 값입니다.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">
        <see cref="T:System.Single" /> 값의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Single&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">지정된 숫자 서식을 사용하여 <see cref="T:System.Single" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value to convert.">변환할 <see cref="T:System.Single" /> 값입니다.</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">
        <see cref="T:System.Globalization.NumberFormatInfo" />에 따라 사용할 숫자 서식입니다.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">
        <see cref="T:System.Single" /> 값의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;uint&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see langword="uint" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value to convert.">변환할 <see langword="Uint" /> 값입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Uint&quot; /&gt; value.">
        <see langword="String" /> 값의 <see langword="Uint" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Ulong&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see langword="Ulong" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value to convert.">변환할 <see langword="Ulong" /> 값입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Ulong&quot; /&gt; value.">
        <see langword="String" /> 값의 <see langword="Ulong" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Uint&quot; /&gt; value.">개체를 <see langword="Uint" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value of the object.">개체의 <see langword="Uint" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Uint&quot; /&gt; value.">문자열을 <see langword="Uint" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value of the string.">문자열의 <see langword="Uint" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Ulong&quot; /&gt; value.">개체를 <see langword="Ulong" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value of the object.">개체의 <see langword="Ulong" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Ulong&quot; /&gt; value.">문자열을 <see langword="Ulong" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value of the string.">문자열의 <see langword="Ulong" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Ushort&quot; /&gt; value.">개체를 <see langword="Ushort" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ushort&quot; /&gt; value of the object.">개체의 <see langword="Ushort" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Ushort&quot; /&gt; value.">문자열을 <see langword="Ushort" /> 값으로 변환합니다.</summary>
      <param name="Value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ushort&quot; /&gt; value of the string.">문자열의 <see langword="Ushort" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified object.">지정된 개체에 해당하는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">필수 요소. <see langword="Date" /> 값으로 변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified string.">지정된 문자열에 해당하는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">필수 요소. <see langword="Date" /> 값으로 변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified string and culture information.">지정된 문자열 및 문화권 정보에 해당하는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">필수 요소. <see langword="Date" /> 값으로 변환할 문자열입니다.</param>
      <param name="culture" vsli:raw="Required. A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object that defines how date values are formatted and displayed, depending on the culture.">필수 요소. 문화권에 따라 날짜 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Boolean&quot; /&gt; value.">지정된 <see langword="Decimal" /> 값에 해당하는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt; value to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">필수 요소. <see langword="Boolean" /> 값으로 변환할 <see langword="Decimal" /> 값입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified object.">지정된 개체에 해당하는 <see langword="Decimal" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">필수 요소. <see langword="Decimal" /> 값으로 변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified object and number format information.">지정된 개체 및 숫자 형식 정보에 해당하는 <see langword="Decimal" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">필수 요소. <see langword="Decimal" /> 값으로 변환할 개체입니다.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string.">지정된 문자열에 해당하는 <see langword="Decimal" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">필수 요소. <see langword="Decimal" /> 값으로 변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string and number format information.">지정된 문자열 및 숫자 형식 정보에 해당하는 <see langword="Decimal" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">필수 요소. <see langword="Decimal" /> 값으로 변환할 문자열입니다.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string and number format information.">지정된 문자열 및 숫자 형식 정보에 해당하는 <see langword="Decimal" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">필수 요소. <see langword="Decimal" /> 값으로 변환할 문자열입니다.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary vsli:raw="When applied to a class, the compiler implicitly calls a component-initializing method from the default synthetic constructor.">클래스에 적용되는 경우 컴파일러가 기본 합성 생성자에서 구성 요소 초기화 메서드를 암시적으로 호출합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute&quot; /&gt; attribute.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" /> 특성의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified object.">지정된 개체에 해당하는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified object.">지정된 개체에 해당하는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 개체입니다.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string.">지정된 문자열에 해당하는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string and number format information.">지정된 문자열 및 숫자 형식 정보에 해당하는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 문자열입니다.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string.">지정된 문자열에 해당하는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string and number format information.">지정된 문자열 및 숫자 형식 정보에 해당하는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 문자열입니다.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary vsli:raw="The Visual Basic compiler uses this class during static local initialization; it is not meant to be called directly from your code. An exception of this type is thrown if a static local variable fails to initialize.">Visual Basic 컴파일러는 정적 지역 초기화 중 이 클래스를 사용합니다. 이 클래스는 코드에서 직접 호출할 수 없습니다. 정적 지역 변수를 초기화하지 못하면 이 형식의 예외가 throw됩니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to the specified object.">지정된 개체에 해당하는 <see langword="Integer" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to an &lt;see langword=&quot;Integer&quot; /&gt; value.">필수 요소. <see langword="Integer" /> 값으로 변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Integer" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to the specified string.">지정된 문자열에 해당하는 <see langword="Integer" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to an &lt;see langword=&quot;Integer&quot; /&gt; value.">필수 요소. <see langword="Integer" /> 값으로 변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Integer" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary vsli:raw="This class has been deprecated since Visual Basic 2005.">이 클래스는 Visual Basic 2005부터 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary vsli:raw="Performs a late-bound call to an object method.">개체 메서드를 런타임에 바인딩하여 호출합니다.</summary>
      <param name="o" vsli:raw="The object to call a method on.">메서드를 호출할 개체입니다.</param>
      <param name="objType" vsli:raw="The type of the object.">개체의 형식입니다.</param>
      <param name="name" vsli:raw="The method name of &lt;paramref name=&quot;o&quot; /&gt; to call.">호출할 <paramref name="o" />의 메서드 이름입니다.</param>
      <param name="args" vsli:raw="An array of parameter values to pass to the method.">메서드에 전달할 매개 변수 값의 배열입니다.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">
        <paramref name="args" /> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values, where &lt;see langword=&quot;True&quot; /&gt; indicates that the associated parameter is passed &lt;see langword=&quot;ByRef&quot; /&gt;.">
        <see langword="Boolean" /> 값의 배열이며, <see langword="True" />이면 관련 매개 변수가 <see langword="ByRef" />로 전달됩니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary vsli:raw="Returns a late-bound value from an object.">개체의 런타임에 바인딩된 값을 반환합니다.</summary>
      <param name="o" vsli:raw="The object to return the value from.">값을 반환할 개체입니다.</param>
      <param name="objType" vsli:raw="The type of the object.">개체의 형식입니다.</param>
      <param name="name" vsli:raw="The member name of &lt;paramref name=&quot;o&quot; /&gt; to retrieve a value from.">값을 검색할 <paramref name="o" />의 멤버 이름입니다.</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">
        <paramref name="o" />가 일차원 또는 다차원 배열인 경우 <paramref name="o" />의 위치를 지정하는 하나 이상의 인덱스 값 배열이거나 개체 <paramref name="o" />에 전달할 인수 값 배열입니다.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">
        <paramref name="args" /> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values, where &lt;see langword=&quot;True&quot; /&gt; indicates that the associated parameter is passed &lt;see langword=&quot;ByRef&quot; /&gt;.">
        <see langword="Boolean" /> 값의 배열이며, <see langword="True" />이면 관련 매개 변수가 <see langword="ByRef" />로 전달됩니다.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;o&quot; /&gt; is an array, the value from &lt;paramref name=&quot;o&quot; /&gt; at the location specified by &lt;paramref name=&quot;args&quot; /&gt;. If &lt;paramref name=&quot;o&quot; /&gt; is an object, the return value of &lt;paramref name=&quot;o&quot; /&gt; invoked by using the named parameters in &lt;paramref name=&quot;paramnames&quot; /&gt; and their associated values in &lt;paramref name=&quot;args&quot; /&gt;.">
        <paramref name="o" />가 배열인 경우 <paramref name="o" />에서 <paramref name="args" />에 지정된 위치의 값입니다. <paramref name="o" />가 개체인 경우 <paramref name="o" />의 명명된 매개 변수와 <paramref name="paramnames" />의 해당 관련 값을 사용하여 호출한 <paramref name="args" />의 반환 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Returns a late-bound value from an object, using the specified index or parameters.">지정된 인덱스 또는 매개 변수를 사용하여 개체의 런타임에 바인딩된 값을 반환합니다.</summary>
      <param name="o" vsli:raw="The object to return the value from.">값을 반환할 개체입니다.</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">
        <paramref name="o" />가 일차원 또는 다차원 배열인 경우 <paramref name="o" />의 위치를 지정하는 하나 이상의 인덱스 값 배열이거나 개체 <paramref name="o" />에 전달할 인수 값 배열입니다.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">
        <paramref name="args" /> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;o&quot; /&gt; is an array, the value from &lt;paramref name=&quot;o&quot; /&gt; at the location specified by &lt;paramref name=&quot;args&quot; /&gt;. If &lt;paramref name=&quot;o&quot; /&gt; is an object, the return value of &lt;paramref name=&quot;o&quot; /&gt; invoked by using the named parameters in &lt;paramref name=&quot;paramnames&quot; /&gt; and their associated values in &lt;paramref name=&quot;args&quot; /&gt;.">
        <paramref name="o" />가 배열인 경우 <paramref name="o" />에서 <paramref name="args" />에 지정된 위치의 값입니다. <paramref name="o" />가 개체인 경우 <paramref name="o" />의 명명된 매개 변수와 <paramref name="paramnames" />의 해당 관련 값을 사용하여 호출한 <paramref name="args" />의 반환 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Sets a late-bound value of an object, using the specified parameters.">지정된 매개 변수를 사용하여 개체의 런타임에 바인딩된 값을 설정합니다.</summary>
      <param name="o" vsli:raw="The object to set the value for.">값을 설정할 개체입니다.</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">
        <paramref name="o" />가 일차원 또는 다차원 배열인 경우 <paramref name="o" />의 위치를 지정하는 하나 이상의 인덱스 값 배열이거나 개체 <paramref name="o" />에 전달할 인수 값 배열입니다.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">
        <paramref name="args" /> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Sets a late-bound value of an object, using the specified parameters.">지정된 매개 변수를 사용하여 개체의 런타임에 바인딩된 값을 설정합니다.</summary>
      <param name="o" vsli:raw="The object to set the value for.">값을 설정할 개체입니다.</param>
      <param name="args" vsli:raw="An array of one or more parameter values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">
        <paramref name="o" /> 개체에 전달할 매개 변수 값이 하나 이상 들어 있는 배열입니다.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">
        <paramref name="args" /> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</param>
      <param name="OptimisticSet" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to suppress the exception thrown when the set member is not found.">
        <see langword="True" />로 지정하면 설정 멤버가 없는 경우 예외가 throw되지 않습니다.</param>
      <param name="RValueBase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to identify &lt;paramref name=&quot;o&quot; /&gt; as the result of a late-bound expression.">
        <see langword="True" />로 지정하면 <paramref name="o" />를 런타임에 바인딩된 식의 결과로 식별합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary vsli:raw="Sets a late-bound value of a member of an object, using the specified parameters.">지정된 매개 변수를 사용하여 개체 멤버의 런타임에 바인딩된 값을 설정합니다.</summary>
      <param name="o" vsli:raw="The object to set the member value for.">멤버 값을 설정할 개체입니다.</param>
      <param name="objType" vsli:raw="The type of the object.">개체의 형식입니다.</param>
      <param name="name" vsli:raw="The member name to set.">설정할 멤버 이름입니다.</param>
      <param name="args" vsli:raw="An array of one or parameter values to pass to the member of &lt;paramref name=&quot;o&quot; /&gt;.">
        <paramref name="o" />의 멤버에 전달할 매개 변수 값이 하나 이상 들어 있는 배열입니다.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">
        <paramref name="args" /> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Sets a late-bound value of a member of an object, using the specified parameters.">지정된 매개 변수를 사용하여 개체 멤버의 런타임에 바인딩된 값을 설정합니다.</summary>
      <param name="o" vsli:raw="The object to set the member value for.">멤버 값을 설정할 개체입니다.</param>
      <param name="objType" vsli:raw="The type of the object.">개체의 형식입니다.</param>
      <param name="name" vsli:raw="The member name to set.">설정할 멤버 이름입니다.</param>
      <param name="args" vsli:raw="An array of one or more parameter values to pass to the member of &lt;paramref name=&quot;o&quot; /&gt;.">
        <paramref name="o" />의 멤버에 전달할 매개 변수 값이 하나 이상 들어 있는 배열입니다.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">
        <paramref name="args" /> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</param>
      <param name="OptimisticSet" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to suppress the exception thrown when the set member is not found.">
        <see langword="True" />로 지정하면 설정 멤버가 없는 경우 예외가 throw되지 않습니다.</param>
      <param name="RValueBase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to identify &lt;paramref name=&quot;o&quot; /&gt; as the result of a late-bound expression.">
        <see langword="True" />로 지정하면 <paramref name="o" />를 런타임에 바인딩된 식의 결과로 식별합니다.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary vsli:raw="This class provides helpers that the Visual Basic compiler uses to do the work for the Like Operator. It is not meant to be called directly from your code.">이 클래스는 Visual Basic 컴파일러에서 Like Operator에 대한 작업을 수행하는 데 사용하는 도우미를 제공합니다. 이 클래스는 코드에서 직접 호출할 수 없습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs binary or text string comparison given two objects. This helper method is not meant to be called directly from your code.">지정한 두 개체에 대한 이진 또는 텍스트 문자열 비교를 수행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Source" vsli:raw="The string to compare.">비교할 문자열입니다.</param>
      <param name="Pattern" vsli:raw="The string against which &lt;paramref name=&quot;Source&quot; /&gt; is being compared.">
        <paramref name="Source" />와 비교할 문자열입니다.</param>
      <param name="CompareOption" vsli:raw="A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; enumeration specifying whether or not to use text comparison. If &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Text&quot; /&gt;, this method uses text comparison; if &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Binary&quot; /&gt;, this method uses binary comparison.">텍스트 비교를 사용할지 여부를 지정하는 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 열거형입니다. <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />이면 이 메서드는 텍스트 비교를 사용하고, <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />이면 이 메서드는 이진 비교를 사용합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the strings match; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">문자열이 일치하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs binary or text string comparison given two strings. This helper method is not meant to be called directly from your code.">지정한 두 문자열에 대한 이진 또는 텍스트 문자열 비교를 수행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Source" vsli:raw="The string to compare.">비교할 문자열입니다.</param>
      <param name="Pattern" vsli:raw="The string against which &lt;paramref name=&quot;Source&quot; /&gt; is being compared.">
        <paramref name="Source" />와 비교할 문자열입니다.</param>
      <param name="CompareOption" vsli:raw="A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; enumeration specifying whether or not to use text comparison. If &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Text&quot; /&gt;, this method uses text comparison; if &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Binary&quot; /&gt;, this method uses binary comparison.">텍스트 비교를 사용할지 여부를 지정하는 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 열거형입니다. <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />이면 이 메서드는 텍스트 비교를 사용하고, <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />이면 이 메서드는 이진 비교를 사용합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the strings match; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">문자열이 일치하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to the specified object.">지정된 개체에 해당하는 <see langword="Long" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Long&quot; /&gt; value.">필수 요소. <see langword="Long" /> 값으로 변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Long" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to the specified string.">지정된 문자열에 해당하는 <see langword="Long" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Long&quot; /&gt; value.">필수 요소. <see langword="Long" /> 값으로 변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Long" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary vsli:raw="This class provides helpers that the Visual Basic compiler uses for late binding calls; it is not meant to be called directly from your code.">이 클래스는 Visual Basic 컴파일러에서 런타임에 바인딩하는 호출에 사용하는 도우미를 제공하며, 코드에서 직접 호출할 수 없습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 메서드 또는 함수 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
      <param name="IgnoreReturn" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the return value can be ignored.">반환 값을 무시할 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값입니다.</param>
      <returns vsli:raw="An instance of the call object.">호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 속성 가져오기 또는 필드 액세스 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
      <returns vsli:raw="An instance of the call object.">호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">설정 작업이 작동할지 여부를 확인하는 데 사용되는 <see langword="Boolean" /> 값입니다. 속성 또는 필드에 중간 값이 설정되어 있다고 생각되면 <see langword="True" />로 설정하고, 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">런타임 참조의 기본 참조가 <see langword="Boolean" />인 경우를 지정하는 <see langword="RValue" /> 값입니다. 런타임 참조의 기본 참조가 <see langword="True" />이면 <see langword="RValue" />로 설정합니다. 이렇게 하면 값 형식의 <see langword="RValues" /> 필드에 대한 런타임 할당의 런타임 예외를 생성할 수 있습니다. 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 기본 속성 또는 필드 가져오기나 기본 메서드 또는 함수 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method. If &lt;paramref name=&quot;Instance&quot; /&gt; is of type &lt;see cref=&quot;T:System.Dynamic.IDynamicMetaObjectProvider&quot; /&gt;, then bind using the Dynamic Language Runtime; otherwise perform standard late-binding.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다. <paramref name="Instance" />가 <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" /> 형식이면 동적 언어 런타임을 사용하여 바인딩하고, 그렇지 않으면 표준 런타임에 바인딩을 수행합니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">오류 발생 시 예외를 throw할지 여부를 지정하는 데 사용되는 <see langword="Boolean" /> 값입니다. 예외를 throw하려면 <see langword="True" />로 설정합니다. 오류 발생 시 <see langword="False" />을 반환하려면 <see langword="Nothing" />로 설정합니다.</param>
      <returns vsli:raw="An instance of the call object.">호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 기본 속성 또는 필드 가져오기나 기본 메서드 또는 함수 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">오류 발생 시 예외를 throw할지 여부를 지정하는 데 사용되는 <see langword="Boolean" /> 값입니다. 예외를 throw하려면 <see langword="True" />로 설정합니다. 오류 발생 시 <see langword="False" />을 반환하려면 <see langword="Nothing" />로 설정합니다.</param>
      <returns vsli:raw="An instance of the call object.">호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">설정 작업이 작동할지 여부를 확인하는 데 사용되는 <see langword="Boolean" /> 값입니다. 속성 또는 필드에 중간 값이 설정되어 있다고 생각되면 <see langword="True" />로 설정하고, 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">런타임 참조의 기본 참조가 <see langword="Boolean" />인 경우를 지정하는 <see langword="RValue" /> 값입니다. 런타임 참조의 기본 참조가 <see langword="True" />이면 <see langword="RValue" />로 설정합니다. 이렇게 하면 값 형식의 <see langword="RValues" /> 필드에 대한 런타임 할당의 런타임 예외를 생성할 수 있습니다. 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 메서드 또는 함수 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Type" vsli:raw="The type of the call object.">호출 개체의 형식입니다.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">인수 형식의 배열로, 제네릭 호출에서 인수 형식을 전달하는 데만 사용됩니다.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;see langword=&quot;ByRef&quot; /&gt; parameters. Each &lt;see langword=&quot;True&quot; /&gt; value indicates that the arguments matched and should be copied out after the call to &lt;see langword=&quot;LateCall&quot; /&gt; is complete.">런타임 바인더에서 <see langword="Boolean" /> 매개 변수와 일치하는 인수를 호출 사이트에 전달하는 데 사용하는 <see langword="ByRef" /> 값의 배열입니다. 각각의 <see langword="True" /> 값은 인수가 일치하며 <see langword="LateCall" /> 호출이 완료된 후 복사되어야 함을 나타냅니다.</param>
      <param name="IgnoreReturn" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the return value can be ignored.">반환 값을 무시할 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값입니다.</param>
      <returns vsli:raw="An instance of the call object.">호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound call to the default method or function. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 기본 메서드 또는 함수 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">오류 발생 시 예외를 throw할지 여부를 지정하는 데 사용되는 <see langword="Boolean" /> 값입니다. 예외를 throw하려면 <see langword="True" />로 설정합니다. 오류 발생 시 <see langword="False" />을 반환하려면 <see langword="Nothing" />로 설정합니다.</param>
      <returns vsli:raw="An instance of the call object.">호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 속성 가져오기 또는 필드 액세스 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Type" vsli:raw="The type of the call object.">호출 개체의 형식입니다.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">인수 형식의 배열로, 제네릭 호출에서 인수 형식을 전달하는 데만 사용됩니다.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;see langword=&quot;ByRef&quot; /&gt; parameters. Each &lt;see langword=&quot;True&quot; /&gt; value indicates that the arguments matched and should be copied out after the call to &lt;see langword=&quot;LateCall&quot; /&gt; is complete.">런타임 바인더에서 <see langword="Boolean" /> 매개 변수와 일치하는 인수를 호출 사이트에 전달하는 데 사용하는 <see langword="ByRef" /> 값의 배열입니다. 각각의 <see langword="True" /> 값은 인수가 일치하며 <see langword="LateCall" /> 호출이 완료된 후 복사되어야 함을 나타냅니다.</param>
      <returns vsli:raw="An instance of the call object.">호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 기본 속성 또는 필드 가져오기를 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">오류 발생 시 예외를 throw할지 여부를 지정하는 데 사용되는 <see langword="Boolean" /> 값입니다. 예외를 throw하려면 <see langword="True" />로 설정합니다. 오류 발생 시 <see langword="False" />을 반환하려면 <see langword="Nothing" />로 설정합니다.</param>
      <returns vsli:raw="An instance of the call object.">호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 속성 가져오기 또는 필드 액세스 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
      <returns vsli:raw="An instance of the call object.">호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">설정 작업이 작동할지 여부를 확인하는 데 사용되는 <see langword="Boolean" /> 값입니다. 속성 또는 필드에 중간 값이 설정되어 있다고 생각되면 <see langword="True" />로 설정하고, 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">런타임 참조의 기본 참조가 <see langword="Boolean" />인 경우를 지정하는 <see langword="RValue" /> 값입니다. 런타임 참조의 기본 참조가 <see langword="True" />이면 <see langword="RValue" />로 설정합니다. 이렇게 하면 값 형식의 <see langword="RValues" /> 필드에 대한 런타임 할당의 런타임 예외를 생성할 수 있습니다. 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Type" vsli:raw="The type of the call object.">호출 개체의 형식입니다.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">인수 형식의 배열로, 제네릭 호출에서 인수 형식을 전달하는 데만 사용됩니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Type" vsli:raw="The type of the call object.">호출 개체의 형식입니다.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">인수 형식의 배열로, 제네릭 호출에서 인수 형식을 전달하는 데만 사용됩니다.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">설정 작업이 작동할지 여부를 확인하는 데 사용되는 <see langword="Boolean" /> 값입니다. 속성 또는 필드에 중간 값이 설정되어 있다고 생각되면 <see langword="True" />로 설정하고, 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">런타임 참조의 기본 참조가 <see langword="Boolean" />인 경우를 지정하는 <see langword="RValue" /> 값입니다. 런타임 참조의 기본 참조가 <see langword="True" />이면 <see langword="RValue" />로 설정합니다. 이렇게 하면 값 형식의 <see langword="RValues" /> 필드에 대한 런타임 할당의 런타임 예외를 생성할 수 있습니다. 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
      <param name="CallType" vsli:raw="An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of CallType can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;. Only &lt;see langword=&quot;Set&quot; /&gt; is used.">호출되는 프로시저 형식을 나타내는 <see cref="T:Microsoft.VisualBasic.CallType" /> 형식의 열거형 멤버입니다. CallType 값은 <see langword="Method" />, <see langword="Get" /> 또는 <see langword="Set" />이 될 수 있습니다. 이 경우에는 <see langword="Set" />만 사용됩니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Type" vsli:raw="The type of the call object.">호출 개체의 형식입니다.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">인수 이름의 배열입니다.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">인수 형식의 배열로, 제네릭 호출에서 인수 형식을 전달하는 데만 사용됩니다.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">설정 작업이 작동할지 여부를 확인하는 데 사용되는 <see langword="Boolean" /> 값입니다. 속성 또는 필드에 중간 값이 설정되어 있다고 생각되면 <see langword="True" />로 설정하고, 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">런타임 참조의 기본 참조가 <see langword="Boolean" />인 경우를 지정하는 <see langword="RValue" /> 값입니다. 런타임 참조의 기본 참조가 <see langword="True" />이면 <see langword="RValue" />로 설정합니다. 이렇게 하면 값 형식의 <see langword="RValues" /> 필드에 대한 런타임 할당의 런타임 예외를 생성할 수 있습니다. 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary vsli:raw="The Visual Basic compiler uses this class for object flow control; it is not meant to be called directly from your code.">Visual Basic 컴파일러는 개체 흐름 제어에 이 클래스를 사용합니다. 이 클래스는 코드에서 직접 호출할 수 없습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary vsli:raw="Checks for a synchronization lock on the specified type.">지정된 형식에 대한 동기화 잠금이 있는지 검사합니다.</summary>
      <param name="Expression" vsli:raw="The data type for which to check for synchronization lock.">동기화 잠금이 있는지 검사할 데이터 형식입니다.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary vsli:raw="Provides services to the Visual Basic compiler for compiling &lt;see langword=&quot;For...Next&quot; /&gt; loops.">Visual Basic 컴파일러에 <see langword="For...Next" /> 루프를 컴파일하기 위한 서비스를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary vsli:raw="Initializes a &lt;see langword=&quot;For...Next&quot; /&gt; loop.">
        <see langword="For...Next" /> 루프를 초기화합니다.</summary>
      <param name="Counter" vsli:raw="The loop counter variable.">루프 카운터 변수입니다.</param>
      <param name="Start" vsli:raw="The initial value of the loop counter.">루프 카운터의 초기 값입니다.</param>
      <param name="Limit" vsli:raw="The value of the &lt;see langword=&quot;To&quot; /&gt; option.">
        <see langword="To" /> 옵션의 값입니다.</param>
      <param name="StepValue" vsli:raw="The value of the &lt;see langword=&quot;Step&quot; /&gt; option.">
        <see langword="Step" /> 옵션의 값입니다.</param>
      <param name="LoopForResult" vsli:raw="An object that contains verified values for loop values.">루프 값에 대해 확인된 값을 포함하는 개체입니다.</param>
      <param name="CounterResult" vsli:raw="The counter value for the next loop iteration.">다음 루프 반복의 카운터 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;False&quot; /&gt; if the loop has terminated; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">루프가 종료되었으면 <see langword="False" />이고, 그렇지 않으면 <see langword="True" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">루프 카운터, <see langword="Step" /> 및 <see langword="To" /> 값이 올바른지 확인합니다.</summary>
      <param name="count" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the initial value passed for the loop counter variable.">필수 요소. 루프 카운터 변수에 전달된 초기 값을 나타내는 <see langword="Decimal" /> 값입니다.</param>
      <param name="limit" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">필수 요소. <see langword="Decimal" /> 키워드를 사용하여 전달된 값을 나타내는 <see langword="To" /> 값입니다.</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">필수 요소. <see langword="Decimal" /> 키워드를 사용하여 전달된 값을 나타내는 <see langword="Step" /> 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt; or &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <paramref name="StepValue" />가 0보다 크고 <paramref name="count" />가 <paramref name="limit" />보다 작거나 같은 경우, 또는 <paramref name="StepValue" />가 0보다 작거나 같고 <paramref name="count" />가 <paramref name="limit" />보다 크거나 같은 경우 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary vsli:raw="Increments a &lt;see langword=&quot;For...Next&quot; /&gt; loop.">
        <see langword="For...Next" /> 루프를 증가시킵니다.</summary>
      <param name="Counter" vsli:raw="The loop counter variable.">루프 카운터 변수입니다.</param>
      <param name="LoopObj" vsli:raw="An object that contains verified values for loop values.">루프 값에 대해 확인된 값을 포함하는 개체입니다.</param>
      <param name="CounterResult" vsli:raw="The counter value for the next loop iteration.">다음 루프 반복의 카운터 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;False&quot; /&gt; if the loop has terminated; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">루프가 종료되었으면 <see langword="False" />이고, 그렇지 않으면 <see langword="True" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">루프 카운터, <see langword="Step" /> 및 <see langword="To" /> 값이 올바른지 확인합니다.</summary>
      <param name="count" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the initial value passed for the loop counter variable.">필수 요소. 루프 카운터 변수에 전달된 초기 값을 나타내는 <see cref="T:System.Single" /> 값입니다.</param>
      <param name="limit" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">필수 요소. <see cref="T:System.Single" /> 키워드를 사용하여 전달된 값을 나타내는 <see langword="To" /> 값입니다.</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">필수 요소. <see cref="T:System.Single" /> 키워드를 사용하여 전달된 값을 나타내는 <see langword="Step" /> 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt;, or if &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <paramref name="StepValue" />가 0보다 크고 <paramref name="count" />가 <paramref name="limit" />보다 작거나 같은 경우, 또는 <paramref name="StepValue" />가 0보다 작거나 같고 <paramref name="count" />가 <paramref name="limit" />보다 크거나 같은 경우 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">루프 카운터, <see langword="Step" /> 및 <see langword="To" /> 값이 올바른지 확인합니다.</summary>
      <param name="count" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the initial value passed for the loop counter variable.">필수 요소. 루프 카운터 변수에 전달된 초기 값을 나타내는 <see cref="T:System.Double" /> 값입니다.</param>
      <param name="limit" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">필수 요소. <see cref="T:System.Double" /> 키워드를 사용하여 전달된 값을 나타내는 <see langword="To" /> 값입니다.</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">필수 요소. <see cref="T:System.Double" /> 키워드를 사용하여 전달된 값을 나타내는 <see langword="Step" /> 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt;, or if &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <paramref name="StepValue" />가 0보다 크고 <paramref name="count" />가 <paramref name="limit" />보다 작거나 같은 경우, 또는 <paramref name="StepValue" />가 0보다 작거나 같고 <paramref name="count" />가 <paramref name="limit" />보다 크거나 같은 경우 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.ObjectType&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an addition (+) operation.">더하기(+) 연산을 수행합니다.</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" />와 <paramref name="o2" />의 합입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;And&quot; /&gt; operation.">비트 <see langword="And" /> 연산을 수행합니다.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns vsli:raw="1 if both &lt;paramref name=&quot;obj1&quot; /&gt; and &lt;paramref name=&quot;obj2&quot; /&gt; evaluate to 1; otherwise, 0.">
        <paramref name="obj1" />과 <paramref name="obj2" />가 모두 1로 계산되면 1이고, 그렇지 않으면 0입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">비트 <see langword="Or" /> 연산을 수행합니다.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns vsli:raw="0 if both &lt;paramref name=&quot;obj1&quot; /&gt; and &lt;paramref name=&quot;obj2&quot; /&gt; evaluate to 0; otherwise, 1.">
        <paramref name="obj1" /> 및 <paramref name="obj2" />가 모두 0으로 계산되면 0이고, 그렇지 않으면 1입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an &lt;see langword=&quot;Xor&quot; /&gt; operation.">
        <see langword="Xor" /> 연산을 수행합니다.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns vsli:raw="A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">두 숫자 비트 패턴의 배타적 비트 논리합을 나타내는 숫자 값입니다. 자세한 내용은 Xor Operator를 참조하세요.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a division (/) operation.">나누기(/) 연산을 수행합니다.</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The full quotient of &lt;paramref name=&quot;o1&quot; /&gt; divided by &lt;paramref name=&quot;o2&quot; /&gt;, including any remainder.">
        <paramref name="o1" />를 <paramref name="o2" />로 나눈 전체 몫(나머지 포함)입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary vsli:raw="Returns a boxed primitive value. This method is used to prevent copying structures multiple times.">boxed 기본값을 반환합니다. 이 메서드는 구조체를 여러 번 복사하지 않도록 하는 데 사용됩니다.</summary>
      <param name="o" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <returns vsli:raw="The primitive value of &lt;paramref name=&quot;o&quot; /&gt; typed as object.">개체로 형식화된 <paramref name="o" />의 기본값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an integer division (\) operation.">정수 나누기(\) 연산을 수행합니다.</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The integer quotient of &lt;paramref name=&quot;o1&quot; /&gt; divided by &lt;paramref name=&quot;o2&quot; /&gt;, which discards any remainder and retains only the integer portion.">
        <paramref name="o1" />를 <paramref name="o2" />로 나눠 나머지는 버리고 정수 부분만 남긴 몫입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs a &lt;see langword=&quot;Like&quot; /&gt; comparison.">
        <see langword="Like" /> 비교를 수행합니다.</summary>
      <param name="vLeft" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="vRight" vsli:raw="Required. Any string expression conforming to the pattern-matching conventions described in Like Operator.">필수 요소. Like Operator에 설명된 패턴 일치 규칙을 따르는 문자열 식입니다.</param>
      <param name="CompareOption" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; value that specifies that the operation use either text or binary comparison.">필수 요소. 작업에서 텍스트 비교를 사용할지 이진 비교를 사용할지를 지정하는 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the string representation of the value in &lt;paramref name=&quot;vLeft&quot; /&gt; satisfies the pattern that is contained in &lt;paramref name=&quot;vRight&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;. &lt;see langword=&quot;True&quot; /&gt; if both &lt;paramref name=&quot;vLeft&quot; /&gt; and &lt;paramref name=&quot;vRight&quot; /&gt; are &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="vLeft" />의 값에 대한 문자열 표현이 <paramref name="vRight" />에 들어 있는 패턴을 따르면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. <paramref name="vLeft" /> 및 <paramref name="vRight" />이 모두 <see langword="True" />이면 <see langword="Nothing" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a modulus (&lt;see langword=&quot;Mod&quot; /&gt;) operation.">나머지(<see langword="Mod" />) 연산을 수행합니다.</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The remainder after &lt;paramref name=&quot;o1&quot; /&gt; is divided by &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" />를 <paramref name="o2" />로 나눈 나머지입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a multiplication (*) operation.">곱하기(*) 연산을 수행합니다.</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" />와 <paramref name="o2" />의 곱입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary vsli:raw="Performs a unary minus (-) operation.">단항 빼기(-) 연산을 수행합니다.</summary>
      <param name="obj" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The negative value of &lt;paramref name=&quot;obj&quot; /&gt;.">
        <paramref name="obj" />의 음수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary vsli:raw="Performs a &lt;see langword=&quot;Not&quot; /&gt; operation.">
        <see langword="Not" /> 연산을 수행합니다.</summary>
      <param name="obj" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 1 if &lt;paramref name=&quot;obj&quot; /&gt; is 0; otherwise, 0.">
        <see langword="Boolean" /> 연산의 경우 <paramref name="obj" />가 <see langword="False" />이면 <see langword="True" />이고, 그렇지 않으면 <see langword="True" />입니다. 비트 연산의 경우 <paramref name="obj" />가 0이면 1이고, 그렇지 않으면 0입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Performs binary or text string comparison when given two objects.">이진 비교를 수행하거나, 두 개체가 지정된 경우 텍스트 문자열 비교를 수행합니다.</summary>
      <param name="o1" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="o2" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is less than &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is equal to &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is greater than &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <list type="table">
          <listheader>
            <term> 값</term>
            <description> 조건</description>
          </listheader>
          <item>
            <term> -1</term>
            <description>
              <paramref name="o1" />가 <paramref name="o2" />보다 작은 경우</description>
          </item>
          <item>
            <term> 0</term>
            <description>
              <paramref name="o1" />이(가) <paramref name="o2" />와 같은 경우.</description>
          </item>
          <item>
            <term> 1</term>
            <description>
              <paramref name="o1" />가 <paramref name="o2" />보다 큰 경우</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary vsli:raw="Performs a unary plus (+) operation.">단항 더하기(+) 연산을 수행합니다.</summary>
      <param name="obj" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The value of &lt;paramref name=&quot;obj&quot; /&gt;. (The sign of the &lt;paramref name=&quot;obj&quot; /&gt; is unchanged.)">
        <paramref name="obj" />의 값 <paramref name="obj" />의 부호는 변경되지 않습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an exponent (^) operation.">지수(^) 연산을 수행합니다.</summary>
      <param name="obj1" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="obj2" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The result of &lt;paramref name=&quot;obj1&quot; /&gt; raised to the power of &lt;paramref name=&quot;obj2&quot; /&gt;.">
        <paramref name="obj1" />를 <paramref name="obj2" />번 거듭제곱한 결과입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary vsli:raw="Performs an arithmetic left shift (&amp;lt;&amp;lt;) operation.">산술 왼쪽 시프트(&lt;&lt;) 연산을 수행합니다.</summary>
      <param name="o1" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">필수 요소. 정수 숫자 식입니다. 이동할 비트 패턴입니다. 데이터 형식은 정수 계열 형식(<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> 또는 <see langword="ULong" />)이어야 합니다.</param>
      <param name="amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">필수 요소. 숫자 식입니다. 비트 패턴을 이동할 비트 수입니다. 데이터 형식은 <see langword="Integer" />이거나 <see langword="Integer" />로 확장되어야 합니다.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;o1&quot; /&gt;.">정수 숫자 값입니다. 비트 패턴을 이동한 결과입니다. 데이터 형식은 <paramref name="o1" />의 형식과 같습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary vsli:raw="Performs an arithmetic right shift (&amp;gt;&amp;gt;) operation.">산술 오른쪽 시프트(&gt;&gt;) 연산을 수행합니다.</summary>
      <param name="o1" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">필수 요소. 정수 숫자 식입니다. 이동할 비트 패턴입니다. 데이터 형식은 정수 계열 형식(<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> 또는 <see langword="ULong" />)이어야 합니다.</param>
      <param name="amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">필수 요소. 숫자 식입니다. 비트 패턴을 이동할 비트 수입니다. 데이터 형식은 <see langword="Integer" />이거나 <see langword="Integer" />로 확장되어야 합니다.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;o1&quot; /&gt;.">정수 숫자 값입니다. 비트 패턴을 이동한 결과입니다. 데이터 형식은 <paramref name="o1" />의 형식과 같습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a string concatenation (&amp;amp;) operation.">문자열 연결(&amp;) 연산을 수행합니다.</summary>
      <param name="vLeft" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="vRight" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <returns vsli:raw="A string representing the concatenation of &lt;paramref name=&quot;vLeft&quot; /&gt; and &lt;paramref name=&quot;vRight&quot; /&gt;.">
        <paramref name="vLeft" />와 <paramref name="vRight" />를 연결한 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a subtraction (-) operation.">빼기(-) 연산을 수행합니다.</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" />와 <paramref name="o2" />의 차이입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an &lt;see langword=&quot;Xor&quot; /&gt; comparison.">
        <see langword="Xor" /> 비교를 수행합니다.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; or numeric value. For a &lt;see langword=&quot;Boolean&quot; /&gt; comparison, the return value is the logical exclusion (exclusive logical disjunction) of two &lt;see langword=&quot;Boolean&quot; /&gt; values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">
        <see langword="Boolean" /> 또는 숫자 값입니다. <see langword="Boolean" /> 비교의 경우 반환 값은 두 <see langword="Boolean" /> 값의 배타적 논리합입니다. 비트(숫자) 연산의 경우 반환 값은 두 숫자 비트 패턴의 배타적 비트 논리합을 나타내는 숫자 값입니다. 자세한 내용은 Xor Operator를 참조하세요.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary vsli:raw="Provides late-bound math operators, such as &lt;see cref=&quot;M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)&quot; /&gt; and &lt;see cref=&quot;M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)&quot; /&gt;, which the Visual Basic compiler uses internally.">Visual Basic 컴파일러에서 내부적으로 사용하는 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> 및 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />와 같은 런타임에 바인딩된 수학 연산자를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic addition (+) operator.">Visual Basic 더하기(+) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" />와 <paramref name="Right" />의 합입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;And&quot; /&gt; operator.">Visual Basic <see langword="And" /> 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;True&quot; /&gt; if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;. For bitwise operations, 1 if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to 1; otherwise, 0.">
        <see langword="Boolean" /> 연산의 경우 <paramref name="Left" />와 <paramref name="Right" />가 모두 <see langword="True" />로 계산되면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 비트 연산의 경우 <paramref name="Left" />와 <paramref name="Right" />가 모두 1로 계산되면 1이고, 그렇지 않으면 0입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic equal (=) operator.">Visual Basic 같음(=) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <paramref name="Left" />과 <paramref name="Right" />가 같으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic greater-than (&amp;gt;) operator.">Visual Basic 보다 큼(&gt;) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is greater than &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />이 <paramref name="Left" />보다 크면 <paramref name="Right" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic greater-than or equal-to (&amp;gt;=) operator.">Visual Basic 보다 크거나 같음(&gt;=) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <paramref name="Left" />가 <paramref name="Right" />보다 크거나 같으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic less-than (&amp;lt;) operator.">Visual Basic 보다 작음(&lt;) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is less than &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <paramref name="Left" />가 <paramref name="Right" />보다 작으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic less-than or equal-to (&amp;lt;=) operator.">Visual Basic 보다 작거나 같음(&lt;=) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <paramref name="Left" />가 <paramref name="Right" />보다 작거나 같으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic not-equal (&amp;lt;&amp;gt;) operator.">Visual Basic 같지 않음(&lt;&gt;) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is not equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />가 <paramref name="Left" />와 다르면 <paramref name="Right" />이고, 그러지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Performs binary or text string comparison when given two strings.">이진 비교를 수행하거나, 두 문자열이 지정된 경우 텍스트 문자열 비교를 수행합니다.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 <see langword="String" /> 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 <see langword="String" /> 식입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is less than &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is equal to &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is greater than &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <list type="table">
          <listheader>
            <term> 값</term>
            <description> 조건</description>
          </listheader>
          <item>
            <term> -1</term>
            <description>
              <paramref name="Left" />가 <paramref name="Right" />보다 작은 경우</description>
          </item>
          <item>
            <term> 0</term>
            <description>
              <paramref name="Left" />이(가) <paramref name="Right" />와 같은 경우.</description>
          </item>
          <item>
            <term> 1</term>
            <description>
              <paramref name="Left" />가 <paramref name="Right" />보다 큰 경우</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic concatenation (&amp;amp;) operator.">Visual Basic 연결(&amp;) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <returns vsli:raw="A string representing the concatenation of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" />와 <paramref name="Right" />를 연결한 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic equals (=) operator.">오버로드된 Visual Basic 같음(=) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="The result of the overloaded equals operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">오버로드된 같음 연산자의 결과입니다. 연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic greater-than (&amp;gt;) operator.">오버로드된 Visual Basic 보다 큼(&gt;) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="The result of the overloaded greater-than operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">오버로드된 보다 큼 연산자의 결과입니다. 연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic greater-than or equal-to (&amp;gt;=) operator.">오버로드된 Visual Basic 보다 크거나 같음(&gt;=) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="The result of the overloaded greater-than or equal-to operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">오버로드된 보다 크거나 같음 연산자의 결과입니다. 연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic less-than (&amp;lt;) operator.">오버로드된 Visual Basic 보다 작음(&lt;) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="The result of the overloaded less-than operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">오버로드된 보다 작음 연산자의 결과입니다. 연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic less-than or equal-to (&amp;lt;=) operator.">오버로드된 Visual Basic 보다 작거나 같음(&lt;=) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="The result of the overloaded less-than or equal-to operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">오버로드된 보다 작거나 같음 연산자의 결과입니다. 연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic not-equal (&amp;lt;&amp;gt;) operator.">오버로드된 Visual Basic 같지 않음(&lt;&gt;) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any expression.">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="The result of the overloaded not-equal operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">오버로드된 같지 않음 연산자의 결과입니다. 연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic division (/) operator.">Visual Basic 나누기(/) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The full quotient of &lt;paramref name=&quot;Left&quot; /&gt; divided by &lt;paramref name=&quot;Right&quot; /&gt;, including any remainder.">
        <paramref name="Left" />를 <paramref name="Right" />로 나눈 전체 몫(나머지 포함)입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic exponent (^) operator.">Visual Basic 지수(^) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The result of &lt;paramref name=&quot;Left&quot; /&gt; raised to the power of &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" />를 <paramref name="Right" />번 거듭제곱한 결과입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary vsli:raw="Executes a late-bound evaluation of a user-defined operator. This helper method is not meant to be called directly from your code.">런타임에 바인딩된 사용자 정의 연산자 계산을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="vbOp" vsli:raw="The user-defined operator.">사용자 정의 연산자입니다.</param>
      <param name="arguments" vsli:raw="" />
      <returns vsli:raw="The result returned from the user-defined operator.">사용자 정의 연산자에서 반환된 결과입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic integer division (\) operator.">Visual Basic 정수 나누기(\) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The integer quotient of &lt;paramref name=&quot;Left&quot; /&gt; divided by &lt;paramref name=&quot;Right&quot; /&gt;, which discards any remainder and retains only the integer portion.">
        <paramref name="Left" />를 <paramref name="Right" />로 나눠 나머지는 버리고 정수 부분만 남긴 몫입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic arithmetic left shift (&amp;lt;&amp;lt;) operator.">Visual Basic 산술 왼쪽 시프트(&lt;&lt;) 연산자를 나타냅니다.</summary>
      <param name="Operand" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">필수 요소. 정수 숫자 식입니다. 이동할 비트 패턴입니다. 데이터 형식은 정수 계열 형식(<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> 또는 <see langword="ULong" />)이어야 합니다.</param>
      <param name="Amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">필수 요소. 숫자 식입니다. 비트 패턴을 이동할 비트 수입니다. 데이터 형식은 <see langword="Integer" />이거나 <see langword="Integer" />로 확장되어야 합니다.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;Operand&quot; /&gt;.">정수 숫자 값입니다. 비트 패턴을 이동한 결과입니다. 데이터 형식은 <paramref name="Operand" />의 형식과 같습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Mod&quot; /&gt; operator.">Visual Basic <see langword="Mod" /> 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The remainder after &lt;paramref name=&quot;Left&quot; /&gt; is divided by &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" />를 <paramref name="Right" />로 나눈 나머지입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic multiply (*) operator.">Visual Basic 곱하기(*) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" />와 <paramref name="Right" />의 곱입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic unary minus (-) operator.">Visual Basic 단항 빼기(-) 연산자를 나타냅니다.</summary>
      <param name="Operand" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The negative value of &lt;paramref name=&quot;Operand&quot; /&gt;.">
        <paramref name="Operand" />의 음수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Not&quot; /&gt; operator.">Visual Basic <see langword="Not" /> 연산자를 나타냅니다.</summary>
      <param name="Operand" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if &lt;paramref name=&quot;Operand&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 1 if &lt;paramref name=&quot;Operand&quot; /&gt; is 0; otherwise, 0.">
        <see langword="Boolean" /> 연산의 경우 <paramref name="Operand" />가 <see langword="False" />이면 <see langword="True" />이고, 그렇지 않으면 <see langword="True" />입니다. 비트 연산의 경우 <paramref name="Operand" />가 0이면 1이고, 그렇지 않으면 0입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Or&quot; /&gt; operator.">Visual Basic <see langword="Or" /> 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 0 if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to 0; otherwise, 1.">
        <see langword="Boolean" /> 연산의 경우 <paramref name="Left" />와 <paramref name="Right" />가 모두 <see langword="False" />로 계산되면 <see langword="False" />이고, 그렇지 않으면 <see langword="True" />입니다. 비트 연산의 경우 <paramref name="Left" />와 <paramref name="Right" />이 모두 0으로 계산되면 0이고, 그렇지 않으면 1입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic unary plus (+) operator.">Visual Basic 단항 더하기(-) 연산자를 나타냅니다.</summary>
      <param name="Operand" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The value of &lt;paramref name=&quot;Operand&quot; /&gt;. (The sign of the &lt;paramref name=&quot;Operand&quot; /&gt; is unchanged.)">
        <paramref name="Operand" />의 값 <paramref name="Operand" />의 부호는 변경되지 않습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic arithmetic right shift (&amp;gt;&amp;gt;) operator.">Visual Basic 산술 오른쪽 시프트(&gt;&gt;) 연산자를 나타냅니다.</summary>
      <param name="Operand" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">필수 요소. 정수 숫자 식입니다. 이동할 비트 패턴입니다. 데이터 형식은 정수 계열 형식(<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> 또는 <see langword="ULong" />)이어야 합니다.</param>
      <param name="Amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">필수 요소. 숫자 식입니다. 비트 패턴을 이동할 비트 수입니다. 데이터 형식은 <see langword="Integer" />이거나 <see langword="Integer" />로 확장되어야 합니다.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;Operand&quot; /&gt;.">정수 숫자 값입니다. 비트 패턴을 이동한 결과입니다. 데이터 형식은 <paramref name="Operand" />의 형식과 같습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic subtraction (-) operator.">Visual Basic 빼기(-) 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">필수 요소. 임의의 숫자 식입니다.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" />와 <paramref name="Right" />의 차이입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Xor&quot; /&gt; operator.">Visual Basic <see langword="Xor" /> 연산자를 나타냅니다.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; or numeric value. For a &lt;see langword=&quot;Boolean&quot; /&gt; comparison, the return value is the logical exclusion (exclusive logical disjunction) of two &lt;see langword=&quot;Boolean&quot; /&gt; values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">
        <see langword="Boolean" /> 또는 숫자 값입니다. <see langword="Boolean" /> 비교의 경우 반환 값은 두 <see langword="Boolean" /> 값의 배타적 논리합입니다. 비트(숫자) 연산의 경우 반환 값은 두 숫자 비트 패턴의 배타적 비트 논리합을 나타내는 숫자 값입니다. 자세한 내용은 Xor Operator를 참조하세요.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary vsli:raw="Specifies that the current &lt;see langword=&quot;Option Compare&quot; /&gt; setting should be passed as the default value for an argument.">현재 <see langword="Option Compare" /> 설정을 인수의 기본값으로 전달하도록 지정합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary vsli:raw="The Visual Basic compiler emits this helper class to indicate (for Visual Basic debugging) which comparison option, binary or text, is being used.">Visual Basic 컴파일러는 Visual Basic 디버깅을 위해 이진 또는 텍스트 비교 중에서 어떤 비교 옵션이 사용되는지를 나타내기 위해 이 도우미 클래스를 내보냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute&quot; /&gt; class. This is a helper method.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" /> 클래스의 새 인스턴스를 초기화합니다. 이 메서드는 도우미 메서드입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary vsli:raw="Provides helpers for the Visual Basic &lt;see langword=&quot;Err&quot; /&gt; object.">Visual Basic <see langword="Err" /> 개체에 대한 도우미를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary vsli:raw="Performs the work for the &lt;see langword=&quot;Clear&quot; /&gt; method of the &lt;see langword=&quot;Err&quot; /&gt; object. A helper method.">
        <see langword="Clear" /> 개체의 <see langword="Err" /> 메서드 작업을 수행합니다. 도우미 메서드입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary vsli:raw="Performs the work for the &lt;see langword=&quot;Raise&quot; /&gt; method of the &lt;see langword=&quot;Err&quot; /&gt; object. A helper method.">
        <see langword="Raise" /> 개체의 <see langword="Err" /> 메서드 작업을 수행합니다. 도우미 메서드입니다.</summary>
      <param name="hr" vsli:raw="An integer value that identifies the nature of the error. Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors.">오류 속성을 식별하는 정수 값입니다. Visual Basic 오류의 범위는 0~65535 사이이며, 0~512 사이의 범위는 시스템 오류로 예약되어 있고, 513~65535 사이의 범위는 사용자 정의 오류로 사용할 수 있습니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object.">
        <see cref="T:System.Exception" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary vsli:raw="Closes all files for the calling assembly and stops the process.">호출 어셈블리에 대한 모든 파일을 닫고 프로세스를 중지합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary vsli:raw="The Visual Basic compiler uses this helper method to capture exceptions in the &lt;see langword=&quot;Err&quot; /&gt; object.">Visual Basic 컴파일러에서는 이 도우미 메서드를 사용하여 <see langword="Err" /> 개체에서 예외를 캡처합니다.</summary>
      <param name="ex" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object to be caught.">catch할 <see cref="T:System.Exception" /> 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary vsli:raw="The Visual Basic compiler uses this helper method to capture exceptions in the &lt;see langword=&quot;Err&quot; /&gt; object.">Visual Basic 컴파일러에서는 이 도우미 메서드를 사용하여 <see langword="Err" /> 개체에서 예외를 캡처합니다.</summary>
      <param name="ex" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object to be caught.">catch할 <see cref="T:System.Exception" /> 개체입니다.</param>
      <param name="lErl" vsli:raw="The line number of the exception.">예외의 줄 번호입니다.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to the specified object.">지정된 개체에 해당하는 <see langword="Short" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Short&quot; /&gt; value.">필수 요소. <see langword="Short" /> 값으로 변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Short" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to the specified string.">지정된 문자열에 해당하는 <see langword="Short" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Short&quot; /&gt; value.">필수 요소. <see langword="Short" /> 값으로 변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="Short" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified object.">지정된 개체에 해당하는 <see cref="T:System.Single" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">필수 요소. <see cref="T:System.Single" /> 값으로 변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see cref="T:System.Single" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified object.">지정된 개체에 해당하는 <see cref="T:System.Single" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">필수 요소. <see cref="T:System.Single" /> 값으로 변환할 개체입니다.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see cref="T:System.Single" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified string.">지정된 문자열에 해당하는 <see cref="T:System.Single" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">필수 요소. <see cref="T:System.Single" /> 값으로 변환할 문자열입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see cref="T:System.Single" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified string and number format information.">지정된 문자열 및 숫자 형식 정보에 해당하는 <see cref="T:System.Single" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">필수 요소. <see cref="T:System.Single" /> 값으로 변환할 문자열입니다.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see cref="T:System.Single" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary vsli:raw="This class provides attributes that are applied to the standard module construct when it is emitted to Intermediate Language (IL). It is not intended to be called directly from your code.">이 클래스는 표준 모듈 구문을 IL(Intermediate Language)에 내보낼 때 해당 구문에 적용되는 특성을 제공합니다. 이 클래스는 코드에서 직접 호출할 수 없습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary vsli:raw="The Visual Basic compiler uses this class internally when initializing static local members; it is not meant to be called directly from your code.">Visual Basic 컴파일러는 정적 로컬 멤버를 초기화할 때 이 클래스를 내부적으로 사용합니다. 이 클래스는 코드에서 직접 호출할 수 없습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary vsli:raw="Returns the state of the static local member's initialization flag (initialized or not).">정적 로컬 멤버의 초기화 플래그 상태(초기화되었는지 여부)를 반환합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Boolean&quot; /&gt;.">지정된 <see langword="String" />에 해당하는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. <see langword="Boolean" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Byte&quot; /&gt;.">지정된 <see langword="String" />에 해당하는 <see langword="Byte" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Byte&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. <see langword="Byte" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Char&quot; /&gt;.">지정된 <see langword="String" />에 해당하는 <see langword="Char" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Char&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. <see langword="Char" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified date.">지정된 날짜에 해당하는 <see langword="String" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Date to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. <see langword="String" /> 값으로 변환할 날짜입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Decimal&quot; /&gt;.">지정된 <see langword="String" />에 해당하는 <see langword="Decimal" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Decimal&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. <see langword="Decimal" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see langword=&quot;Decimal&quot; /&gt; and number format information.">지정된 <see langword="String" /> 및 숫자 형식 정보에 해당하는 <see langword="Decimal" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Decimal&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. <see langword="Decimal" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Double&quot; /&gt;.">지정 된에 해당 하는 문자열 값을 반환 합니다 <see cref="T:System.Double" /> .</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a string that corresponds to a specified &lt;see cref=&quot;T:System.Double&quot; /&gt; and number format information.">지정 된 및 숫자 형식 정보에 해당 하는 문자열을 반환 <see cref="T:System.Double" /> 합니다.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 <see cref="T:System.String" />입니다.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns vsli:raw="The string representation of &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see langword=&quot;Integer&quot; /&gt;.">지정된 <see langword="String" />에 해당하는 <see langword="Integer" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. <see langword="Integer" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see cref=&quot;T:System.Int64&quot; /&gt; (64-bit integer).">지정된 <see langword="String" />(64비트 정수)에 해당하는 <see cref="T:System.Int64" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Int64&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. <see cref="T:System.Int64" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified object.">지정된 개체에 해당하는 <see langword="String" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. <see langword="String" /> 값으로 변환할 개체입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see cref=&quot;T:System.Int16&quot; /&gt; (16-bit integer).">지정된 <see langword="String" />(16비트 정수)에 해당하는 <see cref="T:System.Int16" /> 값을 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Int616&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. <see langword="Int616" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Single&quot; /&gt;.">지정 된에 해당 하는 문자열 값을 반환 합니다 <see cref="T:System.Single" /> .</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Single&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. <see cref="T:System.Single" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns vsli:raw="The string value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">에 해당 하는 문자열 값 <paramref name="Value" /> 입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Single&quot; /&gt; and number format information.">지정 된 및 숫자 형식 정보에 해당 하는 문자열 값을 반환 <see cref="T:System.Single" /> 합니다.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Single&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. <see cref="T:System.Single" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns vsli:raw="The string value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">에 해당 하는 문자열 값 <paramref name="Value" /> 입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Overwrites the &lt;paramref name=&quot;sDest&quot; /&gt; parameter with the contents of the &lt;paramref name=&quot;sInsert&quot; /&gt; parameter.">
        <paramref name="sDest" /> 매개 변수를 <paramref name="sInsert" /> 매개 변수의 내용으로 덮어씁니다.</summary>
      <param name="sDest" vsli:raw="Required. String variable to modify.">필수 요소. 수정할 문자열 변수입니다.</param>
      <param name="StartPosition" vsli:raw="Required. Location in the &lt;paramref name=&quot;sDest&quot; /&gt; parameter to begin overwriting from. The index is 1-based.">필수 요소. <paramref name="sDest" /> 매개 변수에서 덮어쓰기 시작할 위치입니다. 인덱스는 1부터 시작합니다.</param>
      <param name="MaxInsertLength" vsli:raw="Required. Maximum number of characters from the &lt;paramref name=&quot;sInsert&quot; /&gt; parameter to use, starting from the first character.">필수 요소. <paramref name="sInsert" /> 매개 변수에서 첫 번째 문자부터 사용할 최대 문자 수입니다.</param>
      <param name="sInsert" vsli:raw="Required. String value to overwrite the &lt;paramref name=&quot;sDest&quot; /&gt; parameter with.">필수 요소. <paramref name="sDest" /> 매개 변수에 덮어쓸 문자열 값입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Compares two strings.">두 문자열을 비교합니다.</summary>
      <param name="sLeft" vsli:raw="Required. String to compare with &lt;paramref name=&quot;sRight&quot; /&gt;.">필수 요소. <paramref name="sRight" />와 비교할 문자열입니다.</param>
      <param name="sRight" vsli:raw="Required. String to compare with &lt;paramref name=&quot;sLeft&quot; /&gt;.">필수 요소. <paramref name="sLeft" />와 비교할 문자열입니다.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive comparison; otherwise &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; zero&lt;/term&gt;&lt;description&gt; The two strings are equal.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;sLeft&quot; /&gt; is less than &lt;paramref name=&quot;sRight&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;sLeft&quot; /&gt; is greater than &lt;paramref name=&quot;sRight&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <list type="table">
          <listheader>
            <term> 값</term>
            <description> 조건</description>
          </listheader>
          <item>
            <term> 0</term>
            <description> 두 문자열이 같은 경우</description>
          </item>
          <item>
            <term> 0보다 작음</term>
            <description>
              <paramref name="sLeft" />가 <paramref name="sRight" />보다 작은 경우</description>
          </item>
          <item>
            <term> 0보다 큼</term>
            <description>
              <paramref name="sLeft" />가 <paramref name="sRight" />보다 큰 경우</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator.">
        <paramref name="Source" /> 및 <paramref name="Pattern" /> 매개 변수를 비교하고 <see langword="Like" /> 연산자와 같은 결과를 반환합니다.</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 <see langword="String" /> 식입니다.</param>
      <param name="Pattern" vsli:raw="Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">Like 연산자에 설명된 패턴 일치 규칙을 따르는 <see langword="String" /> 식입니다.</param>
      <param name="CompareOption" vsli:raw="Specifies how to compare strings to patterns, according to the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt;. Can be &lt;see langword=&quot;vbBinaryCompare&quot; /&gt; for binary comparison or &lt;see langword=&quot;vbTextCompare&quot; /&gt; for comparison based on a case-insensitive text sort order determined by your system's &lt;see langword=&quot;LocaleID&quot; /&gt; value.">
        <see cref="T:Microsoft.VisualBasic.CompareMethod" />에 따라 문자열을 패턴과 비교하는 방법을 지정합니다. 이진 비교의 경우 <see langword="vbBinaryCompare" />이거나, 시스템의 <see langword="vbTextCompare" /> 값으로 결정되는 대/소문자를 구분하지 않는 텍스트 정렬 순서에 따른 비교의 경우 <see langword="LocaleID" />일 수 있습니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">문자열이 패턴을 충족하는지 여부를 나타내는 <see langword="Boolean" /> 값입니다. 문자열의 값이 패턴에 포함된 패턴을 충족하면 결과는 <see langword="True" />이고, 문자열이 패턴을 충족하지 않으면 결과는 <see langword="False" />입니다. 문자열과 패턴이 모두 빈 문자열이면 결과는 <see langword="True" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator, using binary comparison.">이진 비교를 사용하여 <paramref name="Source" /> 및 <paramref name="Pattern" /> 매개 변수를 비교하고 <see langword="Like" /> 연산자와 같은 결과를 반환합니다.</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 <see langword="String" /> 식입니다.</param>
      <param name="Pattern" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">필수 요소. Like 연산자에 설명된 패턴 일치 규칙을 따르는 <see langword="String" /> 식입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">문자열이 패턴을 충족하는지 여부를 나타내는 <see langword="Boolean" /> 값입니다. 문자열의 값이 패턴에 포함된 패턴을 충족하면 결과는 <see langword="True" />이고, 문자열이 패턴을 충족하지 않으면 결과는 <see langword="False" />입니다. 문자열과 패턴이 모두 빈 문자열이면 결과는 <see langword="True" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator, using text comparison.">텍스트 비교를 사용하여 <paramref name="Source" /> 및 <paramref name="Pattern" /> 매개 변수를 비교하고 <see langword="Like" /> 연산자와 같은 결과를 반환합니다.</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 <see langword="String" /> 식입니다.</param>
      <param name="Pattern" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">필수 요소. Like 연산자에 설명된 패턴 일치 규칙을 따르는 <see langword="String" /> 식입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">문자열이 패턴을 충족하는지 여부를 나타내는 <see langword="Boolean" /> 값입니다. 문자열의 값이 패턴에 포함된 패턴을 충족하면 결과는 <see langword="True" />이고, 문자열이 패턴을 충족하지 않으면 결과는 <see langword="False" />입니다. 문자열과 패턴이 모두 빈 문자열이면 결과는 <see langword="True" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary vsli:raw="Contains utilities that the Visual Basic compiler uses.">Visual Basic 컴파일러에서 사용하는 유틸리티가 들어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary vsli:raw="Used by the Visual Basic compiler as a helper for &lt;see langword=&quot;Redim&quot; /&gt;.">Visual Basic 컴파일러에서 <see langword="Redim" />에 대한 도우미로 사용됩니다.</summary>
      <param name="arySrc" vsli:raw="The array to be copied.">복사할 배열입니다.</param>
      <param name="aryDest" vsli:raw="The destination array.">대상 배열입니다.</param>
      <returns vsli:raw="The copied array.">복사된 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.GetResourceString(System.String,System.String[])">
      <summary vsli:raw="Retrieves and formats a localized resource string or error message.">지역화된 리소스 문자열 또는 오류 메시지를 검색하고 서식을 지정합니다.</summary>
      <param name="ResourceKey" vsli:raw="The identifier of the string or error message to retrieve.">검색할 문자열 또는 오류 메시지의 식별자입니다.</param>
      <param name="Args" vsli:raw="An array of parameters to replace placeholders in the string or error message.">문자열 또는 오류 메시지의 자리 표시자를 대체할 매개 변수의 배열입니다.</param>
      <returns vsli:raw="A formatted resource string or error message.">서식 지정된 리소스 문자열 또는 오류 메시지입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary vsli:raw="The &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.Versioned&quot; /&gt; module contains procedures used to interact with objects, applications, and systems.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> 모듈에는 개체, 애플리케이션 및 시스템과 상호 작용하는 데 사용되는 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary vsli:raw="Executes a method on an object, or sets or returns a property on an object.">개체의 메서드를 실행하거나 개체의 속성을 설정 또는 반환합니다.</summary>
      <param name="Instance" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. A pointer to the object exposing the property or method.">필수 요소. <see langword="Object" />. 형식이며 속성이나 메서드를 노출하는 개체에 대한 포인터입니다.</param>
      <param name="MethodName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. A string expression containing the name of the property or method on the object.">필수 요소. <see langword="String" />. 형식이며 개체의 속성이나 메서드 이름이 포함된 문자열 식입니다.</param>
      <param name="UseCallType" vsli:raw="Required. An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of &lt;see langword=&quot;CallType&quot; /&gt; can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">필수 요소. 호출되는 프로시저 형식을 나타내는 <see cref="T:Microsoft.VisualBasic.CallType" /> 형식의 열거형 멤버입니다. <see langword="CallType" /> 값은 <see langword="Method" />, <see langword="Get" /> 또는 <see langword="Set" />이 될 수 있습니다.</param>
      <param name="Arguments" vsli:raw="Optional. &lt;see langword=&quot;ParamArray&quot; /&gt;. A parameter array containing the arguments to be passed to the property or method being called.">선택 사항입니다. <see langword="ParamArray" />. 형식이며 호출되는 속성이나 메서드에 전달될 인수가 포함된 매개 변수 배열입니다.</param>
      <returns vsli:raw="Executes a method on an object, or sets or returns a property on an object.">개체의 메서드를 실행하거나 개체의 속성을 설정 또는 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary vsli:raw="Returns a Boolean value indicating whether an expression can be evaluated as a number.">식이 숫자로 계산될 수 있는지 여부를 나타내는 부울 값을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">필수 요소. <see langword="Object" /> 식입니다.</param>
      <returns vsli:raw="Returns a Boolean value indicating whether an expression can be evaluated as a number.">식이 숫자로 계산될 수 있는지 여부를 나타내는 부울 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary vsli:raw="Returns a string value containing the system data type name of a variable.">변수의 시스템 데이터 형식 이름을 포함하는 문자열 값을 반환합니다.</summary>
      <param name="VbName" vsli:raw="Required. A string variable containing a Visual Basic type name.">필수 요소. Visual Basic 형식 이름을 포함하는 문자열 변수입니다.</param>
      <returns vsli:raw="Returns a string value containing the system data type name of a variable.">변수의 시스템 데이터 형식 이름을 포함하는 문자열 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary vsli:raw="Returns a string value containing data type information about a variable.">변수에 대한 데이터 형식 정보를 포함하는 문자열 값을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">필수 요소. <see langword="Object" /> 변수입니다. <see langword="Option Strict" />가 <see langword="Off" />이면 구조체를 제외한 모든 데이터 형식의 변수를 전달할 수 있습니다.</param>
      <returns vsli:raw="Returns a string value containing data type information about a variable.">변수에 대한 데이터 형식 정보를 포함하는 문자열 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary vsli:raw="Returns a string value containing the Visual Basic data type name of a variable.">변수의 Visual Basic 데이터 형식 이름을 포함하는 문자열 값을 반환합니다.</summary>
      <param name="SystemName" vsli:raw="Required. String variable containing a type name used by the common language runtime.">필수 요소. 공용 언어 런타임에서 사용되는 형식 이름을 포함하는 문자열 변수입니다.</param>
      <returns vsli:raw="Returns a string value containing the Visual Basic data type name of a variable.">변수의 Visual Basic 데이터 형식 이름을 포함하는 문자열 값을 반환합니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary vsli:raw="The &lt;see langword=&quot;Constants&quot; /&gt; module contains miscellaneous constants. These constants can be used anywhere in your code.">
        <see langword="Constants" /> 모듈에는 기타 상수가 포함되어 있습니다. 이 상수는 코드의 모든 위치에서 사용할 수 있습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Abort&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">메시지 상자에서 <see langword="Abort" /> 단추가 클릭되었음을 나타냅니다. <see langword="MsgBox" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Abort&quot; /&gt;, &lt;see langword=&quot;Retry&quot; /&gt;, and &lt;see langword=&quot;Ignore&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="Abort" /> 함수가 호출될 때 <see langword="Retry" />, <see langword="Ignore" /> 및 <see langword="MsgBox" /> 단추가 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary vsli:raw="Indicates that the message box will be displayed as a modal dialog box when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 함수가 호출될 때 메시지 상자가 모달 대화 상자로 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary vsli:raw="Indicates that the file has changed since the last backup operation for file-access functions.">파일 액세스 함수에 대한 마지막 백업 작업 이후 파일이 변경되었음을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary vsli:raw="Indicates that the type of a variant object is an array. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 배열임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary vsli:raw="Represents a backspace character for print and display functions.">인쇄 및 표시 함수의 백스페이스 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary vsli:raw="Specifies that a binary comparison should be performed when comparison functions are called.">비교 함수가 호출될 때 이진 비교가 수행되어야 함을 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Boolean&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 <see langword="Boolean" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Byte&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 <see langword="Byte" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Cancel&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">메시지 상자에서 <see langword="Cancel" /> 단추가 클릭되었음을 나타냅니다. <see langword="MsgBox" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary vsli:raw="Represents a carriage-return character for print and display functions.">인쇄 및 표시 함수의 캐리지 리턴 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary vsli:raw="Indicates that the critical message icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 함수가 호출될 때 중대 오류 메시지 아이콘이 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary vsli:raw="Represents a carriage-return character combined with a linefeed character for print and display functions.">인쇄 및 표시 함수의 캐리지 리턴 문자/줄 바꿈 문자 조합을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Currency&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 <see langword="Currency" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Date&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 <see langword="Date" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Decimal&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 <see langword="Decimal" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary vsli:raw="Indicates that the leftmost button is selected as the default button when the message box appears.">메시지 상자가 나타날 때 맨 왼쪽 단추가 기본 단추로 선택됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary vsli:raw="Indicates that the second button from the left is selected as the default button when the message box appears.">메시지 상자가 나타날 때 왼쪽에서 두 번째 단추가 기본 단추로 선택됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary vsli:raw="Indicates that the third button from the left is selected as the default button when the message box appears.">메시지 상자가 나타날 때 왼쪽에서 세 번째 단추가 기본 단추로 선택됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary vsli:raw="Indicates that the file is a directory or folder for file-access functions.">파일이 파일 액세스 함수에 대한 디렉터리 또는 폴더임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Double&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 <see langword="Double" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Empty&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 <see langword="Empty" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary vsli:raw="Indicates that the exclamation icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 함수가 호출될 때 느낌표 아이콘이 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;Boolean&quot; /&gt; value of &lt;see langword=&quot;False&quot; /&gt; should be used when number-formatting functions are called.">숫자 서식 지정 함수가 호출될 때 <see langword="Boolean" /> 값으로 <see langword="False" />가 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary vsli:raw="Indicates that the first week of the year that has at least four days should be used when date-related functions are called.">날짜 관련 함수가 호출될 때 해당 연도에서 4일 이상의 요일이 있는 첫째 주가 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary vsli:raw="Indicates that the first full week of the year should be used when date-related functions are called.">날짜 관련 함수가 호출될 때 해당 연도에서 전체 요일이 있는 첫째 주가 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary vsli:raw="Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.">날짜 관련 함수가 호출될 때 해당 연도에서 1월 1일이 속하는 주가 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary vsli:raw="Represents a form-feed character for print functions.">인쇄 함수의 용지 공급 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary vsli:raw="Specifies that Friday should be used as the first day of the week when date-related functions are called.">날짜 관련 함수가 호출될 때 금요일이 해당 주의 첫째 요일로 사용되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary vsli:raw="Indicates that the general date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">
        <see langword="FormatDateTime" /> 함수가 호출될 때 현재 문화권의 일반 날짜 서식이 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary vsli:raw="Specifies that a property value should be retrieved when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">
        <see langword="CallByName" /> 함수가 호출될 때 속성 값이 검색되어야 함을 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary vsli:raw="Indicates that the file is a hidden file for file-access functions.">파일이 파일 액세스 함수에 대한 숨겨진 파일임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary vsli:raw="Indicates that the window style is hidden for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">
        <see langword="Shell" /> 함수가 호출될 때 호출된 프로그램에 대해 창 스타일이 숨겨짐을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary vsli:raw="Indicates Hiragana characters should be converted to Katakana characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 함수가 호출될 때 히라가나 문자가 가타카나 문자로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Ignore&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">메시지 상자에서 <see langword="Ignore" /> 단추가 클릭되었음을 나타냅니다. <see langword="MsgBox" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary vsli:raw="Indicates that the information icon will display when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 함수가 호출될 때 정보 아이콘이 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Integer&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 <see langword="Integer" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary vsli:raw="Indicates that Katakana characters should be converted to Hiragana characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 함수가 호출될 때 가타카나 문자가 히라가나 문자로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary vsli:raw="Indicates that a property value should be set to an object instance when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">
        <see langword="CallByName" /> 함수가 호출될 때 속성 값이 개체 인스턴스로 설정되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary vsli:raw="Represents a linefeed character for print and display functions.">인쇄 및 표시 함수의 줄 바꿈 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary vsli:raw="Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 함수가 호출될 때 파일 시스템 규칙 대신 언어 규칙을 사용하여 대/소문자가 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary vsli:raw="Indicates the type of a variant object is &lt;see langword=&quot;Long&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 <see langword="Long" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary vsli:raw="Indicates that the long date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">
        <see langword="FormatDateTime" /> 함수가 호출될 때 현재 문화권의 자세한 날짜 서식이 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary vsli:raw="Indicates that the long time format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">
        <see langword="FormatDateTime" /> 함수가 호출될 때 현재 문화권의 자세한 시간 서식이 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary vsli:raw="Indicates that characters should be converted to lowercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 함수가 호출될 때 문자가 소문자로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary vsli:raw="Indicates that the window style is maximized with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">
        <see langword="Shell" /> 함수가 호출될 때 호출된 프로그램에 대해 포커스가 있는 창 스타일이 최대화됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary vsli:raw="Specifies that a method should be called when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">
        <see langword="CallByName" /> 함수가 호출될 때 메서드가 호출되어야 함을 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary vsli:raw="Indicates that the window style is minimized with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">
        <see langword="Shell" /> 함수가 호출될 때 호출된 프로그램에 대해 포커스가 있는 창 스타일이 최소화됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary vsli:raw="Indicates that the window style is minimized without focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">
        <see langword="Shell" /> 함수가 호출될 때 호출된 프로그램에 대해 포커스가 없는 창 스타일이 최소화됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary vsli:raw="Specifies that Monday should be used as the first day of the week when date-related functions are called.">날짜 관련 함수가 호출될 때 월요일이 해당 주의 첫째 요일로 사용되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Help&quot; /&gt; button will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="Help" /> 함수가 호출될 때 <see langword="MsgBox" /> 단추가 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary vsli:raw="Indicates that text will be right-aligned when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 함수가 호출될 때 텍스트가 오른쪽에 맞춰짐을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary vsli:raw="Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 함수가 호출될 때 오른쪽에서 왼쪽으로 읽는 텍스트(히브리어 및 아랍어 시스템)가 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary vsli:raw="Indicates that the message box will display in the foreground when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 함수가 호출될 때 메시지 상자가 전경에 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary vsli:raw="Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 함수가 호출될 때 넓은 문자(더블바이트)가 좁은 문자(싱글바이트)로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary vsli:raw="Represents a newline character for print and display functions.">인쇄 및 표시 함수의 줄 바꿈 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;No&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">메시지 상자에서 <see langword="No" /> 단추가 클릭되었음을 나타냅니다. <see langword="MsgBox" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary vsli:raw="Indicates that the file is a normal file for file-access functions.">파일이 파일 액세스 함수에 대한 일반 파일임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary vsli:raw="Indicates that the window style is normal with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">
        <see langword="Shell" /> 함수가 호출될 때 호출된 프로그램에 대해 창 스타일이 포커스가 있는 표준 스타일임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary vsli:raw="Indicates that the window style is normal without focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">
        <see langword="Shell" /> 함수가 호출될 때 호출된 프로그램에 대해 창 스타일이 포커스가 없는 표준 스타일임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Nothing&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 <see langword="Nothing" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary vsli:raw="Represents a null character for print and display functions.">인쇄 및 표시 함수의 null 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary vsli:raw="Represents a zero-length string for print and display functions, and for calling external procedures.">인쇄 및 표시 함수의 길이가 0인 문자열을 나타나며 외부 프로시저를 호출하는 데 사용됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Object&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 <see langword="Object" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary vsli:raw="Represents the object error number. User-defined error numbers should be greater than this value.">개체 오류 번호를 나타냅니다. 사용자 정의 오류 번호는 이 값보다 커야 합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;OK&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">메시지 상자에서 <see langword="OK" /> 단추가 클릭되었음을 나타냅니다. <see langword="MsgBox" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;OK&quot; /&gt; and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="OK" /> 함수가 호출될 때 <see langword="Cancel" /> 및 <see langword="MsgBox" /> 단추가 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary vsli:raw="Indicates that only the &lt;see langword=&quot;OK&quot; /&gt; button will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="OK" /> 함수가 호출될 때 <see langword="MsgBox" /> 단추만 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary vsli:raw="Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 함수가 호출될 때 문자열에서 모든 단어의 첫 글자가 대문자로 변환되고 나머지는 소문자로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary vsli:raw="Indicates that the question icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 함수가 호출될 때 물음표 아이콘이 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary vsli:raw="Indicates that the file is a read-only file for file-access functions.">파일이 파일 액세스 함수에 대한 읽기 전용 파일임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Retry&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">메시지 상자에서 <see langword="Retry" /> 단추가 클릭되었음을 나타냅니다. <see langword="MsgBox" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Retry&quot; /&gt; and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="Retry" /> 함수가 호출될 때 <see langword="Cancel" /> 및 <see langword="MsgBox" /> 단추가 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary vsli:raw="Specifies that Saturday should be used as the first day of the week when date-related functions are called.">날짜 관련 함수가 호출될 때 토요일이 해당 주의 첫째 요일로 사용되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary vsli:raw="Indicates that a property value should be set when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">
        <see langword="CallByName" /> 함수가 호출될 때 속성 값이 설정되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary vsli:raw="Indicates that the short-date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">
        <see langword="FormatDateTime" /> 함수가 호출될 때 현재 문화권의 간단한 날짜 서식이 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary vsli:raw="Indicates that the short-time format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">
        <see langword="FormatDateTime" /> 함수가 호출될 때 현재 문화권의 간단한 시간 서식이 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary vsli:raw="Indicates that characters should be converted to Simplified Chinese when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 함수가 호출될 때 문자가 중국어 간체로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see cref=&quot;T:System.Single&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 <see cref="T:System.Single" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;String&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 <see langword="String" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary vsli:raw="Specifies that Sunday should be used as the first day of the week when date-related functions are called.">날짜 관련 함수가 호출될 때 일요일이 해당 주의 첫째 요일로 사용되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary vsli:raw="Indicates that the file is a system file for file-access functions.">파일이 파일 액세스 함수에 대한 시스템 파일임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary vsli:raw="Indicates that the message box will be displayed as a modal dialog box when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="MsgBox" /> 함수가 호출될 때 메시지 상자가 모달 대화 상자로 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary vsli:raw="Represents a tab character for print and display functions.">인쇄 및 표시 함수의 탭 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary vsli:raw="Indicates that a text comparison should be performed when comparison functions are called.">비교 함수가 호출될 때 텍스트 비교가 수행되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary vsli:raw="Specifies that Thursday should be used as the first day of the week when date-related functions are called.">날짜 관련 함수가 호출될 때 목요일이 해당 주의 첫째 요일로 사용되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary vsli:raw="Indicates that characters should be converted to Traditional Chinese when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 함수가 호출될 때 문자가 중국어 번체로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;Boolean&quot; /&gt; value of &lt;see langword=&quot;True&quot; /&gt; should be used when number-formatting functions are called.">숫자 서식 지정 함수가 호출될 때 <see langword="Boolean" /> 값으로 <see langword="True" />가 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary vsli:raw="Specifies that Tuesday should be used as the first day of the week when date-related functions are called.">날짜 관련 함수가 호출될 때 화요일이 해당 주의 첫째 요일로 사용되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary vsli:raw="Indicates that characters should be converted to uppercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 함수가 호출될 때 문자가 대문자로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary vsli:raw="Indicates that the default &lt;see langword=&quot;Boolean&quot; /&gt; value should be used when number-formatting functions are called.">숫자 서식 지정 함수가 호출될 때 기본 <see langword="Boolean" /> 값이 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary vsli:raw="Indicates that the type of a variant object is a user-defined type. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 사용자 정의 형식임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary vsli:raw="Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.">날짜 관련 함수가 호출될 때 해당 시스템에서 해당 연도의 첫째 주로 지정한 주가 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary vsli:raw="Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.">날짜 관련 함수가 호출될 때 해당 시스템에서 주의 첫째 요일로 지정한 요일이 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Variant&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식이 <see langword="Variant" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary vsli:raw="Represents a carriage-return character for print functions.">인쇄 함수의 캐리지 리턴 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary vsli:raw="Indicates the volume label file attribute for file-access functions.">파일 액세스 함수에 대한 볼륨 레이블 파일 특성을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary vsli:raw="Specifies that Wednesday should be used as the first day of the week when date-related functions are called.">날짜 관련 함수가 호출될 때 수요일이 해당 주의 첫째 요일로 사용되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary vsli:raw="Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">
        <see langword="StrConv" /> 함수가 호출될 때 좁은 문자(싱글바이트)가 넓은 문자(더블바이트)로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">메시지 상자에서 <see langword="Yes" /> 단추가 클릭되었음을 나타냅니다. <see langword="MsgBox" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt; and &lt;see langword=&quot;No&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="Yes" /> 함수가 호출될 때 <see langword="No" /> 및 <see langword="MsgBox" /> 단추가 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt;, &lt;see langword=&quot;No&quot; /&gt;, and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">
        <see langword="Yes" /> 함수가 호출될 때 <see langword="No" />, <see langword="Cancel" /> 및 <see langword="MsgBox" /> 단추가 표시됨을 나타냅니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary vsli:raw="The &lt;see langword=&quot;ControlChars&quot; /&gt; module contains constants used as control characters. These constants can be used anywhere in your code.">
        <see langword="ControlChars" /> 모듈에는 제어 문자로 사용되는 상수가 포함되어 있습니다. 이 상수는 코드의 모든 위치에서 사용할 수 있습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary vsli:raw="Represents a backspace character (&lt;see langword=&quot;vbBack&quot; /&gt;).">백스페이스 문자(<see langword="vbBack" />)를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary vsli:raw="Represents a carriage return character (&lt;see langword=&quot;vbCr&quot; /&gt;).">캐리지 리턴 문자(<see langword="vbCr" />)를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary vsli:raw="Represents a carriage return/linefeed character combination (&lt;see langword=&quot;vbCrLf&quot; /&gt;).">캐리지 리턴/줄 바꿈 문자 조합(<see langword="vbCrLf" />)을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary vsli:raw="Represents a form feed character for print functions (&lt;see langword=&quot;vbFormFeed&quot; /&gt;).">인쇄 함수의 용지 공급 문자(<see langword="vbFormFeed" />)를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary vsli:raw="Represents a line feed character (&lt;see langword=&quot;vbLf&quot; /&gt;).">라인 피드 문자(<see langword="vbLf" />)를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary vsli:raw="Represents a new line character (&lt;see langword=&quot;vbNewLine&quot; /&gt;).">줄 바꿈 문자(<see langword="vbNewLine" />)를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary vsli:raw="Represents a null character (&lt;see langword=&quot;vbNullChar&quot; /&gt;).">null 문자(<see langword="vbNullChar" />)를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary vsli:raw="Represents a double-quote character.">큰따옴표 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary vsli:raw="Represents a tab character (&lt;see langword=&quot;vbTab&quot; /&gt;).">탭 문자(<see langword="vbTab" />)를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary vsli:raw="Represents a vertical tab character (&lt;see langword=&quot;vbVerticalTab&quot; /&gt;).">세로 탭 문자(<see langword="vbVerticalTab" />)를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.ControlChars&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.ControlChars" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary vsli:raw="The &lt;see langword=&quot;Conversion&quot; /&gt; module contains the procedures used to perform various conversion operations.">
        <see langword="Conversion" /> 모듈에는 다양한 변환 작업을 수행하는 데 사용되는 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">개체를 지정된 형식으로 변환합니다.</summary>
      <param name="Expression" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">개체를 변환할 대상 형식입니다.</param>
      <returns vsli:raw="An object whose type at run time is the requested target type.">런타임에서의 형식이 요청된 대상 형식인 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary vsli:raw="Converts an object to the specified generic type.">개체를 지정된 제네릭 형식으로 변환합니다.</summary>
      <param name="Expression" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <typeparam name="TargetType" vsli:raw="The type to which to convert the object.">개체를 변환할 대상 형식입니다.</typeparam>
      <returns vsli:raw="An object statically typed as the requested generic type.">요청된 제네릭 형식으로 정적 형식이 지정된 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary vsli:raw="Returns the error message that corresponds to a given error number.">지정한 오류 번호에 해당하는 오류 메시지를 반환합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ErrorNumber&quot; /&gt; is out of range.">
        <paramref name="ErrorNumber" />이 범위에서 벗어난 경우.</exception>
      <returns vsli:raw="The error message that corresponds to the most recent run-time error.">최근 런타임 오류에 해당하는 오류 메시지입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary vsli:raw="Returns the error message that corresponds to a given error number.">지정한 오류 번호에 해당하는 오류 메시지를 반환합니다.</summary>
      <param name="ErrorNumber" vsli:raw="Optional. Any valid error number.">선택 사항입니다. 유효한 임의의 오류 번호입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ErrorNumber&quot; /&gt; is out of range.">
        <paramref name="ErrorNumber" />이 범위에서 벗어난 경우.</exception>
      <returns vsli:raw="The error message that corresponds to a given error number.">지정한 오류 번호에 해당하는 오류 메시지입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary vsli:raw="Returns the integer portion of a number.">숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Decimal&quot; /&gt; or any valid numeric expression.">필수 요소. <see langword="Decimal" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="The integer portion of a number.">숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary vsli:raw="Returns the integer portion of a number.">숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Double&quot; /&gt; or any valid numeric expression.">필수 요소. <see cref="T:System.Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="The integer portion of a number.">숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary vsli:raw="Returns the integer portion of a number.">숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Short&quot; /&gt; or any valid numeric expression.">필수 요소. <see langword="Short" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="The integer portion of a number.">숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary vsli:raw="Returns the integer portion of a number.">숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Integer&quot; /&gt; or any valid numeric expression.">필수 요소. <see langword="Integer" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="The integer portion of a number.">숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary vsli:raw="Returns the integer portion of a number.">숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Long&quot; /&gt; or any valid numeric expression.">필수 요소. <see langword="Long" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="The integer portion of a number.">숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary vsli:raw="Returns the integer portion of a number.">숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression. If &lt;paramref name=&quot;Number&quot; /&gt; contains &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;Nothing&quot; /&gt; is returned.">필수 요소. <see langword="Object" /> 형식의 수이거나 임의의 유효한 숫자 식입니다. <paramref name="Number" />에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="The integer portion of a number.">숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary vsli:raw="Returns the integer portion of a number.">숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Single&quot; /&gt; or any valid numeric expression.">필수 요소. <see cref="T:System.Single" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="The integer portion of a number.">숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary vsli:raw="Returns the integer portion of a number.">숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Decimal&quot; /&gt; or any valid numeric expression.">필수 요소. <see langword="Decimal" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="The integer portion of a number.">숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary vsli:raw="Returns the integer portion of a number.">숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Double&quot; /&gt; or any valid numeric expression.">필수 요소. <see cref="T:System.Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="The integer portion of a number.">숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary vsli:raw="Returns the integer portion of a number.">숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Short&quot; /&gt; or any valid numeric expression.">필수 요소. <see langword="Short" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="The integer portion of a number.">숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary vsli:raw="Returns the integer portion of a number.">숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Integer&quot; /&gt; or any valid numeric expression.">필수 요소. <see langword="Integer" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="The integer portion of a number.">숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary vsli:raw="Returns the integer portion of a number.">숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Long&quot; /&gt; or any valid numeric expression.">필수 요소. <see langword="Long" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="The integer portion of a number.">숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary vsli:raw="Returns the integer portion of a number.">숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression. If &lt;paramref name=&quot;Number&quot; /&gt; contains &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;Nothing&quot; /&gt; is returned.">필수 요소. <see langword="Object" /> 형식의 수이거나 임의의 유효한 숫자 식입니다. <paramref name="Number" />에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="The integer portion of a number.">숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary vsli:raw="Returns the integer portion of a number.">숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Single&quot; /&gt; or any valid numeric expression.">필수 요소. <see cref="T:System.Single" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="The integer portion of a number.">숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A string representing the octal value of a number.">숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; representation of a number.">숫자를 나타내는 <see langword="String" />을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. An &lt;see langword=&quot;Object&quot; /&gt; containing any valid numeric expression.">필수 요소. 임의의 유효한 숫자 식을 포함하는 <see langword="Object" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representation of a number.">숫자의 <see langword="String" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">문자열에 포함된 숫자를 적절한 형식의 숫자 값으로 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">필수 요소. 모든 유효한 <see langword="String" /> 식, <see langword="Object" /> 변수 또는 <see langword="Char" /> 값입니다. <paramref name="Expression" />이 <see langword="Object" /> 형식인 경우 해당 값을 <see langword="String" />으로 변환할 수 있어야 합니다. 그렇지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" />이 너무 큰 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" />은 <see langword="String" />으로 변환할 수 없는 <see langword="Object" /> 형식의 식인 경우</exception>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">문자열에 포함된 숫자는 적절한 형식의 숫자 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">문자열에 포함된 숫자를 적절한 형식의 숫자 값으로 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">필수 요소. 모든 유효한 <see langword="String" /> 식, <see langword="Object" /> 변수 또는 <see langword="Char" /> 값입니다. <paramref name="Expression" />이 <see langword="Object" /> 형식인 경우 해당 값을 <see langword="String" />으로 변환할 수 있어야 합니다. 그렇지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" />이 너무 큰 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" />은 <see langword="String" />으로 변환할 수 없는 <see langword="Object" /> 형식의 식인 경우</exception>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">문자열에 포함된 숫자는 적절한 형식의 숫자 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">문자열에 포함된 숫자를 적절한 형식의 숫자 값으로 반환합니다.</summary>
      <param name="InputStr" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">필수 요소. 모든 유효한 <see langword="String" /> 식, <see langword="Object" /> 변수 또는 <see langword="Char" /> 값입니다. <paramref name="Expression" />이 <see langword="Object" /> 형식인 경우 해당 값을 <see langword="String" />으로 변환할 수 있어야 합니다. 그렇지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" />이 너무 큰 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" />은 <see langword="String" />으로 변환할 수 없는 <see langword="Object" /> 형식의 식인 경우</exception>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">문자열에 포함된 숫자는 적절한 형식의 숫자 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary vsli:raw="The &lt;see langword=&quot;DateAndTime&quot; /&gt; module contains the procedures and properties used in date and time operations.">
        <see langword="DateAndTime" /> 모듈에는 날짜 및 시간 작업에 사용되는 프로시저와 속성이 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary vsli:raw="Returns a value containing a date and time value to which a specified time interval has been added.">지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값을 반환합니다.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to add.">필수 요소. 추가할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
      <param name="Number" vsli:raw="Required. Floating-point expression representing the number of intervals you want to add. It can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when &lt;paramref name=&quot;Interval&quot; /&gt; specifies hours, minutes, or seconds. For other values of &lt;paramref name=&quot;Interval&quot; /&gt;, any fractional part of &lt;paramref name=&quot;Number&quot; /&gt; is ignored.">필수 요소. 더할 간격의 수를 나타내는 부동 소수점 식입니다. 미래의 날짜/시간 값을 구하는 경우에는 양수이고 과거의 날짜/시간 값을 구하는 경우에는 음수입니다. <paramref name="Interval" />이 시간, 분 또는 초로 지정되는 경우에는 소수 부분이 포함될 수 있습니다. 다른 <paramref name="Interval" /> 값의 경우에 <paramref name="Number" />의 소수 부분은 무시됩니다.</param>
      <param name="DateValue" vsli:raw="Required. An expression representing the date and time to which the interval is to be added. &lt;paramref name=&quot;DateValue&quot; /&gt; itself is not changed in the calling program.">필수 요소. 간격을 더할 날짜와 시간을 나타내는 식입니다. <paramref name="DateValue" /> 자체는 호출 프로그램에서 변경되지 않습니다.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" />가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.">계산된 날짜가 0001년 1월 1일 00:00:00시 이전 또는 9999년 12월 31일 23:59:59시 이후입니다.</exception>
      <returns vsli:raw="A value containing a date and time value to which a specified time interval has been added.">지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary vsli:raw="Returns a value containing a date and time value to which a specified time interval has been added.">지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값을 반환합니다.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to add.">필수 요소. 추가할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
      <param name="Number" vsli:raw="Required. Floating-point expression representing the number of intervals you want to add. &lt;paramref name=&quot;Number&quot; /&gt; can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when &lt;paramref name=&quot;Interval&quot; /&gt; specifies hours, minutes, or seconds. For other values of &lt;paramref name=&quot;Interval&quot; /&gt;, any fractional part of &lt;paramref name=&quot;Number&quot; /&gt; is ignored.">필수 요소. 더할 간격의 수를 나타내는 부동 소수점 식입니다. <paramref name="Number" />는 미래의 날짜/시간 값을 구하는 경우에는 양수이고 과거의 날짜/시간 값을 구하는 경우에는 음수입니다. <paramref name="Interval" />이 시간, 분 또는 초로 지정되는 경우에는 소수 부분이 포함될 수 있습니다. 다른 <paramref name="Interval" /> 값의 경우에 <paramref name="Number" />의 소수 부분은 무시됩니다.</param>
      <param name="DateValue" vsli:raw="Required. An expression representing the date and time to which the interval is to be added. &lt;paramref name=&quot;DateValue&quot; /&gt; itself is not changed in the calling program.">필수 요소. 간격을 더할 날짜와 시간을 나타내는 식입니다. <paramref name="DateValue" /> 자체는 호출 프로그램에서 변경되지 않습니다.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" />가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.">계산된 날짜가 0001년 1월 1일 00:00:00시 이전 또는 9999년 12월 31일 23:59:59시 이후입니다.</exception>
      <returns vsli:raw="A value containing a date and time value to which a specified time interval has been added.">지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Subtracts &lt;paramref name=&quot;Date1&quot; /&gt; from &lt;paramref name=&quot;Date2&quot; /&gt; to give a long value specifying the number of time intervals between the two &lt;see langword=&quot;Date&quot; /&gt; values.">두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값을 반환합니다.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to use as the unit of difference between &lt;paramref name=&quot;Date1&quot; /&gt; and &lt;paramref name=&quot;Date2&quot; /&gt;.">필수 요소. <paramref name="Date1" />과 <paramref name="Date2" /> 사이의 시간차 단위로 사용할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
      <param name="Date1" vsli:raw="Required. The first date/time value you want to use in the calculation.">필수 요소. 계산에 사용할 첫째 날짜/시간 값입니다.</param>
      <param name="Date2" vsli:raw="Required. The second date/time value you want to use in the calculation.">필수 요소. 계산에 사용할 둘째 날짜/시간 값입니다.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">선택 사항입니다. 연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt;, &lt;paramref name=&quot;Date2&quot; /&gt;, or &lt;paramref name=&quot;DayofWeek&quot; /&gt; is out of range.">
        <paramref name="Date1" />, <paramref name="Date2" /> 또는 <paramref name="DayofWeek" />가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt; or &lt;paramref name=&quot;Date2&quot; /&gt; is of an invalid type.">
        <paramref name="Date1" /> 또는 <paramref name="Date2" />가 잘못된 형식입니다.</exception>
      <returns vsli:raw="A long value specifying the number of time intervals between two &lt;see langword=&quot;Date&quot; /&gt; values.">두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Subtracts &lt;paramref name=&quot;Date1&quot; /&gt; from &lt;paramref name=&quot;Date2&quot; /&gt; to give a long value specifying the number of time intervals between the two &lt;see langword=&quot;Date&quot; /&gt; values.">두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값을 반환합니다.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to use as the unit of difference between &lt;paramref name=&quot;Date1&quot; /&gt; and &lt;paramref name=&quot;Date2&quot; /&gt;.">필수 요소. <paramref name="Date1" />과 <paramref name="Date2" /> 사이의 시간차 단위로 사용할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
      <param name="Date1" vsli:raw="Required. The first date/time value you want to use in the calculation.">필수 요소. 계산에 사용할 첫째 날짜/시간 값입니다.</param>
      <param name="Date2" vsli:raw="Required. The second date/time value you want to use in the calculation.">필수 요소. 계산에 사용할 둘째 날짜/시간 값입니다.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">선택 사항입니다. 연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt;, &lt;paramref name=&quot;Date2&quot; /&gt;, or &lt;paramref name=&quot;DayofWeek&quot; /&gt; is out of range.">
        <paramref name="Date1" />, <paramref name="Date2" /> 또는 <paramref name="DayofWeek" />가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt; or &lt;paramref name=&quot;Date2&quot; /&gt; is of an invalid type.">
        <paramref name="Date1" /> 또는 <paramref name="Date2" />가 잘못된 형식입니다.</exception>
      <returns vsli:raw="A long value specifying the number of time intervals between two &lt;see langword=&quot;Date&quot; /&gt; values.">두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Returns an integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">지정된 <see langword="Date" /> 값의 지정된 구성 요소를 포함하는 정수 값을 반환합니다.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the part of the date/time value you want to return.">필수 요소. 반환할 날짜/시간 값의 부분을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
      <param name="DateValue" vsli:raw="Required. The &lt;see langword=&quot;Date&quot; /&gt; value that you want to evaluate.">필수 요소. 계산할 <see langword="Date" /> 값입니다.</param>
      <param name="FirstDayOfWeekValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
      <param name="FirstWeekOfYearValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">선택 사항입니다. 연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" />가 잘못된 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</exception>
      <returns vsli:raw="An integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">지정된 <see langword="Date" /> 값의 지정된 구성 요소가 포함된 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Returns an value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">지정된 <see langword="Date" /> 값의 지정된 구성 요소가 포함된 값을 반환합니다.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the part of the date/time value you want to return.">필수 요소. 반환할 날짜/시간 값의 부분을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value that you want to evaluate.">필수 요소. 계산할 <see langword="Date" /> 값입니다.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">선택 사항입니다. 연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is invalid.">
        <paramref name="Interval" />이 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</exception>
      <returns vsli:raw="An integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">지정된 <see langword="Date" /> 값의 지정된 구성 요소가 포함된 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value representing the specified year, month, and day, with the time information set to midnight (00:00:00).">시간 정보가 자정(00:00:00)으로 설정된 상태에서 지정된 년, 월, 일을 나타내는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="Year" vsli:raw="Required. Integer expression from 1 through 9999. However, values below this range are also accepted. If &lt;paramref name=&quot;Year&quot; /&gt; is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the &quot;Remarks&quot; section. If &lt;paramref name=&quot;Year&quot; /&gt; is less than 1, it is subtracted from the current year.">필수 요소. 1에서 9999까지의 정수 식입니다. 이 범위 아래의 값도 사용할 수 있습니다. <paramref name="Year" />가 0부터 99인 경우에는 아래의 "설명" 단원에 나온 것처럼 1930과 2029 사이의 값으로 해석되며, <paramref name="Year" />가 1보다 작은 경우에는 현재 연도에서 해당 값을 뺍니다.</param>
      <param name="Month" vsli:raw="Required. Integer expression from 1 through 12. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Month&quot; /&gt; is offset by 1 and applied to January of the calculated year. In other words, (&lt;paramref name=&quot;Month&quot; /&gt; - 1) is added to January. The year is recalculated if necessary. The following results illustrate this effect:  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 1, the result is January of the calculated year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 0, the result is December of the previous year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is -1, the result is November of the previous year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 13, the result is January of the following year.">필수 요소. 1에서 12까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다. <paramref name="Month" />의 값은 1만큼 오프셋되어 계산된 연도의 1월에 적용됩니다. 즉, (<paramref name="Month" /> - 1)이 1월에 더해집니다. 필요한 경우에는 연도가 다시 계산됩니다. 다음은 Day 값이 계산된 결과입니다. 
<paramref name="Month" />가 1이면 계산된 연도의 1월입니다.  
  
<paramref name="Month" />가 0이면 이전 연도의 12월입니다.  
  
<paramref name="Month" />가 -1이면 이전 연도의 11월입니다.  
  
<paramref name="Month" />가 13이면 다음 연도의 1월입니다.</param>
      <param name="Day" vsli:raw="Required. Integer expression from 1 through 31. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Day&quot; /&gt; is offset by 1 and applied to the first day of the calculated month. In other words, (&lt;paramref name=&quot;Day&quot; /&gt; - 1) is added to the first of the month. The month and year are recalculated if necessary. The following results illustrate this effect:  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is 1, the result is the first day of the calculated month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is 0, the result is the last day of the previous month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is -1, the result is the penultimate day of the previous month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is past the end of the current month, the result is the appropriate day of the following month. For example, if &lt;paramref name=&quot;Month&quot; /&gt; is 4 and &lt;paramref name=&quot;Day&quot; /&gt; is 31, the result is May 1.">필수 요소. 1에서 31까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다. <paramref name="Day" />의 값은 1만큼 오프셋되어 계산된 월의 1일에 적용됩니다. 즉, (<paramref name="Day" />- 1)이 해당 월의 1일에 더해집니다. 필요한 경우에는 월과 연도가 다시 계산됩니다. 다음은 Day 값이 계산된 결과입니다. 
<paramref name="Day" />가 1이면 계산된 월의 1일입니다.  
  
<paramref name="Day" />가 0이면 이전 월의 마지막 날짜입니다.  
  
<paramref name="Day" />가 -1이면 이전 월의 끝에서 두 번째 날짜입니다.  
  
<paramref name="Day" />가 현재 월의 마지막 날짜 값을 넘으면 다음 월의 해당되는 날짜입니다. 예를 들어, <paramref name="Month" />가 4이고 <paramref name="Day" />가 31이면 5월 1일입니다.</param>
      <returns vsli:raw="A value that represents the specified year, month, and day, with the time information set to midnight (00:00:00).">시간 정보가 자정(00:00:00)으로 설정된 상태에서 지정된 년, 월, 일을 나타내는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value containing the date information represented by a string, with the time information set to midnight (00:00:00).">시간 정보가 자정(00:00:00)으로 설정된 상태에서 문자열로 표시된 날짜 정보가 들어 있는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="StringDate" vsli:raw="Required. string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.">필수 요소. 1년 1월 1일 00:00:00부터 9999년 12월 31일 23:59:59까지의 날짜/시간 값을 나타내는 문자열 식입니다.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;StringDate&quot; /&gt; includes invalid time information.">
        <paramref name="StringDate" />에 잘못된 날짜 정보가 들어 있습니다.</exception>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value containing the date information represented by a string, with the time information set to midnight (00:00:00).">시간 정보가 자정(00:00:00)으로 설정된 상태에서 문자열로 표시된 날짜 정보가 들어 있는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 31 representing the day of the month.">날짜를 나타내는 1에서 31까지의 정수 값을 반환합니다.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the day.">필수 요소. 일을 추출할 <see langword="Date" /> 값입니다.</param>
      <returns vsli:raw="An integer value from 1 through 31 representing the day of the month.">날짜를 나타내는 1에서 31까지의 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 23 representing the hour of the day.">시간을 나타내는 0에서 23까지의 정수 값을 반환합니다.</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the hour.">필수 요소. 시간을 추출할 <see langword="Date" /> 값입니다.</param>
      <returns vsli:raw="An integer value from 0 through 23 representing the hour of the day.">시간을 나타내는 0에서 23까지의 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 59 representing the minute of the hour.">분을 나타내는 0에서 59까지의 정수 값을 반환합니다.</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the minute.">필수 요소. 분을 추출할 <see langword="Date" /> 값입니다.</param>
      <returns vsli:raw="An integer value from 0 through 59 representing the minute of the hour.">분을 나타내는 0에서 59까지의 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 12 representing the month of the year.">월을 나타내는 1에서 12까지의 정수 값을 반환합니다.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the month.">필수 요소. 월을 추출할 <see langword="Date" /> 값입니다.</param>
      <returns vsli:raw="An integer value from 1 through 12 representing the month of the year.">월을 나타내는 1에서 12까지의 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary vsli:raw="Returns a string value containing the name of the specified month.">지정된 월의 이름을 포함하는 문자열 값을 반환합니다.</summary>
      <param name="Month" vsli:raw="Required. The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December. You can use the value 13 with a 13-month calendar. If your system is using a 12-month calendar and &lt;paramref name=&quot;Month&quot; /&gt; is 13, &lt;c&gt;MonthName&lt;/c&gt; returns an empty string.">필수 요소. 1부터 13 사이의 숫자로 지정된 월 이름입니다. 여기서 1은 1월을 나타내고 12는 12월을 나타냅니다. 13개월용 달력의 경우에는 값 13을 사용할 수 있습니다. 시스템에서 12개월용 달력을 사용하는 경우 <paramref name="Month" />가 13이면 <c>MonthName</c>은 빈 문자열을 반환합니다.</param>
      <param name="Abbreviate" vsli:raw="Optional. &lt;see langword=&quot;True&quot; /&gt; to abbreviate the month name; otherwise, &lt;see langword=&quot;False&quot; /&gt;. The default is &lt;see langword=&quot;False&quot; /&gt;.">선택 사항입니다. 월 이름을 축약하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Month&quot; /&gt; is less than 1 or greater than 13.">
        <paramref name="Month" />가 1보다 작거나 13보다 큽니다.</exception>
      <returns vsli:raw="A string value containing the name of the specified month.">지정된 월의 이름을 포함하는 문자열 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 59 representing the second of the minute.">초를 나타내는 0에서 59까지의 정수 값을 반환합니다.</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the second.">필수 요소. 초를 추출할 <see langword="Date" /> 값입니다.</param>
      <returns vsli:raw="An integer value from 0 through 59 representing the second of the minute.">초를 나타내는 0에서 59까지의 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.">날짜 정보가 1년 1월 1일로 설정된 상태에서 지정된 시, 분, 초를 나타내는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="Hour" vsli:raw="Required. Integer expression from 0 through 23. However, values outside this range are also accepted.">필수 요소. 0에서 23까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다.</param>
      <param name="Minute" vsli:raw="Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Minute&quot; /&gt; is added to the calculated hour, so a negative value specifies minutes before that hour.">필수 요소. 0에서 59까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다. <paramref name="Minute" />의 값은 계산된 시간에 더해지므로 음수 값은 계산된 시간에서 이 값만큼 뺀 분을 지정합니다.</param>
      <param name="Second" vsli:raw="Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Second&quot; /&gt; is added to the calculated minute, so a negative value specifies seconds before that minute.">필수 요소. 0에서 59까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다. <paramref name="Second" />의 값은 계산된 분에 더해지므로 음수 값은 계산된 분에서 이 값만큼 뺀 초를 지정합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument is outside the range -2,147,483,648 through 2,147,483,647">인수의 범위가 -2,147,483,648 ~ 2,147,483,647을 벗어났습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated time is less than negative 24 hours.">계산된 시간이 -24 시보다 작습니다.</exception>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.">날짜 정보가 1년 1월 1일로 설정된 상태에서 지정된 시, 분, 초를 나타내는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value containing the time information represented by a string, with the date information set to January 1 of the year 1.">날짜 정보가 1년 1월 1일로 설정된 상태에서 문자열로 표시된 시간 정보가 들어 있는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="StringTime" vsli:raw="Required. A string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.">필수 요소. 1년 1월 1일 00:00:00부터 9999년 12월 31일 23:59:59까지의 날짜/시간 값을 나타내는 문자열 식입니다.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;StringTime&quot; /&gt; includes invalid date information.">
        <paramref name="StringTime" />에 잘못된 날짜 정보가 들어 있습니다.</exception>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value containing the time information represented by a string, with the date information set to January 1 of the year 1.">날짜 정보가 1년 1월 1일로 설정된 상태에서 문자열로 표시된 시간 정보를 포함하는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary vsli:raw="Returns an integer value containing a number representing the day of the week.">요일을 나타내는 숫자를 포함하는 정수 값을 반환합니다.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value for which you want to determine the day of the week.">필수 요소. 요일을 확인할 <see langword="Date" /> 값입니다.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;DayOfWeek&quot; /&gt; is less than 0 or more than 7.">
        <paramref name="DayOfWeek" />가 0보다 작거나 7보다 큽니다.</exception>
      <returns vsli:raw="An integer value containing a number representing the day of the week.">요일을 나타내는 숫자를 포함하는 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary vsli:raw="Returns a string value containing the name of the specified weekday.">지정한 평일의 이름을 포함하는 문자열 값을 반환합니다.</summary>
      <param name="Weekday" vsli:raw="Required. Integer. The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week. The identities of the first and last days depend on the setting of &lt;paramref name=&quot;FirstDayOfWeekValue&quot; /&gt;.">필수 요소. 정수입니다. 형식이며 요일에 대해 지정된 1부터 7까지의 숫자 값입니다. 1은 주의 첫째 요일을 나타내고 7은 주의 마지막 요일을 나타냅니다. 첫째 요일과 마지막 요일은 <paramref name="FirstDayOfWeekValue" />의 설정에 따라 달라집니다.</param>
      <param name="Abbreviate" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value that indicates if the weekday name is to be abbreviated. If omitted, the default is &lt;see langword=&quot;False&quot; /&gt;, which means the weekday name is not abbreviated.">선택 사항입니다. 해당 요일 이름이 약식 이름인지 여부를 나타내는 <see langword="Boolean" /> 값입니다. 이 인수가 생략된 경우 기본값은 <see langword="False" />이며 해당 요일 이름이 약식 이름이 아님을 나타냅니다.</param>
      <param name="FirstDayOfWeekValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see langword=&quot;FirstDayOfWeek.System&quot; /&gt; is used.">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see langword="FirstDayOfWeek.System" />가 사용됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Weekday&quot; /&gt; is less than 1 or greater than 7, or &lt;paramref name=&quot;FirstDayOfWeekValue&quot; /&gt; is less than 0 or greater than 7.">
        <paramref name="Weekday" />가 1-7 범위를 벗어났거나 <paramref name="FirstDayOfWeekValue" />가 0-7 범위를 벗어났습니다.</exception>
      <returns vsli:raw="A string value containing the name of the specified weekday.">지정한 평일의 이름을 포함하는 문자열 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 9999 representing the year.">연도를 나타내는 1에서 9999까지의 정수 값을 반환합니다.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the year.">필수 요소. 연도를 추출할 원래 <see langword="Date" /> 값입니다.</param>
      <returns vsli:raw="An integer value from 1 through 9999 representing the year.">연도를 나타내는 1에서 9999까지의 정수 값입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary vsli:raw="Returns or sets a string value representing the current date according to your system.">시스템의 현재 날짜를 나타내는 문자열 값을 반환하거나 설정합니다.</summary>
      <exception cref="T:System.InvalidCastException" vsli:raw="Invalid format used to set the value of &lt;see cref=&quot;P:Microsoft.VisualBasic.DateAndTime.DateString&quot; /&gt;.">
        <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" /> 값을 설정하는 데 사용된 형식이 잘못되었습니다.</exception>
      <returns vsli:raw="Returns or sets a string value representing the current date according to your system.">시스템의 현재 날짜를 나타내는 문자열 값을 반환하거나 설정합니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary vsli:raw="Returns a value containing the current date and time according to your system.">시스템 설정에 따라 현재 날짜와 시간이 들어 있는 값을 반환합니다.</summary>
      <returns vsli:raw="The current date and time according to your system.">시스템에 따라 현재 날짜 및 시간입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current time of day according to your system.">시스템 설정에 따라 현재 시간이 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current time of day according to your system.">시스템 설정에 따라 현재 시간이 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value representing the number of seconds elapsed since midnight.">자정 이후 경과된 초 수를 나타내는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
      <returns vsli:raw="A value representing the number of seconds elapsed since midnight.">자정 이후 경과 된 시간 (초)을 나타내는 값입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary vsli:raw="Returns or sets a string value representing the current time of day according to your system.">시스템의 현재 시간을 나타내는 문자열 값을 반환하거나 설정합니다.</summary>
      <exception cref="T:System.InvalidCastException" vsli:raw="Invalid format used to set the value of &lt;see langword=&quot;TimeString&quot; /&gt;.">
        <see langword="TimeString" /> 값을 설정하는 데 사용된 형식이 잘못되었습니다.</exception>
      <returns vsli:raw="Returns or sets a string value representing the current time of day according to your system.">시스템의 현재 시간을 나타내는 문자열 값을 반환하거나 설정합니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current date according to your system.">사용 중인 시스템에 따라 현재 날짜가 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current date according to your system.">사용 중인 시스템에 따라 현재 날짜가 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary vsli:raw="Indicates how to display dates when calling the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function.">
        <see langword="FormatDateTime" /> 함수를 호출할 때 날짜가 표시되는 방법을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary vsli:raw="For real numbers, displays a date and time. If the number has no fractional part, displays only a date. If the number has no integer part, displays time only. Date and time display is determined by your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbGeneralDate&quot; /&gt;.">실수로 날짜와 시간을 표시합니다. 숫자에 소수 부분이 없으면 날짜만 표시합니다. 숫자에 정수 부분이 없으면 시간만 표시합니다. 날짜와 시간은 시스템의 국가별 설정에 따라 결정됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbGeneralDate" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary vsli:raw="Displays a date using the long-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLongDate&quot; /&gt;.">시스템의 국가별 설정에 지정된 자세한 날짜 형식을 사용하여 날짜를 표시합니다. 이 멤버는 Visual Basic 상수 <see langword="vbLongDate" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary vsli:raw="Displays a time using the long-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLongTime&quot; /&gt;.">시스템의 국가별 설정에 지정된 자세한 시간 형식을 사용하여 시간을 표시합니다. 이 멤버는 Visual Basic 상수 <see langword="vbLongTime" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary vsli:raw="Displays a date using the short-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbShortDate&quot; /&gt;.">시스템의 국가별 설정에 지정된 간단한 날짜 형식을 사용하여 날짜를 표시합니다. 이 멤버는 Visual Basic 상수 <see langword="vbShortDate" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary vsli:raw="Displays a time using the short-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbShortTime&quot; /&gt;.">시스템의 국가별 설정에 지정된 간단한 시간 형식을 사용하여 시간을 표시합니다. 이 멤버는 Visual Basic 상수 <see langword="vbShortTime" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary vsli:raw="Indicates how to determine and format date intervals when calling date-related functions.">날짜 관련 함수를 호출할 때 날짜 간격을 결정하고 형식을 지정하는 방법을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary vsli:raw="Day of month (1 through 31)">월간 일자(1~31)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary vsli:raw="Day of year (1 through 366)">연간 일자(1~366)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary vsli:raw="Hour (0 through 23)">시간(0~23)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary vsli:raw="Minute (0 through 59)">분(0~59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary vsli:raw="Month (1 through 12)">월(1~12)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary vsli:raw="Quarter of year (1 through 4)">연간 사분기(1~4)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary vsli:raw="Second (0 through 59)">초(0~59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary vsli:raw="Day of week (1 through 7)">요일(1~7)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary vsli:raw="Week of year (1 through 53)">연간 주(1~53)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary vsli:raw="Year.">Year</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary vsli:raw="Indicates when payments are due when calling financial methods.">금융 메서드를 호출할 때 지불 만기일을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary vsli:raw="Falls at the beginning of the date interval.">날짜 간격의 시작 지점에 위치합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary vsli:raw="Falls at the end of the date interval.">날짜 간격의 끝 지점에 위치합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary vsli:raw="The &lt;see langword=&quot;ErrObject&quot; /&gt; module contains properties and procedures used to identify and handle run-time errors using the &lt;see langword=&quot;Err&quot; /&gt; object.">
        <see langword="ErrObject" /> 모듈에는 <see langword="Err" /> 개체를 사용하여 런타임 오류를 식별하고 처리하는 속성과 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary vsli:raw="Clears all property settings of the &lt;see langword=&quot;Err&quot; /&gt; object.">
        <see langword="Err" /> 개체의 모든 속성 설정을 지웁니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary vsli:raw="Returns the exception representing the error that occurred.">발생한 오류를 나타내는 예외를 반환합니다.</summary>
      <returns vsli:raw="The exception representing the error that occurred.">발생한 오류를 나타내는 예외입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary vsli:raw="Generates a run-time error; can be used instead of the &lt;see langword=&quot;Error&quot; /&gt; statement.">런타임 오류를 생성하며 <see langword="Error" /> 문 대신 사용할 수 있습니다.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Long&quot; /&gt; integer that identifies the nature of the error. Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors. When setting the &lt;see langword=&quot;Number&quot; /&gt; property to your own error code in a class module, you add your error code number to the &lt;see langword=&quot;vbObjectError&quot; /&gt; constant. For example, to generate the error number 513, assign &lt;c&gt;vbObjectError + 513&lt;/c&gt; to the &lt;see langword=&quot;Number&quot; /&gt; property.">필수 요소. 오류의 속성을 식별하는 <see langword="Long" /> 형식의 정수입니다. Visual Basic 오류의 범위는 0~65535 사이이며, 0~512 사이의 범위는 시스템 오류로 예약되어 있고, 513~65535 사이의 범위는 사용자 정의 오류로 사용할 수 있습니다. <see langword="Number" /> 속성을 클래스 모듈의 사용자 고유 오류 코드로 설정하는 경우 <see langword="vbObjectError" /> 상수에 사용자의 오류 코드 번호를 추가합니다. 예를 들어, 513 오류 번호를 생성하려면 <c>vbObjectError + 513</c>을 <see langword="Number" /> 속성에 할당합니다.</param>
      <param name="Source" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression naming the object or application that generated the error. When setting this property for an object, use the form &lt;c&gt;project&lt;/c&gt;.&lt;c&gt;class&lt;/c&gt;. If &lt;paramref name=&quot;Source&quot; /&gt; is not specified, the process ID of the current Visual Basic project is used.">선택 사항입니다. 오류를 생성한 개체 또는 애플리케이션의 이름을 지정하는 <see langword="String" /> 식입니다. 개체에 대해 이 속성을 설정할 때는 <c>project</c>.<c>class</c> 형식을 사용합니다. <paramref name="Source" />가 지정되어 있지 않으면 현재 Visual Basic 프로젝트의 프로세스 ID가 사용됩니다.</param>
      <param name="Description" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression describing the error. If unspecified, the value in the &lt;see langword=&quot;Number&quot; /&gt; property is examined. If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the &lt;see langword=&quot;Error&quot; /&gt; function is used as the &lt;see langword=&quot;Description&quot; /&gt; property. If there is no Visual Basic error corresponding to the &lt;see langword=&quot;Number&quot; /&gt; property, the &quot;Application-defined or object-defined error&quot; message is used.">선택 사항입니다. 오류를 설명하는 <see langword="String" /> 식입니다. 이 인수가 지정되지 않으면 <see langword="Number" /> 속성의 값이 검사됩니다. Visual Basic 런타임 오류 코드에 매핑될 수 있는 경우 <see langword="Error" /> 함수로 반환되는 문자열이 <see langword="Description" /> 속성으로 사용됩니다. <see langword="Number" /> 속성과 일치하는 Visual Basic 오류가 없으면 "애플리케이션 정의 또는 개체 정의 오류입니다."라는 메시지가 사용됩니다.</param>
      <param name="HelpFile" vsli:raw="Optional. The fully qualified path to the Help file in which help on this error can be found. If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.">선택 사항입니다. 이 오류에 대한 도움말을 찾을 수 있는 도움말 파일의 정규화된 경로입니다. 이 인수가 지정되지 않으면 Visual Basic은 Visual Basic 도움말 파일의 정규화된 드라이브, 경로 및 파일 이름을 사용합니다.</param>
      <param name="HelpContext" vsli:raw="Optional. The context ID identifying a topic within &lt;paramref name=&quot;HelpFile&quot; /&gt; that provides help for the error. If omitted, the Visual Basic Help-file context ID for the error corresponding to the &lt;see langword=&quot;Number&quot; /&gt; property is used, if it exists.">선택 사항입니다. 오류에 대한 도움말이 제공되는 <paramref name="HelpFile" /> 내의 항목을 식별하는 컨텍스트 ID입니다. 이 인수가 생략된 경우 <see langword="Number" /> 속성에 해당하는 오류의 Visual Basic 도움말 파일 컨텍스트 ID가 있으면 해당 ID가 사용됩니다.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing a descriptive string associated with an error. Read/write.">오류와 연결된 설명 문자열을 포함하는 <see langword="String" /> 식을 반환하거나 설정합니다. 읽기/쓰기입니다.</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing a descriptive string associated with an error. Read/write.">오류와 연결된 설명 문자열을 포함하는 <see langword="String" /> 식을 반환하거나 설정합니다. 읽기/쓰기입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary vsli:raw="Gets an integer indicating the line number of the last executed statement.">마지막으로 실행된 문의 줄 번호를 나타내는 정수를 가져옵니다.</summary>
      <returns vsli:raw="The line number of the last executed statement.">마지막으로 실행 된 문의 줄 번호입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpContext">
      <summary vsli:raw="Returns or sets an &lt;see langword=&quot;Integer&quot; /&gt; containing the context ID for a topic in a Help file. Read/write.">도움말 파일 항목의 컨텍스트 ID를 포함하는 <see langword="Integer" />를 반환하거나 설정합니다. 읽기/쓰기입니다.</summary>
      <returns vsli:raw="Returns or sets an &lt;see langword=&quot;Integer&quot; /&gt; containing the context ID for a topic in a Help file. Read/write.">도움말 파일 항목의 컨텍스트 ID를 포함하는 <see langword="Integer" />를 반환하거나 설정합니다. 읽기/쓰기입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpFile">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing the fully qualified path to a Help file. Read/write.">도움말 파일의 정규화된 경로를 포함하는 <see langword="String" /> 식을 반환하거나 설정합니다. 읽기/쓰기입니다.</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing the fully qualified path to a Help file. Read/write.">도움말 파일의 정규화된 경로를 포함하는 <see langword="String" /> 식을 반환하거나 설정합니다. 읽기/쓰기입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary vsli:raw="Gets a system error code produced by a call to a dynamic-link library (DLL).">DLL(동적 연결 라이브러리)을 호출하는 경우 생성되는 시스템 오류 코드를 가져옵니다.</summary>
      <returns vsli:raw="A system error code produced by a call to a dynamic-link library (DLL).">DLL (동적 연결 라이브러리)을 호출 하 여 생성 된 시스템 오류 코드입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary vsli:raw="Returns or sets a numeric value specifying an error. Read/write.">오류를 지정하는 숫자 값을 반환하거나 설정합니다. 읽기/쓰기입니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is greater than 65535.">
        <paramref name="Number" />가 65535보다 큽니다.</exception>
      <returns vsli:raw="Returns or sets a numeric value specifying an error. Read/write.">오류를 지정하는 숫자 값을 반환하거나 설정합니다. 읽기/쓰기입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Source">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression specifying the name of the object or application that originally generated the error. Read/write.">오류를 생성한 원래 개체 또는 애플리케이션의 이름을 지정하는 <see langword="String" /> 식을 반환하거나 설정합니다. 읽기/쓰기입니다.</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression specifying the name of the object or application that originally generated the error. Read/write.">오류를 생성한 원래 개체 또는 애플리케이션의 이름을 지정하는 <see langword="String" /> 식을 반환하거나 설정합니다. 읽기/쓰기입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary vsli:raw="Indicates the file attributes to use when calling file-access functions.">파일 액세스 함수를 호출할 때 사용할 파일 특성을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary vsli:raw="File has changed since last backup. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbArchive&quot; /&gt;.">마지막 백업 이후에 파일이 변경되었습니다. 이 멤버는 Visual Basic 상수 <see langword="vbArchive" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary vsli:raw="Directory or folder. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDirectory&quot; /&gt;.">디렉터리 또는 폴더입니다. 이 멤버는 Visual Basic 상수 <see langword="vbDirectory" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary vsli:raw="Hidden. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHidden&quot; /&gt;.">숨겨져 있습니다. 이 멤버는 Visual Basic 상수 <see langword="vbHidden" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary vsli:raw="Normal (default for &lt;see langword=&quot;Dir&quot; /&gt; and &lt;see langword=&quot;SetAttr&quot; /&gt;). No special characteristics apply to this file. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormal&quot; /&gt;.">표준(<see langword="Dir" /> 및 <see langword="SetAttr" />의 기본값)입니다. 이 파일에는 별도의 특성이 적용되지 않습니다. 이 멤버는 Visual Basic 상수 <see langword="vbNormal" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary vsli:raw="Read only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbReadOnly&quot; /&gt;.">읽기 전용입니다. 이 멤버는 Visual Basic 상수 <see langword="vbReadOnly" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary vsli:raw="System file. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSystem&quot; /&gt;.">시스템 파일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbSystem" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary vsli:raw="Volume label. This attribute is not valid when used with &lt;see langword=&quot;SetAttr&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbVolume&quot; /&gt;.">볼륨 레이블입니다. 이 특성은 <see langword="SetAttr" />와 함께 사용할 수 없습니다. 이 멤버는 Visual Basic 상수 <see langword="vbVolume" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary vsli:raw="Specifies what should be done when a directory that is to be deleted contains files or directories.">삭제될 디렉터리에 파일이나 디렉터리가 포함된 경우 수행해야 하는 작업을 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary vsli:raw="Delete the contents of the directory along with the directory. Default.">디렉터리와 함께 디렉터리의 내용을 삭제합니다. 기본.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary vsli:raw="Throw an &lt;see cref=&quot;T:System.IO.IOException&quot; /&gt; if the directory is not empty. The &lt;see langword=&quot;Data&quot; /&gt; property of the exception lists the file(s) that could not be deleted.">디렉터리가 비어 있지 않은 경우 <see cref="T:System.IO.IOException" />을 throw합니다. 예외의 <see langword="Data" /> 속성은 삭제할 수 없는 파일을 나열합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary vsli:raw="Indicates whether text fields are delimited or fixed width.">텍스트 필드가 구분되는지 또는 고정된 너비인지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary vsli:raw="Indicates that the fields are delimited.">필드가 구분됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary vsli:raw="Indicates that the fields are fixed width.">필드가 고정 너비임을 나타냅니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary vsli:raw="Provides properties and methods for working with drives, files, and directories.">드라이브, 파일 및 디렉터리를 사용하기 위한 속성 및 메서드를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary vsli:raw="Combines two paths and returns a properly formatted path.">두 경로를 결합하여 올바른 형식의 경로를 반환합니다.</summary>
      <param name="baseDirectory" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. First path to be combined.">
        <see langword="String" />. 결합할 첫 번째 경로입니다.</param>
      <param name="relativePath" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Second path to be combined.">
        <see langword="String" />. 결합할 두 번째 경로입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;baseDirectory&quot; /&gt; or &lt;paramref name=&quot;relativePath&quot; /&gt; are malformed paths.">
        <paramref name="baseDirectory" /> 또는  <paramref name="relativePath" />에 잘못된 경로가 있습니다.</exception>
      <returns vsli:raw="The combination of the specified paths.">지정된 경로의 조합입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">디렉터리의 내용을 다른 디렉터리에 복사합니다.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">복사할 디렉터리입니다.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">디렉터리 내용이 복사될 위치입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">소스 디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">소스 경로와 대상 경로가 같은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">작업이 순환적인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">경로의 폴더 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">대상 파일은 있지만 액세스할 수 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">디렉터리의 내용을 다른 디렉터리에 복사합니다.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">복사할 디렉터리입니다.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">디렉터리 내용이 복사될 위치입니다.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">작업 진행을 시각적으로 추적할지 여부입니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">소스 디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">소스 경로와 대상 경로가 같은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">작업이 순환적인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">경로의 폴더 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">대상 파일은 있지만 액세스할 수 없는 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;ShowUI&quot; /&gt; is set to &lt;see langword=&quot;UIOption.AllDialogs&quot; /&gt; and the user cancels the operation, or one or more files in the directory cannot be copied.">
        <paramref name="ShowUI" />가 <see langword="UIOption.AllDialogs" />로 설정되어 있는데 사용자가 작업을 취소했거나 디렉터리에서 하나 이상의 파일을 복사할 수 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">디렉터리의 내용을 다른 디렉터리에 복사합니다.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">복사할 디렉터리입니다.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">디렉터리 내용이 복사될 위치입니다.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">작업 진행을 시각적으로 추적할지 여부입니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="onUserCancel" vsli:raw="Specifies what should be done if the user clicks Cancel during the operation. Default is &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">작업 중에 사용자가 취소 를 클릭 하는 경우 수행할 작업을 지정 합니다. 기본값은 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">소스 디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">소스 경로와 대상 경로가 같은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">작업이 순환적인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">경로의 폴더 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">대상 파일은 있지만 액세스할 수 없는 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;ShowUI&quot; /&gt; is set to &lt;see langword=&quot;UIOption.AllDialogs&quot; /&gt; and the user cancels the operation, or one or more files in the directory cannot be copied.">
        <paramref name="ShowUI" />가 <see langword="UIOption.AllDialogs" />로 설정되어 있는데 사용자가 작업을 취소했거나 디렉터리에서 하나 이상의 파일을 복사할 수 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">디렉터리의 내용을 다른 디렉터리에 복사합니다.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">복사할 디렉터리입니다.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">디렉터리 내용이 복사될 위치입니다.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to overwrite existing files; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">기존 파일을 덮어쓰려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">소스 디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">소스 경로와 대상 경로가 같은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">작업이 순환적인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">경로의 폴더 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">대상 파일은 있지만 액세스할 수 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary vsli:raw="Copies a file to a new location.">파일을 새 위치에 복사합니다.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">복사할 파일입니다.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">파일을 복사할 대상 위치입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" />에 경로 정보가 포함된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 또는 <paramref name="sourceFileName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the target directory with the same name is in use.">대상 디렉터리에서 같은 이름의 파일이 사용 중인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Copies a file to a new location.">파일을 새 위치에 복사합니다.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">복사할 파일입니다.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">파일을 복사할 대상 위치입니다.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">작업 진행을 시각적으로 추적할지 여부입니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" />에 경로 정보가 포함된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 또는 <paramref name="sourceFileName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">대상 파일이 있고 <paramref name="overwrite" />가 <see langword="False" />로 설정된 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Copies a file to a new location.">파일을 새 위치에 복사합니다.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">복사할 파일입니다.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">파일을 복사할 대상 위치입니다.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">작업 진행을 시각적으로 추적할지 여부입니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="onUserCancel" vsli:raw="Specifies what should be done if the user clicks Cancel during the operation. Default is &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">작업 중에 사용자가 취소 를 클릭 하는 경우 수행할 작업을 지정 합니다. 기본값은 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" />에 경로 정보가 포함된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 또는 <paramref name="sourceFileName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">대상 파일이 있고 <paramref name="overwrite" />가 <see langword="False" />로 설정된 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;UICancelOption&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and the user has canceled the operation or an unspecified I/O error occurs.">
        <paramref name="UICancelOption" />이 <see langword="ThrowException" />으로 설정된 상태에서 사용자가 작업을 취소했거나 지정되지 않은 I/O 오류가 발생한 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Copies a file to a new location.">파일을 새 위치에 복사합니다.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">복사할 파일입니다.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">파일을 복사할 대상 위치입니다.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if existing files should be overwritten; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">기존 파일을 덮어써야 하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" />에 경로 정보가 포함된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 또는 <paramref name="sourceFileName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">대상 파일이 있고 <paramref name="overwrite" />가 <see langword="False" />로 설정된 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary vsli:raw="Creates a directory.">디렉터리를 만듭니다.</summary>
      <param name="directory" vsli:raw="Name and location of the directory.">디렉터리의 이름과 위치입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The directory name is malformed. For example, it contains illegal characters or is only white space.">디렉터리 이름 형식이 잘못된 경우. 예를 들어, 파일 이름에 잘못된 문자가 들어 있거나 파일 이름이 공백인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The directory name is too long.">디렉터리 이름이 너무 긴 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name is only a colon (:).">디렉터리 이름이 콜론(:)인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The parent directory of the directory to be created is read-only.">만들 디렉터리의 부모 디렉터리가 읽기 전용인 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to create the directory.">사용자에게 디렉터리를 만들 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary vsli:raw="Deletes a directory.">디렉터리를 삭제합니다.</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">삭제할 디렉터리입니다.</param>
      <param name="onDirectoryNotEmpty" vsli:raw="Specifies what should be done when a directory that is to be deleted contains files or directories. Default is &lt;see langword=&quot;DeleteDirectoryOption.DeleteAllContents&quot; /&gt;.">삭제될 디렉터리에 파일이나 디렉터리가 포함된 경우 수행해야 하는 작업을 지정합니다. 기본값은 <see langword="DeleteDirectoryOption.DeleteAllContents" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">경로가 길이가 0인 문자열이거나, 형식이 잘못되었거나, 공백만 포함하거나, 와일드카드 문자를 비롯한 잘못된 문자를 포함하는 경우 경로가 \\.\로 시작하는 디바이스 경로인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">디렉터리가 없거나 파일인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">디렉터리나 하위 디렉터리의 파일이 사용되고 있는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">디렉터리 이름에 콜론(:)이 포함됩니다.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">사용자가 작업을 취소했거나 디렉터리를 삭제할 수 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary vsli:raw="Deletes a directory.">디렉터리를 삭제합니다.</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">삭제할 디렉터리입니다.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">작업 진행을 시각적으로 추적할지 여부를 지정합니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="recycle" vsli:raw="Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">삭제 된 파일을 휴지통으로 보낼지 여부를 지정 합니다. 기본값은 <see langword="RecycleOption.DeletePermanently" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">경로가 길이가 0인 문자열이거나, 형식이 잘못되었거나, 공백만 포함하거나, 와일드카드 문자를 비롯한 잘못된 문자를 포함하는 경우 경로가 \\.\로 시작하는 디바이스 경로인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">디렉터리가 없거나 파일인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">디렉터리나 하위 디렉터리의 파일이 사용되고 있는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">디렉터리 이름에 콜론(:)이 포함됩니다.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">사용자가 작업을 취소했거나 디렉터리를 삭제할 수 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Deletes a directory.">디렉터리를 삭제합니다.</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">삭제할 디렉터리입니다.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">작업 진행을 시각적으로 추적할지 여부를 지정합니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="recycle" vsli:raw="Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">삭제 된 파일을 휴지통으로 보낼지 여부를 지정 합니다. 기본값은 <see langword="RecycleOption.DeletePermanently" />입니다.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether to throw an exception if the user clicks Cancel.">사용자가 취소를 클릭 하는 경우 예외를 throw 할지 여부를 지정 합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">경로가 길이가 0인 문자열이거나, 형식이 잘못되었거나, 공백만 포함하거나, 와일드카드 문자를 비롯한 잘못된 문자를 포함하는 경우 경로가 \\.\로 시작하는 디바이스 경로인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">디렉터리가 없거나 파일인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">디렉터리나 하위 디렉터리의 파일이 사용되고 있는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">디렉터리 이름에 콜론(:)이 포함됩니다.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">사용자가 작업을 취소했거나 디렉터리를 삭제할 수 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary vsli:raw="Deletes a file.">파일을 삭제합니다.</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">삭제할 파일의 이름과 경로입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 파일을 지정해야 하는 경로 마지막에 슬래시가 있거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">파일이 사용 중인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">파일이 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">사용자에게 파일을 삭제할 권한이 없거나 파일이 읽기 전용인 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary vsli:raw="Deletes a file.">파일을 삭제합니다.</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">삭제할 파일의 이름과 경로입니다.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">작업 진행을 시각적으로 추적할지 여부입니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="recycle" vsli:raw="Whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">삭제 된 파일을 휴지통으로 보낼지 여부를 지정 합니다. 기본값은 <see langword="RecycleOption.DeletePermanently" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 파일을 지정해야 하는 경로 마지막에 슬래시가 있거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">파일이 사용 중인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">파일이 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">사용자에게 파일을 삭제할 권한이 없거나 파일이 읽기 전용인 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Deletes a file.">파일을 삭제합니다.</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">삭제할 파일의 이름과 경로입니다.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">작업 진행을 시각적으로 추적할지 여부입니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="recycle" vsli:raw="Whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">삭제 된 파일을 휴지통으로 보낼지 여부를 지정 합니다. 기본값은 <see langword="RecycleOption.DeletePermanently" />입니다.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">사용자가 작업을 취소하는 경우 예외를 throw할지 여부를 지정합니다. 기본값은 <see langword="UICancelOption.ThrowException" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 파일을 지정해야 하는 경로 마지막에 슬래시가 있거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">파일이 사용 중인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">파일이 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">사용자에게 파일을 삭제할 권한이 없거나 파일이 읽기 전용인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancelled the operation and &lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">사용자가 작업을 취소했고 <paramref name="onUserCancel" />이 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />으로 설정된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the specified directory exists.">지정된 디렉터리가 있으면 <see langword="True" />를 반환합니다.</summary>
      <param name="directory" vsli:raw="Path of the directory.">디렉터리 경로입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the directory exists; otherwise &lt;see langword=&quot;False&quot; /&gt;. This method also returns &lt;see langword=&quot;False&quot; /&gt; if the parameter represents the name and path of a file rather than a directory.">디렉터리가 있으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 매개 변수가 디렉터리가 아닌 파일의 이름 및 경로를 나타내는 경우에도 이 메서드는 <see langword="False" />를 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the specified file exists.">지정된 파일이 있으면 <see langword="True" />를 반환합니다.</summary>
      <param name="file" vsli:raw="Name and path of the file.">파일의 이름과 경로입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name of the file ends with a backslash (\).">파일의 이름이 백슬래시(\)로 끝나는 경우</exception>
      <returns vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the file exists; otherwise this method returns &lt;see langword=&quot;False&quot; /&gt;. This method also returns &lt;see langword=&quot;False&quot; /&gt; if the parameter represents the path of a directory rather than a file.">이 메서드는 해당 파일이 있으면 <see langword="True" />를 반환하고, 그렇지 않으면 <see langword="False" />를 반환합니다. 매개 변수가 파일이 아닌 디렉터리의 경로를 나타내는 경우에도 이 메서드는 <see langword="False" />를 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files containing the specified text.">지정된 텍스트를 포함하는 파일 이름을 나타내는 문자열의 읽기 전용 컬렉션을 반환합니다.</summary>
      <param name="directory" vsli:raw="The directory to be searched.">검색할 디렉터리입니다.</param>
      <param name="containsText" vsli:raw="The search text.">검색 텍스트입니다.</param>
      <param name="ignoreCase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the search should be case-sensitive; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;True&quot; /&gt;.">검색 시 대/소문자를 구분해야 하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="True" />입니다.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">하위 폴더를 포함할지 여부입니다. 기본값은 <see langword="SearchOption.SearchTopLevelOnly" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with &lt;c&gt;\\.\&lt;/c&gt;).">길이가 0 인 문자열인 경우에는 경로가 유효 하지 않습니다. 공백만 포함 합니다. 잘못 된 문자가 포함 되어 있습니다. 또는 <c> \\ . \</c>로 시작 하는 장치 경로입니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">지정한 디렉터리가 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">지정한 디렉터리가 기존 파일을 가리킵니다.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified directory path contains a colon (:) or is in an invalid format.">지정한 디렉터리 경로에 콜론(:)이 포함되어 있거나 잘못된 형식입니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">사용자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="Read-only collection of the names of files containing the specified text.">지정된 텍스트가 들어 있는 파일 이름의 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files containing the specified text.">지정된 텍스트를 포함하는 파일 이름을 나타내는 문자열의 읽기 전용 컬렉션을 반환합니다.</summary>
      <param name="directory" vsli:raw="The directory to be searched.">검색할 디렉터리입니다.</param>
      <param name="containsText" vsli:raw="The search text.">검색 텍스트입니다.</param>
      <param name="ignoreCase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the search should be case-sensitive; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;True&quot; /&gt;.">검색 시 대/소문자를 구분해야 하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="True" />입니다.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">하위 폴더를 포함할지 여부입니다. 기본값은 <see langword="SearchOption.SearchTopLevelOnly" />입니다.</param>
      <param name="fileWildcards" vsli:raw="Pattern to be matched.">일치할 패턴입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with &lt;c&gt;\\.\&lt;/c&gt;).">길이가 0 인 문자열인 경우에는 경로가 유효 하지 않습니다. 공백만 포함 합니다. 잘못 된 문자가 포함 되어 있습니다. 또는 <c> \\ . \</c>로 시작 하는 장치 경로입니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">지정한 디렉터리가 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">지정한 디렉터리가 기존 파일을 가리킵니다.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified directory path contains a colon (:) or is in an invalid format.">지정한 디렉터리 경로에 콜론(:)이 포함되어 있거나 잘못된 형식입니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">사용자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="Read-only collection of the names of files containing the specified text.">지정된 텍스트가 들어 있는 파일 이름의 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary vsli:raw="Returns a collection of strings representing the path names of subdirectories within a directory.">디렉터리에 있는 하위 디렉터리의 경로 이름을 나타내는 문자열 컬렉션을 반환합니다.</summary>
      <param name="directory" vsli:raw="Name and path of directory.">디렉터리의 이름과 경로입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">지정한 디렉터리가 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">지정한 디렉터리가 기존 파일을 가리킵니다.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">사용자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="Read-only collection of the path names of subdirectories within the specified directory.">지정된 디렉터리 안에 있는 하위 디렉터리의 경로 이름으로 구성된 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a collection of strings representing the path names of subdirectories within a directory.">디렉터리에 있는 하위 디렉터리의 경로 이름을 나타내는 문자열 컬렉션을 반환합니다.</summary>
      <param name="directory" vsli:raw="Name and path of directory.">디렉터리의 이름과 경로입니다.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">하위 폴더를 포함할지 여부입니다. 기본값은 <see langword="SearchOption.SearchTopLevelOnly" />입니다.</param>
      <param name="wildcards" vsli:raw="Pattern to match names.">이름을 일치시킬 패턴입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the specified wildcard characters is &lt;see langword=&quot;Nothing&quot; /&gt;, an empty string, or contains only spaces.">지정한 와일드카드 문자 중 하나 이상이 <see langword="Nothing" />이거나, 빈 문자열이거나, 공백만 있는 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">지정한 디렉터리가 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">지정한 디렉터리가 기존 파일을 가리킵니다.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">사용자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="Read-only collection of the path names of subdirectories within the specified directory.">지정된 디렉터리 안에 있는 하위 디렉터리의 경로 이름으로 구성된 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.DirectoryInfo&quot; /&gt; object for the specified path.">지정한 경로에 대한 <see cref="T:System.IO.DirectoryInfo" /> 개체를 반환합니다.</summary>
      <param name="directory" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Path of directory.">
        <see langword="String" />. 디렉터리 경로입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory path contains a colon (:) or is in an invalid format.">디렉터리 경로에 콜론(:)이 포함되어 있거나 잘못된 형식입니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.DirectoryInfo&quot; /&gt; object for the specified path.">지정된 경로에 대한 <see cref="T:System.IO.DirectoryInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; object for the specified drive.">지정한 드라이브에 대한 <see cref="T:System.IO.DriveInfo" /> 개체를 반환합니다.</summary>
      <param name="drive" vsli:raw="Drive to be examined.">검사할 드라이브입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;drive&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="drive" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; object for the specified drive.">지정된 드라이브에 대한 <see cref="T:System.IO.DriveInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.FileInfo&quot; /&gt; object for the specified file.">지정한 파일에 대한 <see cref="T:System.IO.FileInfo" /> 개체를 반환합니다.</summary>
      <param name="file" vsli:raw="Name and path of the file.">파일의 이름과 경로입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path name is malformed. For example, it contains invalid characters or is only white space. The file name has a trailing slash mark.">경로 이름 형식이 잘못되었습니다. 예를 들어 파일 이름에 잘못된 문자가 들어 있거나 공백이 있을 수 있습니다. 파일 이름 마지막에 슬래시가 있는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The path contains a colon in the middle of the string.">경로에서 문자열 중간에 콜론이 포함된 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path is too long.">경로가 너무 깁니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions.">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks ACL (access control list) access to the file.">사용자에게 파일에 대한 ACL(액세스 제어 목록) 액세스 권한이 없는 경우</exception>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.FileInfo&quot; /&gt; object for the specified file.">지정된 파일에 대한 <see cref="T:System.IO.FileInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files within a directory.">디렉터리에 있는 파일 이름을 나타내는 문자열의 읽기 전용 컬렉션을 반환합니다.</summary>
      <param name="directory" vsli:raw="Directory to be searched.">검색할 디렉터리입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="directory" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to search does not exist.">검색할 디렉터리가 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; points to an existing file.">
        <paramref name="directory" />가 기존 파일을 가리키는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">사용자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="Read-only collection of file names from the specified directory.">지정된 디렉터리에 있는 파일 이름의 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files within a directory.">디렉터리에 있는 파일 이름을 나타내는 문자열의 읽기 전용 컬렉션을 반환합니다.</summary>
      <param name="directory" vsli:raw="Directory to be searched.">검색할 디렉터리입니다.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">하위 폴더를 포함할지 여부입니다. 기본값은 <see langword="SearchOption.SearchTopLevelOnly" />입니다.</param>
      <param name="wildcards" vsli:raw="Pattern to be matched.">일치할 패턴입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="directory" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to search does not exist.">검색할 디렉터리가 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; points to an existing file.">
        <paramref name="directory" />가 기존 파일을 가리키는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">사용자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="Read-only collection of file names from the specified directory.">지정된 디렉터리에 있는 파일 이름의 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary vsli:raw="Parses the file name out of the path provided.">제공된 경로에서 파일 이름을 구문 분석합니다.</summary>
      <param name="path" vsli:raw="Required. Path to be parsed. &lt;see langword=&quot;String&quot; /&gt;.">필수 요소. 구문 분석할 경로입니다. <see langword="String" />.</param>
      <returns vsli:raw="The file name from the specified path.">지정된 경로의 파일 이름입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary vsli:raw="Returns the parent path of the provided path.">제공된 경로의 부모 경로를 반환합니다.</summary>
      <param name="path" vsli:raw="Path to be examined.">검사할 경로입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Path does not have a parent path because it is a root path.">경로가 루트 경로이기 때문에 부모 경로를 포함하지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <returns vsli:raw="The parent path of the provided path.">제공된 경로의 부모 경로입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary vsli:raw="Creates a uniquely named zero-byte temporary file on disk and returns the full path of that file.">디스크에서 크기가 0바이트인 고유한 이름의 임시 파일을 만들고 해당 파일의 전체 경로를 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the full path of the temporary file.">임시 파일의 전체 경로를 포함하는 <see langword="String" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary vsli:raw="Moves a directory from one location to another.">디렉터리를 한 위치에서 다른 위치로 이동합니다.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">이동할 디렉터리의 경로입니다.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">소스 디렉터리가 이동되는 대상 디렉터리의 경로입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source is a root directory or The source path and the target path are the same.">소스는 루트 디렉터리이며 소스 경로와 대상 경로가 같습니다.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">작업이 순환적인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">사용자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Moves a directory from one location to another.">디렉터리를 한 위치에서 다른 위치로 이동합니다.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">이동할 디렉터리의 경로입니다.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">소스 디렉터리가 이동되는 대상 디렉터리의 경로입니다.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">작업 진행을 시각적으로 추적할지 여부를 지정합니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The target directory already exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">대상 디렉터리가 이미 있고 <paramref name="overwrite" />가 <see langword="False" />로 설정됩니다.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">작업이 순환적인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">사용자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Moves a directory from one location to another.">디렉터리를 한 위치에서 다른 위치로 이동합니다.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">이동할 디렉터리의 경로입니다.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">소스 디렉터리가 이동되는 대상 디렉터리의 경로입니다.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">작업 진행을 시각적으로 추적할지 여부를 지정합니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">사용자가 작업을 취소하는 경우 예외를 throw할지 여부를 지정합니다. 기본값은 <see langword="UICancelOption.ThrowException" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt; and a subdirectory of the file cannot be copied.">
        <paramref name="onUserCancel" />이 <see langword="ThrowException" />으로 설정되고 파일의 하위 디렉터리를 복사할 수 없는 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and the user cancels the operation, or the operation cannot be completed.">
        <paramref name="onUserCancel" />이 <see langword="ThrowException" />으로 설정되고 사용자가 작업을 취소하거나 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">작업이 순환적인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">사용자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Moves a directory from one location to another.">디렉터리를 한 위치에서 다른 위치로 이동합니다.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">이동할 디렉터리의 경로입니다.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">소스 디렉터리가 이동되는 대상 디렉터리의 경로입니다.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if existing directories should be overwritten; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">기존 디렉터리를 덮어써야 하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The target directory already exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">대상 디렉터리가 이미 있고 <paramref name="overwrite" />가 <see langword="False" />로 설정됩니다.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">작업이 순환적인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">사용자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary vsli:raw="Moves a file to a new location.">파일을 새 위치로 이동합니다.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">이동할 파일의 경로입니다.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">파일이 이동되는 대상 디렉터리의 경로입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Moves a file to a new location.">파일을 새 위치로 이동합니다.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">이동할 파일의 경로입니다.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">파일이 이동되는 대상 디렉터리의 경로입니다.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">작업 진행을 시각적으로 추적할지 여부를 지정합니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Moves a file to a new location.">파일을 새 위치로 이동합니다.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">이동할 파일의 경로입니다.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">파일이 이동되는 대상 디렉터리의 경로입니다.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">작업 진행을 시각적으로 추적할지 여부를 지정합니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">사용자가 작업을 취소하는 경우 예외를 throw할지 여부를 지정합니다. 기본값은 <see langword="UICancelOption.ThrowException" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and either the user has cancelled the operation or an unspecified I/O error occurs.">
        <paramref name="onUserCancel" />이 <see langword="ThrowException" />으로 설정된 상태에서 사용자가 작업을 취소했거나 지정되지 않은 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Moves a file to a new location.">파일을 새 위치로 이동합니다.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">이동할 파일의 경로입니다.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">파일이 이동되는 대상 디렉터리의 경로입니다.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to overwrite existing files; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">기존 파일을 덮어쓰려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object,  which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">
        <see langword="OpenTextFieldParser" /> 메서드를 사용하면 로그와 같은 구조적 텍스트 파일을 쉽고 효과적으로 구문 분석하는 방법을 제공하는 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체를 만들 수 있습니다. <see langword="TextFieldParser" /> 개체는 구분된 파일과 고정 너비 파일을 모두 읽는 데 사용될 수 있습니다.</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">
        <see langword="TextFieldParser" />로 열 파일입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">지정된 형식을 사용하여 행을 구문 분석할 수 없는 경우 예외 메시지에는 예외를 발생시키는 줄이 지정되어 있지만 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 속성은 해당 줄에 포함되어 있는 텍스트에 할당됩니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">지정된 파일을 읽을 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object, which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">
        <see langword="OpenTextFieldParser" /> 메서드를 사용하면 로그와 같은 구조적 텍스트 파일을 쉽고 효과적으로 구문 분석하는 방법을 제공하는 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체를 만들 수 있습니다. <see langword="TextFieldParser" /> 개체는 구분된 파일과 고정 너비 파일을 모두 읽는 데 사용될 수 있습니다.</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">
        <see langword="TextFieldParser" />로 열 파일입니다.</param>
      <param name="fieldWidths" vsli:raw="Widths of the fields.">필드의 너비입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">지정된 형식을 사용하여 행을 구문 분석할 수 없는 경우 예외 메시지에는 예외를 발생시키는 줄이 지정되어 있지만 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 속성은 해당 줄에 포함되어 있는 텍스트에 할당됩니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">지정된 파일을 읽을 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object, which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">
        <see langword="OpenTextFieldParser" /> 메서드를 사용하면 로그와 같은 구조적 텍스트 파일을 쉽고 효과적으로 구문 분석하는 방법을 제공하는 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체를 만들 수 있습니다. <see langword="TextFieldParser" /> 개체는 구분된 파일과 고정 너비 파일을 모두 읽는 데 사용될 수 있습니다.</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">
        <see langword="TextFieldParser" />로 열 파일입니다.</param>
      <param name="delimiters" vsli:raw="Delimiters for the fields.">필드에 사용하는 구분 기호입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">지정된 형식을 사용하여 행을 구문 분석할 수 없는 경우 예외 메시지에는 예외를 발생시키는 줄이 지정되어 있지만 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 속성은 해당 줄에 포함되어 있는 텍스트에 할당됩니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">지정된 파일을 읽을 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from a file.">파일을 읽기 위해 <see cref="T:System.IO.StreamReader" /> 개체를 엽니다.</summary>
      <param name="file" vsli:raw="File to be read.">읽을 파일입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a backslash (\).">파일 이름이 백슬래시(\)로 끝나는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">지정된 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to read from the file.">파일을 읽는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from the file.">파일을 읽을 <see cref="T:System.IO.StreamReader" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from a file.">파일을 읽기 위해 <see cref="T:System.IO.StreamReader" /> 개체를 엽니다.</summary>
      <param name="file" vsli:raw="File to be read.">읽을 파일입니다.</param>
      <param name="encoding" vsli:raw="The encoding to use for the file contents. Default is ASCII.">파일 내용에 사용할 인코딩입니다. 기본값은 ASCII입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a backslash (\).">파일 이름이 백슬래시(\)로 끝나는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">지정된 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to read from the file.">파일을 읽는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from the file.">파일을 읽을 <see cref="T:System.IO.StreamReader" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">지정된 파일에 쓰기 위해 <see cref="T:System.IO.StreamWriter" /> 개체를 엽니다.</summary>
      <param name="file" vsli:raw="File to be written to.">기록할 파일입니다.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file. Default is &lt;see langword=&quot;False&quot; /&gt;.">파일 내용에 추가하려면 <see langword="True" />이고, 파일 내용을 덮어쓰려면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a trailing slash.">파일 이름의 마지막에 슬래시가 있는 경우</exception>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">지정된 파일에 기록할 <see cref="T:System.IO.StreamWriter" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; to write to the specified file.">지정된 파일에 쓰기 위해 <see cref="T:System.IO.StreamWriter" />를 엽니다.</summary>
      <param name="file" vsli:raw="File to be written to.">기록할 파일입니다.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents in the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file. Default is &lt;see langword=&quot;False&quot; /&gt;.">파일 내용에 추가하려면 <see langword="True" />이고, 파일 내용을 덮어쓰려면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <param name="encoding" vsli:raw="Encoding to be used in writing to the file. Default is ASCII.">파일에 쓸 때 사용할 인코딩입니다. 기본값은 ASCII입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a trailing slash.">파일 이름의 마지막에 슬래시가 있는 경우</exception>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">지정된 파일에 기록할 <see cref="T:System.IO.StreamWriter" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary vsli:raw="Returns the contents of a file as a byte array.">파일의 내용을 바이트 배열로 반환합니다.</summary>
      <param name="file" vsli:raw="File to be read.">읽을 파일입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">문자열을 버퍼에 쓰기 위한 메모리가 부족한 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;Byte&quot; /&gt; array containing the contents of the file.">파일의 내용을 포함하는 <see langword="Byte" /> 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary vsli:raw="Returns the contents of a text file as a &lt;see langword=&quot;String&quot; /&gt;.">텍스트 파일의 내용을 <see langword="String" />으로 반환합니다.</summary>
      <param name="file" vsli:raw="Name and path of the file to read.">읽을 파일의 이름과 경로입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">문자열을 버퍼에 쓰기 위한 메모리가 부족한 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the contents of the file.">파일의 내용을 포함하는 <see langword="String" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary vsli:raw="Returns the contents of a text file as a &lt;see langword=&quot;String&quot; /&gt;.">텍스트 파일의 내용을 <see langword="String" />으로 반환합니다.</summary>
      <param name="file" vsli:raw="Name and path of the file to read.">읽을 파일의 이름과 경로입니다.</param>
      <param name="encoding" vsli:raw="Character encoding to use in reading the file. Default is UTF-8.">파일을 읽을 때 사용할 문자 인코딩입니다. 기본값은 UTF-8입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">문자열을 버퍼에 쓰기 위한 메모리가 부족한 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the contents of the file.">파일의 내용을 포함하는 <see langword="String" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary vsli:raw="Renames a directory.">디렉터리의 이름을 바꿉니다.</summary>
      <param name="directory" vsli:raw="Path and name of directory to be renamed.">이름을 바꿀 디렉터리의 경로와 이름입니다.</param>
      <param name="newName" vsli:raw="New name for directory.">디렉터리의 새 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;newName&quot; /&gt; contains path information.">
        <paramref name="newName" />에 경로 정보가 포함된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" />이(가) <see langword="Nothing" />인 경우  
  
또는 
 <paramref name="newName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There is an existing file or directory with the name specified in &lt;paramref name=&quot;newName&quot; /&gt;.">
        <paramref name="newName" />에 지정된 이름을 갖는 파일이나 디렉터리가 이미 있는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">사용자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary vsli:raw="Renames a file.">파일 이름을 바꿉니다.</summary>
      <param name="file" vsli:raw="File to be renamed.">이름을 바꿀 파일입니다.</param>
      <param name="newName" vsli:raw="New name of file.">파일의 새 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;newName&quot; /&gt; contains path information or ends with a backslash (\).">
        <paramref name="newName" />에는 백슬래시(\)로 끝나는 경로 정보가 포함되어 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우  
  
또는 
 <paramref name="newName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The directory does not exist.">디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There is an existing file or directory with the name specified in &lt;paramref name=&quot;newName&quot; /&gt;.">
        <paramref name="newName" />에 지정된 이름을 갖는 파일이나 디렉터리가 이미 있는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">사용자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary vsli:raw="Writes data to a binary file.">이진 파일에 데이터를 씁니다.</summary>
      <param name="file" vsli:raw="Path and name of the file to be written to.">기록할 파일의 경로와 이름입니다.</param>
      <param name="data" vsli:raw="Data to be written to the file.">파일에 쓸 데이터입니다.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the file contents; &lt;see langword=&quot;False&quot; /&gt; to overwrite the file contents. Default is &lt;see langword=&quot;False&quot; /&gt;.">파일 내용에 추가하려면 <see langword="True" />이고, 파일 내용을 덮어쓰려면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">문자열을 버퍼에 쓰기 위한 메모리가 부족한 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes text to a file.">파일에 텍스트를 씁니다.</summary>
      <param name="file" vsli:raw="File to be written to.">기록할 파일입니다.</param>
      <param name="text" vsli:raw="Text to be written to file.">파일에 쓸 텍스트입니다.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file.">파일 내용에 추가하려면 <see langword="True" />이고, 파일 내용을 덮어쓰려면 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">문자열을 버퍼에 쓰기 위한 메모리가 부족한 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary vsli:raw="Writes text to a file.">파일에 텍스트를 씁니다.</summary>
      <param name="file" vsli:raw="File to be written to.">기록할 파일입니다.</param>
      <param name="text" vsli:raw="Text to be written to file.">파일에 쓸 텍스트입니다.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file.">파일 내용에 추가하려면 <see langword="True" />이고, 파일 내용을 덮어쓰려면 <see langword="False" />입니다.</param>
      <param name="encoding" vsli:raw="What encoding to use when writing to file.">파일에 쓸 때 사용할 인코딩입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">문자열을 버퍼에 쓰기 위한 메모리가 부족한 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary vsli:raw="Gets or sets the current directory.">현재 디렉터리를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is not valid.">경로가 잘못된 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">사용자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="The current directory for file I/O operations.">파일 I/O 작업의 현재 디렉터리입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary vsli:raw="Returns a read-only collection of all available drive names.">사용 가능한 모든 드라이브 이름의 읽기 전용 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="A read-only collection of all available drives as &lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; objects.">
        <see cref="T:System.IO.DriveInfo" /> 개체인 사용 가능한 모든 드라이브의 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary vsli:raw="The exception that is thrown when the &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields&quot; /&gt; method cannot parse a row using the specified format.">
        <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> 메서드가 지정한 형식을 사용하여 행을 구문 분석할 수 없는 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class.">
        <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with serialized data.">serialize된 데이터를 사용하여 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">발생되는 예외에 대해 직렬화된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 구조체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message.">지정된 오류 메시지를 사용하여 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message that describes the error.">오류를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; describing the error.">오류를 설명하는 <see cref="T:System.String" />입니다.</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that is the cause of the current exception. If the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), the current exception is raised in a catch block that handles the inner exception.">현재 예외의 원인이 되는 <see cref="T:System.Exception" /> 개체입니다. <see cref="P:System.Exception.InnerException" /> 매개 변수가 null 참조(Visual Basic에서는 <see langword="Nothing" />)가 아니면 내부 예외를 처리하는 catch 블록에서 현재 예외가 발생합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message and a line number.">지정한 오류 메시지와 줄 번호를 사용하여 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The message for the exception.">예외에 대한 메시지입니다.</param>
      <param name="lineNumber" vsli:raw="The line number of the malformed line.">형식이 잘못된 줄의 줄 번호입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message, a line number, and a reference to the inner exception that is the cause of this exception.">지정한 오류 메시지, 줄 번호 및 이 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The message for the exception.">예외에 대한 메시지입니다.</param>
      <param name="lineNumber" vsli:raw="The line number of the malformed line.">형식이 잘못된 줄의 줄 번호입니다.</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the cause of the current exception. If the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), the current exception is raised in a catch block that handles the inner exception.">현재 예외의 원인이 되는 <see cref="T:System.Exception" />입니다. <see cref="P:System.Exception.InnerException" /> 매개 변수가 null 참조(Visual Basic에서는 <see langword="Nothing" />)가 아니면 내부 예외를 처리하는 catch 블록에서 현재 예외가 발생합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with information about the exception.">예외에 대한 정보를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 설정합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">발생되는 예외에 대해 직렬화된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 구조체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary vsli:raw="Creates and returns a string representation of the current exception.">현재 예외에 대한 문자열 표현을 만들고 반환합니다.</summary>
      <returns vsli:raw="A string representation of the current exception.">현재 예외에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary vsli:raw="Gets the line number of the malformed line.">형식이 잘못된 줄의 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The line number of the malformed line.">형식이 잘못된 줄의 줄 번호입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary vsli:raw="Specifies whether a file should be deleted permanently or placed in the Recycle Bin.">파일을 영구적으로 삭제할지 아니면 휴지통에 보관할지 여부를 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary vsli:raw="Delete the file or directory permanently. Default.">파일이나 디렉터리를 영구적으로 삭제합니다. 기본.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary vsli:raw="Send the file or directory to the Recycle Bin.">파일이나 디렉터리를 휴지통으로 보냅니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary vsli:raw="Specifies whether to search all or only top-level directories.">모든 디렉터리를 검색할지 최상위 디렉터리만 검색할지 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary vsli:raw="Search the specified directory and all subdirectories within it. Default.">지정한 디렉터리와 이 디렉터리 내의 모든 하위 디렉터리를 검색합니다. 기본.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary vsli:raw="Search only the specified directory and exclude subdirectories.">지정한 디렉터리만 검색하고 이 디렉터리 내의 하위 디렉터리는 검색하지 않습니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary vsli:raw="Provides properties for accessing commonly referenced directories.">일반적으로 참조되는 디렉터리에 액세스하기 위한 속성을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories&quot; /&gt; class.">
        <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" /> 클래스의 인스턴스를 반환합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary vsli:raw="Gets a path name pointing to the Application Data directory for the all users.">모든 사용자에 대한 애플리케이션 데이터 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission" vsli:raw="Controls access to system and user environment variables. Associated enumeration: &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt;.">시스템 및 사용자 환경 변수에 대한 액세스를 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns vsli:raw="The path to the Application Data directory for the all users.">모든 사용자에 대한 애플리케이션 데이터 디렉터리의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary vsli:raw="Gets a path name pointing to the Application Data directory for the current user.">현재 사용자에 대한 애플리케이션 데이터 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns vsli:raw="The path to the Application Data directory for the current user.">현재 사용자에 대한 애플리케이션 데이터 디렉터리의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary vsli:raw="Gets a path name pointing to the Desktop directory.">바탕 화면 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns vsli:raw="The path to the Desktop directory.">바탕 화면 디렉터리의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary vsli:raw="Gets a path name pointing to the My Documents directory.">내 문서 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns vsli:raw="The path to the My Documents directory.">내 문서 디렉터리의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary vsli:raw="Gets a path name pointing to the My Music directory.">내 음악 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns vsli:raw="The path to the My Music directory.">내 음악 디렉터리의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary vsli:raw="Gets a path name pointing to the My Pictures directory.">내 그림 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns vsli:raw="The path to the My Pictures directory.">내 그림 디렉터리의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary vsli:raw="Gets a path pointing to the Program Files directory.">Program Files 디렉터리를 가리키는 경로를 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns vsli:raw="The path to the Program Files directory.">에 대 한 경로 Program Files 디렉터리입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary vsli:raw="Gets a path name pointing to the Programs directory.">Programs 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns vsli:raw="The path to the Programs directory.">Programs 디렉터리의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary vsli:raw="Gets a path name pointing to the Temp directory.">Temp 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns vsli:raw="The path to the Temp directory.">Temp 디렉터리의 경로입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary vsli:raw="Provides methods and properties for parsing structured text files.">구조화된 텍스트 파일을 구문 분석하기 위한 메서드와 속성을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. 구문 분석할 스트림입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">
        <paramref name="stream" />을 읽을 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. 구문 분석할 스트림입니다.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. 파일에서 인코딩을 확인할 수 없는 경우 사용할 문자 인코딩입니다. 기본값은 <see cref="P:System.Text.Encoding.UTF8" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> 또는 <paramref name="defaultEncoding" />가 <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">
        <paramref name="stream" />을 읽을 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. 구문 분석할 스트림입니다.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. 파일에서 인코딩을 확인할 수 없는 경우 사용할 문자 인코딩입니다. 기본값은 <see cref="P:System.Text.Encoding.UTF8" />입니다.</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. 파일의 시작 부분에서 바이트 순서 표시를 찾을지 여부를 나타냅니다. 기본값은 <see langword="True" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> 또는 <paramref name="defaultEncoding" />가 <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">
        <paramref name="stream" />을 읽을 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. 구문 분석할 스트림입니다.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. 파일에서 인코딩을 확인할 수 없는 경우 사용할 문자 인코딩입니다. 기본값은 <see cref="P:System.Text.Encoding.UTF8" />입니다.</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. 파일의 시작 부분에서 바이트 순서 표시를 찾을지 여부를 나타냅니다. 기본값은 <see langword="True" />입니다.</param>
      <param name="leaveOpen" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to leave &lt;paramref name=&quot;stream&quot; /&gt; open when the &lt;see langword=&quot;TextFieldParser&quot; /&gt; object is closed. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" />. <see langword="TextFieldParser" /> 개체가 닫힐 때 <paramref name="stream" />을 열어둘지 여부를 나타냅니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> 또는 <paramref name="defaultEncoding" />가 <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">
        <paramref name="stream" />을 읽을 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="reader" vsli:raw="&lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;. The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; stream to be parsed.">
        <see cref="T:System.IO.TextReader" />. 구분 분석할 <see cref="T:System.IO.TextReader" /> 스트림입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="reader" />이(가) <see langword="Nothing" />인 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. 구문 분석할 파일의 전체 경로입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string.">
        <paramref name="path" />이 빈 문자열인 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. 구문 분석할 파일의 전체 경로입니다.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. 파일에서 인코딩을 확인할 수 없는 경우 사용할 문자 인코딩입니다. 기본값은 <see cref="P:System.Text.Encoding.UTF8" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" />가 빈 문자열이거나 <paramref name="defaultEncoding" />이 <see langword="Nothing" />입니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. 구문 분석할 파일의 전체 경로입니다.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. 파일에서 인코딩을 확인할 수 없는 경우 사용할 문자 인코딩입니다. 기본값은 <see cref="P:System.Text.Encoding.UTF8" />입니다.</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. 파일의 시작 부분에서 바이트 순서 표시를 찾을지 여부를 나타냅니다. 기본값은 <see langword="True" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" />가 빈 문자열이거나 <paramref name="defaultEncoding" />이 <see langword="Nothing" />입니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary vsli:raw="Closes the current &lt;see langword=&quot;TextFieldParser&quot; /&gt; object.">현재 <see langword="TextFieldParser" /> 개체를 닫습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary vsli:raw="Releases resources used by the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">해당 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체에서 사용하는 리소스를 해제합니다.</summary>
      <param name="disposing" vsli:raw="Boolean. &lt;see langword=&quot;True&quot; /&gt; releases both managed and unmanaged resources; &lt;see langword=&quot;False&quot; /&gt; releases only unmanaged resources.">Boolean입니다. <see langword="True" />는 관리되는 리소스와 관리되지 않는 리소스를 모두 해제합니다. <see langword="False" />는 관리되지 않는 리소스만 해제합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.">가비지 수집기에서 회수하기 전에 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary vsli:raw="Reads the specified number of characters without advancing the cursor.">커서를 앞으로 이동하지 않고 지정한 문자 수를 읽습니다.</summary>
      <param name="numberOfChars" vsli:raw="The number of characters to read. Required.">읽을 문자 수입니다. 필수 요소.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;numberOfChars&quot; /&gt; is less than 0.">
        <paramref name="numberOfChars" /> 가 0보다 작습니다.</exception>
      <returns vsli:raw="A string that contains the specified number of characters read.">지정된 수의 읽을 문자가 포함된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary vsli:raw="Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.">현재 줄의 모든 필드를 읽고 문자열 배열로서 반환한 다음 데이터가 포함된 다음 줄로 커서를 이동합니다.</summary>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A field cannot be parsed by using the specified format.">지정된 형식을 사용하여 필드를 구문 분석할 수 없는 경우</exception>
      <returns vsli:raw="An array of strings that contains field values for the current line.">현재 줄의 필드 값이 들어 있는 문자열 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary vsli:raw="Returns the current line as a string and advances the cursor to the next line.">현재 줄을 문자열로 반환하고 커서를 다음 줄로 이동합니다.</summary>
      <returns vsli:raw="The current line from the file or stream.">파일 또는 스트림의 현재 줄입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary vsli:raw="Reads the remainder of the text file and returns it as a string.">텍스트 파일의 나머지를 읽고 문자열로 반환합니다.</summary>
      <returns vsli:raw="The remaining text from the file or stream.">파일 또는 스트림의 나머지 텍스트입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary vsli:raw="Sets the delimiters for the reader to the specified values, and sets the field type to &lt;see langword=&quot;Delimited&quot; /&gt;.">판독기의 구분 기호를 지정된 값으로 설정하고 필드 형식을 <see langword="Delimited" />로 설정합니다.</summary>
      <param name="delimiters" vsli:raw="Array of type &lt;see langword=&quot;String&quot; /&gt;.">
        <see langword="String" /> 형식의 배열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A delimiter is zero-length.">구분 기호의 길이가 0인 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary vsli:raw="Sets the delimiters for the reader to the specified values.">지정한 값에 대한 판독기의 구분 기호를 설정합니다.</summary>
      <param name="fieldWidths" vsli:raw="Array of &lt;see langword=&quot;Integer&quot; /&gt;.">
        <see langword="Integer" />의 배열입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose">
      <summary>해당 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체에서 사용하는 리소스를 해제합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary vsli:raw="Defines comment tokens. A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.">주석 토큰을 정의합니다. 주석 토큰은 줄 시작 부분에서 해당 줄이 주석이므로 파서에서 무시해야 함을 나타내는 문자열입니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="A comment token includes white space.">주석 토큰에 공백을 포함하고 있는 경우</exception>
      <returns vsli:raw="A string array that contains all of the comment tokens for the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체의 모든 주석 토큰이 들어 있는 문자열 배열입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary vsli:raw="Defines the delimiters for a text file.">텍스트 파일의 구분 기호를 정의합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="A delimiter value is set to a newline character, an empty string, or &lt;see langword=&quot;Nothing&quot; /&gt;.">구분기호는 줄 바꿈 문자, 빈 문자열 또는 <see langword="Nothing" />으로 설정됩니다.</exception>
      <returns vsli:raw="A string array that contains all of the field delimiters for the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체의 모든 필드 구분 기호가 들어 있는 문자열 배열입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if there are no non-blank, non-comment lines between the current cursor position and the end of the file.">현재 커서 위치와 파일 끝 사이에 공백 또는 주석이 없는 줄이 있는 경우 <see langword="True" />를 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if there is no more data to read; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">읽을 데이터가 더 이상 없으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary vsli:raw="Returns the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">최신 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 예외를 발생시킨 줄을 반환합니다.</summary>
      <returns vsli:raw="The line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">최신 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 예외를 발생시킨 줄입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary vsli:raw="Returns the number of the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">최신 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 예외를 발생시킨 줄 번호를 반환합니다.</summary>
      <returns vsli:raw="The number of the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">최신 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 예외를 발생시킨 줄의 번호입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary vsli:raw="Denotes the width of each column in the text file being parsed.">구문 분석되는 텍스트 파일에서 각 열의 너비를 나타냅니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="A width value in any location other than the last entry of the array is less than or equal to zero.">배열의 마지막 항목을 제외한 위치의 너비 값이 0 이하인 경우</exception>
      <returns vsli:raw="An integer array that contains the width of each column in the text file that is being parsed.">구문 분석되는 텍스트 파일에 있는 각 열의 너비가 들어 있는 정수 배열입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary vsli:raw="Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.">구분된 파일을 구문 분석할 때 필드가 따옴표로 묶여 있는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if fields are enclosed in quotation marks; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필드가 따옴표로 묶여 있으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary vsli:raw="Returns the current line number, or returns -1 if no more characters are available in the stream.">현재 줄 번호를 반환하거나 스트림에서 더 이상 문자를 사용할 수 없으면 -1을 반환합니다.</summary>
      <returns vsli:raw="The current line number.">현재 줄 번호입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary vsli:raw="Indicates whether the file to be parsed is delimited or fixed-width.">구문 분석할 파일이 구분된 파일인지 또는 고정 너비 파일인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType&quot; /&gt; value that indicates whether the file to be parsed is delimited or fixed-width.">구문 분석할 파일이 구분된 파일인지 또는 고정 너비 파일인지를 나타내는 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> 값입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary vsli:raw="Indicates whether leading and trailing white space should be trimmed from field values.">필드 값에서 선행 및 후행 공백이 삭제되어야 하는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if leading and trailing white space should be trimmed from field values; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">필드 값에서 선행 및 후행 공백을 삭제해야 하는 경우 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary vsli:raw="Specifies whether an exception is thrown if the user clicks Cancel during an operation.">작업 도중에 사용자가 취소를 클릭하면 예외를 throw할지 여부를 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary vsli:raw="Do nothing when the user clicks Cancel.">사용자가 취소를 클릭하는 경우 아무 작업도 하지 않습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary vsli:raw="Throw an exception when the user clicks Cancel.">사용자가 취소를 클릭하는 경우 예외를 throw합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary vsli:raw="Specifies which dialog boxes to show when copying, deleting, or moving files or directories.">파일이나 디렉터리를 복사, 삭제 또는 이동할 때 표시할 대화 상자를 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary vsli:raw="Show progress dialog box and any error dialog boxes.">진행률 대화 상자와 오류 대화 상자를 표시합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary vsli:raw="Only show error dialog boxes and hide progress dialog boxes. Default.">오류 대화 상자만 표시하고 진행률 대화 상자는 숨깁니다. 기본.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary vsli:raw="The &lt;see langword=&quot;FileSystem&quot; /&gt; module contains the procedures that are used to perform file, directory or folder, and system operations. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than using the &lt;see langword=&quot;FileSystem&quot; /&gt; module. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="FileSystem" /> 모듈에는 파일, 디렉터리 또는 폴더 및 시스템 작업을 수행하는 데 사용되는 프로시저가 포함되어 있습니다. <see langword="My" /> 기능을 사용하면 <see langword="FileSystem" /> 모듈을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary vsli:raw="Changes the current directory or folder. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;ChDir&quot; /&gt; function. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt; .">현재 디렉터리나 폴더를 변경합니다. <see langword="My" /> 기능을 사용하면 <see langword="ChDir" /> 함수를 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />을 참조하십시오.</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies which directory or folder becomes the new default directory or folder. &lt;paramref name=&quot;Path&quot; /&gt; may include the drive. If no drive is specified, &lt;see langword=&quot;ChDir&quot; /&gt; changes the default directory or folder on the current drive.">필수 요소. 새 기본 디렉터리 또는 폴더가 될 대상을 식별하는 문자열 식입니다. <paramref name="Path" />에는 드라이브가 포함될 수 있습니다. 드라이브를 지정하지 않은 경우 <see langword="ChDir" />을 사용하면 현재 드라이브의 기본 디렉터리나 폴더를 변경할 수 있습니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is empty.">
        <paramref name="Path" />가 비어 있는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Invalid drive is specified, or drive is unavailable.">드라이브를 잘못 지정했거나 사용할 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary vsli:raw="Changes the current drive.">현재 드라이브를 변경합니다.</summary>
      <param name="Drive" vsli:raw="Required. String expression that specifies an existing drive. If you supply a zero-length string (&quot;&quot;), the current drive does not change. If the &lt;paramref name=&quot;Drive&quot; /&gt; argument is a multiple-character string, &lt;see langword=&quot;ChDrive&quot; /&gt; uses only the first letter.">필수 요소. 기존 드라이브를 지정하는 문자열 식입니다. 길이가 0인 문자열("")을 지정하면 현재 드라이브가 변경되지 않습니다. <paramref name="Drive" /> 인수가 여러 문자로 된 문자열인 경우 <see langword="ChDrive" />는 첫 글자만 사용합니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Invalid drive is specified, or drive is unavailable.">드라이브를 잘못 지정했거나 사용할 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary vsli:raw="Changes the current drive.">현재 드라이브를 변경합니다.</summary>
      <param name="Drive" vsli:raw="Required. String expression that specifies an existing drive. If you supply a zero-length string (&quot;&quot;), the current drive does not change. If the &lt;paramref name=&quot;Drive&quot; /&gt; argument is a multiple-character string, &lt;see langword=&quot;ChDrive&quot; /&gt; uses only the first letter.">필수 요소. 기존 드라이브를 지정하는 문자열 식입니다. 길이가 0인 문자열("")을 지정하면 현재 드라이브가 변경되지 않습니다. <paramref name="Drive" /> 인수가 여러 문자로 된 문자열인 경우 <see langword="ChDrive" />는 첫 글자만 사용합니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Invalid drive is specified, or drive is unavailable.">드라이브를 잘못 지정했거나 사용할 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary vsli:raw="Returns a string representing the current path. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;CurDir&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt;.">현재 경로를 나타내는 문자열을 반환합니다. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 사용하면 <see langword="CurDir" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />를 참조하세요.</summary>
      <returns vsli:raw="A string representing the current path.">현재 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary vsli:raw="Returns a string representing the current path. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;CurDir&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt;.">현재 경로를 나타내는 문자열을 반환합니다. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 사용하면 <see langword="CurDir" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />를 참조하세요.</summary>
      <param name="Drive" vsli:raw="Optional. &lt;see langword=&quot;Char&quot; /&gt; expression that specifies an existing drive. If no drive is specified, or if &lt;paramref name=&quot;Drive&quot; /&gt; is a zero-length string (&quot;&quot;), &lt;see langword=&quot;CurDir&quot; /&gt; returns the path for the current drive.">선택 사항입니다. 기존 드라이브를 지정하는 <see langword="Char" /> 식입니다. 드라이브를 지정하지 않거나 <paramref name="Drive" />가 길이가 0인 문자열("")인 경우 <see langword="CurDir" />은 현재 드라이브에 대한 경로를 반환합니다.</param>
      <returns vsli:raw="A string representing the current path.">현재 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary vsli:raw="Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;Dir&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)&quot; /&gt; for more information.">지정한 패턴이나 파일 특성과 일치하는 파일, 디렉터리 또는 폴더의 이름을 나타내는 문자열 또는 드라이브의 볼륨 레이블을 반환합니다. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 사용하면 <see langword="Dir" /> 함수를 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />를 참조하세요.</summary>
      <returns vsli:raw="A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.">지정된 패턴이나 파일 특성과 일치하는 파일, 디렉터리 또는 폴더의 이름을 나타내는 문자열 또는 드라이브의 볼륨 레이블입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary vsli:raw="Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;Dir&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)&quot; /&gt; for more information.">지정한 패턴이나 파일 특성과 일치하는 파일, 디렉터리 또는 폴더의 이름을 나타내는 문자열 또는 드라이브의 볼륨 레이블을 반환합니다. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 사용하면 <see langword="Dir" /> 함수를 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />를 참조하세요.</summary>
      <param name="PathName" vsli:raw="Optional. A string expression that specifies a file name, directory or folder name, or drive volume label. A zero-length string (&lt;see langword=&quot;&amp;quot;&amp;quot;&quot; /&gt;) is returned if &lt;paramref name=&quot;PathName&quot; /&gt; is not found.">선택 사항입니다. 파일 이름, 디렉터리나 폴더 이름 또는 드라이브 볼륨 레이블을 지정하는 문자열 식입니다. <paramref name="PathName" />이 없으면 길이가 0인 문자열(<see langword="&quot;&quot;" />)이 반환됩니다.</param>
      <param name="Attributes" vsli:raw="Optional. Enumeration or numeric expression whose value specifies file attributes. If omitted, &lt;see langword=&quot;Dir&quot; /&gt; returns files that match &lt;paramref name=&quot;Pathname&quot; /&gt; but have no attributes.">선택 사항입니다. 파일 특성을 지정하는 값을 가진 열거형 또는 숫자 식입니다. 이 매개 변수를 생략하면 <see langword="Dir" />는 <paramref name="Pathname" />과 일치하지만 특성이 없는 파일을 반환합니다.</param>
      <returns vsli:raw="A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.">지정된 패턴이나 파일 특성과 일치하는 파일, 디렉터리 또는 폴더의 이름을 나타내는 문자열 또는 드라이브의 볼륨 레이블입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary vsli:raw="Returns a Boolean value &lt;see langword=&quot;True&quot; /&gt; when the end of a file opened for &lt;see langword=&quot;Random&quot; /&gt; or sequential &lt;see langword=&quot;Input&quot; /&gt; has been reached.">
        <see langword="True" /> 또는 순차적인 <see langword="Random" />용으로 연 파일의 끝에 도달하면 부울 값 <see langword="Input" />를 반환합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains any valid file number.">필수 요소. 유효한 파일 번호가 포함된 <see langword="Integer" />입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
      <returns vsli:raw="A Boolean value &lt;see langword=&quot;True&quot; /&gt; when the end of a file opened for &lt;see langword=&quot;Random&quot; /&gt; or sequential &lt;see langword=&quot;Input&quot; /&gt; has been reached.">
        <see langword="Random" /> 또는 순차적인 <see langword="Input" />용으로 연 파일의 끝에 도달하면 부울 값 <see langword="True" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary vsli:raw="Returns an enumeration representing the file mode for files opened using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;FileAttr&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt; for more information.">
        <see langword="FileOpen" /> 함수를 사용하여 연 파일의 파일 모드를 나타내는 열거형을 반환합니다. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 사용하면 <see langword="FileAttr" /> 함수를 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt;. Any valid file number.">필수 요소. <see langword="Integer" />. 유효한 파일 번호입니다.</param>
      <returns vsli:raw="One of the following values:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;Value&lt;/term&gt;&lt;description&gt;File access mode&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;1&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Input&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;2&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Output&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;4&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Random&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;8&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Append&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;32&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Binary&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">다음 값 중 하나입니다. 
 <list type="table"><listheader><term>값</term><description>파일 액세스 모드</description></listheader><item><term>1</term><description><see langword="OpenMode.Input" /></description></item><item><term>2</term><description><see langword="OpenMode.Output" /></description></item><item><term>4</term><description><see langword="OpenMode.Random" /></description></item><item><term>8</term><description><see langword="OpenMode.Append" /></description></item><item><term>32</term><description><see langword="OpenMode.Binary" /></description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary vsli:raw="Concludes input/output (I/O) to a file opened using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. &lt;see langword=&quot;My&quot; /&gt; gives you better productivity and performance in file I/O operations. See &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; for more information.">
        <see langword="FileOpen" /> 함수를 사용하여 연 파일에 대한 입출력(I/O)을 끝냅니다. <see langword="My" />를 사용하면 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumbers" vsli:raw="Optional. Parameter array of 0 or more channels to be closed.">선택 사항입니다. 닫을 0개 이상의 채널에 대한 매개 변수 배열입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" />가 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary vsli:raw="Copies a file. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileCopy&quot; /&gt;. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)&quot; /&gt; for more information.">파일을 복사합니다. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 사용하면 <see langword="FileCopy" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />를 참조하세요.</summary>
      <param name="Source" vsli:raw="Required. A string expression that specifies the name of the file to be copied. &lt;paramref name=&quot;Source&quot; /&gt; may include the directory or folder, and drive, of the source file.">필수 요소. 복사할 파일의 이름을 지정하는 문자열 식입니다. <paramref name="Source" />에는 소스 파일의 디렉터리나 폴더 및 드라이브가 포함될 수 있습니다.</param>
      <param name="Destination" vsli:raw="Required. A string expression that specifies the destination file name. &lt;paramref name=&quot;Destination&quot; /&gt; may include the directory or folder, and drive, of the destination file.">필수 요소. 대상 파일 이름을 지정하는 문자열 식입니다. <paramref name="Destination" />에는 대상 파일의 디렉터리나 폴더 및 드라이브가 포함될 수 있습니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; or &lt;paramref name=&quot;Destination&quot; /&gt; is invalid or not specified.">
        <paramref name="Source" /> 또는 <paramref name="Destination" />이 잘못되었거나 지정되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File is already open.">파일이 이미 열려 있습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="File does not exist.">파일이 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that indicates the date and time a file was written to. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileDateTime&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt;.">파일을 기록한 날짜와 시간을 나타내는 <see langword="Date" /> 값을 반환합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileDateTime" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />을 참조하세요.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file name. &lt;paramref name=&quot;PathName&quot; /&gt; may include the directory or folder, and the drive.">필수 요소. 파일 이름을 지정하는 문자열 식입니다. <paramref name="PathName" />은 디렉터리 또는 폴더와 드라이브를 포함할 수 있습니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;PathName&quot; /&gt; is invalid or contains wildcards.">
        <paramref name="PathName" />이 잘못되었거나 와일드카드를 포함하고 있습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file does not exist.">대상 파일이 없습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;Date&quot; /&gt; value that indicates the date and time a file was created or last modified.">파일을 만들거나 마지막으로 수정한 날짜와 시간을 나타내는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <param name="ArrayIsDynamic" vsli:raw="Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.">선택 사항입니다. 배열을 쓰는 경우에만 적용됩니다. 배열을 동적으로 처리할 것인지의 여부와 배열의 크기와 범위를 설명하는 배열 설명자가 필요한지의 여부를 지정합니다.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is &lt;see langword=&quot;False&quot; /&gt;.">선택 사항입니다. 문자열을 쓰는 경우에만 적용됩니다. 길이를 설명하는 문자열에 대해 2바이트 설명자를 쓸 것인지 여부를 지정합니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is &lt;see langword=&quot;False&quot; /&gt;.">선택 사항입니다. 문자열을 쓰는 경우에만 적용됩니다. 길이를 설명하는 문자열에 대해 2바이트 설명자를 쓸 것인지 여부를 지정합니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable.  The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGetObject&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">열린 디스크 파일의 데이터를 변수로 읽어옵니다.  <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGetObject" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary vsli:raw="Returns a value that specifies the length of a file in bytes. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileLen&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt;.">파일 길이를 바이트로 지정하는 값을 반환합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileLen" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />를 참조하세요.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file. &lt;paramref name=&quot;PathName&quot; /&gt; may include the directory or folder, and the drive.">필수 요소. 파일을 지정하는 문자열 식입니다. <paramref name="PathName" />은 디렉터리 또는 폴더와 드라이브를 포함할 수 있습니다.</param>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="File does not exist.">파일이 없습니다.</exception>
      <returns vsli:raw="The length of a file in bytes.">파일의 길이(바이트)입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary vsli:raw="Opens a file for input or output. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileOpen&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">입력 또는 출력할 파일을 엽니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileOpen" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number. Use the &lt;see langword=&quot;FreeFile&quot; /&gt; function to obtain the next available file number.">필수 요소. 유효한 파일 번호입니다. 다음으로 사용 가능한 파일 번호를 가져오려면 <see langword="FreeFile" /> 함수를 사용합니다.</param>
      <param name="FileName" vsli:raw="Required. A string expression that specifies a file name - may include directory or folder, and drive.">필수 요소. 파일 이름을 지정하는 문자열 식으로, 디렉터리나 폴더 및 드라이브가 포함될 수 있습니다.</param>
      <param name="Mode" vsli:raw="Required. Enumeration specifying the file mode: &lt;see langword=&quot;Append&quot; /&gt;, &lt;see langword=&quot;Binary&quot; /&gt;, &lt;see langword=&quot;Input&quot; /&gt;, &lt;see langword=&quot;Output&quot; /&gt;, or &lt;see langword=&quot;Random&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenMode&quot; /&gt; .">필수 요소. <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, <see langword="Random" /> 등의 파일 모드를 지정하는 열거형입니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.OpenMode" />을 참조하십시오.</param>
      <param name="Access" vsli:raw="Optional. Enumeration specifying the operations permitted on the open file: &lt;see langword=&quot;Read&quot; /&gt;, &lt;see langword=&quot;Write&quot; /&gt;, or &lt;see langword=&quot;ReadWrite&quot; /&gt;. Defaults to &lt;see langword=&quot;ReadWrite&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenAccess&quot; /&gt; .">선택 사항입니다. <see langword="Read" />, <see langword="Write" />, <see langword="ReadWrite" /> 등 열려 있는 파일에 허용되는 작업을 지정하는 열거형입니다. 기본값은 <see langword="ReadWrite" />입니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.OpenAccess" />을 참조하십시오.</param>
      <param name="Share" vsli:raw="Optional. Enumeration specifying the operations not permitted on the open file by other processes: &lt;see langword=&quot;Shared&quot; /&gt;, &lt;see langword=&quot;Lock Read&quot; /&gt;, &lt;see langword=&quot;Lock Write&quot; /&gt;, and &lt;see langword=&quot;Lock Read Write&quot; /&gt;. Defaults to &lt;see langword=&quot;Lock Read Write&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenShare&quot; /&gt; .">선택 사항입니다. <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, <see langword="Lock Read Write" /> 등 열려 있는 파일에 대해 다른 프로세스에 허용되지 않는 작업을 지정하는 열거형입니다. 기본값은 <see langword="Lock Read Write" />입니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.OpenShare" />을 참조하십시오.</param>
      <param name="RecordLength" vsli:raw="Optional. Number less than or equal to 32,767 (bytes). For files opened for random access, this value is the record length. For sequential files, this value is the number of characters buffered.">선택 사항입니다. 32,767(바이트)보다 작거나 같은 수입니다. 임의 액세스용으로 연 파일의 경우 이 값은 레코드 길이가 됩니다. 순차 파일의 경우 이 값은 버퍼링된 문자의 수입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Record length is negative (and not equal to -1).">레코드 길이가 음수입니다(–1은 아님).</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileName&quot; /&gt; is already open, or &lt;paramref name=&quot;FileName&quot; /&gt; is invalid.">
        <paramref name="FileName" />이 이미 열려 있거나 <paramref name="FileName" />이 잘못되었습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <param name="ArrayIsDynamic" vsli:raw="Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.">선택 사항입니다. 배열을 쓰는 경우에만 적용됩니다. 배열을 동적으로 처리할 것인지의 여부와 길이를 설명하는 문자열에 대한 배열 설명자를 쓸 것인지의 여부를 지정합니다.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is &lt;see langword=&quot;False&quot; /&gt;.">선택 사항입니다. 문자열을 쓰는 경우에만 적용됩니다. 문자열에 대한 2바이트의 문자열 길이 설명자를 파일에 쓸지 여부를 지정합니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is &lt;see langword=&quot;False&quot; /&gt;.">선택 사항입니다. 문자열을 쓰는 경우에만 적용됩니다. 문자열에 대한 2바이트의 문자열 길이 설명자를 파일에 쓸지 여부를 지정합니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file.  The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePutObject&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">변수의 데이터를 디스크 파일에 씁니다.  <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePutObject" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary vsli:raw="Assigns an output line width to a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">
        <see langword="FileOpen" /> 함수를 사용하여 연 파일에 출력 줄 너비를 지정합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="RecordWidth" vsli:raw="Required. Numeric expression in the range 0-255, inclusive, which indicates how many characters appear on a line before a new line is started. If &lt;paramref name=&quot;RecordWidth&quot; /&gt; equals 0, there is no limit to the length of a line. The default value for &lt;paramref name=&quot;RecordWidth&quot; /&gt; is 0.">필수 요소. 0~255 사이의 숫자 식으로, 새 줄이 시작되기 전에 줄에 표시되는 문자의 수를 나타냅니다. <paramref name="RecordWidth" />가 0이면 줄 길이에 제한이 없습니다. <paramref name="RecordWidth" />의 기본값은 0입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that represents the next file number available for use by the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">
        <see langword="Integer" /> 함수에서 사용할 수 있는 다음 파일 번호를 나타내는 <see langword="FileOpen" /> 값을 반환합니다.</summary>
      <exception cref="T:System.IO.IOException" vsli:raw="More than 255 files are in use.">사용 중인 파일 수가 255개를 초과합니다.</exception>
      <returns vsli:raw="An integer value that represents the next file number available for use by the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">
        <see langword="FileOpen" /> 함수에서 사용할 수 있는 다음 파일 번호를 나타내는 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;FileAttribute&quot; /&gt; value that represents the attributes of a file, directory, or folder. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileAttribute&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">파일, 디렉터리 또는 폴더의 특성을 나타내는 <see langword="FileAttribute" /> 값을 반환합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileAttribute" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file, directory, or folder name. &lt;paramref name=&quot;PathName&quot; /&gt; can include the directory or folder, and the drive.">필수 요소. 파일, 디렉터리 또는 폴더 이름을 지정하는 문자열 식입니다. <paramref name="PathName" />에는 디렉터리나 폴더 및 드라이브가 포함될 수 있습니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;Pathname&quot; /&gt; is invalid or contains wildcards.">
        <paramref name="Pathname" />이 잘못되었거나 와일드카드를 포함하고 있습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file does not exist.">대상 파일이 없습니다.</exception>
      <returns vsli:raw="A bitwise combination of the enumeration values.">열거형 값의 비트 조합입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary vsli:raw="Returns &lt;see langword=&quot;String&quot; /&gt; value that contains characters from a file opened in &lt;see langword=&quot;Input&quot; /&gt; or &lt;see langword=&quot;Binary&quot; /&gt; mode. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;InputString&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="String" /> 또는 <see langword="Input" /> 모드로 연 파일의 문자가 포함된 <see langword="Binary" /> 값을 반환합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="InputString" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="CharCount" vsli:raw="Required. Any valid numeric expression specifying the number of characters to read.">필수 요소. 읽을 문자의 수를 지정하는 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" />가 없는 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCount&quot; /&gt; &amp;lt; 0 or &amp;gt; 214.">
        <paramref name="CharCount" /> &lt; 0 또는 &gt; 214입니다.</exception>
      <returns vsli:raw="A string that contains characters from a file opened in &lt;see langword=&quot;Input&quot; /&gt; or &lt;see langword=&quot;Binary&quot; /&gt; mode. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;InputString&quot; /&gt;.">
        <see langword="Input" /> 또는 <see langword="Binary" /> 모드로 연 파일의 문자가 포함된 문자열입니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="InputString" />보다 더 나은 생산성 및 성능을 제공합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary vsli:raw="Deletes files from a disk. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Kill&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; .">디스크에서 파일을 삭제합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="Kill" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 참조하십시오.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies one or more file names to be deleted. &lt;paramref name=&quot;PathName&quot; /&gt; can include the directory or folder, and the drive.">필수 요소. 삭제할 하나 이상의 파일 이름을 지정하는 문자열 식입니다. <paramref name="PathName" />에는 디렉터리나 폴더 및 드라이브가 포함될 수 있습니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Target file(s) open.">대상 파일이 열려 있습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file(s) not found.">대상 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="Permission denied.">사용 권한이 거부되었습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary vsli:raw="Reads a single line from an open sequential file and assigns it to a &lt;see langword=&quot;String&quot; /&gt; variable.">열려 있는 순차 파일에서 한 줄을 읽은 다음 <see langword="String" /> 변수에 할당합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <exception cref="T:System.IO.EndOfStreamException" vsli:raw="End of file reached.">파일의 끝에 도달했습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" />가 없는 경우</exception>
      <returns vsli:raw="Reads a single line from an open sequential file and assigns it to a &lt;see langword=&quot;String&quot; /&gt; variable.">열려 있는 순차 파일에서 한 줄을 읽은 다음 <see langword="String" /> 변수에 할당합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary vsli:raw="Returns a value that specifies the current read/write position in an open file.">열려 있는 파일에서 현재의 읽기/쓰기 위치를 지정하는 값을 반환합니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid &lt;see langword=&quot;Integer&quot; /&gt; file number.">필수 요소. 임의의 유효한 <see langword="Integer" /> 파일 번호입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
      <returns vsli:raw="The current read/write position in an open file.">열린 파일 내의 현재 읽기/쓰기 위치입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Open" /> 함수를 사용하여 연 파일의 일부 또는 전부에 대한 다른 프로세스의 액세스를 제어합니다. <see langword="My" /> 기능을 사용하면 <see langword="Lock" /> 및 <see langword="Unlock" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Open" /> 함수를 사용하여 연 파일의 일부 또는 전부에 대한 다른 프로세스의 액세스를 제어합니다. <see langword="My" /> 기능을 사용하면 <see langword="Lock" /> 및 <see langword="Unlock" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Record" vsli:raw="Optional. Number of the only record or byte to lock or unlock.">선택 사항입니다. 잠그거나 잠금을 해제할 레코드 또는 바이트 번호입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Open" /> 함수를 사용하여 연 파일의 일부 또는 전부에 대한 다른 프로세스의 액세스를 제어합니다. <see langword="My" /> 기능을 사용하면 <see langword="Lock" /> 및 <see langword="Unlock" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="FromRecord" vsli:raw="Optional. Number of the first record or byte to lock or unlock.">선택 사항입니다. 잠그거나 잠금을 해제할 첫째 레코드 또는 바이트 번호입니다.</param>
      <param name="ToRecord" vsli:raw="Optional. Number of the last record or byte to lock or unlock.">선택 사항입니다. 잠그거나 잠금을 해제할 마지막 레코드 또는 바이트 번호입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary vsli:raw="Returns the size, in bytes, of a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;LOF&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="FileOpen" /> 함수를 사용하여 연 파일의 크기(바이트)를 반환합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="LOF" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. An integer that contains a valid file number.">필수 요소. 유효한 파일 번호가 포함된 정수입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
      <returns vsli:raw="The size, in bytes, of a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;LOF&quot; /&gt;.">
        <see langword="FileOpen" /> 함수를 사용하여 연 파일의 크기(바이트)입니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="LOF" />보다 더 나은 생산성 및 성능을 제공합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary vsli:raw="Creates a new directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;MkDir&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)&quot; /&gt;.">새 디렉터리를 만듭니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="MkDir" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />를 참조하세요.</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies the directory to be created. The &lt;paramref name=&quot;Path&quot; /&gt; may include the drive. If no drive is specified, &lt;see langword=&quot;MkDir&quot; /&gt; creates the new directory on the current drive.">필수 요소. 만들어질 디렉터리를 식별하는 문자열 식입니다. <paramref name="Path" />에는 드라이브가 포함될 수도 있습니다. 드라이브를 지정하지 않은 경우 <see langword="MkDir" />을 사용하면 현재 드라이브에서 새 디렉터리를 만들 수 있습니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is not specified or is empty.">
        <paramref name="Path" />가 지정되지 않았거나 비어 있습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="Permission denied.">사용 권한이 거부되었습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Directory already exists.">디렉터리가 이미 있습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary vsli:raw="Writes display-formatted data to a sequential file.">표시 형식 데이터를 순차 파일에 씁니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Output" vsli:raw="Optional. Zero or more comma-delimited expressions to write to a file.  &#xA;  &#xA; The &lt;paramref name=&quot;Output&quot; /&gt; argument settings are:  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: File mode is invalid.  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: &lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">선택 사항입니다. 파일에 쓸 쉼표로 구분된 0개 이상의 식입니다.  
  
<paramref name="Output" /> 인수 설정은 다음과 같습니다. 
 <see langword="T:System.IO.IOException" />: 파일 모드가 잘못된 경우  
  
 <paramref name="FileNumber" />가 없는 경우(<see langword="T:System.IO.IOException" />)</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary vsli:raw="Writes display-formatted data to a sequential file.">표시 형식 데이터를 순차 파일에 씁니다.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Output" vsli:raw="Optional. Zero or more comma-delimited expressions to write to a file.  &#xA;  &#xA; The &lt;paramref name=&quot;Output&quot; /&gt; argument settings are:  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: File mode is invalid.  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: &lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">선택 사항입니다. 파일에 쓸 쉼표로 구분된 0개 이상의 식입니다.  
  
<paramref name="Output" /> 인수 설정은 다음과 같습니다. 
 <see langword="T:System.IO.IOException" />: 파일 모드가 잘못된 경우  
  
 <paramref name="FileNumber" />가 없는 경우(<see langword="T:System.IO.IOException" />)</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary vsli:raw="Renames a disk file or directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Rename&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">디스크 파일 또는 디렉터리의 이름을 바꿉니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="Rename" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="OldPath" vsli:raw="Required. A string expression that specifies the existing file name and location. &lt;paramref name=&quot;OldPath&quot; /&gt; may include the directory, and drive, of the file.">필수 요소. 기존 파일 이름과 위치를 지정하는 문자열 식입니다. <paramref name="OldPath" />에는 파일의 디렉터리와 드라이브가 포함될 수 있습니다.</param>
      <param name="NewPath" vsli:raw="Required. A string expression that specifies the new file name and location. &lt;paramref name=&quot;NewPath&quot; /&gt; may include directory and drive of the destination location. The file name specified by &lt;paramref name=&quot;NewPath&quot; /&gt; cannot already exist.">필수 요소. 새 파일 이름과 위치를 지정하는 문자열 식입니다. <paramref name="NewPath" />에는 대상 위치의 디렉터리와 드라이브가 포함될 수 있습니다. <paramref name="NewPath" />에는 이미 있는 파일 이름을 지정할 수 없습니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Path is invalid.">경로가 잘못되었습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="&lt;paramref name=&quot;OldPath&quot; /&gt; file does not exist.">
        <paramref name="OldPath" /> 파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Cannot rename to different device.">다른 디바이스로 이름을 바꿀 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary vsli:raw="Closes all disk files opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Reset&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="FileOpen" /> 함수를 사용하여 연 디스크 파일을 모두 닫습니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="Reset" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary vsli:raw="Removes an existing directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;RmDir&quot; /&gt;. For more information, see &lt;see cref=&quot;Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory&quot; /&gt;.">기존 디렉터리를 제거합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="RmDir" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />를 참조하세요.</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies the directory or folder to be removed. &lt;paramref name=&quot;Path&quot; /&gt; can include the drive. If no drive is specified, &lt;see langword=&quot;RmDir&quot; /&gt; removes the directory on the current drive.">필수 요소. 제거할 디렉터리나 폴더를 식별하는 문자열 식입니다. <paramref name="Path" />에는 드라이브가 포함될 수 있습니다. 드라이브를 지정하지 않은 경우 <see langword="RmDir" />을 사용하면 현재 드라이브에서 디렉터리를 제거할 수 있습니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is not specified or is empty.">
        <paramref name="Path" />가 지정되지 않았거나 비어 있습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Target directory contains files.">대상 디렉터리에 파일이 없습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Directory does not exist.">디렉터리가 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Seek&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Long" /> 함수를 사용하여 연 파일에서 현재 읽기/쓰기 위치를 지정하는 <see langword="FileOpen" />을 반환하거나, <see langword="FileOpen" /> 함수를 사용하여 연 파일에서 다음 읽기/쓰기 작업 위치를 설정합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="Seek" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains a valid file number.">필수 요소. 유효한 파일 번호가 포함된 <see langword="Integer" />입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
      <returns vsli:raw="A &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">
        <see langword="FileOpen" /> 함수를 사용하여 연 파일에서 현재 읽기/쓰기 위치를 지정하는 <see langword="Long" />이거나, <see langword="FileOpen" /> 함수를 사용하여 연 파일에서 다음 읽기/쓰기 작업 위치를 설정합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Seek&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Long" /> 함수를 사용하여 연 파일에서 현재 읽기/쓰기 위치를 지정하는 <see langword="FileOpen" />을 반환하거나, <see langword="FileOpen" /> 함수를 사용하여 연 파일에서 다음 읽기/쓰기 작업 위치를 설정합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="Seek" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains a valid file number.">필수 요소. 유효한 파일 번호가 포함된 <see langword="Integer" />입니다.</param>
      <param name="Position" vsli:raw="Required. Number in the range 1-2,147,483,647, inclusive, that indicates where the next read/write operation should occur.">필수 요소. 1~2,147,483,647 사이의 수로, 다음 읽기/쓰기 작업이 발생할 위치를 나타냅니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary vsli:raw="Sets attribute information for a file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;SetAttr&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">파일의 특성 정보를 설정합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="SetAttr" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file name. &lt;paramref name=&quot;PathName&quot; /&gt; can include directory or folder, and drive.">필수 요소. 파일 이름을 지정하는 문자열 식입니다. <paramref name="PathName" />에는 디렉터리나 폴더 및 드라이브가 포함될 수 있습니다.</param>
      <param name="Attributes" vsli:raw="Required. Constant or numeric expression, whose sum specifies file attributes.">필수 요소. 파일 특성을 지정하는 합계를 가진 상수 또는 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Attribute&quot; /&gt; type is invalid.">
        <paramref name="Attribute" /> 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; function to position output.">
        <see langword="Print" /> 또는 <see langword="PrintLine" /> 함수와 함께 사용되어 출력의 위치를 지정합니다.</summary>
      <param name="Count" vsli:raw="Required. The number of spaces to insert before displaying or printing the next expression in a list.">필수 요소. 목록에서 다음 식을 표시하거나 출력하기 전에 삽입할 공백의 수입니다.</param>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; function to position output.">
        <see langword="Print" /> 또는 <see langword="PrintLine" /> 함수와 함께 사용되어 출력의 위치를 지정합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">
        <see langword="Print" /> 또는 <see langword="PrintLine" /> 함수와 함께 사용되어 출력의 위치를 지정합니다.</summary>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">
        <see langword="Print" /> 또는 <see langword="PrintLine" /> 함수와 함께 사용되어 출력의 위치를 지정합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">
        <see langword="Print" /> 또는 <see langword="PrintLine" /> 함수와 함께 사용되어 출력의 위치를 지정합니다.</summary>
      <param name="Column" vsli:raw="Optional. The column number moved to before displaying or printing the next expression in a list. If omitted, &lt;see langword=&quot;TAB&quot; /&gt; moves the insertion point to the start of the next print zone.">선택 사항입니다. 목록에서 다음 식을 표시하거나 출력하기 전에 이동하는 열 수입니다. 생략할 경우 <see langword="TAB" />은 다음 출력 영역의 시작 부분으로 삽입 지점을 이동합니다.</param>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">
        <see langword="Print" /> 또는 <see langword="PrintLine" /> 함수와 함께 사용되어 출력의 위치를 지정합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Open" /> 함수를 사용하여 연 파일의 일부 또는 전부에 대한 다른 프로세스의 액세스를 제어합니다. <see langword="My" /> 기능을 사용하면 <see langword="Lock" /> 및 <see langword="Unlock" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Open" /> 함수를 사용하여 연 파일의 일부 또는 전부에 대한 다른 프로세스의 액세스를 제어합니다. <see langword="My" /> 기능을 사용하면 <see langword="Lock" /> 및 <see langword="Unlock" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Record" vsli:raw="Optional. Number of the only record or byte to lock or unlock.">선택 사항입니다. 잠그거나 잠금을 해제할 레코드 또는 바이트 번호입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="Open" /> 함수를 사용하여 연 파일의 일부 또는 전부에 대한 다른 프로세스의 액세스를 제어합니다. <see langword="My" /> 기능을 사용하면 <see langword="Lock" /> 및 <see langword="Unlock" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="FromRecord" vsli:raw="Optional. Number of the first record or byte to lock or unlock.">선택 사항입니다. 잠그거나 잠금을 해제할 첫째 레코드 또는 바이트 번호입니다.</param>
      <param name="ToRecord" vsli:raw="Optional. Number of the last record or byte to lock or unlock.">선택 사항입니다. 잠그거나 잠금을 해제할 마지막 레코드 또는 바이트 번호입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary vsli:raw="Writes data to a sequential file. Data written with &lt;see langword=&quot;Write&quot; /&gt; is usually read from a file by using &lt;see langword=&quot;Input&quot; /&gt;.">순차 파일에 데이터를 씁니다. <see langword="Write" />로 작성된 데이터는 일반적으로 <see langword="Input" />을 사용하여 파일에서 읽습니다.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression that contains any valid file number.">필수 요소. 유효한 파일 번호가 포함된 <see langword="Integer" /> 식입니다.</param>
      <param name="Output" vsli:raw="Optional. One or more comma-delimited expressions to write to a file.">선택 사항입니다. 파일에 쓸 쉼표로 구분된 하나 이상의 식입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary vsli:raw="Writes data to a sequential file. Data written with &lt;see langword=&quot;Write&quot; /&gt; is usually read from a file by using &lt;see langword=&quot;Input&quot; /&gt;.">순차 파일에 데이터를 씁니다. <see langword="Write" />로 작성된 데이터는 일반적으로 <see langword="Input" />을 사용하여 파일에서 읽습니다.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression that contains any valid file number.">필수 요소. 유효한 파일 번호가 포함된 <see langword="Integer" /> 식입니다.</param>
      <param name="Output" vsli:raw="Optional. One or more comma-delimited expressions to write to a file.">선택 사항입니다. 파일에 쓸 쉼표로 구분된 하나 이상의 식입니다.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary vsli:raw="The &lt;see langword=&quot;Financial&quot; /&gt; module contains procedures used to perform financial operations.">
        <see langword="Financial" /> 모듈에는 재무 관련 작업을 수행하는 데 사용되는 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.">이중 체감 잔액법 또는 다른 방법을 사용하여 특정 기간의 자산에 대한 감가상각을 지정하는 값을 반환합니다.</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">필수 요소. 초기 자산 비용입니다.</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">필수 요소. 내용 연수 종료 시점의 자산 값입니다.</param>
      <param name="Life" vsli:raw="Required. The length of useful life of the asset.">필수 요소. 자산의 내용 연수 길이입니다.</param>
      <param name="Period" vsli:raw="Required. The period for which asset depreciation is calculated.">필수 요소. 자산 감가상각이 계산되는 기간입니다.</param>
      <param name="Factor" vsli:raw="Optional. The rate at which the balance declines. If omitted, 2 (double-declining method) is assumed.">선택 사항입니다. 잔액 감소 비율입니다. 생략하면 2(이중 체감 잔액법)로 간주됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Factor&quot; /&gt; &amp;lt;= 0, &lt;paramref name=&quot;Salvage&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Period&quot; /&gt; &amp;lt;= 0, or &lt;paramref name=&quot;Period&quot; /&gt; &amp;gt; &lt;paramref name=&quot;Life&quot; /&gt;.">
        <paramref name="Factor" />&lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt; = 0 또는 <paramref name="Period" /> &gt; <paramref name="Life" /> 입니다.</exception>
      <returns vsli:raw="The depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.">이중 체감 잔액법 또는 다른 방법을 사용하여 특정 기간의 자산에 대한 감가상각입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.">일정 기간의 고정 지불액과 고정 이자율을 기준으로 한 예상 연금액을 지정하는 값을 반환합니다.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">필수 요소. 기간당 이자율입니다. 예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">필수 요소. 연금의 총 지불 기간 수입니다. 예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.">필수 요소. 기간당 지불액입니다. 지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</param>
      <param name="PV" vsli:raw="Optional. The present value (or lump sum) of a series of future payments. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make. If omitted, 0 is assumed.">선택 사항입니다. 일련의 미래 지불액에 대한 현재 값 또는 총액입니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다. 생략된 경우 0이라고 가정합니다.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;see langword=&quot;DueDate.EndOfPeriod&quot; /&gt; if payments are due at the end of the payment period, or &lt;see langword=&quot;DueDate.BegOfPeriod&quot; /&gt; if payments are due at the beginning of the period. If omitted, &lt;see langword=&quot;DueDate.EndOfPeriod&quot; /&gt; is assumed.">선택 사항입니다. <see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다. 이 인수는 납입 기한 말에 납입이 되어야 하면 <see langword="DueDate.EndOfPeriod" />이고, 납입 기한 초에 납입이 되어야 하면 <see langword="DueDate.BegOfPeriod" />입니다. 생략하면 <see langword="DueDate.EndOfPeriod" />가 사용됩니다.</param>
      <returns vsli:raw="The future value of an annuity based on periodic, fixed payments and a fixed interest rate.">일정 기간의 고정 지불액과 고정 이자율을 기준으로 한 예상 연금액입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.">일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 이자 지불액을 지정하는 값을 반환합니다.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">필수 요소. 기간당 이자율입니다. 예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</param>
      <param name="Per" vsli:raw="Required. The payment period in the range 1 through &lt;paramref name=&quot;NPer&quot; /&gt;.">필수 요소. 1에서 <paramref name="NPer" />에 이르는 지불 기간입니다.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">필수 요소. 연금의 총 지불 기간 수입니다. 예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">필수 요소. 현재 값, 금일 값, 일련의 미래 지불액 또는 수령액입니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you've made the final payment. For example, the future value of a loan is $0 because that's its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">선택 사항입니다. 최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다. 예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다. 생략된 경우 0이라고 가정합니다.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">선택 사항입니다. <see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다. 이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다. 생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Per&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Per&quot; /&gt; &amp;gt; &lt;paramref name=&quot;NPer&quot; /&gt;">
        <paramref name="Per" />&lt;= 0 또는 <paramref name="Per" /> &gt;<paramref name="NPer" /></exception>
      <returns vsli:raw="The interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.">일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 이자 지불액입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary vsli:raw="Returns a value specifying the internal rate of return for a series of periodic cash flows (payments and receipts).">일련의 주기적인 현금 흐름(지불액과 수령액)에 대한 내부 수익률을 지정하는 값을 반환합니다.</summary>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">필수 요소. 현금 흐름 값을 지정하는 <see cref="T:System.Double" /> 형식의 배열입니다. 배열에는 하나 이상의 음수 값(지불)과 하나 이상의 양수 값(확인)이 포함되어야 합니다.</param>
      <param name="Guess" vsli:raw="Optional. Object specifying value you estimate will be returned by &lt;see langword=&quot;IRR&quot; /&gt;. If omitted, &lt;paramref name=&quot;Guess&quot; /&gt; is 0.1 (10 percent).">선택 사항입니다. <see langword="IRR" />에서 반환할 추정 값을 지정하는 개체입니다. 생략할 경우 <paramref name="Guess" />는 0.1(10%)이 됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Array argument values are invalid or &lt;paramref name=&quot;Guess&quot; /&gt; &amp;lt;= -1.">배열 인수 값이 잘못 되었거나 <paramref name="Guess" /> &lt; =-1입니다.</exception>
      <returns vsli:raw="The internal rate of return for a series of periodic cash flows (payments and receipts).">일련의 주기적인 현금 흐름(지불액과 수령액)에 대한 내부 수익률입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).">일련의 주기적인 현금 흐름(지불액과 수령액)에 대해 수정된 내부 수익률을 지정하는 값을 반환합니다.</summary>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash-flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">필수 요소. 현금 흐름 값을 지정하는 <see cref="T:System.Double" /> 형식의 배열입니다. 배열에는 하나 이상의 음수 값(지불)과 하나 이상의 양수 값(확인)이 포함되어야 합니다.</param>
      <param name="FinanceRate" vsli:raw="Required. The interest rate paid as the cost of financing.">필수 요소. 출자 비용으로 지불될 이자율입니다.</param>
      <param name="ReinvestRate" vsli:raw="Required. The interest rate received on gains from cash reinvestment.">필수 요소. 현금 재투자로 인한 수익에서 받는 이자율입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Rank of &lt;paramref name=&quot;ValueArray&quot; /&gt; does not equal 1, &lt;paramref name=&quot;FinanceRate&quot; /&gt; = -1, or &lt;paramref name=&quot;ReinvestRate&quot; /&gt; = -1">
        <paramref name="ValueArray" /> 차수가 1이 아니거나, <paramref name="FinanceRate" />가 -1이거나, <paramref name="ReinvestRate" />가 -1입니다.</exception>
      <exception cref="T:System.DivideByZeroException" vsli:raw="Division by zero has occurred.">0으로 나누었습니다.</exception>
      <returns vsli:raw="The modified internal rate of return for a series of periodic cash flows (payments and receipts).">일련의 주기적인 현금 흐름(지불액과 수령액)에 대해 수정된 내부 수익률입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.">일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 기간 수를 지정하는 값을 반환합니다.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">필수 요소. 기간당 이자율입니다. 예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that does not change over the life of the annuity.">필수 요소. 기간당 지불액입니다. 지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">필수 요소. 현재 값, 금일 값, 일련의 미래 지불액 또는 수령액입니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">선택 사항입니다. 최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다. 예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다. 생략된 경우 0이라고 가정합니다.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">선택 사항입니다. <see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다. 이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다. 생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Rate&quot; /&gt; = 0 and &lt;paramref name=&quot;Pmt&quot; /&gt; = 0">
        <paramref name="Rate" />와 <paramref name="Pmt" />가 모두 0입니다.</exception>
      <returns vsli:raw="The number of periods for an annuity based on periodic fixed payments and a fixed interest rate.">일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 기간 수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary vsli:raw="Returns a value specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.">일정 기간 현금 흐름(지불액과 수령액)과 할인율을 기준으로 현재의 순 투자 가치를 지정하는 값을 반환합니다.</summary>
      <param name="Rate" vsli:raw="Required. The discount rate over the length of the period, expressed as a decimal.">필수 요소. 전 기간에 걸친 할인율이며 10진수로 표시합니다.</param>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">필수 요소. 현금 흐름 값을 지정하는 <see cref="T:System.Double" /> 형식의 배열입니다. 배열에는 하나 이상의 음수 값(지불)과 하나 이상의 양수 값(확인)이 포함되어야 합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ValueArray&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, rank of &lt;paramref name=&quot;ValueArray&quot; /&gt; &amp;lt;&amp;gt; 1, or &lt;paramref name=&quot;Rate&quot; /&gt; = -1">
        <paramref name="ValueArray" />is <see langword="Nothing" /> , rank <paramref name="ValueArray" /> &lt; &gt; 1 또는 <paramref name="Rate" /> =-1입니다.</exception>
      <returns vsli:raw="The net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.">일정 기간 현금 흐름(지불액과 수령액)과 할인율을 기준으로 현재의 순 투자 가치입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.">일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금에 대한 지불액을 지정하는 값을 반환합니다.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">필수 요소. 기간당 이자율입니다. 예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.">필수 요소. 연금의 총 지불 기간 수입니다. 예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 × 12, 즉 48입니다.</param>
      <param name="PV" vsli:raw="Required. The present value (or lump sum) that a series of payments to be paid in the future is worth now. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">필수 요소. 일련의 미래 지불액에 대한 현재 값 또는 총액입니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">선택 사항입니다. 최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다. 예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다. 생략된 경우 0이라고 가정합니다.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">선택 사항입니다. <see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다. 이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다. 생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NPer&quot; /&gt; = 0.">
        <paramref name="NPer" /> = 0.</exception>
      <returns vsli:raw="The payment for an annuity based on periodic, fixed payments and a fixed interest rate.">일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금에 대한 지불액입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.">일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 원금 지불액을 지정하는 값을 반환합니다.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">필수 요소. 기간당 이자율입니다. 예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</param>
      <param name="Per" vsli:raw="Required. The payment period in the range 1 through &lt;paramref name=&quot;NPer&quot; /&gt;.">필수 요소. 1에서 <paramref name="NPer" />에 이르는 지불 기간입니다.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">필수 요소. 연금의 총 지불 기간 수입니다. 예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</param>
      <param name="PV" vsli:raw="Required. The current value of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">필수 요소. 일련의 미래 지불액 또는 수령액의 현재 값입니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">선택 사항입니다. 최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다. 예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다. 생략된 경우 0이라고 가정합니다.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">선택 사항입니다. <see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다. 이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다. 생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Per&quot; /&gt; &amp;lt;=0 or &lt;paramref name=&quot;Per&quot; /&gt; &amp;gt; &lt;paramref name=&quot;NPer&quot; /&gt;.">
        <paramref name="Per" />&lt;= 0 또는 <paramref name="Per" /> &gt; <paramref name="NPer" />.</exception>
      <returns vsli:raw="The principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.">일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 원금 지불액입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.">미래에 지불할 일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 현재 가치를 지정하는 값을 반환합니다.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">필수 요소. 기간당 이자율입니다. 예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.">필수 요소. 연금의 총 지불 기간 수입니다. 예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that does not change during the life of the annuity.">필수 요소. 기간당 지불액입니다. 지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">선택 사항입니다. 최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다. 예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다. 생략된 경우 0이라고 가정합니다.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">선택 사항입니다. <see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다. 이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다. 생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</param>
      <returns vsli:raw="The present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.">미래에 지불할 일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 현재 가치입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary vsli:raw="Returns a value specifying the interest rate per period for an annuity.">연금에 대한 일정 기간당 이자율을 지정하는 값을 반환합니다.</summary>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 * 12 (or 48) payment periods.">필수 요소. 연금의 총 지불 기간 수입니다. 예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 * 12(즉 48)입니다.</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.">필수 요소. 기간당 지불액입니다. 지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">필수 요소. 현재 값, 금일 값, 일련의 미래 지불액 또는 수령액입니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">선택 사항입니다. 최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다. 예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다. 생략된 경우 0이라고 가정합니다.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">선택 사항입니다. <see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다. 이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다. 생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</param>
      <param name="Guess" vsli:raw="Optional. The value you estimate is returned by &lt;see langword=&quot;Rate&quot; /&gt;. If omitted, &lt;paramref name=&quot;Guess&quot; /&gt; is 0.1 (10 percent).">선택 사항입니다. <see langword="Rate" />가 반환하는 추정 값입니다. 생략할 경우 <paramref name="Guess" />는 0.1(10%)이 됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NPer&quot; /&gt; &amp;lt;= 0.">
        <paramref name="NPer" />&lt;= 0.</exception>
      <returns vsli:raw="The interest rate per period for an annuity.">연금에 대한 일정 기간당 이자율입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the straight-line depreciation of an asset for a single period.">단일 기간의 자산에 대한 정액법을 지정하는 값을 반환합니다.</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">필수 요소. 초기 자산 비용입니다.</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">필수 요소. 내용 연수 종료 시점의 자산 값입니다.</param>
      <param name="Life" vsli:raw="Required. The length of the useful life of the asset.">필수 요소. 자산의 내용 연수 길이입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Life&quot; /&gt; = 0.">
        <paramref name="Life" /> = 0.</exception>
      <returns vsli:raw="The straight-line depreciation of an asset for a single period.">단일 기간의 자산에 대한 정액법입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the sum-of-years digits depreciation of an asset for a specified period.">지정한 기간 동안 자산의 연수 합계 감가상각을 지정하는 값을 반환합니다.</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">필수 요소. 초기 자산 비용입니다.</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">필수 요소. 내용 연수 종료 시점의 자산 값입니다.</param>
      <param name="Life" vsli:raw="Required. The length of the useful life of the asset.">필수 요소. 자산의 내용 연수 길이입니다.</param>
      <param name="Period" vsli:raw="Required. The period for which asset depreciation is calculated.">필수 요소. 자산 감가상각이 계산되는 기간입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Salvage&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Period&quot; /&gt; &amp;gt; &lt;paramref name=&quot;Life&quot; /&gt;, or &lt;paramref name=&quot;Period&quot; /&gt; &amp;lt;=0.">
        <paramref name="Salvage" />&lt;0, <paramref name="Period" /> &gt; <paramref name="Life" />, 또는 <paramref name="Period" /> &lt; =.</exception>
      <returns vsli:raw="The sum-of-years digits depreciation of an asset for a specified period.">지정한 기간 동안 자산의 연수 합계 감가상각입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary vsli:raw="Indicates the first day of the week to use when calling date-related functions.">날짜 관련 함수를 호출할 때 사용할 주의 첫째 요일을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary vsli:raw="Friday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFriday&quot; /&gt;.">금요일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbFriday" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary vsli:raw="Monday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMonday&quot; /&gt;.">월요일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbMonday" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary vsli:raw="Saturday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSaturday&quot; /&gt;.">토요일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbSaturday" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary vsli:raw="Sunday (default) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSunday&quot; /&gt;.">일요일입니다(기본값). 이 멤버는 Visual Basic 상수 <see langword="vbSunday" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary vsli:raw="The first day of the week as specified in your system settings This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUseSystemDayOfWeek&quot; /&gt;.">시스템 설정에 지정된 주의 첫째 요일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbUseSystemDayOfWeek" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary vsli:raw="Thursday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbThursday&quot; /&gt;.">목요일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbThursday" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary vsli:raw="Tuesday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTuesday&quot; /&gt;.">화요일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbTuesday" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary vsli:raw="Wednesday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbWednesday&quot; /&gt;.">수요일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbWednesday" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary vsli:raw="Indicates the first week of the year to use when calling date-related functions.">날짜 관련 함수를 호출할 때 사용할 연도의 첫째 주를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary vsli:raw="The first week that has at least four days in the new year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstFourDays&quot; /&gt;.">새해에 4일 이상의 요일이 있는 첫 주입니다. 이 멤버는 Visual Basic 상수 <see langword="vbFirstFourDays" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary vsli:raw="The first full week of the year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstFullWeek&quot; /&gt;.">해당 연도에 전체 요일이 있는 첫 주입니다. 이 멤버는 Visual Basic 상수 <see langword="vbFirstFullWeek" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary vsli:raw="The week in which January 1 occurs (default). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstJan1&quot; /&gt;.">1월 1일이 속해 있는 주입니다(기본값). 이 멤버는 Visual Basic 상수 <see langword="vbFirstJan1" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary vsli:raw="The week specified in your system settings as the first week of the year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUseSystem&quot; /&gt;.">시스템 설정에 해당 연도의 첫 주로 지정된 주입니다. 이 멤버는 Visual Basic 상수 <see langword="vbUseSystem" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary vsli:raw="The &lt;see langword=&quot;HideModuleNameAttribute&quot; /&gt; attribute, when applied to a module, allows the module members to be accessed using only the qualification needed for the module.">
        <see langword="HideModuleNameAttribute" /> 특성은 모듈에 적용될 경우 모듈에 필요한 자격만 사용하여 해당 모듈 멤버에 액세스할 수 있도록 합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.HideModuleNameAttribute&quot; /&gt; attribute.">
        <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" /> 특성의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary vsli:raw="The &lt;see langword=&quot;Information&quot; /&gt; module contains the procedures used to return, test for, or verify information.">
        <see langword="Information" /> 모듈에는 정보를 반환하고, 테스트하고, 확인하는 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Erl">
      <summary vsli:raw="Returns an integer indicating the line number of the last executed statement. Read-only.">마지막으로 실행된 문의 줄 번호를 나타내는 정수를 반환합니다. 읽기 전용입니다.</summary>
      <returns vsli:raw="Returns an integer indicating the line number of the last executed statement. Read-only.">마지막으로 실행된 문의 줄 번호를 나타내는 정수를 반환합니다. 읽기 전용입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary vsli:raw="Contains information about run-time errors.">런타임 오류에 대한 정보를 포함합니다.</summary>
      <returns vsli:raw="Contains information about run-time errors.">런타임 오류에 대한 정보를 포함합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether a variable points to an array.">변수가 배열을 가리키고 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable.">필수 요소. <see langword="Object" /> 변수입니다.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether a variable points to an array.">변수가 배열을 가리키고 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression represents a valid &lt;see langword=&quot;Date&quot; /&gt; value.">식이 올바른 <see langword="Boolean" /> 값을 나타내는지 여부를 알리는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">필수 요소. <see langword="Object" /> 식입니다.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression represents a valid &lt;see langword=&quot;Date&quot; /&gt; value.">식이 올바른 <see langword="Boolean" /> 값을 나타내는지 여부를 알리는 <see langword="Date" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to the &lt;see cref=&quot;T:System.DBNull&quot; /&gt; class.">식이 <see cref="T:System.DBNull" /> 클래스로 계산되는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">필수 요소. <see langword="Object" /> 식입니다.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to the &lt;see cref=&quot;T:System.DBNull&quot; /&gt; class.">식이 <see cref="T:System.DBNull" /> 클래스로 계산되는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression is an exception type.">식이 예외 형식인지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">필수 요소. <see langword="Object" /> 식입니다.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression is an exception type.">식이 예외 형식인지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression has no object assigned to it.">식에 할당된 개체가 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">필수 요소. <see langword="Object" /> 식입니다.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression has no object assigned to it.">식에 할당된 개체가 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression can be evaluated as a number.">식이 숫자로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">필수 요소. <see langword="Object" /> 식입니다.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression can be evaluated as a number.">식이 숫자로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to a reference type.">식이 참조 형식으로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">필수 요소. <see langword="Object" /> 식입니다.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to a reference type.">식이 참조 형식으로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary vsli:raw="Returns the lowest available subscript for the indicated dimension of an array.">배열의 표시된 차원에 사용할 수 있는 최저 첨자를 반환합니다.</summary>
      <param name="Array" vsli:raw="Required. Array of any data type. The array in which you want to find the lowest possible subscript of a dimension.">필수 요소. 데이터 형식의 배열로, 차원의 가능한 최저 첨자를 찾을 배열입니다.</param>
      <param name="Rank" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The dimension for which the lowest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If &lt;paramref name=&quot;Rank&quot; /&gt; is omitted, 1 is assumed.">선택 사항입니다. <see langword="Integer" />. 가능한 최저 첨자가 반환될 차원입니다. 첫 번째 차원에는 1, 두 번째 차원에는 2를 사용하는 방식으로 사용됩니다. <paramref name="Rank" />가 생략되면 1이 사용됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Array" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;Rank&quot; /&gt; less than 1, or &lt;paramref name=&quot;Rank&quot; /&gt; is greater than the rank of &lt;paramref name=&quot;Array&quot; /&gt;.">
        <paramref name="Rank" />가 1보다 작거나 <paramref name="Rank" />가 <paramref name="Array" />의 차수보다 큽니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. The lowest value the subscript for the specified dimension can contain. &lt;see langword=&quot;LBound&quot; /&gt; always returns 0 as long as &lt;paramref name=&quot;Array&quot; /&gt; has been initialized, even if it has no elements, for example if it is a zero-length string. If &lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;LBound&quot; /&gt; throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;.">
        <see langword="Integer" />. 지정한 차원의 첨자에 포함될 수 있는 가장 낮은 값입니다. <see langword="LBound" />는 <paramref name="Array" />가 초기화된 경우 길이가 0인 문자열과 같이 요소가 없어도 항상 0을 반환합니다. <paramref name="Array" />가 <see langword="Nothing" />이면 <see langword="LBound" />는 <see cref="T:System.ArgumentNullException" />을 throw합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing the RGB color code corresponding to the specified color number.">지정한 색 번호에 해당되는 RGB 색 코드를 나타내는 <see langword="Integer" /> 값을 반환합니다.</summary>
      <param name="Color" vsli:raw="Required. A whole number in the range 0-15.">필수 요소. 0~15 사이의 정수입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Color&quot; /&gt; is outside of range 0 to 15, inclusive.">
        <paramref name="Color" />가 0부터 15까지의 범위를 벗어났습니다.</exception>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing the RGB color code corresponding to the specified color number.">지정한 색 번호에 해당되는 RGB 색 코드를 나타내는 <see langword="Integer" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing an RGB color value from a set of red, green and blue color components.">빨강, 녹색 및 파랑 색 구성 요소 집합에서 RGB 색상 값을 나타내는 <see langword="Integer" /> 값을 반환합니다.</summary>
      <param name="Red" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the red component of the color.">필수 요소. 0~255(포함) 사이의 <see langword="Integer" /> 형식으로, 빨간색의 농도를 나타냅니다.</param>
      <param name="Green" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the green component of the color.">필수 요소. 0~255(포함) 사이의 <see langword="Integer" /> 형식으로, 녹색의 농도를 나타냅니다.</param>
      <param name="Blue" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the blue component of the color.">필수 요소. 0~255(포함) 사이의 <see langword="Integer" /> 형식으로, 파란색의 농도를 나타냅니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Green&quot; /&gt;, &lt;paramref name=&quot;Blue&quot; /&gt;, or &lt;paramref name=&quot;Red&quot; /&gt; is outside of range 0 to 255, inclusive.">
        <paramref name="Green" />, <paramref name="Blue" /> 또는 <paramref name="Red" />가 0부터 255까지의 범위를 벗어났습니다.</exception>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing an RGB color value from a set of red, green and blue color components.">빨강, 녹색 및 파랑 색 구성 요소 집합에서 RGB 색상 값을 나타내는 <see langword="Integer" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the system data type name of a variable.">변수의 시스템 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</summary>
      <param name="VbName" vsli:raw="Required. A &lt;see langword=&quot;String&quot; /&gt; variable containing a Visual Basic type name.">필수 요소. Visual Basic 형식 이름을 포함하는 <see langword="String" /> 변수입니다.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the system data type name of a variable.">변수의 시스템 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing data-type information about a variable.">변수에 대한 데이터 형식 정보를 포함하는 <see langword="String" /> 값을 반환합니다.</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">필수 요소. <see langword="Object" /> 변수입니다. <see langword="Option Strict" />가 <see langword="Off" />이면 구조체를 제외한 모든 데이터 형식의 변수를 전달할 수 있습니다.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing data-type information about a variable.">변수에 대한 데이터 형식 정보를 포함하는 <see langword="String" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary vsli:raw="Returns the highest available subscript for the indicated dimension of an array.">배열의 표시된 차원에 사용할 수 있는 최고 첨자를 반환합니다.</summary>
      <param name="Array" vsli:raw="Required. Array of any data type. The array in which you want to find the highest possible subscript of a dimension.">필수 요소. 데이터 형식의 배열로, 차원의 가능한 최고 첨자를 찾을 배열입니다.</param>
      <param name="Rank" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The dimension for which the highest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If &lt;paramref name=&quot;Rank&quot; /&gt; is omitted, 1 is assumed.">선택 사항입니다. <see langword="Integer" />. 가능한 최고 첨자가 반환될 차원입니다. 첫 번째 차원에는 1, 두 번째 차원에는 2를 사용하는 방식으로 사용됩니다. <paramref name="Rank" />가 생략되면 1이 사용됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Array" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;Rank&quot; /&gt; is less than 1, or &lt;paramref name=&quot;Rank&quot; /&gt; is greater than the rank of &lt;paramref name=&quot;Array&quot; /&gt;.">
        <paramref name="Rank" />가 1보다 작거나 <paramref name="Rank" />가 <paramref name="Array" />의 차수보다 큽니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. The highest value the subscript for the specified dimension can contain. If &lt;paramref name=&quot;Array&quot; /&gt; has only one element, &lt;see langword=&quot;UBound&quot; /&gt; returns 0. If &lt;paramref name=&quot;Array&quot; /&gt; has no elements, for example if it is a zero-length string, &lt;see langword=&quot;UBound&quot; /&gt; returns -1.">
        <see langword="Integer" />. 지정한 차원의 첨자에 포함될 수 있는 가장 높은 값입니다. <paramref name="Array" />에 요소가 하나만 있으면 <see langword="UBound" />에서 0을 반환합니다. 길이가 0인 문자열과 같이 <paramref name="Array" />에 요소가 없으면 <see langword="UBound" />에서 -1을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value containing the data type classification of a variable.">변수의 데이터 형식 분류를 포함하는 <see langword="Integer" /> 값을 반환합니다.</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">필수 요소. <see langword="Object" /> 변수입니다. <see langword="Option Strict" />가 <see langword="Off" />이면 구조체를 제외한 모든 데이터 형식의 변수를 전달할 수 있습니다.</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value containing the data type classification of a variable.">변수의 데이터 형식 분류를 포함하는 <see langword="Integer" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the Visual Basic data type name of a variable.">변수의 Visual Basic 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</summary>
      <param name="UrtName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; variable containing a type name used by the common language runtime.">필수 요소. 공용 언어 런타임에서 사용되는 형식 이름을 포함하는 <see langword="String" /> 변수입니다.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the Visual Basic data type name of a variable.">변수의 Visual Basic 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary vsli:raw="The &lt;see langword=&quot;Interaction&quot; /&gt; module contains procedures used to interact with objects, applications, and systems.">
        <see langword="Interaction" /> 모듈에는 개체, 애플리케이션 및 시스템과 상호 작용하는 데 사용되는 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
      <summary vsli:raw="Activates an application that is already running.">이미 실행 중인 애플리케이션을 활성화합니다.</summary>
      <param name="ProcessId" vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt; specifying the Win32 process ID number assigned to this process. You can use the ID returned by the &lt;see cref=&quot;M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)&quot; /&gt;, provided it is not zero.">이 프로세스에 할당되는 Win32 프로세스 ID 번호를 지정하는 <see langword="Integer" />입니다. <see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />에서 반환된 ID가 0이 아닐 경우 이 ID를 사용할 수 있습니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
      <summary vsli:raw="Activates an application that is already running.">이미 실행 중인 애플리케이션을 활성화합니다.</summary>
      <param name="Title" vsli:raw="&lt;see langword=&quot;String&quot; /&gt; expression specifying the title in the title bar of the application you want to activate. You can use the title assigned to the application when it was launched.">활성화할 애플리케이션의 제목 표시줄에 표시되는 제목을 지정하는 <see langword="String" /> 식입니다. 애플리케이션이 시작될 때 애플리케이션에 할당된 제목을 사용할 수 있습니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary vsli:raw="Sounds a tone through the computer's speaker.">컴퓨터 스피커를 통해 소리를 냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary vsli:raw="Executes a method on an object, or sets or returns a property on an object.">개체의 메서드를 실행하거나 개체의 속성을 설정 또는 반환합니다.</summary>
      <param name="ObjectRef" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. A pointer to the object exposing the property or method.">필수 요소. <see langword="Object" />. 형식이며 속성이나 메서드를 노출하는 개체에 대한 포인터입니다.</param>
      <param name="ProcName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. A string expression containing the name of the property or method on the object.">필수 요소. <see langword="String" />. 형식이며 개체의 속성이나 메서드 이름이 포함된 문자열 식입니다.</param>
      <param name="UseCallType" vsli:raw="Required. An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of &lt;see langword=&quot;CallType&quot; /&gt; can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">필수 요소. 호출되는 프로시저 형식을 나타내는 <see cref="T:Microsoft.VisualBasic.CallType" /> 형식의 열거형 멤버입니다. <see langword="CallType" /> 값은 <see langword="Method" />, <see langword="Get" /> 또는 <see langword="Set" />이 될 수 있습니다.</param>
      <param name="Args" vsli:raw="Optional. &lt;see langword=&quot;ParamArray&quot; /&gt;. A parameter array containing the arguments to be passed to the property or method being called.">선택 사항입니다. <see langword="ParamArray" />. 형식이며 호출되는 속성이나 메서드에 전달될 인수가 포함된 매개 변수 배열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Invalid &lt;paramref name=&quot;UseCallType&quot; /&gt; value; must be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">
        <paramref name="UseCallType" /> 값이 잘못되었습니다. <see langword="Method" />, <see langword="Get" /> 또는 <see langword="Set" />이어야 합니다.</exception>
      <returns vsli:raw="Executes a method on an object, or sets or returns a property on an object.">개체의 메서드를 실행하거나 개체의 속성을 설정 또는 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
      <summary vsli:raw="Selects and returns a value from a list of arguments.">인수 목록에서 값을 선택하고 반환합니다.</summary>
      <param name="Index" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt;. Numeric expression that results in a value between 1 and the number of elements passed in the &lt;paramref name=&quot;Choice&quot; /&gt; argument.">필수 요소. <see cref="T:System.Double" />. 1과 <paramref name="Choice" /> 인수에 전달된 요소 수 사이의 값을 반환하는 숫자 식입니다.</param>
      <param name="Choice" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; parameter array. You can supply either a single variable or an expression that evaluates to the &lt;see langword=&quot;Object&quot; /&gt; data type, to a list of &lt;see langword=&quot;Object&quot; /&gt; variables or expressions separated by commas, or to a single-dimensional array of &lt;see langword=&quot;Object&quot; /&gt; elements.">필수 요소. <see langword="Object" /> 매개 변수 배열입니다. <see langword="Object" /> 데이터 형식, 쉼표로 구분된 <see langword="Object" /> 변수나 식의 목록 또는 <see langword="Object" /> 요소의 1차원 배열로 계산되는 단일 변수나 식을 사용할 수 있습니다.</param>
      <returns vsli:raw="Selects and returns a value from a list of arguments.">인수 목록에서 값을 선택하고 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Command">
      <summary vsli:raw="Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic. The &lt;see langword=&quot;My&quot; /&gt; feature provides greater productivity and performance than the &lt;see langword=&quot;Command&quot; /&gt; function. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs&quot; /&gt;.">Visual Basic으로 작성한 실행 가능한 프로그램 또는 Visual Basic을 시작하는 데 사용되는 명령줄의 인수 부분을 반환합니다. <see langword="My" /> 기능을 사용하면 <see langword="Command" /> 함수보다 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />를 참조하세요.</summary>
      <returns vsli:raw="The argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.  &#xA;  &#xA; The &lt;see langword=&quot;My&quot; /&gt; feature provides greater productivity and performance than the &lt;see langword=&quot;Command&quot; /&gt; function. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs&quot; /&gt;.">Visual Basic 또는 Visual Basic으로 개발한 실행 가능한 프로그램을 시작하는 데 사용되는 명령줄의 인수 부분입니다.  
  
<see langword="My" /> 기능을 사용하면 <see langword="Command" /> 함수보다 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />를 참조하세요.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary vsli:raw="Creates and returns a reference to a COM object. &lt;see langword=&quot;CreateObject&quot; /&gt; cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.">COM 개체를 만들고 만든 개체에 대한 참조를 반환합니다. 클래스가 명시적으로 COM 구성 요소로 노출되지 않는 경우 Visual Basic에서 <see langword="CreateObject" />를 사용하여 해당 클래스의 인스턴스를 만들 수 없습니다.</summary>
      <param name="ProgId" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. The program ID of the object to create.">필수 요소. <see langword="String" />. 만들 개체의 프로그램 ID입니다.</param>
      <param name="ServerName" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt;. The name of the network server where the object will be created. If &lt;paramref name=&quot;ServerName&quot; /&gt; is an empty string (&quot;&quot;), the local computer is used.">선택 사항입니다. <see langword="String" />. 개체가 만들어질 네트워크 서버의 이름입니다. <paramref name="ServerName" />이 빈 문자열("")이면 로컬 컴퓨터가 사용됩니다.</param>
      <exception cref="T:System.Exception" vsli:raw="Server is unavailable">서버를 사용할 수 없습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="No object of the specified type exists.">지정된 형식의 개체가 없습니다.</exception>
      <returns vsli:raw="Creates and returns a reference to a COM object. &lt;see langword=&quot;CreateObject&quot; /&gt; cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.">COM 개체를 만들고 만든 개체에 대한 참조를 반환합니다. 클래스가 명시적으로 COM 구성 요소로 노출되지 않는 경우 Visual Basic에서 <see langword="CreateObject" />를 사용하여 해당 클래스의 인스턴스를 만들 수 없습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
      <summary vsli:raw="Deletes a section or key setting from an application's entry in the Windows registry. The &lt;see langword=&quot;My&quot; /&gt; feature gives you greater productivity and performance in registry operations than the &lt;see langword=&quot;DeleteSetting&quot; /&gt; function. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.Devices.ServerComputer.Registry&quot; /&gt; .">Windows 레지스트리에 있는 애플리케이션 엔트리에서 섹션 설정 또는 키 설정을 삭제합니다. <see langword="My" /> 기능을 사용하면 <see langword="DeleteSetting" /> 함수보다 레지스트리 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />을 참조하세요.</summary>
      <param name="AppName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing the name of the application or project to which the section or key setting applies.">필수 요소. 섹션 또는 키 설정이 적용되는 애플리케이션이나 프로젝트의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Section" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing the name of the section from which the key setting is being deleted. If only &lt;paramref name=&quot;AppName&quot; /&gt; and &lt;paramref name=&quot;Section&quot; /&gt; are provided, the specified section is deleted along with all related key settings.">필수 요소. 키 설정을 삭제할 섹션의 이름을 포함하는 <see langword="String" /> 식입니다. <paramref name="AppName" />과 <paramref name="Section" />만 제공할 경우 모든 관련 키 설정과 함께 지정한 섹션이 삭제됩니다.</param>
      <param name="Key" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression containing the name of the key setting being deleted.">선택 사항입니다. 삭제할 키 설정의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="User is not logged in.">사용자가 로그인하지 않았습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
      <summary vsli:raw="Returns the string associated with an operating-system environment variable.">운영 체제 환경 변수와 연결된 문자열을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.">필수 요소. 환경 변수의 이름이 포함된 문자열이나 환경 문자열 테이블에 있는 환경 문자열의 순서에 해당하는 정수를 계산하는 식입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is missing.">
        <paramref name="Expression" />이 없습니다.</exception>
      <returns vsli:raw="The string associated with an operating-system environment variable.">운영 체제 환경 변수와 연결된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
      <summary vsli:raw="Returns the string associated with an operating-system environment variable.">운영 체제 환경 변수와 연결된 문자열을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.">필수 요소. 환경 변수의 이름이 포함된 문자열이나 환경 문자열 테이블에 있는 환경 문자열의 순서에 해당하는 정수를 계산하는 식입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is missing.">
        <paramref name="Expression" />이 없습니다.</exception>
      <returns vsli:raw="The string associated with an operating-system environment variable.">운영 체제 환경 변수와 연결된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
      <summary vsli:raw="Returns a list of key settings and their respective values (originally created with &lt;see langword=&quot;SaveSetting&quot; /&gt;) from an application's entry in the Windows registry. Using the &lt;see langword=&quot;My&quot; /&gt; feature gives you greater productivity and performance in registry operations than &lt;see langword=&quot;GetAllSettings&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.Devices.ServerComputer.Registry&quot; /&gt;.">Windows 레지스트리에 있는 애플리케이션 엔트리에서 키 설정 및 해당 값(원래 <see langword="SaveSetting" />으로 만든 값)의 목록을 반환합니다. <see langword="My" /> 기능을 사용하면 <see langword="GetAllSettings" /> 함수보다 레지스트리 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />를 참조하세요.</summary>
      <param name="AppName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing the name of the application or project whose key settings are requested.">필수 요소. 키 설정이 요청된 애플리케이션이나 프로젝트의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Section" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing the name of the section whose key settings are requested. &lt;see langword=&quot;GetAllSettings&quot; /&gt; returns an object that contains a two-dimensional array of strings. The strings contain all the key settings in the specified section, plus their corresponding values.">필수 요소. 키 설정이 요청된 섹션의 이름을 포함하는 <see langword="String" /> 식입니다. <see langword="GetAllSettings" />는 2차원 문자열 배열을 포함하는 개체를 반환합니다. 이 문자열은 지정한 섹션의 모든 키 설정과 이 설정에 해당하는 값을 포함합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="User is not logged in.">사용자가 로그인하지 않았습니다.</exception>
      <returns vsli:raw="A list of key settings and their respective values (originally created with &lt;see langword=&quot;SaveSetting&quot; /&gt;) from an application's entry in the Windows registry.  &#xA;  &#xA; Using the &lt;see langword=&quot;My&quot; /&gt; feature gives you greater productivity and performance in registry operations than &lt;see langword=&quot;GetAllSettings&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.Devices.ServerComputer.Registry&quot; /&gt;.">Windows 레지스트리에 있는 애플리케이션 엔트리에서 키 설정 및 해당 값(원래 <see langword="SaveSetting" />으로 만든 값)의 목록입니다.  
  
<see langword="My" /> 기능을 사용하면 <see langword="GetAllSettings" /> 함수보다 레지스트리 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />를 참조하세요.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
      <summary vsli:raw="Returns a reference to an object provided by a COM component.">COM 구성 요소에 의해 제공된 개체에 대한 참조를 반환합니다.</summary>
      <param name="PathName" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt;. The full path and name of the file containing the object to retrieve. If &lt;paramref name=&quot;PathName&quot; /&gt; is omitted, &lt;paramref name=&quot;Class&quot; /&gt; is required.">선택 사항입니다. <see langword="String" />. 검색할 개체를 포함하는 파일의 전체 경로와 이름입니다. <paramref name="PathName" />을 생략하면 <paramref name="Class" />가 필요합니다.</param>
      <param name="Class" vsli:raw="Required if &lt;paramref name=&quot;PathName&quot; /&gt; is not supplied. &lt;see langword=&quot;String&quot; /&gt;. A string representing the class of the object. The &lt;paramref name=&quot;Class&quot; /&gt; argument has the following syntax and parts:  &#xA;  &#xA; &lt;c&gt;appname&lt;/c&gt;&lt;c&gt;.&lt;/c&gt;&lt;c&gt;objecttype&lt;/c&gt;  &#xA;  &#xA; [1|1] Parameter  &#xA;  &#xA; [1|2] Description  &#xA;  &#xA; [2|1] &lt;c&gt;appname&lt;/c&gt;  &#xA;  &#xA; [2|2] Required. &lt;see langword=&quot;String&quot; /&gt;. The name of the application providing the object.  &#xA;  &#xA; [3|1] &lt;c&gt;objecttype&lt;/c&gt;  &#xA;  &#xA; [3|2] Required. &lt;see langword=&quot;String&quot; /&gt;. The type or class of object to create.">
        <paramref name="PathName" />이 제공되지 않을 경우 필요합니다. <see langword="String" />. 개체의 클래스를 나타내는 문자열입니다. <paramref name="Class" /> 인수의 구문과 구성 요소는 다음과 같습니다. 
 <c>appname</c><c>.</c><c>objecttype</c>  
  
[1|1] 매개 변수 
[1|2] 설명 
[2|1] <c>appname</c>  
  
[2|2] 필수적 요소 <see langword="String" />. 개체를 제공하는 애플리케이션의 이름입니다.  
  
[3|1] <c>objecttype</c>  
  
[3|2] 필수적 요소 <see langword="String" />. 만들 개체의 형식이나 클래스입니다.</param>
      <exception cref="T:System.Exception" vsli:raw="No object of the specified class type exists.">지정한 클래스 형식의 개체가 없습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="No object with the specified path and file name exists.">지정한 경로와 파일 이름의 개체가 없습니다.</exception>
      <returns vsli:raw="A reference to an object provided by a COM component.">COM 구성 요소에 의해 제공된 개체에 대한 참조입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Returns a key setting value from an application's entry in the Windows registry. The &lt;see langword=&quot;My&quot; /&gt; feature gives you greater productivity and performance in registry operations than &lt;see langword=&quot;GetAllSettings&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.Devices.ServerComputer.Registry&quot; /&gt;.">Windows 레지스트리에 있는 애플리케이션 엔트리에서 키 설정 값을 반환합니다. <see langword="My" /> 기능을 사용하면 <see langword="GetAllSettings" />보다 레지스트리 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />를 참조하세요.</summary>
      <param name="AppName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing the name of the application or project whose key setting is requested.">필수 요소. 키 설정이 요청된 애플리케이션이나 프로젝트의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Section" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing the name of the section in which the key setting is found.">필수 요소. 키 설정이 있는 섹션의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Key" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing the name of the key setting to return.">필수 요소. 반환할 키 설정의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Default" vsli:raw="Optional. Expression containing the value to return if no value is set in the &lt;paramref name=&quot;Key&quot; /&gt; setting. If omitted, &lt;paramref name=&quot;Default&quot; /&gt; is assumed to be a zero-length string (&quot;&quot;).">선택 사항입니다. <paramref name="Key" /> 설정에 값이 설정되어 있지 않을 경우에 반환할 값을 포함하고 있는 식입니다. 생략할 경우 <paramref name="Default" />는 길이가 0인 문자열("")로 간주됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="One or more arguments are not &lt;see langword=&quot;String&quot; /&gt; expressions, or user is not logged in.">하나 이상의 인수가 <see langword="String" /> 식이 아니거나 사용자가 로그인하지 않았습니다.</exception>
      <returns vsli:raw="A key setting value from an application's entry in the Windows registry.  &#xA;  &#xA; The &lt;see langword=&quot;My&quot; /&gt; feature gives you greater productivity and performance in registry operations than &lt;see langword=&quot;GetAllSettings&quot; /&gt;.">Windows 레지스트리에 있는 애플리케이션 엔트리에서 키 설정 값입니다.  
  
<see langword="My" /> 기능을 사용하면 <see langword="GetAllSettings" />보다 레지스트리 작업의 생산성 및 성능이 향상됩니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary vsli:raw="Returns one of two objects, depending on the evaluation of an expression.">식을 계산한 결과에 따라 두 개의 개체 중에서 하나를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt;. The expression you want to evaluate.">필수 요소. <see langword="Boolean" />. 계산할 식입니다.</param>
      <param name="TruePart" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. Returned if &lt;paramref name=&quot;Expression&quot; /&gt; evaluates to &lt;see langword=&quot;True&quot; /&gt;.">필수 요소. <see langword="Object" />. <paramref name="Expression" />이 <see langword="True" />이면 반환됩니다.</param>
      <param name="FalsePart" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. Returned if &lt;paramref name=&quot;Expression&quot; /&gt; evaluates to &lt;see langword=&quot;False&quot; /&gt;.">필수 요소. <see langword="Object" />. <paramref name="Expression" />이 <see langword="False" />이면 반환됩니다.</param>
      <returns vsli:raw="Returns one of two objects, depending on the evaluation of an expression.">식을 계산한 결과에 따라 두 개의 개체 중에서 하나를 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.">대화 상자에서 프롬프트를 표시하고 사용자가 텍스트를 입력하거나 단추를 클릭할 때까지 대기한 다음 텍스트 상자의 내용을 포함하는 문자열을 반환합니다.</summary>
      <param name="Prompt" vsli:raw="Required &lt;see langword=&quot;String&quot; /&gt; expression displayed as the message in the dialog box. The maximum length of &lt;paramref name=&quot;Prompt&quot; /&gt; is approximately 1024 characters, depending on the width of the characters used. If &lt;paramref name=&quot;Prompt&quot; /&gt; consists of more than one line, you can separate the lines using a carriage return character (&lt;see langword=&quot;Chr(&quot; /&gt;13&lt;see langword=&quot;)&quot; /&gt;), a line feed character (&lt;see langword=&quot;Chr(&quot; /&gt;10&lt;see langword=&quot;)&quot; /&gt;), or a carriage return/line feed combination (&lt;see langword=&quot;Chr(&quot; /&gt;13&lt;see langword=&quot;)&quot; /&gt; &amp;amp; &lt;see langword=&quot;Chr(&quot; /&gt;10&lt;see langword=&quot;)&quot; /&gt;) between each line.">필수적 요소입니다. 대화 상자에서 메시지로 표시되는 <see langword="String" /> 식입니다. <paramref name="Prompt" />의 최대 길이는 대략 1024자이며 사용되는 문자의 너비에 따라 달라집니다. <paramref name="Prompt" />가 두 줄 이상으로 구성되는 경우 캐리지 리턴 문자(<see langword="Chr(" />13<see langword=")" />), 줄 바꿈 문자(<see langword="Chr(" />10<see langword=")" />) 또는 각 줄 사이에 캐리지 리턴/줄 바꿈 조합(<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />)을 사용하여 줄을 구분할 수 있습니다.</param>
      <param name="Title" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression displayed in the title bar of the dialog box. If you omit &lt;paramref name=&quot;Title&quot; /&gt;, the application name is placed in the title bar.">선택 사항입니다. 대화 상자의 제목 표시줄에 표시되는 <see langword="String" /> 식입니다. <paramref name="Title" />을 생략하면 애플리케이션 이름이 제목 표시줄에 나타납니다.</param>
      <param name="DefaultResponse" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression displayed in the text box as the default response if no other input is provided. If you omit &lt;paramref name=&quot;DefaultResponse&quot; /&gt;, the displayed text box is empty.">선택 사항입니다. 입력한 내용이 없는 경우 텍스트 상자에 기본적으로 표시되는 <see langword="String" /> 식입니다. <paramref name="DefaultResponse" />를 생략하면 텍스트 상자가 빈 상태로 표시됩니다.</param>
      <param name="XPos" vsli:raw="Optional. Numeric expression that specifies, in twips, the distance of the left edge of the dialog box from the left edge of the screen. If you omit &lt;paramref name=&quot;XPos&quot; /&gt;, the dialog box is centered horizontally.">선택 사항입니다. 화면 왼쪽 가장자리에서 대화 상자의 왼쪽 가장자리까지의 간격을 트윕 단위로 지정하는 숫자 식입니다. <paramref name="XPos" />를 생략하면 대화 상자는 화면 가운데에 가로 방향으로 배치됩니다.</param>
      <param name="YPos" vsli:raw="Optional. Numeric expression that specifies, in twips, the distance of the upper edge of the dialog box from the top of the screen. If you omit &lt;paramref name=&quot;YPos&quot; /&gt;, the dialog box is positioned vertically approximately one-third of the way down the screen.">선택 사항입니다. 화면 맨 위에서 대화 상자의 위쪽 가장자리까지의 간격을 트윕 단위로 지정하는 숫자 식입니다. <paramref name="YPos" />를 생략하면 대화 상자는 화면 아래 방향으로 1/3 지점에 세로 방향으로 배치됩니다.</param>
      <returns vsli:raw="Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.">대화 상자에서 프롬프트를 표시하고 사용자가 텍스트를 입력하거나 단추를 클릭할 때까지 대기한 다음 텍스트 상자의 내용을 포함하는 문자열을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
      <summary vsli:raw="Displays a message in a dialog box, waits for the user to click a button, and then returns an integer indicating which button the user clicked.">대화 상자에 메시지를 표시하고 사용자가 단추를 클릭할 때까지 대기한 다음 클릭된 단추를 나타내는 정수를 반환합니다.</summary>
      <param name="Prompt" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression displayed as the message in the dialog box. The maximum length of &lt;paramref name=&quot;Prompt&quot; /&gt; is approximately 1024 characters, depending on the width of the characters used. If &lt;paramref name=&quot;Prompt&quot; /&gt; consists of more than one line, you can separate the lines using a carriage return character (&lt;see langword=&quot;Chr(&quot; /&gt;13&lt;see langword=&quot;)&quot; /&gt;), a line feed character (&lt;see langword=&quot;Chr(&quot; /&gt;10&lt;see langword=&quot;)&quot; /&gt;), or a carriage return/linefeed character combination (&lt;see langword=&quot;Chr(&quot; /&gt;13&lt;see langword=&quot;)&quot; /&gt; &amp;amp; &lt;see langword=&quot;Chr(&quot; /&gt;10&lt;see langword=&quot;)&quot; /&gt;) between each line.">필수 요소. 대화 상자에서 메시지로 표시되는 <see langword="String" /> 식입니다. <paramref name="Prompt" />의 최대 길이는 대략 1024자이며 사용되는 문자의 너비에 따라 달라집니다. <paramref name="Prompt" />가 두 줄 이상으로 구성되는 경우 캐리지 리턴 문자(<see langword="Chr(" />13<see langword=")" />), 줄 바꿈 문자(<see langword="Chr(" />10<see langword=")" />) 또는 각 줄 사이에 캐리지 리턴/줄 바꿈 조합(<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />)을 사용하여 줄을 구분할 수 있습니다.</param>
      <param name="Buttons" vsli:raw="Optional. Numeric expression that is the sum of values specifying the number and type of buttons to display, the icon style to use, the identity of the default button, and the modality of the message box. If you omit &lt;paramref name=&quot;Buttons&quot; /&gt;, the default value is zero.">선택 사항입니다. 표시할 단추의 수와 형식, 사용할 아이콘 스타일, 기본 단추의 ID 및 메시지 상자의 모달을 지정하는 값의 합을 나타내는 숫자 식입니다. <paramref name="Buttons" />를 생략한 경우 기본값은 0입니다.</param>
      <param name="Title" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression displayed in the title bar of the dialog box. If you omit &lt;paramref name=&quot;Title&quot; /&gt;, the application name is placed in the title bar.">선택 사항입니다. 대화 상자의 제목 표시줄에 표시되는 <see langword="String" /> 식입니다. <paramref name="Title" />을 생략하면 애플리케이션 이름이 제목 표시줄에 나타납니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Prompt&quot; /&gt; is not a &lt;see langword=&quot;String&quot; /&gt; expression, or &lt;paramref name=&quot;Title&quot; /&gt; is invalid.">
        <paramref name="Prompt" />가 <see langword="String" /> 식이 아니거나 <paramref name="Title" />이 올바르지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Process is not running in User Interactive mode.">프로세스가 사용자 대화형 모드로 실행되고 있지 않습니다.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="One or more parameters not a member of &lt;see langword=&quot;MsgBoxResult&quot; /&gt; or &lt;see langword=&quot;MsgBoxStyle&quot; /&gt; enumeration.">하나 이상의 매개 변수가 <see langword="MsgBoxResult" /> 또는 <see langword="MsgBoxStyle" /> 열거형의 멤버가 아닙니다.</exception>
      <returns vsli:raw="One of the following values:&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;Constant&lt;/term&gt;&lt;description&gt;Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;OK&quot; /&gt;&lt;/term&gt;&lt;description&gt;1&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Cancel&quot; /&gt;&lt;/term&gt;&lt;description&gt;2&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Abort&quot; /&gt;&lt;/term&gt;&lt;description&gt;3&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Retry&quot; /&gt;&lt;/term&gt;&lt;description&gt;4&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Ignore&quot; /&gt;&lt;/term&gt;&lt;description&gt;5&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Yes&quot; /&gt;&lt;/term&gt;&lt;description&gt;6&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;No&quot; /&gt;&lt;/term&gt;&lt;description&gt;7&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">다음 값 중 하나입니다. <list type="table"><listheader><term>상수</term><description>값</description></listheader><item><term><see langword="OK" /></term><description>1</description></item><item><term><see langword="Cancel" /></term><description>2</description></item><item><term><see langword="Abort" /></term><description>3</description></item><item><term><see langword="Retry" /></term><description>4</description></item><item><term><see langword="Ignore" /></term><description>5</description></item><item><term><see langword="Yes" /></term><description>6</description></item><item><term><see langword="No" /></term><description>7</description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary vsli:raw="Returns a string representing the calculated range that contains a number.">숫자가 들어 있는 계산된 범위를 나타내는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Long&quot; /&gt;. Whole number that you want to locate within one of the calculated ranges.">필수 요소. <see langword="Long" />. 하나의 계산된 범위에서 찾을 정수입니다.</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Long&quot; /&gt;. Whole number that indicates the start of the set of calculated ranges. &lt;paramref name=&quot;Start&quot; /&gt; cannot be less than 0.">필수 요소. <see langword="Long" />. 계산된 범위 집합의 시작을 나타내는 정수입니다. <paramref name="Start" />는 0보다 작을 수 없습니다.</param>
      <param name="Stop" vsli:raw="Required. &lt;see langword=&quot;Long&quot; /&gt;. Whole number that indicates the end of the set of calculated ranges. &lt;paramref name=&quot;Stop&quot; /&gt; cannot be less than or equal to &lt;paramref name=&quot;Start&quot; /&gt;.">필수 요소. <see langword="Long" />. 계산된 범위 집합의 끝을 나타내는 정수입니다. <paramref name="Stop" />은 <paramref name="Start" />보다 작거나 같을 수 없습니다.</param>
      <param name="Interval" vsli:raw="Required. &lt;see langword=&quot;Long&quot; /&gt;. Whole number that indicates the size of each range calculated between &lt;paramref name=&quot;Start&quot; /&gt; and &lt;paramref name=&quot;Stop&quot; /&gt;. &lt;paramref name=&quot;Interval&quot; /&gt; cannot be less than 1.">필수 요소. <see langword="Long" />. <paramref name="Start" />와 <paramref name="Stop" /> 사이에서 계산되는 각 범위의 크기를 나타내는 정수입니다. <paramref name="Interval" />은 1보다 작을 수 없습니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Stop&quot; /&gt; &amp;lt;= &lt;paramref name=&quot;Start&quot; /&gt;, or &lt;paramref name=&quot;Interval&quot; /&gt; &amp;lt; 1.">
        <paramref name="Start" /> &lt; 0, <paramref name="Stop" /> &lt;= <paramref name="Start" /> 또는 <paramref name="Interval" /> &lt; 1입니다.</exception>
      <returns vsli:raw="A string representing the calculated range that contains a number.">숫자가 들어 있는 계산된 범위를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Saves or creates an application entry in the Windows registry. The &lt;see langword=&quot;My&quot; /&gt; feature gives you greater productivity and performance in registry operations than &lt;see langword=&quot;SaveSetting&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.Devices.ServerComputer.Registry&quot; /&gt;.">Windows 레지스트리에 애플리케이션 엔트리를 저장하거나 만듭니다. <see langword="My" /> 기능을 사용하면 <see langword="SaveSetting" />보다 레지스트리 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />를 참조하세요.</summary>
      <param name="AppName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing the name of the application or project to which the setting applies.">필수 요소. 설정이 적용되는 애플리케이션이나 프로젝트의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Section" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing the name of the section in which the key setting is being saved.">필수 요소. 키 설정을 저장할 섹션의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Key" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing the name of the key setting being saved.">필수 요소. 저장할 키 설정의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Setting" vsli:raw="Required. Expression containing the value to which &lt;paramref name=&quot;Key&quot; /&gt; is being set.">필수 요소. 설정할 <paramref name="Key" /> 값을 포함하는 식입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Key registry could not be created, or user is not logged in.">키 레지스트리를 만들 수 없거나 사용자가 로그인하지 않았습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
      <summary vsli:raw="Runs an executable program and returns an integer containing the program's process ID if it is still running.">실행 프로그램을 실행하고 실행 중인 프로그램의 프로세스 ID가 포함된 정수를 반환합니다.</summary>
      <param name="PathName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. Name of the program to execute, together with any required arguments and command-line switches. &lt;paramref name=&quot;PathName&quot; /&gt; can also include the drive and the directory path or folder.  &#xA; If you do not know the path to the program, you can use the &lt;see cref=&quot;Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles&quot; /&gt; to locate it. For example, you can call &lt;c&gt;My.Computer.FileSystem.GetFiles(&quot;C:\&quot;, True, &quot;testFile.txt&quot;)&lt;/c&gt;, which returns the full path of every file named &lt;c&gt;testFile.txt&lt;/c&gt; anywhere on drive C:\.">필수 요소. <see langword="String" />. 필수적 요소인 모든 인수 및 명령줄 스위치와 함께 실행할 프로그램의 이름입니다. 또한 <paramref name="PathName" />에는 드라이브와 디렉터리 경로 또는 폴더가 포함될 수 있습니다.  
 프로그램의 경로를 모를 경우 <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" />를 사용하여 찾을 수 있습니다. 예를 들어, <c>My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt")</c>를 호출할 수 있으며, 드라이브 C:\의 모든 위치에서 이름이 <c>testFile.txt</c>인 모든 파일의 전체 경로가 반환됩니다.</param>
      <param name="Style" vsli:raw="Optional. &lt;see langword=&quot;AppWinStyle&quot; /&gt;. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.AppWinStyle&quot; /&gt; specifying the style of the window in which the program is to run. If &lt;paramref name=&quot;Style&quot; /&gt; is omitted, &lt;see langword=&quot;Shell&quot; /&gt; uses &lt;see langword=&quot;AppWinStyle.MinimizedFocus&quot; /&gt;, which starts the program minimized and with focus.">선택 사항입니다. <see langword="AppWinStyle" />. 프로그램이 실행될 창의 스타일을 지정하는 <see cref="T:Microsoft.VisualBasic.AppWinStyle" />에서 선택된 값입니다. <paramref name="Style" />이 생략되면 <see langword="Shell" />은 최소화되고 포커스가 있는 상태로 프로그램을 시작하는 <see langword="AppWinStyle.MinimizedFocus" />를 사용합니다.</param>
      <param name="Wait" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt;. A value indicating whether the &lt;see langword=&quot;Shell&quot; /&gt; function should wait for completion of the program. If &lt;paramref name=&quot;Wait&quot; /&gt; is omitted, &lt;see langword=&quot;Shell&quot; /&gt; uses &lt;see langword=&quot;False&quot; /&gt;.">선택 사항입니다. <see langword="Boolean" />. 프로그램이 완료될 때까지 <see langword="Shell" /> 함수가 대기할지 여부를 나타내는 값입니다. <paramref name="Wait" />가 생략되면 <see langword="Shell" />은 <see langword="False" />를 사용합니다.</param>
      <param name="Timeout" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The number of milliseconds to wait for completion if &lt;paramref name=&quot;Wait&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;. If &lt;paramref name=&quot;Timeout&quot; /&gt; is omitted, &lt;see langword=&quot;Shell&quot; /&gt; uses -1, which means there is no timeout and &lt;see langword=&quot;Shell&quot; /&gt; does not return until the program finishes. Therefore, if you omit &lt;paramref name=&quot;Timeout&quot; /&gt; or set it to -1, it is possible that &lt;see langword=&quot;Shell&quot; /&gt; might never return control to your program.">선택 사항입니다. <see langword="Integer" />. <paramref name="Wait" />가 <see langword="True" />인 경우 완료될 때까지 대기하는 시간(밀리초)입니다. <paramref name="Timeout" />이 생략되면 <see langword="Shell" />은 -1을 사용합니다. 이 값은 시간 제한이 없고 프로그램이 완료될 때까지 <see langword="Shell" />이 반환되지 않음을 나타냅니다. 따라서 <paramref name="Timeout" />을 생략하거나 -1로 설정하면 <see langword="Shell" />에서 프로그램에 제어를 반환하지 않게 됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Style&quot; /&gt; is not within range 0 through 9, inclusive.">
        <paramref name="Style" />의 범위는 0-9(포함)가 아니어야 합니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="&lt;see langword=&quot;Shell&quot; /&gt; cannot find the &lt;paramref name=&quot;PathName&quot; /&gt; file.">
        <see langword="Shell" />이 <paramref name="PathName" /> 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="&lt;paramref name=&quot;PathName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="PathName" />이(가) <see langword="Nothing" />인 경우</exception>
      <returns vsli:raw="An integer containing the program's process ID if it is still running. 0 if the program already finished executing.">실행 중인 프로그램의 프로세스 ID가 포함된 정수입니다. 프로그램이 이미 실행을 완료한 경우 0입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
      <summary vsli:raw="Evaluates a list of expressions and returns an &lt;see langword=&quot;Object&quot; /&gt; value corresponding to the first expression in the list that is &lt;see langword=&quot;True&quot; /&gt;.">식 목록을 계산하고 목록에서 <see langword="Object" />인 첫 번째 식에 해당하는 <see langword="True" /> 값을 반환합니다.</summary>
      <param name="VarExpr" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; parameter array. Must have an even number of elements. You can supply a list of &lt;see langword=&quot;Object&quot; /&gt; variables or expressions separated by commas, or a single-dimensional array of &lt;see langword=&quot;Object&quot; /&gt; elements.">필수 요소. <see langword="Object" /> 매개 변수 배열입니다. 요소의 수는 짝수여야 합니다. 쉼표로 구분된 <see langword="Object" /> 변수나 식의 목록 또는 1차원 배열의 <see langword="Object" /> 요소를 사용할 수 있습니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Number of arguments is odd.">인수 개수가 홀수 개입니다.</exception>
      <returns vsli:raw="Evaluates a list of expressions and returns an &lt;see langword=&quot;Object&quot; /&gt; value corresponding to the first expression in the list that is &lt;see langword=&quot;True&quot; /&gt;.">식 목록을 계산하고 목록에서 <see langword="Object" />인 첫 번째 식에 해당하는 <see langword="True" /> 값을 반환합니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary vsli:raw="Indicates which button was pressed on a message box, returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">
        <see langword="MsgBox" /> 함수에 의해 반환되는 메시지 상자에서 누른 단추를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary vsli:raw="Abort button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbAbort&quot; /&gt;.">중단 단추를 눌렀습니다. 이 멤버는 Visual Basic 상수 <see langword="vbAbort" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary vsli:raw="Cancel button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCancel&quot; /&gt;.">취소 단추를 눌렀습니다. 이 멤버는 Visual Basic 상수 <see langword="vbCancel" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary vsli:raw="Ignore button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbIgnore&quot; /&gt;.">무시 단추를 눌렀습니다. 이 멤버는 Visual Basic 상수 <see langword="vbIgnore" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary vsli:raw="No button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNo&quot; /&gt;.">아니요 단추를 눌렀습니다. 이 멤버는 Visual Basic 상수 <see langword="vbNo" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary vsli:raw="OK button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOK&quot; /&gt;.">확인 단추를 눌렀습니다. 이 멤버는 Visual Basic 상수 <see langword="vbOK" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary vsli:raw="Retry button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbRetry&quot; /&gt;.">다시 시도 단추를 눌렀습니다. 이 멤버는 Visual Basic 상수 <see langword="vbRetry" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary vsli:raw="Yes button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYes&quot; /&gt;.">예 단추를 눌렀습니다. 이 멤버는 Visual Basic 상수 <see langword="vbYes" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary vsli:raw="Indicates which buttons to display when calling the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">
        <see langword="MsgBox" /> 함수를 호출할 때 표시할 단추를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary vsli:raw="Abort, Retry, and Ignore buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbAbortRetryIgnore&quot; /&gt;.">중단, 다시 시도, 및 무시 단추 이 멤버는 Visual Basic 상수 <see langword="vbAbortRetryIgnore" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary vsli:raw="Application modal message box. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbApplicationModal&quot; /&gt;.">애플리케이션 모달 메시지 상자 이 멤버는 Visual Basic 상수 <see langword="vbApplicationModal" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary vsli:raw="Critical message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCritical&quot; /&gt;.">중요 메시지 이 멤버는 Visual Basic 상수 <see langword="vbCritical" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary vsli:raw="First button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton1&quot; /&gt;.">첫 번째 단추가 기본 단추입니다. 이 멤버는 Visual Basic 상수 <see langword="vbDefaultButton1" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary vsli:raw="Second button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton2&quot; /&gt;.">두 번째 단추가 기본 단추입니다. 이 멤버는 Visual Basic 상수 <see langword="vbDefaultButton2" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary vsli:raw="Third button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton3&quot; /&gt;.">세 번째 단추가 기본 단추입니다. 이 멤버는 Visual Basic 상수 <see langword="vbDefaultButton3" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary vsli:raw="Warning message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbExclamation&quot; /&gt;.">경고 메시지입니다. 이 멤버는 Visual Basic 상수 <see langword="vbExclamation" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary vsli:raw="Information message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbInformation&quot; /&gt;.">정보 메시지 이 멤버는 Visual Basic 상수 <see langword="vbInformation" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary vsli:raw="Help text. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxHelp&quot; /&gt;.">도움말 텍스트 이 멤버는 Visual Basic 상수 <see langword="vbMsgBoxHelp" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary vsli:raw="Right-aligned text. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxRight&quot; /&gt;.">오른쪽 맞춤 텍스트 이 멤버는 Visual Basic 상수 <see langword="vbMsgBoxRight" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary vsli:raw="Right-to-left reading text (Hebrew and Arabic systems). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxRtlReading&quot; /&gt;.">오른쪽에서 왼쪽으로 읽는 텍스트(히브리어 및 아랍어 시스템) 이 멤버는 Visual Basic 상수 <see langword="vbMsgBoxRtlReading" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary vsli:raw="Foreground message box window. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxSetForeground&quot; /&gt;.">전경 메시지 상자 창 이 멤버는 Visual Basic 상수 <see langword="vbMsgBoxSetForeground" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary vsli:raw="OK and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOKCancel&quot; /&gt;.">확인 및 취소 단추 이 멤버는 Visual Basic 상수 <see langword="vbOKCancel" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary vsli:raw="OK button only (default). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOKOnly&quot; /&gt;.">확인 단추만(기본값) 이 멤버는 Visual Basic 상수 <see langword="vbOKOnly" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary vsli:raw="Warning query. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbQuestion&quot; /&gt;.">경고 쿼리 이 멤버는 Visual Basic 상수 <see langword="vbQuestion" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary vsli:raw="Retry and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbRetryCancel&quot; /&gt;.">다시 시도 및 취소 단추 이 멤버는 Visual Basic 상수 <see langword="vbRetryCancel" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary vsli:raw="System modal message box. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSystemModal&quot; /&gt;.">시스템 모달 메시지 상자 이 멤버는 Visual Basic 상수 <see langword="vbSystemModal" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary vsli:raw="Yes and No buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYesNo&quot; /&gt;.">예 및 No 단추 이 멤버는 Visual Basic 상수 <see langword="vbYesNo" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary vsli:raw="Yes, No, and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYesNoCancel&quot; /&gt;.">예, 아니요 및 취소 단추 이 멤버는 Visual Basic 상수 <see langword="vbYesNoCancel" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary vsli:raw="This attribute supports &lt;see langword=&quot;My.Forms&quot; /&gt; and &lt;see langword=&quot;My.WebServices&quot; /&gt; in Visual Basic.">이 특성은 Visual Basic에서 <see langword="My.Forms" /> 및 <see langword="My.WebServices" />를 지원합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="This attribute supports &lt;see langword=&quot;My.Forms&quot; /&gt; and &lt;see langword=&quot;My.WebServices&quot; /&gt; in Visual Basic.">이 특성은 Visual Basic에서 <see langword="My.Forms" /> 및 <see langword="My.WebServices" />를 지원합니다.</summary>
      <param name="typeToCollect" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName&quot; /&gt; property. The compiler generates accessor properties for classes that derive from this type.">
        <see langword="String" />. <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" /> 속성을 초기화합니다. 컴파일러에서는 이 형식에서 파생된 클래스의 접근자 속성을 생성합니다.</param>
      <param name="createInstanceMethodName" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod&quot; /&gt; property. Specifies the method in the class that creates the type's instances.">
        <see langword="String" />. <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" /> 속성을 초기화합니다. 클래스에서 형식의 인스턴스를 만드는 메서드를 지정합니다.</param>
      <param name="disposeInstanceMethodName" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod&quot; /&gt; property. Specifies the method in the class that disposes of the type's instances.">
        <see langword="String" />. <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" /> 속성을 초기화합니다. 클래스에서 형식의 인스턴스를 삭제하는 메서드를 지정합니다.</param>
      <param name="defaultInstanceAlias" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias&quot; /&gt; property. Specifies the name of the property that returns the default instance of the class.">
        <see langword="String" />. <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" /> 속성을 초기화합니다. 클래스의 기본 인스턴스를 반환하는 속성의 이름을 지정합니다.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">이 속성은 Visual Basic에서 <see langword="My" />를 지원합니다.</summary>
      <returns vsli:raw="Specifies the method in the class that creates the type's instances.">클래스에서 형식의 인스턴스를 만드는 메서드를 지정합니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">이 속성은 Visual Basic에서 <see langword="My" />를 지원합니다.</summary>
      <returns vsli:raw="Specifies the name of the property that returns the default instance of the class.">클래스의 기본 인스턴스를 반환하는 속성의 이름을 지정합니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">이 속성은 Visual Basic에서 <see langword="My" />를 지원합니다.</summary>
      <returns vsli:raw="Specifies the method in the class that disposes of the type's instances.">클래스에서 형식의 인스턴스를 삭제하는 메서드를 지정합니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">이 속성은 Visual Basic에서 <see langword="My" />를 지원합니다.</summary>
      <returns vsli:raw="Specifies the name of the type for which the compiler generates accessor properties.">컴파일러에서 접근자 속성을 생성할 해당 형식의 이름을 지정합니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">파일 액세스 함수를 호출할 때 파일을 여는 방법을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary vsli:raw="Read and write access permitted. This is the default.">읽기 및 쓰기 액세스가 허용됩니다. 이것이 기본값입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary vsli:raw="Read access permitted.">읽기 액세스가 허용됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary vsli:raw="Read and write access permitted.">읽기 및 쓰기 액세스가 허용됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary vsli:raw="Write access permitted.">쓰기 액세스가 허용됩니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">파일 액세스 함수를 호출할 때 파일을 여는 방법을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary vsli:raw="File opened to append to it. Default.">파일을 열고 해당 파일에 추가합니다. 기본.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary vsli:raw="File opened for binary access.">파일을 열고 해당 파일에 대한 이진 액세스를 허용합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary vsli:raw="File opened for read access.">파일을 열고 해당 파일에 대한 읽기 권한을 허용합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary vsli:raw="File opened for write access.">파일을 열고 해당 파일에 대한 쓰기 권한을 허용합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary vsli:raw="File opened for random access.">파일을 열고 해당 파일에 대한 임의 액세스를 허용합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">파일 액세스 함수를 호출할 때 파일을 여는 방법을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary vsli:raw="&lt;see langword=&quot;LockReadWrite&quot; /&gt;. This is the default.">
        <see langword="LockReadWrite" />. 이것이 기본값입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary vsli:raw="Other processes cannot read the file.">다른 프로세스에서 해당 파일을 읽을 수 없습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary vsli:raw="Other processes cannot read or write to the file.">다른 프로세스에서 해당 파일을 읽거나 쓸 수 없습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary vsli:raw="Other processes cannot write to the file.">다른 프로세스에서 해당 파일에 쓸 수 없습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary vsli:raw="Any process can read or write to the file.">모든 프로세스에서 해당 파일을 읽고 쓸 수 있습니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary vsli:raw="This class supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">이 클래스는 Visual Basic <see langword="Print" /> 및 <see langword="PrintLine" /> 함수를 지원합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary vsli:raw="This field supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">이 필드는 Visual Basic <see langword="Print" /> 및 <see langword="PrintLine" /> 함수를 지원합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary vsli:raw="The &lt;see langword=&quot;Strings&quot; /&gt; module contains procedures used to perform string operations.">
        <see langword="Strings" /> 모듈에는 문자열 연산을 수행하는 데 사용되는 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">문자에 해당하는 문자 코드를 나타내는 정수 값을 반환합니다.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">필수 요소. 임의의 유효한 <see langword="Char" /> 또는 <see langword="String" /> 식입니다. <paramref name="String" />이 <see langword="String" /> 식이면 문자열의 첫 문자만 입력에 사용합니다. <paramref name="String" />이 <see langword="Nothing" />이거나 문자를 포함하지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</param>
      <returns vsli:raw="The character code corresponding to a character.">문자에 해당하는 문자 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">문자에 해당하는 문자 코드를 나타내는 정수 값을 반환합니다.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">필수 요소. 임의의 유효한 <see langword="Char" /> 또는 <see langword="String" /> 식입니다. <paramref name="String" />이 <see langword="String" /> 식이면 문자열의 첫 문자만 입력에 사용합니다. <paramref name="String" />이 <see langword="Nothing" />이거나 문자를 포함하지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</param>
      <returns vsli:raw="The character code corresponding to a character.">문자에 해당하는 문자 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">문자에 해당하는 문자 코드를 나타내는 정수 값을 반환합니다.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">필수 요소. 임의의 유효한 <see langword="Char" /> 또는 <see langword="String" /> 식입니다. <paramref name="String" />이 <see langword="String" /> 식이면 문자열의 첫 문자만 입력에 사용합니다. <paramref name="String" />이 <see langword="Nothing" />이거나 문자를 포함하지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</param>
      <returns vsli:raw="The character code corresponding to a character.">문자에 해당하는 문자 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">문자에 해당하는 문자 코드를 나타내는 정수 값을 반환합니다.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">필수 요소. 임의의 유효한 <see langword="Char" /> 또는 <see langword="String" /> 식입니다. <paramref name="String" />이 <see langword="String" /> 식이면 문자열의 첫 문자만 입력에 사용합니다. <paramref name="String" />이 <see langword="Nothing" />이거나 문자를 포함하지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</param>
      <returns vsli:raw="The character code corresponding to a character.">문자에 해당하는 문자 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary vsli:raw="Returns the character associated with the specified character code.">지정한 문자 코드와 연관된 문자를 반환합니다.</summary>
      <param name="CharCode" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression representing the &lt;c&gt;code point&lt;/c&gt;, or character code, for the character.">필수 요소. 문자에 대한 <c>코드 포인트</c> 또는 문자 코드를 나타내는 <see langword="Integer" /> 식입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCode&quot; /&gt; &amp;lt; 0 or &amp;gt; 255 for &lt;see langword=&quot;Chr&quot; /&gt;.">
        <see langword="Chr" />에 대해 <paramref name="CharCode" /> &lt; 0 또는 &gt; 255입니다.</exception>
      <returns vsli:raw="The character associated with the specified character code.">지정한 문자 코드와 연관된 문자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary vsli:raw="Returns the character associated with the specified character code.">지정한 문자 코드와 연관된 문자를 반환합니다.</summary>
      <param name="CharCode" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression representing the &lt;c&gt;code point&lt;/c&gt;, or character code, for the character.">필수 요소. 문자에 대한 <c>코드 포인트</c> 또는 문자 코드를 나타내는 <see langword="Integer" /> 식입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCode&quot; /&gt; &amp;lt; -32768 or &amp;gt; 65535 for &lt;see langword=&quot;ChrW&quot; /&gt;.">
        <see langword="ChrW" />에 대해 <paramref name="CharCode" /> &lt; -32768 또는 &gt; 65535입니다.</exception>
      <returns vsli:raw="The character associated with the specified character code.">지정한 문자 코드와 연관된 문자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">지정된 필터링 기준에 따라 <see langword="String" /> 배열의 하위 집합을 포함하는 0부터 시작하는 배열을 반환합니다.</summary>
      <param name="Source" vsli:raw="Required. One-dimensional array of strings to be searched.">필수 요소. 찾을 문자열의 1차원 배열입니다.</param>
      <param name="Match" vsli:raw="Required. String to search for.">필수 요소. 검색할 문자열입니다.</param>
      <param name="Include" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether to return substrings that include or exclude &lt;paramref name=&quot;Match&quot; /&gt;. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that contains &lt;paramref name=&quot;Match&quot; /&gt; as a substring. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that does not contain &lt;paramref name=&quot;Match&quot; /&gt; as a substring.">선택 사항입니다. <paramref name="Match" />를 포함하거나 제외하는 부분 문자열을 반환할지 여부를 나타내는 <see langword="Boolean" /> 값입니다. <paramref name="Include" />가 <see langword="True" />이면 <see langword="Filter" /> 함수는 부분 문자열로 <paramref name="Match" />를 포함하는 배열의 하위 집합을 반환합니다. <paramref name="Include" />가 <see langword="False" />이면 <see langword="Filter" /> 함수는 부분 문자열로 <paramref name="Match" />를 포함하지 않는 배열의 하위 집합을 반환합니다.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of string comparison to use. See &quot;Settings&quot; for values.">선택 사항입니다. 사용할 문자열 비교의 종류를 나타내는 숫자 값입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or is not a one-dimensional array.">
        <paramref name="Source" />가 <see langword="Nothing" />이거나 1차원 배열이 아닙니다.</exception>
      <returns vsli:raw="A zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">지정된 필터링 기준에 따라 <see langword="String" /> 배열의 하위 집합을 포함하는 0부터 시작하는 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">지정된 필터링 기준에 따라 <see langword="String" /> 배열의 하위 집합을 포함하는 0부터 시작하는 배열을 반환합니다.</summary>
      <param name="Source" vsli:raw="Required. One-dimensional array of strings to be searched.">필수 요소. 찾을 문자열의 1차원 배열입니다.</param>
      <param name="Match" vsli:raw="Required. String to search for.">필수 요소. 검색할 문자열입니다.</param>
      <param name="Include" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether to return substrings that include or exclude &lt;paramref name=&quot;Match&quot; /&gt;. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that contains &lt;paramref name=&quot;Match&quot; /&gt; as a substring. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that does not contain &lt;paramref name=&quot;Match&quot; /&gt; as a substring.">선택 사항입니다. <paramref name="Match" />를 포함하거나 제외하는 부분 문자열을 반환할지 여부를 나타내는 <see langword="Boolean" /> 값입니다. <paramref name="Include" />가 <see langword="True" />이면 <see langword="Filter" /> 함수는 부분 문자열로 <paramref name="Match" />를 포함하는 배열의 하위 집합을 반환합니다. <paramref name="Include" />가 <see langword="False" />이면 <see langword="Filter" /> 함수는 부분 문자열로 <paramref name="Match" />를 포함하지 않는 배열의 하위 집합을 반환합니다.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of string comparison to use. See &quot;Settings&quot; for values.">선택 사항입니다. 사용할 문자열 비교의 종류를 나타내는 숫자 값입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or is not a one-dimensional array.">
        <paramref name="Source" />가 <see langword="Nothing" />이거나 1차원 배열이 아닙니다.</exception>
      <returns vsli:raw="A zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">지정된 필터링 기준에 따라 <see langword="String" /> 배열의 하위 집합을 포함하는 0부터 시작하는 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary vsli:raw="Returns a string formatted according to instructions contained in a format &lt;see langword=&quot;String&quot; /&gt; expression.">형식 <see langword="String" /> 식에 포함된 명령에 따라 형식 지정된 문자열을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. Any valid expression.">필수 요소. 모든 유효한 식입니다.</param>
      <param name="Style" vsli:raw="Optional. A valid named or user-defined format &lt;see langword=&quot;String&quot; /&gt; expression.">선택 사항입니다. 유효한 이름이 지정되거나 사용자 정의된 형식 <see langword="String" /> 식입니다.</param>
      <returns vsli:raw="A string formatted according to instructions contained in a format &lt;see langword=&quot;String&quot; /&gt; expression.">형식 <see langword="String" /> 식에 포함된 명령에 따라 서식이 지정된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.">시스템 제어판에 정의된 통화 기호를 사용하여 통화 값으로 서식이 지정된 식을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">필수 요소. 서식이 지정될 식입니다.</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places are displayed to the right of the decimal. Default value is -1, which indicates that the computer's regional settings are used.">선택 사항입니다. 소수점 오른쪽에 표시할 자릿수를 나타내는 숫자 값입니다. 기본값은 -1로, 시스템의 국가별 설정 값이 사용됨을 나타냅니다.</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not a leading zero is displayed for fractional values. See &quot;Remarks&quot; for values.">선택 사항입니다. 소수 값에서 앞에 오는 0을 표시할지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 열거형입니다. 값은 "설명"을 참조하십시오.</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not to place negative values within parentheses. See &quot;Remarks&quot; for values.">선택 사항입니다. 음수를 괄호로 묶을지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 열거형입니다. 값은 "설명"을 참조하십시오.</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings. See &quot;Remarks&quot; for values.">선택 사항입니다. 컴퓨터의 국가별 설정에 지정된 그룹 구분 기호를 사용하여 숫자를 그룹화할지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 열거형입니다. 값은 "설명"을 참조하십시오.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Number of digits after decimal point is greater than 99.">소수점 이하 자릿수가 99보다 큽니다.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">형식이 숫자가 아닌 경우</exception>
      <returns vsli:raw="An expression formatted as a currency value using the currency symbol defined in the system control panel.">시스템 제어판에 정의된 통화 기호를 사용하여 통화 값으로 서식이 지정된 식입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary vsli:raw="Returns a string expression representing a date/time value.">날짜/시간 값을 나타내는 문자열 식을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Date&quot; /&gt; expression to be formatted.">필수 요소. 서식을 지정할 <see langword="Date" /> 식입니다.</param>
      <param name="NamedFormat" vsli:raw="Optional. Numeric value that indicates the date/time format used. If omitted, &lt;see langword=&quot;DateFormat.GeneralDate&quot; /&gt; is used.">선택 사항입니다. 사용되는 날짜/시간 형식을 나타내는 숫자 값입니다. 이 인수를 생략하면 <see langword="DateFormat.GeneralDate" />가 사용됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NamedFormat&quot; /&gt; setting is not valid.">
        <paramref name="NamedFormat" /> 설정이 잘못되었습니다.</exception>
      <returns vsli:raw="A string expression representing a date/time value.">날짜/시간 값을 나타내는 문자열 식입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a number.">숫자로 서식이 지정된 식을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">필수 요소. 서식이 지정될 식입니다.</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places are displayed to the right of the decimal. The default value is -1, which indicates that the computer's regional settings are used.">선택 사항입니다. 소수점 오른쪽에 표시할 자릿수를 나타내는 숫자 값입니다. 기본값은 -1로, 시스템의 국가별 설정 값이 사용됨을 나타냅니다.</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether a leading 0 is displayed for fractional values. See &quot;Settings&quot; for values.">선택 사항입니다. 소수 값에서 앞에 오는 0을 표시할지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 상수입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether to place negative values within parentheses. See &quot;Settings&quot; for values.">선택 사항입니다. 음수를 괄호로 묶을지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 상수입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See &quot;Settings&quot; for values.">선택 사항입니다. 로캘 설정에 지정된 그룹 구분 기호를 사용하여 숫자를 그룹화할지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 상수입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">형식이 숫자가 아닌 경우</exception>
      <returns vsli:raw="An expression formatted as a number.">숫자로 서식이 지정된 식입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.">백분율로 서식이 지정된 식(100을 곱함)을 % 문자를 붙여 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">필수 요소. 서식이 지정될 식입니다.</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places to the right of the decimal are displayed. Default value is -1, which indicates that the locale settings are used.">선택 사항입니다. 소숫점 오른쪽에 표시할 자릿수를 나타내는 숫자 값입니다. 기본값은 -1로, 로캘 설정이 사용됨을 나타냅니다.</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not a leading zero displays for fractional values. See &quot;Settings&quot; for values.">선택 사항입니다. 소숫점 이하 값에 대해 선행 0을 표시할지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 상수입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not to place negative values within parentheses. See &quot;Settings&quot; for values.">선택 사항입니다. 음수 값을 괄호로 묶을지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 상수입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See &quot;Settings&quot; for values.">선택 사항입니다. 로캘 설정에 지정된 그룹 구분 기호를 사용하여 숫자를 그룹화할지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 상수입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">형식이 숫자가 아닌 경우</exception>
      <returns vsli:raw="An expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.">% 문자를 붙여 백분율로 서식이 지정된 식(100을 곱함)입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value representing the character from the specified index in the supplied string.">제공된 문자열의 지정한 인덱스에서 해당 문자를 나타내는 <see langword="Char" /> 값을 반환합니다.</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 <see langword="String" /> 식입니다.</param>
      <param name="Index" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The (1-based) index of the character in &lt;paramref name=&quot;str&quot; /&gt; to be returned.">필수 요소. <see langword="Integer" /> 식입니다. <paramref name="str" />에 있는 반환될 문자의 인덱스(1부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;paramref name=&quot;Index&quot; /&gt; &amp;lt; 1, or &lt;paramref name=&quot;Index&quot; /&gt; is greater than index of last character of &lt;paramref name=&quot;str&quot; /&gt;.">
        <paramref name="str" />은 <see langword="Nothing" />, <paramref name="Index" /> &lt; 1이거나 <paramref name="Index" />는 <paramref name="str" />의 마지막 문자의 인덱스보다 큽니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;Char&quot; /&gt; value representing the character from the specified index in the supplied string.">제공된 문자열의 지정한 인덱스에서 해당 문자를 나타내는 <see langword="Char" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns an integer specifying the start position of the first occurrence of one string within another.">한 문자열에서 다른 문자열이 처음으로 나타나는 위치를 지정하는 정수를 반환합니다.</summary>
      <param name="StartPos" />
      <param name="String1" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression being searched.">필수 요소. 검색 중인 <see langword="String" /> 식입니다.</param>
      <param name="String2" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression sought.">필수 요소. 검색된 <see langword="String" /> 식입니다.</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">선택 사항입니다. 문자열 비교의 형식을 지정합니다. <paramref name="Compare" />가 생략되면 <see langword="Option Compare" /> 설정에 따라 비교 형식이 결정됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; 1.">
        <paramref name="Start" /> &lt; 1.</exception>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStr returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;start&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is found within &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt; Position where match begins&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Start&quot; /&gt; &amp;gt; length of &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <list type="table">
          <listheader>
            <term>조건</term>
            <description>InStr 함수의 반환 값</description>
          </listheader>
          <item>
            <term>
              <paramref name="String1" />의 길이가 0이거나 <see langword="Nothing" />인 경우</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="String2" />의 길이가 0이거나 <see langword="Nothing" />인 경우</term>
            <description>
              <paramref name="start" />
            </description>
          </item>
          <item>
            <term>
              <paramref name="String2" />를 찾을 수 없는 경우</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="String2" />가 <paramref name="String1" /> 안에 있는 경우</term>
            <description> 일치가 시작되는 위치</description>
          </item>
          <item>
            <term>
              <paramref name="Start" /> &gt;<paramref name="String1" />의 길이</term>
            <description>0</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns an integer specifying the start position of the first occurrence of one string within another.">한 문자열에서 다른 문자열이 처음으로 나타나는 위치를 지정하는 정수를 반환합니다.</summary>
      <param name="String1" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression being searched.">필수 요소. 검색 중인 <see langword="String" /> 식입니다.</param>
      <param name="String2" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression sought.">필수 요소. 검색된 <see langword="String" /> 식입니다.</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">선택 사항입니다. 문자열 비교의 형식을 지정합니다. <paramref name="Compare" />가 생략되면 <see langword="Option Compare" /> 설정에 따라 비교 형식이 결정됩니다.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStr returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;The starting position for the search, which defaults to the first character position.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is found within &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt;Position where match begins.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <list type="table">
          <listheader>
            <term>조건</term>
            <description>InStr 함수의 반환 값</description>
          </listheader>
          <item>
            <term>
              <paramref name="String1" />의 길이가 0이거나 <see langword="Nothing" />인 경우</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="String2" />의 길이가 0이거나 <see langword="Nothing" />인 경우</term>
            <description>검색을 시작하는 위치이며, 기본적으로 첫 번째 문자 위치부터 시작합니다.</description>
          </item>
          <item>
            <term>
              <paramref name="String2" />를 찾을 수 없는 경우</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="String2" />가 <paramref name="String1" /> 안에 있는 경우</term>
            <description>일치가 시작되는 위치</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns the position of the first occurrence of one string within another, starting from the right side of the string.">문자열의 오른쪽에서 시작하여 한 문자열 내에서 다른 문자열이 처음 나오는 위치를 반환합니다.</summary>
      <param name="StringCheck" vsli:raw="Required. String expression being searched.">필수 요소. 검색 중인 문자열 식입니다.</param>
      <param name="StringMatch" vsli:raw="Required. String expression being searched for.">필수 요소. 검색 중인 문자열 식입니다.</param>
      <param name="Start" vsli:raw="Optional. Numeric expression setting the one-based starting position for each search, starting from the left side of the string. If &lt;paramref name=&quot;Start&quot; /&gt; is omitted then -1 is used, meaning the search begins at the last character position. Search then proceeds from right to left.">선택 사항입니다. 문자열의 왼쪽에서 시작하여 각 검색에 대해 0부터 시작하는 시작 위치를 설정하는 숫자 식입니다. <paramref name="Start" />가 생략되면 -1이 사용됩니다. 이것은 마지막 문자에서 검색이 시작됨을 의미합니다. 이 경우 오른쪽에서 왼쪽으로 검색이 계속됩니다.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. If omitted, a binary comparison is performed. See Settings for values.">선택 사항입니다. 부분 문자열을 평가할 때 사용할 비교 종류를 나타내는 숫자 값입니다. 이 인수를 생략하면 이진 비교가 수행됩니다. 값에 대한 설정을 참조하십시오.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; = 0 or &lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; -1.">
        <paramref name="Start" /> = 0 또는 <paramref name="Start" /> &lt; -1.</exception>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStrRev returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringCheck&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Start&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is found within &lt;paramref name=&quot;StringCheck&quot; /&gt;&lt;/term&gt;&lt;description&gt;Position at which the first match is found, starting with the right side of the string.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Start&quot; /&gt; is greater than length of &lt;paramref name=&quot;StringMatch&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <list type="table">
          <listheader>
            <term>조건</term>
            <description>반환 값</description>
          </listheader>
          <item>
            <term>
              <paramref name="StringCheck" />의 길이가 0인 경우</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="StringMatch" />의 길이가 0인 경우</term>
            <description>
              <paramref name="Start" />
            </description>
          </item>
          <item>
            <term>
              <paramref name="StringMatch" />를 찾을 수 없는 경우</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="StringMatch" />가 <paramref name="StringCheck" /> 안에 있는 경우</term>
            <description>문자열의 오른쪽에서 시작하여 일치하는 항목을 처음 찾은 위치</description>
          </item>
          <item>
            <term>
              <paramref name="Start" />가 <paramref name="StringMatch" />의 길이보다 큰 경우</term>
            <description>0</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary vsli:raw="Returns a string created by joining a number of substrings contained in an array.">배열에 포함된 여러 부분 문자열을 조인하여 작성되는 문자열을 반환합니다.</summary>
      <param name="SourceArray" vsli:raw="Required. One-dimensional array containing substrings to be joined.">필수 요소. 조인할 부분 문자열을 포함하는 1차원 배열입니다.</param>
      <param name="Delimiter" vsli:raw="Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (&quot; &quot;) is used. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string (&quot;&quot;) or &lt;see langword=&quot;Nothing&quot; /&gt;, all items in the list are concatenated with no delimiters.">선택 사항입니다. 반환되는 문자열에서 부분 문자열을 구분하는 데 사용되는 문자열입니다. 이 인수를 생략하면 공백 문자(" ")가 사용됩니다. <paramref name="Delimiter" />가 길이가 0인 문자열("")이거나 <see langword="Nothing" />이면 목록의 모든 항목이 구분 기호 없이 연결됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;SourceArray&quot; /&gt; is not one dimensional.">
        <paramref name="SourceArray" />가 1차원이 아닙니다.</exception>
      <returns vsli:raw="A string created by joining a number of substrings contained in an array.">배열에 포함된 여러 부분 문자열을 조인하여 작성되는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary vsli:raw="Returns a string created by joining a number of substrings contained in an array.">배열에 포함된 여러 부분 문자열을 조인하여 작성되는 문자열을 반환합니다.</summary>
      <param name="SourceArray" vsli:raw="Required. One-dimensional array containing substrings to be joined.">필수 요소. 조인할 부분 문자열을 포함하는 1차원 배열입니다.</param>
      <param name="Delimiter" vsli:raw="Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (&quot; &quot;) is used. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string (&quot;&quot;) or &lt;see langword=&quot;Nothing&quot; /&gt;, all items in the list are concatenated with no delimiters.">선택 사항입니다. 반환되는 문자열에서 부분 문자열을 구분하는 데 사용되는 문자열입니다. 이 인수를 생략하면 공백 문자(" ")가 사용됩니다. <paramref name="Delimiter" />가 길이가 0인 문자열("")이거나 <see langword="Nothing" />이면 목록의 모든 항목이 구분 기호 없이 연결됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;SourceArray&quot; /&gt; is not one dimensional.">
        <paramref name="SourceArray" />가 1차원이 아닙니다.</exception>
      <returns vsli:raw="A string created by joining a number of substrings contained in an array.">배열에 포함된 여러 부분 문자열을 조인하여 작성되는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary vsli:raw="Returns a string or character converted to lowercase.">소문자로 변환된 문자열 또는 문자를 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">필수 요소. 임의의 유효한 <see langword="String" /> 또는 <see langword="Char" /> 식입니다.</param>
      <returns vsli:raw="A string or character converted to lowercase.">소문자로 변환된 문자열 또는 문자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary vsli:raw="Returns a string or character converted to lowercase.">소문자로 변환된 문자열 또는 문자를 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">필수 요소. 임의의 유효한 <see langword="String" /> 또는 <see langword="Char" /> 식입니다.</param>
      <returns vsli:raw="A string or character converted to lowercase.">소문자로 변환된 문자열 또는 문자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary vsli:raw="Returns a string containing a specified number of characters from the left side of a string.">문자열의 왼쪽에서 지정한 수의 문자를 포함하는 문자열을 반환합니다.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which the leftmost characters are returned.">필수 요소. 가장 왼쪽의 문자를 반환하는 <see langword="String" /> 식입니다.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Numeric expression indicating how many characters to return. If 0, a zero-length string (&quot;&quot;) is returned. If greater than or equal to the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the entire string is returned.">필수 요소. <see langword="Integer" /> 식입니다. 반환할 문자의 수를 나타내는 숫자 식입니다. 이 인수가 0인 경우 길이가 0인 문자열("")이 반환됩니다. 이 인수가 <paramref name="str" />의 문자 수보다 크거나 같으면 전체 문자열이 반환됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Length" /> &lt; 0.</exception>
      <returns vsli:raw="A string containing a specified number of characters from the left side of a string.">문자열의 왼쪽에서 지정한 수의 문자를 포함하는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary vsli:raw="Returns a left-aligned string containing the specified string adjusted to the specified length.">지정된 문자열을 지정한 길이에 맞게 조정하고 왼쪽에 맞춘 문자열을 반환합니다.</summary>
      <param name="Source" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression. Name of string variable.">필수 요소. <see langword="String" /> 식입니다. 문자열 변수의 이름입니다.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Length of returned string.">필수 요소. <see langword="Integer" /> 식입니다. 반환되는 문자열의 길이입니다.</param>
      <returns vsli:raw="A left-aligned string containing the specified string adjusted to the specified length.">지정된 문자열을 지정한 길이에 맞게 조정하고 왼쪽에 맞춘 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">선행 공백(<see langword="LTrim" />), 후행 공백(<see langword="RTrim" />), 선행 또는 후행 공백(<see langword="Trim" />)이 없는 지정된 문자열의 복사본이 포함된 문자열을 반환합니다.</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 <see langword="String" /> 식입니다.</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">선행 공백(<see langword="LTrim" />), 후행 공백(<see langword="RTrim" />), 선행 또는 후행 공백(<see langword="Trim" />)이 없는 지정된 문자열의 복사본이 포함된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary vsli:raw="Returns a string that contains all the characters starting from a specified position in a string.">문자열의 지정된 위치에서 시작하여 모든 문자를 포함하는 문자열을 반환합니다.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which characters are returned.">필수 요소. 문자를 반환하는 <see langword="String" /> 식입니다.</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Starting position of the characters to return. If &lt;paramref name=&quot;Start&quot; /&gt; is greater than the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the &lt;see langword=&quot;Mid&quot; /&gt; function returns a zero-length string (&quot;&quot;). &lt;paramref name=&quot;Start&quot; /&gt; is one-based.">필수 요소. <see langword="Integer" /> 식입니다. 반환할 문자의 시작 위치입니다. <paramref name="Start" />가 <paramref name="str" />의 문자 수보다 크면 <see langword="Mid" /> 함수는 길이가 0인 문자열("")을 반환합니다. <paramref name="Start" />는 1부터 시작됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Start" /> &lt;= 0 또는 <paramref name="Length" /> &lt; 0.</exception>
      <returns vsli:raw="A string that consists of all the characters starting from the specified position in the string.">문자열의 지정된 위치에서 시작하여 모든 문자로 구성된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a string that contains a specified number of characters starting from a specified position in a string.">문자열의 지정된 위치에서 시작하여 지정된 문자 수를 포함하는 문자열을 반환합니다.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which characters are returned.">필수 요소. 문자를 반환하는 <see langword="String" /> 식입니다.</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Starting position of the characters to return. If &lt;paramref name=&quot;Start&quot; /&gt; is greater than the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the &lt;see langword=&quot;Mid&quot; /&gt; function returns a zero-length string (&quot;&quot;). &lt;paramref name=&quot;Start&quot; /&gt; is one based.">필수 요소. <see langword="Integer" /> 식입니다. 반환할 문자의 시작 위치입니다. <paramref name="Start" />가 <paramref name="str" />의 문자 수보다 크면 <see langword="Mid" /> 함수는 길이가 0인 문자열("")을 반환합니다. <paramref name="Start" />는 1부터 시작됩니다.</param>
      <param name="Length" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt; expression. Number of characters to return. If omitted or if there are fewer than &lt;paramref name=&quot;Length&quot; /&gt; characters in the text (including the character at position &lt;paramref name=&quot;Start&quot; /&gt;), all characters from the start position to the end of the string are returned.">선택 사항입니다. <see langword="Integer" /> 식입니다. 반환할 문자의 수입니다. 문자의 개수를 생략하거나 텍스트 문자 수가 <paramref name="Length" />보다 적으면(<paramref name="Start" /> 위치의 문자 포함) 시작 위치부터 해당 문자열의 끝까지 모든 문자가 반환됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Start" /> &lt;= 0 또는 <paramref name="Length" /> &lt; 0.</exception>
      <returns vsli:raw="A string that consists of the specified number of characters starting from the specified position in the string.">문자열의 지정된 위치에서 시작하여 지정된 문자 수로 구성된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a string in which a specified substring has been replaced with another substring a specified number of times.">지정된 부분 문자열이 지정된 횟수만큼 다른 부분 문자열로 대체된 문자열을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. String expression containing substring to replace.">필수 요소. 대체할 부분 문자열을 포함하는 문자열 식입니다.</param>
      <param name="Find" vsli:raw="Required. Substring being searched for.">필수 요소. 검색 중인 부분 문자열입니다.</param>
      <param name="Replacement" vsli:raw="Required. Replacement substring.">필수 요소. 대체 부분 문자열입니다.</param>
      <param name="Start" vsli:raw="Optional. Position within &lt;paramref name=&quot;Expression&quot; /&gt; that starts a substring used for replacement. The return value of &lt;see langword=&quot;Replace&quot; /&gt; is a string that begins at &lt;paramref name=&quot;Start&quot; /&gt;, with appropriate substitutions. If omitted, 1 is assumed.">선택 사항입니다. 대체에 사용되는 부분 문자열을 시작하는 <paramref name="Expression" /> 내 위치입니다. <see langword="Replace" />의 반환 값은 적절한 대체와 함께 <paramref name="Start" />에서 시작하는 문자열입니다. 생략된 경우 1이라고 가정합니다.</param>
      <param name="Count" vsli:raw="Optional. Number of substring substitutions to perform. If omitted, the default value is -1, which means &quot;make all possible substitutions.&quot;">선택 사항입니다. 수행할 부분 문자열 대체 횟수입니다. 이 인수를 생략하면 기본값으로 -1이 사용됩니다. 이것은 "가능한 모든 항목이 대체됨"을 의미합니다.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. See Settings for values.">선택 사항입니다. 부분 문자열을 평가할 때 사용할 비교 종류를 나타내는 숫자 값입니다. 값에 대한 설정을 참조하십시오.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Count&quot; /&gt; &amp;lt; -1 or &lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0.">
        <paramref name="Count" /> &lt; -1 또는 <paramref name="Start" /> &lt;= 0.</exception>
      <returns vsli:raw="One of the following values.&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;Replace returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Find&quot; /&gt; is zero-length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Replace&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt; with no occurrences of &lt;paramref name=&quot;Find&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Expression&quot; /&gt; is zero-length or &lt;see langword=&quot;Nothing&quot; /&gt;, or &lt;paramref name=&quot;Start&quot; /&gt; is greater than length of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;Nothing&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Count&quot; /&gt; is 0&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">다음 값 중의 하나입니다.
          <list type="table"><listheader><term>조건</term><description>반환 값</description></listheader><item><term><paramref name="Find" />가 0이거나 <see langword="Nothing" />인 경우</term><description><paramref name="Expression" />의 복사본</description></item><item><term><paramref name="Replace" />의 길이가 0인 경우</term><description><paramref name="Expression" />가 포함되지 않는 <paramref name="Find" />의 복사본</description></item><item><term><paramref name="Expression" />이 0이거나 <see langword="Nothing" />이거나, <paramref name="Start" />가 <paramref name="Expression" />보다 긴 경우</term><description><see langword="Nothing" /></description></item><item><term><paramref name="Count" />가 0인 경우</term><description><paramref name="Expression" />의 복사본</description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary vsli:raw="Returns a string containing a specified number of characters from the right side of a string.">문자열의 오른쪽에서 지정한 개수의 문자를 포함하는 문자열을 반환합니다.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which the rightmost characters are returned.">필수 요소. 가장 오른쪽의 문자를 반환하는 <see langword="String" /> 식입니다.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt;. Numeric expression indicating how many characters to return. If 0, a zero-length string (&quot;&quot;) is returned. If greater than or equal to the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the entire string is returned.">필수 요소. <see langword="Integer" /> 반환할 문자의 수를 나타내는 숫자 식입니다. 이 인수가 0인 경우 길이가 0인 문자열("")이 반환됩니다. 이 인수가 <paramref name="str" />의 문자 수보다 크거나 같으면 전체 문자열이 반환됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Length" /> &lt; 0.</exception>
      <returns vsli:raw="A string containing a specified number of characters from the right side of a string.">문자열의 오른쪽에서 지정한 개수의 문자를 포함하는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary vsli:raw="Returns a right-aligned string containing the specified string adjusted to the specified length.">지정된 길이에 맞게 조정된 특정 문자열이 포함된 문자열(오른쪽에 맞춰진 문자열)을 반환합니다.</summary>
      <param name="Source" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression. Name of string variable.">필수 요소. <see langword="String" /> 식입니다. 문자열 변수의 이름입니다.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Length of returned string.">필수 요소. <see langword="Integer" /> 식입니다. 반환되는 문자열의 길이입니다.</param>
      <returns vsli:raw="A right-aligned string containing the specified string adjusted to the specified length.">지정된 길이에 맞게 조정된 특정 문자열이 포함된 문자열(오른쪽에 맞춰진 문자열)입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">선행 공백(<see langword="LTrim" />), 후행 공백(<see langword="RTrim" />), 선행 또는 후행 공백(<see langword="Trim" />)이 없는 지정된 문자열의 복사본이 포함된 문자열을 반환합니다.</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 <see langword="String" /> 식입니다.</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">선행 공백(<see langword="LTrim" />), 후행 공백(<see langword="RTrim" />), 선행 또는 후행 공백(<see langword="Trim" />)이 없는 지정된 문자열의 복사본이 포함된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary vsli:raw="Returns a string consisting of the specified number of spaces.">지정한 수 만큼의 공백으로 구성되는 문자열을 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The number of spaces you want in the string.">필수 요소. <see langword="Integer" /> 식입니다. 문자열에 넣을 공백의 수입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; &amp;lt; 0.">
        <paramref name="Number" /> &lt; 0.</exception>
      <returns vsli:raw="A string consisting of the specified number of spaces.">지정한 수 만큼의 공백으로 구성되는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based, one-dimensional array containing a specified number of substrings.">지정된 수의 부분 문자열을 포함하는 0부터 시작하는 1차원 배열을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing substrings and delimiters.">필수 요소. 부분 문자열과 구분 기호를 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Delimiter" vsli:raw="Optional. Any single character used to identify substring limits. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is omitted, the space character (&quot; &quot;) is assumed to be the delimiter.">선택 사항입니다. 부분 문자열의 한계를 식별하기 위해 사용되는 단일 문자입니다. <paramref name="Delimiter" />를 생략하면 공백 문자(" ")가 구분 기호로 간주됩니다.</param>
      <param name="Limit" vsli:raw="Optional. Maximum number of substrings into which the input string should be split. The default, -1, indicates that the input string should be split at every occurrence of the &lt;paramref name=&quot;Delimiter&quot; /&gt; string.">선택 사항입니다. 입력 문자열을 분할해야 하는 부분 문자열의 최대 수입니다. 기본값 -1은 <paramref name="Delimiter" /> 문자열이 발생할 때마다 입력 문자열을 분할해야 함을 나타냅니다.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the comparison to use when evaluating substrings. See &quot;Settings&quot; for values.">선택 사항입니다. 부분 문자열을 평가할 때 사용할 비교 종류를 나타내는 숫자 값입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; array. If &lt;paramref name=&quot;Expression&quot; /&gt; is a zero-length string (&quot;&quot;), &lt;see langword=&quot;Split&quot; /&gt; returns a single-element array containing a zero-length string. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string, or if it does not appear anywhere in &lt;paramref name=&quot;Expression&quot; /&gt;, &lt;see langword=&quot;Split&quot; /&gt; returns a single-element array containing the entire &lt;paramref name=&quot;Expression&quot; /&gt; string.">
        <see langword="String" /> 배열입니다. <paramref name="Expression" />이 길이가 0인 문자열("")인 경우 <see langword="Split" />는 길이가 0인 문자열이 포함된 단일 요소 배열을 반환합니다. <paramref name="Delimiter" />가 길이가 0인 문자열이거나 <paramref name="Expression" />의 어떤 위치에도 표시되지 않을 경우 <see langword="Split" />는 전체 <paramref name="Expression" /> 문자열이 포함된 단일 요소 배열을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns -1, 0, or 1, based on the result of a string comparison.">문자열 비교의 결과에 따라 -1, 0 또는 1을 반환합니다.</summary>
      <param name="String1" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 <see langword="String" /> 식입니다.</param>
      <param name="String2" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 <see langword="String" /> 식입니다.</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">선택 사항입니다. 문자열 비교의 형식을 지정합니다. <paramref name="Compare" />가 생략되면 <see langword="Option Compare" /> 설정에 따라 비교 형식이 결정됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Compare&quot; /&gt; value is not valid.">
        <paramref name="Compare" /> 값이 잘못된 경우</exception>
      <returns vsli:raw="One of the following values:&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;StrComp returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; sorts ahead of &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;-1&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is equal to &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; sorts after &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;1&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">다음 값 중 하나입니다. <list type="table"><listheader><term>조건</term><description>StrComp 함수의 반환 값</description></listheader><item><term><paramref name="String1" />이 <paramref name="String2" /> 앞에 정렬되는 경우</term><description>-1</description></item><item><term><paramref name="String1" />이 <paramref name="String2" />와 같습니다.</term><description>0</description></item><item><term><paramref name="String1" />이 <paramref name="String2" /> 뒤에 정렬되는 경우</term><description>1</description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary vsli:raw="Returns a string converted as specified.">지정된 대로 변환된 문자열을 반환합니다.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression to be converted.">필수 요소. 변환할 <see langword="String" /> 식입니다.</param>
      <param name="Conversion" vsli:raw="Required. &lt;see cref=&quot;T:Microsoft.VisualBasic.VbStrConv&quot; /&gt; member. The enumeration value specifying the type of conversion to perform.">필수 요소. <see cref="T:Microsoft.VisualBasic.VbStrConv" /> 멤버입니다. 수행할 변환 형식을 지정하는 열거형 값입니다.</param>
      <param name="LocaleID" vsli:raw="Optional. The &lt;see langword=&quot;LocaleID&quot; /&gt; value, if different from the system &lt;see langword=&quot;LocaleID&quot; /&gt; value. (The system &lt;see langword=&quot;LocaleID&quot; /&gt; value is the default.)">선택 사항입니다. 시스템의 <see langword="LocaleID" /> 값과 다른 경우의 <see langword="LocaleID" /> 값입니다. 기본값은 시스템의 <see langword="LocaleID" /> 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Unsupported &lt;paramref name=&quot;LocaleID&quot; /&gt;, &lt;paramref name=&quot;Conversion&quot; /&gt; &amp;lt; 0 or &amp;gt; 2048, or unsupported conversion for specified locale.">지원되지 않는 <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 또는 &gt; 2048 또는 지정된 로캘에 대해 지원되지 않는 변환.</exception>
      <returns vsli:raw="A string converted as specified.">지정된 대로 변환된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">지정된 횟수만큼 반복되는 특정 문자로 구성된 문자열 또는 개체를 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">필수 요소. <see langword="Integer" /> 식입니다. 반환되는 문자열의 길이입니다.</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. 임의의 유효한 <see langword="Char" />, <see langword="String" /> 또는 <see langword="Object" /> 식입니다. 해당 식에서 첫 문자만 사용됩니다. Character가 <see langword="Object" /> 형식이면 <see langword="Char" /> 또는 <see langword="String" />값을 포함해야 합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" />가 0보다 작거나 <paramref name="Character" /> 형식이 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" />이(가) <see langword="Nothing" />인 경우.</exception>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">지정된 횟수만큼 반복되는 특정 문자로 구성된 문자열 또는 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">지정된 횟수만큼 반복되는 특정 문자로 구성된 문자열 또는 개체를 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">필수 요소. <see langword="Integer" /> 식입니다. 반환되는 문자열의 길이입니다.</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. 임의의 유효한 <see langword="Char" />, <see langword="String" /> 또는 <see langword="Object" /> 식입니다. 해당 식에서 첫 문자만 사용됩니다. Character가 <see langword="Object" /> 형식이면 <see langword="Char" /> 또는 <see langword="String" />값을 포함해야 합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" />가 0보다 작거나 <paramref name="Character" /> 형식이 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" />이(가) <see langword="Nothing" />인 경우.</exception>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">지정된 횟수만큼 반복되는 특정 문자로 구성된 문자열 또는 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">지정된 횟수만큼 반복되는 특정 문자로 구성된 문자열 또는 개체를 반환합니다.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">필수 요소. <see langword="Integer" /> 식입니다. 반환되는 문자열의 길이입니다.</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">필수 요소. 임의의 유효한 <see langword="Char" />, <see langword="String" /> 또는 <see langword="Object" /> 식입니다. 해당 식에서 첫 문자만 사용됩니다. Character가 <see langword="Object" /> 형식이면 <see langword="Char" /> 또는 <see langword="String" />값을 포함해야 합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" />가 0보다 작거나 <paramref name="Character" /> 형식이 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" />이(가) <see langword="Nothing" />인 경우.</exception>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">지정된 횟수만큼 반복되는 특정 문자로 구성된 문자열 또는 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary vsli:raw="Returns a string in which the order of the text elements in the specified string is reversed.">지정된 문자열의 문자 순서를 역순으로 한 문자열을 반환합니다.</summary>
      <param name="Expression" vsli:raw="Required. String expression whose text elements are to be reversed. If &lt;paramref name=&quot;Expression&quot; /&gt; is a zero-length string (&quot;&quot;), a zero-length string is returned.">필수 요소. 문자 순서가 거꾸로 바뀌는 문자열 식입니다. <paramref name="Expression" />이 길이가 0인 문자열("")이면 길이가 0인 문자열이 반환됩니다.</param>
      <returns vsli:raw="A string in which the order of the text elements in the specified string is reversed.">지정된 문자열의 문자 순서를 역순으로 한 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">선행 공백(<see langword="LTrim" />), 후행 공백(<see langword="RTrim" />), 선행 또는 후행 공백(<see langword="Trim" />)이 없는 지정된 문자열의 복사본이 포함된 문자열을 반환합니다.</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">필수 요소. 임의의 유효한 <see langword="String" /> 식입니다.</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">선행 공백(<see langword="LTrim" />), 후행 공백(<see langword="RTrim" />), 선행 또는 후행 공백(<see langword="Trim" />)이 없는 지정된 문자열의 복사본이 포함된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary vsli:raw="Returns a string or character containing the specified string converted to uppercase.">대문자로 변환된 특정 문자열이 있는 문자열 또는 문자를 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">필수 요소. 임의의 유효한 <see langword="String" /> 또는 <see langword="Char" /> 식입니다.</param>
      <returns vsli:raw="A string or character containing the specified string converted to uppercase.">대문자로 변환된 특정 문자열이 있는 문자열 또는 문자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary vsli:raw="Returns a string or character containing the specified string converted to uppercase.">대문자로 변환된 특정 문자열이 있는 문자열 또는 문자를 반환합니다.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">필수 요소. 임의의 유효한 <see langword="String" /> 또는 <see langword="Char" /> 식입니다.</param>
      <returns vsli:raw="A string or character containing the specified string converted to uppercase.">대문자로 변환된 특정 문자열이 있는 문자열 또는 문자입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary vsli:raw="This class supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">이 클래스는 Visual Basic <see langword="Print" /> 및 <see langword="PrintLine" /> 함수를 지원합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary vsli:raw="This field supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">이 필드는 Visual Basic <see langword="Print" /> 및 <see langword="PrintLine" /> 함수를 지원합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary vsli:raw="Indicates a Boolean value or whether the default should be used when calling number-formatting functions.">부울 값 또는 숫자 서식 지정 함수를 호출할 때 기본값을 사용해야 하는지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary vsli:raw="False. The numeric value of this member is 0.">false입니다. 이 멤버의 숫자 값은 0입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary vsli:raw="True. The numeric value of this member is -1.">true입니다. 이 멤버의 숫자 값은 -1입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary vsli:raw="Default setting. The numeric value of this member is -2.">기본 설정입니다. 이 멤버의 숫자 값은 -2입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary vsli:raw="Indicates the type of a variant object, returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">variant 개체의 형식을 나타내며 <see langword="VarType" /> 함수에서 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary vsli:raw="Array. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbArray&quot; /&gt;.">Array입니다. 이 멤버는 Visual Basic 상수 <see langword="vbArray" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. (&lt;see langword=&quot;True&quot; /&gt; or &lt;see langword=&quot;False&quot; /&gt;.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbBoolean&quot; /&gt;.">
        <see langword="Boolean" />. (<see langword="True" /> 또는 <see langword="False" />.) 이 멤버는 Visual Basic 상수 <see langword="vbBoolean" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary vsli:raw="&lt;see langword=&quot;Byte&quot; /&gt;. (0 through 255.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbByte&quot; /&gt;.">
        <see langword="Byte" />. (0~255.) 이 멤버는 Visual Basic 상수 <see langword="vbByte" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary vsli:raw="&lt;see langword=&quot;Char&quot; /&gt;. (0 through 65535.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbChar&quot; /&gt;.">
        <see langword="Char" />. (0~65535.) 이 멤버는 Visual Basic 상수 <see langword="vbChar" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary vsli:raw="Currency. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCurrency&quot; /&gt;.">Currency입니다. 이 멤버는 Visual Basic 상수 <see langword="vbCurrency" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary vsli:raw="DataObject.">DataObject입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary vsli:raw="&lt;see langword=&quot;Date&quot; /&gt;. (0:00:00 on January 1, 0001 through 11:59:59 PM on December 31, 9999.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDate&quot; /&gt;.">
        <see langword="Date" />. (1년 1월 1일 0:00:00~9999년 12월 31 11:59:59 PM.) 이 멤버는 Visual Basic 상수 <see langword="vbDate" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary vsli:raw="&lt;see langword=&quot;Decimal&quot; /&gt;. (0 through +/-79,228,162,514,264,337,593,543,950,335 with no decimal point; 0 through +/-7.9228162514264337593543950335 with 28 places to the right of the decimal; smallest non-zero number is +/-0.0000000000000000000000000001.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDecimal&quot; /&gt;.">
        <see langword="Decimal" />. (소수 자릿수가 없는 숫자의 경우 0~+/-79,228,162,514,264,337,593,543,950,335, 소수 자릿수가 28개인 숫자의 경우 0~+/-7.9228162514264337593543950335, 0이 아닌 숫자 중에서 가능한 최소 숫자는 +/-0.0000000000000000000000000001임)입니다. 이 멤버는 Visual Basic 상수 <see langword="vbDecimal" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary vsli:raw="&lt;see langword=&quot;Double&quot; /&gt;. (-1.79769313486231E+308 through -4.94065645841247E-324 for negative values; 4.94065645841247E-324 through 1.79769313486231E+308 for positive values.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDouble&quot; /&gt;.">
        <see langword="Double" />. (음수의 경우 -1.79769313486231E+308~-4.94065645841247E-324, 양수의 경우 4.94065645841247E-324~1.79769313486231E+308)입니다. 이 멤버는 Visual Basic 상수 <see langword="vbDouble" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary vsli:raw="Null reference. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbEmpty&quot; /&gt;.">Null 참조입니다. 이 멤버는 Visual Basic 상수 <see langword="vbEmpty" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Exception&quot; /&gt;">
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. (-2,147,483,648 through 2,147,483,647.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbInteger&quot; /&gt;.">
        <see langword="Integer" />. (-2,147,483,648~2,147,483,647.) 이 멤버는 Visual Basic 상수 <see langword="vbInteger" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary vsli:raw="&lt;see langword=&quot;Long&quot; /&gt;. (-9,223,372,036,854,775,808 through 9,223,372,036,854,775,807.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLong&quot; /&gt;.">
        <see langword="Long" />. (-9,223,372,036,854,775,808~9,223,372,036,854,775,807.) 이 멤버는 Visual Basic 상수 <see langword="vbLong" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary vsli:raw="Null object. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNull&quot; /&gt;.">Null 개체입니다. 이 멤버는 Visual Basic 상수 <see langword="vbNull" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary vsli:raw="Any type can be stored in a variable of type &lt;see langword=&quot;Object&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbObject&quot; /&gt;.">
        <see langword="Object" /> 형식의 변수에는 모든 형식을 저장할 수 있습니다. 이 멤버는 Visual Basic 상수 <see langword="vbObject" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary vsli:raw="&lt;see langword=&quot;Short&quot; /&gt;. (-32,768 through 32,767.)">
        <see langword="Short" />. (-32,768 ~ 32,767.)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary vsli:raw="&lt;see langword=&quot;Single&quot; /&gt;. (-3.402823E+38 through -1.401298E-45 for negative values; 1.401298E-45 through 3.402823E+38 for positive values.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSingle&quot; /&gt;.">
        <see langword="Single" />. (-3.402823E+38~-1.401298E-45(음수), 1.401298E-45~3.402823E+38(양수).) 이 멤버는 Visual Basic 상수 <see langword="vbSingle" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. (0 to approximately 2 billion Unicode characters.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbString&quot; /&gt;.">
        <see langword="String" />. (0에서 약 20억 개의 유니코드 문자.) 이 멤버는 Visual Basic 상수 <see langword="vbString" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary vsli:raw="User-defined type. Each member of the structure has a range determined by its data type and independent of the ranges of the other members. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUserDefinedType&quot; /&gt;.">사용자 정의 형식입니다. 구조체의 각 멤버는 데이터 형식에 의해 결정되고 다른 멤버의 범위와는 무관한 범위를 갖습니다. 이 멤버는 Visual Basic 상수 <see langword="vbUserDefinedType" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary vsli:raw="&lt;see langword=&quot;Variant&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbVariant&quot; /&gt;.">
        <see langword="Variant" />. 이 멤버는 Visual Basic 상수 <see langword="vbVariant" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary vsli:raw="Indicates that an array in a structure or non-local variable should be treated as a fixed-length array.">구조체 또는 지역 변수가 아닌 변수의 배열을 고정 길이 배열로 처리해야 함을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;Bounds&quot; /&gt; property.">
        <see langword="Bounds" /> 속성 값을 초기화합니다.</summary>
      <param name="UpperBound1" vsli:raw="Initializes the value of upper field, which represents the size of the first dimension of the array.">배열의 첫째 차원의 크기를 나타내는 상한 필드 값을 초기화합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;Bounds&quot; /&gt; property.">
        <see langword="Bounds" /> 속성 값을 초기화합니다.</summary>
      <param name="UpperBound1" vsli:raw="Initializes the value of upper field, which represents the size of the first dimension of the array.">배열의 첫째 차원의 크기를 나타내는 상한 필드 값을 초기화합니다.</param>
      <param name="UpperBound2" vsli:raw="Initializes the value of upper field, which represents the size of the second dimension of the array.">배열의 둘째 차원의 크기를 나타내는 상한 필드 값을 초기화합니다.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary vsli:raw="Returns the bounds of the array.">배열의 범위를 반환합니다.</summary>
      <returns vsli:raw="Contains an integer array that represents the bounds of the array.">배열의 범위를 나타내는 정수 배열이 들어 있습니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary vsli:raw="Returns the size of the array.">배열의 크기를 반환합니다.</summary>
      <returns vsli:raw="Contains an integer that represents the number of elements in the array.">배열의 요소 수를 나타내는 정수가 들어 있습니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary vsli:raw="Indicates that a string should be treated as if it were fixed length.">문자열을 고정 길이인 것처럼 처리해야 함을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;SizeConst&quot; /&gt; field.">
        <see langword="SizeConst" /> 필드 값을 초기화합니다.</summary>
      <param name="Length" vsli:raw="The length of the fixed string.">고정 문자열 길이입니다.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary vsli:raw="Gets the length of the string.">문자열의 길이를 가져옵니다.</summary>
      <returns vsli:raw="The length of the string.">문자열의 길이입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary vsli:raw="The &lt;see langword=&quot;VbMath&quot; /&gt; module contains procedures used to perform mathematical operations.">
        <see langword="VbMath" /> 모듈에는 수학 연산을 수행하는 데 사용되는 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary vsli:raw="Initializes the random-number generator.">난수 생성기를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary vsli:raw="Initializes the random-number generator.">난수 생성기를 초기화합니다.</summary>
      <param name="Number" vsli:raw="Optional. An &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression.">선택 사항입니다. <see langword="Object" /> 또는 임의의 유효한 숫자 식입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary vsli:raw="Returns a random number of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Single" /> 형식의 난수를 반환합니다.</summary>
      <returns vsli:raw="The next random number in the sequence.">시퀀스의 다음 난수가 생성됩니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary vsli:raw="Returns a random number of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Single" /> 형식의 난수를 반환합니다.</summary>
      <param name="Number" vsli:raw="Optional. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value or any valid &lt;see cref=&quot;T:System.Single&quot; /&gt; expression.">선택 사항입니다. <see cref="T:System.Single" /> 값 또는 임의의 유효한 <see cref="T:System.Single" /> 식입니다.</param>
      <returns vsli:raw="If number is less than zero, Rnd generates the same number every time, using &lt;paramref name=&quot;Number&quot; /&gt; as the seed. If number is greater than zero, Rnd generates the next random number in the sequence. If number is equal to zero, Rnd generates the most recently generated number. If number is not supplied, Rnd generates the next random number in the sequence.">숫자가 0보다 작으면 Rnd가 <paramref name="Number" />를 시드로 사용하여 항상 같은 숫자를 생성합니다. 숫자가 0보다 크면 Rnd가 시퀀스의 다음 난수를 생성합니다. 숫자가 0이면 Rnd가 가장 최근에 생성된 숫자를 생성합니다. 숫자가 제공되지 않으면 Rnd가 시퀀스의 다음 난수를 생성합니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary vsli:raw="Indicates which type of conversion to perform when calling the &lt;see langword=&quot;StrConv&quot; /&gt; function.">
        <see langword="StrConv" /> 함수를 호출할 때 수행할 변환 형식을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary vsli:raw="Converts Katakana characters in the string to Hiragana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHiragana&quot; /&gt;.">문자열의 가타카나 문자를 히라가나 문자로 변환합니다. 일본어 로캘에만 적용됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbHiragana" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary vsli:raw="Converts Hiragana characters in the string to Katakana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbKatakana&quot; /&gt;.">문자열의 히라가나 문자를 가타카나 문자로 변환합니다. 일본어 로캘에만 적용됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbKatakana" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary vsli:raw="Converts the string from file system rules for casing to linguistic rules. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLinguisticCasing&quot; /&gt;.">대/소문자 구분에 대한 파일 시스템 규칙에서 언어 규칙으로 문자열을 변환합니다. 이 멤버는 Visual Basic 상수 <see langword="vbLinguisticCasing" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary vsli:raw="Converts the string to lowercase characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLowerCase&quot; /&gt;.">문자열을 소문자로 변환합니다. 이 멤버는 Visual Basic 상수 <see langword="vbLowerCase" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary vsli:raw="Converts wide (double-byte) characters in the string to narrow (single-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNarrow&quot; /&gt;.">문자열의 와이드(더블바이트) 문자를 좁은(싱글바이트) 문자로 변환합니다. 아시아어 로캘에 적용됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbNarrow" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary vsli:raw="Performs no conversion.">변환을 수행하지 않습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary vsli:raw="Converts the first letter of every word in the string to uppercase. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbProperCase&quot; /&gt;.">문자열에 포함된 모든 단어의 첫 글자를 대문자로 변환합니다. 이 멤버는 Visual Basic 상수 <see langword="vbProperCase" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary vsli:raw="Converts the string to Simplified Chinese characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSimplifiedChinese&quot; /&gt;.">문자열을 중국어 간체 문자로 변환합니다. 이 멤버는 Visual Basic 상수 <see langword="vbSimplifiedChinese" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary vsli:raw="Converts the string to Traditional Chinese characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTraditionalChinese&quot; /&gt;.">문자열을 중국어 번체 문자로 변환합니다. 이 멤버는 Visual Basic 상수 <see langword="vbTraditionalChinese" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary vsli:raw="Converts the string to uppercase characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUpperCase&quot; /&gt;.">지정된 문자열을 대문자로 변환합니다. 이 멤버는 Visual Basic 상수 <see langword="vbUpperCase" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary vsli:raw="Converts narrow (single-byte) characters in the string to wide (double-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbWide&quot; /&gt;. The conversion may use Normalization Form C even if an input character is already full-width. For example, the string &quot;は゛&quot; (which is already full-width) is normalized to &quot;ば&quot;. See Unicode normalization forms.">문자열의 좁은(싱글바이트) 문자를 와이드(더블바이트) 문자로 변환합니다. 아시아어 로캘에 적용됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbWide" />에 해당합니다. 변환은 입력 문자가 이미 전자인 경우에도 정규화 형식 C를 사용할 수 있습니다. 예를 들어 문자열 "は゛"(전자임)는 "ば"로 표준화됩니다. 유니코드 정규화 형식을 참조하세요.</summary>
    </member>
  </members>
</doc>