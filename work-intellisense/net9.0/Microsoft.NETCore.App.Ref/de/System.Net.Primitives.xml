<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationSchemes">
      <summary vsli:raw="Specifies protocols for authentication.">Gibt Protokolle für die Authentifizierung an.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Anonymous">
      <summary vsli:raw="Specifies anonymous authentication.">Gibt anonyme Authentifizierung an.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Basic">
      <summary vsli:raw="Specifies basic authentication.">Gibt die Standardauthentifizierung an.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Digest">
      <summary vsli:raw="Specifies digest authentication.">Gibt die Digestauthentifizierung an.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.IntegratedWindowsAuthentication">
      <summary vsli:raw="Specifies Windows authentication.">Gibt die Windows-Authentifizierung an.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Negotiate">
      <summary vsli:raw="Negotiates with the client to determine the authentication scheme. If both client and server support Kerberos, it is used; otherwise, NTLM is used.">Handelt mit dem Client das Authentifizierungsschema aus. Wenn sowohl Client als auch Server Kerberos unterstützen, wird dieses Schema verwendet. Andernfalls wird NTLM verwendet.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.None">
      <summary vsli:raw="No authentication is allowed. A client requesting an &lt;see cref=&quot;T:System.Net.HttpListener&quot; /&gt; object with this flag set will always receive a 403 Forbidden status. Use this flag when a resource should never be served to a client.">Es ist keine Authentifizierung zulässig. Ein Client, der ein <see cref="T:System.Net.HttpListener" />-Objekt anfordert, für das dieses Flag festgelegt ist, empfängt immer den Status 403 Unzulässig. Verwenden Sie dieses Flag, wenn eine Ressource nie für einen Client bereitgestellt werden soll.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Ntlm">
      <summary vsli:raw="Specifies NTLM authentication.">Gibt NTLM-Authentifizierung an.</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCacheLevel">
      <summary vsli:raw="Specifies caching behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; and its derived classes.">Gibt das Cacheverhalten für Ressourcen an, die mithilfe von <see cref="T:System.Net.WebRequest" /> und den hiervon abgeleiteten Klassen abgerufen werden.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.BypassCache">
      <summary vsli:raw="Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.">Führt eine Anforderung mithilfe des Servers aus. Zwischen Client und Server werden keine Einträge aus Caches abgerufen, zu Caches hinzugefügt oder aus Caches entfernt. Dies ist das Standardcacheverhalten, das in der mit .NET Framework gelieferten Computerkonfigurationsdatei angegeben ist.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheIfAvailable">
      <summary vsli:raw="Satisfies a request for a resource from the cache, if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.">Führt eine Anforderung einer Ressource aus dem Cache aus, wenn die Ressource verfügbar ist, und sendet andernfalls eine Anforderung einer Ressource an den Server. Wenn das angeforderte Element in einem Cache zwischen Client und Server verfügbar ist, wird die Anforderung möglicherweise durch den Zwischencache ausgeführt.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheOnly">
      <summary vsli:raw="Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; exception is thrown if the item is not in the client cache.">Führt eine Anforderung mithilfe der lokal zwischengespeicherten Ressource aus. Sendet keine Anforderung eines Elements, das sich nicht im Cache befindet. Wenn diese Cacherichtlinienebene angegeben ist und sich das Element nicht im Clientcache befindet, wird eine <see cref="T:System.Net.WebException" />-Ausnahme ausgelöst.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Default">
      <summary vsli:raw="Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.">Führt eine Anforderung einer Ressource entweder mithilfe der zwischengespeicherten Kopie der Ressource oder durch Senden einer Anforderung der Ressource an den Server aus. Die ausgeführte Aktion wird durch die aktuelle Cacherichtlinie und das Alter des Inhalts im Cache bestimmt. Dies ist die Cacheebene, die von den meisten Anwendungen verwendet werden muss.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.NoCacheNoStore">
      <summary vsli:raw="Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the &lt;see langword=&quot;no-cache&quot; /&gt; cache control directive.">Führt eine Anforderung niemals mithilfe von Ressourcen aus dem Cache aus und zwischenspeichert keine Ressourcen. Wenn die Ressource im lokalen Cache vorhanden ist, wird sie entfernt. Diese Richtlinienebene gibt für Zwischencaches an, dass sie die Ressource entfernen sollen. Im HTTP-Cacheprotokoll erfolgt dies mithilfe der <see langword="no-cache" />-Cachesteuerdirektive.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Reload">
      <summary vsli:raw="Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the &lt;see langword=&quot;no-cache&quot; /&gt; cache control directive and the no-cache &lt;see langword=&quot;Pragma&quot; /&gt; header.">Führt eine Anforderung mithilfe des Servers aus. Die Antwort wird möglicherweise im Cache gespeichert. Im HTTP-Cacheprotokoll erfolgt dies durch die <see langword="no-cache" />-Cachesteuerdirektive und den no-cache-<see langword="Pragma" />-Header.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Revalidate">
      <summary vsli:raw="Satisfies a request by using the cached copy of the resource if the timestamp is the same as the timestamp of the resource on the server; otherwise, the resource is downloaded from the server, presented to the caller, and stored in the cache.">Erfüllt eine Anforderung, indem die zwischengespeicherte Kopie der Ressource zurückgegeben wird, wenn der Timestamp der zwischengespeicherten Ressource dem Timestamp der Ressource auf dem Server entspricht. Andernfalls wird die Ressource vom Server heruntergeladen, dem Aufrufer dargestellt und im Cache gespeichert.</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCachePolicy">
      <summary vsli:raw="Defines an application's caching requirements for resources obtained by using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">Definiert die Zwischenspeicherungsanforderungen einer Anwendung für Ressourcen, die mithilfe von <see cref="T:System.Net.WebRequest" />-Objekten abgerufen wurden.</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.RequestCachePolicy&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Cache.RequestCachePolicy" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor(System.Net.Cache.RequestCacheLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.RequestCachePolicy&quot; /&gt; class. using the specified cache policy.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Cache.RequestCachePolicy" />-Klasse. mithilfe der angegebenen Cacherichtlinie.</summary>
      <param name="level" vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; that specifies the cache behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">Ein <see cref="T:System.Net.Cache.RequestCacheLevel" />, der das Cacheverhalten für Ressourcen angibt, die mithilfe von <see cref="T:System.Net.WebRequest" />-Objekten abgerufen wurden.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="level is not a valid &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt;.value.">level ist kein gültiger <see cref="T:System.Net.Cache.RequestCacheLevel" />-Wert.</exception>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.ToString">
      <summary vsli:raw="Returns a string representation of this instance.">Gibt eine Zeichenfolgenentsprechung dieser Instanz zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Net.Cache.RequestCachePolicy.Level&quot; /&gt; for this instance.">Ein <see cref="T:System.String" />, der den <see cref="P:System.Net.Cache.RequestCachePolicy.Level" /> für diese Instanz enthält.</returns>
    </member>
    <member name="P:System.Net.Cache.RequestCachePolicy.Level">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; value specified when this instance was constructed.">Ruft den <see cref="T:System.Net.Cache.RequestCacheLevel" />-Wert ab, der beim Erstellen dieser Instanz angegeben wurde.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; value that specifies the cache behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">Ein <see cref="T:System.Net.Cache.RequestCacheLevel" />-Wert, der das Cacheverhalten für Ressourcen angibt, die mithilfe von <see cref="T:System.Net.WebRequest" />-Objekten abgerufen wurden.</returns>
    </member>
    <member name="T:System.Net.Cookie">
      <summary vsli:raw="Provides a set of properties and methods that are used to manage cookies. This class cannot be inherited.">Stellt eine Reihe von Eigenschaften und Methoden für die Cookieverwaltung bereit. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Cookie" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Cookie" />-Klasse mit einer angegebenen <see cref="P:System.Net.Cookie.Name" /> und <see cref="P:System.Net.Cookie.Value" />.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">Der Name eines <see cref="T:System.Net.Cookie" />. Die folgenden Zeichen dürfen in <paramref name="name" /> nicht verwendet werden: Gleichheitszeichen, Semikolon, Komma, Zeilenvorschub (\n), Wagenrücklauf (\r), Tabstopp (\t) und Leerzeichen. Das Dollarzeichen („$“) darf nicht das erste Zeichen sein.</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">Der Wert eines <see cref="T:System.Net.Cookie" />. Die folgenden Zeichen dürfen nicht in <paramref name="value" /> verwendet werden: Semikolon und Komma.</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">Der <paramref name="name" />-Parameter ist <see langword="null" />.  
  
- oder - 
Der <paramref name="name" />-Parameter hat die Länge 0 (null).  
  
- oder - 
Der <paramref name="name" />-Parameter enthält ein ungültiges Zeichen.  
  
- oder - 
Der <paramref name="value" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="value" />-Parameter enthält eine Zeichenfolge, die nicht in Anführungszeichen eingeschlossen ist und ein ungültiges Zeichen enthält.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Cookie" />-Klasse mit einem angegebenen <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" /> und <see cref="P:System.Net.Cookie.Path" />.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">Der Name eines <see cref="T:System.Net.Cookie" />. Die folgenden Zeichen dürfen in <paramref name="name" /> nicht verwendet werden: Gleichheitszeichen, Semikolon, Komma, Zeilenvorschub (\n), Wagenrücklauf (\r), Tabstopp (\t) und Leerzeichen. Das Dollarzeichen („$“) darf nicht das erste Zeichen sein.</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">Der Wert eines <see cref="T:System.Net.Cookie" />. Die folgenden Zeichen dürfen nicht in <paramref name="value" /> verwendet werden: Semikolon und Komma.</param>
      <param name="path" vsli:raw="The subset of URIs on the origin server to which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies. The default value is &quot;/&quot;.">Die Teilmenge von URIs auf dem Ursprungsserver, für die dieses <see cref="T:System.Net.Cookie" /> gültig ist. Der Standardwert ist „/“.</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">Der <paramref name="name" />-Parameter ist <see langword="null" />.  
  
- oder - 
Der <paramref name="name" />-Parameter hat die Länge 0 (null).  
  
- oder - 
Der <paramref name="name" />-Parameter enthält ein ungültiges Zeichen.  
  
- oder - 
Der <paramref name="value" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="value" />-Parameter enthält eine Zeichenfolge, die nicht in Anführungszeichen eingeschlossen ist und ein ungültiges Zeichen enthält.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Cookie" />-Klasse mit einem angegebenen <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" />, <see cref="P:System.Net.Cookie.Path" /> und <see cref="P:System.Net.Cookie.Domain" />.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">Der Name eines <see cref="T:System.Net.Cookie" />. Die folgenden Zeichen dürfen in <paramref name="name" /> nicht verwendet werden: Gleichheitszeichen, Semikolon, Komma, Zeilenvorschub (\n), Wagenrücklauf (\r), Tabstopp (\t) und Leerzeichen. Das Dollarzeichen („$“) darf nicht das erste Zeichen sein.</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; object. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">Der Wert eines <see cref="T:System.Net.Cookie" />-Objekts. Die folgenden Zeichen dürfen nicht in <paramref name="value" /> verwendet werden: Semikolon und Komma.</param>
      <param name="path" vsli:raw="The subset of URIs on the origin server to which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies. The default value is &quot;/&quot;.">Die Teilmenge von URIs auf dem Ursprungsserver, für die dieses <see cref="T:System.Net.Cookie" /> gültig ist. Der Standardwert ist „/“.</param>
      <param name="domain" vsli:raw="The optional internet domain for which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid. The default value is the host this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; has been received from.">Die optionale Internetdomäne, für die dieses <see cref="T:System.Net.Cookie" /> gültig ist. Der Standardwert ist der Host, von dem dieses <see cref="T:System.Net.Cookie" /> empfangen wurde.</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">Der <paramref name="name" />-Parameter ist <see langword="null" />.  
  
- oder - 
Der <paramref name="name" />-Parameter hat die Länge 0 (null).  
  
- oder - 
Der <paramref name="name" />-Parameter enthält ein ungültiges Zeichen.  
  
- oder - 
Der <paramref name="value" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="value" />-Parameter enthält eine Zeichenfolge, die nicht in Anführungszeichen eingeschlossen ist und ein ungültiges Zeichen enthält.</exception>
    </member>
    <member name="M:System.Net.Cookie.Equals(System.Object)">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.Equals(System.Object)&quot; /&gt; method.">Setzt die <see cref="M:System.Object.Equals(System.Object)" />-Methode außer Kraft.</summary>
      <param name="comparand" vsli:raw="A reference to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Ein Verweis auf eine <see cref="T:System.Net.Cookie" />.</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is equal to &lt;paramref name=&quot;comparand&quot; /&gt;. Two &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances are equal if their &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Version&quot; /&gt; properties are equal. &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt; string comparisons are case-insensitive.">Gibt <see langword="true" /> zurück, wenn das <see cref="T:System.Net.Cookie" /> gleich <paramref name="comparand" /> ist. Zwei <see cref="T:System.Net.Cookie" />-Instanzen sind gleich, wenn ihre Eigenschaften <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" />, <see cref="P:System.Net.Cookie.Path" />, <see cref="P:System.Net.Cookie.Domain" /> und <see cref="P:System.Net.Cookie.Version" /> gleich sind. Beim Vergleichen der <see cref="P:System.Net.Cookie.Name" />-Zeichenfolge und der <see cref="P:System.Net.Cookie.Domain" />-Zeichenfolge wird die Groß- und Kleinschreibung beachtet.</returns>
    </member>
    <member name="M:System.Net.Cookie.GetHashCode">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.GetHashCode&quot; /&gt; method.">Setzt die <see cref="M:System.Object.GetHashCode" />-Methode außer Kraft.</summary>
      <returns vsli:raw="The 32-bit signed integer hash code for this instance.">Eine ganze 32-Bit-Zahl mit Vorzeichen als Hashcode für diese Instanz.</returns>
    </member>
    <member name="M:System.Net.Cookie.ToString">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method.">Setzt die <see cref="M:System.Object.ToString" />-Methode außer Kraft.</summary>
      <returns vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; object that is suitable for including in a HTTP Cookie: request header.">Gibt eine Zeichenfolgenentsprechung dieses <see cref="T:System.Net.Cookie" />-Objekts zurück, das einem HTTP Cookie:-Anforderungsheader hinzugefügt werden kann.</returns>
    </member>
    <member name="P:System.Net.Cookie.Comment">
      <summary vsli:raw="Gets or sets a comment that the server can add to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Ruft einen Kommentar ab, den der Server einem <see cref="T:System.Net.Cookie" /> hinzufügen kann, oder legt diesen fest.</summary>
      <returns vsli:raw="An optional comment to document intended usage for this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Ein optionaler Kommentar, mit dem die für dieses <see cref="T:System.Net.Cookie" /> vorgesehene Verwendung dokumentiert werden kann.</returns>
    </member>
    <member name="P:System.Net.Cookie.CommentUri">
      <summary vsli:raw="Gets or sets a URI comment that the server can provide with a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Ruft einen URI-Kommentar ab, den der Server mit einem <see cref="T:System.Net.Cookie" /> bereitstellen kann, oder legt diesen fest.</summary>
      <returns vsli:raw="An optional comment that represents the intended usage of the URI reference for this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The value must conform to URI format.">Ein optionaler Kommentar, der die vorgesehene Verwendung des URI-Verweises für diesen <see cref="T:System.Net.Cookie" /> darstellt. Der Wert muss dem URI-Format entsprechen.</returns>
    </member>
    <member name="P:System.Net.Cookie.Discard">
      <summary vsli:raw="Gets or sets the discard flag set by the server.">Ruft das vom Server festgelegte Flag für die Verwerfbarkeit ab, oder legt dieses fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the client is to discard the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; at the end of the current session; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Client das <see cref="T:System.Net.Cookie" /> am Ende der aktuellen Sitzung verwerfen soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Domain">
      <summary vsli:raw="Gets or sets the URI for which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid.">Ruft den URI ab, für den das <see cref="T:System.Net.Cookie" /> gültig ist, oder legt diesen fest.</summary>
      <returns vsli:raw="The URI for which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid.">Der URI, für den das <see cref="T:System.Net.Cookie" /> gültig ist.</returns>
    </member>
    <member name="P:System.Net.Cookie.Expired">
      <summary vsli:raw="Gets or sets the current state of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Ruft den aktuellen Zustand des <see cref="T:System.Net.Cookie" /> ab, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; has expired; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Net.Cookie" /> abgelaufen ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Expires">
      <summary vsli:raw="Gets or sets the expiration date and time for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Ruft das Ablaufdatum und die Ablaufzeit für das <see cref="T:System.Net.Cookie" /> als <see cref="T:System.DateTime" /> ab, oder legt diese fest.</summary>
      <returns vsli:raw="The expiration date and time for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; instance.">Das Ablaufdatum und die Ablaufzeit für das <see cref="T:System.Net.Cookie" /> als <see cref="T:System.DateTime" />-Instanz.</returns>
    </member>
    <member name="P:System.Net.Cookie.HttpOnly">
      <summary vsli:raw="Determines whether a page script or other active content can access this cookie.">Bestimmt, ob ein Seitenskript oder anderer aktiver Inhalt auf dieses Cookie zugreifen kann.</summary>
      <returns vsli:raw="Boolean value that determines whether a page script or other active content can access this cookie.">Boolescher Wert, der bestimmt, ob ein Seitenskript oder anderer aktiver Inhalt auf dieses Cookie zugreifen kann.</returns>
    </member>
    <member name="P:System.Net.Cookie.Name">
      <summary vsli:raw="Gets or sets the name for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Ruft den Namen für <see cref="T:System.Net.Cookie" /> ab oder legt ihn fest.</summary>
      <exception cref="T:System.Net.CookieException" vsli:raw="The value specified for a set operation is &lt;see langword=&quot;null&quot; /&gt; or the empty string  &#xA;  &#xA;-or-&#xA;  &#xA; The value specified for a set operation contained an illegal character. The following characters must not be used inside the &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; property: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">Der für einen Set-Vorgang angegebene Wert ist <see langword="null" /> oder die leere Zeichenfolge 
- oder - 
Der für einen Set-Vorgang angegebene Wert hat ein ungültiges Zeichen enthalten. Die folgenden Zeichen dürfen in der <see cref="P:System.Net.Cookie.Name" />-Eigenschaft nicht verwendet werden: Gleichheitszeichen, Semikolon, Komma, Zeilenvorschub (\n), Wagenrücklauf (\r), Tabstopp (\t) und Leerzeichen. Das Dollarzeichen („$“) darf nicht das erste Zeichen sein.</exception>
      <returns vsli:raw="The name for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Der Name des <see cref="T:System.Net.Cookie" />-Elements.</returns>
    </member>
    <member name="P:System.Net.Cookie.Path">
      <summary vsli:raw="Gets or sets the URIs to which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies.">Ruft die URIs ab, für die das <see cref="T:System.Net.Cookie" /> gültig ist, oder legt diese fest.</summary>
      <returns vsli:raw="The URIs to which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies.">Die URIs, für die das <see cref="T:System.Net.Cookie" /> gültig ist.</returns>
    </member>
    <member name="P:System.Net.Cookie.Port">
      <summary vsli:raw="Gets or sets a list of TCP ports that the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies to.">Ruft eine Liste von TCP-Anschlüssen ab, für die das <see cref="T:System.Net.Cookie" /> gültig ist, oder legt diese fest.</summary>
      <exception cref="T:System.Net.CookieException" vsli:raw="The value specified for a set operation could not be parsed or is not enclosed in double quotes.">Der für einen Set-Vorgang angegebene Wert konnte nicht analysiert werden oder ist nicht in doppelte Anführungszeichen eingeschlossen.</exception>
      <returns vsli:raw="The list of TCP ports that the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies to.">Die Liste von TCP-Anschlüssen, für die das <see cref="T:System.Net.Cookie" /> gültig ist.</returns>
    </member>
    <member name="P:System.Net.Cookie.Secure">
      <summary vsli:raw="Gets or sets the security level of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Ruft die Sicherheitsebene eines <see cref="T:System.Net.Cookie" /> ab, oder legt diese fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the client is only to return the cookie in subsequent requests if those requests use Secure Hypertext Transfer Protocol (HTTPS); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Client das Cookie bei nachfolgenden Anforderungen nur zurückgeben soll, sofern diese das HTTPS (Secure Hypertext Transfer Protocol)-Protokol verwenden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.TimeStamp">
      <summary vsli:raw="Gets the time when the cookie was issued as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Ruft die Ausgabezeit des Cookies als <see cref="T:System.DateTime" /> ab.</summary>
      <returns vsli:raw="The time when the cookie was issued as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Die Ausgabezeit des Cookies als <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Value">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Ruft die <see cref="P:System.Net.Cookie.Value" /> für den <see cref="T:System.Net.Cookie" /> ab oder legt diese fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Der <see cref="P:System.Net.Cookie.Value" /> für den <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Version">
      <summary vsli:raw="Gets or sets the version of HTTP state maintenance to which the cookie conforms.">Ruft die Version der HTTP-Zustandsverwaltung ab, der das Cookie entspricht, oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a version is not allowed.">Der für eine Version angegebene Wert ist nicht zulässig.</exception>
      <returns vsli:raw="The version of HTTP state maintenance to which the cookie conforms.">Die Version der HTTP-Zustandsverwaltung, der das Cookie entspricht.</returns>
    </member>
    <member name="T:System.Net.CookieCollection">
      <summary vsli:raw="Provides a collection container for instances of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class.">Stellt einen Auflistungscontainer für Instanzen der <see cref="T:System.Net.Cookie" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.CookieCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Fügt einer <see cref="T:System.Net.CookieCollection" /> eine <see cref="T:System.Net.Cookie" /> hinzu.</summary>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Das <see cref="T:System.Net.Cookie" />, das einer <see cref="T:System.Net.CookieCollection" /> hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookie" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the current instance.">Fügt der aktuellen Instanz den Inhalt einer <see cref="T:System.Net.CookieCollection" /> hinzu.</summary>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added.">Das <see cref="T:System.Net.CookieCollection" />-Objekt, das hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Clear">
      <summary vsli:raw="Removes all elements from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; object.">Entfernt alle Elemente aus dem <see cref="T:System.Net.CookieCollection" />-Objekt.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Contains(System.Net.Cookie)">
      <summary vsli:raw="Determines whether the specified cookie is in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Bestimmt, ob das angegebene Cookie in der <see cref="T:System.Net.CookieCollection" /> vorhanden ist</summary>
      <param name="cookie" vsli:raw="The cookie to locate in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Das Cookie, das in der <see cref="T:System.Net.CookieCollection" /> gesucht werden soll</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified cookie is found in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene Cookie in der <see cref="T:System.Net.CookieCollection" /> vorhanden ist, andernfalls <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the specified array, starting at a particular index.">Kopiert die Elemente einer <see cref="T:System.Net.CookieCollection" /> in das angegebene Array, wobei an einem bestimmten Index begonnen wird</summary>
      <param name="array" vsli:raw="The target array to which the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; will be copied.">Das Zielarray, in das die <see cref="T:System.Net.CookieCollection" /> kopiert wird</param>
      <param name="index" vsli:raw="The zero-based index in the target array where copying begins.">Der nullbasierte Index im Zielarray, an dem der Kopiervorgang beginnt</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> ist mehrdimensional.  
  
- oder - 
Die Anzahl der Elemente in dieser <see cref="T:System.Net.CookieCollection" /> ist größer als der verfügbare Platz zwischen <paramref name="index" /> und dem Ende des Ziel-<paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Die Elemente in dieser <see cref="T:System.Net.CookieCollection" /> können nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Net.Cookie[],System.Int32)">
      <summary vsli:raw="Copies the elements of this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; array starting at the specified index of the target array.">Kopiert die Elemente dieser <see cref="T:System.Net.CookieCollection" /> in ein <see cref="T:System.Net.Cookie" />-Array, beginnend am angegebenen Index des Zielarrays.</summary>
      <param name="array" vsli:raw="The target &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; array to which the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; will be copied.">Das <see cref="T:System.Net.Cookie" />-Zielarray, in das die <see cref="T:System.Net.CookieCollection" /> kopiert wird.</param>
      <param name="index" vsli:raw="The zero-based index in the target array where copying begins.">Der nullbasierte Index im Zielarray, an dem der Kopiervorgang beginnt</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> ist mehrdimensional.  
  
- oder - 
Die Anzahl der Elemente in dieser <see cref="T:System.Net.CookieCollection" /> ist größer als der verfügbare Platz zwischen <paramref name="index" /> und dem Ende des Ziel-<paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Die Elemente in dieser <see cref="T:System.Net.CookieCollection" /> können nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Ruft einen Enumerator ab, der eine <see cref="T:System.Net.CookieCollection" /> durchlaufen kann.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">Ein <see cref="T:System.Collections.IEnumerator" /> für diese Auflistung.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.Remove(System.Net.Cookie)">
      <summary vsli:raw="Removes the specified cookie from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Entfernt das angegebene Cookie aus der <see cref="T:System.Net.CookieCollection" /></summary>
      <param name="cookie" vsli:raw="The cookie to remove from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Das Cookie, das aus der <see cref="T:System.Net.CookieCollection" /> entfernt werden soll</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;cookie&quot; /&gt; was successfully removed from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if item is not found in the original collection.">
        <see langword="true" />, wenn <paramref name="cookie" /> erfolgreich aus der <see cref="T:System.Net.CookieCollection" /> entfernt wurde, andernfalls <see langword="false" />. Diese Methode gibt auch dann <see langword="false" /> zurück, wenn das Objekt nicht in der ursprünglichen Auflistung gefunden wurde.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.System#Collections#Generic#IEnumerable{System#Net#Cookie}#GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Ruft einen Enumerator ab, der die <see cref="T:System.Net.CookieCollection" /> durchlaufen kann.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; for this collection.">Ein <see cref="T:System.Collections.Generic.IEnumerator`1" /> für diese Auflistung.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Count">
      <summary vsli:raw="Gets the number of cookies contained in a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Ruft die Anzahl der Cookies ab, die in einer <see cref="T:System.Net.CookieCollection" /> enthalten sind.</summary>
      <returns vsli:raw="The number of cookies contained in a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Die Anzahl der Cookies, die in einer <see cref="T:System.Net.CookieCollection" /> enthalten sind.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is read-only.">Ruft einen Wert ab, der angibt, ob eine <see cref="T:System.Net.CookieCollection" /> schreibgeschützt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this is a read-only &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn diese <see cref="T:System.Net.CookieCollection" /> schreibgeschützt ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is thread safe.">Ruft einen Wert ab, der angibt, ob der Zugriff auf eine <see cref="T:System.Net.CookieCollection" /> threadsicher ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is thread safe; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Zugriff auf eine <see cref="T:System.Net.CookieCollection" /> threadsicher ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific index from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Ruft das <see cref="T:System.Net.Cookie" /> mit einem bestimmten Index aus einer <see cref="T:System.Net.CookieCollection" /> ab.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be found.">Der nullbasierte Index des gesuchten <see cref="T:System.Net.Cookie" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to &lt;see cref=&quot;P:System.Net.CookieCollection.Count&quot; /&gt;.">
        <paramref name="index" /> ist kleiner als 0, oder <paramref name="index" /> ist größer oder gleich <see cref="P:System.Net.CookieCollection.Count" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific index from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Ein <see cref="T:System.Net.Cookie" /> mit einem bestimmten Index aus einer <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific name from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Ruft das <see cref="T:System.Net.Cookie" /> mit einem bestimmten Namen aus einer <see cref="T:System.Net.CookieCollection" /> ab.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be found.">Der Name des gesuchten <see cref="T:System.Net.Cookie" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> ist <see langword="null" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific name from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Das <see cref="T:System.Net.Cookie" /> mit einem bestimmten Namen aus einer <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.SyncRoot">
      <summary vsli:raw="Gets an object to synchronize access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Ruft ein Objekt ab, das zum Synchronisieren des Zugriffs auf <see cref="T:System.Net.CookieCollection" /> verwendet wird.</summary>
      <returns vsli:raw="An object to synchronize access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Ein Objekt zum Synchronisieren des Zugriffs auf <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="T:System.Net.CookieContainer">
      <summary vsli:raw="Provides a container for a collection of &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; objects.">Stellt einen Container für eine Auflistung von <see cref="T:System.Net.CookieCollection" />-Objekten bereit.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <summary vsli:raw="Represents the default maximum size, in bytes, of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This field is constant.">Stellt den Standardwert für die maximale Größe der <see cref="T:System.Net.Cookie" />-Instanzen, die der <see cref="T:System.Net.CookieContainer" /> enthalten kann, in Bytes dar. Dieses Feld ist konstant.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLimit">
      <summary vsli:raw="Represents the default maximum number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This field is constant.">Stellt den Standardwert für die maximale Anzahl von <see cref="T:System.Net.Cookie" />-Instanzen dar, die der <see cref="T:System.Net.CookieContainer" /> enthalten kann. Dieses Feld ist konstant.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <summary vsli:raw="Represents the default maximum number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can reference per domain. This field is constant.">Stellt den Standardwert für die maximale Anzahl von <see cref="T:System.Net.Cookie" />-Instanzen dar, auf die der <see cref="T:System.Net.CookieContainer" /> pro Domäne verweisen kann. Dieses Feld ist konstant.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.CookieContainer" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class with a specified value for the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the container can hold.">Initialisiert eine neue Instanz der <see cref="T:System.Net.CookieContainer" />-Klasse mit einem angegebenen Wert für die Anzahl von <see cref="T:System.Net.Cookie" />-Instanzen, die der Container enthalten kann.</summary>
      <param name="capacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">Die Anzahl von <see cref="T:System.Net.Cookie" />-Instanzen, die der <see cref="T:System.Net.CookieContainer" /> enthalten kann.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.">
        <paramref name="capacity" /> ist kleiner oder gleich 0 (null).</exception>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class with specific properties.">Initialisiert eine neue Instanz der <see cref="T:System.Net.CookieContainer" />-Klasse mit bestimmten Eigenschaften.</summary>
      <param name="capacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">Die Anzahl von <see cref="T:System.Net.Cookie" />-Instanzen, die der <see cref="T:System.Net.CookieContainer" /> enthalten kann.</param>
      <param name="perDomainCapacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances per domain.">Die Anzahl von <see cref="T:System.Net.Cookie" />-Instanzen pro Domäne.</param>
      <param name="maxCookieSize" vsli:raw="The maximum size in bytes for any single &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; in a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">Die maximale Größe eines einzelnen <see cref="T:System.Net.Cookie" /> in einem <see cref="T:System.Net.CookieContainer" /> in Bytes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;perDomainCapacity&quot; /&gt; is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.  &#xA;  &#xA; and  &#xA;  &#xA; &lt;paramref name=&quot;(perDomainCapacity&quot; /&gt; is less than or equal to zero or &lt;paramref name=&quot;perDomainCapacity&quot; /&gt; is greater than &lt;paramref name=&quot;capacity)&quot; /&gt;.">
        <paramref name="perDomainCapacity" /> ist ungleich <see cref="F:System.Int32.MaxValue" />.  
  
und 
 <paramref name="(perDomainCapacity" /> ist kleiner oder gleich 0 (null), oder <paramref name="perDomainCapacity" /> ist größer als <paramref name="capacity)" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;maxCookieSize&quot; /&gt; is less than or equal to zero.">
        <paramref name="maxCookieSize" /> ist kleiner oder gleich 0 (null).</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;. This method uses the domain from the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to determine which domain collection to associate the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with.">Fügt einer <see cref="T:System.Net.CookieContainer" /> eine <see cref="T:System.Net.Cookie" /> hinzu. Diese Methode bestimmt mithilfe der Domäne aus dem <see cref="T:System.Net.Cookie" />, welcher Domänenauflistung das <see cref="T:System.Net.Cookie" /> zugeordnet werden soll.</summary>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">Die <see cref="T:System.Net.Cookie" /> hinzuzufügende <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookie" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The domain for &lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or the empty string (&quot;&quot;).">Der <paramref name="cookie" />-Parameter ist <see langword="null" /> oder eine leere Zeichenfolge ("").</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is larger than &lt;paramref name=&quot;maxCookieSize&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; the domain for &lt;paramref name=&quot;cookie&quot; /&gt; is not a valid URI.">
        <paramref name="cookie" /> ist größer als <paramref name="maxCookieSize" />.  
  
- oder - 
die Domäne für <paramref name="cookie" /> ist kein gültiger URI.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">Fügt dem <see cref="T:System.Net.CookieCollection" /> den Inhalt einer <see cref="T:System.Net.CookieContainer" /> hinzu.</summary>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">Die <see cref="T:System.Net.CookieCollection" /> hinzuzufügende <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a particular URI.">Fügt dem <see cref="T:System.Net.Cookie" /> für einen bestimmten URI ein <see cref="T:System.Net.CookieContainer" /> hinzu.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">Der URI des <see cref="T:System.Net.Cookie" />, das dem <see cref="T:System.Net.CookieContainer" /> hinzugefügt werden soll.</param>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">Die <see cref="T:System.Net.Cookie" /> hinzuzufügende <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> ist <see langword="null" /> oder <paramref name="cookie" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is larger than &lt;paramref name=&quot;maxCookieSize&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The domain for &lt;paramref name=&quot;cookie&quot; /&gt; is not a valid URI.">
        <paramref name="cookie" /> ist größer als <paramref name="maxCookieSize" />.  
  
- oder - 
Die Domäne für <paramref name="cookie" /> ist kein gültiger URI.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a particular URI.">Fügt dem <see cref="T:System.Net.CookieCollection" /> für einen bestimmten URI den Inhalt einer <see cref="T:System.Net.CookieContainer" /> hinzu.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">Der URI des <see cref="T:System.Net.CookieCollection" />, das dem <see cref="T:System.Net.CookieContainer" /> hinzugefügt werden soll.</param>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">Die <see cref="T:System.Net.CookieCollection" /> hinzuzufügende <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The domain for one of the cookies in &lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Die Domäne für eines der Cookies <paramref name="cookies" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="One of the cookies in &lt;paramref name=&quot;cookies&quot; /&gt; contains an invalid domain.">Eines der Cookies in <paramref name="cookies" /> enthält eine ungültige Domäne.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <summary vsli:raw="Gets the HTTP cookie header that contains the HTTP cookies that represent the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">Ruft den HTTP-Cookieheader mit den HTTP-Cookies ab, die die einem bestimmten URI zugeordneten <see cref="T:System.Net.Cookie" />-Instanzen darstellen.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances desired.">Der URI der gewünschten <see cref="T:System.Net.Cookie" />-Instanzen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> ist <see langword="null" />.</exception>
      <returns vsli:raw="An HTTP cookie header, with strings representing &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances delimited by semicolons.">Ein HTTP-Cookieheader mit durch Semikolon getrennten Zeichenfolgen, die die <see cref="T:System.Net.Cookie" />-Instanzen darstellen.</returns>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">Ruft eine <see cref="T:System.Net.CookieCollection" /> mit den <see cref="T:System.Net.Cookie" />-Instanzen ab, die einem bestimmten URI zugeordnet sind.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances desired.">Der URI der gewünschten <see cref="T:System.Net.Cookie" />-Instanzen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> ist <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">Eine <see cref="T:System.Net.CookieCollection" /> mit den <see cref="T:System.Net.Cookie" />-Instanzen, die einem bestimmten URI zugeordnet sind.</returns>
    </member>
    <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <summary vsli:raw="Adds &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances for one or more cookies from an HTTP cookie header to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a specific URI.">Fügt dem <see cref="T:System.Net.Cookie" /> für einen angegebenen URI die <see cref="T:System.Net.CookieContainer" />-Instanzen für Cookies aus einem HTTP-Cookieheader hinzu.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Der URI des <see cref="T:System.Net.CookieCollection" />.</param>
      <param name="cookieHeader" vsli:raw="The contents of an HTTP set-cookie header as returned by a HTTP server, with &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances delimited by commas.">Der Inhalt eines HTTP-Set-Cookieheaders, der von einem HTTP-Server zurückgegeben wurde, wobei die <see cref="T:System.Net.Cookie" />-Instanzen durch Komma getrennt sind.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;cookieHeader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> oder <paramref name="cookieHeader" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="One of the cookies is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while adding one of the cookies to the container.">Eines der Cookies ist ungültig.  
  
 - oder -  
  
 Beim Hinzufügen eines der Cookies zum Container ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="P:System.Net.CookieContainer.Capacity">
      <summary vsli:raw="Gets or sets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">Ruft die Anzahl von <see cref="T:System.Net.Cookie" />-Instanzen ab, die <see cref="T:System.Net.CookieContainer" /> enthalten kann, oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;Capacity&quot; /&gt; is less than or equal to zero or (value is less than &lt;see cref=&quot;P:System.Net.CookieContainer.PerDomainCapacity&quot; /&gt; and &lt;see cref=&quot;P:System.Net.CookieContainer.PerDomainCapacity&quot; /&gt; is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;).">
        <paramref name="Capacity" /> ist kleiner oder gleich 0. Oder: Der Wert ist kleiner als <see cref="P:System.Net.CookieContainer.PerDomainCapacity" />, und <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> ist ungleich <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This is a hard limit and cannot be exceeded by adding a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Die Anzahl von <see cref="T:System.Net.Cookie" />-Instanzen, die ein <see cref="T:System.Net.CookieContainer" /> enthalten kann. Dies ist eine strikte Beschränkung, die nicht durch Hinzufügen eines <see cref="T:System.Net.Cookie" /> überschritten werden kann.</returns>
    </member>
    <member name="P:System.Net.CookieContainer.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; currently holds.">Ruft die Anzahl der <see cref="T:System.Net.Cookie" />-Instanzen ab, die ein <see cref="T:System.Net.CookieContainer" /> derzeit enthält.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; currently holds. This is the total of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances in all domains.">Die Anzahl der <see cref="T:System.Net.Cookie" />-Instanzen, die ein <see cref="T:System.Net.CookieContainer" /> derzeit enthält. Das ist die Gesamtsumme von <see cref="T:System.Net.Cookie" />-Instanzen in allen Domänen.</returns>
    </member>
    <member name="P:System.Net.CookieContainer.MaxCookieSize">
      <summary vsli:raw="Represents the maximum allowed length of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Stellt die maximal zulässige Länge eines <see cref="T:System.Net.Cookie" /> dar.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;MaxCookieSize&quot; /&gt; is less than or equal to zero.">
        <paramref name="MaxCookieSize" /> ist kleiner oder gleich 0 (null).</exception>
      <returns vsli:raw="The maximum allowed length, in bytes, of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Die maximal zulässige Länge eines <see cref="T:System.Net.Cookie" /> in Bytes.</returns>
    </member>
    <member name="P:System.Net.CookieContainer.PerDomainCapacity">
      <summary vsli:raw="Gets or sets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold per domain.">Ruft die Anzahl von <see cref="T:System.Net.Cookie" />-Instanzen ab, die <see cref="T:System.Net.CookieContainer" /> pro Domäne enthalten kann, oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;PerDomainCapacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;(PerDomainCapacity&quot; /&gt; is greater than the maximum allowable number of cookies instances, 300, and is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;).">
        <paramref name="PerDomainCapacity" /> ist kleiner oder gleich 0 (null).  
  
- oder - 
 <paramref name="(PerDomainCapacity" /> ist größer als die maximal zulässige Anzahl von Cookies (300) und ungleich <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are allowed per domain.">Die Anzahl der pro Domäne erlaubten <see cref="T:System.Net.Cookie" />-Instanzen.</returns>
    </member>
    <member name="T:System.Net.CookieException">
      <summary vsli:raw="The exception that is thrown when an error is made adding a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">Die Ausnahme, die ausgelöst wird, wenn beim Hinzufügen eines <see cref="T:System.Net.Cookie" /> zu einem <see cref="T:System.Net.CookieContainer" /> ein Fehler auftritt.</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.CookieException" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt; class with specific values of &lt;paramref name=&quot;serializationInfo&quot; /&gt; and &lt;paramref name=&quot;streamingContext&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Net.CookieException" />-Klasse mit bestimmten Werten für <paramref name="serializationInfo" /> und <paramref name="streamingContext" />.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used.">Der zu verwendende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; to be used.">Der zu verwendende <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Net.CookieException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt;.">Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Instanz mit den zum Serialisieren der <see cref="T:System.Net.CookieException" /> erforderlichen Daten auf.</summary>
      <param name="serializationInfo" vsli:raw="The object that holds the serialized object data. The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">Das Objekt, das die Daten des serialisierten Objekts enthält. Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="streamingContext" vsli:raw="The contextual information about the source or destination. A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that specifies the destination for this serialization.">Die Kontextinformationen zur Quelle bzw. zum Ziel. Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der das Ziel für diese Serialisierung angibt.</param>
    </member>
    <member name="M:System.Net.CookieException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt;.">Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Instanz mit den zum Serialisieren der <see cref="T:System.Net.CookieException" /> erforderlichen Daten auf.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used.">Der zu verwendende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; to be used.">Der zu verwendende <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="T:System.Net.CredentialCache">
      <summary vsli:raw="Provides storage for multiple credentials.">Stellt Speicher für mehrere Anmeldeinformationen bereit.</summary>
    </member>
    <member name="M:System.Net.CredentialCache.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Net.CredentialCache" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol. Credentials added using this method are valid for SMTP only. This method does not work for HTTP or FTP requests.">Fügt dem Cache für Anmeldeinformationen eine <see cref="T:System.Net.NetworkCredential" />-Instanz für die Verwendung mit SMTP hinzu und ordnet ihr einen Hostcomputer, einen Anschluss und ein Authentifizierungsprotokoll zu. Mit dieser Methode hinzugefügte Anmeldeinformationen sind nur für SMTP gültig. Diese Methode funktioniert bei HTTP- oder FTP-Anforderungen nicht.</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">Ein <see cref="T:System.String" />, der den Hostcomputer bezeichnet.</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">Ein <see cref="T:System.Int32" />, der den Anschluss angibt, mit dem auf dem <paramref name="host" /> eine Verbindung hergestellt werden soll.</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt; using &lt;paramref name=&quot;cred&quot; /&gt;.">Ein <see cref="T:System.String" />, der das Authentifizierungsschema bezeichnet, das beim Herstellen einer Verbindung mit dem <paramref name="host" /> mithilfe von <paramref name="cred" /> verwendet wird.</param>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; to add to the credential cache.">Die <see cref="T:System.Net.NetworkCredential" />, die dem Cache für Anmeldeinformationen hinzugefügt werden.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="authType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;authType&quot; /&gt; not an accepted value.">
        <paramref name="authType" /> ist kein zulässiger Wert.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than zero.">
        <paramref name="port" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol.">Fügt dem Cache für Anmeldeinformationen eine <see cref="T:System.Net.NetworkCredential" />-Instanz für die Verwendung mit anderen Protokollen als SMTP hinzu und ordnet ihr ein URI (Uniform Resource Identifier)-Präfix und ein Authentifizierungsprotokoll zu.</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential grants access to.">Ein <see cref="T:System.Uri" />, der das URI-Präfix der Ressource angibt, für die die Anmeldeinformationen Zugriff gewähren.</param>
      <param name="authType" vsli:raw="The authentication scheme used by the resource named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">Das von der in <paramref name="uriPrefix" /> angegebenen Ressource verwendete Authentifizierungsschema.</param>
      <param name="cred" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; to add to the credential cache.">Die <see cref="T:System.Net.NetworkCredential" />, die dem Cache für Anmeldeinformationen hinzugefügt werden.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uriPrefix&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriPrefix" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="authType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The same credentials are added more than once.">Die gleichen Anmeldeinformationen werden mehr als einmal hinzugefügt.</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance associated with the specified host, port, and authentication protocol.">Gibt die <see cref="T:System.Net.NetworkCredential" />-Instanz zurück, die dem angegebenen Host, dem angegebenen Anschluss und dem angegebenen Authentifizierungsprotokoll zugeordnet ist.</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">Ein <see cref="T:System.String" />, der den Hostcomputer bezeichnet.</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">Ein <see cref="T:System.Int32" />, der den Anschluss angibt, mit dem auf dem <paramref name="host" /> eine Verbindung hergestellt werden soll.</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt;.">Ein <see cref="T:System.String" />, der das Authentifizierungsschema bezeichnet, das beim Herstellen einer Verbindung mit dem <paramref name="host" /> verwendet wird.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="authType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;authType&quot; /&gt; not an accepted value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;host&quot; /&gt; is equal to the empty string (&quot;&quot;).">
        <paramref name="authType" /> ist kein zulässiger Wert.  
  
- oder - 
 <paramref name="host" /> ist gleich der leeren Zeichenfolge ("").</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than zero.">
        <paramref name="port" /> ist kleiner als Null.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; or, if there is no matching credential in the cache, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkCredential" /> oder <see langword="null" />, wenn keine übereinstimmenden Anmeldeinformationen im Cache vorhanden sind.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance associated with the specified Uniform Resource Identifier (URI) and authentication type.">Gibt die dem angegebenen URI (Uniform Resource Identifier) und Authentifizierungstyp zugeordnete <see cref="T:System.Net.NetworkCredential" />-Instanz zurück.</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential grants access to.">Ein <see cref="T:System.Uri" />, der das URI-Präfix der Ressource angibt, für die die Anmeldeinformationen Zugriff gewähren.</param>
      <param name="authType" vsli:raw="The authentication scheme used by the resource named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">Das von der in <paramref name="uriPrefix" /> angegebenen Ressource verwendete Authentifizierungsschema.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uriPrefix&quot; /&gt; or &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriPrefix" /> oder <paramref name="authType" /> ist <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; or, if there is no matching credential in the cache, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkCredential" /> oder <see langword="null" />, wenn keine übereinstimmenden Anmeldeinformationen im Cache vorhanden sind.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt; instance.">Gibt einen Enumerator zurück, der die <see cref="T:System.Net.CredentialCache" />-Instanz durchlaufen kann.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt;.">Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Net.CredentialCache" />.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)">
      <summary vsli:raw="Deletes a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance from the cache if it is associated with the specified host, port, and authentication protocol.">Löscht eine <see cref="T:System.Net.NetworkCredential" />-Instanz aus dem Cache, wenn sie dem angegebenen Host, Anschluss und Authentifizierungsprotokoll zugeordnet ist.</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">Ein <see cref="T:System.String" />, der den Hostcomputer bezeichnet.</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">Ein <see cref="T:System.Int32" />, der den Anschluss angibt, mit dem auf dem <paramref name="host" /> eine Verbindung hergestellt werden soll.</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt;.">Ein <see cref="T:System.String" />, der das Authentifizierungsschema bezeichnet, das beim Herstellen einer Verbindung mit dem <paramref name="host" /> verwendet wird.</param>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.Uri,System.String)">
      <summary vsli:raw="Deletes a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.">Löscht eine <see cref="T:System.Net.NetworkCredential" />-Instanz aus dem Cache, wenn sie dem angegebenen URI (Uniform Resource Identifier)-Präfix und Authentifizierungsprotokoll zugeordnet ist.</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential is used for.">Ein <see cref="T:System.Uri" />, der das URI-Präfix der Ressource angibt, für die die Anmeldeinformationen verwendet werden.</param>
      <param name="authType" vsli:raw="The authentication scheme used by the host named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">Das von dem in <paramref name="uriPrefix" /> angegebenen Host verwendete Authentifizierungsschema.</param>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultCredentials">
      <summary vsli:raw="Gets the system credentials of the application.">Ruft die Systemanmeldeinformationen der Anwendung ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; that represents the system credentials of the application.">Eine <see cref="T:System.Net.ICredentials" />-Instanz, die die Systemanmeldeinformationen der Anwendung darstellt.</returns>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultNetworkCredentials">
      <summary vsli:raw="Gets the network credentials of the current security context.">Ruft die Netzwerkanmeldeinformationen des aktuellen Sicherheitskontexts ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that represents the network credentials of the current user or application.">Die <see cref="T:System.Net.NetworkCredential" />, die die Netzwerkanmeldeinformationen des aktuellen Benutzers oder der aktuellen Anwendung darstellen.</returns>
    </member>
    <member name="T:System.Net.DecompressionMethods">
      <summary vsli:raw="Represents the file compression and decompression encoding format to be used to compress the data received in response to an &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt;.">Stellt das Codierungsformat für die Dateikomprimierung und -dekomprimierung dar, das zum Komprimieren der als Antwort auf eine <see cref="T:System.Net.HttpWebRequest" /> empfangenen Daten verwendet wird.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.All">
      <summary vsli:raw="Use all compression-decompression algorithms.">Verwendet alle Algorithmen für die Komprimierung und Dekomprimierung.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Brotli">
      <summary vsli:raw="Use the Brotli compression-decompression algorithm.">Verwendet den Brotli-Algorithmus für die Komprimierung und Dekomprimierung.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Deflate">
      <summary vsli:raw="Use the deflate compression-decompression algorithm.">Verwendet den Deflate-Algorithmus für die Komprimierung und Dekomprimierung.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.GZip">
      <summary vsli:raw="Use the gZip compression-decompression algorithm.">Verwendet den gZip-Algorithmus für die Komprimierung und Dekomprimierung.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.None">
      <summary vsli:raw="Do not use compression.">Verwendet keine Komprimierung.</summary>
    </member>
    <member name="T:System.Net.DnsEndPoint">
      <summary vsli:raw="Represents a network endpoint as a host name or a string representation of an IP address and a port number.">Stellt einen Netzwerkendpunkt als einen Hostnamen oder eine Zeichenfolgendarstellung einer IP-Adresse und einer Portnummer dar.</summary>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; class with the host name or string representation of an IP address and a port number.">Initialisiert eine neue Instanz der <see cref="T:System.Net.DnsEndPoint" />-Klasse mit dem Hostnamen oder der Zeichenfolgendarstellung einer IP-Adresse und einer Anschlussnummer.</summary>
      <param name="host" vsli:raw="The host name or a string representation of the IP address.">Der Hostname oder eine Zeichenfolgendarstellung der IP-Adresse.</param>
      <param name="port" vsli:raw="The port number associated with the address, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">Die der Adresse zugeordnete Portnummer oder 0, um einen beliebigen verfügbaren Port anzugeben. <paramref name="port" /> liegt in der Hostreihenfolge vor.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter contains an empty string.">Der <paramref name="host" />-Parameter ist eine leere Zeichenfolge.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is a &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="host" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> ist kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" />.  
  
- oder - 
 <paramref name="port" /> ist größer als <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; class with the host name or string representation of an IP address, a port number, and an address family.">Initialisiert eine neue Instanz der <see cref="T:System.Net.DnsEndPoint" />-Klasse mit dem Hostnamen oder der Zeichenfolgendarstellung einer IP-Adresse, einer Anschlussnummer und der Adressfamilie.</summary>
      <param name="host" vsli:raw="The host name or a string representation of the IP address.">Der Hostname oder eine Zeichenfolgendarstellung der IP-Adresse.</param>
      <param name="port" vsli:raw="The port number associated with the address, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">Die der Adresse zugeordnete Portnummer oder 0, um einen beliebigen verfügbaren Port anzugeben. <paramref name="port" /> liegt in der Hostreihenfolge vor.</param>
      <param name="addressFamily" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter contains an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;addressFamily&quot; /&gt; is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.Unknown&quot; /&gt;.">Der <paramref name="host" />-Parameter ist eine leere Zeichenfolge.  
  
- oder - 
 <paramref name="addressFamily" /> ist <see cref="F:System.Net.Sockets.AddressFamily.Unknown" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is a &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="host" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> ist kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" />.  
  
- oder - 
 <paramref name="port" /> ist größer als <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.Equals(System.Object)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; objects.">Vergleicht zwei <see cref="T:System.Net.DnsEndPoint" />-Objekte.</summary>
      <param name="comparand" vsli:raw="A &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; instance to compare to the current instance.">Eine <see cref="T:System.Net.DnsEndPoint" />-Instanz, die mit der aktuellen Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden <see cref="T:System.Net.DnsEndPoint" />-Instanzen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.GetHashCode">
      <summary vsli:raw="Returns a hash value for a &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Gibt einen Hashwert für einen <see cref="T:System.Net.DnsEndPoint" /> zurück.</summary>
      <returns vsli:raw="An integer hash value for the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Ein ganzzahliger Hashwert für den <see cref="T:System.Net.DnsEndPoint" />.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.ToString">
      <summary vsli:raw="Returns the host name or string representation of the IP address and port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Gibt den Hostnamen oder die Zeichenfolgendarstellung der IP-Adresse und der Anschlussnummer des <see cref="T:System.Net.DnsEndPoint" /> zurück.</summary>
      <returns vsli:raw="A string containing the address family, host name or IP address string, and the port number of the specified &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Eine Zeichenfolge mit der Adressfamilie, dem Hostnamen oder der IP-Adresszeichenfolge und der Anschlussnummer des angegebenen <see cref="T:System.Net.DnsEndPoint" />.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.AddressFamily">
      <summary vsli:raw="Gets the Internet Protocol (IP) address family.">Ruft die IP-Adressfamilie ab.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Host">
      <summary vsli:raw="Gets the host name or string representation of the Internet Protocol (IP) address of the host.">Ruft den Hostnamen oder die Zeichenfolgendarstellung der IP-Adresse des Hosts ab.</summary>
      <returns vsli:raw="A host name or string representation of an IP address.">Ein Hostname oder eine Zeichenfolgendarstellung der IP-Adresse.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Port">
      <summary vsli:raw="Gets the port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Ruft die Anschlussnummer des <see cref="T:System.Net.DnsEndPoint" /> ab.</summary>
      <returns vsli:raw="An integer value in the range 0 to 0xffff indicating the port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Ein Ganzzahlwert im Bereich von 0 bis 0xffff, der die Anschlussnummer des <see cref="T:System.Net.DnsEndPoint" /> angibt.</returns>
    </member>
    <member name="T:System.Net.EndPoint">
      <summary vsli:raw="Identifies a network address. This is an &lt;see langword=&quot;abstract&quot; /&gt; class.">Gibt eine Netzwerkadresse an. Dies ist eine <see langword="abstract" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.EndPoint.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.EndPoint" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.EndPoint.Create(System.Net.SocketAddress)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance from a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">Erstellt eine <see cref="T:System.Net.EndPoint" />-Instanz aus einer <see cref="T:System.Net.SocketAddress" />-Instanz.</summary>
      <param name="socketAddress" vsli:raw="The socket address that serves as the endpoint for a connection.">Die Socketadresse, die als Endpunkt für eine Verbindung verwendet wird.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Wenn die Methode nicht in einer abgeleiteten Klasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen.</exception>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance that is initialized from the specified &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">Eine neue <see cref="T:System.Net.EndPoint" />-Instanz, die aus der angegebenen <see cref="T:System.Net.SocketAddress" />-Instanz initialisiert wird.</returns>
    </member>
    <member name="M:System.Net.EndPoint.Serialize">
      <summary vsli:raw="Serializes endpoint information into a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">Serialisiert Endpunktinformationen in eine <see cref="T:System.Net.SocketAddress" />-Instanz.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Wenn die Methode nicht in einer abgeleiteten Klasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance that contains the endpoint information.">Eine <see cref="T:System.Net.SocketAddress" />-Instanz, die die Endpunktinformationen enthält.</returns>
    </member>
    <member name="P:System.Net.EndPoint.AddressFamily">
      <summary vsli:raw="Gets the address family to which the endpoint belongs.">Ruft die Adressfamilie ab, der der Endpunkt angehört.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property when the property is not overridden in a descendant class.">Wenn die Methode nicht in einer abhängigen Klasse überschrieben wird, werden alle Versuche unternommen, die Eigenschaft abzurufen oder festzulegen.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte.</returns>
    </member>
    <member name="T:System.Net.HttpStatusCode">
      <summary vsli:raw="Contains the values of status codes defined for HTTP defined in RFC 2616 for HTTP 1.1.">Enthält die Werte der für HTTP definierten Statuscodes.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Accepted">
      <summary vsli:raw="Equivalent to HTTP status 202. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Accepted&quot; /&gt; indicates that the request has been accepted for further processing.">Äquivalent zu HTTP-Status 202. <see cref="F:System.Net.HttpStatusCode.Accepted" /> gibt an, dass die Anforderung akzeptiert wurde und weiter verarbeitet werden kann.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.AlreadyReported">
      <summary vsli:raw="Equivalent to HTTP status 208. &lt;see cref=&quot;F:System.Net.HttpStatusCode.AlreadyReported&quot; /&gt; indicates that the members of a WebDAV binding have already been enumerated in a preceding part of the multistatus response, and are not being included again.">Äquivalent zu HTTP-Status 208. <see cref="F:System.Net.HttpStatusCode.AlreadyReported" /> gibt an, dass die Member einer WebDAV-Bindung bereits in einem vorherigen Teil der Multistatusantwort aufgezählt wurden und nicht erneut eingeschlossen werden.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Ambiguous">
      <summary vsli:raw="Equivalent to HTTP status 300. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Ambiguous&quot; /&gt; indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response. &lt;c&gt;Ambiguous&lt;/c&gt; is a synonym for &lt;c&gt;MultipleChoices&lt;/c&gt;.">Äquivalent zu HTTP-Status 300. <see cref="F:System.Net.HttpStatusCode.Ambiguous" /> gibt an, dass für die angeforderten Informationen mehrere Darstellungen vorhanden sind. Üblicherweise wird dieser Status als Umleitung behandelt und der Inhalt des Location-Headers befolgt, der dieser Antwort zugeordnet ist. <c>Ambiguous</c> (Mehrdeutig) ist ein Synonym für <c>MultipleChoices</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadGateway">
      <summary vsli:raw="Equivalent to HTTP status 502. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadGateway&quot; /&gt; indicates that an intermediate proxy server received a bad response from another proxy or the origin server.">Äquivalent zu HTTP-Status 502. <see cref="F:System.Net.HttpStatusCode.BadGateway" /> gibt an, dass ein zwischengeschalteter Proxyserver eine fehlerhafte Antwort von einem anderen Proxyserver oder dem Ausgangsserver erhalten hat.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadRequest">
      <summary vsli:raw="Equivalent to HTTP status 400. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadRequest&quot; /&gt; indicates that the request could not be understood by the server. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadRequest&quot; /&gt; is sent when no other error is applicable, or if the exact error is unknown or does not have its own error code.">Äquivalent zu HTTP-Status 400. <see cref="F:System.Net.HttpStatusCode.BadRequest" /> gibt an, dass die Anforderung vom Server nicht interpretiert werden konnte. <see cref="F:System.Net.HttpStatusCode.BadRequest" /> wird gesendet, wenn kein anderer Fehler zutrifft oder der genaue Fehler nicht bekannt bzw. für diesen kein Fehlercode definiert ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Conflict">
      <summary vsli:raw="Equivalent to HTTP status 409. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Conflict&quot; /&gt; indicates that the request could not be carried out because of a conflict on the server.">Äquivalent zu HTTP-Status 409. <see cref="F:System.Net.HttpStatusCode.Conflict" /> gibt an, dass die Anforderung wegen eines Konflikts auf dem Server nicht ausgeführt werden konnte.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Continue">
      <summary vsli:raw="Equivalent to HTTP status 100. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Continue&quot; /&gt; indicates that the client can continue with its request.">Äquivalent zu HTTP-Status 100. <see cref="F:System.Net.HttpStatusCode.Continue" /> gibt an, dass der Client mit der Anforderung fortfahren kann.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Created">
      <summary vsli:raw="Equivalent to HTTP status 201. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Created&quot; /&gt; indicates that the request resulted in a new resource created before the response was sent.">Äquivalent zu HTTP-Status 201. <see cref="F:System.Net.HttpStatusCode.Created" /> gibt an, dass durch die Anforderung eine neue Ressource vor dem Senden der Antwort erstellt wurde.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.EarlyHints">
      <summary vsli:raw="Equivalent to HTTP status 103. &lt;see cref=&quot;F:System.Net.HttpStatusCode.EarlyHints&quot; /&gt; indicates to the client that the server is likely to send a final response with the header fields included in the informational response.">Äquivalent zu HTTP-Status 103. <see cref="F:System.Net.HttpStatusCode.EarlyHints" /> informiert den Client, dass der Server wahrscheinlich eine abschließende Antwort mit in der Informationsantwort enthaltenen Headerfeldern sendet.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ExpectationFailed">
      <summary vsli:raw="Equivalent to HTTP status 417. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ExpectationFailed&quot; /&gt; indicates that an expectation given in an Expect header could not be met by the server.">Äquivalent zu HTTP-Status 417. <see cref="F:System.Net.HttpStatusCode.ExpectationFailed" /> gibt an, dass eine im Expect-Header angegebene Erwartung nicht vom Server erfüllt werden konnte.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.FailedDependency">
      <summary vsli:raw="Equivalent to HTTP status 424. &lt;see cref=&quot;F:System.Net.HttpStatusCode.FailedDependency&quot; /&gt; indicates that the method couldn't be performed on the resource because the requested action depended on another action and that action failed.">Äquivalent zu HTTP-Status 424. <see cref="F:System.Net.HttpStatusCode.FailedDependency" /> gibt an, dass die Methode für die Ressource nicht ausgeführt werden konnte, da die angeforderte Aktion von einer anderen Aktion abhängt und diese Aktion fehlgeschlagen ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Forbidden">
      <summary vsli:raw="Equivalent to HTTP status 403. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Forbidden&quot; /&gt; indicates that the server refuses to fulfill the request.">Äquivalent zu HTTP-Status 403. <see cref="F:System.Net.HttpStatusCode.Forbidden" /> gibt an, dass der Server das Erfüllen der Anforderung verweigert.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Found">
      <summary vsli:raw="Equivalent to HTTP status 302. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Found&quot; /&gt; indicates that the requested information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Found&lt;/c&gt; is a synonym for &lt;c&gt;Redirect&lt;/c&gt;.">Äquivalent zu HTTP-Status 302. <see cref="F:System.Net.HttpStatusCode.Found" /> gibt an, dass sich die angeforderten Informationen unter dem im Location-Header angegebenen URI befinden. Als Standardaktion wird beim Erhalt dieses Status der Location-Header befolgt, der der Antwort zugeordnet ist. Wenn die ursprüngliche Anforderungsmethode POST war, wird für die umgeleitete Anforderung die GET-Methode verwendet. <c>Found</c> (Gefunden) ist ein Synonym für <c>Redirect</c> (Umleiten).</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.GatewayTimeout">
      <summary vsli:raw="Equivalent to HTTP status 504. &lt;see cref=&quot;F:System.Net.HttpStatusCode.GatewayTimeout&quot; /&gt; indicates that an intermediate proxy server timed out while waiting for a response from another proxy or the origin server.">Äquivalent zu HTTP-Status 504. <see cref="F:System.Net.HttpStatusCode.GatewayTimeout" /> gibt an, dass auf einem zwischengeschalteten Proxyserver beim Warten auf die Antwort von einem anderen Proxyserver oder dem Ausgangsserver ein Timeout aufgetreten ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Gone">
      <summary vsli:raw="Equivalent to HTTP status 410. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Gone&quot; /&gt; indicates that the requested resource is no longer available.">Äquivalent zu HTTP-Status 410. <see cref="F:System.Net.HttpStatusCode.Gone" /> gibt an, dass die angeforderte Ressource nicht mehr verfügbar ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <summary vsli:raw="Equivalent to HTTP status 505. &lt;see cref=&quot;F:System.Net.HttpStatusCode.HttpVersionNotSupported&quot; /&gt; indicates that the requested HTTP version is not supported by the server.">Äquivalent zu HTTP-Status 505. <see cref="F:System.Net.HttpStatusCode.HttpVersionNotSupported" /> gibt an, dass die angeforderte HTTP-Version vom Server nicht unterstützt wird.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.IMUsed">
      <summary vsli:raw="Equivalent to HTTP status 226. &lt;see cref=&quot;F:System.Net.HttpStatusCode.IMUsed&quot; /&gt; indicates that the server has fulfilled a request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.">Äquivalent zu HTTP-Status 226. <see cref="F:System.Net.HttpStatusCode.IMUsed" /> gibt an, dass der Server eine Anforderung für die Ressource erfüllt hat und die Antwort eine Darstellung des Ergebnisses mindestens einer Instanzmanipulation ist, die auf die aktuelle Instanz angewendet wird.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InsufficientStorage">
      <summary vsli:raw="Equivalent to HTTP status 507. &lt;see cref=&quot;F:System.Net.HttpStatusCode.InsufficientStorage&quot; /&gt; indicates that the server is unable to store the representation needed to complete the request.">Äquivalent zu HTTP-Status 507. <see cref="F:System.Net.HttpStatusCode.InsufficientStorage" /> gibt an, dass der Server die zum Durchführen der Anforderung erforderliche Darstellung nicht speichern kann.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InternalServerError">
      <summary vsli:raw="Equivalent to HTTP status 500. &lt;see cref=&quot;F:System.Net.HttpStatusCode.InternalServerError&quot; /&gt; indicates that a generic error has occurred on the server.">Äquivalent zu HTTP-Status 500. <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> gibt an, dass auf dem Server ein allgemeiner Fehler aufgetreten ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LengthRequired">
      <summary vsli:raw="Equivalent to HTTP status 411. &lt;see cref=&quot;F:System.Net.HttpStatusCode.LengthRequired&quot; /&gt; indicates that the required Content-length header is missing.">Äquivalent zu HTTP-Status 411. <see cref="F:System.Net.HttpStatusCode.LengthRequired" /> gibt an, dass der angeforderte Content-Length-Header fehlt.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Locked">
      <summary vsli:raw="Equivalent to HTTP status 423. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Locked&quot; /&gt; indicates that the source or destination resource is locked.">Äquivalent zu HTTP-Status 423. <see cref="F:System.Net.HttpStatusCode.Locked" /> gibt an, dass die Quell- oder Zielressource gesperrt ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LoopDetected">
      <summary vsli:raw="Equivalent to HTTP status 508. &lt;see cref=&quot;F:System.Net.HttpStatusCode.LoopDetected&quot; /&gt; indicates that the server terminated an operation because it encountered an infinite loop while processing a WebDAV request with &quot;Depth: infinity&quot;. This status code is meant for backward compatibility with clients not aware of the 208 status code &lt;see cref=&quot;F:System.Net.HttpStatusCode.AlreadyReported&quot; /&gt; appearing in multistatus response bodies.">Äquivalent zu HTTP-Status 508. <see cref="F:System.Net.HttpStatusCode.LoopDetected" /> gibt an, dass der Server einen Vorgang beendet hat, da bei der Verarbeitung einer WebDAV-Anforderung mit „Depth: infinity“ eine Endlosschleife aufgetreten ist. Dieser Statuscode ist aus Gründen der Abwärtskompatibilität für Clients vorhanden, die den 208-Statuscode <see cref="F:System.Net.HttpStatusCode.AlreadyReported" /> nicht kennen, der in Multistatusantworttext vorhanden ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <summary vsli:raw="Equivalent to HTTP status 405. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MethodNotAllowed&quot; /&gt; indicates that the request method (POST or GET) is not allowed on the requested resource.">Äquivalent zu HTTP-Status 405. <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed" /> gibt an, dass die Anforderungsmethode (POST oder GET) für die angeforderte Ressource nicht zulässig ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MisdirectedRequest">
      <summary vsli:raw="Equivalent to HTTP status 421. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MisdirectedRequest&quot; /&gt; indicates that the request was directed at a server that is not able to produce a response.">Äquivalent zu HTTP-Status 421. <see cref="F:System.Net.HttpStatusCode.MisdirectedRequest" /> gibt an, dass die Anforderung an einen Server gesendet wurde, der keine Antwort generieren kann.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Moved">
      <summary vsli:raw="Equivalent to HTTP status 301. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Moved&quot; /&gt; indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Moved&lt;/c&gt; is a synonym for &lt;c&gt;MovedPermanently&lt;/c&gt;.">Äquivalent zu HTTP-Status 301. <see cref="F:System.Net.HttpStatusCode.Moved" /> gibt an, dass die angeforderten Informationen zu dem URI verschoben wurden, der im Location-Header angegeben ist. Als Standardaktion wird beim Erhalt dieses Status der Location-Header befolgt, der der Antwort zugeordnet ist. Wenn die ursprüngliche Anforderungsmethode POST war, wird für die umgeleitete Anforderung die GET-Methode verwendet. <c>Moved</c> (Verschoben) ist ein Synonym für <c>MovedPermanently</c> (Permanent verschoben).</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MovedPermanently">
      <summary vsli:raw="Equivalent to HTTP status 301. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MovedPermanently&quot; /&gt; indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. &lt;c&gt;MovedPermanently&lt;/c&gt; is a synonym for &lt;c&gt;Moved&lt;/c&gt;.">Äquivalent zu HTTP-Status 301. <see cref="F:System.Net.HttpStatusCode.MovedPermanently" /> gibt an, dass die angeforderten Informationen zu dem URI verschoben wurden, der im Location-Header angegeben ist. Als Standardaktion wird beim Erhalt dieses Status der Location-Header befolgt, der der Antwort zugeordnet ist. <c>MovedPermanently</c> (Permanent verschoben) ist ein Synonym für <c>Moved</c> (Verschoben).</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultipleChoices">
      <summary vsli:raw="Equivalent to HTTP status 300. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MultipleChoices&quot; /&gt; indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response. &lt;c&gt;MultipleChoices&lt;/c&gt; is a synonym for &lt;c&gt;Ambiguous&lt;/c&gt;.">Äquivalent zu HTTP-Status 300. <see cref="F:System.Net.HttpStatusCode.MultipleChoices" /> gibt an, dass für die angeforderten Informationen mehrere Darstellungen vorhanden sind. Üblicherweise wird dieser Status als Umleitung behandelt und der Inhalt des Location-Headers befolgt, der dieser Antwort zugeordnet ist. <c>MultipleChoices</c> ist ein Synonym für <c>Ambiguous</c> (Mehrdeutig).</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultiStatus">
      <summary vsli:raw="Equivalent to HTTP status 207. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MultiStatus&quot; /&gt; indicates multiple status codes for a single response during a Web Distributed Authoring and Versioning (WebDAV) operation. The response body contains XML that describes the status codes.">Äquivalent zu HTTP-Status 207. <see cref="F:System.Net.HttpStatusCode.MultiStatus" /> gibt während eines WebDAV-Vorgangs (Web Distributed Authoring and Versioning) mehrere Multistatuscodes für eine einzelne Antwort an. Der Antworttext enthält XML-Code, der die Statuscodes beschreibt.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NetworkAuthenticationRequired">
      <summary vsli:raw="Equivalent to HTTP status 511. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NetworkAuthenticationRequired&quot; /&gt; indicates that the client needs to authenticate to gain network access; it's intended for use by intercepting proxies used to control access to the network.">Äquivalent zu HTTP-Status 511. <see cref="F:System.Net.HttpStatusCode.NetworkAuthenticationRequired" /> gibt an, dass der Client sich authentifizieren muss, um Netzwerkzugriff zu erhalten, und ist für die Verwendung durch abfangende Proxys gedacht, die zum Steuern des Zugriffs auf das Netzwerk vorgesehen sind.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NoContent">
      <summary vsli:raw="Equivalent to HTTP status 204. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NoContent&quot; /&gt; indicates that the request has been successfully processed and that the response is intentionally blank.">Äquivalent zu HTTP-Status 204. <see cref="F:System.Net.HttpStatusCode.NoContent" /> gibt an, dass die Anforderung erfolgreich verarbeitet wurde und eine leere Antwort ergeben hat.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <summary vsli:raw="Equivalent to HTTP status 203. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NonAuthoritativeInformation&quot; /&gt; indicates that the returned meta information is from a cached copy instead of the origin server and therefore may be incorrect.">Äquivalent zu HTTP-Status 203. <see cref="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" /> gibt an, dass die zurückgegebenen Metainformationen statt vom Ausgangsserver aus einer zwischengespeicherten Kopie stammen und deshalb fehlerhaft sein können.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotAcceptable">
      <summary vsli:raw="Equivalent to HTTP status 406. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotAcceptable&quot; /&gt; indicates that the client has indicated with Accept headers that it will not accept any of the available representations of the resource.">Äquivalent zu HTTP-Status 406. <see cref="F:System.Net.HttpStatusCode.NotAcceptable" /> gibt an, dass der Client mit Accept-Headern angegeben hat, dass er keine der verfügbaren Darstellungen der Ressource akzeptiert.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotExtended">
      <summary vsli:raw="Equivalent to HTTP status 510. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotExtended&quot; /&gt; indicates that further extensions to the request are required for the server to fulfill it.">Äquivalent zu HTTP-Status 510. <see cref="F:System.Net.HttpStatusCode.NotExtended" /> gibt an, dass weitere Erweiterungen der Anforderung erforderlich sind, damit der Server die Anforderung erfüllen kann.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotFound">
      <summary vsli:raw="Equivalent to HTTP status 404. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotFound&quot; /&gt; indicates that the requested resource does not exist on the server.">Äquivalent zu HTTP-Status 404. <see cref="F:System.Net.HttpStatusCode.NotFound" /> gibt an, dass die angeforderte Ressource auf dem Server nicht vorhanden ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotImplemented">
      <summary vsli:raw="Equivalent to HTTP status 501. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotImplemented&quot; /&gt; indicates that the server does not support the requested function.">Äquivalent zu HTTP-Status 501. <see cref="F:System.Net.HttpStatusCode.NotImplemented" /> gibt an, dass der Server die angeforderte Funktion nicht unterstützt.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotModified">
      <summary vsli:raw="Equivalent to HTTP status 304. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotModified&quot; /&gt; indicates that the client's cached copy is up to date. The contents of the resource are not transferred.">Äquivalent zu HTTP-Status 304. <see cref="F:System.Net.HttpStatusCode.NotModified" /> gibt an, dass die zwischengespeicherte Kopie des Clients aktuell ist. Der Inhalt der Ressource wird nicht übertragen.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.OK">
      <summary vsli:raw="Equivalent to HTTP status 200. &lt;see cref=&quot;F:System.Net.HttpStatusCode.OK&quot; /&gt; indicates that the request succeeded and that the requested information is in the response. This is the most common status code to receive.">Äquivalent zu HTTP-Status 200. <see cref="F:System.Net.HttpStatusCode.OK" /> gibt an, dass die Anforderung erfolgreich war und die angeforderten Informationen in der Antwort enthalten sind. Dieser Statuscode wird am häufigsten empfangen.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PartialContent">
      <summary vsli:raw="Equivalent to HTTP status 206. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PartialContent&quot; /&gt; indicates that the response is a partial response as requested by a GET request that includes a byte range.">Äquivalent zu HTTP-Status 206. <see cref="F:System.Net.HttpStatusCode.PartialContent" /> gibt an, dass entsprechend der Anforderung über eine GET-Methode, die einen Bytebereich enthält, ein unvollständiger Inhalt in der Antwort zurückgegeben wurde.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PaymentRequired">
      <summary vsli:raw="Equivalent to HTTP status 402. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PaymentRequired&quot; /&gt; is reserved for future use.">Äquivalent zu HTTP-Status 402. <see cref="F:System.Net.HttpStatusCode.PaymentRequired" /> ist für zukünftige Zwecke reserviert.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PermanentRedirect">
      <summary vsli:raw="Equivalent to HTTP status 308. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PermanentRedirect&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method.">Äquivalent zu HTTP-Status 308. <see cref="F:System.Net.HttpStatusCode.PermanentRedirect" /> gibt an, dass sich die angeforderten Informationen unter dem im Location-Header angegebenen URI befinden. Als Standardaktion wird beim Erhalt dieses Status der Location-Header befolgt, der der Antwort zugeordnet ist. Wenn die ursprüngliche Anforderungsmethode POST war, wird für die umgeleitete Anforderung ebenfalls die POST-Methode verwendet.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionFailed">
      <summary vsli:raw="Equivalent to HTTP status 412. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PreconditionFailed&quot; /&gt; indicates that a condition set for this request failed, and the request cannot be carried out. Conditions are set with conditional request headers like If-Match, If-None-Match, or If-Unmodified-Since.">Äquivalent zu HTTP-Status 412. <see cref="F:System.Net.HttpStatusCode.PreconditionFailed" /> gibt an, dass für eine für diese Anforderung festgelegte Bedingung ein Fehler aufgetreten ist und diese nicht ausgeführt werden kann. Bedingungen werden mit bedingten Anforderungsheader wie If-Match, If-None-Match oder If-Unmodified-Since festgelegt.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionRequired">
      <summary vsli:raw="Equivalent to HTTP status 428. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PreconditionRequired&quot; /&gt; indicates that the server requires the request to be conditional.">Äquivalent zu HTTP-Status 428. <see cref="F:System.Net.HttpStatusCode.PreconditionRequired" /> gibt an, dass der Server erfordert, dass die Anforderung bedingt ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Processing">
      <summary vsli:raw="Equivalent to HTTP status 102. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Processing&quot; /&gt; indicates that the server has accepted the complete request but hasn't completed it yet.">Äquivalent mit HTTP-Status 102. <see cref="F:System.Net.HttpStatusCode.Processing" /> gibt an, dass der Server die vollständige Anforderung akzeptiert hat, sie aber noch nicht abgeschlossen hat.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <summary vsli:raw="Equivalent to HTTP status 407. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ProxyAuthenticationRequired&quot; /&gt; indicates that the requested proxy requires authentication. The Proxy-authenticate header contains the details of how to perform the authentication.">Äquivalent zu HTTP-Status 407. <see cref="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" /> gibt an, dass der angeforderte Proxy eine Authentifizierung erfordert. Der Proxy-Authenticate-Header enthält die Details zum Durchführen der Authentifizierung.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Redirect">
      <summary vsli:raw="Equivalent to HTTP status 302. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Redirect&quot; /&gt; indicates that the requested information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Redirect&lt;/c&gt; is a synonym for &lt;c&gt;Found&lt;/c&gt;.">Äquivalent zu HTTP-Status 302. <see cref="F:System.Net.HttpStatusCode.Redirect" /> gibt an, dass sich die angeforderten Informationen unter dem im Location-Header angegebenen URI befinden. Als Standardaktion wird beim Erhalt dieses Status der Location-Header befolgt, der der Antwort zugeordnet ist. Wenn die ursprüngliche Anforderungsmethode POST war, wird für die umgeleitete Anforderung die GET-Methode verwendet. <c>Redirect</c> (Umleiten) ist ein Synonym für <c>Found</c> (Gefunden).</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <summary vsli:raw="Equivalent to HTTP status 307. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RedirectKeepVerb&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method. &lt;c&gt;RedirectKeepVerb&lt;/c&gt; is a synonym for &lt;c&gt;TemporaryRedirect&lt;/c&gt;.">Äquivalent zu HTTP-Status 307. <see cref="F:System.Net.HttpStatusCode.RedirectKeepVerb" /> gibt an, dass sich die angeforderten Informationen unter dem im Location-Header angegebenen URI befinden. Als Standardaktion wird beim Erhalt dieses Status der Location-Header befolgt, der der Antwort zugeordnet ist. Wenn die ursprüngliche Anforderungsmethode POST war, wird für die umgeleitete Anforderung ebenfalls die POST-Methode verwendet. <c>RedirectKeepVerb</c> ist ein Synonym für <c>TemporaryRedirect</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectMethod">
      <summary vsli:raw="Equivalent to HTTP status 303. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RedirectMethod&quot; /&gt; automatically redirects the client to the URI specified in the Location header as the result of a POST. The request to the resource specified by the Location header will be made with a GET. &lt;c&gt;RedirectMethod&lt;/c&gt; is a synonym for &lt;c&gt;SeeOther&lt;/c&gt;.">Äquivalent zu HTTP-Status 303. <see cref="F:System.Net.HttpStatusCode.RedirectMethod" /> leitet den Client als Ergebnis eines POST-Vorgangs automatisch zum im Location-Header angegebenen URI um. Die Anforderung an die vom Location-Header angegebene Ressource wird mit GET ausgeführt. <c>RedirectMethod</c> ist ein Synonym für <c>SeeOther</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <summary vsli:raw="Equivalent to HTTP status 416. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable&quot; /&gt; indicates that the range of data requested from the resource cannot be returned, either because the beginning of the range is before the beginning of the resource, or the end of the range is after the end of the resource.">Äquivalent zu HTTP-Status 416. <see cref="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" /> gibt an, dass der von der Ressource angeforderte Datenbereich nicht zurückgegeben werden kann, da der Bereichsanfang vor dem Anfang der Ressource oder das Bereichsende hinter dem Ende der Ressource liegt.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <summary vsli:raw="Equivalent to HTTP status 413. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestEntityTooLarge&quot; /&gt; indicates that the request is too large for the server to process.">Äquivalent zu HTTP-Status 413. <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge" /> gibt an, dass die Anforderung zu umfangreich ist und vom Server nicht verarbeitet werden kann.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge">
      <summary vsli:raw="Equivalent to HTTP status 431. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge&quot; /&gt; indicates that the server is unwilling to process the request because its header fields (either an individual header field or all the header fields collectively) are too large.">Äquivalent zu HTTP-Status 431. <see cref="F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge" /> gibt an, dass der Server die Anforderung nicht verarbeiten kann, da ihre Headerfelder (entweder ein einzelnes Headerfeld oder alle Headerfelder zusammen) zu groß sind.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestTimeout">
      <summary vsli:raw="Equivalent to HTTP status 408. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestTimeout&quot; /&gt; indicates that the client did not send a request within the time the server was expecting the request.">Äquivalent zu HTTP-Status 408. <see cref="F:System.Net.HttpStatusCode.RequestTimeout" /> gibt an, dass der Client keine Anforderung in dem Zeitraum gesendet hat, in dem der Server diese erwartet hat.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <summary vsli:raw="Equivalent to HTTP status 414. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestUriTooLong&quot; /&gt; indicates that the URI is too long.">Äquivalent zu HTTP-Status 414. <see cref="F:System.Net.HttpStatusCode.RequestUriTooLong" /> gibt an, dass der URI zu lang ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ResetContent">
      <summary vsli:raw="Equivalent to HTTP status 205. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ResetContent&quot; /&gt; indicates that the client should reset (not reload) the current resource.">Äquivalent zu HTTP-Status 205. <see cref="F:System.Net.HttpStatusCode.ResetContent" /> gibt an, dass der Client die aktuelle Ressource zurücksetzen (nicht erneut laden) muss.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SeeOther">
      <summary vsli:raw="Equivalent to HTTP status 303. &lt;see cref=&quot;F:System.Net.HttpStatusCode.SeeOther&quot; /&gt; automatically redirects the client to the URI specified in the Location header as the result of a POST. The request to the resource specified by the Location header will be made with a GET. &lt;c&gt;SeeOther&lt;/c&gt; is a synonym for &lt;c&gt;RedirectMethod&lt;/c&gt;.">Äquivalent zu HTTP-Status 303. <see cref="F:System.Net.HttpStatusCode.SeeOther" /> leitet den Client als Ergebnis eines POST-Vorgangs automatisch zum im Location-Header angegebenen URI um. Die Anforderung an die vom Location-Header angegebene Ressource wird mit GET ausgeführt. <c>SeeOther</c> ist ein Synonym für <c>RedirectMethod</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <summary vsli:raw="Equivalent to HTTP status 503. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ServiceUnavailable&quot; /&gt; indicates that the server is temporarily unavailable, usually due to high load or maintenance.">Äquivalent zu HTTP-Status 503. <see cref="F:System.Net.HttpStatusCode.ServiceUnavailable" /> gibt an, dass der Server vorübergehend nicht verfügbar ist, i. d. R. aufgrund einer zu großen Serverlast oder aus Wartungsgründen.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <summary vsli:raw="Equivalent to HTTP status 101. &lt;see cref=&quot;F:System.Net.HttpStatusCode.SwitchingProtocols&quot; /&gt; indicates that the protocol version or protocol is being changed.">Äquivalent zu HTTP-Status 101. <see cref="F:System.Net.HttpStatusCode.SwitchingProtocols" /> gibt an, dass die Protokollversion bzw. das Protokoll geändert wird.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <summary vsli:raw="Equivalent to HTTP status 307. &lt;see cref=&quot;F:System.Net.HttpStatusCode.TemporaryRedirect&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method. &lt;c&gt;TemporaryRedirect&lt;/c&gt; is a synonym for &lt;c&gt;RedirectKeepVerb&lt;/c&gt;.">Äquivalent zu HTTP-Status 307. <see cref="F:System.Net.HttpStatusCode.TemporaryRedirect" /> gibt an, dass sich die angeforderten Informationen unter dem im Location-Header angegebenen URI befinden. Als Standardaktion wird beim Erhalt dieses Status der Location-Header befolgt, der der Antwort zugeordnet ist. Wenn die ursprüngliche Anforderungsmethode POST war, wird für die umgeleitete Anforderung ebenfalls die POST-Methode verwendet. <c>TemporaryRedirect</c> ist ein Synonym für <c>RedirectKeepVerb</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TooManyRequests">
      <summary vsli:raw="Equivalent to HTTP status 429. &lt;see cref=&quot;F:System.Net.HttpStatusCode.TooManyRequests&quot; /&gt; indicates that the user has sent too many requests in a given amount of time.">Äquivalent zu HTTP-Status 429. <see cref="F:System.Net.HttpStatusCode.TooManyRequests" /> gibt an, dass der Benutzer in einem bestimmten Zeitraum zu viele Anforderungen gesendet hat.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unauthorized">
      <summary vsli:raw="Equivalent to HTTP status 401. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Unauthorized&quot; /&gt; indicates that the requested resource requires authentication. The WWW-Authenticate header contains the details of how to perform the authentication.">Äquivalent zu HTTP-Status 401. <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> gibt an, dass die angeforderte Ressource eine Authentifizierung erfordert. Der WWW-Authenticate-Header enthält die Details zum Durchführen der Authentifizierung.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnavailableForLegalReasons">
      <summary vsli:raw="Equivalent to HTTP status 451. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnavailableForLegalReasons&quot; /&gt; indicates that the server is denying access to the resource as a consequence of a legal demand.">Äquivalent zu HTTP-Status 451. <see cref="F:System.Net.HttpStatusCode.UnavailableForLegalReasons" /> gibt an, dass der Server den Zugriff auf die Ressource als Folge einer zulässigen Anforderung verweigert.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnprocessableEntity">
      <summary vsli:raw="Equivalent to HTTP status 422. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnprocessableEntity&quot; /&gt; indicates that the request was well-formed but was unable to be followed due to semantic errors.&#xA;        UnprocessableEntity is a synonym for UnprocessableContent.">Äquivalent zu HTTP-Status 422. <see cref="F:System.Net.HttpStatusCode.UnprocessableEntity" /> gibt an, dass die Anforderung wohlgeformt war, aber aufgrund von semantischen Fehlern nicht ausgeführt werden konnte.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <summary vsli:raw="Equivalent to HTTP status 415. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnsupportedMediaType&quot; /&gt; indicates that the request is an unsupported type.">Äquivalent zu HTTP-Status 415. <see cref="F:System.Net.HttpStatusCode.UnsupportedMediaType" /> gibt an, dass es sich bei der Anforderung um einen nicht unterstützten Typ handelt.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unused">
      <summary vsli:raw="Equivalent to HTTP status 306. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Unused&quot; /&gt; is a proposed extension to the HTTP/1.1 specification that is not fully specified.">Äquivalent zu HTTP-Status 306. <see cref="F:System.Net.HttpStatusCode.Unused" /> ist eine vorgeschlagene Erweiterung der HTTP/1.1-Spezifikation, die nicht vollständig spezifiziert ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UpgradeRequired">
      <summary vsli:raw="Equivalent to HTTP status 426. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UpgradeRequired&quot; /&gt; indicates that the client should switch to a different protocol such as TLS/1.0.">Äquivalent zu HTTP-Status 426. <see cref="F:System.Net.HttpStatusCode.UpgradeRequired" /> gibt an, dass der Client auf ein anderes Protokoll wie z. B. TLS/1.0 umschalten soll.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UseProxy">
      <summary vsli:raw="Equivalent to HTTP status 305. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UseProxy&quot; /&gt; indicates that the request should use the proxy server at the URI specified in the Location header.">Äquivalent zu HTTP-Status 305. <see cref="F:System.Net.HttpStatusCode.UseProxy" /> gibt an, dass für die Anforderung der Proxyserver an dem im Location-Header angegebenen URI zu verwenden ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.VariantAlsoNegotiates">
      <summary vsli:raw="Equivalent to HTTP status 506. &lt;see cref=&quot;F:System.Net.HttpStatusCode.VariantAlsoNegotiates&quot; /&gt; indicates that the chosen variant resource is configured to engage in transparent content negotiation itself and, therefore, isn't a proper endpoint in the negotiation process.">Äquivalent zu HTTP-Status 506. <see cref="F:System.Net.HttpStatusCode.VariantAlsoNegotiates" /> gibt an, dass die ausgewählte variant-Ressource so konfiguriert ist, dass sie selbst an einer transparenten Inhaltsaushandlung beteiligt und daher kein ordnungsgemäßer Endpunkt im Aushandlungsprozess ist.</summary>
    </member>
    <member name="T:System.Net.HttpVersion">
      <summary vsli:raw="Defines the HTTP version numbers that are supported by the &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; and &lt;see cref=&quot;T:System.Net.HttpWebResponse&quot; /&gt; classes.">Definiert die von der <see cref="T:System.Net.HttpWebRequest" />-Klasse und der <see cref="T:System.Net.HttpWebResponse" />-Klasse unterstützten HTTP-Versionsnummern.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Unknown">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for an unknown HTTP version.">Definiert eine <see cref="T:System.Version" />-Instanz für eine unbekannte HTTP-Version.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version10">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 1.0.">Definiert eine <see cref="T:System.Version" />-Instanz für HTTP 1.0.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version11">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 1.1.">Definiert eine <see cref="T:System.Version" />-Instanz für HTTP 1.1.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version20">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 2.0.">Definiert eine <see cref="T:System.Version" />-Instanz für HTTP 2.0.</summary>
    </member>
    <member name="T:System.Net.ICredentials">
      <summary vsli:raw="Provides the base authentication interface for retrieving credentials for Web client authentication.">Stellt die Basisauthentifizierungsschnittstelle zum Abrufen von Anmeldeinformationen für die Webclientauthentifizierung bereit.</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; object that is associated with the specified URI, and authentication type.">Gibt ein <see cref="T:System.Net.NetworkCredential" />-Objekt zurück, das dem angegebenen URI und Authentifizierungstyp zugeordnet ist.</summary>
      <param name="uri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; that the client is providing authentication for.">Der <see cref="T:System.Uri" />, für den der Client die Authentifizierung bereitstellt.</param>
      <param name="authType" vsli:raw="The type of authentication, as defined in the &lt;see cref=&quot;P:System.Net.IAuthenticationModule.AuthenticationType&quot; /&gt; property.">Der Authentifizierungstyp entsprechend der Definition in der <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" />-Eigenschaft.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is associated with the specified URI and authentication type, or, if no credentials are available, &lt;see langword=&quot;null&quot; /&gt;.">Die dem angegebenen URI und dem Authentifizierungstyp zugeordneten <see cref="T:System.Net.NetworkCredential" /> oder <see langword="null" />, wenn keine Anmeldeinformationen verfügbar sind.</returns>
    </member>
    <member name="T:System.Net.ICredentialsByHost">
      <summary vsli:raw="Provides the interface for retrieving credentials for a host, port, and authentication type.">Stellt die Schnittstelle zum Abrufen von Anmeldeinformationen für einen Host, Port und Authentifizierungstyp bereit.</summary>
    </member>
    <member name="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns the credential for the specified host, port, and authentication protocol.">Gibt die Anmeldeinformationen für den angegebenen Host, den angegebenen Anschluss und das angegebene Authentifizierungsprotokoll zurück.</summary>
      <param name="host" vsli:raw="The host computer that is authenticating the client.">Der Hostcomputer, der den Client authentifiziert.</param>
      <param name="port" vsli:raw="The port on &lt;paramref name=&quot;host&quot; /&gt; that the client will communicate with.">Der Port auf <paramref name="host" />, mit dem der Client kommuniziert.</param>
      <param name="authenticationType" vsli:raw="The authentication protocol.">Das Authentifizierungsprotokoll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; for the specified host, port, and authentication protocol, or &lt;see langword=&quot;null&quot; /&gt; if there are no credentials available for the specified host, port, and authentication protocol.">Ein <see cref="T:System.Net.NetworkCredential" /> für den angegebenen Host, den angegebenen Anschluss und das angegebene Authentifizierungsprotokoll, oder <see langword="null" />, wenn für diese keine Anmeldeinformationen verfügbar sind.</returns>
    </member>
    <member name="T:System.Net.IPAddress">
      <summary vsli:raw="Provides an Internet Protocol (IP) address.">Stellt eine Internetprotokolladresse (IP) bereit.</summary>
    </member>
    <member name="F:System.Net.IPAddress.Any">
      <summary vsli:raw="Provides an IP address that indicates that the server must listen for client activity on all network interfaces. This field is read-only.">Stellt eine IP-Adresse bereit, die angibt, dass der Server die Clientaktivität an allen Netzwerkschnittstellen überwachen soll. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Net.IPAddress.Broadcast">
      <summary vsli:raw="Provides the IP broadcast address. This field is read-only.">Stellt die IP-Übertragungsadresse bereit. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Any">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; method uses the &lt;see cref=&quot;F:System.Net.IPAddress.IPv6Any&quot; /&gt; field to indicate that a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; must listen for client activity on all network interfaces.">Die <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />-Methode gibt über das <see cref="F:System.Net.IPAddress.IPv6Any" />-Feld an, dass ein <see cref="T:System.Net.Sockets.Socket" /> die Clientaktivität an allen Netzwerkschnittstellen überwachen muss.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Loopback">
      <summary vsli:raw="Provides the IP loopback address. This property is read-only.">Stellt die IP-Loopback-Adresse bereit. Diese Eigenschaft ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6None">
      <summary vsli:raw="Provides an IP address that indicates that no network interface should be used. This property is read-only.">Stellt eine IP-Adresse bereit, die angibt, dass keine Netzwerkschnittstelle verwendet werden soll. Diese Eigenschaft ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Net.IPAddress.Loopback">
      <summary vsli:raw="Provides the IP loopback address. This field is read-only.">Stellt die IP-Loopback-Adresse bereit. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Net.IPAddress.None">
      <summary vsli:raw="Provides an IP address that indicates that no network interface should be used. This field is read-only.">Stellt eine IP-Adresse bereit, die angibt, dass keine Netzwerkschnittstelle verwendet werden soll. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Initialisiert eine neue Instanz der <see cref="T:System.Net.IPAddress" />-Klasse mit der Adresse, die als <see cref="T:System.Byte" />-Array angegeben ist.</summary>
      <param name="address" vsli:raw="The byte array value of the IP address.">Der Bytearraywert der IP-Adresse.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> enthält eine ungültige IP-Adresse.</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array and the specified scope identifier.">Initialisiert eine neue Instanz der <see cref="T:System.Net.IPAddress" />-Klasse mit der Adresse, die als <see cref="T:System.Byte" />-Array angegeben ist, und dem angegebenen Bezeichner für den Gültigkeitsbereich.</summary>
      <param name="address" vsli:raw="The byte array value of the IP address.">Der Bytearraywert der IP-Adresse.</param>
      <param name="scopeid" vsli:raw="The long value of the scope identifier.">Der Long-Wert des Bezeichners für den Gültigkeitsbereich.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> enthält eine ungültige IP-Adresse.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;lt; 0 or&#xA;&#xA; &lt;paramref name=&quot;scopeid&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeid" /> &lt; 0 oder 
 <paramref name="scopeid" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Net.IPAddress" />-Klasse mit der Adresse, die als <see cref="T:System.Int64" /> angegeben ist.</summary>
      <param name="newAddress" vsli:raw="The long value of the IP address. For example, the value 0x2414188f in big-endian format would be the IP address &quot;143.24.20.36&quot;.">Der Long-Wert der IP-Adresse. Der Wert 0x2414188f weist z. B. im Big-Endian-Format die IP-Adresse "143.24.20.36" auf.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;newAddress&quot; /&gt; &amp;lt; 0 or&#xA;&#xA; &lt;paramref name=&quot;newAddress&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="newAddress" /> &lt; 0 oder 
 <paramref name="newAddress" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a byte span.">Initialisiert eine neue Instanz der <see cref="T:System.Net.IPAddress" />-Klasse mit der Adresse, die als Bytespanne angegeben ist</summary>
      <param name="address" vsli:raw="The byte representation of the IP address, in network byte order, with the most significant byte first in index position 0.">Die Bytedarstellung der IP-Adresse in der Netzwerk-Bytereihenfolge mit dem höchstwertigen Byte an erster Stelle an der Indexposition 0.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> enthält eine ungültige IP-Adresse.</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.ReadOnlySpan{System.Byte},System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a byte span and the specified scope identifier.">Initialisiert eine neue Instanz der <see cref="T:System.Net.IPAddress" />-Klasse mit der Adresse, die als Bytespanne angegeben ist, und dem angegebenen Bezeichner für den Gültigkeitsbereich.</summary>
      <param name="address" vsli:raw="The byte span value of the IP address.">Der Bytespannenwert der IP-Adresse.</param>
      <param name="scopeid" vsli:raw="The long value of the scope identifier.">Der Long-Wert des Bezeichners für den Gültigkeitsbereich.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> enthält eine ungültige IP-Adresse.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;lt; 0&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeid" /> &lt; 0

- oder -

<paramref name="scopeid" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.Equals(System.Object)">
      <summary vsli:raw="Compares two IP addresses.">Vergleicht zwei IP-Adressen.</summary>
      <param name="comparand" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance to compare to the current instance.">Eine <see cref="T:System.Net.IPAddress" />-Instanz, die mit der aktuellen Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two addresses are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die zwei Adressen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetAddressBytes">
      <summary vsli:raw="Provides a copy of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; as an array of bytes in network order.">Stellt eine Kopie der <see cref="T:System.Net.IPAddress" /> als Bytearray zur Verfügung.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Ein <see cref="T:System.Byte" />-Array.</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetHashCode">
      <summary vsli:raw="Returns a hash value for an IP address.">Gibt einen Hashwert für eine IP-Adresse zurück.</summary>
      <returns vsli:raw="An integer hash value.">Ein ganzzahliger Hashwert.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
      <summary vsli:raw="Converts a short value from host byte order to network byte order.">Konvertiert einen kurzen Wert vom Typ Short aus der Host-Bytereihenfolge in die Netzwerk-Bytereihenfolge.</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">Die zu konvertierende Zahl in Host-Bytereihenfolge.</param>
      <returns vsli:raw="A short value, expressed in network byte order.">Ein Wert vom Typ Short, der in der Netzwerk-Bytereihenfolge ausgedrückt ist.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
      <summary vsli:raw="Converts an integer value from host byte order to network byte order.">Konvertiert einen ganzzahligen Wert aus der Host-Bytereihenfolge in die Netzwerk-Bytereihenfolge.</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">Die zu konvertierende Zahl in Host-Bytereihenfolge.</param>
      <returns vsli:raw="An integer value, expressed in network byte order.">Ein ganzzahliger Wert, der in der Netzwerk-Bytereihenfolge ausgedrückt ist.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
      <summary vsli:raw="Converts a long value from host byte order to network byte order.">Konvertiert einen Wert vom Typ Long aus der Host-Bytereihenfolge in die Netzwerk-Bytereihenfolge.</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">Die zu konvertierende Zahl in Host-Bytereihenfolge.</param>
      <returns vsli:raw="A long value, expressed in network byte order.">Ein Wert vom Typ Long, der in Netzwerk-Bytereihenfolge ausgedrückt ist.</returns>
    </member>
    <member name="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
      <summary vsli:raw="Indicates whether the specified IP address is the loopback address.">Gibt an, ob es sich bei der angegebenen IP-Adresse um die Loopback-Adresse handelt.</summary>
      <param name="address" vsli:raw="An IP address.">Eine IP-Adresse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;address&quot; /&gt; is the loopback address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="address" /> die Loopback-Adresse ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.MapToIPv4">
      <summary vsli:raw="Maps the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to an IPv4 address.">Ordnet das <see cref="T:System.Net.IPAddress" />-Objekt einer IPv4-Adresse zu.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.&#xA;&#xA; An IPv4 address.">Gibt <see cref="T:System.Net.IPAddress" />zurück.  
  
Eine IPv4-Adresse.</returns>
    </member>
    <member name="M:System.Net.IPAddress.MapToIPv6">
      <summary vsli:raw="Maps the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to an IPv6 address.">Ordnet das <see cref="T:System.Net.IPAddress" />-Objekt einer IPv6-Adresse zu.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.&#xA;&#xA; An IPv6 address.">Gibt <see cref="T:System.Net.IPAddress" />zurück.  
  
Eine IPv6-Adresse.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
      <summary vsli:raw="Converts a short value from network byte order to host byte order.">Konvertiert einen Wert vom Typ Short aus der Netzwerk-Bytereihenfolge in die Host-Bytereihenfolge.</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">Die zu konvertierende Zahl in der Netzwerk-Bytereihenfolge.</param>
      <returns vsli:raw="A short value, expressed in host byte order.">Ein Wert vom Typ Short, der in der Host-Bytereihenfolge ausgedrückt ist.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
      <summary vsli:raw="Converts an integer value from network byte order to host byte order.">Konvertiert einen ganzzahligen Wert aus der Netzwerk-Bytereihenfolge in die Host-Bytereihenfolge.</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">Die zu konvertierende Zahl in der Netzwerk-Bytereihenfolge.</param>
      <returns vsli:raw="An integer value, expressed in host byte order.">Ein ganzzahliger Wert, der in der Host-Bytereihenfolge ausgedrückt ist.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
      <summary vsli:raw="Converts a long value from network byte order to host byte order.">Konvertiert einen Wert vom Typ Long aus der Netzwerk-Bytereihenfolge in die Host-Bytereihenfolge.</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">Die zu konvertierende Zahl in der Netzwerk-Bytereihenfolge.</param>
      <returns vsli:raw="A long value, expressed in host byte order.">Ein Wert vom Typ Long, der in der Host-Bytereihenfolge ausgedrückt ist.</returns>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Converts an IP address represented as a character span to an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">Konvertiert eine als Zeichenspanne dargestellte IP-Adresse in eine <see cref="T:System.Net.IPAddress" />-Instanz.</summary>
      <param name="ipSpan" vsli:raw="A character span that contains an IP address in dotted-quad notation for IPv4 and in colon-hexadecimal notation for IPv6." />
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is not a valid IP address.">
        <paramref name="ipString" /> ist keine gültige IP-Adresse.</exception>
      <returns vsli:raw="The converted IP address.">Die konvertierte IP-Adresse.</returns>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.String)">
      <summary vsli:raw="Converts an IP address string to an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">Konvertiert eine IP-Adresszeichenfolge in eine <see cref="T:System.Net.IPAddress" />-Instanz.</summary>
      <param name="ipString" vsli:raw="A string that contains an IP address in dotted-quad notation for IPv4 and in colon-hexadecimal notation for IPv6.">Eine Zeichenfolge, die eine IP-Adresse im Punktformat (Dotted Quad-Notation) für IPv4 und im durch Doppelpunkt getrennten Hexadezimalformat für IPv6 enthält.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipString" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is not a valid IP address.">
        <paramref name="ipString" /> ist keine gültige IP-Adresse.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">Eine <see cref="T:System.Net.IPAddress" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.IPAddress.ToString">
      <summary vsli:raw="Converts an Internet address to its standard notation.">Konvertiert Internetadressen in die jeweilige Standardnotation.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The address family is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; and the address is bad.">Die Adressfamilie ist <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />, und die Adresse ist ungültig.</exception>
      <returns vsli:raw="A string that contains the IP address in either IPv4 dotted-quad or in IPv6 colon-hexadecimal notation.">Eine Zeichenfolge mit einer IP-Adresse im Punktformat für IPv4 oder im durch Doppelpunkt getrennten Hexadezimalformat für IPv6.</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryFormat(System.Span{System.Char},System.Int32@)">
      <summary vsli:raw="Tries to format the current IP address into the provided span.">Versucht, die aktuelle IP-Adresse in die angegebene Spanne zu formatieren.</summary>
      <param name="destination" vsli:raw="When this method returns, the IP address as a span of characters.">Nach der Rückgabe dieser Methode wird die IP-Adresse als Zeichenspanne angegeben.</param>
      <param name="charsWritten" vsli:raw="When this method returns, the number of characters written into the span.">Die Rückgabe dieser Methode ist die Anzahl der in die Spanne geschriebenen Zeichen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the formatting was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Formatierung erfolgreich war, andernfalls <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPAddress@)">
      <summary vsli:raw="Tries to parse a span of characters into a value.">Bestimmt, ob die angegebene Bytespanne eine gültige IP-Adresse darstellt.</summary>
      <param name="address" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; version of the byte span.">Nach der Rückgabe dieser Methode wird die <see cref="T:System.Net.IPAddress" />-Version der Bytespanne angegeben.</param>
      <param name="ipSpan" vsli:raw="The byte span to parse." />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;ipSpan&quot; /&gt; was able to be parsed as an IP address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="ipString" /> als IP-Adresse analysiert werden konnte, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
      <summary vsli:raw="Determines whether a string is a valid IP address.">Bestimmt, ob eine Zeichenfolge eine gültige IP-Adresse ist.</summary>
      <param name="ipString" vsli:raw="The string to parse.">Die zu überprüfende Zeichenfolge.</param>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; version of the string.">Die <see cref="T:System.Net.IPAddress" />-Version der Zeichenfolge.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipString" /> ist NULL.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;ipString&quot; /&gt; was able to be parsed as an IP address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="ipString" /> als IP-Adresse analysiert werden konnte, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryWriteBytes(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Tries to write the current IP address into a span of bytes in network order.">Versucht, die aktuelle IP-Adresse in eine Spanne von Bytes zu schreiben.</summary>
      <param name="destination" vsli:raw="When this method returns, the IP address as a span of bytes.">Nach der Rückgabe dieser Methode wird die IP-Adresse als eine Spanne von Bytes angegeben.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the number of bytes written into the span.">Nach der Rückgabe dieser Methode wird die Anzahl der in die Spanne geschriebenen Bytes angegeben.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is successfully written to the given span; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die IP-Adresse erfolgreich in die angegebene Spanne geschrieben wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.Address">
      <summary vsli:raw="An Internet Protocol (IP) address.">Eine Internetprotokolladresse (IP-Adresse).</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The address family is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt;.">Die Adressfamilie ist <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <returns vsli:raw="The long value of the IP address.">Der Long-Wert der IP-Adresse.</returns>
    </member>
    <member name="P:System.Net.IPAddress.AddressFamily">
      <summary vsli:raw="Gets the address family of the IP address.">Ruft die Adressfamilie der IP-Adresse ab.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; for IPv4 or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; for IPv6.">Gibt <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> für IPv4 oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> für IPv6 zurück.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
      <summary vsli:raw="Gets whether the IP address is an IPv4-mapped IPv6 address.">Ruft ab, ob die IP Adresse eine globale IPv4-zugeordnete IPv6 Adresse ist.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.&#xA;&#xA; &lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv4-mapped IPv6 address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Gibt <see cref="T:System.Boolean" />zurück.  
  
 <see langword="true" />, wenn die IP-Adresse eine IPv4-zugeordnete IPv6-Adresse ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6LinkLocal">
      <summary vsli:raw="Gets whether the address is an IPv6 link local address.">Ruft ab, ob die Adresse eine IPv6-Link-Local-Adresse ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 link local address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die IP-Adresse eine IPv6-Link-Local-Adresse ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Multicast">
      <summary vsli:raw="Gets whether the address is an IPv6 multicast global address.">Ruft ab, ob die Adresse eine globale IPv6-Multicastadresse ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 multicast global address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die IP-Adresse eine globale IPv6-Multicastadresse ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6SiteLocal">
      <summary vsli:raw="Gets whether the address is an IPv6 site local address.">Ruft ab, ob die Adresse eine IPv6-Site-Local-Adresse ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 site local address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die IP-Adresse eine IPv6-Site-Local-Adresse ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Teredo">
      <summary vsli:raw="Gets whether the address is an IPv6 Teredo address.">Ruft einen Wert ab, der angibt, ob die Adresse eine IPv6-Teredo-Adresse ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 Teredo address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die IP-Adresse eine IPv6-Teredo-Adresse ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.ScopeId">
      <summary vsli:raw="Gets or sets the IPv6 address scope identifier.">Ruft den Bezeichner für den Gültigkeitsbereich der IPv6-Adresse ab oder legt diesen fest.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;see langword=&quot;AddressFamily&quot; /&gt; = &lt;see langword=&quot;InterNetwork&quot; /&gt;.">
        <see langword="AddressFamily" /> = <see langword="InterNetwork" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeId&quot; /&gt; &amp;lt; 0&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;scopeId&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeId" /> &lt; 0 
- oder - 
<paramref name="scopeId" /> &gt; 0x00000000FFFFFFFF</exception>
      <returns vsli:raw="A long integer that specifies the scope of the address.">Ein lange ganze Zahl, die den Gültigkeitsbereich der Adresse angibt.</returns>
    </member>
    <member name="T:System.Net.IPEndPoint">
      <summary vsli:raw="Represents a network endpoint as an IP address and a port number.">Stellt einen Netzwerkendpunkt als eine IP-Adresse und einer Portnummer dar.</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MaxPort">
      <summary vsli:raw="Specifies the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Net.IPEndPoint.Port&quot; /&gt; property. The MaxPort value is set to 0x0000FFFF. This field is read-only.">Gibt den Höchstwert an, der der <see cref="P:System.Net.IPEndPoint.Port" />-Eigenschaft zugeordnet werden kann. Der MaxPort-Wert ist auf 0x0000FFFF festgelegt. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MinPort">
      <summary vsli:raw="Specifies the minimum value that can be assigned to the &lt;see cref=&quot;P:System.Net.IPEndPoint.Port&quot; /&gt; property. This field is read-only.">Gibt den Mindestwert an, der der <see cref="P:System.Net.IPEndPoint.Port" />-Eigenschaft zugeordnet werden kann. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; class with the specified address and port number.">Initialisiert eine neue Instanz der <see cref="T:System.Net.IPEndPoint" />-Klasse mit der angegebenen Adresse und der angegebenen Anschlussnummer.</summary>
      <param name="address" vsli:raw="The IP address of the Internet host. For example, the value 0x2414188f in big-endian format would be the IP address &quot;143.24.20.36&quot;.">Die IP-Adresse des Internethosts. Der Wert 0x2414188f weist z. B. im Big-Endian-Format die IP-Adresse "143.24.20.36" auf.</param>
      <param name="port" vsli:raw="The port number associated with the &lt;paramref name=&quot;address&quot; /&gt;, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">Die der <paramref name="address" /> zugeordnete Portnummer oder 0, um einen beliebigen verfügbaren Port anzugeben. <paramref name="port" /> liegt in der Hostreihenfolge vor.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;address&quot; /&gt; is less than 0 or greater than 0x00000000FFFFFFFF.">
        <paramref name="port" /> ist kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" />.  
  
- oder - 
 <paramref name="port" /> ist größer als <see cref="F:System.Net.IPEndPoint.MaxPort" />.  
  
- oder - 
 <paramref name="address" /> ist kleiner als 0 oder größer als 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; class with the specified address and port number.">Initialisiert eine neue Instanz der <see cref="T:System.Net.IPEndPoint" />-Klasse mit der angegebenen Adresse und der angegebenen Anschlussnummer.</summary>
      <param name="address" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">
        <see cref="T:System.Net.IPAddress" />.</param>
      <param name="port" vsli:raw="The port number associated with the &lt;paramref name=&quot;address&quot; /&gt;, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">Die der <paramref name="address" /> zugeordnete Portnummer oder 0, um einen beliebigen verfügbaren Port anzugeben. <paramref name="port" /> liegt in der Hostreihenfolge vor.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> ist kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" />.  
  
- oder - 
 <paramref name="port" /> ist größer als <see cref="F:System.Net.IPEndPoint.MaxPort" />.  
  
- oder - 
 <paramref name="address" /> ist kleiner als 0 oder größer als 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)">
      <summary vsli:raw="Creates an endpoint from a socket address.">Erstellt einen Endpunkt aus einer Socketadresse.</summary>
      <param name="socketAddress" vsli:raw="The &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; to use for the endpoint.">Die <see cref="T:System.Net.SocketAddress" />, die für den Endpunkt verwendet werden soll.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The AddressFamily of &lt;paramref name=&quot;socketAddress&quot; /&gt; is not equal to the AddressFamily of the current instance.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;socketAddress&quot; /&gt;.Size &amp;lt; 8.">Die AddressFamily von <paramref name="socketAddress" /> entspricht nicht der AddressFamily der aktuellen Instanz.  
  
- oder - 
 <paramref name="socketAddress" />.Size &lt; 8.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance using the specified socket address.">Eine <see cref="T:System.Net.EndPoint" />-Instanz, die die angegebene Socketadresse verwendet.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Object" /> gleich sind.</summary>
      <param name="comparand" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Das <see cref="T:System.Object" />, das mit dem aktuellen <see cref="T:System.Object" /> verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich der aktuellen <see cref="T:System.Object" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.GetHashCode">
      <summary vsli:raw="Returns a hash value for a &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">Gibt einen Hashwert für eine <see cref="T:System.Net.IPEndPoint" />-Instanz zurück.</summary>
      <returns vsli:raw="An integer hash value.">Ein ganzzahliger Hashwert.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Parse(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Converts an IP network endpoint (address and port) represented as a read-only span to an &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">Konvertiert einen IP-Netzwerkendpunkt (Adresse und Port) als schreibgeschützten Bereich auf eine <see cref="T:System.Net.IPEndPoint" />-Instanz.</summary>
      <param name="s" vsli:raw="A read-only span that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.">Ein schreibgeschützter Bereich, der einen IP-Endpunkt im Punktformat (Dotted-Quad Notation) oder mit Netzwerk-Bytereihenfolge für IPv4 und im durch Doppelpunkt getrennten Hexadezimalformat für IPv6 enthält.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not a valid IP endpoint.">
        <paramref name="s" /> ist kein gültiger IP-Endpunkt.</exception>
      <returns vsli:raw="The object representation of an IP network endpoint.">Die Objektdarstellung eines IP-Netzwerkendpunkts.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Parse(System.String)">
      <summary vsli:raw="Converts an IP network endpoint (address and port) represented as a string to an &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">Konvertiert einen IP-Netzwerkendpunkt (Adresse und Port), der als Zeichenfolge dargestellt ist, in eine <see cref="T:System.Net.IPEndPoint" />-Instanz.</summary>
      <param name="s" vsli:raw="A string that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.">Eine Zeichenfolge, die einen IP-Endpunkt im Punktformat (Dotted-Quad Notation) oder mit Netzwerk-Bytereihenfolge für IPv4 und im durch Doppelpunkt getrennten Hexadezimalformat für IPv6 enthält.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not a valid IP endpoint.">
        <paramref name="s" /> ist kein gültiger IP-Endpunkt.</exception>
      <returns vsli:raw="The object representation of an IP network endpoint.">Die Objektdarstellung eines IP-Netzwerkendpunkts.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Serialize">
      <summary vsli:raw="Serializes endpoint information into a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">Serialisiert Endpunktinformationen in eine <see cref="T:System.Net.SocketAddress" />-Instanz.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance containing the socket address for the endpoint.">Eine <see cref="T:System.Net.SocketAddress" />-Instanz mit der Socketadresse für den Endpunkt.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.ToString">
      <summary vsli:raw="Returns the IP address and port number of the specified endpoint.">Gibt die IP-Adresse und die Anschlussnummer des angegebenen Endpunkts zurück.</summary>
      <returns vsli:raw="A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).">Eine Zeichenfolge mit der IP-Adresse und der Anschlussnummer des angegebenen Endpunkts (z. B. 192.168.1.2:80).</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPEndPoint@)">
      <summary vsli:raw="Tries to convert an IP network endpoint (address and port) represented as a read-only span to its &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">Versucht, einen IP-Netzwerkendpunkt (Adresse und Port), der als schreibgeschützter Bereich dargestellt ist, in sein <see cref="T:System.Net.IPEndPoint" />-Äquivalent zu konvertieren. Außerdem wird ein Wert zurückgegeben, mit dem angegeben wird, ob die Konvertierung erfolgreich war.</summary>
      <param name="s" vsli:raw="The IP endpoint to validate.">Der zu überprüfende IP-Endpunkt.</param>
      <param name="result" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; version of &lt;paramref name=&quot;s&quot; /&gt;.">Mit dieser Methode wird die <see cref="T:System.Net.IPEndPoint" />-Version von <paramref name="s" /> zurückgegeben.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;s&quot; /&gt; can be parsed as an IP endpoint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="s" /> als IP-Endpunkt analysiert werden kann; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.TryParse(System.String,System.Net.IPEndPoint@)">
      <summary vsli:raw="Tries to convert an IP network endpoint (address and port) represented as a string to its &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">Versucht, einen IP-Netzwerkendpunkt (Adresse und Port), der als Zeichenfolge dargestellt ist, in sein <see cref="T:System.Net.IPEndPoint" />-Äquivalent zu konvertieren. Außerdem wird ein Wert zurückgegeben, mit dem angegeben wird, ob die Konvertierung erfolgreich war.</summary>
      <param name="s" vsli:raw="The IP endpoint to validate.">Der zu überprüfende IP-Endpunkt.</param>
      <param name="result" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; version of &lt;paramref name=&quot;s&quot; /&gt;.">Mit dieser Methode wird die <see cref="T:System.Net.IPEndPoint" />-Version von <paramref name="s" /> zurückgegeben.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;s&quot; /&gt; can be parsed as an IP endpoint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="s" /> als IP-Endpunkt analysiert werden kann; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.Address">
      <summary vsli:raw="Gets or sets the IP address of the endpoint.">Ruft die IP-Adresse des Endpunktes ab oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance containing the IP address of the endpoint.">Eine <see cref="T:System.Net.IPAddress" />-Instanz mit der IP-Adresse des Endpunkts.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.AddressFamily">
      <summary vsli:raw="Gets the Internet Protocol (IP) address family.">Ruft die IP-Adressfamilie ab.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt;.">Gibt <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />zurück.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.Port">
      <summary vsli:raw="Gets or sets the port number of the endpoint.">Ruft die Anschlussnummer des Endpunkts ab oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value that was specified for a set operation is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; or greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">Der für einen set-Vorgang angegebene Wert ist kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" /> oder größer als <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <returns vsli:raw="An integer value in the range &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; to &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt; indicating the port number of the endpoint.">Ein ganzzahliger Wert im Bereich von <see cref="F:System.Net.IPEndPoint.MinPort" /> bis <see cref="F:System.Net.IPEndPoint.MaxPort" />, der die Anschlussnummer des Endpunkts angibt.</returns>
    </member>
    <member name="T:System.Net.IWebProxy">
      <summary vsli:raw="Provides the base interface for implementation of proxy access for the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class.">Stellt die Basisschnittstelle für die Implementierung des Proxyzugriffs für die <see cref="T:System.Net.WebRequest" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Net.IWebProxy.GetProxy(System.Uri)">
      <summary vsli:raw="Returns the URI of a proxy.">Gibt den URI eines Proxys zurück.</summary>
      <param name="destination" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the requested Internet resource.">Ein <see cref="T:System.Uri" />, der die angeforderte Internetressource angibt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; instance that contains the URI of the proxy used to contact &lt;paramref name=&quot;destination&quot; /&gt;; otherwise null or &lt;paramref name=&quot;destination&quot; /&gt; itself.">Eine <see cref="T:System.Uri" />-Instanz mit dem URI des Proxys, der zum Herstellen der Verbindung mit <paramref name="destination" /> verwendet wird.</returns>
    </member>
    <member name="M:System.Net.IWebProxy.IsBypassed(System.Uri)">
      <summary vsli:raw="Indicates that the proxy should not be used for the specified host.">Gibt an, dass der Proxy nicht für den angegebenen Host verwendet werden soll.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the host to check for proxy use.">Der <see cref="T:System.Uri" /> des Hosts, der auf eine Proxyverwendung überprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the proxy server should not be used for &lt;paramref name=&quot;host&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Proxyserver nicht für <paramref name="host" /> verwendet werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IWebProxy.Credentials">
      <summary vsli:raw="The credentials to submit to the proxy server for authentication.">Die für die Authentifizierung an den Proxyserver zu sendenden Anmeldeinformationen.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; instance that contains the credentials that are needed to authenticate a request to the proxy server.">Eine <see cref="T:System.Net.ICredentials" />-Instanz, die die zum Authentifizieren einer Anforderung beim Proxyserver erforderlichen Anmeldeinformationen enthält.</returns>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary vsli:raw="Provides credentials for password-based authentication schemes such as basic, digest, NTLM, and Kerberos authentication.">Stellt Anmeldeinformationen für kennwortbasierte Authentifizierungsschemas (wie etwa Standard-, Hashwert-, NTLM- und Kerberos-Authentifizierung) bereit.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkCredential" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name and password.">Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkCredential" />-Klasse mit dem angegebenen Benutzernamen und Kennwort.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">Der den Anmeldeinformationen zugeordnete Benutzername.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">Das Kennwort für den Benutzernamen, der den Anmeldeinformationen zugeordnet ist.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">Die <see cref="T:System.Security.SecureString" />-Klasse wird von dieser Plattform nicht unterstützt.</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name, password, and domain.">Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkCredential" />-Klasse mit dem angegebenen Benutzernamen und Kennwort sowie der angegebenen Domäne.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">Der den Anmeldeinformationen zugeordnete Benutzername.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">Das Kennwort für den Benutzernamen, der den Anmeldeinformationen zugeordnet ist.</param>
      <param name="domain" vsli:raw="The domain associated with these credentials.">Die diesen Anmeldeinformationen zugeordnete Domäne.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">Die <see cref="T:System.Security.SecureString" />-Klasse wird von dieser Plattform nicht unterstützt.</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name and password.">Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkCredential" />-Klasse mit dem angegebenen Benutzernamen und Kennwort.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">Der den Anmeldeinformationen zugeordnete Benutzername.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">Das Kennwort für den Benutzernamen, der den Anmeldeinformationen zugeordnet ist.</param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name, password, and domain.">Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkCredential" />-Klasse mit dem angegebenen Benutzernamen und Kennwort sowie der angegebenen Domäne.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">Der den Anmeldeinformationen zugeordnete Benutzername.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">Das Kennwort für den Benutzernamen, der den Anmeldeinformationen zugeordnet ist.</param>
      <param name="domain" vsli:raw="The domain associated with these credentials.">Die diesen Anmeldeinformationen zugeordnete Domäne.</param>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class for the specified host, port, and authentication type.">Gibt eine Instanz der <see cref="T:System.Net.NetworkCredential" />-Klasse für den angegebenen Host, den angegebenen Anschluss und den angegebenen Authentifizierungstyp zurück.</summary>
      <param name="host" vsli:raw="The host computer that authenticates the client.">Der Hostcomputer, der den Client authentifiziert.</param>
      <param name="port" vsli:raw="The port on the &lt;paramref name=&quot;host&quot; /&gt; that the client communicates with.">Der Anschluss des <paramref name="host" />, mit dem der Client kommuniziert.</param>
      <param name="authenticationType" vsli:raw="The type of authentication requested, as defined in the &lt;see cref=&quot;P:System.Net.IAuthenticationModule.AuthenticationType&quot; /&gt; property.">Der angeforderte Authentifizierungstyp entsprechend der Definition in der <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" />-Eigenschaft.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; for the specified host, port, and authentication protocol, or &lt;see langword=&quot;null&quot; /&gt; if there are no credentials available for the specified host, port, and authentication protocol.">Ein <see cref="T:System.Net.NetworkCredential" /> für den angegebenen Host, den angegebenen Anschluss und das angegebene Authentifizierungsprotokoll, oder <see langword="null" />, wenn für diese keine Anmeldeinformationen verfügbar sind.</returns>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class for the specified Uniform Resource Identifier (URI) and authentication type.">Gibt eine Instanz der <see cref="T:System.Net.NetworkCredential" />-Klasse für den angegebenen URI (Uniform Resource Identifier) und den angegebenen Authentifizierungstyp zurück.</summary>
      <param name="uri" vsli:raw="The URI that the client provides authentication for.">Der URI, für den der Client die Authentifizierung bereitstellt.</param>
      <param name="authenticationType" vsli:raw="" />
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; object.">Ein <see cref="T:System.Net.NetworkCredential" />-Objekt.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary vsli:raw="Gets or sets the domain or computer name that verifies the credentials.">Ruft den Namen der Domäne bzw. des Computers ab, in der bzw. auf dem die Anmeldeinformationen geprüft werden, oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the domain associated with the credentials.">Der Name der Domäne, die diesen Anmeldeinformationen zugeordnet ist.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary vsli:raw="Gets or sets the password for the user name associated with the credentials.">Ruft das Kennwort für den Benutzernamen ab, der den Anmeldeinformationen zugeordnet ist, oder legt dieses fest.</summary>
      <returns vsli:raw="The password associated with the credentials. If this &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance was initialized with the &lt;paramref name=&quot;password&quot; /&gt; parameter set to &lt;see langword=&quot;null&quot; /&gt;, then the &lt;see cref=&quot;P:System.Net.NetworkCredential.Password&quot; /&gt; property will return an empty string.">Das den Anmeldeinformationen zugeordnete Kennwort. Wenn diese <see cref="T:System.Net.NetworkCredential" />-Instanz mit dem <paramref name="password" />-Parameterwert <see langword="null" /> initialisiert wurde, gibt die <see cref="P:System.Net.NetworkCredential.Password" />-Eigenschaft eine leere Zeichenfolge zurück.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.SecurePassword">
      <summary vsli:raw="Gets or sets the password as a &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; instance.">Ruft das Kennwort als <see cref="T:System.Security.SecureString" />-Instanz ab oder legt es fest.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">Die <see cref="T:System.Security.SecureString" />-Klasse wird von dieser Plattform nicht unterstützt.</exception>
      <returns vsli:raw="The password for the user name associated with the credentials.">Das Kennwort für den Benutzernamen, der den Anmeldeinformationen zugeordnet ist.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary vsli:raw="Gets or sets the user name associated with the credentials.">Ruft den Benutzernamen ab, der den Anmeldeinformationen zugeordnet ist, oder legt diesen fest.</summary>
      <returns vsli:raw="The user name associated with the credentials.">Der den Anmeldeinformationen zugeordnete Benutzername.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPAddressCollection">
      <summary vsli:raw="Stores a set of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types.">Speichert einen Satz von <see cref="T:System.Net.IPAddress" />-Typen.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkInformation.IPAddressCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">Löst einen <see cref="T:System.NotSupportedException" /> aus, da dieser Vorgang für diese Auflistung nicht unterstützt wird.</summary>
      <param name="address" vsli:raw="The object to be added to the collection.">Das der Auflistung hinzuzufügende Objekt.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Clear">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">Löst einen <see cref="T:System.NotSupportedException" /> aus, da dieser Vorgang für diese Auflistung nicht unterstützt wird.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)">
      <summary vsli:raw="Checks whether the collection contains the specified &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object.">Überprüft, ob die Auflistung das angegebene <see cref="T:System.Net.IPAddress" />-Objekt enthält.</summary>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to be searched in the collection.">Das <see cref="T:System.Net.IPAddress" />-Objekt, das in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Net.IPAddress" />-Objekt in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)">
      <summary vsli:raw="Copies the elements in this collection to a one-dimensional array of type &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">Kopiert die Elemente in dieser Auflistung in ein eindimensionales Array vom Typ <see cref="T:System.Net.IPAddress" />.</summary>
      <param name="array" vsli:raw="A one-dimensional array that receives a copy of the collection.">Ein eindimensionales Array, das eine Kopie der Auflistung empfängt.</param>
      <param name="offset" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which the copy begins.">Der nullbasierte Index im <paramref name="array" />, an dem die Kopie beginnt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than zero.">
        <paramref name="offset" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;&#xA;-or-  &#xA;&#xA;The number of elements in this &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;offset&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> ist mehrdimensional.  

- oder -

Die Anzahl der Elemente in dieser <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> ist größer als der verfügbare Platz zwischen <paramref name="offset" /> und dem Ende des Ziel-<paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Die Elemente in dieser <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> können nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.GetEnumerator">
      <summary vsli:raw="Returns an object that can be used to iterate through this collection.">Gibt ein Objekt zurück, das zum Durchlaufen dieser Auflistung verwendet werden kann.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface and provides access to the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; types in this collection.">Ein Objekt, das die <see cref="T:System.Collections.IEnumerator" />-Schnittstelle implementiert und Zugriff auf die <see cref="T:System.Net.NetworkInformation.IPAddressCollection" />-Typen in dieser Auflistung bereitstellt.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">Löst einen <see cref="T:System.NotSupportedException" /> aus, da dieser Vorgang für diese Auflistung nicht unterstützt wird.</summary>
      <param name="address" vsli:raw="The object to be removed.">Das zu entfernende Objekt.</param>
      <returns vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an object that can be used to iterate through this collection.">Gibt ein Objekt zurück, das zum Durchlaufen dieser Auflistung verwendet werden kann.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface and provides access to the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; types in this collection.">Ein Objekt, das die <see cref="T:System.Collections.IEnumerator" />-Schnittstelle implementiert und Zugriff auf die <see cref="T:System.Net.NetworkInformation.IPAddressCollection" />-Typen in dieser Auflistung bereitstellt.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types in this collection.">Ruft die Anzahl der <see cref="T:System.Net.IPAddress" />-Typen in dieser Auflistung ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that contains the number of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types in this collection.">Ein <see cref="T:System.Int32" />-Wert, der die Anzahl der <see cref="T:System.Net.IPAddress" />-Typen in dieser Auflistung enthält.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether access to this collection is read-only.">Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; at the specific index of the collection.">Ruft die <see cref="T:System.Net.IPAddress" /> an dem bestimmten Index der Auflistung ab.</summary>
      <param name="index" vsli:raw="The index of interest.">Der betreffende Index.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; at the specific index in the collection.">Die <see cref="T:System.Net.IPAddress" /> an dem bestimmten Index der Auflistung.</returns>
    </member>
    <member name="T:System.Net.Security.AuthenticationLevel">
      <summary vsli:raw="Specifies client requirements for authentication and impersonation when using the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; class and derived classes to request a resource.">Gibt Clientanforderungen für Authentifizierung und Identitätswechsel bei der Verwendung der <see cref="T:System.Net.WebRequest" />-Klasse und der abgeleiteten Klassen zum Anfordern einer Ressource an.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested">
      <summary vsli:raw="The client and server should be authenticated. The request does not fail if the server is not authenticated. To determine whether mutual authentication occurred, check the value of the &lt;see cref=&quot;P:System.Net.WebResponse.IsMutuallyAuthenticated&quot; /&gt; property.">Der Client und der Server müssen authentifiziert sein. Die Anforderung schlägt nicht fehl, wenn der Server nicht authentifiziert ist. Um zu bestimmen, ob eine gegenseitige Authentifizierung erfolgt ist, überprüfen Sie den Wert der <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" />-Eigenschaft.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired">
      <summary vsli:raw="The client and server should be authenticated. If the server is not authenticated, your application will receive an &lt;see cref=&quot;T:System.IO.IOException&quot; /&gt; with a &lt;see cref=&quot;T:System.Net.ProtocolViolationException&quot; /&gt; inner exception that indicates that mutual authentication failed.">Der Client und der Server müssen authentifiziert sein. Wenn der Server nicht authentifiziert ist, empfängt die Anwendung eine <see cref="T:System.IO.IOException" /> mit der inneren <see cref="T:System.Net.ProtocolViolationException" />-Ausnahme, die angibt, dass die gegenseitige Authentifizierung fehlgeschlagen ist.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.None">
      <summary vsli:raw="No authentication is required for the client and server.">Für Client und Server ist keine Authentifizierung erforderlich.</summary>
    </member>
    <member name="T:System.Net.Security.SslPolicyErrors">
      <summary vsli:raw="Enumerates Secure Socket Layer (SSL) policy errors.">Listet die Richtlinienfehler für Secure Socket Layer (SSL) auf.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.None">
      <summary vsli:raw="No SSL policy errors.">Keine SSL-Richtlinienfehler.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateChainErrors">
      <summary vsli:raw="&lt;see cref=&quot;P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus&quot; /&gt; has returned a non empty array.">
        <see cref="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus" /> hat ein nicht leeres Array zurückgegeben.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch">
      <summary vsli:raw="Certificate name mismatch.">Zertifikatsnamenkonflikt.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable">
      <summary vsli:raw="Certificate not available.">Zertifikat nicht verfügbar.</summary>
    </member>
    <member name="T:System.Net.SocketAddress">
      <summary vsli:raw="Stores serialized information from &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; derived classes.">Speichert serialisierte Informationen von Klassen, die von <see cref="T:System.Net.EndPoint" /> abgeleitet sind.</summary>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; class for the given address family.">Erstellt eine neue Instanz der <see cref="T:System.Net.SocketAddress" />-Klasse für die angegebene Adressfamilie.</summary>
      <param name="family" vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value.">Ein <see cref="T:System.Net.Sockets.AddressFamily" />-Enumerationswert.</param>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; class using the specified address family and buffer size.">Erstellt eine neue Instanz der <see cref="T:System.Net.SocketAddress" />-Klasse, wobei die angegebene Adressfamilie und die angegebene Puffergröße verwendet werden.</summary>
      <param name="family" vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value.">Ein <see cref="T:System.Net.Sockets.AddressFamily" />-Enumerationswert.</param>
      <param name="size" vsli:raw="The number of bytes to allocate for the underlying buffer.">Die Anzahl der für den zugrunde liegenden Puffer zu reservierenden Bytes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is less than 2. These 2 bytes are needed to store &lt;paramref name=&quot;family&quot; /&gt;.">
        <paramref name="size" /> ist kleiner als 2. Diese 2 Bytes werden zum Speichern von <paramref name="family" /> benötigt.</exception>
    </member>
    <member name="M:System.Net.SocketAddress.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see langword=&quot;Object&quot; /&gt; is equal to the current &lt;see langword=&quot;Object&quot; /&gt;.">Bestimmt, ob das angegebene <see langword="Object" /> und das aktuelle <see langword="Object" /> gleich sind.</summary>
      <param name="comparand" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see langword=&quot;Object&quot; /&gt;.">Das <see cref="T:System.Object" />, das mit dem aktuellen <see langword="Object" /> verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see langword=&quot;Object&quot; /&gt; is equal to the current &lt;see langword=&quot;Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see langword="Object" /> gleich der aktuellen <see langword="Object" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.">Dient als Hashfunktion für einen bestimmten Typ, die in Hashalgorithmen und Datenstrukturen (z. B. Hashtabellen) verwendet werden kann.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Ein Hashcode für die aktuelle <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.ToString">
      <summary vsli:raw="Returns information about the socket address.">Gibt Informationen über die Socketadresse zurück.</summary>
      <returns vsli:raw="A string that contains information about the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">Eine Zeichenfolge mit Informationen über die <see cref="T:System.Net.SocketAddress" />.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Family">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value of the current &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">Ruft den <see cref="T:System.Net.Sockets.AddressFamily" />-Enumerationswert der aktuellen <see cref="T:System.Net.SocketAddress" /> ab.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated values.">Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Enumerationswerte.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the specified index element in the underlying buffer.">Ruft das angegebene Indexelement im zugrunde liegenden Puffer ab oder legt dieses fest.</summary>
      <param name="offset" vsli:raw="The array index element of the desired information.">Das Arrayindexelement für die gewünschten Informationen.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist in the buffer.">Der angegebene Index ist im Puffer nicht vorhanden.</exception>
      <returns vsli:raw="The value of the specified index element in the underlying buffer.">Der Wert des angegebenen Indexelements im zugrunde liegenden Puffer.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Size">
      <summary vsli:raw="Gets the underlying buffer size of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">Ruft die Größe des zugrunde liegenden Puffers der <see cref="T:System.Net.SocketAddress" /> ab.</summary>
      <returns vsli:raw="The underlying buffer size of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">Die Größe des zugrunde liegenden Puffers der <see cref="T:System.Net.SocketAddress" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.AddressFamily">
      <summary vsli:raw="Specifies the addressing scheme that an instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class can use.">Gibt das Adressierschema an, das durch eine Instanz der <see cref="T:System.Net.Sockets.Socket" />-Klasse verwendet werden kann.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.AppleTalk">
      <summary vsli:raw="AppleTalk address.">AppleTalk-Adresse.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Atm">
      <summary vsli:raw="Native ATM services address.">Systemeigene Adresse für ATM-Dienste.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Banyan">
      <summary vsli:raw="Banyan address.">Banyan-Adresse.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ccitt">
      <summary vsli:raw="Addresses for CCITT protocols, such as X.25.">Adressen für CCITT-Protokolle, z. B. X.25.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Chaos">
      <summary vsli:raw="Address for MIT CHAOS protocols.">Adresse für MIT CHAOS-Protokolle.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Cluster">
      <summary vsli:raw="Address for Microsoft cluster products.">Adresse für Microsoft Cluster-Produkte.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ControllerAreaNetwork">
      <summary vsli:raw="Controller Area Network address.">Adresse des Controllerbereichsnetzwerks.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataKit">
      <summary vsli:raw="Address for Datakit protocols.">Adresse für Datakit-Protokolle.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataLink">
      <summary vsli:raw="Direct data-link interface address.">Adresse der Direct Data Link-Schnittstelle.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DecNet">
      <summary vsli:raw="DECnet address.">DECnet-Adresse.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ecma">
      <summary vsli:raw="European Computer Manufacturers Association (ECMA) address.">ECMA-Adresse (European Computer Manufacturers Association).</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.FireFox">
      <summary vsli:raw="FireFox address.">FireFox-Adresse.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.HyperChannel">
      <summary vsli:raw="NSC Hyperchannel address.">NSC Hyperchannel-Adresse.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ieee12844">
      <summary vsli:raw="IEEE 1284.4 workgroup address.">Adresse der IEEE 1284.4-Arbeitsgruppe.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ImpLink">
      <summary vsli:raw="ARPANET IMP address.">ARPANET IMP-Adresse.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetwork">
      <summary vsli:raw="Address for IP version 4.">Adresse für IP Version 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetworkV6">
      <summary vsli:raw="Address for IP version 6.">Adresse für IP Version 6.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ipx">
      <summary vsli:raw="IPX or SPX address.">IPX- oder SPX-Adresse.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Irda">
      <summary vsli:raw="IrDA address.">IrDA-Adresse.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Iso">
      <summary vsli:raw="Address for ISO protocols.">Adresse für ISO-Protokolle.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Lat">
      <summary vsli:raw="LAT address.">LAT-Adresse.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Max">
      <summary vsli:raw="MAX address.">MAX-Adresse.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetBios">
      <summary vsli:raw="NetBios address.">NetBios-Adresse.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetworkDesigners">
      <summary vsli:raw="Address for Network Designers OSI gateway-enabled protocols.">Adresse für Network Designers OSI-Gateway-fähige Protokolle.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NS">
      <summary vsli:raw="Address for Xerox NS protocols.">Adresse für Xerox NS-Protokolle.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Osi">
      <summary vsli:raw="Address for OSI protocols.">Adresse für OSI-Protokolle.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Packet">
      <summary vsli:raw="Low-level Packet address.">Adresse für Low-Level-Pakete.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Pup">
      <summary vsli:raw="Address for PUP protocols.">Adresse für PUP-Protokolle.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Sna">
      <summary vsli:raw="IBM SNA address.">IBM SNA-Adresse.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unix">
      <summary vsli:raw="Unix local to host address.">UNIX-Hostadresse.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unknown">
      <summary vsli:raw="Unknown address family.">Unbekannte Adressfamilie.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unspecified">
      <summary vsli:raw="Unspecified address family.">Nicht definierte Adressfamilie.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.VoiceView">
      <summary vsli:raw="VoiceView address.">VoiceView-Adresse.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketError">
      <summary vsli:raw="Defines error codes for the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class.">Definiert Fehlercodes für die <see cref="T:System.Net.Sockets.Socket" />-Klasse.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AccessDenied">
      <summary vsli:raw="An attempt was made to access a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; in a way that is forbidden by its access permissions.">Es wurde versucht, auf eine Weise auf einen <see cref="T:System.Net.Sockets.Socket" /> zuzugreifen, die durch seine Zugriffsberechtigungen ausgeschlossen wird.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressAlreadyInUse">
      <summary vsli:raw="Only one use of an address is normally permitted.">Normalerweise ist nur das einmalige Verwenden einer Adresse zulässig.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressFamilyNotSupported">
      <summary vsli:raw="The address family specified is not supported. This error is returned if the IPv6 address family was specified and the IPv6 stack is not installed on the local machine. This error is returned if the IPv4 address family was specified and the IPv4 stack is not installed on the local machine.">Die angegebene Adressfamilie wird nicht unterstützt. Dieser Fehler wird zurückgegeben, wenn die IPv6-Adressfamilie angegeben wurde und der IPv6-Stapel nicht auf dem lokalen Computer installiert ist. Dieser Fehler wird zurückgegeben, wenn die IPv4-Adressfamilie angegeben wurde und der IPv4-Stapel nicht auf dem lokalen Computer installiert ist.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressNotAvailable">
      <summary vsli:raw="The selected IP address is not valid in this context.">Die ausgewählte IP-Adresse ist in diesem Kontext ungültig.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AlreadyInProgress">
      <summary vsli:raw="The nonblocking &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; already has an operation in progress.">Für den nicht blockierenden <see cref="T:System.Net.Sockets.Socket" /> wird bereits ein Vorgang ausgeführt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionAborted">
      <summary vsli:raw="The connection was aborted by .NET or the underlying socket provider.">Die Verbindung wurde von .NET Framework oder dem zugrunde liegenden Socketanbieter abgebrochen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionRefused">
      <summary vsli:raw="The remote host is actively refusing a connection.">Der Remotehost lehnt eine Verbindung aktiv ab.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionReset">
      <summary vsli:raw="The connection was reset by the remote peer.">Die Verbindung wurde vom Remotepeer zurückgesetzt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.DestinationAddressRequired">
      <summary vsli:raw="A required address was omitted from an operation on a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Eine erforderliche Adresse wurde von einem Vorgang für einen <see cref="T:System.Net.Sockets.Socket" /> ausgelassen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Disconnecting">
      <summary vsli:raw="A graceful shutdown is in progress.">Ein ordnungsgemäßes Herunterfahren wird ausgeführt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Fault">
      <summary vsli:raw="An invalid pointer address was detected by the underlying socket provider.">Vom zugrunde liegenden Socketanbieter wurde eine ungültige Zeigeradresse erkannt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostDown">
      <summary vsli:raw="The operation failed because the remote host is down.">Beim Vorgang ist ein Fehler aufgetreten, da der Remotehost ausgefallen ist.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostNotFound">
      <summary vsli:raw="No such host is known. The name is not an official host name or alias.">Ein solcher Host ist nicht bekannt. Der Name ist kein offizieller Hostname oder Alias.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostUnreachable">
      <summary vsli:raw="There is no network route to the specified host.">Es ist keine Netzwerkroute zum angegebenen Host vorhanden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InProgress">
      <summary vsli:raw="A blocking operation is in progress.">Ein blockierender Vorgang wird ausgeführt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Interrupted">
      <summary vsli:raw="A blocking &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; call was canceled.">Ein blockierender <see cref="T:System.Net.Sockets.Socket" />-Aufruf wurde abgebrochen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InvalidArgument">
      <summary vsli:raw="An invalid argument was supplied to a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; member.">Für einen <see cref="T:System.Net.Sockets.Socket" />-Member wurde ein ungültiges Argument angegeben.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IOPending">
      <summary vsli:raw="The application has initiated an overlapped operation that cannot be completed immediately.">Die Anwendung hat einen überlappenden Vorgang initiiert, der nicht sofort abgeschlossen werden kann.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IsConnected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is already connected.">Es ist bereits eine Verbindung mit dem <see cref="T:System.Net.Sockets.Socket" /> vorhanden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.MessageSize">
      <summary vsli:raw="The datagram is too long.">Das Datagramm ist zu lang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkDown">
      <summary vsli:raw="The network is not available.">Das Netzwerk ist nicht verfügbar.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkReset">
      <summary vsli:raw="The application tried to set &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.KeepAlive&quot; /&gt; on a connection that has already timed out.">Die Anwendung hat versucht, <see cref="F:System.Net.Sockets.SocketOptionName.KeepAlive" /> für eine Verbindung festzulegen, deren Zeitlimit bereits überschritten ist.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkUnreachable">
      <summary vsli:raw="No route to the remote host exists.">Es ist keine Route zum Remotehost vorhanden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoBufferSpaceAvailable">
      <summary vsli:raw="No free buffer space is available for a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation.">Für einen <see cref="T:System.Net.Sockets.Socket" />-Vorgang ist kein freier Pufferspeicher verfügbar.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoData">
      <summary vsli:raw="The requested name or IP address was not found on the name server.">Der angeforderte Name oder die angeforderte IP-Adresse wurde auf dem Namenserver nicht gefunden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoRecovery">
      <summary vsli:raw="The error is unrecoverable or the requested database cannot be located.">Der Fehler kann nicht behoben werden, oder die angeforderte Datenbank kann nicht gefunden werden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotConnected">
      <summary vsli:raw="The application tried to send or receive data, and the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not connected.">Die Anwendung hat versucht, Daten zu senden oder zu empfangen, und es ist keine Verbindung mit dem <see cref="T:System.Net.Sockets.Socket" /> vorhanden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotInitialized">
      <summary vsli:raw="The underlying socket provider has not been initialized.">Der zugrunde liegende Socketanbieter wurde nicht initialisiert.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotSocket">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation was attempted on a non-socket.">Es wurde versucht, einen <see cref="T:System.Net.Sockets.Socket" />-Vorgang für ein Element auszuführen, das keinen Socket darstellt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationAborted">
      <summary vsli:raw="The overlapped operation was aborted due to the closure of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Der überlappende Vorgang wurde abgebrochen, weil der <see cref="T:System.Net.Sockets.Socket" /> geschlossen wurde.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationNotSupported">
      <summary vsli:raw="The address family is not supported by the protocol family.">Die Adressfamilie wird nicht von der Protokollfamilie unterstützt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProcessLimit">
      <summary vsli:raw="Too many processes are using the underlying socket provider.">Der zugrunde liegende Socketanbieter wird von zu vielen Prozessen verwendet.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolFamilyNotSupported">
      <summary vsli:raw="The protocol family is not implemented or has not been configured.">Die Protokollfamilie wurde nicht implementiert oder konfiguriert.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolNotSupported">
      <summary vsli:raw="The protocol is not implemented or has not been configured.">Das Protokoll wurde nicht implementiert oder konfiguriert.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolOption">
      <summary vsli:raw="An unknown, invalid, or unsupported option or level was used with a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Eine unbekannte, ungültige, oder nicht unterstützte Option oder Ebene wurde mit einem <see cref="T:System.Net.Sockets.Socket" /> verwendet.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolType">
      <summary vsli:raw="The protocol type is incorrect for this &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Der Protokolltyp ist für diesen <see cref="T:System.Net.Sockets.Socket" /> falsch.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Shutdown">
      <summary vsli:raw="A request to send or receive data was disallowed because the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has already been closed.">Eine Anforderung zum Senden oder Empfangen von Daten wurde nicht zugelassen, da der <see cref="T:System.Net.Sockets.Socket" /> bereits geschlossen wurde.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketError">
      <summary vsli:raw="An unspecified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; error has occurred.">Ein unbekannter <see cref="T:System.Net.Sockets.Socket" />-Fehler ist aufgetreten.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketNotSupported">
      <summary vsli:raw="The support for the specified socket type does not exist in this address family.">In dieser Adressfamilie ist die Unterstützung für den angegebenen Sockettyp nicht vorhanden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Success">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation succeeded.">Der <see cref="T:System.Net.Sockets.Socket" />-Vorgang war erfolgreich.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SystemNotReady">
      <summary vsli:raw="The network subsystem is unavailable.">Das Netzwerksubsystem ist nicht verfügbar.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TimedOut">
      <summary vsli:raw="The connection attempt timed out, or the connected host has failed to respond.">Das Zeitlimit für das Herstellen der Verbindung wurde überschritten, oder der verbundene Host reagiert nicht.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TooManyOpenSockets">
      <summary vsli:raw="There are too many open sockets in the underlying socket provider.">Im zugrunde liegenden Socketanbieter sind zu viele offene Sockets vorhanden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TryAgain">
      <summary vsli:raw="The name of the host could not be resolved. Try again later.">Der Name des Hosts konnte nicht aufgelöst werden. Wiederholen Sie den Vorgang später.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TypeNotFound">
      <summary vsli:raw="The specified class was not found.">Die angegebene Klasse wurde nicht gefunden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.VersionNotSupported">
      <summary vsli:raw="The version of the underlying socket provider is out of range.">Die Version des zugrunde liegenden Socketanbieters liegt außerhalb des gültigen Bereichs.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.WouldBlock">
      <summary vsli:raw="An operation on a nonblocking socket cannot be completed immediately.">Ein Vorgang für ein nicht blockierendes Socket kann nicht sofort abgeschlossen werden.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketException">
      <summary vsli:raw="The exception that is thrown when a socket error occurs.">Die beim Auftreten eines Socketfehlers ausgelöste Ausnahme.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class with the last operating system error code.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SocketException" />-Klasse mit dem zuletzt aufgetretenen Fehlercode des Betriebssystems.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class with the specified error code.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SocketException" />-Klasse mit dem angegebenen Fehlercode.</summary>
      <param name="errorCode" vsli:raw="The error code that indicates the error that occurred.">Der Fehlercode, der den aufgetretenen Fehler angibt.</param>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class from the specified instances of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; classes.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SocketException" />-Klasse aus den angegebenen Instanzen der <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Klasse und der <see cref="T:System.Runtime.Serialization.StreamingContext" />-Klasse.</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance that contains the information that is required to serialize the new &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; instance.">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Instanz mit den zum Serialisieren der neuen <see cref="T:System.Net.Sockets.SocketException" />-Instanz erforderlichen Informationen.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; instance.">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der das Ziel des serialisierten Streams angibt, der der neuen <see cref="T:System.Net.Sockets.SocketException" />-Instanz zugeordnet ist.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketException.ErrorCode">
      <summary vsli:raw="Gets the error code that is associated with this exception.">Ruft den dieser Ausnahme zugeordneten Fehlercode ab.</summary>
      <returns vsli:raw="An integer error code that is associated with this exception.">Der dieser Ausnahme zugeordnete ganzzahlige Fehlercode.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.Message">
      <summary vsli:raw="Gets the error message that is associated with this exception.">Ruft die dieser Ausnahme zugeordnete Fehlermeldung ab.</summary>
      <returns vsli:raw="A string that contains the error message.">Eine Zeichenfolge, die die Fehlermeldung enthält.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.SocketErrorCode">
      <summary vsli:raw="Gets the error code that is associated with this exception.">Ruft den dieser Ausnahme zugeordneten Fehlercode ab.</summary>
      <returns vsli:raw="An integer error code that is associated with this exception.">Der dieser Ausnahme zugeordnete ganzzahlige Fehlercode.</returns>
    </member>
    <member name="T:System.Net.TransportContext">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; class provides additional context about the underlying transport layer.">Die <see cref="T:System.Net.TransportContext" />-Klasse stellt zusätzlichen Kontext zur zugrunde liegenden Transportschicht bereit.</summary>
    </member>
    <member name="M:System.Net.TransportContext.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Net.TransportContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)">
      <summary vsli:raw="Retrieves the requested channel binding.">Ruft die angeforderte Channelbindung ab.</summary>
      <param name="kind" vsli:raw="The type of channel binding to retrieve.">Der Typ der abzurufenden Channelbindung.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;kind&quot; /&gt; is must be &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint&quot; /&gt; for use with the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; retrieved from the &lt;see cref=&quot;P:System.Net.HttpListenerRequest.TransportContext&quot; /&gt; property.">
        <paramref name="kind" /> muss <see cref="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint" /> für die Verwendung mit <see cref="T:System.Net.TransportContext" /> sein, das aus der <see cref="P:System.Net.HttpListenerRequest.TransportContext" />-Eigenschaft abgerufen wird.</exception>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the channel binding is not supported by the current transport or by the operating system.">Das angeforderte <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> oder <see langword="null" />, wenn die Channelbindung nicht vom aktuellen Transport- oder Betriebssystem unterstützt wird.</returns>
    </member>
    <member name="T:System.Security.Authentication.CipherAlgorithmType">
      <summary vsli:raw="Defines the possible cipher algorithms for the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; class.">Definiert die möglichen Verschlüsselungsverfahrensalgorithmen für die <see cref="T:System.Net.Security.SslStream" />-Klasse.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm.">Der AES-Algorithmus (Advanced Encryption Standard).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes128">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 128 bit key.">Der AES-Algorithmus (Advanced Encryption Standard) mit einem 128-Bit-Schlüssel.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes192">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 192 bit key.">Der AES-Algorithmus (Advanced Encryption Standard) mit einem 192-Bit-Schlüssel.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes256">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 256 bit key.">Der AES-Algorithmus (Advanced Encryption Standard) mit einem 256-Bit-Schlüssel.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Des">
      <summary vsli:raw="The Data Encryption Standard (DES) algorithm.">Der DES-Algorithmus (Data Encryption Standard).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.None">
      <summary vsli:raw="No encryption algorithm is used.">Es wird kein Verschlüsselungsalgorithmus verwendet.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Null">
      <summary vsli:raw="No encryption is used with a Null cipher algorithm.">Keine Verschlüsselung wird mit einem NULL-Verschlüsselungsverfahrensalgorithmus verwendet.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc2">
      <summary vsli:raw="Rivest's Code 2 (RC2) algorithm.">RC2-Algorithmus (Rivest's Code 2).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc4">
      <summary vsli:raw="Rivest's Code 4 (RC4) algorithm.">RC4-Algorithmus (Rivest's Code 4).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.TripleDes">
      <summary vsli:raw="The Triple Data Encryption Standard (3DES) algorithm.">Der 3DES-Algorithmus (Triple Data Encryption Standard).</summary>
    </member>
    <member name="T:System.Security.Authentication.ExchangeAlgorithmType">
      <summary vsli:raw="Specifies the algorithm used to create keys shared by the client and server.">Gibt den Algorithmus zum Erstellen von Schlüsseln an, die vom Client und Server gemeinsam verwendet werden.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.DiffieHellman">
      <summary vsli:raw="The Diffie Hellman ephemeral key exchange algorithm.">Der Diffie-Hellman-Algorithmus für den Austausch von flüchtigen Schlüsseln.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.None">
      <summary vsli:raw="No key exchange algorithm is used.">Es wird kein Algorithmus für den Schlüsselaustausch verwendet.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaKeyX">
      <summary vsli:raw="The RSA public-key exchange algorithm.">Der RSA-Algorithmus für den Austausch öffentlicher Schlüssel.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaSign">
      <summary vsli:raw="The RSA public-key signature algorithm.">Der RSA-Algorithmus für Signaturen öffentlicher Schlüssel.</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBinding">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class encapsulates a pointer to the opaque data used to bind an authenticated transaction to a secure channel.">Die <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />-Klasse kapselt einen Zeiger auf die nicht transparenten Daten, die verwendet wurden, um eine authentifizierte Transaktion an einen sicheren Channel zu binden.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />-Klasse.</summary>
      <param name="ownsHandle" vsli:raw="A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.">Ein boolescher Wert, der angibt, ob die Anwendung das SafeHandle auf einen systemeigenen Arbeitsspeicherbereich mit den Bytedaten besitzt, die an systemeigene Aufrufe übergeben werden, die erweiterten Schutz für die integrierte Windows-Authentifizierung bereitstellen.</param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size&quot; /&gt; property gets the size, in bytes, of the channel binding token associated with the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; instance.">Die <see cref="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size" />-Eigenschaft ruft die Größe des der <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />-Instanz zugeordneten Channelbindungstokens in Bytes ab.</summary>
      <returns vsli:raw="The size, in bytes, of the channel binding token in the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; instance.">Die Größe des Channelbindungstokens in der <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />-Instanz in Bytes.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind&quot; /&gt; enumeration represents the kinds of channel bindings that can be queried from secure channels.">Die <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind" />-Enumeration stellt die Arten von Channelbindungen dar, die von sicheren Channels abgefragt werden können.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint">
      <summary vsli:raw="A channel binding unique to a given endpoint (a TLS server certificate, for example).">Eine eindeutige Channelbindung für einen angegebenen Endpunkt (z. B. ein TLS-Serverzertifikat).</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique">
      <summary vsli:raw="A channel binding completely unique to a given channel (a TLS session key, for example).">Eine vollständig eindeutige Channelbindung für einen angegebenen Channel (z. B. ein TLS-Sitzungsschlüssel).</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unknown">
      <summary vsli:raw="An unknown channel binding type.">Ein unbekannter Channelbindungstyp.</summary>
    </member>
    <member name="T:System.Security.Authentication.HashAlgorithmType">
      <summary vsli:raw="Specifies the algorithm used for generating message authentication codes (MACs).">Gibt den Algorithmus zum Generieren von Nachrichtenauthentifizierungscodes (MACs) an.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Md5">
      <summary vsli:raw="&lt;para&gt;The Message Digest 5 (MD5) hashing algorithm.&lt;/para&gt;&lt;para&gt;Due to collision problems with MD5, Microsoft recommends SHA256.&lt;/para&gt;">Der Message Digest 5-Hashalgorithmus (MD5).</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.None">
      <summary vsli:raw="No hashing algorithm is used.">Es wird kein Hashalgorithmus verwendet.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha1">
      <summary vsli:raw="&lt;para&gt;The Secure Hashing Algorithm (SHA1).&lt;/para&gt;&lt;para&gt;Due to collision problems with MD5, Microsoft recommends SHA256.&lt;/para&gt;">Der Secure Hashing Algorithm (SHA-1).</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha256">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 256-bit digest.">Der SHA-2-Algorithmus (Secure Hashing Algorithm 2) mit einem 256-Bit-Hashwert.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha384">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 384-bit digest.">Der SHA-2-Algorithmus (Secure Hashing Algorithm 2) mit einem 384-Bit-Hashwert.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha512">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 512-bit digest.">Der SHA-2-Algorithmus (Secure Hashing Algorithm 2) mit einem 512-Bit-Hashwert.</summary>
    </member>
    <member name="T:System.Security.Authentication.SslProtocols">
      <summary vsli:raw="Defines the possible versions of &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt;.">Definiert die möglichen Versionen von <see cref="T:System.Security.Authentication.SslProtocols" />.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Default">
      <summary vsli:raw="Use None instead of Default. Default permits only the Secure Sockets Layer (SSL) 3.0 or Transport Layer Security (TLS) 1.0 protocols to be negotiated, and those options are now considered obsolete. Consequently, Default is not allowed in many organizations. Despite the name of this field, &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; does not use it as a default except under special circumstances.">Verwenden Sie None anstelle von Default. Default lässt nur zu, dass die Protokolle SSL 3.0 (Secure Sockets Layer) und TLS 1.0 (Transport Layer Security) ausgehandelt werden. Diese Optionen werden nun als veraltet eingestuft. Folglich ist Default in vielen Organisationen nicht zulässig. Trotz des Namens wird es von <see cref="T:System.Net.Security.SslStream" /> nicht als Standardwert verwendet, außer es bestehen besondere Umstände.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.None">
      <summary vsli:raw="Allows the operating system to choose the best protocol to use, and to block protocols that are not secure. Unless your app has a specific reason not to, you should use this field.">Ermöglicht dem Betriebssystem, das am besten geeignete Protokoll auszuwählen und unsichere Protokolle zu blockieren. Sofern in Ihrer Anwendung kein bestimmter Grund besteht, dies nicht zu tun, sollten Sie dieses Feld verwenden.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl2">
      <summary vsli:raw="Specifies the SSL 2.0 protocol. SSL 2.0 has been superseded by the TLS protocol and is provided for backward compatibility only.">Gibt das SSL 2.0-Protokoll an. SSL 2.0 wurde durch das TLS-Protokoll ersetzt und wird nur zur Abwärtskompatibilität bereitgestellt.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl3">
      <summary vsli:raw="Specifies the SSL 3.0 protocol. SSL 3.0 has been superseded by the TLS protocol and is provided for backward compatibility only.">Gibt das SSL 3.0-Protokoll an. SSL 3.0 wurde durch das TLS-Protokoll ersetzt und wird nur zur Abwärtskompatibilität bereitgestellt.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls">
      <summary vsli:raw="Specifies the TLS 1.0 security protocol. TLS 1.0 is provided for backward compatibility only. The TLS protocol is defined in IETF RFC 2246. This member is obsolete starting in .NET 7.">Gibt das TLS 1.0-Sicherheitsprotokoll an.  TLS 1,0 wird nur aus Gründen der Abwärtskompatibilität bereitgestellt. Das TLS-Protokoll wird in IETF RFC 2246 definiert.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls11">
      <summary vsli:raw="Specifies the TLS 1.1 security protocol. The TLS protocol is defined in IETF RFC 4346. This member is obsolete starting in .NET 7.">Gibt das TLS 1.1-Sicherheitsprotokoll an. Das TLS-Protokoll wird in IETF RFC 4346 definiert.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls12">
      <summary vsli:raw="Specifies the TLS 1.2 security protocol. The TLS protocol is defined in IETF RFC 5246.">Gibt das TLS 1.2-Sicherheitsprotokoll an. Das TLS-Protokoll wird in IETF RFC 5246 definiert.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls13">
      <summary vsli:raw="Specifies the TLS 1.3 security protocol. The TLS protocol is defined in IETF RFC 8446.">Gibt das TLS 1.3-Sicherheitsprotokoll an. Das TLS-Protokoll wird in IETF RFC 8446 definiert.</summary>
    </member>
  </members>
</doc>