<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Tasks.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Tasks.Parallel">
      <summary vsli:raw="Provides support for parallel loops and regions.">Proporciona compatibilidad con regiones y bucles paralelos.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Ejecuta una bucle <see langword="for" /> donde se pueden ejecutar iteraciones en paralelo, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Índice final, exclusivo.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel.">Ejecuta un bucle <see langword="for" /> en el que es posible ejecutar iteraciones en paralelo.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Índice final, exclusivo.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Ejecuta un bucle <see langword="for" /> donde se pueden ejecutar iteraciones en paralelo y configurar opciones de bucle, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Índice final, exclusivo.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel and loop options can be configured.">Ejecuta un bucle <see langword="for" /> en el que se pueden ejecutar iteraciones en paralelo y configurar las opciones de bucle.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Índice final, exclusivo.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Ejecuta un bucle <see langword="for" /> con índices de 64 bits en el que es posible ejecutar iteraciones en paralelo, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Índice final, exclusivo.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ParallelLoopResult&quot; /&gt; structure that contains information on what portion of the loop completed.">Estructura <see cref="T:System.Threading.Tasks.ParallelLoopResult" /> que contiene información sobre la parte completada del bucle.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel.">Ejecuta un bucle <see langword="for" /> con índices 64 bits en el que se pueden ejecutar iteraciones en paralelo.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Índice final, exclusivo.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Ejecuta un bucle <see langword="for" /> con índices de 64 bits en el que es posible ejecutar iteraciones en paralelo y configurar opciones de bucle, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Índice final, exclusivo.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel and loop options can be configured.">Ejecuta un bucle <see langword="for" /> con índices de 64 bits en el que se pueden ejecutar iteraciones en paralelo y configurar opciones de bucle.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Índice final, exclusivo.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Ejecuta un bucle <see langword="for" /> con datos locales del subproceso en el que es posible ejecutar iteraciones en paralelo, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Índice final, exclusivo.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Delegado de función que devuelve el estado inicial de los datos locales de cada tarea.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Delegado que realiza una acción final en el estado local de cada tarea.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Tipo de los datos locales de subprocesos.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localInit" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localFinally" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Ejecuta un bucle <see langword="for" /> con datos locales del subproceso en que es posible ejecutar iteraciones en paralelo, se pueden configurar opciones de bucle, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Índice final, exclusivo.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Delegado de función que devuelve el estado inicial de los datos locales de cada tarea.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Delegado que realiza una acción final en el estado local de cada tarea.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Tipo de los datos locales de subprocesos.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localInit" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localFinally" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes and thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Ejecuta un bucle <see langword="for" /> con índices de 64 bits y datos locales del subproceso en el que es posible ejecutar iteraciones en paralelo, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Índice final, exclusivo.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Delegado de función que devuelve el estado inicial de los datos locales de cada tarea.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Delegado que realiza una acción final en el estado local de cada tarea.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Tipo de los datos locales de subprocesos.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localInit" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localFinally" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes and thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Ejecuta un bucle <see langword="for" /> con índices de 64 bits y datos locales del subproceso en el que es posible ejecutar iteraciones en paralelo, se pueden configurar opciones de bucle, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">Índice inicial, inclusivo.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">Índice final, exclusivo.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each thread.">Delegado de función que devuelve el estado inicial de los datos locales de cada subproceso.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each thread.">Delegado que realiza una acción final en el estado local de cada subproceso.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Tipo de los datos locales de subprocesos.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localInit" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localFinally" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) en <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> donde se pueden ejecutar iteraciones en paralelo, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">Particionador ordenable que contiene el origen de datos original.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Tipo de los elementos de <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized&quot; /&gt; property in the source orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Any methods in the source orderable partitioner return &lt;see langword=&quot;null&quot; /&gt;.">La propiedad <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> del particionador ordenable <paramref name="source" /> devuelve <see langword="false" />.  
  
o bien 
La propiedad <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> del particionador ordenable de origen devuelve <see langword="false" />.  
  
o bien 
Cualquier método en el particionador ordenable de origen devuelve <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception thrown from one of the specified delegates.">Excepción que se produce en uno de los delegados especificados.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) en <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> donde se pueden ejecutar iteraciones en paralelo y configurar opciones de bucle, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">Particionador ordenable que contiene el origen de datos original.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Tipo de los elementos de <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is  &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner return &lt;see langword=&quot;null&quot; /&gt;.">La propiedad <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> del particionador ordenable <paramref name="source" /> devuelve <see langword="false" />.  
  
o bien 
La propiedad <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> del particionador ordenable <paramref name="source" /> devuelve <see langword="false" />.  
  
o bien 
La excepción que se produce cuando cualquier método del particionador ordenable <paramref name="source" /> devuelve <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">Excepción que se produce para contener una excepción generada desde uno de los delegados especificados.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) en <see cref="T:System.Collections.Concurrent.Partitioner" /> donde se pueden ejecutar iteraciones en paralelo, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">Particionador que contiene el origen de datos original.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Tipo de los elementos de <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; A method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)&quot; /&gt; method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner does not return the correct number of partitions.">La propiedad <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> del particionador <paramref name="source" /> devuelve <see langword="false" />.  
  
o bien 
Un método del particionador <paramref name="source" /> devuelve <see langword="null" />.  
  
o bien 
El método <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> del particionador <paramref name="source" /> no devuelve el número correcto de particiones.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">Excepción que se produce para contener una excepción generada desde uno de los delegados especificados.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) en <see cref="T:System.Collections.Concurrent.Partitioner" />, en la que es posible ejecutar iteraciones en paralelo.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">Particionador que contiene el origen de datos original.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Tipo de los elementos de <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is  &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)&quot; /&gt; method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner does not return the correct number of partitions.">La propiedad <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> del particionador <paramref name="source" /> devuelve <see langword="false" />.  
  
o bien 
La excepción que se produce cuando cualquier método del particionador <paramref name="source" /> devuelve <see langword="null" />.  
  
o bien 
El método <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> del particionador <paramref name="source" /> no devuelve el número correcto de particiones.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">Excepción que se produce para contener una excepción generada desde uno de los delegados especificados.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) en <see cref="T:System.Collections.Concurrent.Partitioner" /> donde se pueden ejecutar iteraciones en paralelo y configurar opciones de bucle, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">Particionador que contiene el origen de datos original.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Tipo de los elementos de <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.">La propiedad <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> del particionador <paramref name="source" /> devuelve <see langword="false" />.  
  
o bien 
La excepción que se produce cuando cualquier método del particionador <paramref name="source" /> devuelve <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">Excepción que se produce para contener una excepción generada desde uno de los delegados especificados.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel and loop options can be configured.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) en <see cref="T:System.Collections.Concurrent.Partitioner" /> donde se pueden ejecutar iteraciones en paralelo y configurar las opciones de bucle.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">Particionador que contiene el origen de datos original.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Tipo de los elementos de <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.">La propiedad <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> del particionador <paramref name="source" /> devuelve <see langword="false" />.  
  
o bien 
La excepción que se produce cuando cualquier método del particionador <paramref name="source" /> devuelve <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">Excepción que se produce para contener una excepción generada desde uno de los delegados especificados.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) con índices de 64 bits en <see cref="T:System.Collections.IEnumerable" /> donde se pueden ejecutar iteraciones en paralelo, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Origen de datos enumerable.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Tipo de los datos del origen.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) en <see cref="T:System.Collections.IEnumerable" /> donde se pueden ejecutar iteraciones en paralelo, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Origen de datos enumerable.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Tipo de los datos del origen.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) en <see cref="T:System.Collections.IEnumerable" />, en la que es posible ejecutar iteraciones en paralelo.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Origen de datos enumerable.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Tipo de los datos del origen.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) con índices de 64 bits en <see cref="T:System.Collections.IEnumerable" /> donde se pueden ejecutar iteraciones en paralelo y configurar opciones de bucle, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Origen de datos enumerable.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Tipo de los datos del origen.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) en <see cref="T:System.Collections.IEnumerable" /> donde se pueden ejecutar iteraciones en paralelo y configurar opciones de bucle, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Origen de datos enumerable.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Tipo de los datos del origen.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel and loop options can be configured.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) en <see cref="T:System.Collections.IEnumerable" /> donde se pueden ejecutar iteraciones en paralelo y configurar las opciones de bucle.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Origen de datos enumerable.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Tipo de los datos del origen.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) con datos locales del subproceso en <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> donde se pueden ejecutar iteraciones en paralelo y configurar opciones de bucle, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">Particionador ordenable que contiene el origen de datos original.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Delegado de función que devuelve el estado inicial de los datos locales de cada tarea.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Delegado que realiza una acción final en el estado local de cada tarea.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Tipo de los elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Tipo de los datos locales de subprocesos.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localInit" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localFinally" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">La propiedad <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> de <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> devuelve <see langword="false" /> o el particionador devuelve particiones <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes and  with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel , loop options can be configured, and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) con índices de 64 bits y datos locales del subproceso en <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> donde se pueden ejecutar iteraciones en paralelo y configurar opciones de bucle, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">Particionador ordenable que contiene el origen de datos original.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Delegado de función que devuelve el estado inicial de los datos locales de cada tarea.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Delegado que realiza una acción final en el estado local de cada tarea.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Tipo de los elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Tipo de los datos locales de subprocesos.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; or &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localInit" /> o <paramref name="localFinally" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">La propiedad <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> de <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> devuelve <see langword="false" /> o el particionador devuelve particiones <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) con datos locales del subproceso en <see cref="T:System.Collections.Concurrent.Partitioner" /> donde se pueden ejecutar iteraciones en paralelo, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">Particionador que contiene el origen de datos original.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Delegado de función que devuelve el estado inicial de los datos locales de cada tarea.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Delegado que realiza una acción final en el estado local de cada tarea.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Tipo de los elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Tipo de los datos locales de subprocesos.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localInit" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localFinally" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">La propiedad <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> de <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> devuelve <see langword="false" /> o el particionador devuelve particiones <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation  with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) con datos locales del subproceso en <see cref="T:System.Collections.Concurrent.Partitioner" /> donde se pueden ejecutar iteraciones en paralelo y configurar opciones de bucle, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">Particionador que contiene el origen de datos original.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Delegado de función que devuelve el estado inicial de los datos locales de cada tarea.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Delegado que realiza una acción final en el estado local de cada tarea.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">Tipo de los elementos de <paramref name="source" />.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Tipo de los datos locales de subprocesos.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localInit" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localFinally" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">La propiedad <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> de <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> devuelve <see langword="false" /> o el particionador devuelve particiones <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) con datos locales del subproceso en <see cref="T:System.Collections.IEnumerable" /> donde se pueden ejecutar iteraciones en paralelo, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Origen de datos enumerable.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Delegado de función que devuelve el estado inicial de los datos locales de cada tarea.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Delegado que realiza una acción final en el estado local de cada tarea.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Tipo de los datos del origen.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Tipo de los datos locales de subprocesos.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localInit" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localFinally" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) con datos locales del subproceso en <see cref="T:System.Collections.IEnumerable" /> donde se pueden ejecutar iteraciones en paralelo, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Origen de datos enumerable.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Delegado de función que devuelve el estado inicial de los datos locales de cada tarea.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Delegado que realiza una acción final en el estado local de cada tarea.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Tipo de los datos del origen.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Tipo de los datos locales de subprocesos.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localInit" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localFinally" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) con datos locales del subproceso en <see cref="T:System.Collections.IEnumerable" /> donde se pueden ejecutar iteraciones en paralelo y configurar opciones de bucle, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Origen de datos enumerable.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Delegado de función que devuelve el estado inicial de los datos locales de cada tarea.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Delegado que realiza una acción final en el estado local de cada tarea.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Tipo de los datos del origen.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Tipo de los datos locales de subprocesos.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localInit" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localFinally" /> es <see langword="null" />.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data and 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">Ejecuta una operación <see langword="foreach" /> (<see langword="For Each" /> en Visual Basic) con índices de 64 bits y datos locales del subproceso en <see cref="T:System.Collections.IEnumerable" /> donde se pueden ejecutar iteraciones en paralelo y configurar opciones de bucle, y el estado del bucle se puede supervisar y manipular.</summary>
      <param name="source" vsli:raw="An enumerable data source.">Origen de datos enumerable.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">Delegado de función que devuelve el estado inicial de los datos locales de cada tarea.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">Delegado que se invoca una vez por cada iteración.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">Delegado que realiza una acción final en el estado local de cada tarea.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">Tipo de los datos del origen.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">Tipo de los datos locales de subprocesos.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="source" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="body" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localInit" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="localFinally" /> es <see langword="null" />.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <see cref="T:System.Threading.CancellationToken" /> en el argumento <paramref name="parallelOptions" /> se cancela.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">La excepción que contiene todas las excepciones individuales producidas en todos los subprocesos.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">Estructura que contiene información sobre qué parte del bucle se completó.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
      <summary vsli:raw="Executes each of the provided actions, possibly in parallel.">Ejecuta cada una de las acciones proporcionadas, posiblemente en paralelo.</summary>
      <param name="actions" vsli:raw="An array of &lt;see cref=&quot;T:System.Action&quot; /&gt; to execute.">Matriz de <see cref="T:System.Action" /> que se va a ejecutar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="actions" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown when any action in the &lt;paramref name=&quot;actions&quot; /&gt; array throws an exception.">La excepción que se produce cuando cualquier acción de la matriz <paramref name="actions" /> produce una excepción.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; array contains a &lt;see langword=&quot;null&quot; /&gt; element.">La matriz <paramref name="actions" /> contiene un elemento <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
      <summary vsli:raw="Executes each of the provided actions, possibly in parallel, unless the operation is cancelled by the user.">Ejecuta todas las acciones proporcionadas, posiblemente en paralelo, a menos que el usuario cancele la operación.</summary>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">Objeto que configura el comportamiento de esta operación.</param>
      <param name="actions" vsli:raw="An array of actions to execute.">Matriz de acciones que se va a ejecutar.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; is set.">
        <see cref="T:System.Threading.CancellationToken" /> en el estado <paramref name="parallelOptions" /> está establecido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="actions" /> es <see langword="null" />.  
  
o bien 
El argumento <paramref name="parallelOptions" /> es <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown when any action in the &lt;paramref name=&quot;actions&quot; /&gt; array throws an exception.">La excepción que se produce cuando cualquier acción de la matriz <paramref name="actions" /> produce una excepción.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; array contains a &lt;see langword=&quot;null&quot; /&gt; element.">La matriz <paramref name="actions" /> contiene un elemento <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">El objeto <see cref="T:System.Threading.CancellationTokenSource" /> asociado a <see cref="T:System.Threading.CancellationToken" /> en el <paramref name="parallelOptions" /> se ha desechado.</exception>
    </member>
    <member name="T:System.Threading.Tasks.ParallelLoopResult">
      <summary vsli:raw="Provides completion status on the execution of a &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop.">Proporciona el estado de realización en la ejecución de un bucle <see cref="T:System.Threading.Tasks.Parallel" />.</summary>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted">
      <summary vsli:raw="Gets whether the loop ran to completion, such that all iterations of the loop were executed and the loop didn't receive a request to end prematurely.">Obtiene un valor que indica si el bucle se ejecutó hasta completarse, como que se ejecutaron todas las iteraciones del bucle y que el bucle no recibió ninguna solicitud para finalizar prematuramente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the loop ran to completion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es true si el bucle se ejecutó hasta completarse; de lo contrario, es false.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
      <summary vsli:raw="Gets the index of the lowest iteration from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called.">Obtiene el índice de la iteración más baja desde la que se llamó a <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" />.</summary>
      <returns vsli:raw="Returns an integer that represents the lowest iteration from which the Break statement was called.">Devuelve un entero que representa la iteración más baja desde la que se llamó a la instrucción Break.</returns>
    </member>
    <member name="T:System.Threading.Tasks.ParallelLoopState">
      <summary vsli:raw="Enables iterations of parallel loops to interact with other iterations. An instance of this class is provided by the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; class to each loop; you can not create instances in your code.">Permite las iteraciones de bucles paralelos para interactuar con otras iteraciones. La clase <see cref="T:System.Threading.Tasks.Parallel" /> proporciona una instancia de esta clase a cada bucle; no se pueden crear instancias en el código.</summary>
    </member>
    <member name="M:System.Threading.Tasks.ParallelLoopState.Break">
      <summary vsli:raw="Communicates that the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop should cease execution of iterations beyond the current iteration at the system's earliest convenience.">Comunica que, en cuanto pueda el sistema, el bucle <see cref="T:System.Threading.Tasks.Parallel" /> debe cesar la ejecución de iteraciones después de la iteración actual.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method was previously called. &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; and &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; may not be used in combination by iterations of the same loop.">El método <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> se definió previamente. Las iteraciones del mismo bucle no pueden utilizar <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> y <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> en combinación.</exception>
    </member>
    <member name="M:System.Threading.Tasks.ParallelLoopState.Stop">
      <summary vsli:raw="Communicates that the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop should cease execution at the system's earliest convenience.">Comunica que el bucle <see cref="T:System.Threading.Tasks.Parallel" /> debe cesar la ejecución en cuanto pueda el sistema.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; method was called previously. &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; and &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; may not be used in combination by iterations of the same loop.">Se ha llamado anteriormente al método <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" />. Las iteraciones del mismo bucle no pueden utilizar <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> y <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> en combinación.</exception>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.IsExceptional">
      <summary vsli:raw="Gets whether any iteration of the loop has thrown an exception that went unhandled by that iteration.">Obtiene si alguna iteración del bucle causó una excepción que la iteración no controló.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an unhandled exception was thrown; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si se produjo una excepción no controlada; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.IsStopped">
      <summary vsli:raw="Gets whether any iteration of the loop has called the &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method.">Obtiene si alguna iteración del bucle llamó al método <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any iteration has stopped the loop by calling the &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si cualquier iteración ha detenido el bucle llamando al <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> método; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration">
      <summary vsli:raw="Gets the lowest iteration of the loop from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called.">Obtiene la iteración más baja del bucle desde el que se llamó a <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" />.</summary>
      <returns vsli:raw="The lowest iteration from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called. In the case of a &lt;see cref=&quot;M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})&quot; /&gt; loop, the value is based on an internally-generated index.">Iteración más baja desde la que se llamó a <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" />. En el caso de un bucle <see cref="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" />, el valor está basado en un índice generado internamente.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration">
      <summary vsli:raw="Gets whether the current iteration of the loop should exit based on requests made by this or other iterations.">Obtiene si la iteración actual del bucle debe salir basándose en las solicitudes realizadas por esta u otras iteraciones.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current iteration should exit; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la iteración actual debería terminar; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Threading.Tasks.ParallelOptions">
      <summary vsli:raw="Stores options that configure the operation of methods on the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; class.">Almacena las opciones que configuran el funcionamiento de los métodos en la clase <see cref="T:System.Threading.Tasks.Parallel" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.ParallelOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.CancellationToken">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance.">Obtiene o establece el <see cref="T:System.Threading.CancellationToken" /> asociado a esta instancia <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
      <returns vsli:raw="The token that is associated with this instance.">Token que está asociado a esta instancia.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism">
      <summary vsli:raw="Gets or sets the maximum number of concurrent tasks enabled by this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance.">Obtiene o establece el número máximo de tareas simultáneas habilitadas por esta instancia <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property is being set to zero or to a value that is less than -1.">La propiedad se establece en cero o en un valor que es menor que -1.</exception>
      <returns vsli:raw="An integer that represents the maximum degree of parallelism.">Entero que representa el grado máximo de paralelismo.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.TaskScheduler">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Threading.Tasks.TaskScheduler&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance. Setting this property to null indicates that the current scheduler should be used.">Obtiene o establece el <see cref="T:System.Threading.Tasks.TaskScheduler" /> asociado a esta instancia <see cref="T:System.Threading.Tasks.ParallelOptions" />. Al establecer esta propiedad en null, se indica que no debe usarse el programador actual.</summary>
      <returns vsli:raw="The task scheduler that is associated with this instance.">Programador de tareas asociado a esta instancia.</returns>
    </member>
  </members>
</doc>