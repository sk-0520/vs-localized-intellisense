<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Numerics</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.BigInteger">
      <summary vsli:raw="Represents an arbitrarily large signed integer.">表示任意大、帶正負號的整數。</summary>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using the values in a byte array.">使用位元組陣列中的值，初始化 <see cref="T:System.Numerics.BigInteger" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="An array of byte values in little-endian order.">位元組由小到大順序的位元組值陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">使用 <see cref="T:System.Numerics.BigInteger" /> 值，初始化 <see cref="T:System.Decimal" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="A decimal number.">十進位數字。</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a double-precision floating-point value.">使用雙精確度浮點值，初始化 <see cref="T:System.Numerics.BigInteger" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="A double-precision floating-point value.">雙精確度浮點值。</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Double.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;.">
        <paramref name="value" /> 為 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />。</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a 32-bit signed integer value.">使用 32 位元帶正負號的整數值，初始化 <see cref="T:System.Numerics.BigInteger" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="A 32-bit signed integer.">32 位元帶正負號的整數。</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a 64-bit signed integer value.">使用 64 位元帶正負號的整數值，初始化 <see cref="T:System.Numerics.BigInteger" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="A 64-bit signed integer.">64 位元帶正負號的整數。</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using the values in a read-only span of bytes, and optionally indicating the signing encoding and the endianness byte order.">使用唯讀位元組範圍中的值並選擇性指出是否帶正負號與無大小順序的位元組順序，來初始化 <see cref="T:System.Numerics.BigInteger" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="A read-only span of bytes representing the big integer.">代表大整數的唯讀位元組範圍。</param>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate &lt;paramref name=&quot;value&quot; /&gt; uses unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt; (the default value).">
        <see langword="true" /> 以指出 <paramref name="value" /> 使用不帶正負號的編碼；否則為 <see langword="false" /> (預設值)。</param>
      <param name="isBigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate &lt;paramref name=&quot;value&quot; /&gt; is in big-endian byte order; otherwise, &lt;see langword=&quot;false&quot; /&gt;  (the default value).">
        <see langword="true" /> 以指出 <paramref name="value" /> 是位元組由大到小位元組順序；否則為 <see langword="false" />  (預設值)。</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a single-precision floating-point value.">使用單精確度浮點值，初始化 <see cref="T:System.Numerics.BigInteger" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="A single-precision floating-point value.">單精確度浮點值。</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Single.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Single.NegativeInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Single.PositiveInfinity&quot; /&gt;.">
        <paramref name="value" /> 為 <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.NegativeInfinity" /> 或 <see cref="F:System.Single.PositiveInfinity" />。</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using an unsigned 32-bit integer value.">使用不帶正負號的 32 位元整數值，初始化 <see cref="T:System.Numerics.BigInteger" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="An unsigned 32-bit integer value.">32 位元不帶正負號的整數值。</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure with an unsigned 64-bit integer value.">使用不帶正負號的 64 位元整數值，初始化 <see cref="T:System.Numerics.BigInteger" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="An unsigned 64-bit integer.">不帶正負號的 64 位元整數。</param>
    </member>
    <member name="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
      <summary vsli:raw="Gets the absolute value of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object.">取得 <see cref="T:System.Numerics.BigInteger" /> 物件的絕對值。</summary>
      <param name="value" vsli:raw="A number.">數字。</param>
      <returns vsli:raw="The absolute value of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> 的絕對值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Adds two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values and returns the result.">兩個 <see cref="T:System.Numerics.BigInteger" /> 值相加，並傳回結果。</summary>
      <param name="left" vsli:raw="The first value to add.">要相加的第一個值。</param>
      <param name="right" vsli:raw="The second value to add.">要相加的第二個值。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 和 <paramref name="right" /> 的總和。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.">比較兩個 <see cref="T:System.Numerics.BigInteger" /> 值並傳回整數，這個整數表示第一個值小於、等於或大於第二個值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="A signed integer that indicates the relative values of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;left&quot; /&gt; equals &lt;paramref name=&quot;right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的整數，表示 <paramref name="left" /> 和 <paramref name="right" /> 的相對值，如下表所示。  
  
 <list type="table"><listheader><term> 值</term><description> 條件</description></listheader><item><term> 小於零</term><description><paramref name="left" /> 小於 <paramref name="right" />。</description></item><item><term> 零</term><description><paramref name="left" />等於 <paramref name="right" />。</description></item><item><term> 大於零</term><description><paramref name="left" /> 大於 <paramref name="right" />。</description></item></list></returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
      <summary vsli:raw="Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.">比較這個執行個體與帶正負號的 64 位元整數，並且傳回整數，這個整數表示這個執行個體的值小於、等於或大於帶正負號 64 位元整數的值。</summary>
      <param name="other" vsli:raw="The signed 64-bit integer to compare.">要比較的帶正負號 64 位元整數。</param>
      <returns vsli:raw="A signed integer value that indicates the relationship of this instance to &lt;paramref name=&quot;other&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The current instance is less than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; The current instance equals &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; The current instance is greater than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的整數值，表示這個執行個體與 <paramref name="other" /> 的關聯性，如下表所示。  
  
 <list type="table"><listheader><term> 傳回值</term><description> 描述</description></listheader><item><term> 小於零</term><description> 目前的執行個體小於 <paramref name="other" />。</description></item><item><term> 零</term><description> 目前的執行個體等於 <paramref name="other" />。</description></item><item><term> 大於零</term><description> 目前的執行個體大於 <paramref name="other" />。</description></item></list></returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
      <summary vsli:raw="Compares this instance to a second &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.">比較這個執行個體與第二個 <see cref="T:System.Numerics.BigInteger" />，並且傳回整數，這個整數表示這個執行個體的值小於、等於或大於指定之物件的值。</summary>
      <param name="other" vsli:raw="The object to compare.">要比較的物件。</param>
      <returns vsli:raw="A signed integer value that indicates the relationship of this instance to &lt;paramref name=&quot;other&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The current instance is less than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; The current instance equals &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; The current instance is greater than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的整數值，表示這個執行個體與 <paramref name="other" /> 的關聯性，如下表所示。  
  
 <list type="table"><listheader><term> 傳回值</term><description> 描述</description></listheader><item><term> 小於零</term><description> 目前的執行個體小於 <paramref name="other" />。</description></item><item><term> 零</term><description> 目前的執行個體等於 <paramref name="other" />。</description></item><item><term> 大於零</term><description> 目前的執行個體大於 <paramref name="other" />。</description></item></list></returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Object)">
      <summary vsli:raw="Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.">比較這個執行個體與特定物件，並且傳回一個整數，指出這個執行個體的值是小於、等於或大於特定物件的值。</summary>
      <param name="obj" vsli:raw="The object to compare.">要比較的物件。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is not a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <paramref name="obj" /> 不是 <see cref="T:System.Numerics.BigInteger" />。</exception>
      <returns vsli:raw="A signed integer that indicates the relationship of the current instance to the &lt;paramref name=&quot;obj&quot; /&gt; parameter, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The current instance is less than &lt;paramref name=&quot;obj&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; The current instance equals &lt;paramref name=&quot;obj&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; The current instance is greater than &lt;paramref name=&quot;obj&quot; /&gt;, or the &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的整數，表示目前執行個體與 <paramref name="obj" /> 參數的關聯性，如下表所示。  
  
 <list type="table"><listheader><term> 傳回值</term><description> 描述</description></listheader><item><term> 小於零</term><description> 目前的執行個體小於 <paramref name="obj" />。</description></item><item><term> 零</term><description> 目前的執行個體等於 <paramref name="obj" />。</description></item><item><term> 大於零</term><description> 目前執行個體大於 <paramref name="obj" />，或者 <paramref name="obj" /> 參數為 <see langword="null" />。</description></item></list></returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
      <summary vsli:raw="Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.">比較這個執行個體與不帶正負號的 64 位元整數，並且傳回整數，這個整數表示這個執行個體的值小於、等於或大於不帶正負號 64 位元整數的值。</summary>
      <param name="other" vsli:raw="The unsigned 64-bit integer to compare.">要比較的不帶正負號 64 位元整數。</param>
      <returns vsli:raw="A signed integer that indicates the relative value of this instance and &lt;paramref name=&quot;other&quot; /&gt;, as shown in the following table.&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;Return value&lt;/term&gt;&lt;description&gt;Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;Less than zero&lt;/term&gt;&lt;description&gt;The current instance is less than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;Zero&lt;/term&gt;&lt;description&gt;The current instance equals &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;Greater than zero&lt;/term&gt;&lt;description&gt;The current instance is greater than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的整數，表示這個執行個體與 <paramref name="other" /> 的相對值，如下表所示。
          <list type="table"><listheader><term>傳回值</term><description>描述</description></listheader><item><term>小於零</term><description>目前的執行個體小於 <paramref name="other" />。</description></item><item><term>零</term><description>目前的執行個體等於 <paramref name="other" />。</description></item><item><term>大於零</term><description>目前的執行個體大於 <paramref name="other" />。</description></item></list></returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Divides one &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by another and returns the result.">某個 <see cref="T:System.Numerics.BigInteger" /> 值除以另一個值，並且傳回結果。</summary>
      <param name="dividend" vsli:raw="The value to be divided.">做為被除數的值。</param>
      <param name="divisor" vsli:raw="The value to divide by.">做為除數的值。</param>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> 是 0 (零)。</exception>
      <returns vsli:raw="The quotient of the division.">相除的商數。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
      <summary vsli:raw="Divides one &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by another, returns the result, and returns the remainder in an output parameter.">某個 <see cref="T:System.Numerics.BigInteger" /> 值除以另一個值，傳回結果，並在輸出參數中傳回餘數。</summary>
      <param name="dividend" vsli:raw="The value to be divided.">做為被除數的值。</param>
      <param name="divisor" vsli:raw="The value to divide by.">做為除數的值。</param>
      <param name="remainder" vsli:raw="When this method returns, contains a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value that represents the remainder from the division. This parameter is passed uninitialized.">當這個方法傳回時，會包含表示相除餘數的 <see cref="T:System.Numerics.BigInteger" /> 值。 這個參數會以未初始化的狀態傳遞。</param>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> 是 0 (零)。</exception>
      <returns vsli:raw="The quotient of the division.">相除的商數。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.">傳回值，這個值表示目前執行個體與帶正負號的 64 位元整數是否有相同的值。</summary>
      <param name="other" vsli:raw="The signed 64-bit integer value to compare.">要比較的帶正負號 64 位元整數值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the signed 64-bit integer and the current instance have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果帶正負號的 64 位元整數與目前執行個體有相同的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object have the same value.">傳回值，這個值表示目前執行個體與指定的 <see cref="T:System.Numerics.BigInteger" /> 物件是否有相同的值。</summary>
      <param name="other" vsli:raw="The object to compare.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object and &lt;paramref name=&quot;other&quot; /&gt; have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個 <see cref="T:System.Numerics.BigInteger" /> 物件與 <paramref name="other" /> 有相同的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified object have the same value.">傳回值，這個值表示目前執行個體與指定的物件是否有相同的值。</summary>
      <param name="obj" vsli:raw="The object to compare.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj&quot; /&gt; argument is a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object, and its value is equal to the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="obj" /> 引數為 <see cref="T:System.Numerics.BigInteger" /> 物件，且其值等於目前 <see cref="T:System.Numerics.BigInteger" /> 執行個體的值，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.">傳回值，這個值表示目前執行個體與不帶正負號的 64 位元整數是否有相同的值。</summary>
      <param name="other" vsli:raw="The unsigned 64-bit integer to compare.">要比較的不帶正負號 64 位元整數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and the unsigned 64-bit integer have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果目前執行個體與不帶正負號的 64 位元整數有相同的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GetBitLength">
      <summary vsli:raw="Gets the number of bits required for shortest two's complement representation of the current instance without the sign bit.">取得目前執行個體沒有正負號位元的最短二補數表示所需的位元數目。</summary>
      <returns vsli:raw="The minimum non-negative number of bits in two's complement notation without the sign bit.">沒有正負號位元的二補數標記法中位元的最小非負數數字。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GetByteCount(System.Boolean)">
      <summary vsli:raw="Gets the number of bytes that will be output by &lt;see cref=&quot;M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)&quot; /&gt; and &lt;see cref=&quot;M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)&quot; /&gt;.">取得將由 <see cref="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" /> 和 <see cref="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" /> 輸出的位元組數。</summary>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示使用不帶正負號的編碼；否則為 <see langword="false" />。</param>
      <returns vsli:raw="The number of bytes.">位元組數。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object.">傳回目前 <see cref="T:System.Numerics.BigInteger" /> 物件的雜湊碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Finds the greatest common divisor of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">求兩個 <see cref="T:System.Numerics.BigInteger" /> 值的最大公因數。</summary>
      <param name="left" vsli:raw="The first value.">第一個值。</param>
      <param name="right" vsli:raw="The second value.">第二個值。</param>
      <returns vsli:raw="The greatest common divisor of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 和 <paramref name="right" /> 的最大公因數。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of a specified number.">傳回指定數字的自然 (底數為 <see langword="e" />) 對數。</summary>
      <param name="value" vsli:raw="The number whose logarithm is to be found.">要找出其對數的數字。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The natural log of &lt;paramref name=&quot;value&quot; /&gt; is out of range of the &lt;see cref=&quot;T:System.Double&quot; /&gt; data type.">
        <paramref name="value" /> 的自然對數超出 <see cref="T:System.Double" /> 資料型別範圍。</exception>
      <returns vsli:raw="The natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of &lt;paramref name=&quot;value&quot; /&gt;, as shown in the table in the Remarks section.">
        <paramref name="value" /> 的 (以 <see langword="e" /> 為底數) 自然對數，如＜備註＞一節中的表格所示。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
      <summary vsli:raw="Returns the logarithm of a specified number in a specified base.">傳回指定底數中指定數字的對數。</summary>
      <param name="value" vsli:raw="A number whose logarithm is to be found.">要找出其對數的數字。</param>
      <param name="baseValue" vsli:raw="The base of the logarithm.">對數的底數。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The log of &lt;paramref name=&quot;value&quot; /&gt; is out of range of the &lt;see cref=&quot;T:System.Double&quot; /&gt; data type.">
        <paramref name="value" /> 的對數超出 <see cref="T:System.Double" /> 資料型別範圍。</exception>
      <returns vsli:raw="The base &lt;paramref name=&quot;baseValue&quot; /&gt; logarithm of &lt;paramref name=&quot;value&quot; /&gt;, as shown in the table in the Remarks section.">
        <paramref name="baseValue" /> 的以 <paramref name="value" /> 為底數的對數，如＜備註＞一節中的表格所示。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the base 10 logarithm of a specified number.">傳回指定數字的以 10 為底數的對數。</summary>
      <param name="value" vsli:raw="A number whose logarithm is to be found.">要找出其對數的數字。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The base 10 log of &lt;paramref name=&quot;value&quot; /&gt; is out of range of the &lt;see cref=&quot;T:System.Double&quot; /&gt; data type.">
        <paramref name="value" /> 的底數 10 對數超出 <see cref="T:System.Double" /> 資料型別範圍。</exception>
      <returns vsli:raw="The base 10 logarithm of &lt;paramref name=&quot;value&quot; /&gt;, as shown in the table in the Remarks section.">
        <paramref name="value" /> 的以 10 為底數的對數，如＜備註＞一節中的表格所示。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the larger of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">傳回兩個 <see cref="T:System.Numerics.BigInteger" /> 值的較大值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="The &lt;paramref name=&quot;left&quot; /&gt; or &lt;paramref name=&quot;right&quot; /&gt; parameter, whichever is larger.">
        <paramref name="left" /> 或 <paramref name="right" /> 參數，擇一較大者。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the smaller of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">傳回兩個 <see cref="T:System.Numerics.BigInteger" /> 值的較小值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="The &lt;paramref name=&quot;left&quot; /&gt; or &lt;paramref name=&quot;right&quot; /&gt; parameter, whichever is smaller.">
        <paramref name="left" /> 或 <paramref name="right" /> 參數，擇一較小者。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs modulus division on a number raised to the power of another number.">一個數目自乘至另一個數目的乘冪後，執行模數除法。</summary>
      <param name="value" vsli:raw="The number to raise to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">具有乘冪數 <paramref name="exponent" /> 的數字。</param>
      <param name="exponent" vsli:raw="The exponent to raise &lt;paramref name=&quot;value&quot; /&gt; by.">
        <paramref name="value" /> 的乘冪指數。</param>
      <param name="modulus" vsli:raw="The number by which to divide &lt;paramref name=&quot;value&quot; /&gt; raised to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">要除以具有乘冪數 <paramref name="value" /> 之 <paramref name="exponent" /> 的數字。</param>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;modulus&quot; /&gt; is zero.">
        <paramref name="modulus" /> 為零。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;exponent&quot; /&gt; is negative.">
        <paramref name="exponent" /> 為負。</exception>
      <returns vsli:raw="The remainder after dividing &lt;paramref name=&quot;value&quot; /&gt;exponent by &lt;paramref name=&quot;modulus&quot; /&gt;.">
        <paramref name="value" />指數 除以 <paramref name="modulus" /> 後的餘數。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the product of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">傳回兩個 <see cref="T:System.Numerics.BigInteger" /> 值的乘積。</summary>
      <param name="left" vsli:raw="The first number to multiply.">要相乘的第一個數字。</param>
      <param name="right" vsli:raw="The second number to multiply.">要相乘的第二個數字。</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">
        <paramref name="left" /> 和 <paramref name="right" /> 參數的乘積。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
      <summary vsli:raw="Negates a specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">將指定的 <see cref="T:System.Numerics.BigInteger" /> 值變換正負號。</summary>
      <param name="value" vsli:raw="The value to negate.">要變換正負號的值。</param>
      <returns vsli:raw="The result of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by negative one (-1).">
        <paramref name="value" /> 參數乘以負一 (-1) 的結果。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Adds the values of two specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; objects.">兩個指定之 <see cref="T:System.Numerics.BigInteger" /> 物件的值相加。</summary>
      <param name="left" vsli:raw="The first value to add.">要相加的第一個值。</param>
      <param name="right" vsli:raw="The second value to add.">要相加的第二個值。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 和 <paramref name="right" /> 的總和。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">對兩個 <see cref="T:System.Numerics.BigInteger" /> 值執行位元 <see langword="And" /> 運算。</summary>
      <param name="left" vsli:raw="The first value.">第一個值。</param>
      <param name="right" vsli:raw="The second value.">第二個值。</param>
      <returns vsli:raw="The result of the bitwise &lt;see langword=&quot;And&quot; /&gt; operation.">位元 <see langword="And" /> 運算的結果。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">對兩個 <see cref="T:System.Numerics.BigInteger" /> 值執行位元 <see langword="Or" /> 運算。</summary>
      <param name="left" vsli:raw="The first value.">第一個值。</param>
      <param name="right" vsli:raw="The second value.">第二個值。</param>
      <returns vsli:raw="The result of the bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">位元 <see langword="Or" /> 運算的結果。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
      <summary vsli:raw="Decrements a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by 1.">
        <see cref="T:System.Numerics.BigInteger" /> 值遞減 1。</summary>
      <param name="value" vsli:raw="The value to decrement.">要遞減的值。</param>
      <returns vsli:raw="The value of the &lt;paramref name=&quot;value&quot; /&gt; parameter decremented by 1.">
        <paramref name="value" /> 參數遞減 1 後的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Divides a specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by another specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by using integer division.">使用整數除法，將指定的 <see cref="T:System.Numerics.BigInteger" /> 值除以另一個指定的 <see cref="T:System.Numerics.BigInteger" /> 值。</summary>
      <param name="dividend" vsli:raw="The value to be divided.">做為被除數的值。</param>
      <param name="divisor" vsli:raw="The value to divide by.">做為除數的值。</param>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> 是 0 (零)。</exception>
      <returns vsli:raw="The integral result of the division.">相除的整數結果。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a signed long integer value and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are equal.">傳回值，這個值表示帶正負號長整數值與 <see cref="T:System.Numerics.BigInteger" /> 值是否相等。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 與 <paramref name="right" /> 參數有相同的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and a signed long integer value are equal.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值與帶正負號長整數值是否相等。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 與 <paramref name="right" /> 參數有相同的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether the values of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; objects are equal.">傳回值，這個值表示兩個 <see cref="T:System.Numerics.BigInteger" /> 物件的值是否相等。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 與 <paramref name="right" /> 參數有相同的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and an unsigned long integer value are equal.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值與不帶正負號長整數值是否相等。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 與 <paramref name="right" /> 參數有相同的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether an unsigned long integer value and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are equal.">傳回值，這個值表示不帶正負號長整數值與 <see cref="T:System.Numerics.BigInteger" /> 值是否相等。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 與 <paramref name="right" /> 參數有相同的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs a bitwise exclusive &lt;see langword=&quot;Or&quot; /&gt; (&lt;see langword=&quot;XOr&quot; /&gt;) operation on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">對兩個 <see cref="T:System.Numerics.BigInteger" /> 值執行位元互斥 <see langword="Or" /> (<see langword="XOr" />) 運算。</summary>
      <param name="left" vsli:raw="The first value.">第一個值。</param>
      <param name="right" vsli:raw="The second value.">第二個值。</param>
      <returns vsli:raw="The result of the bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">位元 <see langword="Or" /> 運算的結果。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">定義從 <see cref="T:System.Decimal" /> 物件到 <see cref="T:System.Numerics.BigInteger" /> 值的明確轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">要轉換為 <see cref="T:System.Numerics.BigInteger" /> 的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">定義從 <see cref="T:System.Double" /> 值到 <see cref="T:System.Numerics.BigInteger" /> 值的明確轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">要轉換為 <see cref="T:System.Numerics.BigInteger" /> 的值。</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Double.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;.">
        <paramref name="value" /> 為 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" />。</exception>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned byte value.">定義從 <see cref="T:System.Numerics.BigInteger" /> 物件到不帶正負號位元組值的明確轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Byte&quot; /&gt;.">要轉換為 <see cref="T:System.Byte" /> 的值。</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Byte.MinValue&quot;&gt;Byte.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Byte.MaxValue&quot;&gt;Byte.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> 小於 <see cref="F:System.Byte.MinValue" /> 或大於 <see cref="F:System.Byte.MaxValue" />。</exception>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">定義從 <see cref="T:System.Numerics.BigInteger" /> 物件到 <see cref="T:System.Decimal" /> 值的明確轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">要轉換為 <see cref="T:System.Decimal" /> 的值。</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Decimal.MinValue&quot;&gt;Decimal.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> 小於 <see cref="F:System.Decimal.MinValue" /> 或大於 <see cref="F:System.Decimal.MaxValue" />。</exception>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">定義從 <see cref="T:System.Numerics.BigInteger" /> 物件到 <see cref="T:System.Double" /> 值的明確轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">要轉換為 <see cref="T:System.Double" /> 的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a 16-bit signed integer value.">定義從 <see cref="T:System.Numerics.BigInteger" /> 物件到 16 位元帶正負號整數值的明確轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a 16-bit signed integer.">要轉換為 16 位元帶正負號整數的值。</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Int16.MinValue&quot;&gt;Int16.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.Int16.MaxValue&quot;&gt;Int16.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> 小於 <see cref="F:System.Int16.MinValue" />，或是大於 <see cref="F:System.Int16.MaxValue" />。</exception>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a 32-bit signed integer value.">定義從 <see cref="T:System.Numerics.BigInteger" /> 物件到 32 位元帶正負號整數值的明確轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a 32-bit signed integer.">要轉換為 32 位元帶正負號整數的值。</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> 小於 <see cref="F:System.Int32.MinValue" />，或是大於 <see cref="F:System.Int32.MaxValue" />。</exception>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a 64-bit signed integer value.">定義從 <see cref="T:System.Numerics.BigInteger" /> 物件到 64 位元帶正負號整數值的明確轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a 64-bit signed integer.">要轉換為 64 位元帶正負號整數的值。</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> 小於 <see cref="F:System.Int64.MinValue" />，或是大於 <see cref="F:System.Int64.MaxValue" />。</exception>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a signed 8-bit value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Int16&quot; /&gt;.">定義從 <see cref="T:System.Numerics.BigInteger" /> 物件到帶正負號 8 位元值的明確轉換。  
  
此應用程式開發介面不符合 CLS 標準。 符合規範的替代項目為 <see cref="T:System.Int16" />。</summary>
      <param name="value" vsli:raw="The value to convert to a signed 8-bit value.">要轉換為帶正負號 8 位元值的值。</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.SByte.MinValue&quot;&gt;SByte.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.SByte.MaxValue&quot;&gt;SByte.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> 小於 <see cref="F:System.SByte.MinValue" />，或是大於 <see cref="F:System.SByte.MaxValue" />。</exception>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a single-precision floating-point value.">定義從 <see cref="T:System.Numerics.BigInteger" /> 物件到單精確度浮點值的明確轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a single-precision floating-point value.">要轉換為單精確度浮點值的值。</param>
      <returns vsli:raw="An object that contains the closest possible representation of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的最接近的可能表示。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned 16-bit integer value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">定義從 <see cref="T:System.Numerics.BigInteger" /> 物件到不帶正負號 16 位元整數值的明確轉換。  
  
此應用程式開發介面不符合 CLS 標準。 符合規範的替代項目為 <see cref="T:System.Int32" />。</summary>
      <param name="value" vsli:raw="The value to convert to an unsigned 16-bit integer.">要轉換為不帶正負號 16 位元整數的值。</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.UInt16.MinValue&quot;&gt;UInt16.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> 小於 <see cref="F:System.UInt16.MinValue" />，或是大於 <see cref="F:System.UInt16.MaxValue" />。</exception>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned 32-bit integer value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">定義從 <see cref="T:System.Numerics.BigInteger" /> 物件到不帶正負號 32 位元整數值的明確轉換。  
  
此應用程式開發介面不符合 CLS 標準。 符合規範的替代項目為 <see cref="T:System.Int64" />。</summary>
      <param name="value" vsli:raw="The value to convert to an unsigned 32-bit integer.">要轉換為不帶正負號 32 位元整數的值。</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> 小於 <see cref="F:System.UInt32.MinValue" />，或是大於 <see cref="F:System.UInt32.MaxValue" />。</exception>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned 64-bit integer value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Double&quot; /&gt;.">定義從 <see cref="T:System.Numerics.BigInteger" /> 物件到不帶正負號 64 位元整數值的明確轉換。  
  
此應用程式開發介面不符合 CLS 標準。 符合規範的替代項目為 <see cref="T:System.Double" />。</summary>
      <param name="value" vsli:raw="The value to convert to an unsigned 64-bit integer.">要轉換為不帶正負號 64 位元整數的值。</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> 小於 <see cref="F:System.UInt64.MinValue" />，或是大於 <see cref="F:System.UInt64.MaxValue" />。</exception>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Single&quot; /&gt; value to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">定義從 <see cref="T:System.Single" /> 值到 <see cref="T:System.Numerics.BigInteger" /> 值的明確轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">要轉換為 <see cref="T:System.Numerics.BigInteger" /> 的值。</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Single.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Single.PositiveInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Single.NegativeInfinity&quot; /&gt;.">
        <paramref name="value" /> 為 <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.PositiveInfinity" /> 或 <see cref="F:System.Single.NegativeInfinity" />。</exception>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is greater than a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">傳回值，這個值表示 64 位元帶正負號的整數是否大於 <see cref="T:System.Numerics.BigInteger" /> 值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 大於 <paramref name="right" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; is greater than a 64-bit signed integer value.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 是否大於 64 位元帶正負號的整數值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 大於 <paramref name="right" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值是否大於另一個 <see cref="T:System.Numerics.BigInteger" /> 值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 大於 <paramref name="right" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than a 64-bit unsigned integer.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值是否大於 64 位元不帶正負號的整數。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 大於 <paramref name="right" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than a 64-bit unsigned integer.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值是否大於 64 位元不帶正負號的整數。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 大於 <paramref name="right" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">傳回值，這個值表示 64 位元帶正負號的整數是否大於或等於 <see cref="T:System.Numerics.BigInteger" /> 值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 大於 <paramref name="right" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than or equal to a 64-bit signed integer value.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值是否大於或等於 64 位元帶正負號的整數值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 大於 <paramref name="right" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than or equal to another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值是否大於或等於另一個 <see cref="T:System.Numerics.BigInteger" /> 值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 大於 <paramref name="right" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than or equal to a 64-bit unsigned integer value.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值是否大於或等於 64 位元不帶正負號的整數值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 大於 <paramref name="right" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">傳回值，這個值表示 64 位元不帶正負號的整數是否大於或等於 <see cref="T:System.Numerics.BigInteger" /> 值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 大於 <paramref name="right" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of an unsigned byte to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">定義從不帶正負號的位元組到 <see cref="T:System.Numerics.BigInteger" /> 值的隱含轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">要轉換為 <see cref="T:System.Numerics.BigInteger" /> 的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a signed 16-bit integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">定義從帶正負號的 16 位元整數到 <see cref="T:System.Numerics.BigInteger" /> 值的隱含轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">要轉換為 <see cref="T:System.Numerics.BigInteger" /> 的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a signed 32-bit integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">定義從帶正負號的 32 位元整數到 <see cref="T:System.Numerics.BigInteger" /> 值的隱含轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">要轉換為 <see cref="T:System.Numerics.BigInteger" /> 的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a signed 64-bit integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">定義從帶正負號的 64 位元整數到 <see cref="T:System.Numerics.BigInteger" /> 值的隱含轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">要轉換為 <see cref="T:System.Numerics.BigInteger" /> 的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of an 8-bit signed integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;M:System.Numerics.BigInteger.#ctor(System.Int32)&quot; /&gt;.">定義從 8 位元帶正負號的整數到 <see cref="T:System.Numerics.BigInteger" /> 值的隱含轉換。  
  
此應用程式開發介面不符合 CLS 標準。 符合規範的替代項目為 <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />。</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">要轉換為 <see cref="T:System.Numerics.BigInteger" /> 的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a 16-bit unsigned integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger&quot; /&gt;.">定義從 16 位元不帶正負號的整數到 <see cref="T:System.Numerics.BigInteger" /> 值的隱含轉換。  
  
此應用程式開發介面不符合 CLS 標準。 符合規範的替代項目為 <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />。</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">要轉換為 <see cref="T:System.Numerics.BigInteger" /> 的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a 32-bit unsigned integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger&quot; /&gt;.">定義從 32 位元不帶正負號的整數到 <see cref="T:System.Numerics.BigInteger" /> 值的隱含轉換。  
  
此應用程式開發介面不符合 CLS 標準。 符合規範的替代項目為 <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />。</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">要轉換為 <see cref="T:System.Numerics.BigInteger" /> 的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a 64-bit unsigned integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Double&quot; /&gt;.">定義從 64 位元不帶正負號的整數到 <see cref="T:System.Numerics.BigInteger" /> 值的隱含轉換。  
  
此應用程式開發介面不符合 CLS 標準。 符合規範的替代項目為 <see cref="T:System.Double" />。</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">要轉換為 <see cref="T:System.Numerics.BigInteger" /> 的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">物件，包含 <paramref name="value" /> 參數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
      <summary vsli:raw="Increments a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by 1.">
        <see cref="T:System.Numerics.BigInteger" /> 值遞增 1。</summary>
      <param name="value" vsli:raw="The value to increment.">要遞增的值。</param>
      <returns vsli:raw="The value of the &lt;paramref name=&quot;value&quot; /&gt; parameter incremented by 1.">
        <paramref name="value" /> 參數遞增 1 後的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are not equal.">傳回值，這個值表示 64 位元帶正負號的整數與 <see cref="T:System.Numerics.BigInteger" /> 值是否不相等。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and a 64-bit signed integer are not equal.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值與 64 位元帶正負號的整數是否不相等。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; objects have different values.">傳回值，指出兩個 <see cref="T:System.Numerics.BigInteger" /> 物件是否有不同的值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and a 64-bit unsigned integer are not equal.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值與 64 位元不帶正負號的整數是否不相等。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are not equal.">傳回值，這個值表示 64 位元不帶正負號的整數與 <see cref="T:System.Numerics.BigInteger" /> 值是否不相等。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
      <summary vsli:raw="Shifts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value a specified number of bits to the left.">將 <see cref="T:System.Numerics.BigInteger" /> 值向左移動指定的位元數。</summary>
      <param name="value" vsli:raw="The value whose bits are to be shifted.">要執行位元移位的值。</param>
      <param name="shift" vsli:raw="The number of bits to shift &lt;paramref name=&quot;value&quot; /&gt; to the left.">
        <paramref name="value" /> 向左移位的位元數。</param>
      <returns vsli:raw="A value that has been shifted to the left by the specified number of bits.">已經向左移動指定之位元數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is less than a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">傳回值，這個值表示 64 位元帶正負號的整數是否小於 <see cref="T:System.Numerics.BigInteger" /> 值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 小於 <paramref name="right" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than a 64-bit signed integer.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值是否小於 64 位元帶正負號的整數。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 小於 <paramref name="right" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值是否小於另一個 <see cref="T:System.Numerics.BigInteger" /> 值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 小於 <paramref name="right" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than a 64-bit unsigned integer.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值是否小於 64 位元不帶正負號的整數。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 小於 <paramref name="right" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer is less than a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">傳回值，這個值表示 64 位元不帶正負號的整數是否小於 <see cref="T:System.Numerics.BigInteger" /> 值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 小於 <paramref name="right" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is less than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">傳回值，這個值表示 64 位元帶正負號的整數是否小於或等於 <see cref="T:System.Numerics.BigInteger" /> 值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 小於或等於 <paramref name="right" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than or equal to a 64-bit signed integer.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值是否小於或等於 64 位元帶正負號的整數。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 小於或等於 <paramref name="right" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than or equal to another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值是否小於或等於另一個 <see cref="T:System.Numerics.BigInteger" /> 值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 小於或等於 <paramref name="right" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than or equal to a 64-bit unsigned integer.">傳回值，這個值表示 <see cref="T:System.Numerics.BigInteger" /> 值是否小於或等於 64 位元不帶正負號的整數。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 小於或等於 <paramref name="right" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">傳回值，這個值表示 64 位元不帶正負號的整數是否小於或等於 <see cref="T:System.Numerics.BigInteger" /> 值。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 小於或等於 <paramref name="right" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the remainder that results from division with two specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">傳回從兩個指定的 <see cref="T:System.Numerics.BigInteger" /> 值相除所得的餘數。</summary>
      <param name="dividend" vsli:raw="The value to be divided.">做為被除數的值。</param>
      <param name="divisor" vsli:raw="The value to divide by.">做為除數的值。</param>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> 是 0 (零)。</exception>
      <returns vsli:raw="The remainder that results from the division.">相除所得到的餘數。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Multiplies two specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">將兩個指定的 <see cref="T:System.Numerics.BigInteger" /> 值相乘。</summary>
      <param name="left" vsli:raw="The first value to multiply.">要相乘的第一個值。</param>
      <param name="right" vsli:raw="The second value to multiply.">要相乘的第二個值。</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 與 <paramref name="right" /> 的乘積。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the bitwise one's complement of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">傳回 <see cref="T:System.Numerics.BigInteger" /> 值的位元一進位補數。</summary>
      <param name="value" vsli:raw="An integer value.">整數值。</param>
      <returns vsli:raw="The bitwise one's complement of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> 的位元一進位補數。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
      <summary vsli:raw="Shifts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value a specified number of bits to the right.">將 <see cref="T:System.Numerics.BigInteger" /> 值向右移動指定的位元數。</summary>
      <param name="value" vsli:raw="The value whose bits are to be shifted.">要執行位元移位的值。</param>
      <param name="shift" vsli:raw="The number of bits to shift &lt;paramref name=&quot;value&quot; /&gt; to the right.">
        <paramref name="value" /> 向右移位的位元數。</param>
      <returns vsli:raw="A value that has been shifted to the right by the specified number of bits.">已經向右移動指定之位元數的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Subtracts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value from another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">將某個 <see cref="T:System.Numerics.BigInteger" /> 值減去另一個 <see cref="T:System.Numerics.BigInteger" /> 值。</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">要被減的值 (被減數)。</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">要減去的值 (減數)。</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="right" /> 減去 <paramref name="left" /> 的結果。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
      <summary vsli:raw="Negates a specified BigInteger value.">將指定的 BigInteger 值變換正負號。</summary>
      <param name="value" vsli:raw="The value to negate.">要變換正負號的值。</param>
      <returns vsli:raw="The result of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by negative one (-1).">
        <paramref name="value" /> 參數乘以負一 (-1) 的結果。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; operand. (The sign of the operand is unchanged.)">傳回 <see cref="T:System.Numerics.BigInteger" /> 運算元的值。 (運算元的正負號不會變更)。</summary>
      <param name="value" vsli:raw="An integer value.">整數值。</param>
      <returns vsli:raw="The value of the &lt;paramref name=&quot;value&quot; /&gt; operand.">
        <paramref name="value" /> 運算元的值。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary vsli:raw="Converts the representation of a number, contained in the specified read-only span of characters, in a specified style to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">將所指定唯讀字元範圍中具有所指定樣式的數字表示法轉換為其 <see cref="T:System.Numerics.BigInteger" /> 對等項目。</summary>
      <param name="value" vsli:raw="A read-only span of characters that contains the number to convert.">包含要轉換之數字的唯讀字元範圍。</param>
      <param name="style" vsli:raw="A bitwise combination of the enumeration values that specify the permitted format of &lt;paramref name=&quot;value&quot; /&gt;.">指定 <paramref name="value" /> 可以使用的格式之列舉值的位元組合。</param>
      <param name="provider" vsli:raw="An object that provides culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">提供關於 <paramref name="value" /> 之特定文化特性格式資訊的物件。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。  
  
-或- 
 <paramref name="style" /> 包含 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 或 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 旗標和其他值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not comply with the input pattern specified by &lt;paramref name=&quot;style&quot; /&gt;.">
        <paramref name="value" /> 不符合由 <paramref name="style" /> 所指定的輸入模式。</exception>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">值，相當於以 <paramref name="value" /> 參數指定的數字。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String)">
      <summary vsli:raw="Converts the string representation of a number to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">將數字的字串表示，轉換為其相等的 <see cref="T:System.Numerics.BigInteger" />。</summary>
      <param name="value" vsli:raw="A string that contains the number to convert.">字串，包含要轉換的數字。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not in the correct format.">
        <paramref name="value" /> 的格式不正確。</exception>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">值，相當於以 <paramref name="value" /> 參數指定的數字。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
      <summary vsli:raw="Converts the string representation of a number in a specified style to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">將指定樣式中數字的字串表示轉換為其相等的 <see cref="T:System.Numerics.BigInteger" />。</summary>
      <param name="value" vsli:raw="A string that contains a number to convert.">字串，其包含要轉換的數字。</param>
      <param name="style" vsli:raw="A bitwise combination of the enumeration values that specify the permitted format of &lt;paramref name=&quot;value&quot; /&gt;.">指定 <paramref name="value" /> 可以使用的格式之列舉值的位元組合。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。  
  
-或- 
 <paramref name="style" /> 包含 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 或 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 旗標和其他值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not comply with the input pattern specified by &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt;.">
        <paramref name="value" /> 不符合由 <see cref="T:System.Globalization.NumberStyles" /> 所指定的輸入模式。</exception>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">值，相當於以 <paramref name="value" /> 參數指定的數字。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary vsli:raw="Converts the string representation of a number in a specified style and culture-specific format to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">將數字的字串表示 (使用指定樣式和特定文化特性的格式) 轉換為其相等的 <see cref="T:System.Numerics.BigInteger" />。</summary>
      <param name="value" vsli:raw="A string that contains a number to convert.">字串，其包含要轉換的數字。</param>
      <param name="style" vsli:raw="A bitwise combination of the enumeration values that specify the permitted format of &lt;paramref name=&quot;value&quot; /&gt;.">指定 <paramref name="value" /> 可以使用的格式之列舉值的位元組合。</param>
      <param name="provider" vsli:raw="An object that provides culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">提供關於 <paramref name="value" /> 之特定文化特性格式資訊的物件。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。  
  
-或- 
 <paramref name="style" /> 包含 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 或 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 旗標和其他值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not comply with the input pattern specified by &lt;paramref name=&quot;style&quot; /&gt;.">
        <paramref name="value" /> 不符合由 <paramref name="style" /> 所指定的輸入模式。</exception>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">值，相當於以 <paramref name="value" /> 參數指定的數字。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
      <summary vsli:raw="Converts the string representation of a number in a specified culture-specific format to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">將使用指定特定文化特性格式之數字的字串表示轉換為其相等的 <see cref="T:System.Numerics.BigInteger" />。</summary>
      <param name="value" vsli:raw="A string that contains a number to convert.">字串，其包含要轉換的數字。</param>
      <param name="provider" vsli:raw="An object that provides culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">提供關於 <paramref name="value" /> 之特定文化特性格式資訊的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not in the correct format.">
        <paramref name="value" /> 的格式不正確。</exception>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">值，相當於以 <paramref name="value" /> 參數指定的數字。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value to the power of a specified value.">
        <see cref="T:System.Numerics.BigInteger" /> 值自乘至指定之值的乘冪。</summary>
      <param name="value" vsli:raw="The number to raise to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">具有乘冪數 <paramref name="exponent" /> 的數字。</param>
      <param name="exponent" vsli:raw="The exponent to raise &lt;paramref name=&quot;value&quot; /&gt; by.">
        <paramref name="value" /> 的乘冪指數。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;exponent&quot; /&gt; is negative.">
        <paramref name="exponent" /> 為負。</exception>
      <returns vsli:raw="The result of raising &lt;paramref name=&quot;value&quot; /&gt; to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">
        <paramref name="value" /> 自乘至 <paramref name="exponent" /> 乘冪的結果。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs integer division on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values and returns the remainder.">對兩個 <see cref="T:System.Numerics.BigInteger" /> 值執行整數除法運算，並傳回餘數。</summary>
      <param name="dividend" vsli:raw="The value to be divided.">做為被除數的值。</param>
      <param name="divisor" vsli:raw="The value to divide by.">做為除數的值。</param>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> 是 0 (零)。</exception>
      <returns vsli:raw="The remainder after dividing &lt;paramref name=&quot;dividend&quot; /&gt; by &lt;paramref name=&quot;divisor&quot; /&gt;.">
        <paramref name="dividend" /> 除以 <paramref name="divisor" /> 後的餘數。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Subtracts one &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value from another and returns the result.">某個 <see cref="T:System.Numerics.BigInteger" /> 值減去另一個值，並且傳回結果。</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">要被減的值 (被減數)。</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">要減去的值 (減數)。</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="right" /> 減去 <paramref name="left" /> 的結果。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToByteArray">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value to a byte array.">將 <see cref="T:System.Numerics.BigInteger" /> 值轉換成位元組陣列。</summary>
      <returns vsli:raw="The value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object converted to an array of bytes.">目前 <see cref="T:System.Numerics.BigInteger" /> 物件的值，已轉換為位元組陣列。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns the value of this &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; as a byte array using the fewest number of bytes possible. If the value is zero, returns an array of one byte whose element is 0x00.">使用盡可能最少的位元組數，傳回這個 <see cref="T:System.Numerics.BigInteger" /> 的值作為位元組陣列。 如果值為零，則傳回其元素為 0x00 的一個位元組陣列。</summary>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示使用不帶正負號的編碼；否則為 <see langword="false" />。</param>
      <param name="isBigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the bytes in a big-endian byte order; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示以位元組由大到小的位元組順序寫入位元組；否則為 <see langword="false" />。</param>
      <exception cref="T:System.OverflowException" vsli:raw="If &lt;paramref name=&quot;isUnsigned&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.BigInteger.Sign&quot; /&gt; is negative.">如果 <paramref name="isUnsigned" /> 為 <see langword="true" /> 且 <see cref="P:System.Numerics.BigInteger.Sign" /> 為負值。</exception>
      <returns vsli:raw="The value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object converted to an array of bytes.">目前 <see cref="T:System.Numerics.BigInteger" /> 物件的值，已轉換為位元組陣列。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation.">將目前 <see cref="T:System.Numerics.BigInteger" /> 物件的數值，轉換為其相等的字串表示。</summary>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">目前 <see cref="T:System.Numerics.BigInteger" /> 值的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation by using the specified culture-specific formatting information.">使用指定的文化特性特定格式資訊，將目前 <see cref="T:System.Numerics.BigInteger" /> 物件的數值轉換為其對等字串表示。</summary>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">物件，提供特定文化特性格式資訊。</param>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value in the format specified by the &lt;paramref name=&quot;provider&quot; /&gt; parameter.">目前 <see cref="T:System.Numerics.BigInteger" /> 值的字串表示，採用 <paramref name="provider" /> 參數所指定的格式。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.String)">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation by using the specified format.">使用指定的格式，將目前 <see cref="T:System.Numerics.BigInteger" /> 物件的值，轉換為其相等字串表示。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">標準或自訂數值格式字串。</param>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" /> 不是有效的格式字串。</exception>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value in the format specified by the &lt;paramref name=&quot;format&quot; /&gt; parameter.">目前 <see cref="T:System.Numerics.BigInteger" /> 值的字串表示，採用 <paramref name="format" /> 參數所指定的格式。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation by using the specified format and culture-specific format information.">使用指定的格式和特定文化特性的格式資訊，將目前 <see cref="T:System.Numerics.BigInteger" /> 物件的數值，轉換為其相等的字串表示。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">標準或自訂數值格式字串。</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">物件，提供特定文化特性格式資訊。</param>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" /> 不是有效的格式字串。</exception>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value as specified by the &lt;paramref name=&quot;format&quot; /&gt; and &lt;paramref name=&quot;provider&quot; /&gt; parameters.">目前 <see cref="T:System.Numerics.BigInteger" /> 值的字串表示 (如 <paramref name="format" /> 和 <paramref name="provider" /> 參數所指定)。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
      <summary vsli:raw="Formats this big integer instance into a span of characters.">將此大整數執行個體的格式設定為字元範圍。</summary>
      <param name="destination" vsli:raw="The span of characters into which this instance will be written.">此執行個體將寫入的字元範圍。</param>
      <param name="charsWritten" vsli:raw="When the method returns, contains the length of the span in number of characters.">當方法傳回時，包含範圍的長度 (以字元數目表示)。</param>
      <param name="format" vsli:raw="A read-only span of characters that specifies the format for the formatting operation.">指定格式設定作業之格式的唯讀字元範圍。</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">物件，其提供關於 <paramref name="value" /> 的特定文化特性格式資訊。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the formatting operation succeeds; &lt;see langword=&quot;false&quot; /&gt; otherwise.">若格式設定作業成功，為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
      <summary vsli:raw="Tries to convert the string representation of a number to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">嘗試將數字的字串表示轉換成其相等的 <see cref="T:System.Numerics.BigInteger" />，並傳回一個值表示轉換是否成功。</summary>
      <param name="value" vsli:raw="The representation of a number as a read-only span of characters.">以唯讀字元範圍形式表示的數字表示法。</param>
      <param name="style" vsli:raw="A bitwise combination of enumeration values that indicates the style elements that can be present in &lt;paramref name=&quot;value&quot; /&gt;. A typical value to specify is &lt;see cref=&quot;F:System.Globalization.NumberStyles.Integer&quot; /&gt;.">列舉值的位元組合，表示 <paramref name="value" /> 中可以存在的樣式項目。 一般會指定的值是 <see cref="F:System.Globalization.NumberStyles.Integer" />。</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">物件，其提供關於 <paramref name="value" /> 的特定文化特性格式資訊。</param>
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt; if the conversion failed. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is an empty character span or is not in a format that is compliant with &lt;paramref name=&quot;style&quot; /&gt;. This parameter is passed uninitialized.">當這個方法傳回時，如果轉換成功，則會包含相當於 <paramref name="value" /> 中所含之數字的 <see cref="T:System.Numerics.BigInteger" />；如果轉換失敗則為 <see cref="P:System.Numerics.BigInteger.Zero" />。 若 <paramref name="value" /> 參數是空字元範圍或不是符合 <paramref name="style" /> 的格式，則轉換會失敗。 這個參數會以未初始化的狀態傳遞。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。  
  
-或- 
 <paramref name="style" /> 包含 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 或 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 旗標和其他值。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was converted successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value" /> 轉換成功，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Numerics.BigInteger@)">
      <summary vsli:raw="Tries to convert the representation of a number contained in the specified read-only character span, to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">嘗試將所指定唯讀字元範圍中包含的數字表示法轉換為其 <see cref="T:System.Numerics.BigInteger" /> 對等項目，並傳回指出轉換是否成功的值。</summary>
      <param name="value" vsli:raw="The representation of a number as a read-only span of characters.">以唯讀字元範圍形式表示的數字表示法。</param>
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or zero (0) if the conversion fails. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is an empty character span or is not of the correct format. This parameter is passed uninitialized.">當這個方法傳回時，如果轉換成功，則會包含相當於 <paramref name="value" /> 中所含之數字的 <see cref="T:System.Numerics.BigInteger" />；如果轉換失敗則為零 (0)。 若 <paramref name="value" /> 參數是空字元範圍或不是正確的格式，則轉換會失敗。 這個參數會以未初始化的狀態傳遞。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was converted successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value" /> 轉換成功，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
      <summary vsli:raw="Tries to convert the string representation of a number in a specified style and culture-specific format to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">使用指定的文化特性特定格式資訊和格式樣式，將日期和時間的指定字串表示轉換為其對等的 <see cref="T:System.Numerics.BigInteger" />，並傳回值，這個值表示轉換是否成功。</summary>
      <param name="value" vsli:raw="The string representation of a number. The string is interpreted using the style specified by &lt;paramref name=&quot;style&quot; /&gt;.">數字的字串表示。 這個字串使用 <paramref name="style" /> 指定的樣式來解譯。</param>
      <param name="style" vsli:raw="A bitwise combination of enumeration values that indicates the style elements that can be present in &lt;paramref name=&quot;value&quot; /&gt;. A typical value to specify is &lt;see cref=&quot;F:System.Globalization.NumberStyles.Integer&quot; /&gt;.">列舉值的位元組合，表示 <paramref name="value" /> 中可以存在的樣式項目。 一般會指定的值是 <see cref="F:System.Globalization.NumberStyles.Integer" />。</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">物件，其提供關於 <paramref name="value" /> 的特定文化特性格式資訊。</param>
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt; if the conversion failed. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or is not in a format that is compliant with &lt;paramref name=&quot;style&quot; /&gt;. This parameter is passed uninitialized.">當這個方法傳回時，如果轉換成功，則會包含相當於 <paramref name="value" /> 中所含之數字的 <see cref="T:System.Numerics.BigInteger" />；如果轉換失敗則為 <see cref="P:System.Numerics.BigInteger.Zero" />。 轉換失敗的狀況包括：如果 <paramref name="value" /> 參數為 <see langword="null" /> 或格式不符合 <paramref name="style" />。 這個參數會以未初始化的狀態傳遞。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。  
  
-或- 
 <paramref name="style" /> 包含 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 或 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 旗標和其他值。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;value&quot; /&gt; parameter was converted successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 參數轉換成功，則為 <paramref name="value" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
      <summary vsli:raw="Tries to convert the string representation of a number to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">嘗試將數字的字串表示轉換成其相等的 <see cref="T:System.Numerics.BigInteger" />，並傳回一個值表示轉換是否成功。</summary>
      <param name="value" vsli:raw="The string representation of a number.">數字的字串表示。</param>
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or zero (0) if the conversion fails. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or is not of the correct format. This parameter is passed uninitialized.">當這個方法傳回時，如果轉換成功，則會包含相當於 <paramref name="value" /> 中所含之數字的 <see cref="T:System.Numerics.BigInteger" />；如果轉換失敗則為零 (0)。 轉換失敗的狀況包括：如果 <paramref name="value" /> 參數為 <see langword="null" /> 或不是正確的格式。 這個參數會以未初始化的狀態傳遞。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was converted successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value" /> 轉換成功，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)">
      <summary vsli:raw="Copies the value of this &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; as little-endian twos-complement bytes, using the fewest number of bytes possible. If the value is zero, outputs one byte whose element is 0x00.">使用盡可能最少位元組數來複製這個 <see cref="T:System.Numerics.BigInteger" /> 的值，作為位元組由小到大的二補數位元組。 如果值為零，則輸出其元素為 0x00 的一個位元組。</summary>
      <param name="destination" vsli:raw="The destination span to which the resulting bytes should be written.">應將結果位元組寫入至其中的目的地範圍。</param>
      <param name="bytesWritten" vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">寫入至 <paramref name="destination" /> 的位元組數。</param>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示使用不帶正負號的編碼；否則為 <see langword="false" />。</param>
      <param name="isBigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the bytes in a big-endian byte order; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示以位元組由大到小的位元組順序寫入位元組；否則為 <see langword="false" />。</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;isUnsigned&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.BigInteger.Sign&quot; /&gt; is negative.">
        <paramref name="isUnsigned" /> 為 <see langword="true" /> 且 <see cref="P:System.Numerics.BigInteger.Sign" /> 為負值。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the bytes fit in &lt;paramref name=&quot;destination&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if not all bytes could be written due to lack of space.">如果位元組符合 <paramref name="destination" />，則為 <see langword="true" />；如果由於空間不足而無法寫入所有位元組，則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsEven">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is an even number.">表示目前 <see cref="T:System.Numerics.BigInteger" /> 物件的值是否為偶數。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is an even number; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Numerics.BigInteger" /> 物件的值為偶數，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsOne">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.One&quot; /&gt;.">表示目前 <see cref="T:System.Numerics.BigInteger" /> 物件的值是否為 <see cref="P:System.Numerics.BigInteger.One" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.One&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Numerics.BigInteger" /> 物件的值為 <see cref="P:System.Numerics.BigInteger.One" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsPowerOfTwo">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is a power of two.">表示目前 <see cref="T:System.Numerics.BigInteger" /> 物件的值是否為二乘冪。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is a power of two; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Numerics.BigInteger" /> 物件的值為二乘冪，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsZero">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt;.">表示目前 <see cref="T:System.Numerics.BigInteger" /> 物件的值是否為 <see cref="P:System.Numerics.BigInteger.Zero" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Numerics.BigInteger" /> 物件的值為 <see cref="P:System.Numerics.BigInteger.Zero" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.MinusOne">
      <summary vsli:raw="Gets a value that represents the number negative one (-1).">取得表示數字負一 (-1) 的值。</summary>
      <returns vsli:raw="An integer whose value is negative one (-1).">值為負一 (-1) 的整數。</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.One">
      <summary vsli:raw="Gets a value that represents the number one (1).">取得表示數字一 (1) 的值。</summary>
      <returns vsli:raw="An object whose value is one (1).">值為一 (1) 的物件。</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.Sign">
      <summary vsli:raw="Gets a number that indicates the sign (negative, positive, or zero) of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object.">取得數字，這個數字表示目前 <see cref="T:System.Numerics.BigInteger" /> 物件的正負號 (負數、正數或零)。</summary>
      <returns vsli:raw="A number that indicates the sign of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Number&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt; The value of this object is negative.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; The value of this object is 0 (zero).&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; The value of this object is positive.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">數字，表示 <see cref="T:System.Numerics.BigInteger" /> 物件的正負號，如下表所示。  
  
 <list type="table"><listheader><term> Number</term><description> 描述</description></listheader><item><term> -1</term><description> 這個物件的值為負數。</description></item><item><term> 0</term><description> 這個物件的值為 0 (零)。</description></item><item><term> 1</term><description> 這個物件的值為正數。</description></item></list></returns>
    </member>
    <member name="P:System.Numerics.BigInteger.Zero">
      <summary vsli:raw="Gets a value that represents the number 0 (zero).">取得表示數字 0 (零) 的值。</summary>
      <returns vsli:raw="An integer whose value is 0 (zero).">值為 0 (零) 的整數。</returns>
    </member>
    <member name="T:System.Numerics.Complex">
      <summary vsli:raw="Represents a complex number.">表示複數。</summary>
    </member>
    <member name="F:System.Numerics.Complex.ImaginaryOne">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; instance with a real number equal to zero and an imaginary number equal to one.">在實數等於零且虛數等於一條件下，傳回新 <see cref="T:System.Numerics.Complex" /> 執行個體。</summary>
    </member>
    <member name="F:System.Numerics.Complex.Infinity">
      <summary vsli:raw="Represents infinity as a complex number.">將無限大表示為複數。</summary>
    </member>
    <member name="F:System.Numerics.Complex.NaN">
      <summary vsli:raw="Represents a complex instance that is not a number (NaN).">表示不是數字 (NaN) 的複雜執行個體。</summary>
    </member>
    <member name="F:System.Numerics.Complex.One">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; instance with a real number equal to one and an imaginary number equal to zero.">在實數等於一且虛數等於零條件下，傳回新 <see cref="T:System.Numerics.Complex" /> 執行個體。</summary>
    </member>
    <member name="F:System.Numerics.Complex.Zero">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; instance with a real number equal to zero and an imaginary number equal to zero.">在實數等於零且虛數等於零條件下，傳回新 <see cref="T:System.Numerics.Complex" /> 執行個體。</summary>
    </member>
    <member name="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; structure using the specified real and imaginary values.">使用指定的實數和虛數，初始化 <see cref="T:System.Numerics.Complex" /> 結構的新執行個體。</summary>
      <param name="real" vsli:raw="The real part of the complex number.">複數的實數部分。</param>
      <param name="imaginary" vsli:raw="The imaginary part of the complex number.">複數的虛數部分。</param>
    </member>
    <member name="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
      <summary vsli:raw="Gets the absolute value (or magnitude) of a complex number.">取得複數的絕對值 (或範圍)。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The absolute value of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> 的絕對值。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
      <summary vsli:raw="Returns the angle that is the arc cosine of the specified complex number.">傳回角度，這個角度是指定之複數的反餘弦值。</summary>
      <param name="value" vsli:raw="A complex number that represents a cosine.">表示餘弦值的複數。</param>
      <returns vsli:raw="The angle, measured in radians, which is the arc cosine of &lt;paramref name=&quot;value&quot; /&gt;.">反餘弦值為 <paramref name="value" /> 的角度 (以弧度為單位)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Adds a double-precision real number to a complex number and returns the result.">將雙精確度實數與複數相加，並傳回結果。</summary>
      <param name="left" vsli:raw="The double-precision real value to add.">要相加的雙精確度實數值。</param>
      <param name="right" vsli:raw="The complex value to add.">要相加的複數值。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 和 <paramref name="right" /> 的總和。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Adds a complex number to a double-precision real number and returns the result.">將複數與雙精確度實數相加，並傳回結果。</summary>
      <param name="left" vsli:raw="The complex value to add.">要相加的複數值。</param>
      <param name="right" vsli:raw="The double-precision real value to add.">要相加的雙精確度實數值。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 和 <paramref name="right" /> 的總和。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Adds two complex numbers and returns the result.">兩個複數相加，並傳回結果。</summary>
      <param name="left" vsli:raw="The first complex number to add.">要相加的第一個複數。</param>
      <param name="right" vsli:raw="The second complex number to add.">要相加的第二個複數。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 和 <paramref name="right" /> 的總和。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
      <summary vsli:raw="Returns the angle that is the arc sine of the specified complex number.">傳回角度，這個角度是指定之複數的反正弦值。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The angle which is the arc sine of &lt;paramref name=&quot;value&quot; /&gt;.">反正弦值為 <paramref name="value" /> 的角度。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
      <summary vsli:raw="Returns the angle that is the arc tangent of the specified complex number.">傳回角度，這個角度是指定之複數的反正切值。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The angle that is the arc tangent of &lt;paramref name=&quot;value&quot; /&gt;.">反正切值為 <paramref name="value" /> 的角度。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
      <summary vsli:raw="Computes the conjugate of a complex number and returns the result.">計算複數的共軛，並傳回結果。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The conjugate of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> 的共軛。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
      <summary vsli:raw="Returns the cosine of the specified complex number.">傳回指定複數的餘弦函數。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The cosine of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> 的餘弦函數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
      <summary vsli:raw="Returns the hyperbolic cosine of the specified complex number.">傳回指定複數的雙曲餘弦。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The hyperbolic cosine of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />的雙曲線餘弦函數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Divides one double-precision real number by a complex number and returns the result.">將一個雙精確度實數除以複數，並傳回結果。</summary>
      <param name="dividend" vsli:raw="The double-precision real number to be divided.">要相除的雙精確度實數。</param>
      <param name="divisor" vsli:raw="The complex number to divide by.">要當做除數的複數。</param>
      <returns vsli:raw="The quotient of the division.">相除的商數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Divides one complex number by a double-precision real number and returns the result.">將一個複數除以雙精確度實數，並傳回結果。</summary>
      <param name="dividend" vsli:raw="The complex number to be divided.">要當做被除數的複數。</param>
      <param name="divisor" vsli:raw="The double-precision real number to divide by.">要作為除數的雙精確度實數。</param>
      <returns vsli:raw="The quotient of the division.">相除的商數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Divides one complex number by another and returns the result.">以某複數除以另一個複數，並傳回結果。</summary>
      <param name="dividend" vsli:raw="The complex number to be divided.">要當做被除數的複數。</param>
      <param name="divisor" vsli:raw="The complex number to divide by.">要當做除數的複數。</param>
      <returns vsli:raw="The quotient of the division.">相除的商數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified complex number have the same value.">傳回值，這個值指出目前執行個體和指定複數是否有相同的值。</summary>
      <param name="value" vsli:raw="The complex number to compare.">要比較的複數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this complex number and &lt;paramref name=&quot;value&quot; /&gt; have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個複數和 <paramref name="value" /> 有相同的值則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified object have the same value.">傳回值，這個值表示目前執行個體與指定的物件是否有相同的值。</summary>
      <param name="obj" vsli:raw="The object to compare.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj&quot; /&gt; parameter is a &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object or a type capable of implicit conversion to a &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object, and its value is equal to the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="obj" /> 參數為 <see cref="T:System.Numerics.Complex" /> 物件，或是可隱含轉換為 <see cref="T:System.Numerics.Complex" /> 物件的型別，且其值等於目前的 <see cref="T:System.Numerics.Complex" /> 物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
      <summary vsli:raw="Returns &lt;see langword=&quot;e&quot; /&gt; raised to the power specified by a complex number.">傳回乘至複數指定乘冪的 <see langword="e" />。</summary>
      <param name="value" vsli:raw="A complex number that specifies a power.">指定乘冪的複數。</param>
      <returns vsli:raw="The number &lt;see langword=&quot;e&quot; /&gt; raised to the power &lt;paramref name=&quot;value&quot; /&gt;.">數字 <see langword="e" /> 的 <paramref name="value" /> 次方。</returns>
    </member>
    <member name="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
      <summary vsli:raw="Creates a complex number from a point's polar coordinates.">由點的極座標建立複數。</summary>
      <param name="magnitude" vsli:raw="The magnitude, which is the distance from the origin (the intersection of the x-axis and the y-axis) to the number.">範圍，即從原點 (X 軸和 Y 軸的交點) 到複數點的距離。</param>
      <param name="phase" vsli:raw="The phase, which is the angle from the line to the horizontal axis, measured in radians.">相位，即從直線到水平軸的角度 (以弧度為單位)。</param>
      <returns vsli:raw="A complex number.">複數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object.">傳回目前 <see cref="T:System.Numerics.Complex" /> 物件的雜湊碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Numerics.Complex.IsFinite(System.Numerics.Complex)">
      <summary vsli:raw="Determines whether the specified complex number is finite.">判斷指定的複數是否為有限大。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both, the real and imaginary parts are finite (zero, subnormal or normal); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果實數和虛數部分兩者都是有限的 (零、偏低或標準)，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Complex.IsInfinity(System.Numerics.Complex)">
      <summary vsli:raw="Returns a value indicating whether the specified complex number evaluates to infinity.">傳回值，指出指定的複數是否計算結果為無限大。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if either, the real or imaginary part are &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt; or &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果實數和虛數部分兩者其中之一為 <see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Complex.IsNaN(System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether the specified complex instance is not a number (NaN).">傳回值，該值表示指定的複雜執行個體是否不是數字 (NaN)。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is not finite or infinite; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的值不是有限或無限，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
      <summary vsli:raw="Returns the natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of a specified complex number.">傳回指定複數的自然 (底數 <see langword="e" />) 對數。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> 的自然對數 (底數 <see langword="e" />)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Returns the logarithm of a specified complex number in a specified base.">傳回指定底數中指定複數的對數。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <param name="baseValue" vsli:raw="The base of the logarithm.">對數的底數。</param>
      <returns vsli:raw="The logarithm of &lt;paramref name=&quot;value&quot; /&gt; in base &lt;paramref name=&quot;baseValue&quot; /&gt;.">底數 <paramref name="value" /> 中的對數 <paramref name="baseValue" />。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
      <summary vsli:raw="Returns the base-10 logarithm of a specified complex number.">傳回指定複數底數為 10 的對數。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The base-10 logarithm of &lt;paramref name=&quot;value&quot; /&gt;.">底數為 10 的 <paramref name="value" /> 對數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Returns the product of a double-precision real number and a complex number.">傳回雙精確度實數和複數的乘積。</summary>
      <param name="left" vsli:raw="The double-precision real number to multiply.">要相乘的雙精確度實數。</param>
      <param name="right" vsli:raw="The complex number to multiply.">要相乘的複數。</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">
        <paramref name="left" /> 和 <paramref name="right" /> 參數的乘積。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Returns the product of a complex number and a double-precision real number.">傳回複數和雙精確度實數的乘積。</summary>
      <param name="left" vsli:raw="The complex number to multiply.">要相乘的複數。</param>
      <param name="right" vsli:raw="The double-precision real number to multiply.">要相乘的雙精確度實數。</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">
        <paramref name="left" /> 和 <paramref name="right" /> 參數的乘積。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns the product of two complex numbers.">傳回兩個複數的乘積。</summary>
      <param name="left" vsli:raw="The first complex number to multiply.">要相乘的第一個複數。</param>
      <param name="right" vsli:raw="The second complex number to multiply.">要相乘的第二個複數。</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">
        <paramref name="left" /> 和 <paramref name="right" /> 參數的乘積。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
      <summary vsli:raw="Returns the additive inverse of a specified complex number.">傳回指定之複數的加法反元素。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The result of the &lt;see cref=&quot;P:System.Numerics.Complex.Real&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.Complex.Imaginary&quot; /&gt; components of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by -1.">
        <paramref name="value" /> 參數之 <see cref="P:System.Numerics.Complex.Real" /> 和 <see cref="P:System.Numerics.Complex.Imaginary" /> 部分乘以 -1 的結果。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Adds a double-precision real number to a complex number.">將雙精確度實數與複數相加。</summary>
      <param name="left" vsli:raw="The double-precision real value to add.">要相加的雙精確度實數值。</param>
      <param name="right" vsli:raw="The complex value to add.">要相加的複數值。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; as a complex number.">
        <paramref name="left" /> 和 <paramref name="right" /> 的總和為複數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Adds a complex number to a double-precision real number.">將複數與雙精確度實數相加。</summary>
      <param name="left" vsli:raw="The complex value to add.">要相加的複數值。</param>
      <param name="right" vsli:raw="The double-precision real value to add.">要相加的雙精確度實數值。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; as a complex number.">
        <paramref name="left" /> 和 <paramref name="right" /> 的總和為複數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Adds two complex numbers.">將兩個複數相加。</summary>
      <param name="left" vsli:raw="The first complex value to add.">要相加的第一個複數值。</param>
      <param name="right" vsli:raw="The second complex value to add.">要相加的第二個複數值。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 和 <paramref name="right" /> 的總和。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Divides a specified double-precision real number by a specified complex number.">將指定的雙精確度實數除以指定的複數。</summary>
      <param name="left" vsli:raw="The double-precision real value to be divided.">要相除的雙精確度實數值。</param>
      <param name="right" vsli:raw="The complex value to divide by.">要作為除數的複數。</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">
        <paramref name="left" /> 除以 <paramref name="right" /> 的結果 (結果為複數)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Divides a specified complex number by a specified double-precision real number.">將指定的複數除以指定的雙精確度實數。</summary>
      <param name="left" vsli:raw="The complex value to be divided.">要作為被除數的複數。</param>
      <param name="right" vsli:raw="The double-precision real value to divide by.">要作為除數的雙精確度實數值。</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">
        <paramref name="left" /> 除以 <paramref name="right" /> 的結果 (結果為複數)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Divides a specified complex number by another specified complex number.">以某指定複數除以另一個指定複數。</summary>
      <param name="left" vsli:raw="The complex value to be divided.">要作為被除數的複數。</param>
      <param name="right" vsli:raw="The complex value to divide by.">要作為除數的複數。</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 除以 <paramref name="right" /> 的結果。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether two complex numbers are equal.">傳回值，這個值表示兩個複數是否相等。</summary>
      <param name="left" vsli:raw="The first complex number to compare.">要比較的第一個複數。</param>
      <param name="right" vsli:raw="The second complex number to compare.">要比較的第二個複數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 與 <paramref name="right" /> 參數有相同的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a complex number.">定義從 <see cref="T:System.Decimal" /> 值到複數的明確轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">要轉換成複數的值。</param>
      <returns vsli:raw="A complex number that has a real component equal to &lt;paramref name=&quot;value&quot; /&gt; and an imaginary component equal to zero.">實數部分等於 <paramref name="value" /> 及虛數部分等於零的複數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value to a complex number.">定義從 <see cref="T:System.Numerics.BigInteger" /> 值到複數的明確轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">要轉換成複數的值。</param>
      <returns vsli:raw="A complex number that has a real component equal to &lt;paramref name=&quot;value&quot; /&gt; and an imaginary component equal to zero.">實數部分等於 <paramref name="value" /> 及虛數部分等於零的複數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of an unsigned byte to a complex number.">定義從不帶正負號的位元組到複數的隱含轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">要轉換成複數的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">物件，包含 <paramref name="value" /> 參數值 (做為其實數部分) 以及零 (做為其虛數部分)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a double-precision floating-point number to a complex number.">定義從雙精確度浮點數到複數的隱含轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">要轉換成複數的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">物件，包含 <paramref name="value" /> 參數值 (做為其實數部分) 以及零 (做為其虛數部分)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 16-bit signed integer to a complex number.">定義從 16 位元帶正負號整數到複數的隱含轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">要轉換成複數的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">物件，包含 <paramref name="value" /> 參數值 (做為其實數部分) 以及零 (做為其虛數部分)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 32-bit signed integer to a complex number.">定義從 32 位元帶正負號整數到複數的隱含轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">要轉換成複數的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">物件，包含 <paramref name="value" /> 參數值 (做為其實數部分) 以及零 (做為其虛數部分)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 64-bit signed integer to a complex number.">定義從 64 位元帶正負號整數到複數的隱含轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">要轉換成複數的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">物件，包含 <paramref name="value" /> 參數值 (做為其實數部分) 以及零 (做為其虛數部分)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a signed byte to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">定義從帶正負號的位元組到複數的隱含轉換。   
           
此應用程式開發介面不符合 CLS 標準。</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">要轉換成複數的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">物件，包含 <paramref name="value" /> 參數值 (做為其實數部分) 以及零 (做為其虛數部分)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a single-precision floating-point number to a complex number.">定義從單精確度浮點數到複數的隱含轉換。</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">要轉換成複數的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">物件，包含 <paramref name="value" /> 參數值 (做為其實數部分) 以及零 (做為其虛數部分)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 16-bit unsigned integer to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">定義從 16 位元不帶正負號整數到複數的隱含轉換。   
           
此應用程式開發介面不符合 CLS 標準。</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">要轉換成複數的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">物件，包含 <paramref name="value" /> 參數值 (做為其實數部分) 以及零 (做為其虛數部分)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 32-bit unsigned integer to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">定義從 32 位元不帶正負號整數到複數的隱含轉換。   
           
此應用程式開發介面不符合 CLS 標準。</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">要轉換成複數的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">物件，包含 <paramref name="value" /> 參數值 (做為其實數部分) 以及零 (做為其虛數部分)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 64-bit unsigned integer to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">定義從 64 位元不帶正負號整數到複數的隱含轉換。   
           
此應用程式開發介面不符合 CLS 標準。</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">要轉換成複數的值。</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">物件，包含 <paramref name="value" /> 參數值 (做為其實數部分) 以及零 (做為其虛數部分)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether two complex numbers are not equal.">傳回值，這個值表示兩個複數是否不相等。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比較的第一個值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比較的第二個值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Multiplies a specified double-precision real number by a specified complex number.">將指定的雙精確度實數乘以指定的複數。</summary>
      <param name="left" vsli:raw="The double-precision real value to multiply.">要相乘的雙精確度實數值。</param>
      <param name="right" vsli:raw="The complex value to multiply.">要相乘的複數值。</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">
        <paramref name="left" /> 和 <paramref name="right" /> 的乘積 (結果為複數)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Multiplies the specified complex number by a specified double-precision real number.">將指定的複數乘以指定的雙精確度實數。</summary>
      <param name="left" vsli:raw="The complex value to multiply.">要相乘的複數值。</param>
      <param name="right" vsli:raw="The double-precision real value to multiply.">要相乘的雙精確度實數值。</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">
        <paramref name="left" /> 和 <paramref name="right" /> 的乘積 (結果為複數)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Multiplies two specified complex numbers.">乘上兩個指定的複數。</summary>
      <param name="left" vsli:raw="The first complex value to multiply.">要相乘的第一個複數值。</param>
      <param name="right" vsli:raw="The second complex value to multiply.">要相乘的第二個複數值。</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 與 <paramref name="right" /> 的乘積。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts a complex number from a double-precision real number.">從雙精確度實數減去複數。</summary>
      <param name="left" vsli:raw="The double-precision real value to subtract from (the minuend).">要相減的雙精確度實數值 (被減數)。</param>
      <param name="right" vsli:raw="The complex value to subtract (the subtrahend).">要相減的複數值 (減數)。</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">從 <paramref name="left" /> 減去 <paramref name="right" /> 的結果 (結果為複數)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Subtracts a double-precision real number from a complex number.">從複數減去一個雙精確度實數。</summary>
      <param name="left" vsli:raw="The complex value to subtract from (the minuend).">要相減的複數值 (被減數)。</param>
      <param name="right" vsli:raw="The double-precision real value to subtract (the subtrahend).">要相減的雙精確度實數值 (減數)。</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">從 <paramref name="left" /> 減去 <paramref name="right" /> 的結果 (結果為複數)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts a complex number from another complex number.">從另一個複數減去一個複數。</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">要被減的值 (被減數)。</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">要減去的值 (減數)。</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="right" /> 減去 <paramref name="left" /> 的結果。</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
      <summary vsli:raw="Returns the additive inverse of a specified complex number.">傳回指定之複數的加法反元素。</summary>
      <param name="value" vsli:raw="The value to negate.">要變換正負號的值。</param>
      <returns vsli:raw="The result of the &lt;see cref=&quot;P:System.Numerics.Complex.Real&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.Complex.Imaginary&quot; /&gt; components of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by -1.">
        <paramref name="value" /> 參數之 <see cref="P:System.Numerics.Complex.Real" /> 和 <see cref="P:System.Numerics.Complex.Imaginary" /> 部分乘以 -1 的結果。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Returns a specified complex number raised to a power specified by a double-precision floating-point number.">傳回指定之複數自乘至雙精確度浮點數指定之乘冪的結果。</summary>
      <param name="value" vsli:raw="A complex number to be raised to a power.">傳回乘至乘冪的複數。</param>
      <param name="power" vsli:raw="A double-precision floating-point number that specifies a power.">雙精確度浮點數，用來指定乘冪數。</param>
      <returns vsli:raw="The complex number &lt;paramref name=&quot;value&quot; /&gt; raised to the power &lt;paramref name=&quot;power&quot; /&gt;.">乘至乘冪 <paramref name="value" /> 的複數 <paramref name="power" />。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns a specified complex number raised to a power specified by a complex number.">傳回指定的複數自乘至複數指定之乘冪的結果。</summary>
      <param name="value" vsli:raw="A complex number to be raised to a power.">傳回乘至乘冪的複數。</param>
      <param name="power" vsli:raw="A complex number that specifies a power.">指定乘冪的複數。</param>
      <returns vsli:raw="The complex number &lt;paramref name=&quot;value&quot; /&gt; raised to the power &lt;paramref name=&quot;power&quot; /&gt;.">乘至乘冪 <paramref name="value" /> 的複數 <paramref name="power" />。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
      <summary vsli:raw="Returns the multiplicative inverse of a complex number.">傳回複數的乘法逆元。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The reciprocal of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> 的倒數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
      <summary vsli:raw="Returns the sine of the specified complex number.">傳回指定複數的正弦函數。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The sine of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />的正弦函數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
      <summary vsli:raw="Returns the hyperbolic sine of the specified complex number.">傳回指定複數的雙曲正弦。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The hyperbolic sine of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />的雙曲線正弦函數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
      <summary vsli:raw="Returns the square root of a specified complex number.">傳回指定複數的平方根。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The square root of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> 的平方根。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts one complex number from a double-precision real number and returns the result.">從雙精確度實數減去一個複數，並傳回結果。</summary>
      <param name="left" vsli:raw="The double-precision real value to subtract from (the minuend).">要相減的雙精確度實數值 (被減數)。</param>
      <param name="right" vsli:raw="The complex value to subtract (the subtrahend).">要相減的複數值 (減數)。</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">從 <paramref name="left" /> 減去 <paramref name="right" /> 的結果 (結果為複數)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Subtracts one double-precision real number from a complex number and returns the result.">從複數減去一個雙精確度實數，並傳回結果。</summary>
      <param name="left" vsli:raw="The complex value to subtract from (the minuend).">要相減的複數值 (被減數)。</param>
      <param name="right" vsli:raw="The double-precision real value to subtract (the subtrahend).">要相減的雙精確度實數值 (減數)。</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">從 <paramref name="left" /> 減去 <paramref name="right" /> 的結果 (結果為複數)。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts one complex number from another and returns the result.">從某複數減去另一個複數，並傳回結果。</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">要被減的值 (被減數)。</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">要減去的值 (減數)。</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">
        <paramref name="right" /> 減去 <paramref name="left" /> 的結果。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
      <summary vsli:raw="Returns the tangent of the specified complex number.">傳回指定複數的正切函數。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The tangent of &lt;paramref name=&quot;value&quot; /&gt;.">的正切函數<paramref name="value" />。</returns>
    </member>
    <member name="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
      <summary vsli:raw="Returns the hyperbolic tangent of the specified complex number.">傳回指定複數的雙曲正切。</summary>
      <param name="value" vsli:raw="A complex number.">複數。</param>
      <returns vsli:raw="The hyperbolic tangent of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />的雙曲線正切函數。</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form.">將目前複數的值轉換為直角座標形式 (Cartesian form) 的相等字串表示。</summary>
      <returns vsli:raw="The string representation of the current instance in Cartesian form.">採取直角座標形式 (Cartesian form) 之目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.">使用指定文化特性格式資訊，將目前的複數值轉換為採取直角座標形式 (Cartesian form) 的相等字串表示。</summary>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">物件，提供特定文化特性格式資訊。</param>
      <returns vsli:raw="The string representation of the current instance in Cartesian form, as specified by &lt;paramref name=&quot;provider&quot; /&gt;.">採取直角座標形式 (Cartesian form) 之目前執行個體的字串表示，如 <paramref name="provider" /> 所指定。</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.String)">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.">使用實數及虛數格式的指定格式，將目前的複數值轉換為採取直角座標形式 (Cartesian form) 的相等字串表示。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">標準或自訂數值格式字串。</param>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" /> 不是有效的格式字串。</exception>
      <returns vsli:raw="The string representation of the current instance in Cartesian form.">採取直角座標形式 (Cartesian form) 之目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.">使用指定格式以及文化特性格式資訊來組成實數及虛數，將目前的複數值轉換為採取直角座標形式 (Cartesian form) 的相等字串表示。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">標準或自訂數值格式字串。</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">物件，提供特定文化特性格式資訊。</param>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" /> 不是有效的格式字串。</exception>
      <returns vsli:raw="The string representation of the current instance in Cartesian form, as specified by &lt;paramref name=&quot;format&quot; /&gt; and &lt;paramref name=&quot;provider&quot; /&gt;.">採取直角座標形式 (Cartesian form) 之目前執行個體的字串表示，如 <paramref name="format" /> 和 <paramref name="provider" /> 所指定。</returns>
    </member>
    <member name="P:System.Numerics.Complex.Imaginary">
      <summary vsli:raw="Gets the imaginary component of the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object.">取得目前 <see cref="T:System.Numerics.Complex" /> 物件的虛數部分。</summary>
      <returns vsli:raw="The imaginary component of a complex number.">複數的虛數部分。</returns>
    </member>
    <member name="P:System.Numerics.Complex.Magnitude">
      <summary vsli:raw="Gets the magnitude (or absolute value) of a complex number.">取得複數的範圍 (或絕對值)。</summary>
      <returns vsli:raw="The magnitude of the current instance.">目前執行個體的範圍。</returns>
    </member>
    <member name="P:System.Numerics.Complex.Phase">
      <summary vsli:raw="Gets the phase of a complex number.">取得複數的階段。</summary>
      <returns vsli:raw="The phase of a complex number, in radians.">複數的相位 (以弧度為單位)。</returns>
    </member>
    <member name="P:System.Numerics.Complex.Real">
      <summary vsli:raw="Gets the real component of the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object.">取得目前 <see cref="T:System.Numerics.Complex" /> 物件的實數部分。</summary>
      <returns vsli:raw="The real component of a complex number.">複數的實數部分。</returns>
    </member>
  </members>
</doc>