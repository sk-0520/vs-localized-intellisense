<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Data.Common</name>
  </assembly>
  <members>
    <member name="T:System.Data.AcceptRejectRule">
      <summary vsli:raw="Determines the action that occurs when the &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; or &lt;see cref=&quot;M:System.Data.DataTable.RejectChanges&quot; /&gt; method is invoked on a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">Определяет действие, выполняемое, когда метод <see cref="M:System.Data.DataSet.AcceptChanges" /> или <see cref="M:System.Data.DataTable.RejectChanges" /> вызывается в объекте <see cref="T:System.Data.DataTable" /> с объектом <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary vsli:raw="Changes are cascaded across the relationship.">Изменения располагаются каскадом в отношении.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary vsli:raw="No action occurs (default).">Никакие действия не выполняются (по умолчанию).</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary vsli:raw="Provides a description of the results of the query and its effect on the database.">Предоставляет описание результатов запроса и его влияние на базу данных.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary vsli:raw="When the command is executed, the associated &lt;see langword=&quot;Connection&quot; /&gt; object is closed when the associated &lt;see langword=&quot;DataReader&quot; /&gt; object is closed.">При выполнении этой команды связанный объект <see langword="Connection" /> закрывается, когда закрывается связанный объект <see langword="DataReader" />.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary vsli:raw="The query may return multiple result sets. Execution of the query may affect the database state. &lt;see langword=&quot;Default&quot; /&gt; sets no &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; flags, so calling &lt;see langword=&quot;ExecuteReader(CommandBehavior.Default)&quot; /&gt; is functionally equivalent to calling &lt;see langword=&quot;ExecuteReader()&quot; /&gt;.">Запрос может вернуть несколько наборов результатов. Выполнение запроса может повлиять на состояние базы данных. Поле <see langword="Default" /> не задает флаги <see cref="T:System.Data.CommandBehavior" />, поэтому вызов метода <see langword="ExecuteReader(CommandBehavior.Default)" /> функционально эквивалентен вызову метода <see langword="ExecuteReader()" />.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary vsli:raw="The query returns column and primary key information. The provider appends extra columns to the result set for existing primary key and timestamp columns.">Запрос возвращает информацию колонки и первичного ключа. Поставщик добавляет дополнительные столбцы в результирующий набор для существующего первичного ключа и столбцы меток времени.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary vsli:raw="The query returns column information only. When using &lt;see cref=&quot;F:System.Data.CommandBehavior.SchemaOnly&quot; /&gt;, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.">Запрос возвращает только сведения о столбце. При использовании <see cref="F:System.Data.CommandBehavior.SchemaOnly" /> поставщик данных .NET Framework для SQL Server предваряет оператор, выполняемый с параметром SET FMTONLY ON.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary vsli:raw="Provides a way for the &lt;see langword=&quot;DataReader&quot; /&gt; to handle rows that contain columns with large binary values. Rather than loading the entire row, &lt;see langword=&quot;SequentialAccess&quot; /&gt; enables the &lt;see langword=&quot;DataReader&quot; /&gt; to load data as a stream. You can then use the &lt;see langword=&quot;GetBytes&quot; /&gt; or &lt;see langword=&quot;GetChars&quot; /&gt; method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.">Содержит способ для <see langword="DataReader" /> для обработки строк, содержащих столбцы с большими двоичными значениями. Вместо загрузки всей строки, <see langword="SequentialAccess" /> позволяет <see langword="DataReader" /> загрузить данные как поток. Затем можно использовать метод <see langword="GetBytes" /> или метод <see langword="GetChars" />, чтобы указать положение байта для начала операции чтения и ограниченный размер буфера для возврата данных.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary vsli:raw="The query returns a single result set.">Запрос возвращает один результирующий набор.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary vsli:raw="The query is expected to return a single row of the first result set. Execution of the query may affect the database state. Some .NET data providers may, but are not required to, use this information to optimize the performance of the command. When you specify &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; with the &lt;see cref=&quot;M:System.Data.OleDb.OleDbCommand.ExecuteReader&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.OleDb.OleDbCommand&quot; /&gt; object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB &lt;see langword=&quot;IRow&quot; /&gt; interface if it is available. Otherwise, it uses the &lt;see langword=&quot;IRowset&quot; /&gt; interface. If your SQL statement is expected to return only a single row, specifying &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; can also improve application performance. It is possible to specify &lt;see langword=&quot;SingleRow&quot; /&gt; when executing queries that are expected to return multiple result sets.  In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set. The other result sets of the query will not be returned.">Ожидается, что запрос вернет одну строку из первого набора результатов. Выполнение запроса может повлиять на состояние базы данных. Некоторые поставщики данных .NET Framework могут, но не обязательно, использовать эту информацию для оптимизации производительности команды. При указании <see cref="F:System.Data.CommandBehavior.SingleRow" /> с методом <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> объекта <see cref="T:System.Data.OleDb.OleDbCommand" />, поставщик данных .NET Framework для OLE DB выполняет привязку с помощью интерфейса <see langword="IRow" /> OLE DB, если он доступен. В обратном случае, используется интерфейс <see langword="IRowset" />. Если оператор SQL должен вернуть только одну строку, рекомендуется указать <see cref="F:System.Data.CommandBehavior.SingleRow" /> для повышения производительности приложения. Можно также указать <see langword="SingleRow" /> при выполнении запросов, которые должны возвращать несколько наборов результатов.  В этом случае, если заданы и SQL-запрос с несколькими наборами результатом, и одна строка, возвращаемый результат будет содержать только первую строку первого набора результатов. Другие наборы результатов запроса не возвращаются.</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary vsli:raw="Specifies how a command string is interpreted.">Указывает способ интерпретации строки команды.</summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary vsli:raw="The name of a stored procedure.">Имя хранимой процедуры.</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary vsli:raw="The name of a table.">Имя таблицы.</summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary vsli:raw="An SQL text command. (Default.)">Текстовая команда SQL. (по умолчанию).</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary vsli:raw="Indicates the position of the catalog name in a qualified table name in a text command.">Указывает местоположение имени каталога в полном имени таблицы в текстовой команде.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary vsli:raw="Indicates that the position of the catalog name occurs after the schema portion of a fully qualified table name in a text command. &lt;c&gt;End&lt;/c&gt; and &lt;c&gt;Start&lt;/c&gt; are mutually exclusive.">Указывает, что местоположение имени каталога находится после части, отведенной для схемы, в полном имени таблицы в текстовой команде. <c>End</c> и <c>Start</c> являются взаимоисключающими.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary vsli:raw="Indicates that the position of the catalog name occurs before the schema portion of a fully qualified table name in a text command. &lt;c&gt;Start&lt;/c&gt; and &lt;c&gt;End&lt;/c&gt; are mutually exclusive.">Указывает, что местоположение имени каталога находится перед частью, отведенной для схемы, в полном имени таблицы в текстовой команде. <c>Start</c> и <c>End</c> являются взаимоисключающими.</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary vsli:raw="Represents a set of SQL commands and a database connection that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update the data source.">Представляет набор команд SQL и подключение к базе данных, которые используются для заполнения <see cref="T:System.Data.DataSet" /> и обновления источника данных.</summary>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary vsli:raw="Returned when an error occurs during a fill operation.">Возвращается при возникновении ошибки во время работы операции заполнения.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class from an existing object of the same type.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataAdapter" /> из существующего объекта того же типа.</summary>
      <param name="from" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object used to create the new &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">Объект <see cref="T:System.Data.Common.DataAdapter" /> используется для создания нового <see cref="T:System.Data.Common.DataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary vsli:raw="Creates a copy of this instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">Создает дубликат этого экземпляра класса <see cref="T:System.Data.Common.DataAdapter" />.</summary>
      <returns vsli:raw="The cloned instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">Клонированный экземпляр <see cref="T:System.Data.Common.DataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;.">Создает новый экземпляр <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns vsli:raw="A new table mapping collection.">Новая коллекция сопоставления таблицы.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; and optionally releases the managed resources.">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DataAdapter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source.">Добавляет или обновляет строки в <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records.">
        <see cref="T:System.Data.DataSet" /> для заполнения записями.</param>
      <param name="srcTable" vsli:raw="A string indicating the name of the source table.">Строка, указывающая имя исходной таблицы.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Экземпляр <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">Индекс (с нуля) начальной записи.</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">Целое число, указывающее максимальное количество записей.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name and the specified &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Добавляет или обновляет строки в <see cref="T:System.Data.DataTable" /> для получения соответствия строкам в источнике данных с помощью имени <see cref="T:System.Data.DataTable" /> и указанного интерфейса <see cref="T:System.Data.IDataReader" />.</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records.">
        <see cref="T:System.Data.DataTable" /> для заполнения записями.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Экземпляр <see cref="T:System.Data.IDataReader" />.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataTable" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source.">Добавляет или обновляет строки в указанной коллекции объектов <see cref="T:System.Data.DataTable" /> для получения соответствия строкам в источнике данных.</summary>
      <param name="dataTables" vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill with records.">Коллекция объектов <see cref="T:System.Data.DataTable" /> для заполнения записями.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Экземпляр <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">Индекс (с нуля) начальной записи.</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">Целое число, указывающее максимальное количество записей.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataTable" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Добавляет объект <see cref="T:System.Data.DataTable" /> в указанный объект <see cref="T:System.Data.DataSet" /> и настраивает схему для соответствия этому объекту в источнике данных на основе указанного значения типа <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">Объект <see cref="T:System.Data.DataSet" /> для заполнения схемой из источника данных.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Объект <see cref="T:System.Data.DataTable" /> содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Добавляет объект <see cref="T:System.Data.DataTable" /> к указанному объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Объект <see cref="T:System.Data.DataTable" />, заполняемый из <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Имя исходной таблицы, используемое для сопоставления таблиц.</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Интерфейс <see cref="T:System.Data.IDataReader" />, используемый в качестве источника данных при заполнении объекта <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ссылка на коллекцию объектов <see cref="T:System.Data.DataTable" />, которые были добавлены в <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Добавляет объект <see cref="T:System.Data.DataTable" /> к указанному объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Объект <see cref="T:System.Data.DataTable" />, заполняемый из <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Интерфейс <see cref="T:System.Data.IDataReader" />, используемый в качестве источника данных при заполнении объекта <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Объект <see cref="T:System.Data.DataTable" /> содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Получает параметры, заданные пользователем при выполнении оператора SQL SELECT.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Массив объектов <see cref="T:System.Data.IDataParameter" /> содержит параметры, заданные пользователем.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created.">Указывает, был ли создан <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Data.Common.DataTableMappingCollection" /> был создан; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary vsli:raw="Invoked when an error occurs during a &lt;see langword=&quot;Fill&quot; /&gt;.">Вызывается при возникновении ошибки, когда применяется метод <see langword="Fill" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; object.">Объект <see cref="T:System.Data.FillErrorEventArgs" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary vsli:raw="Resets &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; to its default state and causes &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)&quot; /&gt; to honor &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt;.">Сбрасывает свойство <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> к состоянию по умолчанию и вызывает метод <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> для обеспечения поддержки свойства <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property should be persisted.">Определяет, должно ли сохраняться свойство <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если свойство <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> должно сохраняться; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property should be persisted.">Определяет, должно ли сохраняться свойство <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если свойство <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> должно сохраняться; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary vsli:raw="Determines whether one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist and they should be persisted.">Определяет, существует ли один или несколько объектов <see cref="T:System.Data.Common.DataTableMapping" /> и нужно ли их сохранить.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если существует один или несколько объектов <see cref="T:System.Data.Common.DataTableMapping" />, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table.&quot;">Вызывает соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном объекте <see cref="T:System.Data.DataSet" /> из <see cref="T:System.Data.DataTable" /> с именем "Table".</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">Объект <see cref="T:System.Data.DataSet" />, использованный для обновления источника данных.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary vsli:raw="Gets or sets a value indicating whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; after it is added to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; during any of the Fill operations.">Возвращает или задает значение, указывающее, вызывается ли метод <see cref="M:System.Data.DataRow.AcceptChanges" /> в объекте <see cref="T:System.Data.DataRow" /> после его добавления к объекту <see cref="T:System.Data.DataTable" /> при выполнении любой из операций Fill.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Значение <see langword="true" />, если метод <see cref="M:System.Data.DataRow.AcceptChanges" /> вызывается в объект <see cref="T:System.Data.DataRow" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary vsli:raw="Gets or sets whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Возвращает или задает, вызывается ли метод <see cref="M:System.Data.DataRow.AcceptChanges" /> при вызове метода <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during an &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Значение <see langword="true" />, если метод <see cref="M:System.Data.DataRow.AcceptChanges" /> вызывается при вызове метода <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary vsli:raw="Gets or sets a value that specifies whether to generate an exception when an error is encountered during a row update.">Возвращает или задает значение, указывающее, следует ли генерировать ли исключение при обнаружении ошибки во время обновления строки.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to continue the update without generating an exception; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для продолжения обновления без генерации исключения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; that determines how the adapter fills the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Возвращает или задает значение перечисления типа <see cref="T:System.Data.LoadOption" />, определяющее, как адаптер заполняет объект <see cref="T:System.Data.DataTable" /> из объекта <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; value.">Значение <see cref="T:System.Data.LoadOption" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary vsli:raw="Determines the action to take when incoming data does not have a matching table or column.">Определяет действие, выполняемое, если входные данные не соответствуют таблице или столбцу.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Заданное значение не является одним из значений <see cref="T:System.Data.MissingMappingAction" />.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />. Значение по умолчанию — <see langword="Passthrough" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Определяет действие, которое должно быть выполнено, если существующая схема <see cref="T:System.Data.DataSet" /> не соответствует входным данным.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Заданное значение не является одним из значений <see cref="T:System.Data.MissingSchemaAction" />.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />. Значение по умолчанию — <see langword="Add" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary vsli:raw="Gets or sets whether the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values or common CLS-compliant values.">Возвращает или задает, должен ли метод <see langword="Fill" /> возвращать зависящие от поставщика значения или обычные CLS-совместимые значения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values; otherwise &lt;see langword=&quot;false&quot; /&gt; to return common CLS-compliant values.">Значение <see langword="true" />, если метод <see langword="Fill" /> должен возвращать зависящие от поставщика значения; в противном случае — значение <see langword="false" />, чтобы возвращать обычные CLS-совместимые значения.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">Указывает, как исходная таблица сопоставлена с таблицей набора данных.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Коллекция, обеспечивающая основное сопоставление между возвращенными записями и объектом <see cref="T:System.Data.DataSet" />. Значение по умолчанию — пустая коллекция.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that provides the primary mapping between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Получает коллекцию, обеспечивающую основное сопоставление между исходной таблицей и <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Коллекция, обеспечивающая основное сопоставление между возвращенными записями и объектом <see cref="T:System.Data.DataSet" />. Значение по умолчанию — пустая коллекция.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary vsli:raw="Contains a generic column mapping for an object that inherits from &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;. This class cannot be inherited.">Содержит универсальное сопоставление столбца для объекта, который наследуется из объекта <see cref="T:System.Data.Common.DataAdapter" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class with the specified source column name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name to map to.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца и именем столбца <see cref="T:System.Data.DataSet" /> для сопоставления.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">Зависящее от регистра имя столбца из источника данных.</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Имя столбца без учета регистра из объекта <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the given &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.DataSetColumn&quot; /&gt; property.">Получает объект <see cref="T:System.Data.DataColumn" /> из данного объекта <see cref="T:System.Data.DataTable" /> с использованием объекта <see cref="T:System.Data.MissingSchemaAction" /> и свойства <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to get the column from.">Объект <see cref="T:System.Data.DataTable" />, из которого получается столбец.</param>
      <param name="dataType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the data column.">Объект <see cref="T:System.Type" /> столбца данных.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns vsli:raw="A data column.">Столбец данных.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static version of &lt;see cref=&quot;M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)&quot; /&gt; that can be called without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Статическая версия метода <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" />, который может быть вызван без создания экземпляра объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">Зависящее от регистра имя столбца из источника данных.</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Имя столбца без учета регистра из объекта <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Экземпляр <see cref="T:System.Data.DataTable" />.</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">Тип данных для сопоставляемого столбца.</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Определяет действие, которое должно быть выполнено, если существующая схема <see cref="T:System.Data.DataSet" /> не соответствует входным данным.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Объект <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Создает новый объект, являющийся копией текущего экземпляра.</summary>
      <returns vsli:raw="A copy of the current object.">Копия текущего объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name to a string.">Преобразует текущее имя <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> в строку.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name as a string.">Текущее имя <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> как строка.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Возвращает или задает имя столбца в объекте <see cref="T:System.Data.DataSet" /> для сопоставления.</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">Имя столбца в объекте <see cref="T:System.Data.DataSet" /> для сопоставления. Имя без учета регистра.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">Возвращает или задает имя столбца в источнике данных для сопоставления. Имя указано с учетом регистра.</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">Имя столбца в источнике данных, определяемое с учетом регистра.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Содержит коллекцию объектов <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">Создает пустой словарь <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection.">Добавляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object to add to the collection.">Объект <see langword="DataColumnMapping" /> для добавления в коллекцию.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Переданный объект не был объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">Индекс объекта <see langword="DataColumnMapping" />, который был добавлен в коллекцию.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection when given a source column name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Добавляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию на основе заданного имени исходного столбца и имени столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column to map to.">Зависящее от регистра имя исходного столбца для сопоставления.</param>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to map to.">Независящее от регистра имя столбца <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">Объект <see langword="DataColumnMapping" />, добавленный в коллекцию.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">Копирует элементы указанного объекта <see cref="T:System.Array" /> в конец коллекции.</summary>
      <param name="values" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; to add to the collection.">Параметр <see cref="T:System.Array" /> для добавления в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to the end of the collection.">Копирует элементы указанного массива <see cref="T:System.Data.Common.DataColumnMapping" /> в конец коллекции.</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects to add to the collection.">Массив объектов <see cref="T:System.Data.Common.DataColumnMapping" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects from the collection.">Удаляет все объекты <see cref="T:System.Data.Common.DataColumnMapping" /> из коллекции.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Object&quot; /&gt; exists in the collection.">Возвращает значение, указывающее, существует ли объект <see cref="T:System.Data.Common.DataColumnMapping" /> с данным объектом <see cref="T:System.Object" /> в коллекции.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt;.">Объект <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Переданный объект не был объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если коллекция содержит указанный объект <see cref="T:System.Data.Common.DataColumnMapping" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given source column name exists in the collection.">Возвращает значение, указывающее, существует ли объект <see cref="T:System.Data.Common.DataColumnMapping" /> с данным именем исходного столбца в коллекции.</summary>
      <param name="value" vsli:raw="The case-sensitive source column name of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Зависящее от регистра имя исходного столбца объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if collection contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если коллекция содержит объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified array.">Копирует элементы <see cref="T:System.Data.Common.DataColumnMappingCollection" /> в указанный массив.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">Массив <see cref="T:System.Array" />, в который копируются элементы <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index" vsli:raw="The starting index of the array.">Начальный индекс массива.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array.">Копирует элементы объекта <see cref="T:System.Data.Common.DataColumnMappingCollection" /> в указанный массив <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">Массив <see cref="T:System.Data.Common.DataColumnMapping" />, в который копируются элементы <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index" vsli:raw="The zero-based index in the &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Индекс (с нуля) в <paramref name="array" />, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Возвращает объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="value" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">Независящее от регистра имя искомого столбца <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем столбца <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, source column name, and &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">Возвращает объект <see cref="T:System.Data.Common.DataColumnMapping" /> для указанного <see cref="T:System.Data.Common.DataColumnMappingCollection" />, имени исходного столбца и <see cref="T:System.Data.MissingMappingAction" />.</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name to find.">Зависящее от регистра имя исходного столбца для поиска.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">Для параметра <paramref name="mappingAction" /> было задано значение <see langword="Error" /> и не было указано сопоставление.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DataColumnMapping" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static method that returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; object.">Статический метод, который возвращает объект <see cref="T:System.Data.DataColumn" />, не создавая экземпляр объекта <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">Зависящее от регистра имя столбца из источника данных.</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">Тип данных для сопоставляемого столбца.</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Экземпляр <see cref="T:System.Data.DataTable" />.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Определяет действие, которое должно быть выполнено, если существующая схема <see cref="T:System.Data.DataSet" /> не соответствует входным данным.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Объект <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">Возвращает перечислитель, который может выполнять итерацию элементов коллекции.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">Возвращает расположение указанного объекта <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекции.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to find.">Объект <see cref="T:System.Object" />, являющийся объектом <see cref="T:System.Data.Common.DataColumnMapping" /> для поиска.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">Отсчитываемое от нуля расположение указанного объекта <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified source column name.">Возвращает местоположение объекта <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">Зависящее от регистра имя исходного столбца.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified case-sensitive source column name.">Отсчитываемое от нуля расположение объекта <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным зависящим от регистра именем исходного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Возвращает местоположение указанного объекта <see cref="T:System.Data.Common.DataColumnMapping" /> с заданным именем столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the data set column to find.">Независящее от регистра имя столбца набора данных для поиска.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see langword=&quot;DataSet&quot; /&gt; column name, or -1 if the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object does not exist in the collection.">Отсчитываемое от нуля расположение указанного объекта <see cref="T:System.Data.Common.DataColumnMapping" /> с данным именем столбца <see langword="DataSet" /> или -1, если объект <see langword="DataColumnMapping" /> не существует в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">Вставляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию <see cref="T:System.Data.Common.DataColumnMappingCollection" /> по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">Отсчитываемый от нуля индекс вставляемого объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">Вставляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию <see cref="T:System.Data.Common.DataColumnMappingCollection" /> по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">Отсчитываемый от нуля индекс вставляемого объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">Удаляет указанный объект <see cref="T:System.Data.Common.DataColumnMapping" /> из коллекции.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">Объект <see cref="T:System.Data.Common.DataColumnMapping" /> для удаления.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">Удаляет из коллекции объект <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">Объект <see cref="T:System.Object" />, являющийся объектом <see cref="T:System.Data.Common.DataColumnMapping" /> для удаления.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Указанный объект не являлся объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">Указанный объект отсутствует в коллекции.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index from the collection.">Удаляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным индексом из коллекции.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to remove.">Индекс (с нуля) удаляемого объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index.">Отсутствует объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным индексом.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name from the collection.">Удаляет из коллекции объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name.">Зависящее от регистра имя исходного столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Отсутствует объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; by using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">Добавляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию <see cref="T:System.Data.Common.DataColumnMappingCollection" /> с помощью имени исходного столбца и имени столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Зависящее от регистра имя исходного столбца.</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">Имя столбца <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">Объект ColumnMapping, который был добавлен в коллекцию.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Возвращает объект <see cref="T:System.Data.Common.DataColumnMapping" /> с заданным именем столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetColumnName" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">Независящее от регистра имя искомого столбца <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that  has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Объект <see cref="T:System.Data.Common.DataColumnMapping" /> с заданным именем столбца <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects in the collection.">Возвращает количество объектов <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекции.</summary>
      <returns vsli:raw="The number of items in the collection.">Количество элементов в коллекции.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">Возвращает или задает объект <see cref="T:System.Data.Common.DataColumnMapping" /> по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to find.">Отсчитываемый от нуля индекс искомого объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">Объект <see cref="T:System.Data.Common.DataColumnMapping" />, расположенный по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Возвращает или задает объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">Зависящее от регистра имя исходного столбца.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Возвращает значение, указывающее, является ли доступ к <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Объект, который может быть использован для синхронизации доступа к коллекции <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">Получает значение, показывающее, имеет ли объект <see cref="T:System.Collections.IList" /> фиксированный размер.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Collections.IList" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">Получает значение, указывающее, доступен ли объект <see cref="T:System.Collections.IList" /> только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.IList" /> доступен только для чтения, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</param>
      <returns vsli:raw="The element at the specified index.">Элемент, расположенный по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Возвращает или задает объект <see cref="T:System.Data.IColumnMapping" /> с указанным именем <see langword="SourceColumn" />.</summary>
      <param name="index" vsli:raw="Index of the element.">Индекс элемента.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Объект <see langword="IColumnMapping" /> с указанным именем <see langword="SourceColumn" />.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary vsli:raw="Contains a description of a mapped relationship between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This class is used by a &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; when populating a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Содержит описание сопоставленного отношения между исходной таблицей и <see cref="T:System.Data.DataTable" />. Этот класс используется объектом <see cref="T:System.Data.Common.DataAdapter" /> при заполнении <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class with a source when given a source table name and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataTableMapping" /> с источником, если дано имя исходной таблицы и имя <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">Имя исходной таблицы из источника данных, определяемое с учетом регистра.</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Имя таблицы из <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class when given a source table name, a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name, and an array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataTableMapping" />, если дано имя исходной таблицы, имя объекта <see cref="T:System.Data.DataTable" /> и массив объектов <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">Имя исходной таблицы из источника данных, определяемое с учетом регистра.</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Имя таблицы из <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
      <param name="columnMappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Массив объектов <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; value and the name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Получает объект <see cref="T:System.Data.DataColumn" /> из указанного объекта <see cref="T:System.Data.DataTable" /> с использованием указанного значения <see cref="T:System.Data.MissingMappingAction" /> и имени объекта <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Имя <see cref="T:System.Data.DataColumn" />.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">Для параметра <paramref name="mappingAction" /> было задано значение <see langword="Error" /> и не было указано сопоставление.</exception>
      <returns vsli:raw="A data column.">Столбец данных.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object for a given column name.">Возвращает объект <see cref="T:System.Data.DataColumn" /> для данного имени столбца.</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Имя <see cref="T:System.Data.DataColumn" />.</param>
      <param name="dataType" vsli:raw="The data type for &lt;paramref name=&quot;sourceColumn&quot; /&gt;.">Тип данных для объекта <paramref name="sourceColumn" />.</param>
      <param name="dataTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Имя таблицы из <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Объект <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; value.">Получает текущий объект <see cref="T:System.Data.DataTable" /> для указанного объекта <see cref="T:System.Data.DataSet" /> с использованием указанного значения <see cref="T:System.Data.MissingSchemaAction" />.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from which to get the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Объект <see cref="T:System.Data.DataSet" />, из которого получается объект <see cref="T:System.Data.DataTable" />.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns vsli:raw="A data table.">Таблица данных.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Создает новый объект, являющийся копией текущего экземпляра.</summary>
      <returns vsli:raw="A new object that is a copy of the current instance.">Новый объект, который является копией текущего экземпляра.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name to a string.">Преобразует текущее имя <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> в строку.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name, as a string.">Текущее имя <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> как строка.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Возвращает состояние <see cref="T:System.Data.Common.DataColumnMappingCollection" /> для экземпляра <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A data column mapping collection.">Коллекция сопоставлений столбцов данных.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Возвращает или задает имя таблицы из <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Имя таблицы из <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive source table name from a data source.">Возвращает или задает имя исходной таблицы из источника данных, определяемое с учетом регистра.</summary>
      <returns vsli:raw="The case-sensitive source table name from a data source.">Имя исходной таблицы из источника данных, определяемое с учетом регистра.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Получает производной коллекции <see cref="T:System.Data.Common.DataColumnMappingCollection" /> для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A data column mapping collection.">Коллекция сопоставлений столбцов данных.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects. This class cannot be inherited.">Коллекция объектов <see cref="T:System.Data.Common.DataTableMapping" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; class. This new instance is empty, that is, it does not yet contain any &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataTableMappingCollection" />. Этот новый экземпляр пуст, т. е. пока не содержит объектов <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a table mapping to the collection.">Добавляет объект <see cref="T:System.Object" />, являющийся сопоставлением таблиц в коллекции.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataTableMapping&quot; /&gt; object to add to the collection.">Объект <see langword="DataTableMapping" /> для добавления в коллекцию.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Переданный объект не был объектом <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataTableMapping&quot; /&gt; object added to the collection.">Индекс объекта <see langword="DataTableMapping" />, который был добавлен к коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to the collection when given a source table name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Добавляет <see cref="T:System.Data.Common.DataTableMapping" /> к коллекции для данного имени исходной таблицы и имени таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table to map from.">Имя исходной таблицы для сопоставления, определяемое с учетом регистра.</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to map to.">Имя таблицы <see cref="T:System.Data.DataSet" /> для сопоставления, определяемое без учета регистра.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object that was added to the collection.">Объект <see cref="T:System.Data.Common.DataTableMapping" />, добавленный в коллекцию.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">Копирует элементы указанного объекта <see cref="T:System.Array" /> в конец коллекции.</summary>
      <param name="values" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; of values to add to the collection.">Массив значений типа <see cref="T:System.Array" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; array to the end of the collection.">Копирует элементы указанного массива <see cref="T:System.Data.Common.DataTableMapping" /> в конец коллекции.</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects to add to the collection.">Массив объектов <see cref="T:System.Data.Common.DataTableMapping" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects from the collection.">Удаляет все объекты <see cref="T:System.Data.Common.DataTableMapping" /> из коллекции.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the given &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object exists in the collection.">Получает значение, показывающее, существует ли данный объект <see cref="T:System.Data.Common.DataTableMapping" /> в коллекции.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;.">Объект <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если коллекция содержит указанный объект <see cref="T:System.Data.Common.DataTableMapping" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name exists in the collection.">Получает значение, показывающее, существует ли объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы в коллекции.</summary>
      <param name="value" vsli:raw="The case-sensitive source table name containing the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Имя исходной таблицы, содержащей объект <see cref="T:System.Data.Common.DataTableMapping" />, определяемое с учетом регистра.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with this source table name; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если коллекция содержит объект <see cref="T:System.Data.Common.DataTableMapping" /> с этим именем исходной таблицы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; to the specified array.">Копирует элементы <see cref="T:System.Data.Common.DataTableMappingCollection" /> в указанный массив.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">Массив <see cref="T:System.Array" />, в который копируются элементы <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index" vsli:raw="The starting index of the array.">Начальный индекс массива.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to the specified array.">Копирует элементы <see cref="T:System.Data.Common.DataTableMapping" /> в указанный массив.</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">Объект <see cref="T:System.Data.Common.DataTableMapping" />, в который копируются элементы <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index" vsli:raw="The starting index of the array.">Начальный индекс массива.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Получает объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to find.">Имя таблицы <see cref="T:System.Data.DataSet" /> для поиска, определяемое без учета регистра.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">Возвращает перечислитель, который может выполнять итерацию элементов коллекции.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source table name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, using the given &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">Получает объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходной таблицы и именем таблицы <see cref="T:System.Data.DataSet" /> с помощью заданного <see cref="T:System.Data.MissingMappingAction" />.</summary>
      <param name="tableMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; collection to search.">Коллекция <see cref="T:System.Data.Common.DataTableMappingCollection" /> для поиска.</param>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the mapped source table.">Имя сопоставленной исходной таблицы, определяемое с учетом регистра.</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the mapped &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">Имя сопоставленной таблицы <see cref="T:System.Data.DataSet" /> без учета регистра.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">Для параметра <paramref name="mappingAction" /> было задано значение <see langword="Error" /> и не было указано сопоставление.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DataTableMapping" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">Получает местоположение указанного объекта <see cref="T:System.Data.Common.DataTableMapping" /> в коллекции.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to find.">Объект <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataTableMapping" /> для поиска.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">Местоположение (с нуля) указанного объекта <see cref="T:System.Data.Common.DataTableMapping" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Получает расположение объекта <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">Имя исходной таблицы с учетом регистра.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Местоположение (с нуля) объекта <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Получает расположение объекта <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see langword=&quot;DataSet&quot; /&gt; table to find.">Имя таблицы <see langword="DataSet" /> для поиска, определяемое без учета регистра.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, or -1 if the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist in the collection.">Местоположение (с нуля) объекта <see cref="T:System.Data.Common.DataTableMapping" /> с данным именем таблицы <see cref="T:System.Data.DataSet" />; -1, если объект <see cref="T:System.Data.Common.DataTableMapping" /> не существует в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">Вставляет объект <see cref="T:System.Data.Common.DataTableMapping" /> в коллекцию <see cref="T:System.Data.Common.DataTableMappingCollection" /> по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Отсчитываемый от нуля индекс вставляемого объекта <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Вставляемый объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">Вставляет объект <see cref="T:System.Data.Common.DataTableMapping" /> в коллекцию <see cref="T:System.Data.Common.DataTableMappingCollection" /> по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Отсчитываемый от нуля индекс вставляемого объекта <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Вставляемый объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">Удаляет указанный объект <see cref="T:System.Data.Common.DataTableMapping" /> из коллекции.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">Удаляемый объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">Удаляет указанный объект <see cref="T:System.Data.Common.DataTableMapping" /> из коллекции.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">Удаляемый объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Указанный объект не являлся объектом <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">Указанный объект отсутствует в коллекции.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object located at the specified index from the collection.">Удаляет объект <see cref="T:System.Data.Common.DataTableMapping" />, находящийся по указанному индексу, из коллекции.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">Индекс (с нуля) удаляемого объекта <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified index.">Объект <see cref="T:System.Data.Common.DataTableMapping" /> не существует по указанному индексу.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name from the collection.">Удаляет из коллекции объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name to find.">Имя исходной таблицы для поиска, определяемое с учетом регистра.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified source table name.">Не существует объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">Добавляет сопоставление таблицы в коллекцию.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Имя исходной таблицы с учетом регистра.</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">Имя таблицы <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">Ссылка на вновь сопоставленный объект <see cref="T:System.Data.ITableMapping" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Получает объект TableMapping с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">Имя таблицы <see langword="DataSet" /> в коллекции.</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">Объект TableMapping с указанным именем таблицы <see langword="DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects in the collection.">Возвращает количество объектов <see cref="T:System.Data.Common.DataTableMapping" /> в коллекции.</summary>
      <returns vsli:raw="The number of &lt;see langword=&quot;DataTableMapping&quot; /&gt; objects in the collection.">Количество объектов <see langword="DataTableMapping" /> в коллекции.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">Возвращает или задает объект <see cref="T:System.Data.Common.DataTableMapping" /> по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to return.">Отсчитываемый от нуля индекс возвращаемого объекта <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">Объект <see cref="T:System.Data.Common.DataTableMapping" />, расположенный по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Возвращает или задает объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">Имя исходной таблицы с учетом регистра.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Объект, который может быть использован для синхронизации доступа к коллекции <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.IList" /> фиксированный размер.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Collections.IList" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">Получает значение, указывающее, является ли объект <see cref="T:System.Collections.IList" /> доступным только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.IList" /> доступен только для чтения, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets an item from the collection at a specified index.">Возвращает или задает элемент, расположенный в коллекции по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to get or set.">Отсчитываемый от нуля индекс получаемого или задаваемого элемента.</param>
      <returns vsli:raw="The element at the specified index.">Элемент, расположенный по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">Возвращает или задает экземпляр класса <see cref="T:System.Data.ITableMapping" /> с указанным именем <see cref="P:System.Data.ITableMapping.SourceTable" />.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">Имя <see langword="SourceTable" /> объекта <see cref="T:System.Data.ITableMapping" />.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">Экземпляр класса <see cref="T:System.Data.ITableMapping" /> с указанным именем <see langword="SourceTable" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary vsli:raw="Represents a column within a data source.">Представляет столбец в источнике данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbColumn" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Возвращает логическое значение, допускающее присвоение null, указывающее, разрешены ли значения <see langword="DBNull" /> в этом столбце, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, разрешены ли значения <see langword="DBNull" /> в этом столбце, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Возвращает <see langword="true" />, если значения <see langword="DBNull" /> разрешены в этом столбце; в противном случае — <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary vsli:raw="Gets the catalog name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the catalog name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Получает имя каталога, связанного с источником данных; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя каталога или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns vsli:raw="The catalog name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Имя каталога, связанного с источником данных; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary vsli:raw="Gets the base column name; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the column name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Возвращает имя базового столбца; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя столбца или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns vsli:raw="The base column name; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Имя базового столбца; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary vsli:raw="Gets the schema name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the schema name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Получает имя схемы, связанной с источником данных; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя схемы или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns vsli:raw="The schema name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Имя схемы, связанной с источником данных; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary vsli:raw="Gets the server name associated with the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the server name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Получает имя сервера, связанное со столбцом; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя сервера или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns vsli:raw="The server name associated with the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Имя сервера, связанное со столбцом; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary vsli:raw="Gets the table name in the schema; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the table name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Возвращает имя таблицы в схеме; в противном случае возвращает <see langword="null" />, если значение не задано. Можно задать имя таблицы или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns vsli:raw="The table name in the schema; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Имя таблицы в схеме; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary vsli:raw="Gets the name of the column. Can be set to the column name when overridden in a derived class.">Возвращает имя столбца. Можно задать имя столбца при переопределении в производном классе.</summary>
      <returns vsli:raw="The name of the column.">Имя столбца.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary vsli:raw="Gets the column position (ordinal) in the datasource row; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column position or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Возвращает позицию столбца (порядковый номер) в строке источника данных; в противном случае — <see langword="null" />, если значение не задано. Можно задать либо значение <see langword="int32" />, указывающее позицию столбца, либо <see langword="null" /> при переопределении в производном классе.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column ordinal; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Значение <see langword="int32" /> для порядкового номера столбца; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary vsli:raw="Gets the column size; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column size or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Возвращает размер столбца; в противном случае — <see langword="null" />, если значение не задано. Можно задать либо значение <see langword="int32" />, указывающее размер столбца, либо <see langword="null" /> при переопределении в производном классе.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column size; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">
        <see langword="int32" />Значение для размера столбца; в противном случае — пустая ссылка ( <see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary vsli:raw="Gets the type of data stored in the column. Can be set to a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column when overridden in a derived class.">Возвращает тип данных, хранящихся в столбце. Можно задать объект <see cref="T:System.Type" />, представляющий тип данных в столбце при переопределении в производном классе.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data the column contains.">Объект <see cref="T:System.Type" />, представляющий тип данных, хранящихся в столбце.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary vsli:raw="Gets the name of the data type; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the data type name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Получает имя типа данных; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя типа данных или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns vsli:raw="The name of the data type; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Имя типа данных; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is aliased, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is aliased, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Возвращает логическое значение, допускающее присвоение null, указывающее, обозначен ли этот столбец псевдонимом, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, обозначен ли этот столбец псевдонимом, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is aliased; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Возвращает <see langword="true" />, если этот столбец обозначен псевдонимом, в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether values in this column are automatically incremented, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether values in this column are automatically incremented, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Возвращает логическое значение, допускающее присвоение null, указывающее, выполняется ли автоматическое увеличение значений в этом столбце, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, выполняется ли автоматическое увеличение значений в этом столбце, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if values in this column are automatically incremented; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Возвращает <see langword="true" />, если выполняется автоматическое увеличение значений в этом столбце; в противном случае — <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an expression, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an expression, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Возвращает логическое значение, допускающее присвоение null, указывающее, является ли этот столбец выражением, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, является ли этот столбец выражением, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Возвращает <see langword="true" />, если этот столбец является выражением; в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is hidden, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is hidden, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Возвращает логическое значение, допускающее присвоение null, указывающее, является ли этот столбец скрытым, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, является ли этот столбец скрытым, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is hidden; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Возвращает <see langword="true" />, если этот столбец является скрытым, в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an identity, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an identity, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Возвращает логическое значение, допускающее присвоение null, указывающее, является ли этот столбец идентификатором, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, является ли этот столбец идентификатором, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an identity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Возвращает <see langword="true" />, если этот столбец является идентификатором, в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is a key, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is a key, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Возвращает логическое значение, допускающее присвоение null, указывающее, является ли этот столбец ключом, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, является ли этот столбец ключом, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Возвращает <see langword="true" />, если этот столбец является ключом, в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column contains long data, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column contains long data, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Возвращает логическое значение, допускающее присвоение null, указывающее, содержит ли этот столбец данные большого формата, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, содержит ли этот столбец данные большого формата, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column contains long data; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Возвращает <see langword="true" />, если этот столбец содержит данные большого формата; в противном случае — <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is read-only, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is read-only, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Возвращает логическое значение, допускающее присвоение null, указывающее, доступен ли этот столбец только для чтения, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, доступен ли этот столбец только для чтения, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Возвращает <see langword="true" />, если этот столбец доступен только для чтения; в противном случае — значение <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether a unique constraint applies to this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether a unique constraint applies to this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Возвращает логическое значение, допускающее присвоение null, указывающее, применяется ли к этому столбцу уникальное ограничение, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, применяется ли к этому столбцу уникальное ограничение, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if a unique constraint applies to this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Возвращает <see langword="true" />, если к этому столбцу применяется уникальное ограничение; в противном случае — <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary vsli:raw="Gets the object based on the column property name.">Получает объект на основе имени свойства столбца.</summary>
      <param name="property" vsli:raw="The column property name.">Имя свойства столбца.</param>
      <returns vsli:raw="The object based on the column property name.">Объект на основе имени свойства столбца.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary vsli:raw="Gets the numeric precision of the column data; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the numeric precision of the column data or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Получает точность чисел данных в столбце; в противном случае — <see langword="null" />, если значение не задано. Можно задать либо значение <see langword="int32" />, указывающее точность чисел данных в столбце, либо <see langword="null" /> при переопределении в производном классе.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value that specifies the precision of the column data, if the data is numeric; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">
        <see langword="int32" />Значение, указывающее точность данных столбца, если данные являются числовыми; в противном случае — пустая ссылка ( <see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary vsli:raw="Gets a nullable &lt;see langword=&quot;int32&quot; /&gt; value that either returns &lt;see langword=&quot;null&quot; /&gt; or the numeric scale of the column data. Can be set to either &lt;see langword=&quot;null&quot; /&gt; or an &lt;see langword=&quot;int32&quot; /&gt; value for the numeric scale of the column data when overridden in a derived class.">Получает значение <see langword="int32" />, допускающее null, которое возвращает <see langword="null" /> или числовой масштаб данных в столбце. Можно задать значение <see langword="null" /> или <see langword="int32" /> для числового масштаба данных в столбце при переопределении в производном классе.</summary>
      <returns vsli:raw="A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set; otherwise, a &lt;see langword=&quot;int32&quot; /&gt; value that specifies the scale of the column data, if the data is numeric.">Пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано; в противном случае — значение <see langword="int32" />, указывающее масштаб данных в столбце, если данные являются числовыми.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary vsli:raw="Gets the assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the assembly-qualified name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Получает имя с указанием сборки для объекта <see cref="T:System.Type" />, представляющего тип данных в столбце; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя с указанием сборки или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns vsli:raw="The assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Имя с указанием сборки для объекта <see cref="T:System.Type" />, представляющего тип данных в столбце; в противном случае — пустая сборка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary vsli:raw="Represents an SQL statement or stored procedure to execute against a data source. Provides a base class for database-specific classes that represent commands. &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync&quot; /&gt;.">Представляет инструкцию SQL или хранимую процедуру, выполняемую с источником данных. Предоставляет базовый класс для классов, определяемых базой данных, которые представляют команды. <see cref="Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary vsli:raw="Constructs an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Создает экземпляр объекта <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary vsli:raw="Attempts to cancel the execution of a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">При переопределении в производном классе пытается отменить выполнение <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">При переопределении в производном классе создает новый экземпляр объекта <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Создает новый экземпляр объекта <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the command object.">Асинхронно размещает объект команды.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.ValueTask" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">При переопределении в производном классе выполняет команду для подключения.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Экземпляр <see cref="T:System.Data.CommandBehavior" />.</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Недопустимое значение <see cref="T:System.Data.CommandBehavior" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Задача, представляющая операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Providers should implement this method to provide a non-default implementation for &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; overloads.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteReader will be communicated via the returned Task Exception property.  &#xA;  &#xA; This method accepts a cancellation token that can be used to request the operation to be cancelled early. Implementations may ignore this request.">Поставщики должны реализовать этот метод, чтобы предоставить реализацию, отличную от реализации по умолчанию, для перегрузок <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />.  
  
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbCommand.ExecuteReader" /> и возвращает завершенную задачу, блокируя вызывающий поток. Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный токен отмены. Исключения, создаваемые ExecuteReader, будут связаны через возвращаемое свойство исключения задачи.  
  
Этот метод принимает токен отмены, который может использоваться для запроса ранней отмены операции. Реализации могут игнорировать данный запрос.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Параметры для завершения инструкции и извлечения данных.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Токен для отмены асинхронной операции.</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Недопустимое значение <see cref="T:System.Data.CommandBehavior" />.</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes the command against its connection object, returning the number of rows affected.">При переопределении в производном классе выполняет инструкцию SQL для объекта подключения.</summary>
      <returns vsli:raw="The number of rows affected.">Число обработанных строк.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;, which executes the command against its connection object, returning the number of rows affected.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Асинхронная версия <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />, которая выполняет инструкцию SQL относительно объекта соединения.  
  
Вызывает <see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> с CancellationToken.None.</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token.  Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">Это асинхронная версия метода <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />. Поставщики должны выполнить переопределение с помощью соответствующей реализации. При необходимости можно игнорировать токен отмены.  
  
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> и возвращает завершенную задачу, блокируя вызывающий поток. Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный токен отмены.  Исключения, создаваемые <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />, будут связаны через возвращаемое свойство исключения задачи.  
  
Не вызывайте другие методы и свойства объекта <see langword="DbCommand" /> до тех пор, пока возвращаемая задача не будет завершена.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Токен для отмены асинхронной операции.</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">Выполняет свойство <see cref="P:System.Data.Common.DbCommand.CommandText" /> применительно к свойству <see cref="P:System.Data.Common.DbCommand.Connection" /> и возвращает объект <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">Выполняет свойство <see cref="P:System.Data.Common.DbCommand.CommandText" /> применительно к свойству <see cref="P:System.Data.Common.DbCommand.Connection" /> и возвращает объект <see cref="T:System.Data.Common.DbDataReader" />, используя одно из значений типа <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Одно из значений перечисления, задающее поведение команды.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Асинхронная версия <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, которая выполняет <see cref="P:System.Data.Common.DbCommand.CommandText" /> относительно <see cref="P:System.Data.Common.DbCommand.Connection" /> и возвращает <see cref="T:System.Data.Common.DbDataReader" />.  
  
Вызывает <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> с CancellationToken.None.</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Недопустимое значение <see cref="T:System.Data.CommandBehavior" />.</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Асинхронная версия <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, которая выполняет <see cref="P:System.Data.Common.DbCommand.CommandText" /> относительно <see cref="P:System.Data.Common.DbCommand.Connection" /> и возвращает <see cref="T:System.Data.Common.DbDataReader" />.  
  
Вызывает <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies how the command should execute and how data should be retrieved.">Одно из значений перечисления, задающее поведение команды.</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Недопустимое значение <see cref="T:System.Data.CommandBehavior" />.</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Вызывает <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">Одно из значений перечисления, задающее поведение команды.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Токен для отмены асинхронной операции.</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Недопустимое значение <see cref="T:System.Data.CommandBehavior" />.</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Асинхронная версия <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, которая выполняет <see cref="P:System.Data.Common.DbCommand.CommandText" /> относительно <see cref="P:System.Data.Common.DbCommand.Connection" /> и возвращает <see cref="T:System.Data.Common.DbDataReader" />. Этот метод распространяет уведомление о том, что операции следует отменить.  
  
Вызывает <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Токен для отмены асинхронной операции.</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Недопустимое значение <see cref="T:System.Data.CommandBehavior" />.</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.">При переопределении в производном классе выполняет запрос и возвращает первый столбец первой строки в результирующем наборе, возвращаемом запросом. Все другие столбцы и строки игнорируются.</summary>
      <returns vsli:raw="The first column of the first row in the first result set.">Первый столбец первой строки в результирующем наборе.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;, which executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.  &#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Асинхронная версия метода <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />, который выполняет запрос и возвращает первый столбец первой строки в наборе результатов, возвращаемых запросом. Все другие столбцы и строки игнорируются.  
  
Вызывает <see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> с CancellationToken.None.</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteScalar will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">Это асинхронная версия метода <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />. Поставщики должны выполнить переопределение с помощью соответствующей реализации. При необходимости можно игнорировать токен отмены.  
  
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> и возвращает завершенную задачу, блокируя вызывающий поток. Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный токен отмены. Исключения, создаваемые ExecuteScalar, будут связаны через возвращаемое свойство исключения задачи.  
  
Не вызывайте другие методы и свойства объекта <see langword="DbCommand" /> до тех пор, пока возвращаемая задача не будет завершена.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Токен для отмены асинхронной операции.</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">При переопределении в производном классе создает подготовленную (или скомпилированную) версию команды в источнике данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.PrepareAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a prepared (or compiled) version of the command on the data source.">Асинхронно создает подготовленную (или скомпилированную) версию команды в источнике данных.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Необязательный токен для отмены асинхронной операции. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">Создает новый экземпляр объекта <see cref="T:System.Data.IDbDataParameter" /> .</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">Объект <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Выполняет <see cref="P:System.Data.IDbCommand.CommandText" /> применительно к объекту <see cref="P:System.Data.IDbCommand.Connection" /> и создает <see cref="T:System.Data.IDataReader" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Объект <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Выполняет <see cref="P:System.Data.IDbCommand.CommandText" /> применительно к объекту <see cref="P:System.Data.IDbCommand.Connection" /> и создает <see cref="T:System.Data.IDataReader" /> с помощью одного из значений <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">Одно из значений перечисления, задающее поведение команды.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Объект <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">При переопределении в производном классе получает или задает текстовую команду для выполнения в отношении источника данных.</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">Текст команды для выполнения. Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute the command and generating an error.">При переопределении в производном классе получает или задает время ожидания (в секундах) перед завершением попытки выполнить команду и выдачей сообщения об ошибке.</summary>
      <returns vsli:raw="The time in seconds to wait for the command to execute.">Время в секундах, в течение которого должно происходить ожидание выполнения команды.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary vsli:raw="Gets or sets how the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandText&quot; /&gt; property is interpreted.">При переопределении в производном классе возвращает или задает способ интерпретации свойства <see cref="P:System.Data.Common.DbCommand.CommandText" />.</summary>
      <returns vsli:raw="One of the enumeration values that specifies how a command string is interpreted. The default is &lt;see langword=&quot;Text&quot; /&gt;.">Одно из значений перечисления, указывающее, как интерпретируется Командная строка. Значение по умолчанию — <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Возвращает или задает соединение <see cref="T:System.Data.Common.DbConnection" />, используемое этой командой <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">Соединение с источником данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">При переопределении в производном классе получает или задает <see cref="T:System.Data.Common.DbConnection" />, используемый <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">Соединение с источником данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects.">При переопределении в производном классе возвращает коллекцию объектов <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Параметры инструкции SQL или хранимой процедуры.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">При переопределении в производном классе получает или задает <see cref="P:System.Data.Common.DbCommand.DbTransaction" />, который выполняет этот объект <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Транзакция, в рамках которой выполняется командный объект поставщика данных .NET. Значением по умолчанию является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary vsli:raw="Gets or sets a value indicating whether the command object should be visible in a customized interface control.">При переопределении в производном классе получает или задает значение, определяющее, должен ли объект команды выводиться на экран в настраиваемом элементе управления интерфейса.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command object should be visible in a control; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Значение <see langword="true" />, если объект команды должен выводиться на экран в элементе управления; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects. For more information on parameters, see Configuring Parameters and Parameter Data Types.">Возвращает коллекцию объектов <see cref="T:System.Data.Common.DbParameter" />. Дополнительные сведения о параметрах см. в разделе Настройка параметров и типов данных параметров.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Параметры инструкции SQL или хранимой процедуры.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Возвращает или задает объект <see cref="T:System.Data.IDbConnection" />, используемый этим экземпляром класса <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">Соединение с источником данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">Возвращает набор <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Параметры инструкции SQL или хранимой процедуры.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">Возвращает или задает контекст <see cref="P:System.Data.Common.DbCommand.DbTransaction" />, в котором выполняется этот объект <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="The transaction within which a &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Транзакция, в рамках которой выполняется объект <see langword="Command" /> поставщика данных .NET Framework. Значением по умолчанию является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">Возвращает или задает контекст <see cref="T:System.Data.Common.DbTransaction" />, в котором выполняется этот объект <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Транзакция, в рамках которой выполняется объект <see langword="Command" /> поставщика данных .NET Framework. Значением по умолчанию является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the Update method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">При переопределении в производном классе получает или задает способ применения результатов команды к объекту <see cref="T:System.Data.DataRow" />, если он используется методом Update объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="One of the enumeration values that indicates how command results are applied. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">Одно из значений перечисления, указывающее, как применяются результаты команды. Значение по умолчанию — <see langword="Both" />, если команда не создается автоматически. Значение по умолчанию — <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary vsli:raw="Automatically generates single-table commands used to reconcile changes made to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the associated database. This is an abstract class that can only be inherited.">Автоматически создает однотабличные команды, которые позволяют согласовать изменения, внесенные в <see cref="T:System.Data.DataSet" />, со связанной базой данных. Это абстрактный класс, который может только наследоваться.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of a class that inherits from the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Инициализирует новый экземпляр класса, который наследует от класса <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary vsli:raw="Allows the provider implementation of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class to handle additional parameter properties.">Разрешает реализации поставщика класса <see cref="T:System.Data.Common.DbCommandBuilder" /> обрабатывать дополнительные свойства параметров.</summary>
      <param name="parameter" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to which the additional modifications are applied.">Объект <see cref="T:System.Data.Common.DbParameter" />, к которому применяются дополнительные изменения.</param>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the schema table provided by &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt;.">Объект <see cref="T:System.Data.DataRow" />, из которого таблица схемы предоставляется с помощью метода <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</param>
      <param name="statementType" vsli:raw="The type of command being generated; INSERT, UPDATE or DELETE.">Тип создаваемой команды: INSERT, UPDATE или DELETE.</param>
      <param name="whereClause" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parameter is part of the update or delete WHERE clause, &lt;see langword=&quot;false&quot; /&gt; if it is part of the insert or update values.">Значение <see langword="true" />, если параметр является частью значений команд UPDATE или DELETE предложения WHERE, значение <see langword="false" />, если он является частью значений команд INSERT или UPDATE.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; and optionally releases the managed resources.">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DbCommandBuilder" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source.">Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, который требуется для выполнения операций удаления в источнике данных.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">Автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, необходимый для выполнения операций удаления.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source, optionally using columns for parameter names.">Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, который требуется для выполнения операций удаления в источнике данных (дополнительно могут использоваться имена столбцов для определения имен параметров).</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Если значением является <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются <c>@p1</c>, <c>@p2</c> и т. д.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">Автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, необходимый для выполнения операций удаления.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source.">Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, который требуется для выполнения операций вставки в источнике данных.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">Автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, необходимый для выполнения операций вставки.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source, optionally using columns for parameter names.">Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, который требуется для выполнения операций вставки в источнике данных (дополнительно могут использоваться столбцы для определения имен параметров).</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Если значением является <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются <c>@p1</c>, <c>@p2</c> и т. д.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">Автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, необходимый для выполнения операций вставки.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified parameter in the format of &lt;c&gt;@p#&lt;/c&gt;. Use when building a custom command builder.">Возвращает имя указанного параметра в формате <c>@p#</c>. Используется при создании пользовательского построителя команд.</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">Число, включаемое как часть имени параметра.</param>
      <returns vsli:raw="The name of the parameter with the specified number appended as part of the parameter name.">Имя параметра с заданным числом, добавляемым в качестве части имени этого параметра.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary vsli:raw="Returns the full parameter name, given the partial parameter name.">Возвращает полное имя параметра при данном частичном имени параметра.</summary>
      <param name="parameterName" vsli:raw="The partial name of the parameter.">Частичное имя параметра.</param>
      <returns vsli:raw="The full parameter name corresponding to the partial parameter name requested.">Полное имя параметра, соответствующее запрошенному частичному имени параметра.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary vsli:raw="Returns the placeholder for the parameter in the associated SQL statement.">Возвращает местозаполнитель для параметра в связанной инструкции SQL.</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">Число, включаемое как часть имени параметра.</param>
      <returns vsli:raw="The name of the parameter with the specified number appended.">Имя параметра с указанным добавленным числом.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary vsli:raw="Returns the schema table for the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Возвращает таблицу схемы для объекта <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <param name="sourceCommand" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; for which to retrieve the corresponding schema table.">Объект <see cref="T:System.Data.Common.DbCommand" />, для которого выполняется извлечение соответствующей таблицы схемы.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that represents the schema for the specific &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Объект <see cref="T:System.Data.DataTable" />, представляющий схему для указанного объекта <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source.">Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, который требуется для выполнения операций обновления в источнике данных.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">Автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, необходимый для выполнения операций обновления.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source, optionally using columns for parameter names.">Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, который требуется для выполнения операций обновления в источнике данных (дополнительно могут использоваться столбцы для определения имен параметров).</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Если значением является <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются <c>@p1</c>, <c>@p2</c> и т. д.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">Автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, необходимый для выполнения операций обновления.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary vsli:raw="Resets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandTimeout&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.Transaction&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandType&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; properties on the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Сбрасывает свойства <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" /> и <see cref="T:System.Data.UpdateRowSource" /> в объекте <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; to be used by the command builder for the corresponding insert, update, or delete command.">Объект <see cref="T:System.Data.Common.DbCommand" />, который должен использоваться построителем команд для соответствующих команд INSERT, UPDATE или DELETE.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; instance to use for each insert, update, or delete operation. Passing a null value allows the &lt;see cref=&quot;M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)&quot; /&gt; method to create a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object based on the Select command associated with the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Экземпляр объекта <see cref="T:System.Data.Common.DbCommand" />, используемый для каждой операции вставки, обновления или удаления. Передача значения NULL позволяет методу <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> создавать объект <see cref="T:System.Data.Common.DbCommand" /> на основе команды Select, связанной с объектом <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary vsli:raw="Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.">Если у идентификатора нет кавычек, при наличии правильного каталога возвращает правильную форму этого идентификатора, взятую в кавычки, при этом корректно избегает кавычек, встроенных в идентификатор.</summary>
      <param name="unquotedIdentifier" vsli:raw="The original unquoted identifier.">Исходный идентификатор без кавычек.</param>
      <returns vsli:raw="The quoted version of the identifier. Embedded quotes within the identifier are properly escaped.">Версия идентификатора, заключенного кавычки. Кавычки, встроенные в идентификатор, корректно игнорируются.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary vsli:raw="Clears the commands associated with this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Очищает команды, связанные с этим объектом <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Adds an event handler for the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event.">Добавляет обработчик событий для события <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />.</summary>
      <param name="rowUpdatingEvent" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; instance containing information about the event.">Экземпляр класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />, содержащий сведения о событии.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to handle the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event for a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Регистрирует объект <see cref="T:System.Data.Common.DbCommandBuilder" />, чтобы обработать событие <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> для объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <param name="adapter" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; to be used for the update.">Объект <see cref="T:System.Data.Common.DbDataAdapter" />, который требуется использовать для обновления.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary vsli:raw="Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.">Если у идентификатора есть кавычки, возвращает форму этого идентификатора без кавычек, при этом корректно учитывая кавычки, встроенные в идентификатор.</summary>
      <param name="quotedIdentifier" vsli:raw="The identifier that will have its embedded quotes removed.">Идентификатор, из которого будут удалены внедренные кавычки.</param>
      <returns vsli:raw="The unquoted identifier, with embedded quotes properly un-escaped.">Идентификатор без кавычек, в котором встроенные кавычки корректно учтены.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Возвращает или задает <see cref="T:System.Data.Common.CatalogLocation" /> для экземпляра класса <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.CatalogLocation" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary vsli:raw="Gets or sets a string used as the catalog separator for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Возвращает или задает строку, которую можно использовать в качестве разделителя каталогов для экземпляра класса <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="A string indicating the catalog separator for use with an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Строка, указывающая разделитель каталогов, который используется в экземпляре класса <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary vsli:raw="Specifies which &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; is to be used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Указывает, какое значение типа <see cref="T:System.Data.ConflictOption" /> должно использоваться объектом <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="Returns one of the &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; values describing the behavior of this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Возвращает одно из значений <see cref="T:System.Data.ConflictOption" />, описывающих функционирование этого объекта <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object for which Transact-SQL statements are automatically generated.">Возвращает или задает объект <see cref="T:System.Data.Common.DbDataAdapter" />, для которого автоматически создаются инструкции Transact-SQL.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary vsli:raw="Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">Возвращает или задает начальный символ или символы, используемые для указания объектов базы данных (например, таблиц или столбцов), имена которых содержат такие символы, как пробелы или зарезервированные токены.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property cannot be changed after an insert, update, or delete command has been generated.">Это свойство не может быть изменено после создания команды INSERT, UPDATE или DELETE.</exception>
      <returns vsli:raw="The beginning character or characters to use. The default is an empty string.">Используемый начальный символ или символы. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary vsli:raw="Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">Получает или задает конечный символ или символы, используемые для указания объектов базы данных (например, таблиц или столбцов), имена которых содержат такие символы, как пробелы или зарезервированные токены.</summary>
      <returns vsli:raw="The ending character or characters to use. The default is an empty string.">Используемый конечный символ или символы. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary vsli:raw="Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.">Возвращает или задает символ, который используется в качестве разделителя между идентификатором схемы и остальными идентификаторами.</summary>
      <returns vsli:raw="The character to be used as the schema separator.">Символ, который необходимо использовать в схеме в качестве разделителя.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary vsli:raw="Specifies whether all column values in an update statement are included or only changed ones.">Указывает, включены все значения столбца в инструкции UPDATE или только измененные значения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UPDATE statement generated by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; includes all columns; &lt;see langword=&quot;false&quot; /&gt; if it includes only changed columns.">Значение <see langword="true" />, если оператор UPDATE, созданный объектом <see cref="T:System.Data.Common.DbCommandBuilder" />, включает все столбцы; значение <see langword="false" />, если он включает только измененные столбцы.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary vsli:raw="Defines the core behavior of database connections and provides a base class for database-specific connections.">Определяет основное поведение подключений к базе данных и предоставляет базовый класс для подключений, связанных с базой данных.</summary>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary vsli:raw="Occurs when the state of the connection changes.">Возникает при изменении состояния подключения.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbConnection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="When overridden in a derived class, starts a database transaction.">При переопределении в производном классе запускает транзакцию в базе данных.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Одно из значений перечисления, задающих уровень изоляции используемой транзакции.</param>
      <returns vsli:raw="An object representing the new transaction.">Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously starts a database transaction.">Асинхронно запускает транзакцию в базе данных.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Одно из значений перечисления, задающих уровень изоляции используемой транзакции.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Токен для отмены асинхронной операции.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Задача, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которой является объектом, представляющим новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary vsli:raw="Starts a database transaction.">Начинает транзакцию базы данных.</summary>
      <returns vsli:raw="An object representing the new transaction.">Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Starts a database transaction with the specified isolation level.">Начинает транзакцию базы данных с указанным уровнем изоляции.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Одно из значений перечисления, задающих уровень изоляции используемой транзакции.</param>
      <returns vsli:raw="An object representing the new transaction.">Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">Асинхронно начинает транзакцию базы данных.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Одно из значений перечисления, задающих уровень изоляции используемой транзакции.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Необязательный токен для отмены асинхронной операции. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Задача, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которой является объектом, представляющим новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">Асинхронно начинает транзакцию базы данных.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Необязательный токен для отмены асинхронной операции. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Задача, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которой является объектом, представляющим новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="When overridden in a derived class, changes the current database for an open connection.">При переопределении в производном классе изменяет текущую базу данных для открытого подключения.</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">Имя базы данных для используемого подключения.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously changes the current database for an open connection.">Асинхронно изменяет текущую базу данных для открытого подключения.</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">Имя базы данных для используемого подключения.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Необязательный токен для отмены асинхронной операции. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary vsli:raw="When overridden in a derived class, closes the connection to the database.">При переопределении в производном классе закрывает подключение к базе данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.CloseAsync">
      <summary vsli:raw="Asynchronously closes the connection to the database.">Асинхронно закрывает подключение к базе данных.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">Создает и возвращает объект <see cref="T:System.Data.Common.DbCommand" />, связанный с текущим подключением.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary vsli:raw="When overridden in a derived class, creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">При переопределении в производном классе создает и возвращает объект <see cref="T:System.Data.Common.DbCommand" />, связанный с текущим подключением.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the connection object.">Асинхронно размещает объект подключения.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.ValueTask" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary vsli:raw="Enlists in the specified transaction.">Выполняет прикрепление в указанной транзакции.</summary>
      <param name="transaction" vsli:raw="A reference to an existing &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; in which to enlist.">Ссылка на существующий объект <see cref="T:System.Transactions.Transaction" />, к которому выполняется присоединение.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Возвращает сведения схемы для источника данных этого объекта <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name.">Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.Common.DbConnection" />, используя указанную строку в качестве имени схемы.</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">Определяет имя схемы, которая должна быть возвращена.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" /> задается как значение NULL.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name and the specified string array for the restriction values.">Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.Common.DbConnection" />, используя указанную строку в качестве имени схемы и указанный массив строк для значений ограничений.</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">Определяет имя схемы, которая должна быть возвращена.</param>
      <param name="restrictionValues" vsli:raw="Specifies a set of restriction values for the requested schema.">Задает набор значений ограничений для запрошенной схемы.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" /> задается как значение NULL.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.String,System.String[],System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])&quot; /&gt; will be communicated via the returned Task Exception property.">Это асинхронная версия метода <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" />.
Поставщики должны выполнить переопределение с помощью соответствующей реализации.
При необходимости можно учитывать <paramref name="cancellationToken" />.
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" /> и возвращает выполненную задачу.
Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный <paramref name="cancellationToken" />.
Исключения, создаваемые <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" />, будут связаны через возвращаемое свойство исключения задачи.</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">Определяет имя схемы, которая должна быть возвращена.</param>
      <param name="restrictionValues" vsli:raw="Specifies a set of restriction values for the requested schema.">Задает набор значений ограничений для запрошенной схемы.</param>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Инструкция отмены.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String)&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String)&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String)&quot; /&gt; will be communicated via the returned Task Exception property.">Это асинхронная версия метода <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" />.
Поставщики должны выполнить переопределение с помощью соответствующей реализации.
При необходимости можно учитывать <paramref name="cancellationToken" />.
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" /> и возвращает выполненную задачу.
Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный <paramref name="cancellationToken" />.
Исключения, создаваемые <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" />, будут связаны через возвращаемое свойство исключения задачи.</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">Определяет имя схемы, которая должна быть возвращена.</param>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Инструкция отмены.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is an asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; will be communicated via the returned Task Exception property.">Это асинхронная версия метода <see cref="M:System.Data.Common.DbConnection.GetSchema" />.
Поставщики должны выполнить переопределение с помощью соответствующей реализации.
При необходимости можно учитывать <paramref name="cancellationToken" />.
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbConnection.GetSchema" /> и возвращает выполненную задачу.
Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный <paramref name="cancellationToken" />.
Исключения, создаваемые <see cref="M:System.Data.Common.DbConnection.GetSchema" />, будут связаны через возвращаемое свойство исключения задачи.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Инструкция отмены.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">Вызывает событие <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="stateChange" vsli:raw="A &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.StateChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary vsli:raw="When overridden in a derived class, opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;.">При переопределении в производном классе открывает подключение к базе данных с параметрами, определяемыми свойством <see cref="P:System.Data.Common.DbConnection.ConnectionString" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;, which opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;. This method invokes the virtual method &lt;see cref=&quot;M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Асинхронная версия <see cref="M:System.Data.Common.DbConnection.Open" />, которая открывает соединение с базой данных с параметрами, указанными <see cref="P:System.Data.Common.DbConnection.ConnectionString" />. Этот метод вызывает виртуальный метод <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /> с CancellationToken.None.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token can optionally be honored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt; call and returns a completed task. The default implementation will return a cancelled task if passed an already cancelled cancellationToken. Exceptions thrown by Open will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbConnection&quot; /&gt; object until the returned Task is complete.">Это асинхронная версия метода <see cref="M:System.Data.Common.DbConnection.Open" />. Поставщики должны выполнить переопределение с помощью соответствующей реализации. При необходимости можно учитывать токен отмены.  
  
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbConnection.Open" /> и возвращает выполненную задачу. Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный cancellationToken. Исключения, создаваемые Open, будут связаны через возвращаемое свойство исключения задачи.  
  
Не вызывайте другие методы и свойства объекта <see langword="DbConnection" /> до тех пор, пока возвращаемая задача не будет завершена.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Инструкция отмены.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">Начинает транзакцию базы данных.</summary>
      <returns vsli:raw="An object that represents the new transaction.">Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified isolation level.">Начинает транзакцию базы данных с указанным уровнем изоляции.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Одно из значений перечисления, задающих уровень изоляции используемой транзакции.</param>
      <returns vsli:raw="An object that represents the new transaction.">Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the current connection.">Создает и возвращает объект <see cref="T:System.Data.Common.DbCommand" />, связанный с текущим подключением.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the connection.">Объект <see cref="T:System.Data.Common.DbCommand" />, связанный с подключением.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary vsli:raw="When overridden in a derived class, gets or sets the string used to open the connection.">При переопределении в производном классе получает или задает строку, используемую для открытия подключения.</summary>
      <returns vsli:raw="The connection string used to establish the initial connection. The exact contents of the connection string depend on the specific data source for this connection. The default value is an empty string.">Строка подключения использована для установления первоначального подключения. Точное содержимое строки подключения зависит от конкретного источника данных для этого подключения. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while establishing a connection before terminating the attempt and generating an error.">Получает время ожидания (в секундах) при установлении подключения, по истечении которого попытка подключения завершается и генерируется ошибка.</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is determined by the specific type of connection that you are using.">Время (в секундах), в течение которого должно производиться ожидание открытия соединения. Значение по умолчанию определяется конкретным типом используемого подключения.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary vsli:raw="When overridden in a derived class, gets the name of the current database after a connection is opened, or the database name specified in the connection string before the connection is opened.">При переопределении в производном классе получает имя текущей базы данных после открытия подключения или имя базы данных, указанное в строке подключения перед открытием подключения.</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.">Имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary vsli:raw="When overridden in a derived class, gets the name of the database server to which to connect.">При переопределении в производном классе возвращает имя сервера базы данных, к которому осуществляется подключение.</summary>
      <returns vsli:raw="The name of the database server to which to connect. The default value is an empty string.">Имя сервера базы данных, к которому осуществляется подключение. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Получает объект <see cref="T:System.Data.Common.DbProviderFactory" /> для данного элемента <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns vsli:raw="A set of methods for creating instances of a provider's implementation of the data source classes.">Набор методов для создания экземпляров классов поставщиков, реализующих источник данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary vsli:raw="When overridden in a derived class, gets a string that represents the version of the server to which the object is connected.">При переопределении в производном классе получает строку, представляющую версию сервера, к которому подключен объект.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Data.Common.DbConnection.ServerVersion&quot; /&gt; was called while the returned Task was not completed and the connection was not opened after a call to &lt;see cref=&quot;Overload:System.Data.Common.DbConnection.OpenAsync&quot; /&gt;.">
        <see cref="P:System.Data.Common.DbConnection.ServerVersion" /> был вызван, когда возвращаемая задача не была завершена, и не было открыто соединение после вызова <see cref="Overload:System.Data.Common.DbConnection.OpenAsync" />.</exception>
      <returns vsli:raw="The version of the database. The format of the string returned depends on the specific type of connection you are using.">Версия базы данных. Формат возвращенной строки зависит от конкретного типа используемого подключения.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary vsli:raw="Gets a string that describes the state of the connection.">Получает строку, описывающую состояние подключения.</summary>
      <returns vsli:raw="The state of the connection. The format of the string returned depends on the specific type of connection you are using.">Состояние подключения. Формат возвращенной строки зависит от конкретного типа используемого подключения.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary vsli:raw="Provides a base class for strongly typed connection string builders.">Предоставляет базовый класс для строго типизированных построителей строк подключения.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class, optionally using ODBC rules for quoting values.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> (необязательно) с использованием правил ODBC для значений в кавычках.</summary>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields; &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">Значение <see langword="true" /> определяет использование {} для разделения полей. Значение <see langword="false" /> — использование кавычек.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an entry with the specified key and value into the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Добавляет запись с указанными ключом и значением в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key to add to the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Ключ, добавляемый в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <param name="value" vsli:raw="The value for the specified key.">Значение заданного ключа.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Параметр <paramref name="keyword" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">Объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступен только для чтения.

-или-

<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">Обеспечивает эффективный и безопасный способ добавления ключа и значения в существующий объект <see cref="T:System.Text.StringBuilder" />.</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">Объект <see cref="T:System.Text.StringBuilder" />, к которому требуется добавить пару "ключ — значение".</param>
      <param name="keyword" vsli:raw="The key to be added.">Добавляемый ключ.</param>
      <param name="value" vsli:raw="The value for the supplied key.">Значение указанного ключа.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">Обеспечивает эффективный и безопасный способ добавления ключа и значения в существующий объект <see cref="T:System.Text.StringBuilder" />.</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">Объект <see cref="T:System.Text.StringBuilder" />, к которому требуется добавить пару "ключ — значение".</param>
      <param name="keyword" vsli:raw="The key to be added.">Добавляемый ключ.</param>
      <param name="value" vsli:raw="The value for the supplied key.">Значение указанного ключа.</param>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields, &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">Значение <see langword="true" /> определяет использование {} для разделения полей. Значение <see langword="false" /> — использование кавычек.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary vsli:raw="Clears the contents of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Удаляет содержимое экземпляра <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">Объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary vsli:raw="Clears the collection of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects on the associated &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Очищает коллекцию объектов <see cref="T:System.ComponentModel.PropertyDescriptor" /> в связанном <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains a specific key.">Определяет, содержит ли объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> указанный ключ.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Ключ, который требуется найти в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Параметр <paramref name="keyword" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> содержит запись с указанным ключом. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary vsli:raw="Compares the connection information in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object with the connection information in the supplied object.">Сравнивает сведения о подключении в этом объекте <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> со сведениями о подключении в предоставленном объекте.</summary>
      <param name="connectionStringBuilder" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; to be compared with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" />, который необходимо сравнить с объектом <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection information in both of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; objects causes an equivalent connection string; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если сведения о подключении в обоих объектах <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> приводят к появлению эквивалентной строки подключения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary vsli:raw="Fills a supplied &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; with information about all the properties of this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Заполняет указанный <see cref="T:System.Collections.Hashtable" /> сведениями обо всех свойствах данного <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="propertyDescriptors" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; to be filled with information about this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.Hashtable" />, заполняемый сведениями о данном <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary vsli:raw="Removes the entry with the specified key from the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Удаляет из экземпляра <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> запись с указанным ключом.</summary>
      <param name="keyword" vsli:raw="The key of the key/value pair to be removed from the connection string in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Ключ пары «ключ-значение», удаляемой из строки подключения в этом объекте <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)">Параметр <paramref name="keyword" /> является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only, or the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступен только для чтения, или <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> имеет фиксированный размер.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the key existed within the connection string and was removed; &lt;see langword=&quot;false&quot; /&gt; if the key did not exist.">Значение <see langword="true" />, если ключ был указан в строке подключения и был удален. Значение <see langword="false" />, если такого ключа не было.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary vsli:raw="Indicates whether the specified key exists in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Указывает, существует ли заданный ключ в этом экземпляре <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Ключ, который требуется найти в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> содержит запись с указанным ключом. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Копирует элементы коллекции <see cref="T:System.Collections.ICollection" /> в массив <see cref="T:System.Array" />, начиная с указанного индекса массива <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ICollection" />. Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Добавляет элемент с указанными ключом и значением в объект <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the key of the element to add.">Объект <see cref="T:System.Object" /> используется в качестве ключа добавляемого элемента.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the value of the element to add.">Объект <see cref="T:System.Object" /> используется в качестве значения добавляемого элемента.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object contains an element with the specified key.">Определяет, содержится ли элемент с указанным ключом в объекте <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Ключ для размещения в объекте <see cref="T:System.Collections.IDictionary" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если в <see cref="T:System.Collections.IDictionary" /> содержится элемент с данным ключом; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Возвращает объект <see cref="T:System.Collections.IDictionaryEnumerator" /> для объекта <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Объект <see cref="T:System.Collections.IDictionaryEnumerator" /> для объекта <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Удаляет элемент с указанным ключом из объекта <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword" vsli:raw="The key of the element to remove.">Ключ удаляемого элемента.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Возвращает перечислитель, который осуществляет итерацию по коллекции.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">Объект <see cref="T:System.Collections.IEnumerator" />, который используется для прохода по коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Возвращает коллекцию настраиваемых атрибутов для этого экземпляра компонента.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; containing the attributes for this object.">
        <see cref="T:System.ComponentModel.AttributeCollection" />, содержащий атрибуты для этого объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Возвращает имя класса для этого экземпляра компонента.</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">Имя класса объекта или <see langword="null" />, если класс не имеет имени.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Возвращает имя этого экземпляра компонента.</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">Имя объекта или <see langword="null" />, если объект не имеет имени.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Возвращает преобразователь типов для этого экземпляра компонента.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">Объект <see cref="T:System.ComponentModel.TypeConverter" />, который является преобразователем для данного объекта, или значение <see langword="null" /> в случае отсутствия <see cref="T:System.ComponentModel.TypeConverter" /> для данного объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Возвращает событие по умолчанию для этого экземпляра компонента.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">Значение <see cref="T:System.ComponentModel.EventDescriptor" /> , представляющее событие по умолчанию для этого объекта, или <see langword="null" /> , если этот объект не имеет событий.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Возвращает свойство по умолчанию для этого экземпляра компонента.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">Значение <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющее свойство по умолчанию для данного объекта, или <see langword="null" />, если этот объект не имеет свойств.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Возвращает редактор заданного типа для этого экземпляра компонента.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">Объект <see cref="T:System.Type" />, который представляет редактор для этого объекта.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">Объект <see cref="T:System.Object" /> заданного типа, являющийся редактором для этого объекта, или <see langword="null" />, если редактор не найден.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Возвращает события для этого экземпляра компонента.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">Объект <see cref="T:System.ComponentModel.EventDescriptorCollection" />, представляющий события для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">Возвращает события для этого экземпляра компонента, используя заданный массив атрибутов в качестве фильтра.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Массив типа <see cref="T:System.Attribute" />, используемый в качестве фильтра.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">Объект <see cref="T:System.ComponentModel.EventDescriptorCollection" />, представляющий отфильтрованные события для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Возвращает свойства для этого экземпляра компонента.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">Объект <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">Возвращает свойства для этого экземпляра компонента, используя массив атрибутов в качестве фильтра.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Массив типа <see cref="T:System.Attribute" />, используемый в качестве фильтра.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">Коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющая отфильтрованные свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Возвращает объект, содержащий свойство, описываемое заданным дескриптором свойства.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющий свойство, владельца которого требуется найти.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">Объект <see cref="T:System.Object" />, представляющий владельца заданного свойства.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary vsli:raw="Returns the connection string associated with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Возвращает строку подключения, связанную с этим <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">Текущее свойство <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Retrieves a value corresponding to the supplied key from this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Получает значение, соответствующее заданному ключу, из данного объекта <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key of the item to retrieve.">Ключ искомого элемента.</param>
      <param name="value" vsli:raw="The value corresponding to the &lt;paramref name=&quot;keyword&quot; /&gt;.">Значение, соответствующее <paramref name="keyword" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; contains a null value (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> содержит значение NULL (<see langword="Nothing" /> в Visual Basic).</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;keyword&quot; /&gt; was found within the connection string, &lt;see langword=&quot;false&quot; /&gt; otherwise.">Значение <see langword="true" />, если значение <paramref name="keyword" /> найдено в строке подключения. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property is visible in Visual Studio designers.">Возвращает или задает значение, указывающее, отображается ли свойство <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> в конструкторах Visual Studio.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection string is visible within designers; &lt;see langword=&quot;false&quot; /&gt; otherwise. The default is &lt;see langword=&quot;true&quot; /&gt;.">Значение <see langword="true" />, если строка подключения отображается в конструкторах; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary vsli:raw="Gets or sets the connection string associated with the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Возвращает или задает строку подключения, связанную с этим <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid connection string argument has been supplied.">Предоставлен недопустимый аргумент строки соединения.</exception>
      <returns vsli:raw="The current connection string, created from the key/value pairs that are contained within the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;. The default value is an empty string.">Текущая строка подключения, созданная из пар "ключ-значение", которые содержатся в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary vsli:raw="Gets the current number of keys that are contained within the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">Возвращает текущее количество ключей, содержащихся в свойстве <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />.</summary>
      <returns vsli:raw="The number of keys that are contained within the connection string maintained by the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Количество ключей, содержащихся в строке соединения, которую обеспечивает экземпляр <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">Получает значение, показывающее, имеет ли объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> фиксированный размер.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если список <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> имеет фиксированный размер. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">Получает значение, указывающее, доступен ли объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступен только для чтения, в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">Возвращает или задает значение, связанное с указанным ключом.</summary>
      <param name="keyword" vsli:raw="The key of the item to get or set.">Ключ возвращаемого или задаваемого элемента.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Параметр <paramref name="keyword" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The property is set, &lt;paramref name=&quot;keyword&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">Свойство задано, а значение <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступно только для чтения.

-или-

Свойство задано, <paramref name="keyword" /> не существует в коллекции, а <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> имеет фиксированный размер.</exception>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, trying to get it returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), and trying to set it creates a new element using the specified key.&#xA;&#xA; Passing a null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) key throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;. Assigning a null value removes the key/value pair.">Значение, связанное с указанным ключом. Если указанный ключ не найден, при попытке его получения возвращается пустая ссылка (<see langword="Nothing" /> в Visual Basic), а при попытке задания создается новый элемент с использованием указанного ключа.

Передача пустого ключа (<see langword="Nothing" /> в Visual Basic) порождает <see cref="T:System.ArgumentNullException" />. При присвоении значения NULL удаляется пара "ключ-значение".</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Возвращает коллекцию <see cref="T:System.Collections.ICollection" />, которая содержит ключи из <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Коллекция <see cref="T:System.Collections.ICollection" />, которая содержит ключи из <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Объект, который может быть использован для синхронизации доступа к коллекции <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the element with the specified key.">Возвращает или задает элемент с указанным ключом.</summary>
      <param name="keyword" vsli:raw="The key of the element to get or set.">Ключ элемента, который требуется получить или задать.</param>
      <returns vsli:raw="The element with the specified key.">Элемент с указанным ключом.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Получает <see cref="T:System.Collections.ICollection" />, которая содержит значения в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Коллекция <see cref="T:System.Collections.ICollection" />, которая содержит значения из <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary vsli:raw="Aids implementation of the &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; interface. Inheritors of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a DataAdapter.">Помогает в реализации интерфейса <see cref="T:System.Data.IDbDataAdapter" />. Разработчики производных классов <see cref="T:System.Data.Common.DbDataAdapter" /> реализуют набор функций, обеспечивающий строгую типизацию, но наследуют большинство функций, необходимых для полной реализации DataAdapter.</summary>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary vsli:raw="The default name used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object for table mappings.">Имя по умолчанию, используемое объектом <see cref="T:System.Data.Common.DataAdapter" /> для сопоставлений таблиц.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of a DataAdapter class.">Инициализирует новый экземпляр класса DataAdapter.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DataAdapter&quot; /&gt; class from an existing object of the same type.">Инициализирует новый экземпляр класса <see langword="DataAdapter" /> из существующего объекта того же типа.</summary>
      <param name="adapter" vsli:raw="A &lt;see langword=&quot;DataAdapter&quot; /&gt; object used to create the new &lt;see langword=&quot;DataAdapter&quot; /&gt;.">Объект <see langword="DataAdapter" /> используется для создания нового <see langword="DataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to the current batch.">Добавляет интерфейс <see cref="T:System.Data.IDbCommand" /> к текущему пакету.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to add to the batch.">Интерфейс <see cref="T:System.Data.IDbCommand" />, добавляемый к пакету.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">Адаптер не поддерживает пакеты.</exception>
      <returns vsli:raw="The number of commands in the batch before adding the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Число команд в пакете, имевшееся до добавления интерфейса <see cref="T:System.Data.IDbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; objects from the batch.">Удаляет все объекты <see cref="T:System.Data.IDbCommand" /> из пакета.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">Адаптер не поддерживает пакеты.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; used to update the data source.">Объект <see cref="T:System.Data.DataRow" />, использованный для обновления источника данных.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Интерфейс <see cref="T:System.Data.IDbCommand" /> выполняется во время использования метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">Является ли команда оператором UPDATE, INSERT, DELETE или SELECT.</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that updates the data source.">Объект <see cref="T:System.Data.DataRow" />, который обновляет источник данных.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Интерфейс <see cref="T:System.Data.IDbCommand" /> для выполнения при применении метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">Является ли команда оператором UPDATE, INSERT, DELETE или SELECT.</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; and optionally releases the managed resources.">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DbDataAdapter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary vsli:raw="Executes the current batch.">Выполняет текущий пакет.</summary>
      <returns vsli:raw="The return value from the last command in the batch.">Возвращает значение из последней команды в пакете.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Номер записи (с нуля), с которой необходимо начать.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Максимальное число извлекаемых записей.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Имя исходной таблицы, используемое для сопоставления таблиц.</param>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">Исходная таблица является недопустимой.  
  
 -или-  
  
 Подключение является недопустимым.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">Не удалось найти подключение.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">Значение параметра <paramref name="startRecord" /> меньше 0.  
  
-или- 
Значение параметра <paramref name="maxRecords" /> меньше 0.</exception>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and source table names, command string, and command behavior.">Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с помощью имен <see cref="T:System.Data.DataSet" /> и исходной таблицы, командной строки и поведения команды.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Номер записи (с нуля), с которой необходимо начать.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Максимальное число извлекаемых записей.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Имя исходной таблицы, используемое для сопоставления таблиц.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Оператор SQL SELECT используется для извлечения строки из источника данных.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">Значение параметра <paramref name="startRecord" /> меньше 0.  
  
-или- 
Значение параметра <paramref name="maxRecords" /> меньше 0.</exception>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с помощью имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Имя исходной таблицы, используемое для сопоставления таблиц.</param>
      <exception cref="T:System.SystemException" vsli:raw="The source table is invalid.">Исходная таблица является недопустимой.</exception>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имени <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use for table mapping.">Имя объекта <see cref="T:System.Data.DataTable" />, используемое для сопоставления таблицы.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Исходная таблица является недопустимой.</exception>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;.">Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataTable" /> для получения соответствия строкам в источнике данных с помощью указанного объекта <see cref="T:System.Data.DataTable" />, интерфейса <see cref="T:System.Data.IDbCommand" /> и значения типа <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records and, if necessary, schema.">Объект <see cref="T:System.Data.DataTable" /> для заполнения записями и, если необходимо, — схемой.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Оператор SQL SELECT используется для извлечения строки из источника данных.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataTable" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">Объект <see cref="T:System.Data.DataTable" /> для заполнения из источника данных.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Номер записи (с нуля), с которой необходимо начать.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Максимальное число извлекаемых записей.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed to fill the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Интерфейс <see cref="T:System.Data.IDbCommand" />, исполняемый для заполнения объектов <see cref="T:System.Data.DataTable" />.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</param>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">Исходная таблица является недопустимой.  
  
 -или-  
  
 Подключение является недопустимым.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">Не удалось найти подключение.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">Значение параметра <paramref name="startRecord" /> меньше 0.  
  
-или- 
Значение параметра <paramref name="maxRecords" /> меньше 0.</exception>
      <returns vsli:raw="The number of rows added to or refreshed in the data tables.">Количество строк, успешно добавленных или обновленных в таблицах данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary vsli:raw="Adds or refreshes rows in one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.">Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataTable" /> для получения соответствия строкам в источнике данных, начиная с указанной записи и вплоть до заданного максимального количества получаемых записей.</summary>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Номер записи (с нуля), с которой необходимо начать.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Максимальное число извлекаемых записей.</param>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">Объект <see cref="T:System.Data.DataTable" /> для заполнения из источника данных.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects. This value does not include rows affected by statements that do not return rows.">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataTable" />. Это значение не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Добавляет объект <see cref="T:System.Data.DataTable" /> с именем Table в указанный объект <see cref="T:System.Data.DataSet" /> и настраивает схему для соответствия этому объекту в источнике данных на основе указанного значения типа <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">Объект <see cref="T:System.Data.DataSet" />, куда вставляется схема.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">Одно из значений <see cref="T:System.Data.SchemaType" />, указывающее, как следует вставлять схему.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ссылка на коллекцию объектов <see cref="T:System.Data.DataTable" />, которые были добавлены в <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Добавляет объект <see cref="T:System.Data.DataTable" /> в указанный объект <see cref="T:System.Data.DataSet" /> и настраивает схему для соответствия этому объекту в источнике данных на основе указанного значения типа <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">Объект <see cref="T:System.Data.DataSet" /> для заполнения схемой из источника данных.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Оператор SQL SELECT используется для извлечения строки из источника данных.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Имя исходной таблицы, используемое для сопоставления таблиц.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">Массив объектов <see cref="T:System.Data.DataTable" />, который содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based upon the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Добавляет объект <see cref="T:System.Data.DataTable" /> в указанный объект <see cref="T:System.Data.DataSet" /> и настраивает схему для соответствия этому объекту в источнике данных на основе указанных <see cref="T:System.Data.SchemaType" /> и <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">Объект <see cref="T:System.Data.DataSet" />, куда вставляется схема.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">Одно из значений <see cref="T:System.Data.SchemaType" />, указывающее, как следует вставлять схему.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Имя исходной таблицы, используемое для сопоставления таблиц.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A source table from which to get the schema could not be found.">Не удалось найти исходную таблицу для получения схемы.</exception>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ссылка на коллекцию объектов <see cref="T:System.Data.DataTable" />, которые были добавлены в <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Настраивает схему указанного объекта <see cref="T:System.Data.DataTable" /> на основе указанного <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">Объект <see cref="T:System.Data.DataTable" /> для заполнения схемой из источника данных.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information returned from the data source.">Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;, command string, and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Настраивает схему для указанного объекта <see cref="T:System.Data.DataTable" />, основываясь на указанном значении типа <see cref="T:System.Data.SchemaType" />, командной строке и значениях типа <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">Объект <see cref="T:System.Data.DataTable" /> для заполнения схемой из источника данных.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Оператор SQL SELECT используется для извлечения строки из источника данных.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="A of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Объект <see cref="T:System.Data.DataTable" /> содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from one of the commands in the current batch.">Возвращает интерфейс <see cref="T:System.Data.IDataParameter" /> из одной из команд в текущем пакете.</summary>
      <param name="commandIdentifier" vsli:raw="The index of the command to retrieve the parameter from.">Индекс команды, из которой извлекается параметр.</param>
      <param name="parameterIndex" vsli:raw="The index of the parameter within the command.">Индекс параметра внутри команды.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">Адаптер не поддерживает пакеты.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; specified.">Указанный <see cref="T:System.Data.IDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary vsli:raw="Returns information about an individual update attempt within a larger batched update.">Возвращает сведения об отдельной попытке обновления в рамках большего по своему объему пакета обновления.</summary>
      <param name="commandIdentifier" vsli:raw="The zero-based column ordinal of the individual command within the batch.">Порядковый номер (с нуля) столбца отдельной команды в пакете.</param>
      <param name="recordsAffected" vsli:raw="The number of rows affected in the data store by the specified command within the batch.">Количество строк в хранилище данных, на которые было оказано воздействие указанной командой в пакете.</param>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; thrown during execution of the specified command. Returns &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no exception is thrown.">Исключение <see cref="T:System.Exception" />, выданное при выполнении указанной команды. Возвращает значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic), если исключение не было выдано.</param>
      <returns vsli:raw="Information about an individual update attempt within a larger batched update.">Сведения об отдельной попытке обновления в рамках большего по своему объему пакета обновления.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Получает параметры, заданные пользователем при выполнении оператора SQL SELECT.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Массив объектов <see cref="T:System.Data.IDataParameter" /> содержит параметры, заданные пользователем.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary vsli:raw="Initializes batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Инициализирует пакетную обработку для объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">Адаптер не поддерживает пакеты.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">Вызывает событие <see langword="RowUpdated" /> поставщика данных .NET Framework.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.Common.RowUpdatedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdating&quot; /&gt; event of a .NET data provider.">Вызывает событие <see langword="RowUpdating" /> поставщика данных .NET Framework.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; that contains the event data.">Объект класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Создает новый объект, являющийся копией текущего экземпляра.</summary>
      <returns vsli:raw="A new object that is a copy of this instance.">Новый объект, являющийся копией этого экземпляра.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary vsli:raw="Ends batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Завершает пакетную обработку для объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">Адаптер не поддерживает пакеты.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном массиве объектов <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">Массив объектов <see cref="T:System.Data.DataRow" />, использованный для обновления источника данных.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">Не существует объект <see cref="T:System.Data.DataRow" /> для обновления.  
  
-или- 
Не существует объект <see cref="T:System.Data.DataTable" /> для обновления.  
  
-или- 
Не существует объект <see cref="T:System.Data.DataSet" /> для использования в качестве источника.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном массиве объектов <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">Массив объектов <see cref="T:System.Data.DataRow" />, использованный для обновления источника данных.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;P:System.Data.IDataAdapter.TableMappings&quot; /&gt; collection to use.">Используемая коллекция <see cref="P:System.Data.IDataAdapter.TableMappings" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">Не существует объект <see cref="T:System.Data.DataRow" /> для обновления.  
  
-или- 
Не существует объект <see cref="T:System.Data.DataTable" /> для обновления.  
  
-или- 
Не существует объект <see cref="T:System.Data.DataSet" /> для использования в качестве источника.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
      <returns vsli:raw="The number of rows successfully updated from the array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">Объект <see cref="T:System.Data.DataSet" />, использованный для обновления источника данных.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в <see cref="T:System.Data.DataSet" /> с заданным именем <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use to update the data source.">Объект <see cref="T:System.Data.DataSet" />, используемый для обновления источника данных.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Имя исходной таблицы, используемое для сопоставления таблиц.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; used to update the data source.">Объект <see cref="T:System.Data.DataTable" />, использованный для обновления источника данных.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">Не существует объект <see cref="T:System.Data.DataRow" /> для обновления.  
  
-или- 
Не существует объект <see cref="T:System.Data.DataTable" /> для обновления.  
  
-или- 
Не существует объект <see cref="T:System.Data.DataSet" /> для использования в качестве источника.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets a command for deleting records from the data set.">Возвращает или задает команду для удаления записей из набора данных.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary vsli:raw="Gets or sets the behavior of the command used to fill the data adapter.">Возвращает или задает реакцию команды, использованной для заполнения адаптера данных.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; of the command used to fill the data adapter.">Значение типа <see cref="T:System.Data.CommandBehavior" /> команды, использованной для заполнения адаптера данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets a command used to insert new records into the data source.">Возвращает или задает команду, используемую для вставки новых записей в источник данных.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets a command used to select records in the data source.">Возвращает или задает команду, используемую для выбора записей в источнике данных.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">Возвращает или задает оператор SQL для удаления записей из набора данных.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">Возвращает или задает оператор SQL для вставки новых записей в источник данных.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">Возвращает или задает оператор SQL для выбора записей в источнике данных.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">Возвращает или задает оператор SQL для обновления записей в источнике данных.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary vsli:raw="Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.">Возвращает или задает значение, которое включает или отключает поддержку пакетной обработки и задает количество команд, которые могут выполняться в рамках одного пакета.</summary>
      <returns vsli:raw="The number of rows to process per batch.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value is&lt;/term&gt;&lt;description&gt; Effect&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; There is no limit on the batch size.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Disables batch updating.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; &amp;gt; 1&lt;/term&gt;&lt;description&gt; Changes are sent using batches of &lt;see cref=&quot;P:System.Data.Common.DbDataAdapter.UpdateBatchSize&quot; /&gt; operations at a time.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;  &#xA;&#xA; When setting this to a value other than 1, all the commands associated with the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; must have their &lt;see cref=&quot;P:System.Data.IDbCommand.UpdatedRowSource&quot; /&gt; property set to None or OutputParameters. An exception will be thrown otherwise.">Количество строк, которые необходимо обработать с помощью одного пакета.  
  
 <list type="table"><listheader><term> Значение</term><description> Действие</description></listheader><item><term> 0</term><description> Размер пакета не ограничен.</description></item><item><term> 1</term><description> Отключает пакетное обновление.</description></item><item><term> &gt; одного</term><description> Изменения отправляются с помощью пакетов, единовременное количество операций в которых определяется свойством <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />.</description></item></list>  

 При присвоении этому свойству значения, отличного от 1, для всех команд, связанных с, <see cref="T:System.Data.Common.DbDataAdapter" /> свойство должно иметь значение <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> None или аутпутпараметерс. В противном случае будет выдаваться исключение.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets a command used to update records in the data source.">Возвращает или задает команду, используемую для обновления записей в источнике данных.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary vsli:raw="Reads a forward-only stream of rows from a data source.">Считывает однопроходные потоки строк из источника данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Закрывает объект <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.CloseAsync">
      <summary vsli:raw="Asynchronously closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Асинхронно закрывает объект <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; and optionally releases the managed resources.">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DbDataReader" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Значение <see langword="true" />, чтобы освободить все ресурсы (управляемые и неуправляемые); значение <see langword="false" />, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.DisposeAsync">
      <summary vsli:raw="Asynchronously releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Асинхронно освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.ValueTask" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a Boolean.">При переопределении в производном классе получает значение указанного столбца в виде логического значения.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a byte.">При переопределении в производном классе получает значение указанного столбца в виде байта.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">При переопределении в производном классе считывает указанное число байтов из указанного столбца, начиная с указанного индекса, и записывает их в буфер, начиная с указанной позиции в буфере.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Индекс в строке, с которого необходимо начать считывание.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Буфер, в который копируются данные.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Индекс в буфере, куда будут копироваться данные.</param>
      <param name="length" vsli:raw="The maximum number of bytes to read.">Максимальное число байтов, предназначенных для чтения.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The actual number of bytes read.">Число фактически считанных байтов.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single character.">При переопределении в производном классе получает значение указанного столбца в виде одиночного символа.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">При переопределении в производном классе считывает указанное число символов из указанного столбца, начиная с указанного индекса, и записывает их в буфер, начиная с указанной позиции.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Индекс в строке, с которого необходимо начать считывание.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Буфер, в который копируются данные.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Индекс в буфере, куда будут копироваться данные.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">Максимальное число считываемых символов.</param>
      <returns vsli:raw="The actual number of characters read.">Число фактически считанных символов.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetColumnSchemaAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)&quot; /&gt; will be communicated via the returned Task Exception property.">Это асинхронная версия метода <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" />.
Поставщики должны выполнить переопределение с помощью соответствующей реализации.
При необходимости можно учитывать <paramref name="cancellationToken" />.
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" /> и возвращает выполненную задачу.
Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный <paramref name="cancellationToken" />.
Исключения, создаваемые <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" />, будут связаны через возвращаемое свойство исключения задачи.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Инструкция отмены.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">Возвращает вложенный объект чтения данных для запрошенного столбца.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <returns vsli:raw="A data reader.">Средство чтения данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets name of the data type of the specified column.">При переопределении в производном классе получает название типа данных указанного столбца.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <returns vsli:raw="The name of the data type.">Имя типа данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">При переопределении в производном классе получает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">Возвращает объект <see cref="T:System.Data.Common.DbDataReader" /> для запрошенного порядкового номера столбца, который может быть переопределен с помощью зависящей от поставщика реализации.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">При переопределении в производном классе получает значение указанного столбца в виде <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a double-precision floating point number.">При переопределении в производном классе получает значение заданного столбца в виде числа с плавающей запятой двойной точности.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary vsli:raw="When overridden in a derived class, returns an enumerator that can be used to iterate through the rows in the data reader.">При переопределении в производном классе возвращает перечислитель, который может использоваться для выполнения итерации по строкам в модуле чтения данных.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the rows in the data reader.">Перечислитель, который может использоваться для выполнения итерации по строкам в модуле чтения данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the data type of the specified column.">При переопределении в производном классе получает тип данных указанного столбца.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The data type of the specified column.">Тип данных заданного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">Возвращает значение указанного столбца в виде запрошенного типа.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Тип возвращаемого значения.</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Соединение было удалено или закрыто во время получения данных.  

-или- 
Модуль чтения данных был закрыт во время получения данных.  
  
-или-

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение <see langword="false" />).  

-или-

Модуль чтения попытался считать ранее считанный столбец в последовательном режиме.  

-или-

Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">Значение, возвращенное базой данных, не соответствует типу <typeparamref name="T" /> или не может быть приведено к нему.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Асинхронно возвращает значение указанного столбца в виде запрошенного типа.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Тип возвращаемого значения.</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">Соединение было удалено или закрыто во время получения данных.  
  
-или-

Модуль чтения данных был закрыт во время получения данных.  

-или-

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение <see langword="false" />).

-или-

Сделана попытка чтения ранее считанного столбца в последовательном режиме.  

-или-

Выполнялась асинхронная операция. Относится ко всем методам Get_*_ при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">Значение, возвращенное базой данных, не соответствует типу <typeparamref name="T" /> или не может быть приведено к нему.</exception>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Задача, <see cref="P:System.Threading.Tasks.Task`1.Result" /> которой содержит значение заданного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Асинхронно возвращает значение указанного столбца в виде запрошенного типа.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Токен для отмены асинхронной операции.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Тип возвращаемого значения.</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">Соединение было удалено или закрыто во время получения данных.  
  
-или-

Модуль чтения данных был закрыт во время получения данных.  

-или-

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение <see langword="false" />).

-или-

Сделана попытка чтения ранее считанного столбца в последовательном режиме.  

-или-

Выполнялась асинхронная операция. Относится ко всем методам Get_*_ при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">Значение, возвращенное базой данных, не соответствует типу <typeparamref name="T" /> или не может быть приведено к нему.</exception>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Задача, <see cref="P:System.Threading.Tasks.Task`1.Result" /> которой содержит значение заданного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single-precision floating point number.">При переопределении в производном классе получает значение заданного столбца в виде числа с плавающей запятой одиночной точности.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a globally unique identifier (GUID).">При переопределении в производном классе получает значение заданного столбца в виде глобального уникального идентификатора (GUID).</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 16-bit signed integer.">При переопределении в производном классе получает значение заданного столбца в виде 16-разрядного целого числа со знаком.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 32-bit signed integer.">При переопределении в производном классе получает значение заданного столбца в виде 32-разрядного целого числа со знаком.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 64-bit signed integer.">При переопределении в производном классе получает значение заданного столбца в виде 64-разрядного целого числа со знаком.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the name of the column, given the zero-based column ordinal.">При переопределении в производном классе получает имя столбца по порядковому номеру столбца (от нуля).</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <returns vsli:raw="The name of the specified column.">Имя заданного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the column ordinal given the name of the column.">При переопределении в производном классе получает порядковый номер столбца по имени столбца.</summary>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <returns vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">Возвращает тип заданного столбца, зависящий от поставщика.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <returns vsli:raw="A provider-specific .NET type.">Зависящий от поставщика тип .NET.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">Возвращает значение указанного столбца как экземпляр зависящего от поставщика типа.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Gets all provider-specific attribute columns in the collection for the current row.">Возвращает из коллекции все столбцы атрибутов, зависящие от поставщика, для текущей строки.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">Массив объектов <see cref="T:System.Object" />, в который необходимо скопировать столбцы атрибутов.</param>
      <returns vsli:raw="The number of instances of elements in the array.">Число экземпляров элементов в массиве.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.Common.DbDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">Объект <see cref="T:System.Data.Common.DbDataReader" /> закрыт.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">Только в .NET Core: этот элемент не поддерживается.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTableAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt; will be communicated via the returned Task Exception property.">Это асинхронная версия метода <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.
Поставщики должны выполнить переопределение с помощью соответствующей реализации.
При необходимости можно учитывать <paramref name="cancellationToken" />.
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /> и возвращает выполненную задачу.
Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный <paramref name="cancellationToken" />.
Исключения, создаваемые <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />, будут связаны через возвращаемое свойство исключения задачи.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Инструкция отмены.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">Возвращает поток для получения данных из указанного столбца.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Соединение было удалено или закрыто во время получения данных.  
  
-или-

Модуль чтения данных закрыт во время получения данных.  

-или-

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  

-или-

Модуль чтения данных попытался считать ранее считанный столбец в последовательном режиме.  

-или-

Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Тип указанного столбца не является двоичным типом, поддерживающим чтение с помощью <see cref="T:System.IO.Stream" />.</exception>
      <returns vsli:raw="A stream.">Поток.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">При переопределении в производном классе получает значение указанного столбца в виде экземпляра <see cref="T:System.String" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">Получает модуль чтения текста для извлечения данных из столбца.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Соединение было удалено или закрыто во время получения данных.  
  
-или-

Модуль чтения данных закрыт во время получения данных.  

-или-

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  

-или-

Модуль чтения данных попытался считать ранее считанный столбец в последовательном режиме.  

-или-

Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Тип указанного столбца не является текстовым типом, поддерживающим чтение с помощью <see cref="T:System.IO.TextReader" />.</exception>
      <returns vsli:raw="A text reader.">Средство чтения текста.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">При переопределении в производном классе получает значение указанного столбца в виде экземпляра <see cref="T:System.Object" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary vsli:raw="When overridden in a derived class, populates an array of objects with the column values of the current row.">При переопределении в производном классе заполняет массив объектов значениями столбцов текущей строки.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">Массив объектов <see cref="T:System.Object" />, в который необходимо скопировать столбцы атрибутов.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">Число экземпляров <see cref="T:System.Object" /> в массиве.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether the column contains nonexistent or missing values.">При переопределении в производном классе получает значение, указывающее, содержатся ли в столбце несуществующие или отсутствующие значения.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если указанный столбец эквивалентен <see cref="T:System.DBNull" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Асинхронно получает значение, указывающее, содержит ли столбец несуществующие или пропущенные значения.</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">Извлекаемый столбец (отсчитываемый с нуля).</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Соединение было удалено или закрыто во время получения данных.  
  
-или-

Модуль чтения данных закрыт во время получения данных.  

-или-

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  

-или-

Попытка чтения ранее считанного столбца в последовательном режиме.  

-или-

Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">Объект <see cref="T:System.Threading.Tasks.Task`1" />, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которого равно <see langword="true" />, если указанное значение столбца эквивалентно значению <see langword="DBNull" />, или <see langword="false" /> в противном случае.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Асинхронно получает значение, указывающее, содержит ли столбец несуществующие или пропущенные значения.</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">Извлекаемый столбец (отсчитываемый с нуля).</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Токен для отмены асинхронной операции.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Соединение было удалено или закрыто во время получения данных.  
  
-или-

Модуль чтения данных закрыт во время получения данных.  

-или-

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  

-или-

Попытка чтения ранее считанного столбца в последовательном режиме.  

-или- 
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">Объект <see cref="T:System.Threading.Tasks.Task`1" />, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которого равно <see langword="true" />, если указанное значение столбца эквивалентно значению <see langword="DBNull" />, или <see langword="false" /> в противном случае.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next result when reading the results of a batch of statements.">При переопределении в производном классе асинхронно перемещает модуль чтения данных к следующему результату при чтении результатов из пакета инструкций.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more result sets; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если имеются и другие наборы результатов, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">Асинхронно перемещает модуль чтения данных к следующему результату при чтении результатов из пакета инструкций.</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">Задача, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которой имеет значение <see langword="true" />, если результирующие наборы еще имеются, или <see langword="false" /> в противном случае.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">Асинхронно перемещает модуль чтения данных к следующему результату при чтении результатов из пакета инструкций.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Инструкция отмены.</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">Объект <see cref="T:System.Threading.Tasks.Task`1" />, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которого имеет значение <see langword="true" />, если есть еще результирующие наборы, или <see langword="false" /> в противном случае.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next record in a result set.">При переопределении в производном классе перемещает модуль чтения к следующей записи в результирующем наборе.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если имеются другие строки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">Асинхронно перемещает модуль чтения к следующей записи в результирующем наборе.</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">Объект <see cref="T:System.Threading.Tasks.Task`1" />, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которого имеет значение <see langword="true" />, если есть еще строки, или <see langword="false" /> в противном случае.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">Асинхронно перемещает модуль чтения к следующей записи в результирующем наборе.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Инструкция отмены.</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">Объект <see cref="T:System.Threading.Tasks.Task`1" />, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которого имеет значение <see langword="true" />, если есть еще строки, или <see langword="false" /> в противном случае.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Data.IDataRecord.GetData(System.Int32)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used when the field points to more remote structured data.">Экземпляр <see cref="T:System.Data.IDataReader" />, используемый, когда поле указывает на дополнительные удаленные структурированные данные.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">Возвращает значение, показывающее глубину вложенности для текущей строки.</summary>
      <returns vsli:raw="The depth of nesting for the current row.">Глубина вложенности для текущей строки.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary vsli:raw="When overridden in a derived class, gets the number of columns in the current row.">При переопределении в производном классе получает число столбцов в текущей строке.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is no current connection to an instance of SQL Server.">Текущее подключение к экземпляру SQL Server отсутствует.</exception>
      <returns vsli:raw="The number of columns in the current row.">Число столбцов в текущей строке.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows.">При переопределении в производном классе получает значение, указывающее, содержит ли <see cref="T:System.Data.Common.DbDataReader" /> одну или несколько строк.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Data.Common.DbDataReader" /> содержит одну или несколько строк; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">При переопределении в производном классе получает значение, показывающее, закрыт ли объект <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">Объект <see cref="T:System.Data.Common.DbDataReader" /> закрыт.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если указанный модуль <see cref="T:System.Data.Common.DbDataReader" /> закрыт. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">При переопределении в производном классе получает значение указанного столбца в виде экземпляра <see cref="T:System.Object" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">Индекс столбца находится за пределами диапазона.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">При переопределении в производном классе получает значение указанного столбца в виде экземпляра <see cref="T:System.Object" />.</summary>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">Столбец с указанным именем не найден.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary vsli:raw="When overridden in a derived class, gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">При переопределении в производном классе возвращает число строк, которые были изменены, вставлены или удалены инструкцией SQL.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.">Количество измененных, вставленных или удаленных строк. Значение -1 для операторов SELECT; значение 0, если строки не изменены или при сбое инструкции.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary vsli:raw="Gets the number of fields in the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; that are not hidden.">Возвращает число не скрытых полей в <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="The number of fields that are not hidden.">Число не скрытых полей.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary vsli:raw="This class contains column schema extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Этот класс содержит методы расширения схемы столбца для <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema.">Получает значение, которое указывает, может ли <see cref="T:System.Data.Common.DbDataReader" /> получить схему столбца.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to be checked for column schema support.">
        <see cref="T:System.Data.Common.DbDataReader" />, который следует проверить на поддержку схемы столбца.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Data.Common.DbDataReader" /> может получить схему столбца; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Получает схему столбца (коллекцию <see cref="T:System.Data.Common.DbColumn" />) для <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to return the column schema.">
        <see cref="T:System.Data.Common.DbDataReader" /> для возврата схемы столбца.</param>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Схема столбца (коллекция <see cref="T:System.Data.Common.DbColumn" />) для <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary vsli:raw="Implements &lt;see cref=&quot;T:System.Data.IDataRecord&quot; /&gt; and &lt;see cref=&quot;T:System.ComponentModel.ICustomTypeDescriptor&quot; /&gt;, and provides data binding support for &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt;.">Реализует <see cref="T:System.Data.IDataRecord" /> и <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> и обеспечивает поддержку привязки данных для <see cref="T:System.Data.Common.DbEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataRecord&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbDataRecord" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a Boolean.">Возвращает значение указанного столбца в виде логического значения.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Boolean is &lt;see langword=&quot;true&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если логическое значение представлено <see langword="true" />. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte.">Возвращает значение указанного столбца в виде байта.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte array.">Возвращает значение указанного столбца в виде массива байтов.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">Индекс в поле, с которого необходимо начать считывание.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">Буфер, в который считывается поток байтов.</param>
      <param name="bufferIndex" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">Индекс для <paramref name="buffer" /> для запуска операции чтения.</param>
      <param name="length" vsli:raw="The number of bytes to read.">Количество байтов, чтение которых необходимо выполнить.</param>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character.">Возвращает значение указанного столбца в виде символа.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">Возвращает значение указанного столбца в виде массива символов.</summary>
      <param name="i" vsli:raw="Column ordinal.">Порядковый номер столбца.</param>
      <param name="dataIndex" vsli:raw="Buffer to copy data into.">Буфер для копирования данных.</param>
      <param name="buffer" vsli:raw="Maximum length to copy into the buffer.">Максимальная длина для копирования в буфер.</param>
      <param name="bufferIndex" vsli:raw="Point to start from within the buffer.">Точка для начала из буфера.</param>
      <param name="length" vsli:raw="Point to start from within the source data.">Точка для начала из исходных данных.</param>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Not currently supported.">В настоящее время не поддерживается.</summary>
      <param name="i" vsli:raw="Not currently supported.">В настоящее время не поддерживается.</param>
      <returns vsli:raw="Not currently supported.">В настоящее время не поддерживается.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Returns the name of the back-end data type.">Возвращает имя типа внутренних данных.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The name of the back-end data type.">Имя типа внутренних данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">Возвращает объект <see cref="T:System.Data.Common.DbDataReader" /> для запрошенного порядкового номера столбца, который может быть переопределен с помощью зависящей от поставщика реализации.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Объект <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Возвращает значение указанного столбца в виде объекта <see cref="T:System.Decimal" />.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a double-precision floating-point number.">Возвращает значение заданного столбца в виде числа с плавающей запятой двойной точности.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Возвращает тип данных объекта (<see cref="T:System.Type" />).</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Тип данных объекта (<see cref="T:System.Type" />).</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a single-precision floating-point number.">Возвращает значение заданного столбца в виде числа с плавающей запятой одинарной точности.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">Возвращает значение GUID указанного поля.</summary>
      <param name="i" vsli:raw="The index of the field to return.">Индекс поля, которое необходимо вернуть.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The GUID value of the specified field.">Значение GUID указанного поля.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 16-bit signed integer.">Возвращает значение указанного столбца в виде 16-разрядного целого числа со знаком.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 32-bit signed integer.">Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 64-bit signed integer.">Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified column.">Возвращает имя заданного столбца.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The name of the specified column.">Имя заданного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Returns the column ordinal, given the name of the column.">Возвращает порядковый номер столбца, если известно его имя.</summary>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <returns vsli:raw="The column ordinal.">Порядковый номер столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a string.">Возвращает значение указанного столбца в виде строки.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Returns the value at the specified column in its native format.">Возвращает значение указанного столбца в собственном формате.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The value to return.">Возвращаемое значение.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">Заполняет массив объектов значениями столбцов текущей записи.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">Массив <see cref="T:System.Object" />, в который нужно копировать поля атрибутов.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">Число экземпляров <see cref="T:System.Object" /> в массиве.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Used to indicate nonexistent values.">Используется для обозначения несуществующих значений.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если указанный столбец эквивалентен <see cref="T:System.DBNull" />. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Возвращает коллекцию настраиваемых атрибутов для этого экземпляра компонента.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; that contains the attributes for this object.">Коллекция <see cref="T:System.ComponentModel.AttributeCollection" />, которая содержит атрибуты для этого объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Возвращает имя класса для этого экземпляра компонента.</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">Имя класса объекта или <see langword="null" />, если класс не имеет имени.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Возвращает имя этого экземпляра компонента.</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">Имя объекта или <see langword="null" />, если объект не имеет имени.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Возвращает преобразователь типов для этого экземпляра компонента.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">Объект <see cref="T:System.ComponentModel.TypeConverter" />, который является преобразователем для данного объекта, или значение <see langword="null" /> в случае отсутствия <see cref="T:System.ComponentModel.TypeConverter" /> для данного объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Возвращает событие по умолчанию для этого экземпляра компонента.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">Значение <see cref="T:System.ComponentModel.EventDescriptor" /> , представляющее событие по умолчанию для этого объекта, или <see langword="null" /> , если этот объект не имеет событий.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Возвращает свойство по умолчанию для этого экземпляра компонента.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">Значение <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющее свойство по умолчанию для данного объекта, или <see langword="null" />, если этот объект не имеет свойств.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Возвращает редактор заданного типа для этого экземпляра компонента.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">Объект <see cref="T:System.Type" />, который представляет редактор для этого объекта.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">Объект <see cref="T:System.Object" /> заданного типа, являющийся редактором для этого объекта, или <see langword="null" />, если редактор не найден.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Возвращает события для этого экземпляра компонента.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">Объект <see cref="T:System.ComponentModel.EventDescriptorCollection" />, представляющий события для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">Возвращает события для этого экземпляра компонента, используя заданный массив атрибутов в качестве фильтра.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Массив типа <see cref="T:System.Attribute" />, используемый в качестве фильтра.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">Объект <see cref="T:System.ComponentModel.EventDescriptorCollection" />, представляющий отфильтрованные события для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Возвращает свойства для этого экземпляра компонента.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">Объект <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">Возвращает свойства для этого экземпляра компонента, используя массив атрибутов в качестве фильтра.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Массив типа <see cref="T:System.Attribute" />, используемый в качестве фильтра.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">Коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющая отфильтрованные свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Возвращает объект, содержащий свойство, описываемое заданным дескриптором свойства.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющий свойство, владельца которого требуется найти.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">Объект <see cref="T:System.Object" />, представляющий владельца заданного свойства.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary vsli:raw="Indicates the number of fields within the current record. This property is read-only.">Указывает количество полей в текущей записи. Это свойство доступно только для чтения.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Not connected to a data source to read from.">Отсутствует подключение к источнику данных для чтения.</exception>
      <returns vsli:raw="The number of fields within the current record.">Количество полей в текущей записи.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column ordinal. This property is read-only.">Указывает значение в заданном столбце в собственном формате с учетом порядкового номера столбца. Это свойство доступно только для чтения.</summary>
      <param name="i" vsli:raw="The column ordinal.">Порядковый номер столбца.</param>
      <returns vsli:raw="The value at the specified column in its native format.">Значение указанного столбца в собственном формате.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column name. This property is read-only.">Указывает значение в заданном столбце в собственном формате с учетом имени столбца. Это свойство доступно только для чтения.</summary>
      <param name="name" vsli:raw="The column name.">Имя столбца.</param>
      <returns vsli:raw="The value at the specified column in its native format.">Значение указанного столбца в собственном формате.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary vsli:raw="Provides a mechanism for enumerating all available instances of database servers within the local network.">Предоставляет механизм для перечисления всех доступных экземпляров серверов баз данных в локальной сети.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Создание нового экземпляра класса <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about all visible instances of the server represented by the strongly typed instance of this class.">Получает объект <see cref="T:System.Data.DataTable" />, содержащий сведения обо всех видимых экземплярах сервера, представленных строго типизированным экземпляром этого класса.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about the visible instances of the associated data source.">Объект <see cref="T:System.Data.DataTable" />, содержащий сведения обо всех видимых экземплярах связанного источника данных.</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">Предоставляет метод <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, который поддерживает простую итерацию по коллекции с помощью поставщика данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class with the give n data reader.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbEnumerator" /> указанным модулем чтения данных.</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">DataReader, по которому выполняется итерация.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified reader and indicates whether to automatically close the reader after iterating through its data.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbEnumerator" /> класса, используя указанный модуль чтения, и указывает, следует ли автоматически закрывать модуль чтения после итераций по данным.</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">DataReader, по которому выполняется итерация.</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the DataReader after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, чтобы автоматически закрывать объект DataReader после выполнения итераций по данным; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbEnumerator" /> с использованием указанного объекта <see langword="DataReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">
        <see langword="DataReader" />, по которому выполняется итерация.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;, and indicates whether to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbEnumerator" />, используя указанный модуль <see langword="DataReader" />, и указывает, следует ли автоматически закрывать <see langword="DataReader" /> после итераций по данным.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">
        <see langword="DataReader" />, по которому выполняется итерация.</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, чтобы автоматически закрывать объект <see langword="false" /> после выполнения итераций по данным; в противном случае — значение <see langword="DataReader" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">Перемещает перечислитель к следующему элементу коллекции.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">После создания перечислителя семейство было изменено.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">Значение <see langword="true" />, если перечислитель был успешно перемещен к следующему элементу; значение <see langword="false" />, если перечислитель достиг конца коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Устанавливает перечислитель в его начальное положение, т. е. перед первым элементом коллекции.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">После создания перечислителя семейство было изменено.</exception>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Получает текущий элемент в коллекции.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">Перечислитель размещается перед первым элементом семейства или после его последнего элемента.</exception>
      <returns vsli:raw="The current element in the collection.">Текущий элемент в коллекции.</returns>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary vsli:raw="The base class for all exceptions thrown on behalf of the data source.">Базовый класс для всех исключений, вызываемых источником данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified serialization information and context.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" /> с указанными сведениями о сериализации и контекстом.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" /> указанным сообщением об ошибке.</summary>
      <param name="message" vsli:raw="The message to display for this exception.">Сообщение, отображаемое для этого исключения.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message" vsli:raw="The error message string.">Строка сообщения об ошибке.</param>
      <param name="innerException" vsli:raw="The inner exception reference.">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and error code.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" /> с указанным сообщением об ошибке и кодом ошибки.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="errorCode" vsli:raw="The error code for the exception.">Код ошибки для исключения.</param>
    </member>
    <member name="P:System.Data.Common.DbException.IsTransient">
      <summary vsli:raw="Indicates whether the error represented by this &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; could be a transient error, i.e. if retrying the triggering operation may succeed without any other change.">Указывает, может ли ошибка, представленная этим экземпляром <see cref="T:System.Data.Common.DbException" />, быть временной ошибкой, т. е. может ли повторная попытка активировать операцию быть выполнена без других изменений.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the error represented could be a transient error; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> Если представленная ошибка может быть временной ошибкой; <see langword="false" /> в противном случае — значение.</returns>
    </member>
    <member name="P:System.Data.Common.DbException.SqlState">
      <summary vsli:raw="&lt;para&gt; For database providers which support it, contains a standard SQL 5-character return code indicating the success or failure of the database operation. The first 2 characters represent the &lt;strong&gt;class&lt;/strong&gt; of the return code (e.g. error, success), while the last 3 characters represent the &lt;strong&gt;subclass&lt;/strong&gt;, allowing detection of error scenarios in a database-portable way.&lt;/para&gt;&lt;para&gt; For database providers which don't support it, or for inapplicable error scenarios, contains &lt;see langword=&quot;null&quot; /&gt;.&lt;/para&gt;">
        <para> Для поставщиков баз данных с поддержкой содержит стандартный код возврата SQL, состоящий из пяти символов и указывающий на успешность выполнения операции с базой данных. Первые два символа представляют <strong>класс</strong> кода возврата (например, ошибка или успешное выполнение), а последние три символа — <strong>подкласс</strong>. Это позволяет обнаруживать сценарии ошибок с применением подхода с поддержкой переноса баз данных.</para>
        <para> Для поставщиков баз данных без поддержки или неприменимых сценариев ошибок содержит <see langword="null" />.</para>
      </summary>
      <returns vsli:raw="A standard SQL 5-character return code, or &lt;see langword=&quot;null&quot; /&gt;.">Стандартный 5-символьный код возврата SQL или <see langword="null" /> .</returns>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary vsli:raw="Provides a list of constants for the well-known MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords, and Restrictions.">Предоставляет список констант для хорошо известных коллекций MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords и Restrictions.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataSourceInformation collection.">Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataTypes collection.">Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the MetaDataCollections collection.">Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the ReservedWords collection.">Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the Restrictions collection.">Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию Restrictions.</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary vsli:raw="Provides static values that are used for the column names in the MetaDataCollection objects contained in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is created by the GetSchema method.">Предоставляет статические значения, которые используются для имен столбцов в объектах MetaDataCollection, содержащихся в <see cref="T:System.Data.DataTable" />. Объект <see cref="T:System.Data.DataTable" /> создан с помощью метода GetSchema.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary vsli:raw="Used by the GetSchema method to create the CollectionName column in the DataTypes collection.">Используется методом GetSchema для создания столбца CollectionName в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary vsli:raw="Used by the GetSchema method to create the ColumnSize column in the DataTypes collection.">Используется методом GetSchema для создания столбца ColumnSize в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the CompositeIdentifierSeparatorPattern column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца CompositeIdentifierSeparatorPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary vsli:raw="Used by the GetSchema method to create the CreateFormat column in the DataTypes collection.">Используется методом GetSchema для создания столбца CreateFormat в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary vsli:raw="Used by the GetSchema method to create the CreateParameters column in the DataTypes collection.">Используется методом GetSchema для создания столбца CreateParameters в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductName column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца DataSourceProductName в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersion column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца DataSourceProductVersion в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersionNormalized column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца DataSourceProductVersionNormalized в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary vsli:raw="Used by the GetSchema method to create the DataType column in the DataTypes collection.">Используется методом GetSchema для создания столбца DataType в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary vsli:raw="Used by the GetSchema method to create the GroupByBehavior column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца GroupByBehavior в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierCase column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца IdentifierCase в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierPattern column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца IdentifierPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary vsli:raw="Used by the GetSchema method to create the IsAutoIncrementable column in the DataTypes collection.">Используется методом GetSchema для создания столбца IsAutoIncrementable в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary vsli:raw="Used by the GetSchema method to create the IsBestMatch column in the DataTypes collection.">Используется методом GetSchema для создания столбца IsBestMatch в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary vsli:raw="Used by the GetSchema method to create the IsCaseSensitive column in the DataTypes collection.">Используется методом GetSchema для создания столбца IsCaseSensitive в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary vsli:raw="Used by the GetSchema method to create the IsConcurrencyType column in the DataTypes collection.">Используется методом GetSchema для создания столбца IsConcurrencyType в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedLength column in the DataTypes collection.">Используется методом GetSchema для создания столбца IsFixedLengthв коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedPrecisionScale column in the DataTypes collection.">Используется методом GetSchema для создания столбца IsFixedPrecisionScale в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary vsli:raw="Used by the GetSchema method to create the IsLiteralSupported column in the DataTypes collection.">Используется методом GetSchema для создания столбца IsLiteralSupported в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary vsli:raw="Used by the GetSchema method to create the IsLong column in the DataTypes collection.">Используется методом GetSchema для создания столбца IsLong в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary vsli:raw="Used by the GetSchema method to create the IsNullable column in the DataTypes collection.">Используется методом GetSchema для создания столбца IsNullable в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchable column in the DataTypes collection.">Используется методом GetSchema для создания столбца IsSearchable в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchableWithLike column in the DataTypes collection.">Используется методом GetSchema для создания столбца IsSearchableWithLike в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary vsli:raw="Used by the GetSchema method to create the IsUnsigned column in the DataTypes collection.">Используется методом GetSchema для создания столбца IsUnsigned в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralPrefix column in the DataTypes collection.">Используется методом GetSchema для создания столбца LiteralPrefix в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralSuffix column in the DataTypes collection.">Используется методом GetSchema для создания столбца LiteralSuffix в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MaximumScale column in the DataTypes collection.">Используется методом GetSchema для создания столбца MaximumScale в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MinimumScale column in the DataTypes collection.">Используется методом GetSchema для создания столбца MinimumScale в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfIdentifierParts column in the MetaDataCollections collection.">Используется методом GetSchema для создания столбца NumberOfIdentifierParts в коллекции MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfRestrictions column in the MetaDataCollections collection.">Используется методом GetSchema для создания столбца NumberOfRestrictions в коллекции MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary vsli:raw="Used by the GetSchema method to create the OrderByColumnsInSelect column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца OrderByColumnsInSelect в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerFormat column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца ParameterMarkerFormat в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerPattern column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца ParameterMarkerPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNameMaxLength column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца ParameterNameMaxLength в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNamePattern column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца ParameterNamePattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary vsli:raw="Used by the GetSchema method to create the ProviderDbType column in the DataTypes collection.">Используется методом GetSchema для создания столбца ProviderDbType в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierCase column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца QuotedIdentifierCase в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierPattern column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца QuotedIdentifierPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary vsli:raw="Used by the GetSchema method to create the ReservedWord column in the ReservedWords collection.">Используется методом GetSchema для создания столбца ReservedWord в коллекции ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StatementSeparatorPattern column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца StatementSeparatorPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StringLiteralPattern column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца StringLiteralPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary vsli:raw="Used by the GetSchema method to create the SupportedJoinOperators column in the DataSourceInformation collection.">Используется методом GetSchema для создания столбца SupportedJoinOperators в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary vsli:raw="Used by the GetSchema method to create the TypeName column in the DataTypes collection.">Используется методом GetSchema для создания столбца TypeName в коллекции DataTypes.</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary vsli:raw="Represents a parameter to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; and optionally, its mapping to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column. For more information on parameters, see Configuring Parameters and Parameter Data Types.">Представляет параметр для объекта <see cref="T:System.Data.Common.DbCommand" /> и (необязательно) его сопоставление со столбцом <see cref="T:System.Data.DataSet" />. Дополнительные сведения о параметрах см. в разделе Настройка параметров и типов данных параметров.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbParameter" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary vsli:raw="Resets the DbType property to its original settings.">Сбрасывает свойство DbType к его исходным параметрам.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">Возвращает или устанавливает тип <see cref="T:System.Data.DbType" /> параметра.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">Для свойства не задано допустимое значение <see cref="T:System.Data.DbType" />.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.DbType" />. Значение по умолчанию — <see cref="F:System.Data.DbType.String" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">Возвращает или задает значение, указывающее, является ли параметр только входным, только выходным, двунаправленным или параметром, возвращаемым хранимой процедурой.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">Для свойства не задано допустимое значение <see cref="T:System.Data.ParameterDirection" />.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.ParameterDirection" />. Значение по умолчанию — <see langword="Input" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter accepts null values.">Возвращает или задает значение, указывающее, принимает ли этот параметр значения NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если допускаются значения NULL. В противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">Возвращает или задает имя таблицы для объекта <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;. The default is an empty string (&quot;&quot;).">Имя <see cref="T:System.Data.Common.DbParameter" />. Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary vsli:raw="Gets or sets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">Возвращает или задает максимальное количество цифр, используемых для представления свойства <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">Максимальное количество цифр, используемых для представления свойства <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary vsli:raw="Gets or sets the number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">Возвращает или задает число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">Число десятичных знаков, применяемых в <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary vsli:raw="Gets or sets the maximum size, in bytes, of the data within the column.">Возвращает или задает максимальный размер (в байтах) данных внутри столбца.</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">Максимальный размер в байтах данных внутри столбца. Значение по умолчанию определяется исходя из значения параметра.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">Возвращает или задает имя исходного столбца, сопоставленного <see cref="T:System.Data.DataSet" /> и используемого для загрузки или возвращения значения <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns vsli:raw="The name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">Имя исходного столбца, сопоставленного <see cref="T:System.Data.DataSet" />. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary vsli:raw="Gets or sets a value which indicates whether the source column is nullable. This allows &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to correctly generate Update statements for nullable columns.">Возвращает или задает значение, показывающее, допускает ли исходный столбец значения NULL. Это позволяет <see cref="T:System.Data.Common.DbCommandBuilder" /> правильно создавать инструкции Update для столбцов со значением NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source column is nullable; &lt;see langword=&quot;false&quot; /&gt; if it is not.">
        <see langword="true" />, если исходный столбец допускает значение NULL, <see langword="false" /> — в противном случае.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when you load &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">Возвращает или задает значение <see cref="T:System.Data.DataRowVersion" />, используемое при загрузке <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">Свойству не задано одно из значений <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.DataRowVersion" />. Значение по умолчанию — <see langword="Current" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">Указывает точность числовых параметров.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; property of a data provider &lt;see langword=&quot;Parameter&quot; /&gt; object. The default value is 0, which indicates that a data provider sets the precision for &lt;see langword=&quot;Value&quot; /&gt;.">Максимальное число разрядов, используемых для представления свойства <see langword="Value" /> объекта <see langword="Parameter" /> поставщика данных. Значение по умолчанию — 0. Оно указывает, что точность значения <see langword="Value" /> задает поставщик данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Data.IDbDataParameter.Scale&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataParameter.Scale" />.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">Число десятичных знаков, применяемых в <see cref="P:System.Data.OleDb.OleDbParameter.Value" />. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">Возвращает или задает значение параметра.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">Объект <see cref="T:System.Object" />, который является значением параметра. По умолчанию используется значение NULL.</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary vsli:raw="The base class for a collection of parameters relevant to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Базовый класс для коллекции параметров, относящихся к <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Добавляет указанный объект <see cref="T:System.Data.Common.DbParameter" /> к объекту <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">
        <see cref="P:System.Data.Common.DbParameter.Value" /> из <see cref="T:System.Data.Common.DbParameter" /> для добавления в коллекцию.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Индекс объекта <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary vsli:raw="Adds an array of items with the specified values to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Добавляет массив элементов с заданными значениями в <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="values" vsli:raw="An array of values of type &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">Массив значений типа <see cref="T:System.Data.Common.DbParameter" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; values from the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Удаляет все значения <see cref="T:System.Data.Common.DbParameter" /> из <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is contained in the collection.">Указывает, содержится ли в коллекции объект <see cref="T:System.Data.Common.DbParameter" /> с указанным <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">Значение <see cref="P:System.Data.Common.DbParameter.Value" /> параметра <see cref="T:System.Data.Common.DbParameter" />, которое нужно найти в коллекции.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если элемент <see cref="T:System.Data.Common.DbParameter" /> присутствует в коллекции, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name exists in the collection.">Указывает, содержится ли в коллекции объект <see cref="T:System.Data.Common.DbParameter" /> с указанным именем.</summary>
      <param name="value" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">Имя параметра <see cref="T:System.Data.Common.DbParameter" />, которое следует искать в коллекции.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если элемент <see cref="T:System.Data.Common.DbParameter" /> присутствует в коллекции, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies an array of items to the collection starting at the specified index.">Копирует массив экземпляров в коллекцию, начиная с указанного индекса.</summary>
      <param name="array" vsli:raw="The array of items to copy to the collection.">Массив элементов для копирования в коллекцию.</param>
      <param name="index" vsli:raw="The index in the collection to copy the items.">Индекс в коллекции для копирования элементов.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">Предоставляет метод <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, который поддерживает простую итерацию по коллекции с помощью поставщика данных .NET Framework.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">Возвращает объект <see cref="T:System.Data.Common.DbParameter" /> по указанному индексу в коллекции.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">Индекс объекта <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">Объект <see cref="T:System.Data.Common.DbParameter" /> по указанному индексу в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">Возвращает объект <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">Имя <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">Объект <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary vsli:raw="Returns the index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Возвращает индекс указанного объекта <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Объект <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Индекс указанного объекта <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Returns the index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">Возвращает индекс объекта <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Имя объекта <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">Индекс объекта <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts the specified index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name into the collection at the specified index.">Вставляет указанный индекс объекта <see cref="T:System.Data.Common.DbParameter" /> с указанным именем в коллекцию по указанному индексу.</summary>
      <param name="index" vsli:raw="The index at which to insert the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Индекс, по которому нужно вставить объект <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to insert into the collection.">Объект <see cref="T:System.Data.Common.DbParameter" />, который нужно вставить в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object from the collection.">Удаляет указанный объект <see cref="T:System.Data.Common.DbParameter" /> из коллекции.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">Удаляемый объект <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified from the collection.">Удаляет объект <see cref="T:System.Data.Common.DbParameter" /> в указанной позиции из коллекции.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">Индекс, где находится объект <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name from the collection.">Удаляет объект <see cref="T:System.Data.Common.DbParameter" /> с указанным именем из коллекции.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">Имя удаляемого объекта <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index to a new value.">Задает новое значение для объекта <see cref="T:System.Data.Common.DbParameter" /> по указанному индексу.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">Индекс, где находится объект <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">Новое значение <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name to a new value.">Назначает новое значение объекту <see cref="T:System.Data.Common.DbParameter" /> с указанным именем.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Имя объекта <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">Новое значение <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Add(System.Object)" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Contains(System.Object)" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</param>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Remove(System.Object)" />.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary vsli:raw="Specifies the number of items in the collection.">Указывает количество элементов в коллекции.</summary>
      <returns vsli:raw="The number of items in the collection.">Количество элементов в коллекции.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary vsli:raw="Specifies whether the collection is a fixed size.">Указывает, имеет ли коллекция фиксированный размер.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если коллекция имеет фиксированный размер; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary vsli:raw="Specifies whether the collection is read-only.">Указывает, является ли коллекция доступной только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если коллекция доступна только для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary vsli:raw="Specifies whether the collection is synchronized.">Указывает, является ли коллекция синхронизированной.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если коллекция синхронизирована; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">Возвращает или задает объект <see cref="T:System.Data.Common.DbParameter" /> с заданным индексом.</summary>
      <param name="index" vsli:raw="The zero-based index of the parameter.">Отсчитываемый с нуля индекс параметра.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">Указанный индекс не существует.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">Объект <see cref="T:System.Data.Common.DbParameter" /> по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">Возвращает или задает объект <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">Имя параметра.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">Указанный индекс не существует.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">Параметр <see cref="T:System.Data.Common.DbParameter" /> с указанным именем.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the collection.">Указывает объект <see cref="T:System.Object" />, который следует использовать для синхронизации доступа к коллекции.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Объект <see cref="T:System.Object" />, который следует использовать для синхронизации доступа к коллекции <see cref="T:System.Data.Common.DbParameterCollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</param>
      <returns vsli:raw="The element at the specified index.">Элемент, расположенный по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">Возвращает или задает параметр по указанному индексу.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">Имя получаемого параметра.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">Объект <see cref="T:System.Object" /> в указанном индексе.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary vsli:raw="Represents a set of static methods for creating one or more instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; classes.">Представляет набор статических методов для создания одного или нескольких экземпляров классов <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Возвращает экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="connection" vsli:raw="The connection used.">Используемое подключение.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified connection.">Экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" /> для указанного подключения.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Возвращает экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerRow" vsli:raw="&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; containing the provider's configuration information.">Объект <see cref="T:System.Data.DataRow" />, содержащий сведения о конфигурации поставщика.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" /> для указанного объекта <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Возвращает экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerInvariantName" vsli:raw="Invariant name of a provider.">Инвариантное имя поставщика.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified provider name.">Экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" /> для указанного имени поставщика.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains information about all installed providers that implement &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Возвращает объект <see cref="T:System.Data.DataTable" />, содержащий сведения обо всех установленных поставщиках, реализующих объект <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain the following data:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Column ordinal&lt;/term&gt;&lt;description&gt; Column name&lt;/description&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;description&gt; Human-readable name for the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;description&gt; Human-readable description of the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 2&lt;/term&gt;&lt;description&gt; InvariantName&lt;/description&gt;&lt;description&gt; Name that can be used programmatically to refer to the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 3&lt;/term&gt;&lt;description&gt; AssemblyQualifiedName&lt;/description&gt;&lt;description&gt; Fully qualified name of the factory class, which contains enough information to instantiate the object.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Объект <see cref="T:System.Data.DataTable" />, содержащий объекты <see cref="T:System.Data.DataRow" />, которые содержат следующие данные: 
 <list type="table"><listheader><term> Порядковый номер столбца</term><description> Имя столбца</description><description> Описание</description></listheader><item><term> 0</term><description> Name</description><description> Понятное имя поставщика данных.</description></item><item><term> 1</term><description> Описание</description><description> Понятное описание поставщика данных.</description></item><item><term> 2</term><description> InvariantName</description><description> Имя, которое может быть использовано программным образом для ссылки на поставщика данных.</description></item><item><term> 3</term><description> AssemblyQualifiedName</description><description> Полное имя класса FACTORY, содержащее достаточно сведений для создания экземпляра объекта.</description></item></list></returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames">
      <summary vsli:raw="Returns the invariant provider names for all registered instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Возвращает инвариантные имена поставщиков для всех зарегистрированных экземпляров <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns vsli:raw="The invariant provider names for all registered instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Инвариантные имена поставщиков для всех зарегистрированных экземпляров <see cref="T:System.Data.Common.DbProviderFactory" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)">
      <summary vsli:raw="Registers an instance of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; under the specified invariant provider name.">Регистрирует экземпляр <see cref="T:System.Data.Common.DbProviderFactory" /> под указанным инвариантным именем поставщика.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">Инвариантное имя поставщика, под которым регистрируется поставщик.</param>
      <param name="factory" vsli:raw="The instance of the provider factory to be registered.">Экземпляр фабрики поставщика для регистрации.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)">
      <summary vsli:raw="Registers a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; with the given assembly-qualified name under the specified invariant provider name.">Регистрирует <see cref="T:System.Data.Common.DbProviderFactory" /> с заданным именем с указанием сборки под указанным инвариантным именем поставщика.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">Инвариантное имя поставщика, под которым регистрируется поставщик.</param>
      <param name="factoryTypeAssemblyQualifiedName" vsli:raw="The assembly-qualified name for a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Имя с указанием сборки для <see cref="T:System.Data.Common.DbProviderFactory" />.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)">
      <summary vsli:raw="Registers a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; with the given type under the specified invariant provider name.">Регистрирует <see cref="T:System.Data.Common.DbProviderFactory" /> с заданным типом под указанным инвариантным именем поставщика.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">Инвариантное имя поставщика, под которым регистрируется поставщик.</param>
      <param name="providerFactoryClass" vsli:raw="The type representing a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Тип, представляющий <see cref="T:System.Data.Common.DbProviderFactory" />.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)">
      <summary vsli:raw="Attempts to get the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; registered under the specified invariant provider name.">Пытается получить <see cref="T:System.Data.Common.DbProviderFactory" />, зарегистрированный под указанным инвариантным именем поставщика.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name to look up.">Инвариантное имя поставщика для поиска.</param>
      <param name="factory" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; associated with the specified invariant provider name, if the name is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">При возвращении метода содержит значение <see cref="T:System.Data.Common.DbProviderFactory" />, связанное с заданным инвариантным именем поставщика, если имя найдено; в противном случае — значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a provider is registered under the specified invariant provider name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если поставщик зарегистрирован под указанным инвариантным именем поставщика; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; registration for the given provider invariant name.">Удаляет регистрацию <see cref="T:System.Data.Common.DbProviderFactory" /> для заданного инвариантного имени поставщика.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name of the registration to remove.">Инвариантное имя поставщика для удаляемой регистрации.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the registration is successfully found and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method returns &lt;see langword=&quot;false&quot; /&gt; if a registration for &lt;paramref name=&quot;providerInvariantName&quot; /&gt; is not found.">Значение <see langword="true" />, если регистрация найдена и удалена; в противном случае — значение <see langword="false" />. Этот метод возвращает <see langword="false" />, если регистрация для <paramref name="providerInvariantName" /> не найдена.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary vsli:raw="Represents a set of methods for creating instances of a provider's implementation of the data source classes.">Представляет набор методов для создания экземпляров классов поставщиков, реализующих источник данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; class.">Возвращает новый экземпляра класса поставщика, реализующий класс <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Возвращает новый экземпляра класса поставщика, реализующий класс <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">Возвращает новый экземпляра класса поставщика, реализующий класс <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">Возвращает новый экземпляра класса поставщика, реализующий класс <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">Возвращает новый экземпляра класса поставщика, реализующий класс <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Возвращает новый экземпляра класса поставщика, реализующий класс <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">Возвращает новый экземпляра класса поставщика, реализующий класс <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateCommandBuilder">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Возвращает значение, определяющее, поддерживает ли экземпляр <see cref="T:System.Data.Common.DbProviderFactory" /> класс <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> значение, если данный экземпляр поддерживает <see cref="T:System.Data.Common.DbCommandBuilder" /> класс; в противном случае — <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataAdapter">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">Возвращает значение, определяющее, поддерживает ли экземпляр <see cref="T:System.Data.Common.DbProviderFactory" /> класс <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> значение, если экземпляр поддерживает <see cref="T:System.Data.Common.DbDataAdapter" /> класс; в противном случае — <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Возвращает значение, определяющее, поддерживает ли экземпляр <see cref="T:System.Data.Common.DbProviderFactory" /> класс <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> значение, если экземпляр поддерживает <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> класс; в противном случае — <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary vsli:raw="Identifies which provider-specific property in the strongly typed parameter classes is to be used when setting a provider-specific type.">Указывает, какое зависящее от поставщика свойство в строго типизированных классах параметров должно использоваться при настройке типа, зависящего от поставщика.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderSpecificTypePropertyAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" />.</summary>
      <param name="isProviderSpecificTypeProperty" vsli:raw="Specifies whether this property is a provider-specific property.">Указывает, является ли это свойство свойством, зависящим от поставщика.</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary vsli:raw="Indicates whether the attributed property is a provider-specific type.">Указывает, имеет ли это атрибутивное свойство тип, зависящий от поставщика.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property that this attribute is applied to is a provider-specific type property; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если свойство, к которому применяется этот атрибут, является свойством типа, зависящего от поставщика; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary vsli:raw="Defines the core behavior of database transactions and provides a base class for database-specific transactions.">Определяет основное поведение транзакций базы данных и предоставляет базовый класс для транзакций, связанных с базой данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; object.">Инициализирует новый объект <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary vsli:raw="When overridden in a derived class, commits the database transaction.">При переопределении в производном классе фиксирует транзакцию в базе данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.CommitAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously commits the database transaction.">Асинхронно фиксирует транзакцию базы данных.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Необязательный токен для отмены асинхронной операции. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt;.">Освобождает неуправляемые ресурсы, используемые <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; and optionally releases the managed resources.">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DbTransaction" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, this method releases all resources held by any managed objects that this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; references.">При значении <see langword="true" /> этот метод освобождает все ресурсы, используемые любыми управляемыми объектами, на которые ссылается этот объект <see cref="T:System.Data.Common.DbTransaction" />.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the transaction object.">Асинхронно размещает объект транзакции.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.ValueTask" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Release(System.String)">
      <summary vsli:raw="Destroys a savepoint previously defined in the current transaction. This allows the system to reclaim some resources before the transaction ends.">Уничтожает точку сохранения, определенную ранее в текущей транзакции. Это позволяет системе высвободить некоторые ресурсы до завершения транзакции.</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to release.">Имя точки сохранения для выпуска.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Destroys a savepoint previously defined in the current transaction. This allows the system to reclaim some resources before the transaction ends.">Уничтожает точку сохранения, определенную ранее в текущей транзакции. Это позволяет системе высвободить некоторые ресурсы до завершения транзакции.</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to release.">Имя точки сохранения для выпуска.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Необязательный токен для отмены асинхронной операции. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary vsli:raw="When overridden in a derived class, rolls back a transaction from a pending state.">При переопределении в производном классе выполняет откат транзакции из состояния ожидания.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback(System.String)">
      <summary vsli:raw="Rolls back all commands that were executed after the specified savepoint was established.">Выполняет откат всех команд, выполненных после создания указанной точки сохранения.</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to roll back to.">Имя точки сохранения, к которой будет выполнен откат.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Rolls back all commands that were executed after the specified savepoint was established.">Выполняет откат всех команд, выполненных после создания указанной точки сохранения.</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to roll back to.">Имя точки сохранения, к которой будет выполнен откат.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Необязательный токен для отмены асинхронной операции. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously rolls back a transaction from a pending state.">Асинхронно откатывает транзакцию из состояния ожидания.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Необязательный токен для отмены асинхронной операции. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Save(System.String)">
      <summary vsli:raw="Creates a savepoint in the transaction. This allows all commands that are executed after the savepoint was established to be rolled back, restoring the transaction state to what it was at the time of the savepoint.">Создает точку сохранения в транзакции. Это позволяет выполнить откат всех команд, выполненных после создания точки сохранения, и восстановить состояние транзакции на момент создания точки сохранения.</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to be created.">Имя создаваемой точки сохранения.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates a savepoint in the transaction. This allows all commands that are executed after the savepoint was established to be rolled back, restoring the transaction state to what it was at the time of the savepoint.">Создает точку сохранения в транзакции. Это позволяет выполнить откат всех команд, выполненных после создания точки сохранения, и восстановить состояние транзакции на момент создания точки сохранения.</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to be created.">Имя создаваемой точки сохранения.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Необязательный токен для отмены асинхронной операции. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Задает объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">При переопределении в производном классе получает объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary vsli:raw="When overridden in a derived class, gets the isolation level for this transaction.">При переопределении в производном классе возвращает уровень изоляции для этой транзакции.</summary>
      <returns vsli:raw="The isolation level for this transaction.">Уровень изоляции для этой транзакции.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.SupportsSavepoints">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; instance supports database savepoints.&#xA;            If &lt;see langword=&quot;false&quot; /&gt;, the methods &lt;see cref=&quot;M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)&quot; /&gt;, &lt;see cref=&quot;M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)&quot; /&gt; and &lt;see cref=&quot;M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)&quot; /&gt; as well as their synchronous counterparts are expected to throw &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Возвращает значение, определяющее, поддерживает ли экземпляр <see cref="T:System.Data.Common.DbTransaction" /> точки сохранения базы данных.
При значении <see langword="false" /> методы <see cref="M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)" />, <see cref="M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)" /> и <see cref="M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)" />, а также их синхронные аналоги, будут выдавать исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; instance supports database savepoints; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />
        <see cref="T:System.Data.Common.DbTransaction" />значение, если этот экземпляр поддерживает точки сохранения базы данных; в противном случае — <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction, or a null reference if the transaction is no longer valid.">Возвращает объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией, или пустую ссылку, если транзакция больше не является допустимой.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary vsli:raw="Specifies the relationship between the columns in a GROUP BY clause and the non-aggregated columns in the select-list of a SELECT statement.">Задает связь между столбцами в предложении GROUP BY и неагрегированными столбцами в списке выбора оператора SELECT.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and must not contain other columns not in the select list.">Предложение GROUP BY должно содержать все неагрегированные столбцы в списке выбора и не должно содержать другие столбцы не в списке выбора.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and can contain other columns not in the select list.">Предложение GROUP BY должно содержать все неагрегированные столбцы в списке выбора и может содержать другие столбцы не в списке выбора.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary vsli:raw="The GROUP BY clause is not supported.">Предложение GROUP BY не поддерживается.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary vsli:raw="The support for the GROUP BY clause is unknown.">Неизвестно, поддерживается ли предложение GROUP BY.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary vsli:raw="There is no relationship between the columns in the GROUP BY clause and the nonaggregated columns in the SELECT list. You may group by any column.">Отсутствует связь между столбцами в предложении GROUP BY и неагрегированными столбцами в списке SELECT. Может выполняться группировка по любому столбцу.</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary vsli:raw="Generates a column schema.">Создает схему столбца.</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">Получает схему столбца (коллекцию <see cref="T:System.Data.Common.DbColumn" />).</summary>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">Схема столбца (коллекция <see cref="T:System.Data.Common.DbColumn" />).</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary vsli:raw="Specifies how identifiers are treated by the data source when searching the system catalog.">Указывает, каким образом идентификаторы воспринимаются источником данных при выполнении поиска в системном каталоге.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary vsli:raw="The data source ignores identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will match.">Источник данных не учитывает регистр идентификатора при выполнении поиска в системном каталоге. Идентификаторы "ab" и "AB" будут совпадать.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary vsli:raw="The data source distinguishes identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will not match.">Источник данных учитывает регистр идентификатора при выполнении поиска в системном каталоге. Идентификаторы "ab" и "AB" не будут совпадать.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary vsli:raw="The data source has ambiguous rules regarding identifier case and cannot discern this information.">Источником данных используются неоднозначные правила, касающиеся учета регистра идентификатора, и поэтому эти сведения распознать не удается.</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">Предоставляет данные для события <see langword="RowUpdated" /> поставщика данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Объект <see cref="T:System.Data.DataRow" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">Команда <see cref="T:System.Data.IDbCommand" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="The type of SQL statement executed.">Тип исполняемого оператора SQL.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Объект <see cref="T:System.Data.Common.DataTableMapping" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">Копирует ссылки на измененные строки в предоставленный массив.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">Массив объектов <see cref="T:System.Data.DataRow" />, в который выполняется копирование.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">Копирует ссылки на измененные строки в предоставленный массив.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">Массив объектов <see cref="T:System.Data.DataRow" />, в который выполняется копирование.</param>
      <param name="arrayIndex" vsli:raw="The index in the array to start copying into.">Индекс в массиве, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">Получает объект <see cref="T:System.Data.IDbCommand" />, выполняемый при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">Команда <see cref="T:System.Data.IDbCommand" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">Получает ошибки, создаваемые поставщиком данных .NET Framework при выполнении свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">Ошибки, создаваемые поставщиком данных .NET Framework при выполнении свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">Возвращает число строк, которые были изменены, вставлены или удалены инструкцией SQL.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">Число измененных, вставленных или удаленных строк. Значение 0, если строки не были затронуты или инструкция завершилась ошибкой. Значение -1 для инструкций SELECT.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Получает объект <see cref="T:System.Data.DataRow" />, отправленный с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Объект <see cref="T:System.Data.DataRow" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary vsli:raw="Gets the number of rows processed in a batch of updated records.">Получает количество строк, обработанных в пакете обновленных записей.</summary>
      <returns vsli:raw="&lt;see langword=&quot;int&quot; /&gt; that specifies the number of row processed.">Объект <see langword="int" />, указывающий количество обработанных строк.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement executed.">Получает тип исполняемого оператора SQL.</summary>
      <returns vsli:raw="The type of SQL statement executed.">Тип исполняемого оператора SQL.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">Получает <see cref="T:System.Data.UpdateStatus" /> свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.UpdateStatus" />. Значение по умолчанию — <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Получает объект <see cref="T:System.Data.Common.DataTableMapping" />, отправленный с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Объект <see cref="T:System.Data.Common.DataTableMapping" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary vsli:raw="Provides the data for the RowUpdating event of a .NET data provider.">Предоставляет данные для события RowUpdating поставщика данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Объект <see cref="T:System.Data.DataRow" /> для метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">Команда <see cref="T:System.Data.IDbCommand" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="The type of SQL statement to execute.">Тип инструкции SQL для выполнения.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Объект <see cref="T:System.Data.Common.DataTableMapping" />, отправляемый с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; object for an instance of this class.">Возвращает или задает объект <see cref="T:System.Data.IDbCommand" /> для экземпляра этого класса.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Интерфейс <see cref="T:System.Data.IDbCommand" /> для выполнения при применении метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; operation.">Получает интерфейс <see cref="T:System.Data.IDbCommand" /> для выполнения во время операции <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Интерфейс <see cref="T:System.Data.IDbCommand" /> для выполнения при применении метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">Получает ошибки, создаваемые поставщиком данных .NET Framework при выполнении свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">Ошибки, создаваемые поставщиком данных .NET Framework при выполнении свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that will be sent to the server as part of an insert, update, or delete operation.">Получает объект <see cref="T:System.Data.DataRow" />, который будет отправлен на сервер в качестве части операции вставки, обновления или удаления.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Объект <see cref="T:System.Data.DataRow" />, отправляемый с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement to execute.">Получает тип оператора SQL для выполнения.</summary>
      <returns vsli:raw="The type of SQL statement to execute.">Тип инструкции SQL для выполнения.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">Возвращает или задает значение <see cref="T:System.Data.UpdateStatus" /> свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.UpdateStatus" />. Значение по умолчанию — <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Получает объект <see cref="T:System.Data.Common.DataTableMapping" /> для отправки с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Объект <see cref="T:System.Data.Common.DataTableMapping" />, отправляемый с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary vsli:raw="Describes the column metadata of the schema for a database table.">Описывает метаданные столбца схемы для таблицы базы данных.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary vsli:raw="Specifies whether value &lt;see langword=&quot;DBNull&quot; /&gt; is allowed.">Указывает, является ли допустимым значение <see langword="DBNull" />.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">Определяет имя столбца в схеме таблицы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary vsli:raw="Specifies the name of the schema in the schema table.">Определяет имя схемы в схеме таблицы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary vsli:raw="Specifies the name of the table in the schema table.">Определяет имя таблицы в схеме таблицы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">Определяет имя столбца в схеме таблицы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary vsli:raw="Specifies the ordinal of the column.">Задает порядковый номер столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary vsli:raw="Specifies the size of the column.">Задает размер столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary vsli:raw="Specifies the type of data in the column.">Задает тип данных в столбце.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary vsli:raw="Specifies whether this column is aliased.">Указывает, является ли этот столбец псевдонимом.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary vsli:raw="Specifies whether this column is an expression.">Указывает, является ли этот столбец выражением.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary vsli:raw="Specifies whether this column is a key for the table.">Указывает, является ли этот столбец ключом для таблицы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary vsli:raw="Specifies whether this column contains long data.">Указывает, содержит ли этот столбец большие объемы данных.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary vsli:raw="Specifies whether a unique constraint applies to this column.">Указывает, применяется ли уникальное ограничение к этому столбцу.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary vsli:raw="Specifies the non-versioned provider-specific data type of the column.">Задает зависящий от поставщика тип данных в столбце, которому не была присвоена версия.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary vsli:raw="Specifies the precision of the column data, if the data is numeric.">Задает точность данных в столбце, если данные являются числовыми.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary vsli:raw="Specifies the scale of the column data, if the data is numeric.">Задает масштаб данных в столбце, если данные являются числовыми.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">Задает зависящий от поставщика тип данных в столбце.</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary vsli:raw="Describes optional column metadata of the schema for a database table.">Описывает дополнительные метаданные столбца схемы для таблицы базы данных.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary vsli:raw="Specifies the value at which the series for new identity columns is assigned.">Указывает значение, при котором назначается ряд для новых столбцов идентификаторов.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary vsli:raw="Specifies the increment between values in the identity column.">Указывает увеличение между значениями в столбце идентификаторов.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary vsli:raw="The name of the catalog associated with the results of the latest query.">Имя каталога, связанного с результатами последнего запроса.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary vsli:raw="The namespace of the column.">Пространство имен столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary vsli:raw="The server name of the column.">Имя сервера столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary vsli:raw="The namespace for the table that contains the column.">Пространство имен для таблицы, содержащей данный столбец.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary vsli:raw="Specifies the mapping for the column.">Указывает сопоставление для столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary vsli:raw="The default value for the column.">Значение по умолчанию для столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary vsli:raw="The expression used to compute the column.">Выражение, используемое для вычисления столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary vsli:raw="Specifies whether the column values in the column are automatically incremented.">Указывает, увеличиваются ли автоматически значения столбца в столбце.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary vsli:raw="Specifies whether this column is hidden.">Указывает, является ли этот столбец скрытым.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary vsli:raw="Specifies whether this column is read-only.">Указывает, является ли этот столбец доступным только для чтения.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary vsli:raw="Specifies whether this column contains row version information.">Указывает, содержит ли данный столбец сведения о версии строки.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">Задает зависящий от поставщика тип данных в столбце.</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary vsli:raw="Specifies what types of Transact-SQL join statements are supported by the data source.">Указывает, какие типы операторов соединения Transact-SQL поддерживаются источником данных.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary vsli:raw="The data source supports full outer joins.">Источник данных поддерживает полные внешние соединения.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary vsli:raw="The data source supports inner joins.">Источник данных поддерживает внутренние соединения.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary vsli:raw="The data source supports left outer joins.">Источник данных поддерживает левые внешние соединения.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary vsli:raw="The data source does not support join queries.">Источник данных не поддерживает запросы соединений.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary vsli:raw="The data source supports right outer joins.">Источник данных поддерживает правые внешние соединения.</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary vsli:raw="Specifies how conflicting changes to the data source will be detected and resolved.">Указывает, каким образом конфликтующие изменения в источнике данных будут выявляться и разрешаться.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary vsli:raw="Update and delete statements will include all searchable columns from the table in the WHERE clause. This is equivalent to specifying &lt;see langword=&quot;CompareAllValuesUpdate&quot; /&gt; | &lt;see langword=&quot;CompareAllValuesDelete&quot; /&gt;.">Операторы обновления и удаления будут включать все столбцы, по которым может осуществляться поиск, из таблицы в предложении WHERE. Это эквивалентно заданию <see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary vsli:raw="If any Timestamp columns exist in the table, they are used in the WHERE clause for all generated update statements. This is equivalent to specifying &lt;see langword=&quot;CompareRowVersionUpdate&quot; /&gt; | &lt;see langword=&quot;CompareRowVersionDelete&quot; /&gt;.">Если в таблице имеются столбцы Timestamp, они используются в предложении WHERE для всех созданных операторов обновления. Это эквивалентно заданию <see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary vsli:raw="All update and delete statements include only &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; columns in the WHERE clause. If no &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; is defined, all searchable columns are included in the WHERE clause. This is equivalent to &lt;see langword=&quot;OverwriteChangesUpdate&quot; /&gt; | &lt;see langword=&quot;OverwriteChangesDelete&quot; /&gt;.">Все операторы обновления и удаления включают только столбцы свойства <see cref="P:System.Data.DataTable.PrimaryKey" /> в предложении WHERE. Если не определено ни одно значение свойства <see cref="P:System.Data.DataTable.PrimaryKey" />, все столбцы, по которым может осуществляться поиск, включаются в предложение WHERE. Это эквивалентно <see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" />.</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary vsli:raw="Describes the current state of the connection to a data source.">Описывает текущее состояние подключения к источнику данных.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary vsli:raw="The connection to the data source is broken. This can occur only after the connection has been opened. A connection in this state may be closed and then re-opened. (This value is reserved for future versions of the product.)">Подключение к источнику данных разорвано. Это может произойти только после открытия подключения. Подключение в этом режиме может быть закрыто, а затем повторно открыто. (Это значение зарезервировано для будущих версий продукта.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary vsli:raw="The connection is closed.">Соединение закрыто.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary vsli:raw="The connection object is connecting to the data source.">Объект подключения подключается к источнику данных.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary vsli:raw="The connection object is executing a command. (This value is reserved for future versions of the product.)">Объект подключения выполняет команду. (Это значение зарезервировано для будущих версий продукта.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary vsli:raw="The connection object is retrieving data. (This value is reserved for future versions of the product.)">Объект подключения получает данные. (Это значение зарезервировано для будущих версий продукта.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary vsli:raw="The connection is open.">Подключение открыто.</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary vsli:raw="Represents a constraint that can be enforced on one or more &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Представляет ограничение, которое может быть применено к одному или более объектам <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">Возвращает объект <see cref="T:System.Data.DataSet" />, которому принадлежит данное ограничение.</summary>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary vsli:raw="Sets the constraint's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Задает объект <see cref="T:System.Data.DataSet" /> ограничения.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint will belong.">Объект <see cref="T:System.Data.DataSet" />, которому принадлежит данное ограничение.</param>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;, if there is one, as a string.">Возвращает свойство <see cref="P:System.Data.Constraint.ConstraintName" />, если оно существует, в виде строки.</summary>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;.">Строковое значение свойства <see cref="P:System.Data.Constraint.ConstraintName" />.</returns>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">Возвращает объект <see cref="T:System.Data.DataSet" />, которому принадлежит данное ограничение.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the constraint belongs.">Объект <see cref="T:System.Data.DataSet" />, которому принадлежит данное ограничение.</returns>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary vsli:raw="The name of a constraint in the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt;.">Имя ограничения в <see cref="T:System.Data.ConstraintCollection" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; name is a null value or empty string.">Именем <see cref="T:System.Data.Constraint" /> является значение NULL или пустая строка.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; already contains a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the same name (The comparison is not case-sensitive.).">Коллекция <see cref="T:System.Data.ConstraintCollection" /> уже содержит <see cref="T:System.Data.Constraint" /> с тем же именем (сравнение выполняется без учета регистра.).</exception>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">Имя <see cref="T:System.Data.Constraint" />.</returns>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary vsli:raw="Gets the collection of user-defined constraint properties.">Возвращает коллекцию определенных пользователем свойств ограничений.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">Коллекция <see cref="T:System.Data.PropertyCollection" /> пользовательских сведений.</returns>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">Возвращает объект <see cref="T:System.Data.DataTable" />, к которому применяется ограничение.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">Объект <see cref="T:System.Data.DataTable" />, к которому применяется ограничение.</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary vsli:raw="Represents a collection of constraints for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Представляет коллекцию ограничений для <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary vsli:raw="Occurs whenever the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects being added or removed.">Происходит всякий раз после изменения коллекции <see cref="T:System.Data.ConstraintCollection" /> в результате добавления или удаления объектов <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object to the collection.">Добавляет указанный объект <see cref="T:System.Data.Constraint" /> в коллекцию.</summary>
      <param name="constraint" vsli:raw="The &lt;see langword=&quot;Constraint&quot; /&gt; to add.">Добавляемый объект <see langword="Constraint" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is null.">Аргумент <paramref name="constraint" /> имеет значение NULL.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection, or belongs to another collection.">Ограничение уже относится к этой или другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the same name. (The comparison is not case-sensitive.)">Коллекция уже содержит ограничение с таким именем. (Сравнение выполняется без учета регистра.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, and value that indicates whether the column is a primary key, and adds it to the collection.">Создает новое ограничение <see cref="T:System.Data.UniqueConstraint" /> с указанным именем, объект <see cref="T:System.Data.DataColumn" />, и значение, показывающее, является ли столбец первичным ключом, и добавляет его в коллекцию.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">Имя <see langword="UniqueConstraint" />.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to which the constraint applies.">Объект <see cref="T:System.Data.DataColumn" />, к которому применяется ограничение.</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">Указывает, должен ли столбец являться первичным ключом. Если значение <see langword="true" />, столбец будет являться столбцом первичного ключа.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">Ограничение уже принадлежит к этой коллекции.  
  
 -Или-  
  
 Ограничение уже принадлежит к другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">Коллекция уже содержит ограничение с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">Новый объект <see langword="UniqueConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; with the specified name, parent column, and child column, and adds the constraint to the collection.">Создает новое ограничение <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным именем, родительский и дочерний столбцы и добавляет ограничение к коллекции.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">Имя <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumn" vsli:raw="The primary key, or parent, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Первичный ключ или родительский объект <see cref="T:System.Data.DataColumn" />.</param>
      <param name="foreignKeyColumn" vsli:raw="The foreign key, or child, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Внешний ключ или дочерний объект <see cref="T:System.Data.DataColumn" />.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">Новый объект <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether the column is a primary key, and adds it to the collection.">Создает новое ограничение <see cref="T:System.Data.UniqueConstraint" /> с указанным именем, массивом объектов <see cref="T:System.Data.DataColumn" /> и значением, показывающим, является ли столбец первичным ключом, и добавляет его в коллекцию.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt;.">Имя <see cref="T:System.Data.UniqueConstraint" />.</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to which the constraint applies.">Массив объектов <see cref="T:System.Data.DataColumn" />, для которого применяются ограничения.</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">Указывает, должен ли столбец являться первичным ключом. Если значение <see langword="true" />, столбец будет являться столбцом первичного ключа.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">Ограничение уже принадлежит к этой коллекции.  
  
 -Или-  
  
 Ограничение уже принадлежит к другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">Коллекция уже содержит ограничение с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">Новый объект <see langword="UniqueConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;, with the specified arrays of parent columns and child columns, and adds the constraint to the collection.">Создает новое ограничение <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным массивом родительских и дочерних столбцов и добавляет это ограничение к коллекции.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">Имя <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the primary key, or parent, columns.">Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся столбцом первичного ключа или родительским столбцом.</param>
      <param name="foreignKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the foreign key, or child, columns.">Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся столбцом внешнего ключа или дочерним столбцом.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">Новый объект <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; array to the end of the collection.">Копирует элементы указанного массива <see cref="T:System.Data.ConstraintCollection" /> в конец коллекции.</summary>
      <param name="constraints" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; objects to add to the collection.">Массив объектов <see cref="T:System.Data.ConstraintCollection" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed.">Указывает, может ли быть удалено ограничение <see cref="T:System.Data.Constraint" />.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to be tested for removal from the collection.">Ограничение <see cref="T:System.Data.Constraint" />, которое требуется проверить на возможность удаления из коллекции.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed from collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если ограничение <see cref="T:System.Data.Constraint" /> может быть удалено из коллекции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary vsli:raw="Clears the collection of any &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects.">Очищает коллекцию от объектов <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name exists in the collection.">Указывает, существует ли в коллекции объект <see cref="T:System.Data.Constraint" />, указанный по имени.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint.">Свойство <see cref="P:System.Data.Constraint.ConstraintName" /> ограничения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified constraint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если коллекция содержит указанное ограничение; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Копирует объекты коллекции в одномерный экземпляр класса <see cref="T:System.Array" />, начиная с указанного индекса.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">Одномерный объект <see cref="T:System.Array" />, являющийся целевым для значений, скопированных из коллекции.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">Индекс в массиве, с которого требуется начать вставку.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">Получает индекс заданного ограничения <see cref="T:System.Data.Constraint" />.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to search for.">Объект <see cref="T:System.Data.Constraint" />, который требуется найти.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">Индекс (с нуля) ограничения <see cref="T:System.Data.Constraint" />, если оно существует в коллекции; в противном случае -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; specified by name.">Получает индекс ограничения <see cref="T:System.Data.Constraint" />, заданного по имени.</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">Имя <see cref="T:System.Data.Constraint" />.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">Индекс ограничения <see cref="T:System.Data.Constraint" />, если оно существует в коллекции; в противном случае -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection.">Удаляет указанный объект <see cref="T:System.Data.Constraint" /> из коллекции.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">Объект <see cref="T:System.Data.Constraint" /> для удаления.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Аргумент <paramref name="constraint" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint does not belong to the collection.">Ограничение не принадлежит коллекции.</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name from the collection.">Удаляет из коллекции ограничение <see cref="T:System.Data.Constraint" />, указанное по имени.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">Имя удаляемого объекта <see cref="T:System.Data.Constraint" />.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object at the specified index from the collection.">Удаляет объект <see cref="T:System.Data.Constraint" /> с указанным индексом из коллекции.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">Индекс удаляемого объекта <see cref="T:System.Data.Constraint" />.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a constraint at this index.">Коллекция не имеет ограничения по этому индексу.</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection at the specified index.">Получает объект <see cref="T:System.Data.Constraint" /> из коллекции по указанному индексу.</summary>
      <param name="index" vsli:raw="The index of the constraint to return.">Индекс ограничения, которое требуется вернуть.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">Значение индекса больше числа элементов в коллекции.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; at the specified index.">Объект <see cref="T:System.Data.Constraint" /> по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection with the specified name.">Получает объект <see cref="T:System.Data.Constraint" /> из коллекции с указанным именем.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint to return.">Свойство <see cref="P:System.Data.Constraint.ConstraintName" /> ограничения, которое требуется возвратить.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the specified name; otherwise a null value if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; does not exist.">Ограничение <see cref="T:System.Data.Constraint" /> с указанным именем; в противном случае — значение null, если ограничение <see cref="T:System.Data.Constraint" /> не существует.</returns>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when attempting an action that violates a constraint.">Представляет исключение, возникающее при попытке выполнения действия, нарушающего ограничение.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class. This is the parameterless constructor.">Инициализирует новый экземпляр класса <see cref="T:System.Data.ConstraintException" />. Это конструктор без параметров.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified serialization and stream context.">Инициализирует новый экземпляр класса <see cref="T:System.Data.ConstraintException" />, используя указанную сериализацию и контекст потока.</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.ConstraintException" /> с заданной строкой.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified string and inner exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.ConstraintException" /> с использованием заданной строки и внутреннего исключения.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
      <param name="innerException" vsli:raw="Gets the &lt;see langword=&quot;Exception&quot; /&gt; instance that caused the current exception.">Возвращает экземпляр класса <see langword="Exception" />, который вызвал текущее исключение.</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary vsli:raw="Represents the schema of a column in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Представляет схему столбца в <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class as type string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> в качестве строкового типа.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class, as type string, using the specified column name.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> как строку типа с использованием указанного имени столбца.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Строка, представляющая имя создаваемого столбца. Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified column name and data type.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> с использованием указанного имени столбца и типа данных.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Строка, представляющая имя создаваемого столбца. Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Поддерживаемый <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">
        <paramref name="dataType" /> не был указан.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, and expression.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> с использованием указанного имени, типа данных и выражения.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Строка, представляющая имя создаваемого столбца. Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Поддерживаемый <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">Выражение, используемое для создания этого столбца. Дополнительные сведения см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">
        <paramref name="dataType" /> не был указан.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, expression, and value that determines whether the column is an attribute.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> с использованием указанного имени, типа данных, выражения и значения, определяющего, является ли столбец атрибутом.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Строка, представляющая имя создаваемого столбца. Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Поддерживаемый <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">Выражение, используемое для создания этого столбца. Дополнительные сведения см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.MappingType" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">
        <paramref name="dataType" /> не был указан.</exception>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">Ссылка на параметр.</param>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="name" vsli:raw="Parameter reference.">Ссылка на параметр.</param>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary vsli:raw="Changes the ordinal or position of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to the specified ordinal or position.">Изменяет порядковый номер или положение <see cref="T:System.Data.DataColumn" /> на указанный порядковый номер или положение.</summary>
      <param name="ordinal" vsli:raw="The specified ordinal.">Указанный порядковый номер.</param>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; of the column, if one exists.">Возвращает свойство <see cref="P:System.Data.DataColumn.Expression" /> столбца, если оно существует.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; value, if the property is set; otherwise, the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; property.">Значение <see cref="P:System.Data.DataColumn.Expression" />, если свойство задано; в противном случае — свойство <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary vsli:raw="Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.">Возвращает или задает значение, указывающее на допустимость нулевых значений в этом столбце для строк, принадлежащих таблице.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> значение, если разрешены значения NULL; в противном случае — <see langword="false" /> . Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary vsli:raw="Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.">Возвращает или задает значение, показывающее, увеличивать ли автоматически значение столбца для новых строк, добавляемых в таблицу.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a computed column.">Столбец является вычисляемым.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the column increments automatically; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если значение столбца увеличивается автоматически; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary vsli:raw="Gets or sets the starting value for a column that has its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;. The default is 0.">Возвращает или задает начальное значение для столбца, свойству которого <see cref="P:System.Data.DataColumn.AutoIncrement" /> задано значение <see langword="true" />. Значение по умолчанию — 0.</summary>
      <returns vsli:raw="The starting value for the &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; feature.">Начальное значение для функции <see cref="P:System.Data.DataColumn.AutoIncrement" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary vsli:raw="Gets or sets the increment used by a column with its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;.">Возвращает или задает шаг приращения для столбца, свойству <see cref="P:System.Data.DataColumn.AutoIncrement" /> которого задано значение <see langword="true" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is zero.">Заданное значение равно нулю.</exception>
      <returns vsli:raw="The number by which the value of the column is automatically incremented. The default is 1.">Число, на которое автоматически увеличивается значение столбца. Значение по умолчанию — 1.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary vsli:raw="Gets or sets the caption for the column.">Возвращает или задает заголовок для столбца.</summary>
      <returns vsli:raw="The caption of the column. If not set, returns the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; value.">Заголовок столбца. Если не установлено, возвращает значение <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; of the column.">Возвращает или задает тип <see cref="T:System.Data.MappingType" /> столбца.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.MappingType" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary vsli:raw="Gets or sets the name of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Возвращает или задает имя столбца в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt; or an empty string and the column belongs to a collection.">Значение свойства равно <see langword="null" /> или пустой строке, и столбец принадлежит коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A column with the same name already exists in the collection. The name comparison is not case sensitive.">Столбец с таким именем уже существует в коллекции. Сравнение имени выполняется без учета регистра.</exception>
      <returns vsli:raw="The name of the column.">Имя столбца.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary vsli:raw="Gets or sets the type of data stored in the column.">Возвращает или задает тип данных, хранимых в столбце.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already has data stored.">В столбце уже содержатся данные.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the column data type.">Объект <see cref="T:System.Type" />, представляющий тип данных столбца.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;DateTimeMode&quot; /&gt; for the column.">Возвращает или задает <see langword="DateTimeMode" /> для столбца.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSetDateTime&quot; /&gt; for the specified column.">
        <see cref="T:System.Data.DataSetDateTime" /> для указанного столбца.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the column when you are creating new rows.">Возвращает или задает значение по умолчанию для столбца при создании новых строк.</summary>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are adding a row, the default value is not an instance of the column's data type.">При добавлении строки значение по умолчанию не является экземпляром типа данных столбца.</exception>
      <returns vsli:raw="A value appropriate to the column's &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Значение, соответствующее <see cref="P:System.Data.DataColumn.DataType" /> столбца.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary vsli:raw="Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.">Возвращает или задает выражение, используемое для фильтрации строк, расчета значений в столбце либо для создания составного столбца.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; or &lt;see cref=&quot;P:System.Data.DataColumn.Unique&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Свойству <see cref="P:System.Data.DataColumn.AutoIncrement" /> или <see cref="P:System.Data.DataColumn.Unique" /> задано значение <see langword="true" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.">При использовании функции CONVERT выражение оценивает строку, но строка не содержит представление, которое может быть преобразовано в параметр типа.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are using the CONVERT function, the requested cast is not possible. See the Conversion function in the following section for detailed information about possible casts.">При использовании функции CONVERT запрошенное приведение типов невозможно. Подробные сведения о возможном приведении см. в описании функции преобразования, приведенном в следующем разделе.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="When you use the SUBSTRING function, the start argument is out of range.  &#xA;  &#xA; -Or-  &#xA;  &#xA; When you use the SUBSTRING function, the length argument is out of range.">При использовании функции SUBSTRING аргумент начала находится вне диапазона.  
  
 -Или-  
  
 При использовании функции SUBSTRING аргумент длины находится вне диапазона.</exception>
      <exception cref="T:System.Exception" vsli:raw="When you use the LEN function or the TRIM function, the expression does not evaluate to a string. This includes expressions that evaluate to &lt;see cref=&quot;T:System.Char&quot; /&gt;.">При использовании функции LEN или TRIM выражение не выполняет вычисление строки. Это включает выражения, которое выполняет вычисление <see cref="T:System.Char" />.</exception>
      <returns vsli:raw="An expression to calculate the value of a column, or create an aggregate column. The return type of an expression is determined by the &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the column.">Выражение, используемое для расчета значений столбца либо создания составного столбца. Возвращаемый тип выражения определяется с помощью <see cref="P:System.Data.DataColumn.DataType" /> столбца.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary vsli:raw="Gets the collection of custom user information associated with a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Возвращает коллекцию пользовательских сведений, связанных с <see cref="T:System.Data.DataColumn" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">Коллекция <see cref="T:System.Data.PropertyCollection" /> пользовательских сведений.</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary vsli:raw="Gets or sets the maximum length of a text column.">Возвращает или задает максимальную длину текстового столбца.</summary>
      <returns vsli:raw="The maximum length of the column in characters. If the column has no maximum length, the value is -1 (default).">Максимальная длина столбца в символах. Если длина столбца не максимальная, значение равно-1 (по умолчанию).</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Возвращает или задает пространство имен <see cref="T:System.Data.DataColumn" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">Пространство имен уже содержит данные.</exception>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Пространство имен <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary vsli:raw="Gets the (zero-based) position of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; collection.">Возвращает отсчитываемую от нуля позицию столбца в коллекции <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns vsli:raw="The position of the column. Gets -1 if the column is not a member of a collection.">Положение столбца. Получает значение -1, если столбец не является членом коллекции.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Возвращает или задает префикс XML, который является псевдонимом пространства имен класса <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace.">Префикс XML для пространства имен <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary vsli:raw="Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.">Возвращает или задает значение, указывающее на допустимость изменения столбца после добавления строки в таблицу.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;false&quot; /&gt; on a computed column.">Свойству задано значение <see langword="false" /> в вычисляемом столбце.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column is read only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если столбец предназначен только для чтения; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the column belongs to.">Возвращает <see cref="T:System.Data.DataTable" />, которому принадлежит столбец.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; belongs to.">
        <see cref="T:System.Data.DataTable" />, к которой принадлежит <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary vsli:raw="Gets or sets a value that indicates whether the values in each row of the column must be unique.">Возвращает или задает значение, указывающее, должны ли значения в каждой строке столбца быть уникальными.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a calculated column.">Столбец является вычисляемым.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be unique; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если значение должно быть уникальным; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Предоставляет данные для события <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumnChangeEventArgs" />.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with the changing value.">Объект <see cref="T:System.Data.DataRow" /> столбца с изменяющимся значением.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with the changing value.">Объект <see cref="T:System.Data.DataColumn" /> с изменяющимся значением.</param>
      <param name="value" vsli:raw="The new value.">Новое значение.</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">Получает объект <see cref="T:System.Data.DataColumn" /> с изменяющимся значением.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">Объект <see cref="T:System.Data.DataColumn" /> с изменяющимся значением.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary vsli:raw="Gets or sets the proposed new value for the column.">Возвращает или задает предложенное новое значение для столбца.</summary>
      <returns vsli:raw="The proposed value, of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Предложенное значение типа <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">Получает объект <see cref="T:System.Data.DataRow" /> столбца с изменяющимся значением.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">Объект <see cref="T:System.Data.DataRow" /> столбца с изменяющимся значением.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Представляет метод обработки события <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.DataColumnChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Представляет коллекцию объектов <see cref="T:System.Data.DataColumn" /> для <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the columns collection changes, either by adding or removing a column.">Происходит, когда изменяется коллекция столбцов с помощью добавления или удаления столбца.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Создает и добавляет объект <see cref="T:System.Data.DataColumn" /> в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Вновь созданный <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary vsli:raw="Creates and adds the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Создает и добавляет указанный объект <see cref="T:System.Data.DataColumn" /> в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to add.">Добавляемый объект <see cref="T:System.Data.DataColumn" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="column" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already belongs to this collection, or to another collection.">Столбец уже принадлежит данной или другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">Коллекция уже содержит столбец с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">Недопустимое выражение. Дополнительные сведения о создании выражений см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Создает и добавляет объект <see cref="T:System.Data.DataColumn" /> с указанным именем к <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">Коллекция уже содержит столбец с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Вновь созданный <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name and type to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Создает и добавляет объект <see cref="T:System.Data.DataColumn" /> с указанным именем и типом в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; to use when you create the column.">Свойство <see cref="P:System.Data.DataColumn.ColumnName" />, используемое при создании столбца.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">Свойство <see cref="P:System.Data.DataColumn.DataType" /> нового столбца.</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">Коллекция уже содержит столбец с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">Недопустимое выражение. Дополнительные сведения о создании выражений см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Вновь созданный <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name, type, and expression to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Создает и добавляет объект <see cref="T:System.Data.DataColumn" /> с указанным именем, типом и выражением в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName" vsli:raw="The name to use when you create the column.">Имя, используемое при создании столбца.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">Свойство <see cref="P:System.Data.DataColumn.DataType" /> нового столбца.</param>
      <param name="expression" vsli:raw="The expression to assign to the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">Выражение, назначаемое свойству <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">Коллекция уже содержит столбец с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">Недопустимое выражение. Дополнительные сведения о создании выражений см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Вновь созданный <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; array to the end of the collection.">Копирует элементы указанного массива <see cref="T:System.Data.DataColumn" /> в конец коллекции.</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to add to the collection.">Массив объектов <see cref="T:System.Data.DataColumn" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary vsli:raw="Checks whether a specific column can be removed from the collection.">Проверяет, может ли быть удален из коллекции указанный столбец.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection.">Объект <see cref="T:System.Data.DataColumn" /> в коллекции.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is null.">Параметр <paramref name="column" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.&#xA;        &#xA;-or-&#xA;&#xA;The column is part of a relationship.&#xA;&#xA;-or-&#xA;&#xA;Another column's expression depends on this column.">Столбец не принадлежит этой коллекции.
        
-или-

Столбец является частью отношения.

-или-

Выражение другого столбца зависит от этого столбца.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column can be removed. &lt;see langword=&quot;false&quot; /&gt; if,  &#xA;  &#xA;-   The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-   The column does not belong to this collection.  &#xA;  &#xA;-   The column is part of a relationship.  &#xA;  &#xA;-   Another column's expression depends on this column.">
        <see langword="true" /> если столбец можно удалить <see langword="false" /> если, 
– Параметр <paramref name="column" /> имеет значение <see langword="null" />.  
  
– Столбец не принадлежит этой коллекции.  
  
– Столбец является частью отношения.  
  
– Выражение другого столбца зависит от этого столбца.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary vsli:raw="Clears the collection of any columns.">Удаляет любой столбец из коллекции.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary vsli:raw="Checks whether the collection contains a column with the specified name.">Определяет, содержит ли коллекция столбец с указанным именем.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to look for.">Свойство <see cref="P:System.Data.DataColumn.ColumnName" /> столбца, поиск которого требуется выполнить.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a column exists with this name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если столбец с таким именем существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary vsli:raw="Copies the entire collection into an existing array, starting at a specified index within the array.">Копирует коллекцию целиком в существующий массив, начиная с указанного индекса в этом массиве.</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to copy the collection into.">Массив объектов <see cref="T:System.Data.DataColumn" />, копируемых в коллекцию.</param>
      <param name="index" vsli:raw="The index to start from.">Начальный индекс.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary vsli:raw="Gets the index of a column specified by name.">Получает индекс столбца, указанного по имени.</summary>
      <param name="column" vsli:raw="The name of the column to return.">Имя возвращаемого столбца.</param>
      <returns vsli:raw="The index of the column specified by &lt;paramref name=&quot;column&quot; /&gt; if it is found; otherwise, -1.">Индекс столбца, указанного <paramref name="column" />, если он обнаружен; в противном случае — значение -1.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the column with the specific name (the name is not case sensitive).">Получает индекс столбца с указанным именем (имя без учета регистра).</summary>
      <param name="columnName" vsli:raw="The name of the column to find.">Имя столбца, который нужно найти.</param>
      <returns vsli:raw="The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.">Индекс (с нуля) столбца с заданным именем столбца, или значение -1, если столбец отсутствует в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object from the collection.">Удаляет указанный объект <see cref="T:System.Data.DataColumn" /> из коллекции.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to remove.">Объект <see cref="T:System.Data.DataColumn" /> для удаления.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="column" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The column is part of a relationship.  &#xA;  &#xA; -Or-  &#xA;  &#xA; Another column's expression depends on this column.">Столбец не принадлежит этой коллекции.  
  
 -Или-  
  
 Столбец является частью отношения.  
  
 -Или-  
  
 Выражение другого столбца зависит от этого столбца.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name from the collection.">Удаляет объект <see cref="T:System.Data.DataColumn" /> с указанным именем из коллекции.</summary>
      <param name="name" vsli:raw="The name of the column to remove.">Имя удаляемого столбца.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column with the specified name.">Коллекция не содержит столбец с указанным именем.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the column at the specified index from the collection.">Удаляет столбец по указанному индексу из коллекции.</summary>
      <param name="index" vsli:raw="The index of the column to remove.">Индекс удаляемого столбца.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column at the specified index.">Коллекция не содержит столбец по указанному индексу.</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection at the specified index.">Получает объект <see cref="T:System.Data.DataColumn" /> из коллекции по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the column to return.">Индекс (с нуля) возвращаемого столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">Значение индекса больше числа элементов в коллекции.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; at the specified index.">Объект <see cref="T:System.Data.DataColumn" /> по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection with the specified name.">Получает объект <see cref="T:System.Data.DataColumn" /> из коллекции с указанным именем.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to return.">Свойство <see cref="P:System.Data.DataColumn.ColumnName" /> возвращаемого столбца.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection with the specified &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt;; otherwise a null value if the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; does not exist.">Объект <see cref="T:System.Data.DataColumn" /> в коллекции с указанным значением свойства <see cref="P:System.Data.DataColumn.ColumnName" />; в противном случае — значение null, если <see cref="T:System.Data.DataColumn" /> не существует.</returns>
    </member>
    <member name="T:System.Data.DataException">
      <summary vsli:raw="Represents the exception that is thrown when errors are generated using ADO.NET components.">Представляет исключение, которое выдается при создании ошибок с помощью компонента ADO.NET.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class. This is the parameterless constructor.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataException" />. Это конструктор без параметров.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified serialization information and context.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataException" /> с указанными сведениями о сериализации и контекстом.</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataException" /> с заданной строкой.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string and inner exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataException" />, используя заданную строку и внутреннее исключение.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.DataReaderExtensions">
      <summary vsli:raw="Provides extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Предоставляет методы расширения для <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">Возвращает значение указанного столбца в виде логического значения.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">Возвращает значение указанного столбца в виде байта.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">Считывает указанное число байтов из указанного столбца, начиная с указанного индекса, и записывает их в буфер, начиная с указанной позиции в буфере.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Индекс в строке, с которого необходимо начать считывание.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Буфер, в который копируются данные.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Индекс в буфере, куда будут копироваться данные.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">Максимальное число считываемых символов.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The actual number of bytes read.">Число фактически считанных байтов.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single character.">Возвращает значение указанного столбца в виде одного символа.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">Считывает указанное число символов из указанного столбца, начиная с указанного индекса, и записывает их в буфер, начиная с указанной позиции.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Индекс в строке, с которого необходимо начать считывание.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Буфер, в который копируются данные.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Индекс в буфере, куда будут копироваться данные.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">Максимальное число считываемых символов.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <returns vsli:raw="The actual number of characters read.">Число фактически считанных символов.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">Возвращает вложенный объект чтения данных для запрошенного столбца.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <returns vsli:raw="A data reader.">Средство чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets name of the data type of the specified column.">Возвращает имя типа данных заданного столбца.</summary>
      <param name="reader" vsli:raw="The data reader to get the column type name from.">Модуль чтения данных, откуда берется имя типа столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <returns vsli:raw="The name of the data type.">Имя типа данных.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Decimal" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a double-precision floating point number.">Возвращает значение указанного столбца в виде числа с плавающей запятой двойной точности.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the data type of the specified column.">Возвращает тип данных заданного столбца.</summary>
      <param name="reader" vsli:raw="The data reader to get the field type from.">Модуль чтения данных, откуда берется тип поля.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The data type of the specified column.">Тип данных заданного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">Возвращает значение указанного столбца в виде запрошенного типа.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Тип возвращаемого значения.</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Соединение было удалено или закрыто во время получения данных.  

-или- 
Модуль чтения данных был закрыт во время получения данных.  
  
-или-

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение <see langword="false" />).  

-или-

Модуль чтения попытался считать ранее считанный столбец в последовательном режиме.  

-или-

Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">Значение, возвращенное базой данных, не соответствует типу <typeparamref name="T" /> или не может быть приведено к нему.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Асинхронно возвращает значение указанного столбца в виде запрошенного типа.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">Необязательный токен для отмены асинхронной операции.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Тип возвращаемого значения.</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">Соединение было удалено или закрыто во время получения данных.  
  
-или-

Модуль чтения данных был закрыт во время получения данных.  

-или-

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение <see langword="false" />).

-или-

Сделана попытка чтения ранее считанного столбца в последовательном режиме.  

-или-

Выполнялась асинхронная операция. Относится ко всем методам Get_*_ при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">Значение, возвращенное базой данных, не соответствует типу <typeparamref name="T" /> или не может быть приведено к нему.</exception>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Задача, <see cref="P:System.Threading.Tasks.Task`1.Result" /> которой содержит значение заданного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">Возвращает значение заданного столбца в виде числа с плавающей запятой одинарной точности.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a globally unique identifier (GUID).">Возвращает значение указанного столбца в виде глобально уникального идентификатора (GUID).</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">Получает значение заданного столбца в виде 16-битового целого числа со знаком.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">Возвращает тип заданного столбца, зависящий от поставщика.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <returns vsli:raw="A provider-specific .NET type.">Зависящий от поставщика тип .NET.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">Возвращает значение указанного столбца как экземпляр зависящего от поставщика типа.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">Возвращает поток для получения данных из указанного столбца.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Соединение было удалено или закрыто во время получения данных.  
  
-или-

Модуль чтения данных закрыт во время получения данных.  

-или-

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  

-или-

Модуль чтения данных попытался считать ранее считанный столбец в последовательном режиме.  

-или-

Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Тип указанного столбца не является двоичным типом, поддерживающим чтение с помощью <see cref="T:System.IO.Stream" />.</exception>
      <returns vsli:raw="A stream.">Поток.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">Возвращает значение указанного столбца как экземпляр <see cref="T:System.String" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Указанное приведение недопустимо.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">Получает модуль чтения текста для извлечения данных из столбца.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Соединение было удалено или закрыто во время получения данных.  
  
-или-

Модуль чтения данных закрыт во время получения данных.  

-или-

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  

-или-

Модуль чтения данных попытался считать ранее считанный столбец в последовательном режиме.  

-или-

Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Тип указанного столбца не является текстовым типом, поддерживающим чтение с помощью <see cref="T:System.IO.TextReader" />.</exception>
      <returns vsli:raw="A text reader.">Средство чтения текста.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Возвращает значение указанного столбца как экземпляр <see cref="T:System.Object" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a value that indicates whether the column contains nonexistent or missing values.">Возвращает значение, указывающее, содержатся ли в столбце несуществующие или отсутствующие значения.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если указанный столбец эквивалентен <see cref="T:System.DBNull" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Асинхронно получает значение, указывающее, содержит ли столбец несуществующие или пропущенные значения.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">Необязательный токен для отмены асинхронной операции.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">Соединение было удалено или закрыто во время получения данных.  
  
-или-

Модуль чтения данных закрыт во время получения данных.  

-или-

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  

-или-

Попытка чтения ранее считанного столбца в последовательном режиме.  

-или- 
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">Объект <see cref="T:System.Threading.Tasks.Task`1" />, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которого равно <see langword="true" />, если указанное значение столбца эквивалентно значению <see langword="DBNull" />, или <see langword="false" /> в противном случае.</returns>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary vsli:raw="Represents a parent/child relationship between two &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Представляет отношение "родительский-дочерний объект" между двумя объектами <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name, and parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelation" /> с использованием указанного имени <see cref="T:System.Data.DataRelation" /> и родительского и дочернего объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Имя <see cref="T:System.Data.DataRelation" />. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">Родительский объект <see cref="T:System.Data.DataColumn" /> в отношении.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">Дочерний объект <see cref="T:System.Data.DataColumn" /> в отношении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Один или оба объекта <see cref="T:System.Data.DataColumn" /> содержат <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Столбцы имеют разные типы данных 
-Или- 
Таблицы не принадлежат тому же <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and a value that indicates whether to create constraints.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelation" /> с использованием указанного имени, родительского и дочернего объектов <see cref="T:System.Data.DataColumn" /> и значения, указывающего, нужно ли создавать ограничения.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Имя отношения. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">Родительский объект <see cref="T:System.Data.DataColumn" /> в отношении.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">Дочерний объект <see cref="T:System.Data.DataColumn" /> в отношении.</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether constraints are created. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение, указывающее, создаются ли ограничения. Значение <see langword="true" />, если создаются ограничения. В противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Один или оба объекта <see cref="T:System.Data.DataColumn" /> содержат <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Столбцы имеют разные типы данных 
-Или- 
Таблицы не принадлежат тому же <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelation" /> с использованием указанного имени <see cref="T:System.Data.DataRelation" /> и соответствующих массивов родительских и дочерних объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Имя отношения. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Массив родительских объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Массив дочерних объектов <see cref="T:System.Data.DataColumn" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Один или оба объекта <see cref="T:System.Data.DataColumn" /> содержат <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or both of the arrays are not composed of distinct columns from the same table.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Объекты <see cref="T:System.Data.DataColumn" /> имеют разные типы данных. 
-Или- 
Один или оба массива не состоят из различных столбцов из той же таблицы.  
  
-Или- 
Таблицы не принадлежат тому же <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether to create constraints.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelation" /> с использованием указанного имени, родительского и дочернего объектов <see cref="T:System.Data.DataColumn" /> и значения, указывающего, нужно ли создавать ограничения.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Имя отношения. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Массив родительских объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Массив дочерних объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether to create constraints. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение, указывающее, нужно ли создавать ограничения. Значение <see langword="true" />, если создаются ограничения. В противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">Один или оба объекта <see cref="T:System.Data.DataColumn" /> содержат <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Столбцы имеют разные типы данных 
-Или- 
Таблицы не принадлежат тому же <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">Этот конструктор предназначен для поддержки режима разработки в среде Visual Studio.</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Имя <see cref="T:System.Data.DataRelation" />. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">Имя объекта <see cref="T:System.Data.DataTable" />, который является родительской таблицей в отношении.</param>
      <param name="parentTableNamespace" vsli:raw="The name of the parent table namespace.">Имя пространства имен родительской таблицы.</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">Имя объекта <see cref="T:System.Data.DataTable" />, который является дочерней таблицей в отношении.</param>
      <param name="childTableNamespace" vsli:raw="The name of the child table namespace.">Имя пространства имен дочерней таблицы.</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Массив имен объектов <see cref="T:System.Data.DataColumn" /> в родительском объекте <see cref="T:System.Data.DataTable" /> отношения.</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Массив имен объектов <see cref="T:System.Data.DataColumn" /> в дочернем объекте <see cref="T:System.Data.DataTable" /> отношения.</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">Значение, указывающее, являются ли отношения вложенными.</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">Этот конструктор предназначен для поддержки режима разработки в среде Visual Studio.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Имя отношения. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">Имя объекта <see cref="T:System.Data.DataTable" />, который является родительской таблицей в отношении.</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">Имя объекта <see cref="T:System.Data.DataTable" />, который является дочерней таблицей в отношении.</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Массив имен объектов <see cref="T:System.Data.DataColumn" /> в родительском объекте <see cref="T:System.Data.DataTable" /> отношения.</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Массив имен объектов <see cref="T:System.Data.DataColumn" /> в дочернем объекте <see cref="T:System.Data.DataTable" /> отношения.</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">Значение, указывающее, являются ли отношения вложенными.</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary vsli:raw="This method supports .NET infrastructure and is not intended to be used directly from your code.">Этот метод поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из программного кода.</summary>
      <exception cref="T:System.Data.DataException" vsli:raw="The parent and child tables belong to different &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; objects.  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or more pairs of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have mismatched data types.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects are identical.">Родительская и дочерняя таблицы принадлежат различным объектам <see cref="T:System.Data.DataSet" />.  
  
-Или- 
Одна или несколько пар родительских и дочерних объектов <see cref="T:System.Data.DataColumn" /> имеют несовпадающие типы данных.  
  
-Или- 
Родительский и дочерний объекты <see cref="T:System.Data.DataColumn" /> идентичны.</exception>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">Ссылка на параметр.</param>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="name" vsli:raw="Parameter reference.">Ссылка на параметр.</param>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt;, if one exists.">Возвращает <see cref="P:System.Data.DataRelation.RelationName" />, если он существует.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; property.">Значение свойства <see cref="P:System.Data.DataRelation.RelationName" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary vsli:raw="Gets the child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects of this relation.">Возвращает дочерние объекты <see cref="T:System.Data.DataColumn" /> этого отношения.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Массив объектов <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; for the relation.">Возвращает <see cref="T:System.Data.ForeignKeyConstraint" /> для отношения.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">Объект <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary vsli:raw="Gets the child table of this relation.">Возвращает дочернюю таблицу этого отношения.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">Объект <see cref="T:System.Data.DataTable" />, который является дочерней таблицей этого отношения.</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">Возвращает объект <see cref="T:System.Data.DataSet" />, которому принадлежит объект <see cref="T:System.Data.DataRelation" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">Объект <see cref="T:System.Data.DataSet" />, к которому принадлежит объект <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary vsli:raw="Gets the collection that stores customized properties.">Возвращает коллекцию, в которой хранятся настраиваемые свойства.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains customized properties.">Класс <see cref="T:System.Data.PropertyCollection" />, содержащий настраиваемые свойства.</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested.">Возвращает или задает значение, которое указывает, являются ли объекты <see cref="T:System.Data.DataRelation" /> вложенными.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объекты <see cref="T:System.Data.DataRelation" /> являются вложенными, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Возвращает массив объектов <see cref="T:System.Data.DataColumn" />, являющихся родительскими столбцами объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся родительскими столбцами объекта <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that guarantees that values in the parent column of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; are unique.">Возвращает <see cref="T:System.Data.UniqueConstraint" />, которое обеспечивает уникальность значений в родительском столбце объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that makes sure that values in a parent column are unique.">
        <see cref="T:System.Data.UniqueConstraint" />, которое обеспечивает уникальность значений, содержащихся в родительском столбце.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Возвращает родительский объект <see cref="T:System.Data.DataTable" /> этого объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of this relation.">Объект <see cref="T:System.Data.DataTable" />, который является родительской таблицей этого отношения.</returns>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary vsli:raw="Gets or sets the name used to retrieve a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Возвращает или задает имя, используемое для извлечения <see cref="T:System.Data.DataRelation" /> из <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) was passed into a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Значение <see langword="null" /> или пустая строка ("") были переданы в объект <see cref="T:System.Data.DataColumn" />, который является отношением <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs to a collection that already contains a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the same name.">Объект <see cref="T:System.Data.DataRelation" /> принадлежит коллекции, которая уже содержит объект <see cref="T:System.Data.DataRelation" /> с тем же именем.</exception>
      <returns vsli:raw="The name of the a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Имя <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary vsli:raw="Represents the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Представляет коллекцию объектов <see cref="T:System.Data.DataRelation" /> для <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the collection has changed.">Происходит при изменении коллекции.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelationCollection" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with a specified parent and child column, and adds it to the collection.">Создает <see cref="T:System.Data.DataRelation" /> с указанными родительским и дочерним столбцами и добавляет их к коллекции.</summary>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">Родительский столбец отношения.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">Дочерний столбец отношения.</param>
      <returns vsli:raw="The created relation.">Созданное соотношение.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified parent and child columns, and adds it to the collection.">Создает <see cref="T:System.Data.DataRelation" /> с указанными родительским и дочерним столбцами и добавляет их к коллекции.</summary>
      <param name="parentColumns" vsli:raw="The parent columns of the relation.">Родительские столбцы отношения.</param>
      <param name="childColumns" vsli:raw="The child columns of the relation.">Дочерние столбцы отношения.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; argument is a null value.">Аргумент <paramref name="relation" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">Коллекция уже содержит отношение с тем же именем. (Сравнение выполняется без учета регистра).</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">Отношение перешло в недопустимое состояние со времени создания.</exception>
      <returns vsli:raw="The created relation.">Созданное соотношение.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Добавляет объект <see cref="T:System.Data.DataRelation" /> в коллекцию <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; to add to the collection.">Параметр <see langword="DataRelation" /> для добавления в коллекцию.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; parameter is a null value.">Параметр <paramref name="relation" /> имеет нулевое значение.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the specified name. (The comparison is not case sensitive.)">Коллекция уже содержит отношение с указанным именем. (Сравнение выполняется без учета регистра).</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">Отношение перешло в недопустимое состояние со времени создания.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, and parent and child columns, and adds it to the collection.">Создает отношение <see cref="T:System.Data.DataRelation" /> с указанным именем и родительским и дочерним столбцами и добавляет их к коллекции.</summary>
      <param name="name" vsli:raw="The name of the relation.">Имя отношения.</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">Родительский столбец отношения.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">Дочерний столбец отношения.</param>
      <returns vsli:raw="The created relation.">Созданное соотношение.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, parent and child columns, with optional constraints according to the value of the &lt;paramref name=&quot;createConstraints&quot; /&gt; parameter, and adds it to the collection.">Создает отношение <see cref="T:System.Data.DataRelation" /> с указанным именем, родительскими и дочерними столбцами, с необязательными ограничениями в соответствии со значением параметра <paramref name="createConstraints" />, затем добавляет это отношение в коллекцию.</summary>
      <param name="name" vsli:raw="The name of the relation.">Имя отношения.</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">Родительский столбец отношения.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">Дочерний столбец отношения.</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create constraints; otherwise &lt;see langword=&quot;false&quot; /&gt;. (The default is &lt;see langword=&quot;true&quot; /&gt;).">
        <see langword="true" /> для создания ограничений; в противном случае — <see langword="false" />. (Значением по умолчанию является <see langword="true" />).</param>
      <returns vsli:raw="The created relation.">Созданное соотношение.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name and arrays of parent and child columns, and adds it to the collection.">Создает <see cref="T:System.Data.DataRelation" /> с указанным именем и массивами родительских и дочерних столбцов и добавляет их к коллекции.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">Имя создаваемого элемента <see langword="DataRelation" />.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Массив родительских объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">Массив дочерних объектов <see langword="DataColumn" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">Имя отношения имеет нулевое значение.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">Коллекция уже содержит отношение с тем же именем. (Сравнение выполняется без учета регистра).</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">Отношение перешло в недопустимое состояние со времени создания.</exception>
      <returns vsli:raw="The created &lt;see langword=&quot;DataRelation&quot; /&gt;.">Созданный <see langword="DataRelation" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.">Создает <see cref="T:System.Data.DataRelation" /> с указанным именем, массивами родительских и дочерних столбцов и значение, указывающее, создавать ли ограничения, и добавляет их к коллекции.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">Имя создаваемого элемента <see langword="DataRelation" />.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Массив родительских объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">Массив дочерних объектов <see langword="DataColumn" />.</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a constraint; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для создания ограничения; в противном случае — <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">Имя отношения имеет нулевое значение.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">Коллекция уже содержит отношение с тем же именем. (Сравнение выполняется без учета регистра).</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">Отношение перешло в недопустимое состояние со времени создания.</exception>
      <returns vsli:raw="The created relation.">Созданное соотношение.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs verification on the table.">Выполняет проверку таблицы.</summary>
      <param name="relation" vsli:raw="The relation to check.">Отношение для проверки.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is null.">Значением отношения является null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">Коллекция уже содержит отношение с тем же именем. (Сравнение выполняется без учета регистра).</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; array to the end of the collection.">Копирует элементы указанного массива <see cref="T:System.Data.DataRelation" /> в конец коллекции.</summary>
      <param name="relations" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to add to the collection.">Массив объектов <see cref="T:System.Data.DataRelation" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed from the collection.">Проверяет, может ли быть удалено из коллекции указанное <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation" vsli:raw="The relation to perform the check against.">Отношение для выполнения проверки.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <see cref="T:System.Data.DataRelation" /> может быть удалено; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary vsli:raw="Clears the collection of any relations.">Удаляет отношения из коллекции.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary vsli:raw="Verifies whether a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specific name (case insensitive) exists in the collection.">Проверяет, существует ли в коллекции <see cref="T:System.Data.DataRelation" /> с указанным именем (без учета регистра).</summary>
      <param name="name" vsli:raw="The name of the relation to find.">Имя отношения для поиска.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if a relation with the specified name exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если отношение с указанным именем существует; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary vsli:raw="Copies the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects starting at the specified index.">Копирует коллекцию объектов <see cref="T:System.Data.DataRelation" />, начиная с указанного индекса.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to copy the collection to.">Массив объектов <see cref="T:System.Data.DataRelation" />, в который следует скопировать коллекцию.</param>
      <param name="index" vsli:raw="The index to start from.">Начальный индекс.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary vsli:raw="This method supports the .NET infrastructure and is not intended to be used directly from your code.">Этот метод поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из программного кода.</summary>
      <returns vsli:raw="The referenced DataSet.">Набор данных DataSet, на который указывает ссылка.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Возвращает индекс указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation" vsli:raw="The relation to search for.">Отношение, которое нужно найти.</param>
      <returns vsli:raw="The 0-based index of the relation, or -1 if the relation is not found in the collection.">Начинающийся с нуля индекс отношения или значение -1, если отношение не найдено в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; specified by name.">Получает индекс ограничения <see cref="T:System.Data.DataRelation" />, заданного по имени.</summary>
      <param name="relationName" vsli:raw="The name of the relation to find.">Имя отношения для поиска.</param>
      <returns vsli:raw="The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.">Индекс (индексация ведется от нуля) отношения с заданным именем или -1, если отношение не существует в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">Вызывает событие <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">Вызывает событие <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary vsli:raw="Removes the specified relation from the collection.">Удаляет указанное отношение из коллекции.</summary>
      <param name="relation" vsli:raw="The relation to remove.">Отношение для удаления.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is a null value.">Имя отношения имеет нулевое значение.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the collection.">Отношение не принадлежит коллекции.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary vsli:raw="Removes the relation with the specified name from the collection.">Отношение с указанным именем удаляется из коллекции.</summary>
      <param name="name" vsli:raw="The name of the relation to remove.">Имя столбца для удаления.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a relation with the specified name.">В коллекции нет отношения с указанным именем.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the relation at the specified index from the collection.">Удаляет отношение с указанным индексом из коллекции.</summary>
      <param name="index" vsli:raw="The index of the relation to remove.">Индекс столбца для удаления.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a relation at the specified index.">Коллекция не содержит отношение с указанным индексом.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs a verification on the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Выполняет проверку указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; object to verify.">Объект <see langword="DataRelation" /> для проверки.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The collection does not have a relation at the specified index.">Коллекция не содержит отношение с указанным индексом.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified relation does not belong to this collection, or it belongs to another collection.">Указанное отношение не принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object at the specified index.">Возвращает объект <see cref="T:System.Data.DataRelation" /> по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index to find.">Индекс для поиска (индексация ведется от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">Значение индекса больше числа элементов в коллекции.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">Отношение <see cref="T:System.Data.DataRelation" /> или значение null, если указанное отношение <see cref="T:System.Data.DataRelation" /> не существует.</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object specified by name.">Получает объект <see cref="T:System.Data.DataRelation" />, указанный именем.</summary>
      <param name="name" vsli:raw="The name of the relation to find.">Имя отношения для поиска.</param>
      <returns vsli:raw="The named &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">Именованное отношение <see cref="T:System.Data.DataRelation" /> или значение null, если указанное отношение <see cref="T:System.Data.DataRelation" /> не существует.</returns>
    </member>
    <member name="T:System.Data.DataRow">
      <summary vsli:raw="Represents a row of data in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Представляет строку данных в <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary vsli:raw="Initializes a new instance of the DataRow class using the specified builder. Only for internal usage.">Инициализирует новый экземпляр DataRow. Создает строку из построителя. Только для внутреннего использования.</summary>
      <param name="builder" vsli:raw="The builder that contains the table and record for the new row.">построитель</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this row since the last time &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was called.">Фиксирует все изменения, внесенные в эту строку со времени последнего вызова метода <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Строка не принадлежит таблице.</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary vsli:raw="Starts an edit operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Начинает операцию изменения объекта <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Метод был вызван внутри события <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The method was called upon a deleted row.">Метод был вызван в удаленную строку.</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary vsli:raw="Cancels the current edit on the row.">Отменяет текущее изменение строки.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Метод был вызван внутри события <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary vsli:raw="Clears the errors for the row. This includes the &lt;see cref=&quot;P:System.Data.DataRow.RowError&quot; /&gt; and errors set with &lt;see cref=&quot;M:System.Data.DataRow.SetColumnError(System.Int32,System.String)&quot; /&gt;.">Очищает ошибки для строки. Это относится к свойству <see cref="P:System.Data.DataRow.RowError" /> и ошибкам, установленным с помощью метода <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Удаляет объект <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has already been deleted.">Объект <see cref="T:System.Data.DataRow" /> уже был удален.</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary vsli:raw="Ends the edit occurring on the row.">Прекращает изменение строки.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Метод был вызван внутри события <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The edit broke a constraint.">Изменение привело к нарушению ограничения.</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="The row belongs to the table and the edit tried to change the value of a read-only column.">Строка принадлежит таблице, а при изменении была предпринята попытка изменить значение столбца, доступного только для чтения.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The edit tried to put a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">При изменении была предпринята попытка поместить значение null в столбец, в котором свойство <see cref="P:System.Data.DataColumn.AllowDBNull" /> имеет значение false.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the child rows of this &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Получает дочерние строки этого объекта <see cref="T:System.Data.DataRow" /> с помощью указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is &lt;see langword=&quot;null&quot; /&gt;.">Значением отношения является <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">Строка не содержит эту версию данных.</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Получает дочерние строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанных объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Массив объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Получает дочерние строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Используемое свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Строка не принадлежит таблице.</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Получает дочерние строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Используемое свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary vsli:raw="Gets the error description of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Получает описание ошибки указанного объекта <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Объект <see cref="T:System.Data.DataColumn" />.</param>
      <returns vsli:raw="The text of the error description.">Текст описания ошибки.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary vsli:raw="Gets the error description for the column specified by index.">Получает описание ошибки для столбца, указанного по индексу.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Индекс столбца (с нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">Аргумент <paramref name="columnIndex" /> вне диапазона.</exception>
      <returns vsli:raw="The text of the error description.">Текст описания ошибки.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary vsli:raw="Gets the error description for a column, specified by name.">Получает описание ошибки для столбца, указанного по имени.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Имя столбца.</param>
      <returns vsli:raw="The text of the error description.">Текст описания ошибки.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary vsli:raw="Gets an array of columns that have errors.">Получает массив столбцов с ошибками.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that contain errors.">Массив объектов <see cref="T:System.Data.DataColumn" />, содержащих ошибки.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The row is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="relation" /> не принадлежит объекту <see cref="T:System.Data.DataTable" />.  
  
-или-

Строка имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Дочерняя строка имеет несколько родительских элементов.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="This row does not belong to the child table of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Эта строка не принадлежит дочерней таблице объекта <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">Строка не принадлежит таблице.</exception>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанных объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to this table's parent relations.">Строка имеет значение <see langword="null" />.  
  
-или-

Параметр <paramref name="relation" /> не принадлежит к родительским отношениям этой таблицы.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Дочерняя строка имеет несколько родительских элементов.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">Дочерняя таблица отношения не является таблицей, которой принадлежит строка.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">Строка не содержит эту версию данных.</exception>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Дочерняя строка имеет несколько родительских элементов.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Строка не принадлежит таблице.</exception>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.DataRowVersion" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Дочерняя строка имеет несколько родительских элементов.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Объект <see cref="T:System.Data.DataRelation" /> не принадлежит <see cref="T:System.Data.DataSet" /> этой строки.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">Строка имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">Дочерняя таблица отношения не является таблицей, которой принадлежит строка.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Строка не принадлежит <see cref="T:System.Data.DataTable" />.</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанных объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Объект <see cref="T:System.Data.DataRelation" /> не принадлежит <see cref="T:System.Data.DataSet" /> этой строки.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">Строка имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">Дочерняя таблица отношения не является таблицей, которой принадлежит строка.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Строка не принадлежит <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Строка не принадлежит таблице.</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether a specified version exists.">Получает значение, показывающее, существует ли указанная версия.</summary>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version.">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее версию строки.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the version exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если версия существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a null value.">Получает значение, показывающее, содержит ли указанный объект <see cref="T:System.Data.DataColumn" /> значение null.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Объект <see cref="T:System.Data.DataColumn" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Строка не принадлежит таблице.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; contains a null value.">Получает значение, показывающее, содержит ли указанные объекты <see cref="T:System.Data.DataColumn" /> и <see cref="T:System.Data.DataRowVersion" /> значение null.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Объект <see cref="T:System.Data.DataColumn" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;paramref name=&quot;version&quot; /&gt;.">Строка не имеет запрошенного объекта <paramref name="version" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column at the specified index contains a null value.">Получает значение, показывающее, содержит ли столбец по указанному индексу значение null.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Индекс столбца (с нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to the index specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">Нет столбца, который соответствует индексу, определяемому <paramref name="columnIndex" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Строка не принадлежит таблице.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary vsli:raw="Gets a value that indicates whether the named column contains a null value.">Получает значение, показывающее, содержит ли названный столбец значение null.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">Не удается найти столбец, указанный по значению <paramref name="columnName" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;columnName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="columnName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Строка не принадлежит таблице.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary vsli:raw="Rejects all changes made to the row since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">Отменяет все изменения, внесенные в строку после последнего вызова метода <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">Строка не принадлежит таблице.</exception>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Added&quot; /&gt;.">Изменяет значение свойства <see cref="P:System.Data.DataRow.RowState" /> объекта <see cref="T:System.Data.DataRow" /> на <see langword="Added" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary vsli:raw="Sets the error description for a column specified as a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Задает описание ошибки для столбца, указанного как <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to set the error description for.">Объект <see cref="T:System.Data.DataColumn" />, для которого задается описание ошибки.</param>
      <param name="error" vsli:raw="The error description.">Описание ошибки.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by index.">Задает описание ошибки для столбца, указанного по индексу.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Индекс столбца (с нуля).</param>
      <param name="error" vsli:raw="The error description.">Описание ошибки.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range">Аргумент <paramref name="columnIndex" /> вне диапазона</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by name.">Задает описание ошибки для столбца, указанного по имени.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Имя столбца.</param>
      <param name="error" vsli:raw="The error description.">Описание ошибки.</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Modified&quot; /&gt;.">Изменяет значение свойства <see cref="P:System.Data.DataRow.RowState" /> объекта <see cref="T:System.Data.DataRow" /> на <see langword="Modified" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary vsli:raw="Sets the value of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to a null value.">Задает значение null указанному параметру <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Объект <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Задает родительскую строку <see cref="T:System.Data.DataRow" /> с указанным новым родительским объектом <see cref="T:System.Data.DataRow" />.</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Новый родительский объект <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Задает родительскую строку <see cref="T:System.Data.DataRow" /> с указанными новыми родительскими объектами <see cref="T:System.Data.DataRow" /> и <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Новый родительский объект <see cref="T:System.Data.DataRow" />.</param>
      <param name="relation" vsli:raw="The relation &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Отношение <see cref="T:System.Data.DataRelation" /> для использования.</param>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="One of the rows does not belong to a table">Одна из строк не принадлежит таблице.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One of the rows is &lt;see langword=&quot;null&quot; /&gt;.">Одна из строк имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object.">Отношение не принадлежит коллекции <see cref="T:System.Data.DataRelationCollection" /> объекта <see cref="T:System.Data.DataSet" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is not the table this row belongs to.">Дочернее отношение <see cref="T:System.Data.DataTable" /> не является таблицей, которой принадлежит эта строка.</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary vsli:raw="Gets a value that indicates whether there are errors in a row.">Получает значение, показывающее, есть ли ошибки в строке.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если строка содержит ошибку; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary vsli:raw="Gets or sets the data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Возвращает или задает данные, сохраненные в указанном объекте <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains the data.">Значение типа <see cref="T:System.Data.DataColumn" />, содержащее данные.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this table.">Столбец не принадлежит этой таблице.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">Значением параметра <paramref name="column" /> является null.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">Была предпринята попытка задать значение в удаленной строке.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">Типы данных значения и столбца не совпадают.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Объект <see cref="T:System.Object" />, содержащий данные.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Получает указанную версию данных, сохраненных в указанном объекте <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains information about the column.">Объект <see cref="T:System.Data.DataColumn" />, содержащий сведения о столбце.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее требуемую версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to the table.">Столбец не принадлежит этой таблице.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; argument contains null.">Аргумент параметра <paramref name="column" /> содержит ноль.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">Строка не содержит эту версию данных.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Объект <see cref="T:System.Object" />, содержащий данные.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by index.">Возвращает или задает данные, сохраненные в столбце, указанном по индексу.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Индекс столбца (с нуля).</param>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">Происходит при попытке задать значение в удаленной строке.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">Аргумент <paramref name="columnIndex" /> вне диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set the value and the new value's &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Происходит при задании значения, когда <see cref="T:System.Type" /> нового значения не совпадает со свойством <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Объект <see cref="T:System.Object" />, содержащий данные.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the data stored in the column, specified by index and version of the data to retrieve.">Получает данные, сохраненные в столбце, указанном по индексу и версии извлекаемых данных.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Индекс столбца (с нуля).</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее требуемую версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">Аргумент <paramref name="columnIndex" /> вне диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">Типы данных значения и столбца не совпадают.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">Строка не содержит эту версию данных.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">Была предпринята попытка задать значение в удаленной строке.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Объект <see cref="T:System.Object" />, содержащий данные.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by name.">Возвращает или задает данные, сохраненные в столбце, указанном по имени.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">Не удается найти столбец, указанный по значению <paramref name="columnName" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">Происходит при попытке задать значение в удаленной строке.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set a value and its &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Происходит при задании значения, когда <see cref="T:System.Type" /> нового значения не совпадает со свойством <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Occurs when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">Возникает попытке вставки значения null в столбец, где для свойства <see cref="P:System.Data.DataColumn.AllowDBNull" /> задано значение <see langword="false" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Объект <see cref="T:System.Object" />, содержащий данные.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the named column.">Получает указанную версию данных, сохраненных в именованном столбце.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Имя столбца.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее требуемую версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">Не удается найти столбец, указанный по значению <paramref name="columnName" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">Типы данных значения и столбца не совпадают.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">Строка не содержит эту версию данных.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row was deleted.">Строка была удалена.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Объект <see cref="T:System.Object" />, содержащий данные.</returns>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary vsli:raw="Gets or sets all the values for this row through an array.">Возвращает или задает все значения для этой строки с помощью массива.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">Размер массива превышает число столбцов в таблице.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value in the array does not match its &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; in its respective &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Значение в массиве не соответствует его свойству <see cref="P:System.Data.DataColumn.DataType" /> в его соответствующем объекте <see cref="T:System.Data.DataColumn" />.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="An edit broke a constraint.">Изменение привело к нарушению ограничения.</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="An edit tried to change the value of a read-only column.">При изменении была предпринята попытка изменить значение столбца, доступное только для чтения.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="An edit tried to put a null value in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object is &lt;see langword=&quot;false&quot; /&gt;.">При изменении была предпринята попытка значение null в столбец, у которого свойство <see cref="P:System.Data.DataColumn.AllowDBNull" /> объекта <see cref="T:System.Data.DataColumn" /> имеет значение <see langword="false" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row has been deleted.">Строка была удалена.</exception>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Массив типа <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary vsli:raw="Gets or sets the custom error description for a row.">Возвращает или задает настраиваемое описание ошибки для строки.</summary>
      <returns vsli:raw="The text describing an error.">Текст описания ошибки.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary vsli:raw="Gets the current state of the row with regard to its relationship to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Получает текущее состояние строки, относящееся к ее отношению к коллекции <see cref="T:System.Data.DataRowCollection" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.DataRowState" />.</returns>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for which this row has a schema.">Получает объект <see cref="T:System.Data.DataTable" />, для которого эта строка имеет схему.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which this row belongs.">Объект <see cref="T:System.Data.DataTable" />, которому принадлежит эта строка.</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary vsli:raw="Describes an action performed on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Описывает действие, выполняемое с объектом <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary vsli:raw="The row has been added to the table.">Строка была добавлена в таблицу.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary vsli:raw="The row has changed.">Строка была изменена.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary vsli:raw="The original and the current versions of the row have been changed.">Текущая и исходная версии строки были изменены.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary vsli:raw="The original version of the row has been changed.">Исходная версия строки изменена.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary vsli:raw="The changes to the row have been committed.">Изменения, внесенные в строку, были зафиксированы.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary vsli:raw="The row was deleted from the table.">Строка была удалена из таблицы.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary vsli:raw="The row has not changed.">Строка не была изменена.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary vsli:raw="The most recent change to the row has been rolled back.">Выполнен откат последнего изменения строки.</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary vsli:raw="The &lt;see langword=&quot;DataRowBuilder&quot; /&gt; type supports the .NET infrastructure and is not intended to be used directly from your code.">Тип <see langword="DataRowBuilder" /> поддерживает инфраструктуру.NET Framework и не предназначен для использования непосредственно из кода.</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)&quot; /&gt; events.">Предоставляет данные для событий <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> и <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />.</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRowChangeEventArgs" />.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action is occurring.">Объект <see cref="T:System.Data.DataRow" />, в отношении которого происходит действие.</param>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.DataRowAction" />.</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary vsli:raw="Gets the action that has occurred on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Возвращает действие, выполненное в отношении объекта <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.DataRowAction" />.</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary vsli:raw="Gets the row upon which an action has occurred.">Возвращает строку, в отношении которой произошло действие.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action has occurred.">Объект <see cref="T:System.Data.DataRow" />, в отношении которого происходит действие.</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt;, and &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; events of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Представляет метод, обрабатывающий события <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" /> и <see cref="E:System.Data.DataTable.RowDeleted" /> объекта <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary vsli:raw="Represents a collection of rows for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Представляет коллекцию строк для объекта <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; object.">Добавляет заданный объект <see cref="T:System.Data.DataRow" /> в объект <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">Добавляемый объект <see cref="T:System.Data.DataRow" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is null.">Строка имеет значение NULL.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The row either belongs to another table or already belongs to this table.">Строка либо принадлежит другой таблице, либо уже принадлежит этой таблице.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The addition invalidates a constraint.">Добавление нарушает ограничение.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The addition tries to put a null in a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">Добавление пытается поместить пустое значение в объект <see cref="T:System.Data.DataColumn" />, свойство <see cref="P:System.Data.DataColumn.AllowDBNull" /> которого имеет значение "false".</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary vsli:raw="Creates a row using specified values and adds it to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Создает строку с использованием заданных параметров и добавляет его в <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="values" vsli:raw="The array of values that are used to create the new row.">Массив значений, который используются для создания новой строки.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">Размер массива превышает число столбцов в таблице.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value does not match its respective column type.">Значение не соответствует соответствующему типу столбца.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">Добавление строки нарушает ограничение.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Trying to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">Попытка поместить значение NULL в столбец, где <see cref="P:System.Data.DataColumn.AllowDBNull" /> имеет значение "false".</exception>
      <returns vsli:raw="The new row.">Нет.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary vsli:raw="Clears the collection of all rows.">Удаляет все строки из коллекции.</summary>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="A &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced on the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Свойство <see cref="T:System.Data.ForeignKeyConstraint" /> применяется для объекта <see cref="T:System.Data.DataRowCollection" />.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether the primary key of any row in the collection contains the specified value.">Возвращает значение, которое указывает, содержит ли первичный ключ любой из строк в коллекции указанное значение.</summary>
      <param name="key" vsli:raw="The value of the primary key to test for.">Значение первичного ключа для проверки.</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">Таблица не имеет первичного ключа.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified primary key value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если коллекция содержит <see cref="T:System.Data.DataRow" /> с указанным значением первичного ключа; в противном случае — значение<see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary vsli:raw="Gets a value that indicates whether the primary key columns of any row in the collection contain the values specified in the object array.">Возвращает значение, которое указывает, содержат ли столбцы первичного ключа любой из строк в коллекции значение, указанное в массиве объектов.</summary>
      <param name="keys" vsli:raw="An array of primary key values to test for.">Массив значений первичного ключа для проверки.</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">Таблица не имеет первичного ключа.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified key values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Data.DataRowCollection" /> содержит <see cref="T:System.Data.DataRow" /> с указанным значением ключа; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">Копирует все объекты <see cref="T:System.Data.DataRow" /> из этой коллекции в заданный целевой массив, начиная с указанного индекса.</summary>
      <param name="ar" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">Одномерный массив для приема элементов, копируемых из <see langword="DataRowCollection" />. Индекс в массиве должен начинаться с нуля.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">Индекс (отсчет с нуля) в массиве, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">Копирует все объекты <see cref="T:System.Data.DataRow" /> из этой коллекции в заданный целевой массив, начиная с указанного индекса.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">Одномерный массив для приема элементов, копируемых из <see langword="DataRowCollection" />. Индекс в массиве должен начинаться с нуля.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">Индекс (отсчет с нуля) в массиве, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary vsli:raw="Gets the row specified by the primary key value.">Возвращает строку, указанную значением первичного ключа.</summary>
      <param name="key" vsli:raw="The primary key value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to find.">Значение первичного ключа <see cref="T:System.Data.DataRow" /> для поиска.</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">Таблица не имеет первичного ключа.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that contains the primary key value specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Объект <see cref="T:System.Data.DataRow" />, содержащий указанное значение первичного ключа; в противном случае — значение NULL, если значение первичного ключа не существует в <see cref="T:System.Data.DataRowCollection" />.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary vsli:raw="Gets the row that contains the specified primary key values.">Возвращает строку, которая содержит указанные значения первичного ключа.</summary>
      <param name="keys" vsli:raw="An array of primary key values to find. The type of the array is &lt;see langword=&quot;Object&quot; /&gt;.">Массив значений первичного ключа для поиска. Тип массива — <see langword="Object" />.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No row corresponds to that index value.">Этому значению индекса не соответствуют никакие строки.</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">Таблица не имеет первичного ключа.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object that contains the primary key values specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Объект <see cref="T:System.Data.DataRow" />, содержащий указанные значения первичного ключа; в противном случае — значение NULL, если значение первичного ключа отсутствует в <see cref="T:System.Data.DataRowCollection" />.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">Возвращает <see cref="T:System.Collections.IEnumerator" /> для этой коллекции.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">Объект <see cref="T:System.Collections.IEnumerator" /> для коллекции.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Возвращает индекс указанного объекта <see cref="T:System.Data.DataRow" />.</summary>
      <param name="row" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; to search for.">Объект <see langword="DataRow" />, который требуется найти.</param>
      <returns vsli:raw="The zero-based index of the row, or -1 if the row is not found in the collection.">Отсчитываемый от нуля индекс строки или значение -1, если строка не найдена в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Inserts a new row into the collection at the specified location.">Вставляет новую строку в коллекцию в указанное положение.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">Добавляемый объект <see cref="T:System.Data.DataRow" />.</param>
      <param name="pos" vsli:raw="The (zero-based) location in the collection where you want to add the &lt;see langword=&quot;DataRow&quot; /&gt;.">Отсчитываемое от нуля расположение в коллекции, куда необходимо добавить строку <see langword="DataRow" />.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;pos&quot; /&gt; is less than 0.">Значение параметра <paramref name="pos" /> меньше 0.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the collection.">Удаляет указанный объект <see cref="T:System.Data.DataRow" /> из коллекции.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to remove.">Объект <see cref="T:System.Data.DataRow" /> для удаления.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the row at the specified index from the collection.">Удаляет строку по указанному индексу из коллекции.</summary>
      <param name="index" vsli:raw="The index of the row to remove.">Индекс строки для удаления.</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary vsli:raw="Gets the total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">Возвращает общее число объектов <see cref="T:System.Data.DataRow" /> в коллекции.</summary>
      <returns vsli:raw="The total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">Общее число объектов <see cref="T:System.Data.DataRow" /> в коллекции.</returns>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the row at the specified index.">Возвращает строку по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the row to return.">Отсчитываемый от нуля индекс строки для возвращения.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">Значение индекса больше числа элементов в коллекции.</exception>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Указанный <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer">
      <summary vsli:raw="Returns a singleton instance of the &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt; class.">Возвращает одноэлементный экземпляр класса <see cref="T:System.Data.DataRowComparer`1" />.</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">Получает одноэлементный экземпляр класса <see cref="T:System.Data.DataRowComparer`1" />. Это свойство доступно только для чтения.</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">Экземпляр класса <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects for equivalence by using value-based comparison.">Сравнивает два объекта <see cref="T:System.Data.DataRow" /> на эквивалентность путем использования сравнения на основе значений.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects to be compared, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип сравниваемых объектов, обычно это <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects by using a column-by-column, value-based comparison.">Сравнивает два объекта <see cref="T:System.Data.DataRow" /> путем использования сравнения по столбцам на основе значений.</summary>
      <param name="leftRow" vsli:raw="The first &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">Первый из сравниваемых объектов <see cref="T:System.Data.DataRow" />.</param>
      <param name="rightRow" vsli:raw="The second &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">Второй сравниваемый объект <see cref="T:System.Data.DataRow" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects are &lt;see langword=&quot;null&quot; /&gt;.">Один или оба исходных объекта <see cref="T:System.Data.DataRow" /> содержат <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects have ordered sets of column values that are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если два объекта <see cref="T:System.Data.DataRow" /> запросили наборы равных значений столбцов; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary vsli:raw="Returns a hash code for the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Возвращает хэш-код указанного объекта <see cref="T:System.Data.DataRow" />.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to compute the hash code from.">Строка <see cref="T:System.Data.DataRow" />, на основе которой следует вычислить хэш-код.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Исходные объекты <see cref="T:System.Data.DataRow" /> не принадлежат таблице <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">Исходные объекты <see cref="T:System.Data.DataRow" /> имеют значение <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the hash code of the row.">Возвращает значение <see cref="T:System.Int32" />, которое представляет хэш-код строки.</returns>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">Получает одноэлементный экземпляр класса <see cref="T:System.Data.DataRowComparer`1" />. Это свойство доступно только для чтения.</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">Экземпляр класса <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; class. This is a static class.">Определяет методы расширения для класса <see cref="T:System.Data.DataRow" />. Этот класс является статическим.</summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)&quot; /&gt; method also supports nullable types.">Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">Объект входа <see cref="T:System.Data.DataColumn" />, в котором указывается столбец, значение которого следует возвратить.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">Столбец, определенный именем <paramref name="column" />, не находится в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Значение null было назначено типу, не поддерживающему значения null.</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt;.">Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного именем <paramref name="column" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">Объект входа <see cref="T:System.Data.DataColumn" />, в котором указывается столбец, значение которого следует возвратить.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Перечисление <see cref="T:System.Data.DataRowVersion" />, которое определяет версию возвращаемого значения столбца, например: версия <see langword="Current" /> или <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">Столбца, определенного именем <paramref name="column" />, не существует в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Значение null было назначено типу, не поддерживающему значения null.</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного параметрами <paramref name="column" /> и <paramref name="version" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)&quot; /&gt; method also supports nullable types.">Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="columnIndex" vsli:raw="The column index.">Индекс столбца.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">Столбца, определенного именем <paramref name="ordinal" />, не существует в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Значение null было назначено типу, не поддерживающему значения null.</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного именем <paramref name="columnIndex" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to return the value of.">Порядковый номер (начинающийся с нуля) столбца, значение которого следует возвратить.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Перечисление <see cref="T:System.Data.DataRowVersion" />, которое определяет версию возвращаемого значения столбца, например: версия <see langword="Current" /> или <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">Столбца, определенного именем <paramref name="ordinal" />, не существует в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Значение null было назначено типу, не поддерживающему значения null.</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;ordinal&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного параметрами <paramref name="ordinal" /> и <paramref name="version" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)&quot; /&gt; method also supports nullable types.">Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">Имя столбца, значение которого следует возвратить.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">Столбец, определенный именем <paramref name="columnName" />, не находится в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A &lt;see langword=&quot;null&quot; /&gt; value was assigned to a non-nullable type.">Значение <see langword="null" /> было назначено типу, не поддерживающему значения null.</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt;.">Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного именем <paramref name="columnName" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">Имя столбца, значение которого следует возвратить.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Перечисление <see cref="T:System.Data.DataRowVersion" />, которое определяет версию возвращаемого значения столбца, например: версия <see langword="Current" /> или <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">Столбца, определенного именем <paramref name="columnName" />, не существует в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Значение null было назначено типу, не поддерживающему значения null.</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного параметрами <paramref name="columnName" /> и <paramref name="version" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)&quot; /&gt; method also supports nullable types.">Задает новое значение для указанного столбца в <see cref="T:System.Data.DataRow" />. Метод <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specifies which row value to retrieve.">Входящий столбец <see cref="T:System.Data.DataColumn" /> определяет, какое значение строки следует извлечь.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">Значение новой строки для указанного столбца, имеющее тип <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Общий параметр, в котором указывается тип значения для этого столбца.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; cannot be found.">Не удается найти столбец, указанный по значению <paramref name="column" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">Значением параметра <paramref name="column" /> является NULL.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Происходит при попытке установить значение в удаленной строке.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; the method is called on. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)&quot; /&gt; method also supports nullable types.">Задает новое значение для указанного столбца в вызванном методе <see cref="T:System.Data.DataRow" />. Метод <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to set the value of.">Порядковый номер (начинающийся с нуля) столбца, значение которого следует задать.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">Значение новой строки для указанного столбца, имеющее тип <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Общий параметр, в котором указывается тип значения для этого столбца.</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Происходит при попытке установить значение в удаленной строке.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;ordinal&quot; /&gt; argument is out of range.">Аргумент <paramref name="ordinal" /> вне диапазона.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could be not cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)&quot; /&gt; method also supports nullable types.">Задает новое значение для указанного столбца в <see cref="T:System.Data.DataRow" />. Метод <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="columnName" vsli:raw="The name of the column to set the value of.">Имя столбца, значение которого следует задать.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">Значение новой строки для указанного столбца, имеющее тип <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Общий параметр, в котором указывается тип значения для этого столбца.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">Не удается найти столбец, указанный по значению <paramref name="columnName" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Происходит при попытке установить значение в удаленной строке.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary vsli:raw="Gets the state of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Получает состояние объекта <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary vsli:raw="The row has been added to a &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">Строка была добавлена в коллекцию <see cref="T:System.Data.DataRowCollection" /> и метод <see cref="M:System.Data.DataRow.AcceptChanges" /> не был вызван.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary vsli:raw="The row was deleted using the &lt;see cref=&quot;M:System.Data.DataRow.Delete&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Строка была удалена с помощью метода <see cref="M:System.Data.DataRow.Delete" /> объекта <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary vsli:raw="The row has been created but is not part of any &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;. A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is in this state immediately after it has been created and before it is added to a collection, or if it has been removed from a collection.">Строка была создана, но не является частью какой-либо <see cref="T:System.Data.DataRowCollection" />. Объект <see cref="T:System.Data.DataRow" /> имеет это состояние сразу после своего создания и перед добавлением в коллекцию, а также если он был удален из коллекции.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary vsli:raw="The row has been modified and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">Строка была изменена и объект <see cref="M:System.Data.DataRow.AcceptChanges" /> не был вызван.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary vsli:raw="The row has not changed since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">Строка не была изменена с момента последнего вызова <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary vsli:raw="Describes the version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Описание версии <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary vsli:raw="The row contains current values.">Строка содержит текущие значения.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary vsli:raw="The default version of &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;. For a &lt;see langword=&quot;DataRowState&quot; /&gt; value of &lt;see langword=&quot;Added&quot; /&gt;, &lt;see langword=&quot;Modified&quot; /&gt; or &lt;see langword=&quot;Deleted&quot; /&gt;, the default version is &lt;see langword=&quot;Current&quot; /&gt;. For a &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; value of &lt;see langword=&quot;Detached&quot; /&gt;, the version is &lt;see langword=&quot;Proposed&quot; /&gt;.">Версия <see cref="T:System.Data.DataRowState" /> по умолчанию. Для значения <see langword="DataRowState" /><see langword="Added" />, <see langword="Modified" /> или <see langword="Deleted" /> по умолчанию используется версия <see langword="Current" />. Для значения <see cref="T:System.Data.DataRowState" /><see langword="Detached" /> используется версия <see langword="Proposed" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary vsli:raw="The row contains its original values.">Строка содержит исходные значения.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary vsli:raw="The row contains a proposed value.">Строка содержит предложенное значение.</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary vsli:raw="Represents a customized view of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Представляет настроенное представление <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary vsli:raw="Event that is raised when a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; property is changed.">Событие, которое возникло, когда свойство <see cref="T:System.Data.DataRowView" /> было изменено.</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary vsli:raw="Begins an edit procedure.">Начинает процедуру изменения.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary vsli:raw="Cancels an edit procedure.">Отменяет процедуру изменения.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Возвращает <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" /> с указанным дочерним объектом <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Объект <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Объект <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; and parent.">Возвращает <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" /> с указанным <see cref="T:System.Data.DataRelation" /> и родительским объектом.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Объект <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent" vsli:raw="The parent object.">Родительский объект .</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> имеет значение <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Объект <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Возвращает <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" /> с указанным именем дочернего объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Строка, содержащая имя <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Объект <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and parent.">Возвращает <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" /> с указанным именем <see cref="T:System.Data.DataRelation" /> и родительским объектом.</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Строка, содержащая имя <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the created child view in sync with the parent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для сохранения синхронизации созданного дочернего представления с родительским; в противном случае — <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> имеет значение <see langword="null" />.</exception>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Объект <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary vsli:raw="Deletes a row.">Удаляет строку.</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary vsli:raw="Commits changes to the underlying &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and ends the editing session that was begun with &lt;see cref=&quot;M:System.Data.DataRowView.BeginEdit&quot; /&gt;.  Use &lt;see cref=&quot;M:System.Data.DataRowView.CancelEdit&quot; /&gt; to discard the changes made to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Фиксирует изменения в базовом <see cref="T:System.Data.DataRow" /> и заканчивает сеанс редактирования, который был начат с <see cref="M:System.Data.DataRowView.BeginEdit" />.  Используйте метод <see cref="M:System.Data.DataRowView.CancelEdit" /> для отмены изменений, внесенных в объект <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is identical to the specified object.">Возвращает значение,указывающее, идентичен ли текущий объект <see cref="T:System.Data.DataRowView" /> указанному объекту.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Объект <see cref="T:System.Object" /> для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;object&quot; /&gt; is a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; and it returns the same row as the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="object" /> является объектом <see cref="T:System.Data.DataRowView" /> и возвращает ту же строку, что и текущий объект <see cref="T:System.Data.DataRowView" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary vsli:raw="Returns the hash code of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Возвращает хэш-код объекта <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code 1, which represents Boolean &lt;see langword=&quot;true&quot; /&gt; if the value of this instance is nonzero; otherwise the integer zero, which represents Boolean &lt;see langword=&quot;false&quot; /&gt;.">Хэш-код (32-битное целое число со знаком) имеет значение 1, которое представляет логическое значение <see langword="true" />, если значение этого экземпляра является ненулевым; в противном случае целое число имеет значение 0, которое представляет логическое значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Возвращает коллекцию настраиваемых атрибутов для этого экземпляра компонента.</summary>
      <returns vsli:raw="An AttributeCollection containing the attributes for this object.">AttributeCollection, содержащая атрибуты для данного объекта.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Возвращает имя класса для этого экземпляра компонента.</summary>
      <returns vsli:raw="The class name of this instance of a component.">Имя класса для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Возвращает имя этого экземпляра компонента.</summary>
      <returns vsli:raw="The name of this instance of a component.">Имя этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Возвращает преобразователь типов для этого экземпляра компонента.</summary>
      <returns vsli:raw="The type converter for this instance of a component.">Преобразователь типов для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Возвращает событие по умолчанию для этого экземпляра компонента.</summary>
      <returns vsli:raw="The default event for this instance of a component.">Событие по умолчанию для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Возвращает свойство по умолчанию для этого экземпляра компонента.</summary>
      <returns vsli:raw="The default property for this instance of a component.">Свойство по умолчанию для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Возвращает редактор заданного типа для этого экземпляра компонента.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">Объект <see cref="T:System.Type" />, который представляет редактор для этого объекта.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">Объект <see cref="T:System.Object" /> заданного типа, являющийся редактором для этого объекта, или <see langword="null" />, если редактор не найден.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Возвращает события для этого экземпляра компонента.</summary>
      <returns vsli:raw="The events for this instance of a component.">События для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component with specified attributes.">Возвращает события для этого экземпляра компонента с заданными атрибутами.</summary>
      <param name="attributes" vsli:raw="The attributes.">Атрибуты</param>
      <returns vsli:raw="The events for this instance of a component.">События для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Возвращает свойства для этого экземпляра компонента.</summary>
      <returns vsli:raw="The properties for this instance of a component.">Свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component with specified attributes.">Возвращает свойства для этого экземпляра компонента с заданными атрибутами.</summary>
      <param name="attributes" vsli:raw="The attributes.">Атрибуты.</param>
      <returns vsli:raw="The properties for this instance of a component.">Свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Возвращает объект, содержащий свойство, описываемое заданным дескриптором свойства.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющий свойство, владельца которого требуется найти.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">Объект <see cref="T:System.Object" />, представляющий владельца заданного свойства.</returns>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to which this row belongs.">Получает объект <see cref="T:System.Data.DataView" />, которому принадлежит эта строка.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataView&quot; /&gt; to which this row belongs.">Объект <see langword="DataView" />, которому принадлежит эта строка.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary vsli:raw="Indicates whether the row is in edit mode.">Определяет, находится ли строка в режиме изменения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is in edit mode; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если строка находится в режиме изменения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is new.">Указывает, является ли новым объект <see cref="T:System.Data.DataRowView" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is new; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если строка является новой; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a value in a specified column.">Возвращает или задает значение в указанном столбце.</summary>
      <param name="ndx" vsli:raw="The column index.">Индекс столбца.</param>
      <exception cref="T:System.Data.DataException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">
        <see cref="P:System.Data.DataRowView.DataView" /> не позволяет редактировать, и <see cref="T:System.Data.DataRowView" /> не является новым.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to that index value.">Этому значению индекса не соответствуют никакие столбцы.</exception>
      <returns vsli:raw="The value of the column.">Значение столбца.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary vsli:raw="Gets or sets a value in a specified column.">Возвращает или задает значение в указанном столбце.</summary>
      <param name="property" vsli:raw="String that contains the specified column.">Строка, содержащая указанный столбец.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A column with the specified name or relation was not found.&#xA;        &#xA;-or-&#xA;&#xA;The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">Столбец или отношение с указанным именем не найдены.
        
-или-

<see cref="P:System.Data.DataRowView.DataView" /> не позволяет редактировать, и <see cref="T:System.Data.DataRowView" /> не является новым.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="Unmatched &lt;paramref name=&quot;property&quot; /&gt; when setting a value.">Несопоставленный <paramref name="property" /> при задании значения.</exception>
      <returns vsli:raw="The value of the column.">Значение столбца.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed.">Получает просматриваемый объект <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed by the &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;.">Объект <see cref="T:System.Data.DataRow" />, просматриваемый в <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary vsli:raw="Gets the current version description of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Получает описание текущей версии объекта <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. Possible values for the &lt;see cref=&quot;P:System.Data.DataRowView.RowVersion&quot; /&gt; property are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.DataRowVersion" />. Возможными значения для свойства <see cref="P:System.Data.DataRowView.RowVersion" /> являются <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary vsli:raw="Gets a message that describes any validation errors for the object.">Получает сообщение, описывающее все ошибки проверки объекта.</summary>
      <returns vsli:raw="The validation error on the object.">Ошибка проверки в объекте.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary vsli:raw="Gets the error message for the property with the given name.">Возвращает сообщение об ошибке для свойства с заданным именем.</summary>
      <param name="colName" vsli:raw="The name of the property whose error message to get.">Имя свойства, для которого возвращается сообщение об ошибке.</param>
      <returns vsli:raw="The error message for the property. The default is an empty string (&quot;&quot;).">Сообщение об ошибке для свойства. Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary vsli:raw="Represents an in-memory cache of data.">Представляет кэш в памяти для данных.</summary>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">Происходит после инициализации таблицы <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary vsli:raw="Occurs when a target and source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; have the same primary key value, and &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; is set to true.">Происходит, если значения первичного ключа конечного и основного объектов <see cref="T:System.Data.DataRow" /> совпадают, а свойство <see cref="P:System.Data.DataSet.EnforceConstraints" /> имеет значение true.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSet" />, содержащего заданные сведения о сериализации и контекст.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">Информация, необходимая для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">Источник и назначение данного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <param name="ConstructSchema" vsli:raw="">Логическое значение.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with the given name.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSet" /> с заданным именем.</summary>
      <param name="dataSetName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Имя <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was loaded or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">Сохраняет все изменения, внесенные в класс <see cref="T:System.Data.DataSet" /> после его загрузки или после последнего вызова метода <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Начинает инициализацию <see cref="T:System.Data.DataSet" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; of any data by removing all rows in all tables.">Удаляет из класса <see cref="T:System.Data.DataSet" /> любые данные путем удаления всех строк во всех таблицах.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary vsli:raw="Copies the structure of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas, relations, and constraints. Does not copy any data.">Копирует структуру класса <see cref="T:System.Data.DataSet" />, включая все схемы, соотношения и ограничения объекта <see cref="T:System.Data.DataTable" />. Данные не копируются.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, but none of the data.">Новый класс <see cref="T:System.Data.DataSet" />, имеющий ту же схему, что и текущий класс <see cref="T:System.Data.DataSet" />, но не содержащий данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Копирует структуру и данные для <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same structure (table schemas, relations, and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Новый класс <see cref="T:System.Data.DataSet" />, имеющий ту же структуру (схемы таблиц, отношения и ограничения) и данные, что и класс <see cref="T:System.Data.DataSet" />.  
  
 <block subset="none" type="note"><para>  
 Если эти классы являются подклассами, то и копия любого из них будет принадлежать соответствующему подклассу.</para></block></returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, in the same sequence as the tables appear in the &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; collection.">Возвращает объект <see cref="T:System.Data.DataTableReader" /> с одним результирующим набором для каждой последовательности <see cref="T:System.Data.DataTable" /> в той же последовательности, в которой таблицы отображаются в коллекции <see cref="P:System.Data.DataSet.Tables" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Объект <see cref="T:System.Data.DataTableReader" />, содержащий один или несколько результирующих наборов, соответствующих экземплярам <see cref="T:System.Data.DataTable" />, содержащимся в исходном наборе данных <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Возвращает объект <see cref="T:System.Data.DataTableReader" /> с одним результирующим набором для каждой таблицы <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables" vsli:raw="An array of DataTables providing the order of the result sets to be returned in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Массив таблиц DataTables, обеспечивающий последовательность результирующих наборов, которые будут возвращены в средстве чтения <see cref="T:System.Data.DataTableReader" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The returned result sets are in the order specified by the &lt;paramref name=&quot;dataTables&quot; /&gt; parameter.">Объект <see cref="T:System.Data.DataTableReader" />, содержащий один или несколько результирующих наборов, соответствующих экземплярам <see cref="T:System.Data.DataTable" />, содержащимся в исходном наборе данных <see cref="T:System.Data.DataSet" />. Возвращенные результирующие наборы находятся в последовательности, определенной в параметре <paramref name="dataTables" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Определяет <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> для <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, вместе с которым вызывается защищенный конструктор <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> набора данных <see langword="DataSet" /> во время десериализации в удаленных сценариях.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, вместе с которым вызывается защищенный конструктор <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> набора данных <see langword="DataSet" /> во время десериализации в удаленных сценариях.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">Перечисление <see cref="T:System.Data.SchemaSerializationMode" />, которое указывает, следует ли исключать из передаваемых данных сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Определяет <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> для <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance that is passed during deserialization of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.XmlReader" />, который передается во время десериализации набора данных <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">Перечисление <see cref="T:System.Data.SchemaSerializationMode" />, которое указывает, следует ли исключать из передаваемых данных сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Завершает инициализацию <see cref="T:System.Data.DataSet" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that contains all changes made to it since it was loaded or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was last called.">Получает копию класса <see cref="T:System.Data.DataSet" />, содержащую все изменения, внесенные после его загрузки или после последнего вызова метода <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it and later be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no changed rows are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Копия изменений из данного <see cref="T:System.Data.DataSet" />, с которой можно выполнять различные операции и позднее объединить с данными таблицы, используя метод <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Если никакие строки не менялись, метод возвращает <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Получает копию таблицы <see cref="T:System.Data.DataSet" />, содержащую все изменения, внесенные после ее последней загрузки или после вызова метода <see cref="M:System.Data.DataSet.AcceptChanges" /> и отфильтрованные по параметру <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.DataRowState" />.</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it, and subsequently be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Отфильтрованная копия класса <see cref="T:System.Data.DataSet" />, с которой можно работать, а затем вернуть в исходный класс с помощью метода <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Если строки с требуемым типом <see cref="T:System.Data.DataRowState" /> отсутствуют, метод вернет значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Gets a copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; for the DataSet.">Получает копию <see cref="T:System.Xml.Schema.XmlSchemaSet" /> для DataSet.</summary>
      <param name="schemaSet" vsli:raw="The specified schema set.">Указанный набор схем.</param>
      <returns vsli:raw="A copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Копия объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Заполняет объект сведений о сериализации данными, необходимыми для сериализации <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализуемые данные, связанные с исключением <see cref="T:System.Data.DataSet" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий источник и назначение сериализуемого потока, связанного с объектом <see cref="T:System.Data.DataSet" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary vsli:raw="Returns a serializable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">Возвращает сериализуемый экземпляр <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">Экземпляр класса <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Deserializes the table data from the binary or XML stream.">Десериализует данные таблицы из двоичного потока или XML-потока.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance.">Экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="The streaming context.">Контекст потоковой передачи.</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary vsli:raw="Returns the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Возвращает XML-представление данных, хранящихся в классе <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A string that is a representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Строка, являющаяся представлением данных, хранящихся в классе <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary vsli:raw="Returns the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Возвращает XML-схему для XML-представления данных, хранящихся в классе <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="String that is the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Строка, которая является XML-схемой для XML-представления данных, хранящихся в классе <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows.">Получает значение, определяющее наличие изменений в классе <see cref="T:System.Data.DataSet" />, включая добавление, удаление или изменение строк.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если класс <see cref="T:System.Data.DataSet" /> был изменен, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Получает значение, определяющее наличие изменений в классе <see cref="T:System.Data.DataSet" />, включая добавление, удаление или изменение строк, отфильтрованных по типу <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.DataRowState" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если класс <see cref="T:System.Data.DataSet" /> был изменен, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Применяет XML-схему из указанного объекта <see cref="T:System.IO.Stream" /> к объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream" vsli:raw="The &lt;see langword=&quot;Stream&quot; /&gt; from which to read the schema.">Объект <see langword="Stream" />, из которого считывается схема.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Массив строк URI пространства имен, исключаемый из интерфейса схемы.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Применяет XML-схему из указанного объекта <see cref="T:System.IO.TextReader" /> к объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema.">Объект <see langword="TextReader" />, из которого считывается схема.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Массив строк URI пространства имен, исключаемый из интерфейса схемы.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified file to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Применяет XML-схему из указанного файла к классу <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName" vsli:raw="The name of the file (including the path) from which to read the schema.">Имя файла (включая путь), из которого считывается схема.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Массив строк URI пространства имен, исключаемый из интерфейса схемы.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Применяет XML-схему из указанного объекта <see cref="T:System.Xml.XmlReader" /> к объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XMLReader&quot; /&gt; from which to read the schema.">Объект <see langword="XMLReader" />, из которого считывается схема.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Массив строк URI пространства имен, исключаемый из интерфейса схемы.</param>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary vsli:raw="Deserialize all of the tables data of the DataSet from the binary or XML stream.">Десериализует все данные таблицы DataSet из двоичного потока или XML-потока.</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Inspects the format of the serialized representation of the &lt;see langword=&quot;DataSet&quot; /&gt;.">Анализирует формат сериализованного представления набора данных <see langword="DataSet" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; represents a &lt;see langword=&quot;DataSet&quot; /&gt; serialized in its binary format, &lt;see langword=&quot;false&quot; /&gt; otherwise.">Значение <see langword="true" />, если указанный объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> представляет набор данных <see langword="DataSet" />, сериализованному в двоичном формате; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">Заполняет набор данных <see cref="T:System.Data.DataSet" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />, использующего массив экземпляров <see cref="T:System.Data.DataTable" /> для предоставления сведений о схеме и пространстве имен.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий один или несколько наборов результатов.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое указывает, как строки, уже находящиеся в экземплярах <see cref="T:System.Data.DataTable" /> набора данных <see cref="T:System.Data.DataSet" />, должны объединяться со входящими строками, имеющими общий первичный ключ.</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information. Each of these tables must be a member of the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Массив экземпляров <see cref="T:System.Data.DataTable" />, из которых метод <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /> получает сведения об имени и пространстве имен. Каждая из этих таблиц должна являться членом коллекции <see cref="T:System.Data.DataTableCollection" />, находящейся в этом наборе данных <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">Заполняет набор данных <see cref="T:System.Data.DataSet" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />, использующего массив экземпляров <see cref="T:System.Data.DataTable" /> для предоставления сведений о схеме и пространстве имен.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий один или несколько наборов результатов.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое указывает, как строки, уже находящиеся в экземплярах <see cref="T:System.Data.DataTable" /> набора данных <see cref="T:System.Data.DataSet" />, должны объединяться со входящими строками, имеющими общий первичный ключ.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">Делегат <see cref="T:System.Data.FillErrorEventHandler" />, вызываемый при возникновении ошибки во время загрузки данных.</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information.">Массив экземпляров <see cref="T:System.Data.DataTable" />, из которых метод <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /> получает сведения об имени и пространстве имен.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of strings to supply the names for the tables within the &lt;see langword=&quot;DataSet&quot; /&gt;.">Заполняет набор данных <see cref="T:System.Data.DataSet" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />, используя массив строк для предоставления имен таблиц в наборе данных <see langword="DataSet" />.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий один или несколько наборов результатов.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see langword=&quot;DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое указывает, как строки, уже находящиеся в экземплярах <see cref="T:System.Data.DataTable" /> набора данных <see langword="DataSet" />, должны объединяться со входящими строками, имеющими общий первичный ключ.</param>
      <param name="tables" vsli:raw="An array of strings, from which the &lt;see langword=&quot;Load&quot; /&gt; method retrieves table name information.">Массив строк, из которого метод <see langword="Load" /> получает сведения об именах таблиц.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Осуществляет слияние массива объектов <see cref="T:System.Data.DataRow" /> и текущего класса <see cref="T:System.Data.DataSet" />.</summary>
      <param name="rows" vsli:raw="The array of &lt;see langword=&quot;DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">Массив объектов <see langword="DataRow" />, добавляемый в <see langword="DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Осуществляет слияние массива объектов <see cref="T:System.Data.DataRow" /> и текущего объекта <see cref="T:System.Data.DataSet" />, сохраняя или удаляя любые изменения в этом объекте <see langword="DataSet" /> и обрабатывая несовместимую схему в соответствии с заданными аргументами.</summary>
      <param name="rows" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">Массив объектов <see cref="T:System.Data.DataRow" />, добавляемый в <see langword="DataSet" />.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо сохранить изменения в объекте <see langword="DataSet" />; в противном случае — значение <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;.">Осуществляет слияние указанного объекта <see cref="T:System.Data.DataSet" /> и его схемы с текущим объектом <see langword="DataSet" />.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">Объект <see langword="DataSet" />, данные и схема которого подлежат слиянию.</param>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enabled.">Невозможно включить одно или более ограничений.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="dataSet" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding any changes in this &lt;see langword=&quot;DataSet&quot; /&gt; according to the given argument.">Осуществляет слияние указанного класса <see cref="T:System.Data.DataSet" /> и его схемы с текущим объектом <see langword="DataSet" />, сохраняя или удаляя любые изменения в этом объекте <see langword="DataSet" /> в соответствии с заданным аргументом.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">Объект <see langword="DataSet" />, данные и схема которого подлежат слиянию.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо сохранить изменения в текущем объекте <see langword="DataSet" />; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema with the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the current &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Осуществляет слияние указанного класса <see cref="T:System.Data.DataSet" /> и его схемы с текущим набором данных <see langword="DataSet" />, сохраняя или удаляя любые изменения в текущем наборе данных <see langword="DataSet" /> и обрабатывая несовместимую схему в соответствии с заданными аргументами.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">Объект <see langword="DataSet" />, данные и схема которого подлежат слиянию.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо сохранить изменения в текущем объекте <see langword="DataSet" />; в противном случае — значение <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="dataSet" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Осуществляет слияние указанного объекта <see cref="T:System.Data.DataTable" /> и его схемы с текущим объектом <see cref="T:System.Data.DataSet" />.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose data and schema will be merged.">Объект <see cref="T:System.Data.DataTable" />, данные и схема которого подлежат слиянию.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;table&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="table" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Осуществляет слияние указанного класса <see cref="T:System.Data.DataTable" /> и его схемы с текущим объектом <see langword="DataSet" />, сохраняя или удаляя любые изменения в этом объекте <see langword="DataSet" /> и обрабатывая несовместимую схему в соответствии с заданными аргументами.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; whose data and schema will be merged.">Объект <see langword="DataTable" />, данные и схема которого подлежат слиянию.</param>
      <param name="preserveChanges" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <param name="missingSchemaAction" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо сохранить изменения в объекте <see langword="DataSet" />; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="dataSet" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)&quot; /&gt; event.">Вызывает событие <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />.</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object is removed from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Происходит при удалении объекта <see cref="T:System.Data.DataRelation" /> из <see cref="T:System.Data.DataTable" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; being removed.">Удаляемый объект <see cref="T:System.Data.DataRelation" />.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is removed from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Происходит при удалении объекта <see cref="T:System.Data.DataTable" /> из <see cref="T:System.Data.DataSet" />.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being removed.">Удаляемый объект <see cref="T:System.Data.DataTable" />.</param>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary vsli:raw="Sends a notification that the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; property is about to change.">Посылает уведомление об изменении указанного свойства <see cref="T:System.Data.DataSet" />.</summary>
      <param name="name" vsli:raw="The name of the property that is about to change.">Имя свойства, которое нужно изменить.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный класс <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Производный объект от класса <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанные объекты <see cref="T:System.IO.Stream" /> и <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">Класс <see cref="T:System.IO.Stream" />, из которого выполняется чтение.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный класс <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema and data.">Объект <see langword="TextReader" />, из которого считывается схема и данные.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанные объекты <see cref="T:System.IO.TextReader" /> и <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">Класс <see cref="T:System.IO.TextReader" />, из которого выполняется чтение.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file.">Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный файл.</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">Имя файла (включая путь), из которого производится чтение.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный файл и <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">Имя файла (включая путь), из которого производится чтение.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlReadMode" />.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный класс <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">Класс <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанные объекты <see cref="T:System.Xml.XmlReader" /> и <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">Класс <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Считывает XML-схему из указанного класса <see cref="T:System.IO.Stream" /> в класс <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">Класс <see cref="T:System.IO.Stream" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Считывает XML-схему из указанного класса <see cref="T:System.IO.TextReader" /> в класс <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">Класс <see cref="T:System.IO.TextReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads the XML schema from the specified file into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Считывает XML-схему из указанного файла в класс <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) from which to read.">Имя файла (включая путь), из которого производится чтение.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Считывает XML-схему из указанного класса <see cref="T:System.Xml.XmlReader" /> в класс <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">Класс <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Ignores attributes and returns an empty DataSet.">Игнорирует атрибуты и возвращает пустой DataSet.</summary>
      <param name="reader" vsli:raw="The specified XML reader.">Указанное средство чтения XML.</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary vsli:raw="Rolls back all the changes made to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was created, or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">Отменяет все изменения, внесенные в класс <see cref="T:System.Data.DataSet" /> после его создания или после последнего вызова метода <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary vsli:raw="Clears all tables and removes all relations, foreign constraints, and tables from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. Subclasses should override &lt;see cref=&quot;M:System.Data.DataSet.Reset&quot; /&gt; to restore a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to its original state.">Очищает все таблицы и удаляет все связи, внешние ограничения и таблицы из <see cref="T:System.Data.DataSet" />. Для восстановления исходного состояния класса <see cref="M:System.Data.DataSet.Reset" /> необходимо переопределить метод <see cref="T:System.Data.DataSet" /> в подклассах.</summary>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Relations&quot; /&gt; property should be persisted.">Получает значение, определяющее необходимость сохранения значения свойства <see cref="P:System.Data.DataSet.Relations" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение свойства было изменено (относительно своего значения по умолчанию); в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; property should be persisted.">Получает значение, определяющее необходимость сохранения значения свойства <see cref="P:System.Data.DataSet.Tables" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение свойства было изменено (относительно своего значения по умолчанию); в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IListSource.GetList" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Объект <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Объект <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Записывает текущие данные для <see cref="T:System.Data.DataSet" /> с помощью указанного объекта <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Объект <see cref="T:System.IO.Stream" />, используемый для записи в файл.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataSet" /> с помощью указанных <see cref="T:System.IO.Stream" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Объект <see cref="T:System.IO.Stream" />, используемый для записи в файл.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Записывает текущие данные для <see cref="T:System.Data.DataSet" /> с помощью указанного объекта <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">Объект <see cref="T:System.IO.TextWriter" />, используемый для записи.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataSet" /> с помощью указанных <see cref="T:System.IO.TextWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object used to write the document.">Объект <see cref="T:System.IO.TextWriter" />, используемый для записи документа.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file.">Записывает текущие данные для <see cref="T:System.Data.DataSet" /> в указанный файл.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">Имя файла (включая путь), в который производится запись.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataSet" /> в указанный файл с помощью заданного объекта <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">Имя файла (включая путь), в который производится запись.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Записывает текущие данные для <see cref="T:System.Data.DataSet" /> в указанный класс <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">Класс <see cref="T:System.Xml.XmlWriter" />, с помощью которого осуществляется запись.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataSet" /> с помощью указанных <see cref="T:System.Xml.XmlWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">Класс <see cref="T:System.Xml.XmlWriter" />, с помощью которого осуществляется запись.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Записывает структуру <see cref="T:System.Data.DataSet" /> в качестве XML-схемы для указанного объекта <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Объект <see cref="T:System.IO.Stream" />, используемый для записи в файл.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Записывает структуру <see cref="T:System.Data.DataSet" /> в качестве XML-схемы для указанного объекта <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to write to.">Объект <see cref="T:System.IO.Stream" />, в который осуществляется запись.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Делегат, используемый для преобразования <see cref="T:System.Type" /> в строковый формат.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object.">Записывает структуру <see cref="T:System.Data.DataSet" /> в качестве XML-схемы для указанного объекта <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">Объект <see cref="T:System.IO.TextWriter" />, используемый для записи.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Записывает структуру <see cref="T:System.Data.DataSet" /> в виде схемы XML для указанного объекта <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object to write to.">Объект <see cref="T:System.IO.TextWriter" />, в который осуществляется запись.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Делегат, используемый для преобразования <see cref="T:System.Type" /> в строковый формат.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">Записывает структуру класса <see cref="T:System.Data.DataSet" /> в виде XML-схемы в файл.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">Имя файла (включая путь), в который производится запись.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">Записывает структуру класса <see cref="T:System.Data.DataSet" /> в виде XML-схемы в файл.</summary>
      <param name="fileName" vsli:raw="The name of the file to write to.">Имя файла для записи.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Делегат, используемый для преобразования <see cref="T:System.Type" /> в строковый формат.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Записывает структуру класса <see cref="T:System.Data.DataSet" /> в виде XML-схемы в объект <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Записывает структуру <see cref="T:System.Data.DataSet" /> в виде схемы XML для указанного объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write to.">Объект <see cref="T:System.Xml.XmlWriter" />, в который осуществляется запись.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Делегат, используемый для преобразования <see cref="T:System.Type" /> в строковый формат.</param>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary vsli:raw="Gets or sets a value indicating whether string comparisons within &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects are case-sensitive.">Возвращает или задает значение, определяющее, учитывается ли регистр при сравнении строк в объектах <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if string comparisons are case-sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> значение, если при сравнении строк учитывается регистр; в противном случае — <see langword="false" /> . Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary vsli:raw="Gets or sets the name of the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Возвращает или задает имя текущего <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Имя <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary vsli:raw="Gets a custom view of the data contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to allow filtering, searching, and navigating using a custom &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Получает новое представление данных класса <see cref="T:System.Data.DataSet" /> для осуществления фильтрации, поиска или перехода с помощью настраиваемого класса <see cref="T:System.Data.DataViewManager" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">Объект <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary vsli:raw="Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.">Возвращает или задает значение, определяющее соблюдение правил ограничения при попытке совершения операции обновления.</summary>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enforced.">Невозможно наложить одно или несколько ограничений.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if rules are enforced; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> значение, если правила применяются. в противном случае — <see langword="false" /> . Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information associated with the &lt;see langword=&quot;DataSet&quot; /&gt;.">Возвращает коллекцию настраиваемых данных пользователя, связанных с <see langword="DataSet" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; with all custom user information.">Класс <see cref="T:System.Data.PropertyCollection" />, содержащий все настраиваемые данные пользователя.</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Получает значение, определяющее наличие ошибок в любом из объектов <see cref="T:System.Data.DataTable" /> в классе <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any table contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Если какая бы то ни было таблица содержит ошибку; в противном случае — <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">Получает значение, указывающее, инициализирована ли таблица <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> указывает, что компонент завершил инициализацию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">Возвращает или задает сведения о языке, используемые для сравнения строк таблицы.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is &lt;see langword=&quot;null&quot; /&gt;.">Класс <see cref="T:System.Globalization.CultureInfo" />, содержащий данные о языковом стандарте, используемом пользователем на компьютере. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Возвращает или задает пространство имен <see cref="T:System.Data.DataSet" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">Пространство имен уже содержит данные.</exception>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Пространство имен <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Возвращает или задает префикс XML, который является псевдонимом пространства имен класса <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; namespace.">Префикс XML для пространства имен <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary vsli:raw="Gets the collection of relations that link tables and allow navigation from parent tables to child tables.">Получает коллекцию соотношений, связывающих таблицы и позволяющих переходить от родительских таблиц к дочерним.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">Объект <see cref="T:System.Data.DataRelationCollection" />, содержащий коллекцию объектов <see cref="T:System.Data.DataRelation" />. Если отсутствуют объекты <see cref="T:System.Data.DataRelation" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that's used during remoting.">Возвращает или задает объект <see cref="T:System.Data.SerializationFormat" /> для набора данных <see cref="T:System.Data.DataSet" />, который используется для удаленного взаимодействия.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">Объект <see cref="T:System.Data.SerializationFormat" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Возвращает или задает объект <see cref="T:System.Data.SchemaSerializationMode" /> для <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Объект <see cref="T:System.Data.SchemaSerializationMode" /> для <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Возвращает или задает тип <see cref="T:System.ComponentModel.ISite" /> для объекта <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Интерфейс <see cref="T:System.ComponentModel.ISite" /> для <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary vsli:raw="Gets the collection of tables contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Возвращает коллекцию таблиц класса <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects exist.">Коллекция <see cref="T:System.Data.DataTableCollection" />, содержащаяся в этом наборе данных <see cref="T:System.Data.DataSet" />. Если отсутствуют объекты <see cref="T:System.Data.DataTable" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary vsli:raw="Describes the serialization format for &lt;see cref=&quot;T:System.DateTime&quot; /&gt; columns in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Описывает формат сериализации для столбцов <see cref="T:System.DateTime" /> в объекте <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Local. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into Local. Serialization in this mode is always performed in Local. There is an offset during serialization.">
        <see langword="DateTime" /> всегда хранится в Local. Если значение <see cref="F:System.Data.DataSetDateTime.Utc" /> или <see cref="F:System.Data.DataSetDateTime.Unspecified" /> назначено столбцу в этом режиме, оно сначала преобразуется в Local. Сериализация в этом режиме всегда выполняется в Local. В процессе сериализации имеется смещение.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode does not cause an offset.">
        <see langword="DateTime" /> всегда хранится в Unspecified. Если значение <see cref="F:System.Data.DataSetDateTime.Local" /> или <see cref="F:System.Data.DataSetDateTime.Utc" /> назначено столбцу в этом режиме, оно сначала преобразуется в <see cref="F:System.Data.DataSetDateTime.Unspecified" />. Сериализация в этом режиме не вызывает смещения.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode causes offset. This is the default behavior and is backward compatible. This option should be thought of as being Unspecified in storage but applying an offset that is similar to &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; during serialization.">
        <see langword="DateTime" /> хранится в Unspecified. Если значение <see cref="F:System.Data.DataSetDateTime.Local" /> или <see cref="F:System.Data.DataSetDateTime.Utc" /> назначено столбцу в этом режиме, оно сначала преобразуется в <see cref="F:System.Data.DataSetDateTime.Unspecified" />. Сериализация в этом режиме вызывает смещение. Это поведение по умолчанию, обладающее обратной совместимостью. Этот параметр следует рассматривать как Unspecified в хранилище, однако применение смещения аналогично <see cref="F:System.Data.DataSetDateTime.Local" /> в процессе сериализации.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Universal Coordinated Time (UTC). If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see langword=&quot;Utc&quot; /&gt; format. Serialization in this mode is always performed in &lt;see langword=&quot;Utc&quot; /&gt;. There is no offset during serialization.">Значение <see langword="DateTime" /> хранится в UTC (Universal Coordinated Time). Если значение <see cref="F:System.Data.DataSetDateTime.Local" /> или <see cref="F:System.Data.DataSetDateTime.Unspecified" /> назначено столбцу в этом режиме, оно сначала преобразуется в формат <see langword="Utc" />. Сериализация в этом режиме всегда выполняется в <see langword="Utc" />. В процессе сериализации смещение отсутствует.</summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary vsli:raw="Marks a property, event, or extender with a description. Visual designers can display this description when referencing the member.">Помечает свойство, событие или расширитель с описанием. Это описание может быть отображено визуальным конструктором при обновлении элемента.</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSysDescriptionAttribute&quot; /&gt; class using the specified description string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSysDescriptionAttribute" /> с помощью указанной строки описания.</summary>
      <param name="description" vsli:raw="The description string.">Строка описания.</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary vsli:raw="Gets the text for the description.">Получает текст описания.</summary>
      <returns vsli:raw="The description string.">Строка описания.</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary vsli:raw="Represents one table of in-memory data.">Представляет одну таблицу данных в памяти.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary vsli:raw="Occurs after a value has been changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Происходит после изменения значения указанного объекта <see cref="T:System.Data.DataColumn" /> в <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary vsli:raw="Occurs when a value is being changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Происходит при изменении значения указанного объекта <see cref="T:System.Data.DataColumn" /> в <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">Происходит после инициализации таблицы <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has been changed successfully.">Происходит после успешного изменения <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is changing.">Происходит при изменении объекта <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary vsli:raw="Occurs after a row in the table has been deleted.">Происходит после удаления строки таблицы.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary vsli:raw="Occurs before a row in the table is about to be deleted.">Происходит перед удалением строки таблицы.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">Происходит после очистки <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">Происходит, когда очищается таблица <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary vsli:raw="Occurs when a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is inserted.">Происходит, когда вставляется новая строка <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary vsli:raw="Checks whether initialization is in progress. The initialization occurs at run time.">Проверяет, выполняется ли инициализация. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with no arguments.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" />, не передавая ему никаких аргументов.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" /> со свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">Информация, необходимая для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">Источник и назначение данного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with the specified table name.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" /> с указанным именем таблицы.</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">Имя, задаваемое таблице. Если значение параметра <paramref name="tableName" /> — <see langword="null" /> или пустая строка, имя по умолчанию присваивается при добавлении в коллекцию <see cref="T:System.Data.DataTableCollection" />.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class using the specified table name and namespace.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" /> с заданными именем таблицы и пространством имен.</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">Имя, задаваемое таблице. Если значение параметра <paramref name="tableName" /> — <see langword="null" /> или пустая строка, имя по умолчанию присваивается при добавлении в коллекцию <see cref="T:System.Data.DataTableCollection" />.</param>
      <param name="tableNamespace" vsli:raw="The namespace for the XML representation of the data stored in the &lt;see langword=&quot;DataTable&quot; /&gt;.">Пространство имен для XML-представления данных, хранящихся в <see langword="DataTable" />.</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this table since the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">Фиксирует все изменения, внесенные в таблицу после последнего вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Начинает инициализацию <see cref="T:System.Data.DataTable" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary vsli:raw="Turns off notifications, index maintenance, and constraints while loading data.">Отключает уведомления, ведение индексов и ограничения в процессе загрузки данных.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of all data.">Очищает <see cref="T:System.Data.DataTable" /> от всех данных.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary vsli:raw="Clones the structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas and constraints.">Копирует структуру объекта <see cref="T:System.Data.DataTable" />, включая все схемы и ограничения <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Новый класс <see cref="T:System.Data.DataTable" />, имеющий ту же схему, что и текущий класс <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary vsli:raw="Computes the given expression on the current rows that pass the filter criteria.">Вычисляет заданное выражение для текущих строк, отвечающих условию фильтра.</summary>
      <param name="expression" vsli:raw="The expression to compute.">Вычисляемое выражение.</param>
      <param name="filter" vsli:raw="The filter to limit the rows that evaluate in the expression.">Фильтр, ограничивающий число строк, используемых выражением.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt;, set to the result of the computation. If the expression evaluates to null, the return value will be &lt;see cref=&quot;F:System.DBNull.Value&quot; /&gt;.">Класс <see cref="T:System.Object" />, которому задан результат сравнения. Если выражение имеет значение null, возвращаемое значение будет <see cref="F:System.DBNull.Value" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Копирует структуру и данные для <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure (table schemas and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA; If these classes have been derived, the copy will also be of the same derived classes.  &#xA;  &#xA; &lt;see cref=&quot;M:System.Data.DataTable.Copy&quot; /&gt; creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure and data as the original &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. To copy the structure to a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, but not the data, use &lt;see cref=&quot;M:System.Data.DataTable.Clone&quot; /&gt;.">Новый класс <see cref="T:System.Data.DataTable" />, имеющий ту же структуру (схемы таблиц и ограничения) и данные, что и класс <see cref="T:System.Data.DataTable" />.  
  
Если эти классы являются производными, то и копия также будет таким же производным классом.  
  
 <see cref="M:System.Data.DataTable.Copy" /> создает новый <see cref="T:System.Data.DataTable" /> с той же структурой и данными, как и оригинальный <see cref="T:System.Data.DataTable" />. Чтобы скопировать структуру в новый <see cref="T:System.Data.DataTable" />, но не данные, используйте <see cref="M:System.Data.DataTable.Clone" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; corresponding to the data within this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Возвращает объект <see cref="T:System.Data.DataTableReader" />, соответствующий данным в этой таблице <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one result set, corresponding to the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance.">Объект <see cref="T:System.Data.DataTableReader" />, содержащий один набор результатов, который соответствует исходному экземпляру <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary vsli:raw="Creates a new instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Создает новый экземпляр <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The new expression.">Новое выражение.</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Завершает инициализацию <see cref="T:System.Data.DataTable" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary vsli:raw="Turns on notifications, index maintenance, and constraints after loading data.">Включает уведомления, ведение индексов и ограничения после загрузки данных.</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains all changes made to it since it was loaded or &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was last called.">Получает копию таблицы <see cref="T:System.Data.DataTable" />, содержащую все изменения, внесенные после ее загрузки или после последнего вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if no changes are found.">Копия изменений из данного объекта <see cref="T:System.Data.DataTable" /> или значение <see langword="null" />, если изменения не найдены.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Получает копию таблицы <see cref="T:System.Data.DataTable" />, содержащую все изменения, внесенные после ее последней загрузки или после вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" /> и отфильтрованные по параметру <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.DataRowState" />.</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that can have actions performed on it, and later be merged back in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Отфильтрованная копия таблицы <see cref="T:System.Data.DataTable" />, с которой можно работать и позднее объединить обратно с <see cref="T:System.Data.DataTable" />, используя метод <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Если строки с требуемым типом <see cref="T:System.Data.DataRowState" /> отсутствуют, метод вернет значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="This method returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance containing the Web Services Description Language (WSDL) that describes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for Web Services.">Этот метод возвращает экземпляр <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий язык описания веб-служб (WSDL), который описывает объект <see cref="T:System.Data.DataTable" /> для веб-служб.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">Экземпляр <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">Экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain errors.">Получает массив объектов <see cref="T:System.Data.DataRow" />, содержащих ошибки.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that have errors.">Массив объектов <see cref="T:System.Data.DataRow" /> с ошибками.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Заполняет объект сведений о сериализации данными, необходимыми для сериализации <see cref="T:System.Data.DataTable" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные, связанные с объектом <see cref="T:System.Data.DataTable" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий исходный объект и объект назначения для сериализованного потока, связанного с объектом <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Значением параметра <paramref name="info" /> является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary vsli:raw="Gets the row type.">Получает тип строки.</summary>
      <returns vsli:raw="The type of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, который описывает XML-представление объекта, созданного методом <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и используемого методом <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary vsli:raw="Copies a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; into a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, preserving any property settings, as well as original and current values.">Копирует объект <see cref="T:System.Data.DataRow" /> в <see cref="T:System.Data.DataTable" />, сохраняя все параметры свойств, а также текущие и исходные значения.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to be imported.">Импортируемый объект <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows.">Заполняет таблицу <see cref="T:System.Data.DataTable" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />. Если объект <see cref="T:System.Data.DataTable" /> уже содержит строки, входящие данные из источника данных объединяются с существующими строками.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий набор результатов.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see langword=&quot;DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the &lt;paramref name=&quot;loadOption&quot; /&gt; parameter.">Заполняет таблицу <see cref="T:System.Data.DataTable" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />. Если объект <see langword="DataTable" /> уже содержит строки, поступающие данные из источника данных объединяются с существующими строками согласно значению параметра <paramref name="loadOption" />.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий один или несколько наборов результатов.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое показывает способ комбинирования строк, уже находящихся в таблице <see cref="T:System.Data.DataTable" />, с поступающими строками, которые совместно используют один и тот же первичный ключ.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using an error-handling delegate.">Заполняет таблицу <see cref="T:System.Data.DataTable" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />, использующего делегат для обработки ошибок.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий набор результатов.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое показывает способ комбинирования строк, уже находящихся в таблице <see cref="T:System.Data.DataTable" />, с поступающими строками, которые совместно используют один и тот же первичный ключ.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">Делегат <see cref="T:System.Data.FillErrorEventHandler" />, вызываемый при возникновении ошибки во время загрузки данных.</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">Находит и обновляет конкретную строку. Если нужная строка не найдена, то с помощью заданных значений создается новая строка.</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">Массив значений, используемых для создания новой строки.</param>
      <param name="fAcceptChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to accept changes; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> — принять изменения; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">Размер массива превышает число столбцов в таблице.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value doesn't match its respective column type.">Значение не отвечает соответствующему типу столбца.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">Добавление строки нарушает ограничение.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Attempting to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">Попытка поместить значение null в столбец, у которого <see cref="P:System.Data.DataColumn.AllowDBNull" /> имеет значение "false".</exception>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Новый объект <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">Находит и обновляет конкретную строку. Если нужная строка не найдена, то с помощью заданных значений создается новая строка.</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">Массив значений, используемых для создания новой строки.</param>
      <param name="loadOption" vsli:raw="Used to determine how the array values are applied to the corresponding values in an existing row.">Используется для определения способа применения значений массива к соответствующим значениям в существующей строке.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Новый объект <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Объединяет заданный объект <see cref="T:System.Data.DataTable" /> с текущим объектом <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Объект <see cref="T:System.Data.DataTable" />, объединяемый с текущим объектом <see cref="T:System.Data.DataTable" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">Объедините заданный объект <see cref="T:System.Data.DataTable" /> с текущим объектом <see langword="DataTable" />, указав, следует ли сохранить изменения в контейнере данных <see langword="DataTable" />.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to be merged with the current &lt;see langword=&quot;DataTable&quot; /&gt;.">Объект <see langword="DataTable" />, объединяемый с текущим объектом <see langword="DataTable" />.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо сохранить изменения в текущем объекте <see langword="DataTable" />; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes and how to handle missing schema in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">Объедините заданный объект <see cref="T:System.Data.DataTable" /> с текущим объектом <see langword="DataTable" />, указав, следует ли сохранить изменения и способ обработки отсутствующей схемы в текущем контейнере данных <see langword="DataTable" />.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Объект <see cref="T:System.Data.DataTable" />, объединяемый с текущим объектом <see cref="T:System.Data.DataTable" />.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо сохранить изменения в текущем объекте <see cref="T:System.Data.DataTable" />; в противном случае — значение <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the table.">Создает новый класс <see cref="T:System.Data.DataRow" />, имеющий ту же схему, что и таблица.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Класс <see cref="T:System.Data.DataRow" />, имеющий ту же схему, что и класс <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Возвращает массив <see cref="T:System.Data.DataRow" />.</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that describes the size of the array.">Значение <see cref="T:System.Int32" />, описывающее размер массива.</param>
      <returns vsli:raw="The new array.">Новый массив.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary vsli:raw="Creates a new row from an existing row.">Создает новую строку из существующей строки.</summary>
      <param name="builder" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowBuilder&quot; /&gt; object.">Объект <see cref="T:System.Data.DataRowBuilder" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; derived class.">Производный класс <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanged&quot; /&gt; event.">Вызывает событие <see cref="E:System.Data.DataTable.ColumnChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.DataColumnChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Вызывает событие <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.DataColumnChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Вызывает событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is being removed.">Сообщает классу <see cref="T:System.Data.DataTable" /> об удалении объекта <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; being removed.">Удаляемый объект <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt; event.">Вызывает событие <see cref="E:System.Data.DataTable.RowChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Вызывает событие <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; event.">Вызывает событие <see cref="E:System.Data.DataTable.RowDeleted" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt; event.">Вызывает событие <see cref="E:System.Data.DataTable.RowDeleting" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableCleared&quot; /&gt; event.">Вызывает событие <see cref="E:System.Data.DataTable.TableCleared" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.DataTableClearEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableClearing&quot; /&gt; event.">Вызывает событие <see cref="E:System.Data.DataTable.TableClearing" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.DataTableClearEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableNewRow&quot; /&gt; event.">Вызывает событие <see cref="E:System.Data.DataTable.TableNewRow" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.DataTableNewRowEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Считывает XML-схему и данные в <see cref="T:System.Data.DataTable" />, используя указанный класс <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Производный объект от класса <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Считывает XML-схему и данные в <see cref="T:System.Data.DataTable" />, используя указанный класс <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be used to read the data.">Объект <see cref="T:System.IO.TextReader" />, используемый для чтения данных.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">Читает данные и схему XML в <see cref="T:System.Data.DataTable" /> из указанного файла.</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the data.">Имя файла, из которого читаются данные.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML Schema and Data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Читает данные и схему XML в <see cref="T:System.Data.DataTable" />, используя указанное средство чтения <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be used to read the data.">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения данных.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified stream.">Считывает XML-схему в <see cref="T:System.Data.DataTable" />, используя указанный поток.</summary>
      <param name="stream" vsli:raw="The stream used to read the schema.">Поток, используемый для чтения схемы.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Считывает XML-схему в <see cref="T:System.Data.DataTable" />, используя указанный объект <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; used to read the schema information.">Средство чтения <see cref="T:System.IO.TextReader" />, используемое для чтения сведений схемы.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">Считывает XML-схему из указанного файла в таблицу <see cref="T:System.Data.DataTable" />.</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the schema information.">Имя файла, из которого считываются сведения схемы.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Считывает XML-схему в <see cref="T:System.Data.DataTable" />, используя указанный объект <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the schema information.">Средство чтения <see cref="T:System.Xml.XmlReader" />, используемое для чтения сведений схемы.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Reads from an XML stream.">Считывает из XML-потока.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Объект <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary vsli:raw="Rolls back all changes that have been made to the table since it was loaded, or the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">Выполняется откат всех изменений, внесенных в таблицу с момента ее загрузки или после последнего вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary vsli:raw="Resets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to its original state. Reset removes all data, indexes, relations, and columns of the table. If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.">Возвращает объект <see cref="T:System.Data.DataTable" /> в исходное состояние. Сброс удаляет все данные, индексы, связи и столбцы таблицы. Если набор данных содержит таблицы данных, то таблица по-прежнему будет частью набора данных после того, как таблица будет сброшена.</summary>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Получает массив всех объектов <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Массив объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria.">Получает массив всех объектов <see cref="T:System.Data.DataRow" />, отвечающих условиям фильтра.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Условия фильтрации строк. Примеры по фильтрации строк см. в разделе Синтаксис DataView RowFilter [C#].</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Массив объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria, in the specified sort order.">Получает массив всех объектов <see cref="T:System.Data.DataRow" />, отвечающих условиям фильтра, согласно указанному порядку сортировки.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Условия фильтрации строк. Примеры по фильтрации строк см. в разделе Синтаксис DataView RowFilter [C#].</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">Строка, задающая столбец и порядок его сортировки.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects matching the filter expression.">Массив объектов <see cref="T:System.Data.DataRow" />, отвечающих выражению для фильтра.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter in the order of the sort that match the specified state.">Получает массив всех объектов <see cref="T:System.Data.DataRow" />, отвечающих условиям фильтра, согласно порядку сортировки, соответствующему указанному состоянию.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Условия фильтрации строк. Примеры по фильтрации строк см. в разделе Синтаксис DataView RowFilter [C#].</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">Строка, задающая столбец и порядок его сортировки.</param>
      <param name="recordStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.DataViewRowState" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Массив объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; that can be bound to a data source from the object.">Объект <see cref="T:System.Collections.IList" />, который можно привязать к источнику данных из объекта.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, который описывает XML-представление объекта, созданного методом <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и используемого методом <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="An XmlReader.">XmlReader.</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="An XmlWriter.">XmlWriter.</param>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt;, if there is one as a concatenated string.">Получает свойства <see cref="P:System.Data.DataTable.TableName" /> и <see cref="P:System.Data.DataTable.DisplayExpression" />, если существует сцепленная строка.</summary>
      <returns vsli:raw="A string consisting of the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt; values.">Строка, состоящая из значений свойств <see cref="P:System.Data.DataTable.TableName" /> и <see cref="P:System.Data.DataTable.DisplayExpression" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Поток, в который записываются данные.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.Stream" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Поток, в который записываются данные.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> в указанный файл с помощью заданного объекта <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Поток, в который записываются данные.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> в указанный файл с помощью заданного объекта <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Поток, в который записываются данные.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">
        <see cref="T:System.IO.TextWriter" /> — используется для записи содержимого.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.TextWriter" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">
        <see cref="T:System.IO.TextWriter" /> — используется для записи содержимого.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.IO.TextWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">Класс <see cref="T:System.IO.TextWriter" />, используемый для записи документа.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.IO.TextWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">Класс <see cref="T:System.IO.TextWriter" />, используемый для записи документа.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file.">Записывает текущее содержимое таблицы <see cref="T:System.Data.DataTable" /> в формате XML, используя указанный файл.</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">Файл, в который записываются XML-данные.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Записывает текущее содержимое таблицы <see cref="T:System.Data.DataTable" /> в формате XML, используя указанный файл. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">Файл, в который записываются XML-данные.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" />, используя указанный файл и заданное перечисление <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">Имя файла, в который записываются данные.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" />, используя указанный файл и заданное перечисление <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">Имя файла, в который записываются данные.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">Средство записи <see cref="T:System.Xml.XmlWriter" />, с помощью которого записывается содержимое.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">Средство записи <see cref="T:System.Xml.XmlWriter" />, с помощью которого записывается содержимое.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.Xml.XmlWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">Класс <see cref="T:System.Xml.XmlWriter" />, используемый для записи документа.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.Xml.XmlWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">Класс <see cref="T:System.Xml.XmlWriter" />, используемый для записи документа.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream.">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный поток.</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">Поток, в который записывается XML-схема.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный поток. Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">Поток, в который записывается XML-схема.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">Класс <see cref="T:System.IO.TextWriter" />, с помощью которого осуществляется запись.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.IO.TextWriter" />. Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">Класс <see cref="T:System.IO.TextWriter" />, с помощью которого осуществляется запись.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file.">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный файл.</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">Имя используемого файла.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный файл. Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">Имя используемого файла.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to use.">Используемый <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.Xml.XmlWriter" />. Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">Класс <see cref="T:System.Xml.XmlWriter" />, используемый для записи документа.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</param>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary vsli:raw="Indicates whether string comparisons within the table are case-sensitive.">Показывает, учитывается ли регистр при сравнении строк в таблице.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the comparison is case-sensitive; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is set to the parent &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;P:System.Data.DataSet.CaseSensitive&quot; /&gt; property, or &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; was created independently of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Значение <see langword="true" />, если при сравнении регистр учитывается; в противном случае — значение <see langword="false" />. Значение по умолчанию устанавливается равным значению свойства <see cref="T:System.Data.DataSet" /> родительского объекта <see cref="P:System.Data.DataSet.CaseSensitive" />, или значение <see langword="false" />, если объект <see cref="T:System.Data.DataTable" /> создавался независимо от класса <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary vsli:raw="Gets the collection of child relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Получает коллекцию дочерних отношений для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the child relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">Коллекция <see cref="T:System.Data.DataRelationCollection" />, содержащая дочерние отношения для таблицы. Если отсутствуют объекты <see cref="T:System.Data.DataRelation" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary vsli:raw="Gets the collection of columns that belong to this table.">Получает коллекцию столбцов, принадлежащих данной таблице.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects exist.">Коллекция <see cref="T:System.Data.DataColumnCollection" />, содержащая коллекцию объектов <see cref="T:System.Data.DataColumn" /> для таблицы. Если отсутствуют объекты <see cref="T:System.Data.DataColumn" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary vsli:raw="Gets the collection of constraints maintained by this table.">Получает коллекцию ограничений, содержащихся в данной таблице.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects exist.">Коллекция <see cref="T:System.Data.ConstraintCollection" />, содержащая коллекцию объектов <see cref="T:System.Data.Constraint" /> для таблицы. Если отсутствуют объекты <see cref="T:System.Data.Constraint" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">Получает класс <see cref="T:System.Data.DataSet" />, к которому принадлежит данная таблица.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">Набор <see cref="T:System.Data.DataSet" />, к которому принадлежит данная таблица.</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary vsli:raw="Gets a customized view of the table that may include a filtered view, or a cursor position.">Получает настраиваемое представление таблицы, которая может включать в себя представление с фильтром или положение курсора.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Объект <see cref="T:System.Data.DataView" />, связанный с объектом <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary vsli:raw="Gets or sets the expression that returns a value used to represent this table in the user interface. The &lt;see langword=&quot;DisplayExpression&quot; /&gt; property lets you display the name of this table in a user interface.">Возвращает или задает выражение, возвращающее значение, используемое для представления таблицы в пользовательском интерфейсе. Свойство <see langword="DisplayExpression" /> позволяет отображать имя этой таблицы в пользовательском интерфейсе.</summary>
      <returns vsli:raw="A display string.">Строка отображения данных.</returns>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information.">Получает коллекцию настраиваемых пользовательских сведений.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains custom user information.">Класс <see cref="T:System.Data.PropertyCollection" />, содержащий настраиваемые данные пользователя.</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the rows in any of the tables of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the table belongs.">Получает значение, указывающее наличие ошибок в строках таблиц класса <see cref="T:System.Data.DataSet" />, к которому принадлежат таблицы.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if errors exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если ошибки есть; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">Получает значение, указывающее, инициализирована ли таблица <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> указывает, что компонент завершил инициализацию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">Возвращает или задает сведения о языке, используемые для сравнения строк таблицы.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; (returned by the &lt;see cref=&quot;P:System.Data.DataSet.Locale&quot; /&gt; property) to which the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; belongs; if the table doesn't belong to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, the default is the current system &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">Класс <see cref="T:System.Globalization.CultureInfo" />, содержащий данные о языковом стандарте, используемом пользователем на компьютере. Значением по умолчанию является языковый стандарт <see cref="T:System.Data.DataSet" /> объекта <see cref="T:System.Globalization.CultureInfo" /> (возвращаемый свойством <see cref="P:System.Data.DataSet.Locale" />), к которому принадлежит таблица <see cref="T:System.Data.DataTable" />; если таблица не принадлежит набору <see cref="T:System.Data.DataSet" />, значением по умолчанию является языковый стандарт <see cref="T:System.Globalization.CultureInfo" /> текущей системы.</returns>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary vsli:raw="Gets or sets the initial starting size for this table.">Возвращает или задает начальный размер таблицы.</summary>
      <returns vsli:raw="The initial starting size in rows of this table. The default is 50.">Начальный размер (в строках) этой таблицы. Число по умолчанию — 50.</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Возвращает или задает пространство имен для представления данных объекта <see cref="T:System.Data.DataTable" /> в формате XML.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Пространство имен <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary vsli:raw="Gets the collection of parent relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Получает коллекцию родительских отношений для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the parent relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">Коллекция <see cref="T:System.Data.DataRelationCollection" />, содержащая родительские отношения для таблицы. Если отсутствуют объекты <see cref="T:System.Data.DataRelation" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Возвращает или задает пространство имен для представления данных объекта <see cref="T:System.Data.DataTable" /> в формате XML.</summary>
      <returns vsli:raw="The prefix of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Префикс объекта <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary vsli:raw="Gets or sets an array of columns that function as primary keys for the data table.">Возвращает или задает массив столбцов, которые являются столбцами первичного ключа для таблицы данных.</summary>
      <exception cref="T:System.Data.DataException" vsli:raw="The key is a foreign key.">Ключ является внешним ключом.</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Массив объектов <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format.">Возвращает или задает формат сериализации.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">Перечисление <see cref="T:System.Data.SerializationFormat" />, задающее сериализацию типа <see langword="Binary" /> или <see langword="Xml" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary vsli:raw="Gets the collection of rows that belong to this table.">Получает коллекцию строк, принадлежащих данной таблице.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; that contains &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Коллекция <see cref="T:System.Data.DataRowCollection" />, содержащая объекты <see cref="T:System.Data.DataRow" />; в противном случае — значение null, если нет ни одного объекта <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Возвращает или задает тип <see cref="T:System.ComponentModel.ISite" /> для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Интерфейс <see cref="T:System.ComponentModel.ISite" /> для <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a collection of &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; objects; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если коллекция является коллекцией объектов <see cref="T:System.Collections.IList" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Возвращает или задает имя таблицы для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) is passed in and this table belongs to a collection.">Передается значение <see langword="null" /> или пустая строка (""), а таблица принадлежит коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The table belongs to a collection that already has a table with the same name. (Comparison is case-sensitive).">Таблица принадлежит коллекции, которая уже содержит таблицу с таким же именем. (При сравнении учитывается регистр).</exception>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Имя <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">Предоставляет данные для метода <see cref="M:System.Data.DataTable.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTableClearEventArgs" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">Объект <see cref="T:System.Data.DataTable" />, строки которого очищаются.</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary vsli:raw="Gets the table whose rows are being cleared.">Возвращает таблицу, строки которой очищаются.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">Объект <see cref="T:System.Data.DataTable" />, строки которого очищаются.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary vsli:raw="Gets the table name whose rows are being cleared.">Возвращает имя таблицы, строки которой очищаются.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the table name.">Значение <see cref="T:System.String" />, указывающее имя таблицы.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary vsli:raw="Gets the namespace of the table whose rows are being cleared.">Возвращает пространство имен таблицы, строки которой очищаются.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the namespace name.">Значение <see cref="T:System.String" />, указывающее имя пространства имен.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">Представляет метод, обрабатывающий метод <see cref="M:System.Data.DataTable.Clear" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.DataTableClearEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary vsli:raw="Represents the collection of tables for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Представляет коллекцию таблиц для <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">Происходит после изменения коллекции <see cref="T:System.Data.DataTableCollection" /> в результате добавления или удаления объектов <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary vsli:raw="Occurs while the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changing because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">Происходит при изменении коллекции <see cref="T:System.Data.DataTableCollection" /> в результате добавления или удаления объектов <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using a default name and adds it to the collection.">Создает новый объект <see cref="T:System.Data.DataTable" />, используя имя по умолчанию, и добавляет его в коллекцию.</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Вновь созданный <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary vsli:raw="Adds the specified &lt;see langword=&quot;DataTable&quot; /&gt; to the collection.">Добавляет указанный параметр <see langword="DataTable" /> в коллекцию.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; object to add.">Добавляемый объект <see langword="DataTable" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">Значением, заданным для таблицы, является <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table already belongs to this collection, or belongs to another collection.">Таблица уже принадлежит данной или другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. The comparison is not case sensitive.">Таблица в коллекции имеет такое же имя. Сравнение выполняется без учета регистра.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">Создает объект <see cref="T:System.Data.DataTable" />, используя заданное имя, и добавляет его в коллекцию.</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Имя, задаваемое созданному объекту <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">Таблица в коллекции имеет такое же имя. (Сравнение выполняется без учета регистра).</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Вновь созданный <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">Создает объект <see cref="T:System.Data.DataTable" />, используя заданное имя, и добавляет его в коллекцию.</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Имя, задаваемое созданному объекту <see cref="T:System.Data.DataTable" />.</param>
      <param name="tableNamespace" vsli:raw="The namespace to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Пространство имен, задаваемое созданному объекту <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">Таблица в коллекции имеет такое же имя. (Сравнение выполняется без учета регистра).</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Вновь созданный <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; array to the end of the collection.">Копирует элементы указанного массива <see cref="T:System.Data.DataTable" /> в конец коллекции.</summary>
      <param name="tables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to add to the collection.">Массив объектов <see cref="T:System.Data.DataTable" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object can be removed from the collection.">Проверяет возможность удаления указанного объекта <see cref="T:System.Data.DataTable" /> из коллекции.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; in the collection to perform the check against.">Объект <see langword="DataTable" /> в коллекции, для которого производится проверка.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the table can be removed; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если таблицу можно удалить; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary vsli:raw="Clears the collection of all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Очищает коллекцию от всех объектов <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name exists in the collection.">Получает значение, показывающее, существует ли объект <see cref="T:System.Data.DataTable" /> с указанным именем в коллекции.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Имя искомого объекта <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если указанная таблица существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name and table namespace exists in the collection.">Получает значение, показывающее, существует ли объект <see cref="T:System.Data.DataTable" /> с указанным именем и пространство имен для таблицы в коллекции.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Имя искомого объекта <see cref="T:System.Data.DataTable" />.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Имя пространства имен объекта <see cref="T:System.Data.DataTable" />, в котором осуществляется поиск.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если указанная таблица существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified destination array index.">Копирует все элементы текущей коллекции <see cref="T:System.Data.DataTableCollection" /> в одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса целевого массива.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; object's elements into.">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы текущего объекта <see cref="T:System.Data.DataTableCollection" />.</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">Индекс целевого массива <see cref="T:System.Array" />, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Возвращает индекс указанного объекта <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to search for.">Объект <see langword="DataTable" />, который требуется найти.</param>
      <returns vsli:raw="The zero-based index of the table, or -1 if the table is not found in the collection.">Индекс (с нуля) таблицы или значение -1, если таблица не найдена в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index in the collection of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">Получает индекс объекта <see cref="T:System.Data.DataTable" /> с указанным именем в коллекции.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; object to look for.">Имя искомого объекта <see langword="DataTable" />.</param>
      <returns vsli:raw="The zero-based index of the &lt;see langword=&quot;DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">Индекс (с нуля) объекта <see langword="DataTable" /> с указанным именем или -1, если таблица не существует в коллекции.  
  
 <block subset="none" type="note"><para>  
 Возвращает значение -1, когда два или более столбцов имеют одно и то же имя, но различные пространства имен. Вызов не последует, если имеется какая-либо неопределенность при сопоставлении имени таблицы точно одной таблице.</para></block></returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary vsli:raw="Gets the index in the collection of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Получает индекс указанного объекта <see cref="T:System.Data.DataTable" /> в коллекции.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to look for.">Имя искомого объекта <see cref="T:System.Data.DataTable" />.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Имя пространства имен объекта <see cref="T:System.Data.DataTable" />, в котором осуществляется поиск.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">Индекс (с нуля) объекта <see cref="T:System.Data.DataTable" /> с указанным именем или -1, если таблица не существует в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object from the collection.">Удаляет указанный объект <see cref="T:System.Data.DataTable" /> из коллекции.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">Объект <see langword="DataTable" /> для удаления.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">Значением, заданным для таблицы, является <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table does not belong to this collection.  &#xA;  &#xA; -or-  &#xA;  &#xA; The table is part of a relationship.">Таблица не принадлежит этой коллекции.  
  
 -или-  
  
 Таблица является частью отношения.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">Удаляет объект <see cref="T:System.Data.DataTable" /> с указанным именем из коллекции.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">Имя удаляемого объекта <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">В коллекции нет таблицы с указанным именем.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">Удаляет объект <see cref="T:System.Data.DataTable" /> с указанным именем из коллекции.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">Имя удаляемого объекта <see cref="T:System.Data.DataTable" />.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Имя пространства имен объекта <see cref="T:System.Data.DataTable" />, в котором осуществляется поиск.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">В коллекции нет таблицы с указанным именем.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index from the collection.">Удаляет объект <see cref="T:System.Data.DataTable" /> с указанным индексом из коллекции.</summary>
      <param name="index" vsli:raw="The index of the &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">Индекс удаляемого объекта <see langword="DataTable" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table at the specified index.">В коллекции нет таблицы по указанному индексу.</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index.">Возвращает объект <see cref="T:System.Data.DataTable" /> по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Отсчитываемый от нуля индекс искомого объекта <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">Значение индекса больше числа элементов в коллекции.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified index; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">Объект <see cref="T:System.Data.DataTable" /> с указанным индексом; в противном случае <see langword="null" /> , если объект не <see cref="T:System.Data.DataTable" /> существует.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">Возвращает объект <see cref="T:System.Data.DataTable" /> с указанным именем.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">Имя искомого объекта <see langword="DataTable" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">Объект <see cref="T:System.Data.DataTable" /> с указанным именем; в противном случае — значение <see langword="null" />, если объект <see cref="T:System.Data.DataTable" /> не существует.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name in the specified namespace.">Получает объект <see cref="T:System.Data.DataTable" /> с указанным именем в указанном пространстве имен.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">Имя искомого объекта <see langword="DataTable" />.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Имя пространства имен объекта <see cref="T:System.Data.DataTable" />, в котором осуществляется поиск.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">Объект <see cref="T:System.Data.DataTable" /> с указанным именем; в противном случае — значение <see langword="null" />, если объект <see cref="T:System.Data.DataTable" /> не существует.</returns>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class. &lt;see cref=&quot;T:System.Data.DataTableExtensions&quot; /&gt; is a static class.">Определяет методы расширения для класса <see cref="T:System.Data.DataTable" />. <see cref="T:System.Data.DataTableExtensions" /> является статическим классом.</summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Создает и возвращает объект <see cref="T:System.Data.DataView" /> с поддержкой LINQ.</summary>
      <param name="table" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">Исходный объект <see cref="T:System.Data.DataTable" />, на основе которого создается объект <see cref="T:System.Data.DataView" /> с поддержкой LINQ.</param>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Объект <see cref="T:System.Data.DataView" /> с поддержкой LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object representing the LINQ to DataSet query.">Создает и возвращает объект <see cref="T:System.Data.DataView" /> с поддержкой LINQ, представляющий запрос LINQ to DataSet.</summary>
      <param name="source" vsli:raw="The source LINQ to DataSet query from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">Исходный запрос LINQ to DataSet, на основе которого создается объект <see cref="T:System.Data.DataView" /> с поддержкой LINQ.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип объектов в исходной последовательности, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Объект <see cref="T:System.Data.DataView" /> с поддержкой LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">Возвращает объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, где универсальный параметр <paramref name="T" /> имеет значение <see cref="T:System.Data.DataRow" />. Этот объект может использоваться в выражении LINQ или запросе метода.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to make enumerable.">Исходный объект <see cref="T:System.Data.DataTable" />, который требуется сделать перечисляемым.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Исходный объект <see cref="T:System.Data.DataTable" /> имеет значение <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, где универсальный параметр <paramref name="T" /> имеет значение <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains copies of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Возвращает объект <see cref="T:System.Data.DataTable" />, содержащий копии объектов <see cref="T:System.Data.DataRow" /> при заданном входном объекте <see cref="T:System.Collections.Generic.IEnumerable`1" /> и универсальном параметре <paramref name="T" />, равном <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">Исходная последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип объектов в исходной последовательности, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; and a new table cannot be created.">Исходная последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" /> имеет значение <see langword="null" /> и создание новой таблицы невозможно.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">Объект <see cref="T:System.Data.DataRow" /> в исходной последовательности находится в состоянии <see cref="F:System.Data.DataRowState.Deleted" />.  
  
Исходная последовательность не содержит объектов <see cref="T:System.Data.DataRow" />.  
  
Объект <see cref="T:System.Data.DataRow" /> в исходной последовательности имеет значение <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains the input sequence as the type of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Объект <see cref="T:System.Data.DataTable" />, содержащий входную последовательность как тип объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Копирует объекты <see cref="T:System.Data.DataRow" /> в указанный объект <see cref="T:System.Data.DataTable" /> с заданным входным объектом <see cref="T:System.Collections.Generic.IEnumerable`1" />, где универсальный параметр <paramref name="T" /> имеет значение <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">Исходная последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> — объект назначения.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">Перечисление <see cref="T:System.Data.LoadOption" />, указывающее параметры загрузки <see cref="T:System.Data.DataTable" />.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип объектов в исходной последовательности, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Копируемые объекты <see cref="T:System.Data.DataRow" /> не соответствуют схеме объекта назначения <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Исходная последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" /> имеет значение <see langword="null" /> либо конечный объект <see cref="T:System.Data.DataTable" /> равен <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">Объект <see cref="T:System.Data.DataRow" /> в исходной последовательности находится в состоянии <see cref="F:System.Data.DataRowState.Deleted" />.  
  
Исходная последовательность не содержит объектов <see cref="T:System.Data.DataRow" />.  
  
Объект <see cref="T:System.Data.DataRow" /> в исходной последовательности имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Копирует объекты <see cref="T:System.Data.DataRow" /> в указанный объект <see cref="T:System.Data.DataTable" /> с заданным входным объектом <see cref="T:System.Collections.Generic.IEnumerable`1" />, где универсальный параметр <paramref name="T" /> имеет значение <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">Исходная последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> — объект назначения.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">Перечисление <see cref="T:System.Data.LoadOption" />, указывающее параметры загрузки <see cref="T:System.Data.DataTable" />.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate that represents the method that will handle an error.">Делегат <see cref="T:System.Data.FillErrorEventHandler" />, представляющий метод, который будет обрабатывать ошибки.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип объектов в исходной последовательности, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Копируемые объекты <see cref="T:System.Data.DataRow" /> не соответствуют схеме объекта назначения <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Исходная последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" /> имеет значение <see langword="null" /> либо конечный объект <see cref="T:System.Data.DataTable" /> равен <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; -or-  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">Объект <see cref="T:System.Data.DataRow" /> в исходной последовательности находится в состоянии <see cref="F:System.Data.DataRowState.Deleted" />.  
  
-или- 
Исходная последовательность не содержит объектов <see cref="T:System.Data.DataRow" />.  
  
-или- 
Объект <see cref="T:System.Data.DataRow" /> в исходной последовательности имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">Предоставляет данные для метода <see cref="M:System.Data.DataTable.NewRow" />.</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt;.">Инициализирует новый экземпляр <see cref="T:System.Data.DataTableNewRowEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being added.">Добавляемый объект <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary vsli:raw="Gets the row that is being added.">Получает добавляемую строку.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is being added.">Добавляемый объект <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">Представляет метод, обрабатывающий метод <see cref="M:System.Data.DataTable.NewRow" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Data.DataTableNewRowEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains the contents of one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects in the form of one or more read-only, forward-only result sets.">Объект <see cref="T:System.Data.DataTableReader" /> получает содержимое одного или нескольких объектов <see cref="T:System.Data.DataTable" /> в виде одного или нескольких однопроходных результирующих наборов, доступных только для чтения.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class by using data from the supplied &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTableReader" />, с использованием данных из заданного объекта <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains its result set.">Объект <see cref="T:System.Data.DataTable" />, из которого новый объект <see cref="T:System.Data.DataTableReader" /> получает свой результирующий набор.</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class using the supplied array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTableReader" />, используя указанный массив объектов <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that supplies the results for the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; object.">Массив объектов <see cref="T:System.Data.DataTable" />, который предоставляет результаты для нового объекта <see cref="T:System.Data.DataTableReader" />.</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary vsli:raw="Closes the current &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Закрывает текущий объект <see cref="T:System.Data.DataTableReader" />.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Boolean" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Boolean&quot; /&gt;.">Указанный столбец не содержит значения <see langword="Boolean" />.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">Возвращает значение указанного столбца в виде байта.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte.">Указанный столбец не содержит данных с типом byte.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.">Считывает поток байтов с заданного смещения столбца в буфер в виде массива, который начинается с конкретного смещения буфера.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">Индекс в поле, с которого необходимо начать считывание.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">Буфер, в который считывается поток байтов.</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">Индекс в буфере, начиная с которого будут помещаться данные.</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">Максимальная длина для копирования в буфер.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte array.">Указанный столбец не содержит массива данных с типом byte.</exception>
      <returns vsli:raw="The actual number of bytes read.">Число фактически считанных байтов.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a character.">Возвращает значение указанного столбца в виде символа.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified field does not contain a character.">Заданное поле не содержит знака.</exception>
      <returns vsli:raw="The value of the column.">Значение столбца.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">Возвращает значение указанного столбца в виде массива символов.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">Индекс в поле, с которого необходимо начать считывание.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of chars.">Буфер, в который необходимо считать поток данных с типом char.</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">Индекс в буфере, начиная с которого будут помещаться данные.</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">Максимальная длина для копирования в буфер.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a character array.">Указанный столбец не содержит массива знаков.</exception>
      <returns vsli:raw="The actual number of characters read.">Число фактически считанных символов.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets a string representing the data type of the specified column.">Получает строку, представляющую тип данных в указанном столбце.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <returns vsli:raw="A string representing the column's data type.">Строка, представляющая имя типа данных в столбце.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a DateTime value.">Указанный столбец не содержит значения DateTime.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Указанный столбец не содержит значения <see langword="Decimal" />.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the value of the column as a double-precision floating point number.">Возвращает значение указанного столбца в виде числа с плавающей запятой с двойной точностью.</summary>
      <param name="ordinal" vsli:raw="The zero-based ordinal of the column.">Отсчитываемый от нуля порядковый номер столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a double-precision floating point number.">Указанный столбец не содержит числа с плавающей запятой с двойной точностью.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can be used to iterate through the item collection.">Возвращает перечислитель, который может использоваться для перемещения по коллекции элементов.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that represents the item collection.">Объект <see cref="T:System.Collections.IEnumerator" />, представляющий коллекцию элементов.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Возвращает тип <see cref="T:System.Type" />, который является типом данных объекта.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Тип данных объекта (<see cref="T:System.Type" />).</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">Возвращает значение заданного столбца в виде числа с плавающей запятой одинарной точности.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a single-precision floating point number.">Указанный столбец не содержит числа с плавающей запятой с одинарной точностью.</exception>
      <returns vsli:raw="The value of the column.">Значение столбца.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a globally-unique identifier (GUID).">Возвращает значение заданного столбца в виде глобально-уникального идентификатора GUID.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a GUID.">Указанный столбец не содержит GUID.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">Получает значение заданного столбца в виде 16-битового целого числа со знаком.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер (с нуля) столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 16-bit signed integer.">Указанный столбец не содержит 16-разрядное целое число со знаком.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер (с нуля) столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 32-bit signed integer value.">Указанный столбец не содержит 32-разрядное целое число со знаком.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер (с нуля) столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 64-bit signed integer value.">Указанный столбец не содержит 64-разрядное целое число со знаком.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Возвращает значение заданного столбца в виде объекта <see cref="T:System.String" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер (с нуля) столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <returns vsli:raw="The name of the specified column.">Имя заданного столбца.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary vsli:raw="Gets the column ordinal, given the name of the column.">Возвращает порядковый номер столбца при наличии заданного имени столбца.</summary>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <returns vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the type of the specified column in provider-specific format.">Возвращает тип указанного столбца в формате конкретного поставщика.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Тип данных объекта (<see cref="T:System.Type" />).</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in provider-specific format.">Возвращает значение указанного столбца в формате конкретного поставщика.</summary>
      <param name="ordinal" vsli:raw="The zero-based number of the column whose value is retrieved.">Номер столбца (с нуля), значение которого извлекается.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      <returns vsli:raw="The value of the specified column in provider-specific format.">Значение указанного столбца в формате конкретного поставщика.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Fills the supplied array with provider-specific type information for all the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Заполняет предоставленный массив данными с типом конкретного поставщика для всех столбцов в объекте <see cref="T:System.Data.DataTableReader" />.</summary>
      <param name="values" vsli:raw="An array of objects to be filled in with type information for the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Массив объектов, заполненный данными типа для столбцов в объекте <see cref="T:System.Data.DataTableReader" />.</param>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <returns vsli:raw="The number of column values copied into the array.">Число значений столбцов, копируемое в этот массив.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.DataTableReader" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">Объект <see cref="T:System.Data.DataTableReader" /> закрыт.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a string.">Возвращает значение заданного столбца в виде строки.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер (с нуля) столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a string.">Указанный столбец не содержит данных с типом string.</exception>
      <returns vsli:raw="The value of the specified column.">Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format.">Возвращает значение заданного столбца в его исходном формате.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер (с нуля) столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access columns in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Предпринята попытка чтения столбцов закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к ним.</exception>
      <returns vsli:raw="The value of the specified column. This method returns &lt;see langword=&quot;DBNull&quot; /&gt; for null columns.">Значение указанного столбца. Этот метод возвращает значение с типом <see langword="DBNull" /> для столбцов со значениями null.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current row.">Заполняет массив объектов значениями столбцов текущей строки.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the column values from the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Массив типа <see cref="T:System.Object" />, в который будут скопированы значения столбцов из объекта <see cref="T:System.Data.DataTableReader" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      <returns vsli:raw="The number of column values copied into the array.">Число значений столбцов, копируемое в этот массив.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column contains non-existent or missing values.">Получает значение, указывающее, содержит ли столбец несуществующие или пропущенные значения.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер (с нуля) столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение указанного столбца эквивалентно <see cref="T:System.DBNull" />; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next result set, if any.">Перемещает <see cref="T:System.Data.DataTableReader" /> к следующему результирующему набору (при его наличии).</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to navigate within a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка перемещения в закрытом объекте <see cref="T:System.Data.DataTableReader" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another result set; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> при наличии другого результирующего набора; в обратном случае – значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next record.">Перемещает <see cref="T:System.Data.DataTableReader" /> к следующей записи.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another row to read; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> при наличии другой строки для чтения; в обратном случае – значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary vsli:raw="The depth of nesting for the current row of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Глубина вложенности для текущей строки объекта <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns vsli:raw="The depth of nesting for the current row; always zero.">Глубина вложенности для текущей строки; всегда равна нулю.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary vsli:raw="Returns the number of columns in the current row.">Возвращает количество столбцов в текущей строке.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve the field count in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка извлечения значения количества полей в закрытом объекте <see cref="T:System.Data.DataTableReader" />.</exception>
      <returns vsli:raw="When not positioned in a valid result set, 0; otherwise the number of columns in the current row.">Значение 0, если метод не находится внутри допустимого набора записей; в обратном случае — число столбцов в текущей строке.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows.">Получает значение, указывающее, содержит ли объект <see cref="T:System.Data.DataTableReader" /> одну или несколько строк.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve information about a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка извлечения сведений о закрытом объекте <see cref="T:System.Data.DataTableReader" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект <see cref="T:System.Data.DataTableReader" /> содержит одну или несколько строк; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">Получает значение, указывающее, закрыт ли объект <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если указанный модуль <see cref="T:System.Data.DataTableReader" /> закрыт. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column ordinal.">Возвращает значение указанного столбца в собственном формате при наличии заданного порядкового номера столбца.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <returns vsli:raw="The value of the specified column in its native format.">Значение указанного столбца в его собственном формате.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column name.">Возвращает значение заданного столбца в собственном формате при наличии заданного имени столбца.</summary>
      <param name="name" vsli:raw="The name of the column.">Имя столбца.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <returns vsli:raw="The value of the specified column in its native format.">Значение указанного столбца в его собственном формате.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.">Получает количество строк, которые были изменены, вставлены или удалены при выполнении оператора SQL.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; does not support this property and always returns 0.">Объект <see cref="T:System.Data.DataTableReader" /> не поддерживает это свойство и всегда возвращает значение 0.</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary vsli:raw="Represents a databindable, customized view of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for sorting, filtering, searching, editing, and navigation. The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; does not store data, but instead represents a connected view of its corresponding &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;'s data will affect the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;'s data will affect all &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;s associated with it.">Представляет допускающее привязку данных, настраиваемое представление <see cref="T:System.Data.DataTable" /> для сортировки, фильтрации, поиска, изменения и навигации. <see cref="T:System.Data.DataView" /> не сохраняет данные, а представляет связанное представление соответствующего <see cref="T:System.Data.DataTable" />. Изменения данных <see cref="T:System.Data.DataView" /> повлияют на <see cref="T:System.Data.DataTable" />. Изменения данных <see cref="T:System.Data.DataTable" /> повлияют на все связанные с ним <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary vsli:raw="Occurs when initialization of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is completed.">Происходит при завершении инициализации <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary vsli:raw="Occurs when the list managed by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; changes.">Происходит при изменении списка, управляемого объектом <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataView" /> указанным значением <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Таблица <see cref="T:System.Data.DataTable" />, добавляемая в представление <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataView" /> заданными свойствами <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.Sort" /> и <see cref="T:System.Data.DataViewRowState" />.</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Таблица <see cref="T:System.Data.DataTable" />, добавляемая в представление <see cref="T:System.Data.DataView" />.</param>
      <param name="RowFilter" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Объект <see cref="P:System.Data.DataView.RowFilter" />, применяемый к представлению <see cref="T:System.Data.DataView" />.</param>
      <param name="Sort" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Объект <see cref="P:System.Data.DataView.Sort" />, применяемый к представлению <see cref="T:System.Data.DataView" />.</param>
      <param name="RowState" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Объект <see cref="T:System.Data.DataViewRowState" />, применяемый к представлению <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary vsli:raw="Adds a new row to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Добавляет новую строку в <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; object.">Новый объект <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary vsli:raw="Starts the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">Запускает инициализацию <see cref="T:System.Data.DataView" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Закрывает объект <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; has been changed successfully.">Происходит после успешного изменения <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.ComponentModel.ListChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies items into an array. Only for Web Forms Interfaces.">Копирует элементы в массив. Только для интерфейсов веб-форм.</summary>
      <param name="array" vsli:raw="array to copy into.">Массив для копирования данных.</param>
      <param name="index" vsli:raw="index to start at.">Начальный индекс.</param>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary vsli:raw="Deletes a row at the specified index.">Удаляет строку с заданным индексом.</summary>
      <param name="index" vsli:raw="The index of the row to delete.">Индекс удаляемой строки.</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary vsli:raw="Disposes of the resources (other than memory) used by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Освобождает все используемые объектом <see cref="T:System.Data.DataView" /> ресурсы, кроме памяти.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">Завершает инициализацию <see cref="T:System.Data.DataView" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are considered equal.">Определяет, считаются ли равными указанные экземпляры <see cref="T:System.Data.DataView" />.</summary>
      <param name="view" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to be compared.">Выражение <see cref="T:System.Data.DataView" /> для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если два экземпляра <see cref="T:System.Data.DataView" /> равны, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key value.">Находит строку в <see cref="T:System.Data.DataView" /> по указанному значению ключа сортировки.</summary>
      <param name="key" vsli:raw="The object to search for.">Объект, который нужно найти.</param>
      <returns vsli:raw="The index of the row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that contains the sort key value specified; otherwise -1 if the sort key value does not exist.">Индекс строки в <see cref="T:System.Data.DataView" />, содержащий указанное значение ключа сортировки; в противном случае — значение -1, если значение ключа не существует.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key values.">Находит строку в <see cref="T:System.Data.DataView" /> по указанным значениям ключа сортировки.</summary>
      <param name="key" vsli:raw="An array of values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Массив значений с типом <see cref="T:System.Object" />.</param>
      <returns vsli:raw="The index of the position of the first row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that matches the sort key values specified; otherwise -1 if there are no matching sort key values.">Индекс позиции первой строки в <see cref="T:System.Data.DataView" />, совпадающий с указанными значениями ключа сортировки; в противном случае — значение -1, если совпадающие значения ключа сортировки отсутствуют.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">Возвращает массив объектов <see cref="T:System.Data.DataRowView" />, столбцы которых соответствуют указанному значению ключа сортировки.</summary>
      <param name="key" vsli:raw="The column value, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">Значение столбца с типом <see cref="T:System.Object" />, которое нужно найти.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">Массив объектов <see langword="DataRowView" />, столбцы которых соответствуют указанному значению ключа сортировки; пустой массив <see langword="DataRowView" />, если строки, содержащие указанное значение ключа сортировки, отсутствуют.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">Возвращает массив объектов <see cref="T:System.Data.DataRowView" />, столбцы которых соответствуют указанному значению ключа сортировки.</summary>
      <param name="key" vsli:raw="An array of column values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">Массив значений столбца с типом <see cref="T:System.Object" />, которые нужно найти.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">Массив объектов <see langword="DataRowView" />, столбцы которых соответствуют указанному значению ключа сортировки; пустой массив <see langword="DataRowView" />, если строки, содержащие указанное значение ключа сортировки, отсутствуют.</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary vsli:raw="Gets an enumerator for this &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Возвращает перечислитель для данной коллекции <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for navigating through the list.">Объект <see cref="T:System.Collections.IEnumerator" /> для перехода по списку.</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; has been changed successfully.">Происходит после успешного изменения <see cref="T:System.Data.DataView" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.ComponentModel.ListChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataView.ListChanged&quot; /&gt; event.">Вызывает событие <see cref="E:System.Data.DataView.ListChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.ComponentModel.ListChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Открывает <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary vsli:raw="Reserved for internal use only.">Зарезервировано только для внутреннего использования.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Значение <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Значение <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Значение <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Значение <see cref="T:System.Int32" />.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value to be inserted.">Вставляемое значение <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Значение <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.RemoveAt(System.Int32)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Значение <see cref="T:System.Int32" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns vsli:raw="The item added to the list.">Элемент, который нужно добавить в список.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="direction" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; object.">Объект <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="key" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Значение <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveSort&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />.</summary>
      <param name="sorts" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDescriptionCollection&quot; /&gt; object.">Объект <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.RemoveFilter&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />, которые ищутся в коллекции как пригодные для привязки. Это может быть <see langword="null" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий свойства каждого элемента, используемого для привязки данных.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects.">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Создает и возвращает новый объект <see cref="T:System.Data.DataTable" /> на основе строк в существующем объекте <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Новый экземпляр класса <see cref="T:System.Data.DataTable" />, который содержит запрошенные строки и столбцы.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Создает и возвращает новый объект <see cref="T:System.Data.DataTable" /> на основе строк в существующем объекте <see cref="T:System.Data.DataView" />.</summary>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">При значении <see langword="true" /> возвращенный объект <see cref="T:System.Data.DataTable" /> содержит строки с различными значениями для всех столбцов. Значение по умолчанию — <see langword="false" />.</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">Массив строк, содержащий список имен столбцов, которые должны быть включены в возвращенный объект <see cref="T:System.Data.DataTable" />. Объект <see cref="T:System.Data.DataTable" />, содержащий указанные столбцы в том порядке, в каком они отображаются внутри массива.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Новый экземпляр класса <see cref="T:System.Data.DataTable" />, который содержит запрошенные строки и столбцы.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Создает и возвращает новый объект <see cref="T:System.Data.DataTable" /> на основе строк в существующем объекте <see cref="T:System.Data.DataView" />.</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Имя возвращенного объекта <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Новый экземпляр класса <see cref="T:System.Data.DataTable" />, который содержит запрошенные строки и столбцы.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Создает и возвращает новый объект <see cref="T:System.Data.DataTable" /> на основе строк в существующем объекте <see cref="T:System.Data.DataView" />.</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Имя возвращенного объекта <see cref="T:System.Data.DataTable" />.</param>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">При значении <see langword="true" /> возвращенный объект <see cref="T:System.Data.DataTable" /> содержит строки с различными значениями для всех столбцов. Значение по умолчанию — <see langword="false" />.</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see langword=&quot;DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">Массив строк, содержащий список имен столбцов, которые должны быть включены в возвращенный объект <see cref="T:System.Data.DataTable" />. Объект <see langword="DataTable" />, содержащий указанные столбцы в том порядке, в каком они отображаются внутри массива.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Новый экземпляр класса <see cref="T:System.Data.DataTable" />, который содержит запрошенные строки и столбцы.</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary vsli:raw="Reserved for internal use only.">Зарезервировано только для внутреннего использования.</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary vsli:raw="Reserved for internal use only.">Зарезервировано только для внутреннего использования.</summary>
      <param name="force" vsli:raw="Reserved for internal use only.">Зарезервировано только для внутреннего использования.</param>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary vsli:raw="Gets or sets a value that indicates whether deletes are allowed.">Возвращает или задает значение, указывающее, разрешено ли удаление.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if deletes are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если удаление разрешено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary vsli:raw="Gets or sets a value that indicates whether edits are allowed.">Возвращает или задает значение, указывающее, разрешено ли внесение изменений.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if edits are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если изменение разрешено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary vsli:raw="Gets or sets a value that indicates whether the new rows can be added by using the &lt;see cref=&quot;M:System.Data.DataView.AddNew&quot; /&gt; method.">Получает или задает значение, указывающее, можно ли добавлять новые строки с помощью метода <see cref="M:System.Data.DataView.AddNew" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if new rows can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если новые строки можно добавить; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value that indicates whether to use the default sort. The default sort is (ascending) by all primary keys as specified by &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt;.">Возвращает или задает значение, указывающее, следует ли использовать сортировку по умолчанию. По умолчанию сортировка (по возрастанию) по всем первичными ключам, как определено <see cref="P:System.Data.DataTable.PrimaryKey" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the default sort is used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если используется сортировка по умолчанию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary vsli:raw="Gets the number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; after &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt; have been applied.">Получает число записей в <see cref="T:System.Data.DataView" /> после применения свойств <see cref="P:System.Data.DataView.RowFilter" /> и <see cref="P:System.Data.DataView.RowStateFilter" />.</summary>
      <returns vsli:raw="The number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Количество записей в списке <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; associated with this view.">Возвращает объект <see cref="T:System.Data.DataViewManager" />, связанный с этим представлением.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataViewManager&quot; /&gt; that created this view. If this is the default &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, the &lt;see langword=&quot;DataViewManager&quot; /&gt; property returns the default &lt;see langword=&quot;DataViewManager&quot; /&gt; for the &lt;see langword=&quot;DataSet&quot; /&gt;. Otherwise, if the &lt;see langword=&quot;DataView&quot; /&gt; was created without a &lt;see langword=&quot;DataViewManager&quot; /&gt;, this property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="DataViewManager" />, который создал данное представление. Если это <see cref="T:System.Data.DataView" /> по умолчанию для <see cref="T:System.Data.DataTable" />, свойство <see langword="DataViewManager" /> возвращает <see langword="DataViewManager" /> по умолчанию для <see langword="DataSet" />. В противном случае, если <see langword="DataView" /> был создан без <see langword="DataViewManager" />, это свойство имеет значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the component is initialized.">Возвращает значение, указывающее, был ли инициализирован компонент.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> указывает, что компонент завершил инициализацию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary vsli:raw="Gets a value that indicates whether the data source is currently open and projecting views of data on the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Получает значение, определяющее, открыт ли сейчас источник данных, а также представления проектных данных в объекте <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the source is open; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если источник открыт; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary vsli:raw="Gets a row of data from a specified table.">Получает строку данных из указанной таблицы.</summary>
      <param name="recordIndex" vsli:raw="The index of a record in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Индекс записи в <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; of the row that you want.">Объект <see cref="T:System.Data.DataRowView" /> нужной строки.</returns>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary vsli:raw="Gets or sets the expression used to filter which rows are viewed in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Возвращает или задает выражение, используемое для выбора строк, просматриваемых в объекте <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A string that specifies how rows are to be filtered.">Строка, задающая способ фильтрации строк.</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary vsli:raw="Gets or sets the row state filter used in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Возвращает или задает фильтр состояния строк, применяемый в <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.DataViewRowState" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary vsli:raw="Gets or sets the sort column or columns, and sort order for the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Возвращает или задает столбец или столбцы для сортировки, а затем — порядок сортировки для <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A string that contains the column name followed by &quot;ASC&quot; (ascending) or &quot;DESC&quot; (descending). Columns are sorted ascending by default. Multiple columns can be separated by commas.">Строка, содержащая имя столбца, за которым следует "ASC" (по возрастанию) или "DESC" (по убыванию). Столбцы сортируются по возрастанию по умолчанию. Несколько столбцов могут быть разделены запятыми.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsFixedSize" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="recordIndex" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Значение <see cref="T:System.Int32" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.IList.Item(System.Int32)" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary vsli:raw="Gets or sets the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Возвращает или задает исходный объект <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that provides the data for this view.">Объект <see cref="T:System.Data.DataTable" />, предоставляющий данные для этого представления.</returns>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary vsli:raw="Contains a default &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Содержит значение по умолчанию <see cref="T:System.Data.DataViewSettingCollection" /> для каждого <see cref="T:System.Data.DataTable" /> в <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary vsli:raw="Occurs after a row is added to or deleted from a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Происходит после добавления или удаления строки из объекта <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataViewManager" /> для указанного объекта <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">Имя используемого объекта <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Создает объект <see cref="T:System.Data.DataView" /> для указанного объекта <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Имя объекта <see cref="T:System.Data.DataTable" />, используемого в объекте <see cref="T:System.Data.DataView" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Объект <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataViewManager.ListChanged&quot; /&gt; event.">Вызывает событие <see cref="E:System.Data.DataViewManager.ListChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.ComponentModel.ListChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Вызывает событие <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> при добавлении или удалении объекта <see cref="T:System.Data.DataRelation" /> из коллекции <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Копирует элементы коллекции <see cref="T:System.Collections.ICollection" /> в массив <see cref="T:System.Array" />, начиная с указанного индекса массива <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ICollection" />. Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Добавляет элемент в коллекцию <see cref="T:System.Collections.IList" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Объект <see cref="T:System.Object" />, добавляемый в список <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="The position into which the new element was inserted.">Позиция, на которую вставлен новый элемент.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; contains a specific value.">Определяет, содержит ли коллекция <see cref="T:System.Collections.IList" /> указанное значение.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект <see cref="T:System.Object" /> найден в <see cref="T:System.Collections.IList" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Определяет индекс заданного элемента в списке <see cref="T:System.Collections.IList" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">Индекс <paramref name="value" />, если он найден в списке; в противном случае — значение -1.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; at the specified index.">Вставляет элемент в список <see cref="T:System.Collections.IList" /> по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="value" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to insert into the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Объект <see cref="T:System.Object" />, вставляемый в <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Удаляет первое вхождение указанного объекта из коллекции <see cref="T:System.Collections.IList" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Элемент <see cref="T:System.Object" />, который требуется удалить из <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; item at the specified index.">Удаляет элемент <see cref="T:System.Collections.IList" /> по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Отсчитываемый от нуля индекс элемента для удаления.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to the indexes used for searching.">Добавляет дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> к индексам, используемым для поиска.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to add to the indexes used for searching.">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />, добавляемый к индексам, используемым для поиска.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Sorts the list based on a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; and a &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt;.">Сортирует список, используя дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> и направление <see cref="T:System.ComponentModel.ListSortDirection" />.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to sort by.">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> для сортировки.</param>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="Returns the index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Возвращает индекс строки с данным дескриптором <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to search on.">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> для поиска.</param>
      <param name="key" vsli:raw="The value of the property parameter to search for.">Значение параметра property, используемое для поиска.</param>
      <returns vsli:raw="The index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Индекс строки с данным дескриптором <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; from the indexes used for searching.">Удаляет дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> из индексов, используемых для поиска.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to remove from the indexes used for searching.">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />, удаляемый из индексов, используемых для поиска.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="Removes any sort applied using &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">Удаляет любую сортировку, выполненную с использованием метода <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">Возвращает <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий свойства каждого элемента, используемого для привязки данных.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />, которые ищутся в коллекции как пригодные для привязки. Это может быть <see langword="null" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий свойства каждого элемента, используемого для привязки данных.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the name of the list.">Возвращает имя списка.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects, for which the list name is returned. This can be &lt;see langword=&quot;null&quot; /&gt;.">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />, для которых возвращается имя списка. Это может быть <see langword="null" />.</param>
      <returns vsli:raw="The name of the list.">Имя списка.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataTableCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">Вызывает событие <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> при добавлении или удалении объекта <see cref="T:System.Data.DataTable" /> из коллекции <see cref="T:System.Data.DataTableCollection" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use with the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Возвращает или задает объект <see cref="T:System.Data.DataSet" /> для использования с коллекцией <see cref="T:System.Data.DataViewManager" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">Используемый <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary vsli:raw="Gets or sets a value that is used for code persistence.">Возвращает или задает значение, используемое для сохраняемости кода.</summary>
      <returns vsli:raw="A value that is used for code persistence.">Значение, используемое для сохраняемости кода.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Получает коллекцию <see cref="T:System.Data.DataViewSettingCollection" /> для каждого объекта <see cref="T:System.Data.DataTable" /> в <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see langword=&quot;DataTable&quot; /&gt;.">Коллекция <see cref="T:System.Data.DataViewSettingCollection" /> для каждого объекта <see langword="DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.Count" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Объект, который может быть использован для синхронизации доступа к коллекции <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Collections.IList" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</param>
      <returns vsli:raw="The element at the specified index.">Элемент, расположенный по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary vsli:raw="Describes the version of data in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Описывает версию данных в объекте <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary vsli:raw="A new row.">Новая строка.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary vsli:raw="Current rows including unchanged, new, and modified rows. By default, &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; is set to CurrentRows.">Текущие строки, включая неизмененные, новые и измененные строки. По умолчанию <see cref="T:System.Data.DataViewRowState" /> имеет значение CurrentRows.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary vsli:raw="A deleted row.">Удаленная строка.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary vsli:raw="A current version of original data that has been modified (see &lt;see langword=&quot;ModifiedOriginal&quot; /&gt;).">Текущая версия исходных данных, которые были изменены (см. <see langword="ModifiedOriginal" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary vsli:raw="The original version of the data that was modified. (Although the data has since been modified, it is available as &lt;see langword=&quot;ModifiedCurrent&quot; /&gt;).">Версия исходной строки измененных данных. (Хотя данные были изменены, они доступны как <see langword="ModifiedCurrent" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary vsli:raw="None.">Нет.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary vsli:raw="Original rows including unchanged and deleted rows.">Исходные строки, включая неизмененные и удаленные.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary vsli:raw="An unchanged row.">Неизменившаяся строка.</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary vsli:raw="Represents the default settings for &lt;see cref=&quot;P:System.Data.DataView.ApplyDefaultSort&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.DataViewManager&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;P:System.Data.DataView.Table&quot; /&gt; for DataViews created from the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Представляет параметры по умолчанию для свойств <see cref="P:System.Data.DataView.ApplyDefaultSort" />, <see cref="P:System.Data.DataView.DataViewManager" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.RowStateFilter" />, <see cref="P:System.Data.DataView.Sort" /> и <see cref="P:System.Data.DataView.Table" /> для объекта DataView, созданного из <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value indicating whether to use the default sort.">Возвращает или задает значение, определяющее необходимость использования сортировки по умолчанию.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default sort is used; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если используется сортировка по умолчанию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; that contains this &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt;.">Возвращает составное действие <see cref="T:System.Data.DataViewManager" />, в котором содержится данный объект <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">Объект <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary vsli:raw="Gets or sets the filter to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;. See &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; for a code sample using RowFilter.">Возвращает или задает фильтр, применяемый в объекте <see cref="T:System.Data.DataView" />. Пример кода с RowFilter см. в разделе <see cref="P:System.Data.DataView.RowFilter" />.</summary>
      <returns vsli:raw="A string that contains the filter to apply.">Строка, содержащая применяемый фильтр.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary vsli:raw="Gets or sets a value indicating whether to display Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged, or no rows in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Возвращает или задает значение, определяющее необходимость отображения строк Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged или отсутствие строк в объекте <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A value that indicates which rows to display.">Значение, определяющее строку, которую нужно отобразить.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary vsli:raw="Gets or sets a value indicating the sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Возвращает или задает значение, определяющее сортировку, применяемую в объекте <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="The sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Сортировка, применяемая в объекте <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; properties apply.">Получает объект <see cref="T:System.Data.DataTable" />, к которому нужно применить свойства объекта <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Объект <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary vsli:raw="Contains a read-only collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Содержит доступную только для чтения коллекцию объектов <see cref="T:System.Data.DataViewSetting" /> для каждого объекта <see cref="T:System.Data.DataTable" /> в <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Копирует объекты коллекции в одномерный экземпляр класса <see cref="T:System.Array" />, начиная с указанного индекса.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">Одномерный объект <see cref="T:System.Array" />, являющийся целевым для значений, скопированных из коллекции.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">Индекс в массиве, с которого требуется начать вставку.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Копирует объекты коллекции в одномерный экземпляр класса <see cref="T:System.Array" />, начиная с указанного индекса.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">Одномерный объект <see cref="T:System.Array" />, являющийся целевым для значений, скопированных из коллекции.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">Индекс в массиве, с которого требуется начать вставку.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">Возвращает объект <see cref="T:System.Collections.IEnumerator" /> для коллекции.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object.">Объект <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Возвращает количество объектов <see cref="T:System.Data.DataViewSetting" /> в коллекции <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the collection.">Количество объектов <see cref="T:System.Data.DataViewSetting" /> в коллекции.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is read-only.">Получает значение, указывающее, доступен ли объект <see cref="T:System.Data.DataViewSettingCollection" /> только для чтения.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt; to indicate the collection is read-only.">Всегда возвращает, <see langword="true" /> чтобы указать, что коллекция доступна только для чтения.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is synchronized (thread-safe).">Получает значение, определяющее, является ли доступ к коллекции <see cref="T:System.Data.DataViewSettingCollection" /> синхронизированным (потокобезопасным).</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;false&quot; /&gt;, unless overridden by a derived class.">Это свойство всегда имеет значение <see langword="false" />, если оно не переопределено производным классом.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the collection.">Возвращает объекты <see cref="T:System.Data.DataViewSetting" /> указанного класса <see cref="T:System.Data.DataTable" /> из коллекции.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Искомый объект <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Коллекция объектов <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its index.">Возвращает объекты <see cref="T:System.Data.DataViewSetting" /> класса <see cref="T:System.Data.DataTable" /> по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Отсчитываемый от нуля индекс искомого объекта <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Коллекция объектов <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its name.">Возвращает объект <see cref="T:System.Data.DataViewSetting" /> класса <see cref="T:System.Data.DataTable" />, заданный по его имени.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Имя искомого объекта <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Коллекция объектов <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Объект, который может быть использован для синхронизации доступа к коллекции <see cref="T:System.Data.DataViewSettingCollection" />.</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary vsli:raw="The exception that is thrown by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; during an insert, update, or delete operation if the number of rows affected equals zero.">Исключение, которое вызывается объектом <see cref="T:System.Data.Common.DataAdapter" /> во время выполнения операции вставки, обновления или удаления, не затронувшей ни одной строки.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DBConcurrencyException" />.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">Текстовая строка с подробными сведениями об исключении.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">Текстовая строка с подробными сведениями об исключении.</param>
      <param name="inner" vsli:raw="A reference to an inner exception.">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for this exception.">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
      <param name="dataRows" vsli:raw="An array containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception.">Массив, содержащий объекты <see cref="T:System.Data.DataRow" />, сбой обновления которых привел к возникновению этого исключения.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Копирует объекты <see cref="T:System.Data.DataRow" />, сбой обновления которых привел к возникновению этого исключения, в указанный массив объектов <see cref="T:System.Data.DataRow" />.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">Одномерный массив объектов <see cref="T:System.Data.DataRow" />, в который копируются объекты <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, starting at the specified destination array index.">Копирует объекты <see cref="T:System.Data.DataRow" />, сбой обновления которых привел к возникновению этого исключения, в указанный массив объектов <see cref="T:System.Data.DataRow" />, начиная с указанного индекса целевого массива.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">Одномерный массив объектов <see cref="T:System.Data.DataRow" />, в который копируются объекты <see cref="T:System.Data.DataRow" />.</param>
      <param name="arrayIndex" vsli:raw="The destination array index to start copying into.">Индекс целевого массива, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates the specified serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">Заносит в объект сведений о сериализации данные, необходимые для сериализации <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализуемые данные, связанные с исключением <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий источник и назначение сериализуемого потока, связанного с объектом <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Значением параметра <paramref name="info" /> является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that generated the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">Возвращает или задает значение объекта <see cref="T:System.Data.DataRow" />, вызвавшего <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Значение <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary vsli:raw="Gets the number of rows whose update failed, generating this exception.">Возвращает количество строк, обновление которых завершилось сбоем, и создает это исключение.</summary>
      <returns vsli:raw="An integer containing a count of the number of rows whose update failed.">Целое число, содержащее количество строк, обновление которых завершилось со сбоем.</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary vsli:raw="Specifies the data type of a field, a property, or a &lt;see langword=&quot;Parameter&quot; /&gt; object of a .NET data provider.">Указывает тип данных поля, свойства или объекта <see langword="Parameter" /> поставщика данных .NET Framework.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary vsli:raw="A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">Поток переменной длины из символов, не принадлежащих кодировке Юникод. В нем может быть от 1 до 8000 символов.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary vsli:raw="A fixed-length stream of non-Unicode characters.">Поток фиксированной длины из символов, не принадлежащих кодировке Юникод.</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary vsli:raw="A variable-length stream of binary data ranging between 1 and 8,000 bytes.">Поток переменной длины из двоичных данных, имеющий длину от 1 до 8000 байт.</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary vsli:raw="A simple type representing Boolean values of &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">Простой тип для представления логических значений <see langword="true" /> и <see langword="false" />.</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary vsli:raw="An 8-bit unsigned integer ranging in value from 0 to 255.">8-разрядное целое число без знака, которое может принимать значения от 0 до 255.</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary vsli:raw="A currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of a currency unit.">Значение типа currency, лежащее в диапазоне от -2 63 (или -922 337 203 685 477,5808) до 2 63 -1 (или +922 337 203 685 477,5807) и имеющее точность до одной десятитысячной денежной единицы.</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary vsli:raw="A type representing a date value.">Тип, представляющий значение даты.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary vsli:raw="A type representing a date and time value.">Тип, представляющий значение даты и времени.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">Данные даты и времени. Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">Данные даты и времени с учетом часового пояса. Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд. Часовые пояса могут находиться в диапазоне от -14:00 до +14:00.</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary vsli:raw="A simple type representing values ranging from 1.0 x 10 -28 to approximately 7.9 x 10 28 with 28-29 significant digits.">Простой тип для представления значений в диапазоне от 1,0 x 10 -28 до приблизительно 7,9 x 10 28 с 28–29 значимыми цифрами.</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary vsli:raw="A floating point type representing values ranging from approximately 5.0 x 10 -324 to 1.7 x 10 308 with a precision of 15-16 digits.">Тип для представления значений с плавающей запятой в диапазоне от 5,0 x 10 -324 до приблизительно 1,7 x 10 308 с точностью до 15–16 знаков.</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary vsli:raw="A globally unique identifier (or GUID).">Глобальный уникальный идентификатор (GUID).</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary vsli:raw="An integral type representing signed 16-bit integers with values between -32768 and 32767.">Целочисленный тип для представления 16-разрядных целых чисел со знаком в диапазоне от -32768 до 32767.</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary vsli:raw="An integral type representing signed 32-bit integers with values between -2147483648 and 2147483647.">Целочисленный тип для представления 32-разрядных целых чисел со знаком в диапазоне от -2147483648 до 2147483647.</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary vsli:raw="An integral type representing signed 64-bit integers with values between -9223372036854775808 and 9223372036854775807.">Целочисленный тип для представления 64-разрядных целых чисел со знаком в диапазоне от -9223372036854775808 до 9223372036854775807.</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary vsli:raw="A general type representing any reference or value type not explicitly represented by another &lt;see langword=&quot;DbType&quot; /&gt; value.">Общий тип для представления всех значений и ссылок, которые не могут быть представлены ни одним другим значением <see langword="DbType" />.</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary vsli:raw="An integral type representing signed 8-bit integers with values between -128 and 127.">Целочисленный тип для представления 8-разрядных целых чисел со знаком в диапазоне от -128 до 127.</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary vsli:raw="A floating point type representing values ranging from approximately 1.5 x 10 -45 to 3.4 x 10 38 with a precision of 7 digits.">Тип для представления значений с плавающей запятой в диапазоне от 1,5 x 10 -45 до приблизительно 3,4 x 10 38 с точностью до 7знаков.</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary vsli:raw="A type representing Unicode character strings.">Тип, представляющий символьные строки в Юникоде.</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary vsli:raw="A fixed-length string of Unicode characters.">Строка фиксированной длины из символов Юникода.</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary vsli:raw="A type representing a SQL Server &lt;see langword=&quot;DateTime&quot; /&gt; value. If you want to use a SQL Server &lt;see langword=&quot;time&quot; /&gt; value, use &lt;see cref=&quot;F:System.Data.SqlDbType.Time&quot; /&gt;.">Тип, представляющий значение <see langword="DateTime" /> SQL Server. Если нужно использовать значение <see langword="time" /> SQL Server, необходимо воспользоваться <see cref="F:System.Data.SqlDbType.Time" />.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary vsli:raw="An integral type representing unsigned 16-bit integers with values between 0 and 65535.">Целочисленный тип для представления 16-разрядных целых чисел без знака в диапазоне от 0 до 65535.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary vsli:raw="An integral type representing unsigned 32-bit integers with values between 0 and 4294967295.">Целочисленный тип для представления 32-разрядных целых чисел со значениями от 0 до 4294967295.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary vsli:raw="An integral type representing unsigned 64-bit integers with values between 0 and 18446744073709551615.">Целочисленный тип для представления 64-разрядных целых чисел со значениями от 0 до 18446744073709551615.</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary vsli:raw="A variable-length numeric value.">Числовое значение переменной длины.</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary vsli:raw="A parsed representation of an XML document or fragment.">Проанализированное представление фрагмента или документа XML.</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary vsli:raw="Represents the exception that is thrown when an action is tried on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">Представляет исключение, которое выдается при попытке выполнить действие с удаленным объектом <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DeletedRowInaccessibleException" />.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with serialization information.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DeletedRowInaccessibleException" /> со сведениями о сериализации.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DeletedRowInaccessibleException" /> с заданной строкой.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DeletedRowInaccessibleException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary vsli:raw="Represents the exception that is thrown when a duplicate database object name is encountered during an add operation in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; -related object.">Представляет исключение, которое выдается, если при добавлении строк в объект, относящийся к <see cref="T:System.Data.DataSet" />, нарушается уникальность имен объектов базы данных.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DuplicateNameException" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with serialization information.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DuplicateNameException" /> со сведениями о сериализации.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DuplicateNameException" /> с заданной строкой.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string and exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.DuplicateNameException" /> с заданной строкой и внутренним исключением.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a LINQ to DataSet query. This API supports the .NET infrastructure and is not intended to be used directly from your code.">Представляет коллекцию объектов <see cref="T:System.Data.DataRow" />, возвращаемых из запроса LINQ to DataSet. Данный API поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из кода.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects. This API supports the .NET infrastructure and is not intended to be used directly from your code.">Возвращает перечислитель для коллекции объектов <see cref="T:System.Data.DataRow" />. Данный API поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из кода.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для просмотра коллекции объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">Представляет коллекцию объектов <see cref="T:System.Data.DataRow" />, возвращаемых из запроса.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип объектов в исходной последовательности, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of contained row objects.">Возвращает перечислитель для коллекции включенных объектов строк.</summary>
      <returns vsli:raw="A strongly-typed &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to traverse the collection of &lt;paramref name=&quot;TRow&quot; /&gt; objects.">Строго типизированный перечислитель <see cref="T:System.Collections.Generic.IEnumerator`1" />, который может использоваться для перемещения по коллекции объектов <paramref name="TRow" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Возвращает перечислитель для коллекции объектов <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для просмотра коллекции объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary vsli:raw="Contains the extension methods for the data row collection classes.">Содержит методы расширений для классов коллекции строк данных.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; to the specified type.">Преобразовывает элементы объекта <see cref="T:System.Data.EnumerableRowCollection" /> в заданный тип.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains the elements to be converted.">Объект <see cref="T:System.Data.EnumerableRowCollection" />, содержащий преобразуемые элементы.</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of source to.">Тип, в который преобразуются элементы источника.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="An element in the sequence cannot be cast to type &lt;paramref name=&quot;TResult&quot; /&gt;.">Элемент последовательности не может быть приведен к типу <paramref name="TResult" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">
        <see cref="T:System.Data.EnumerableRowCollection" /> — содержит все элементы исходной последовательности, преобразованные в указанный тип.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">Сортирует строки объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке возрастания по заданному ключу.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого сортируются по заданному ключу.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">Сортирует строки объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке возрастания по указанному ключу и компаратору.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого отсортированы по указанному ключу и компаратору.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">Сортирует строки объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке убывания по указанному ключу.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого сортируются по заданному ключу.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">Сортирует строки объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке убывания в соответствии с указанным ключом и компаратором.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого отсортированы по указанному ключу и компаратору.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; into a new form.">Проецирует каждый элемент <see cref="T:System.Data.EnumerableRowCollection`1" /> в новую форму.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transform function upon.">Коллекция <see cref="T:System.Data.EnumerableRowCollection`1" />, содержащая элементы <see cref="T:System.Data.DataRow" />, для которых будет вызвана функция преобразования.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" vsli:raw="The type that &lt;paramref name=&quot;TRow&quot; /&gt; will be transformed into.">Тип, в который будет преобразован объект <paramref name="TRow" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">Объект <see cref="T:System.Data.EnumerableRowCollection`1" />, элементы которого получены в результате вызова функции преобразования для каждого элемента последовательности <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">Выполняет вторичную сортировку строк объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке возрастания по заданному ключу.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого сортируются по заданному ключу.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">Выполняет вторичную сортировку строк объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке возрастания по заданному ключу и компаратору.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого отсортированы по указанному ключу и компаратору.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">Выполняет вторичную сортировку строк объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке убывания по заданному ключу.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого сортируются по заданному ключу.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">Выполняет вторичную сортировку строк объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке убывания по заданному ключу и компаратору.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого отсортированы по указанному ключу и компаратору.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">Выполняет фильтрацию последовательности строк на основе указанного предиката.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат фильтрации.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, содержащий строки входной последовательности, которые удовлетворяют условию.</returns>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; cannot be evaluated.">Представляет исключение, которое выдается, когда невозможно найти значение свойства <see cref="P:System.Data.DataColumn.Expression" /> класса <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.EvaluateException" />.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Data.EvaluateException" /> со свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Информация, необходимая для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="The source and destination of a particular serialized stream.">Источника и назначение конкретного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.EvaluateException" /> с заданной строкой.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.EvaluateException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Предоставляет данные для события <see cref="E:System.Data.Common.DataAdapter.FillError" /> объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.FillErrorEventArgs" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">Обновляемая таблица <see cref="T:System.Data.DataTable" />.</param>
      <param name="values" vsli:raw="The values for the row being updated.">Значения обновляемой строки.</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary vsli:raw="Gets or sets a value indicating whether to continue the fill operation despite the error.">Возвращает или задает значение, указывающее, должна ли операция заполнения продолжиться, несмотря на возникновение ошибки.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the fill operation should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если операция должна продолжаться; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated when the error occurred.">Получает таблицу <see cref="T:System.Data.DataTable" />, которая обновлялась в момент возникновения ошибки.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">Обновляемая таблица <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary vsli:raw="Gets the errors being handled.">Получает обрабатываемые ошибки.</summary>
      <returns vsli:raw="The errors being handled.">Обрабатываемые ошибки.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary vsli:raw="Gets the values for the row being updated when the error occurred.">Получает значения строки, которая обновлялась в момент возникновения ошибки.</summary>
      <returns vsli:raw="The values for the row being updated.">Значения обновляемой строки.</returns>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event.">Представляет метод обработки события <see cref="E:System.Data.Common.DataAdapter.FillError" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; that contains the event data.">Объект класса <see cref="T:System.Data.FillErrorEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary vsli:raw="Represents an action restriction enforced on a set of columns in a primary key/foreign key relationship when a value or row is either deleted or updated.">Представляет ограничение, установленное для набора столбцов в отношении "первичный ключ/внешний ключ", на действия, выполняемые при удалении или обновлении значения или строки.</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Инициализирует новый экземпляр класса <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным родительским и дочерним объектами <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Родительский объект <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Дочерний объект <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Столбцы имеют различные типы данных.  
  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Инициализирует новый экземпляр класса <see cref="T:System.Data.ForeignKeyConstraint" /> указанным родительским и дочерним объектами <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Массив родительских объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Массив дочерних объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Столбцы имеют различные типы данных.  
  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Инициализирует новый экземпляр класса <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным именем и родительским и дочерним объектами <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">Имя ограничения.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Родительский объект <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Дочерний объект <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Столбцы имеют различные типы данных.  
  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, and arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Инициализирует новый экземпляр класса <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным именем и массивами родительских и дочерних объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or empty string, a default name will be given when added to the constraints collection.">Имя <see cref="T:System.Data.ForeignKeyConstraint" />. Если значением является <see langword="null" /> или пустая строка, то при добавлении этого ограничения в коллекцию ему будет присвоено имя по умолчанию.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Массив родительских объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Массив дочерних объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Столбцы имеют различные типы данных.  
  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">Этот конструктор предназначен для поддержки времени разработки в среде Visual Studio. Объекты <see cref="T:System.Data.ForeignKeyConstraint" />, созданные с помощью этого конструктора, должны затем добавляться в коллекцию при помощи метода <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Таблицы и столбцы с указанными именами должны существовать во время вызова метода; если же метод <see cref="M:System.Data.DataTable.BeginInit" /> был вызван до вызова этого конструктора, таблицы и столбцы с указанными именами должны существовать во время вызова метода <see cref="M:System.Data.DataTable.EndInit" />.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">Имя ограничения.</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Имя родительского объекта <see cref="T:System.Data.DataTable" />, который содержит родительские объекты <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="parentTableNamespace" vsli:raw="The name of the &lt;see cref=&quot;P:System.Data.DataTable.Namespace&quot; /&gt;.">Имя <see cref="P:System.Data.DataTable.Namespace" />.</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Массив имен родительских объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Массив имен дочерних объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.AcceptRejectRule" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" /> и <see langword="Default" />.</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Одно из значений <see cref="T:System.Data.Rule" />, используемое при удалении строки. Значение по умолчанию — <see langword="Cascade" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> и <see langword="Default" />.</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Одно из значений <see cref="T:System.Data.Rule" />, используемое при обновлении строки. Значение по умолчанию — <see langword="Cascade" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> и <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Столбцы имеют различные типы данных.  
  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">Этот конструктор предназначен для поддержки времени разработки в среде Visual Studio. Объекты <see cref="T:System.Data.ForeignKeyConstraint" />, созданные с помощью этого конструктора, должны затем добавляться в коллекцию при помощи метода <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Таблицы и столбцы с указанными именами должны существовать во время вызова метода; если же метод <see cref="M:System.Data.DataTable.BeginInit" /> был вызван до вызова этого конструктора, таблицы и столбцы с указанными именами должны существовать во время вызова метода <see cref="M:System.Data.DataTable.EndInit" />.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">Имя ограничения.</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Имя родительского объекта <see cref="T:System.Data.DataTable" />, который содержит родительские объекты <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Массив имен родительских объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Массив имен дочерних объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.AcceptRejectRule" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" /> и <see langword="Default" />.</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Одно из значений <see cref="T:System.Data.Rule" />, используемое при удалении строки. Значение по умолчанию — <see langword="Cascade" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> и <see langword="Default" />.</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Одно из значений <see cref="T:System.Data.Rule" />, используемое при обновлении строки. Значение по умолчанию — <see langword="Cascade" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> и <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Столбцы имеют различные типы данных.  
  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is identical to the specified object.">Возвращает значение,указывающее, идентичен ли текущий объект <see cref="T:System.Data.ForeignKeyConstraint" /> указанному объекту.</summary>
      <param name="key" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is compared. Two &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; are equal if they constrain the same columns.">Объект, с которым сравнивается объект <see cref="T:System.Data.ForeignKeyConstraint" />. Два объекта <see cref="T:System.Data.ForeignKeyConstraint" /> равны, если они накладывают ограничения на одни и те же столбцы.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the objects are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объекты одинаковы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; object.">Возвращает хэш-код этого экземпляра объекта <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary vsli:raw="Indicates the action that should take place across this constraint when &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; is invoked.">Указывает действие, которое должно быть выполнено в связи с этим ограничением при вызове метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, and &lt;see langword=&quot;Cascade&quot; /&gt;. The default is &lt;see langword=&quot;None&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.AcceptRejectRule" />. Возможными значениями являются <see langword="None" /> и <see langword="Cascade" />. Значение по умолчанию — <see langword="None" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary vsli:raw="Gets the child columns of this constraint.">Возвращает дочерние столбцы этого ограничения.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the child columns of the constraint.">Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся дочерними столбцами в ограничении.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint when a row is deleted.">Возвращает или задает действие, которое происходит в пределах этого ограничения при удалении строки.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.Rule" />. Значение по умолчанию — <see langword="Cascade" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary vsli:raw="The parent columns of this constraint.">Родительские столбцы этого ограничения.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of the constraint.">Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся родительскими столбцами в ограничении.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary vsli:raw="Gets the parent table of this constraint.">Возвращает родительскую таблицу этого ограничения.</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this constraint.">Родительский объект <see cref="T:System.Data.DataTable" /> этого ограничения.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary vsli:raw="Gets the child table of this constraint.">Возвращает дочернюю таблицу этого ограничения.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table in the constraint.">Объект <see cref="T:System.Data.DataTable" />, являющийся дочерней таблицей в этом ограничении.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint on when a row is updated.">Возвращает или задает действие, которое происходит в пределах этого ограничения при обновлении строки.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.Rule" />. Значение по умолчанию — <see langword="Cascade" />.</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary vsli:raw="Associates a data source column with a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class, which is used in common by .NET data providers.">Связывает столбец источника данных со столбцом объекта <see cref="T:System.Data.DataSet" />. Этот интерфейс реализуется классом <see cref="T:System.Data.Common.DataColumnMapping" />, который совместно используется поставщиками данных .NET Framework.</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Возвращает или задает имя столбца в объекте <see cref="T:System.Data.DataSet" /> для сопоставления.</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">Имя столбца в объекте <see cref="T:System.Data.DataSet" /> для сопоставления. Имя без учета регистра.</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">Возвращает или задает имя столбца в источнике данных для сопоставления. Имя указано с учетом регистра.</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">Имя столбца в источнике данных, определяемое с учетом регистра.</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary vsli:raw="Contains a collection of DataColumnMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">Содержит коллекцию объектов DataColumnMapping. Этот интерфейс реализуется классом <see cref="T:System.Data.Common.DataColumnMappingCollection" />, который совместно используется поставщиками данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a ColumnMapping object to the ColumnMapping collection using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">Добавляет объект ColumnMapping к коллекции ColumnMapping, используя имена столбца-источника и столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Зависящее от регистра имя исходного столбца.</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">Имя столбца <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">Объект ColumnMapping, который был добавлен в коллекцию.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Возвращает значение, указывающее, содержится ли в коллекции <see cref="T:System.Data.Common.DataColumnMappingCollection" /> объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем столбца-источника.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Зависящее от регистра имя исходного столбца.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем столбца-источника существует; в обратном случае – значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the ColumnMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Возвращает объект ColumnMapping, соответствующий указанному имени столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column within the collection.">Имя столбца <see cref="T:System.Data.DataSet" /> в коллекции.</param>
      <returns vsli:raw="The ColumnMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; column name.">Объект ColumnMapping, соответствующий указанному имени <see langword="DataSet" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name. The name is case-sensitive.">Возвращает расположение объекта <see cref="T:System.Data.Common.DataColumnMapping" />, соответствующего указанному имени столбца-источника. Имя указано с учетом регистра.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Зависящее от регистра имя исходного столбца.</param>
      <returns vsli:raw="The zero-based location of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object with the specified source column name.">Расположение объекта <see langword="DataColumnMapping" />, соответствующего указанному имени столбца-источника (отсчет ведется с нуля).</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.IColumnMapping.SourceColumn&quot; /&gt; name from the collection.">Удаляет объект <see cref="T:System.Data.IColumnMapping" /> с указанным именем <see cref="P:System.Data.IColumnMapping.SourceColumn" /> из коллекции.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Имя <see langword="SourceColumn" /> с учетом регистра.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object does not exist with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем <see langword="SourceColumn" /> не существует.</exception>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Возвращает или задает объект <see cref="T:System.Data.IColumnMapping" /> с указанным именем <see langword="SourceColumn" />.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceColumn&quot; /&gt; name of the &lt;see langword=&quot;IColumnMapping&quot; /&gt; object to find.">Имя <see langword="SourceColumn" /> для искомого объекта <see langword="IColumnMapping" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Объект <see langword="IColumnMapping" /> с указанным именем <see langword="SourceColumn" />.</returns>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary vsli:raw="Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source.  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while &lt;see cref=&quot;T:System.Data.IDataAdapter&quot; /&gt; instances could can use any type of data source.">Позволяет объекту реализовать DataAdapter и представляет набор методов и соответствующие свойства, связанные с операциями, для заполнения и обновления объекта <see cref="T:System.Data.DataSet" /> и обновления источника данных.  
  
 Экземпляры <see cref="T:System.Data.IDbDataAdapter" /> — для источников данных, которые являются или напоминают реляционные базы данных с текстуальными командами (например, Transact-SQL), а экземпляры <see cref="T:System.Data.IDataAdapter" /> могут использовать любой тип источника данных.</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or updates rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; name, and creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">Добавляет или обновляет строки в объект <see cref="T:System.Data.DataSet" /> для получения соответствия со строками в источнике данных, используя имя объекта <see cref="T:System.Data.DataSet" /> и создает объект <see cref="T:System.Data.DataTable" /> с именем "Table".</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Добавляет объект <see cref="T:System.Data.DataTable" /> с именем Table в указанный объект <see cref="T:System.Data.DataSet" /> и настраивает схему для соответствия этому объекту в источнике данных на основе указанного значения типа <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">Объект <see cref="T:System.Data.DataSet" /> для заполнения схемой из источника данных.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">Массив объектов <see cref="T:System.Data.DataTable" />, который содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Получает параметры, заданные пользователем при выполнении оператора SQL SELECT.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Массив объектов <see cref="T:System.Data.IDataParameter" /> содержит параметры, заданные пользователем.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">Вызывает соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном объекте <see cref="T:System.Data.DataSet" /> из объекта <see cref="T:System.Data.DataTable" /> с именем "Table".</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">Объект <see cref="T:System.Data.DataSet" />, использованный для обновления источника данных.</param>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary vsli:raw="Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.">Указывает, будут ли несопоставленные столбцы-источники или таблицы-источники передаваться со своими исходными именами, чтобы пройти через фильтр или вызвать ошибку.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Заданное значение не является одним из значений <see cref="T:System.Data.MissingMappingAction" />.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />. Значение по умолчанию — <see langword="Passthrough" />.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary vsli:raw="Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.">Указывает или задает значение, определяющее, будут ли отсутствующие исходные таблицы, столбцы и их отношения добавляться в схему набора данных, игнорироваться или вызывать ошибку.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Заданное значение не является одним из значений <see cref="T:System.Data.MissingSchemaAction" />.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />. Значение по умолчанию — <see langword="Add" />.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">Указывает, как исходная таблица сопоставлена с таблицей набора данных.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Коллекция, обеспечивающая основное сопоставление между возвращенными записями и объектом <see cref="T:System.Data.DataSet" />. Значение по умолчанию — пустая коллекция.</returns>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary vsli:raw="Represents a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns; and is implemented by .NET data providers that access data sources.">Представляет параметр, относящийся к объекту Command, и при необходимости его сопоставление со столбцами <see cref="T:System.Data.DataSet" />. Реализация осуществляется с помощью поставщиков данных .NET Framework, которые обращаются к источникам данных.</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">Возвращает или устанавливает тип <see cref="T:System.Data.DbType" /> параметра.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property was not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">Свойству не задано допустимое значение <see cref="T:System.Data.DbType" />.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.DbType" />. Значение по умолчанию — <see cref="F:System.Data.DbType.String" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary vsli:raw="Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">Возвращает или задает значение, определяющее, предназначен ли параметр только для ввода, только для вывода, является ли он двунаправленным или возвращается хранимой процедурой.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">Для свойства не задано одно из допустимых значений типа <see cref="T:System.Data.ParameterDirection" />.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.ParameterDirection" />. Значение по умолчанию — <see langword="Input" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary vsli:raw="Gets a value indicating whether the parameter accepts null values.">Получает значение, определяющее, может ли параметр принимать значения null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если допускаются значения null. В противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;.">Возвращает или задает имя таблицы для объекта <see cref="T:System.Data.IDataParameter" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;. The default is an empty string.">Имя <see cref="T:System.Data.IDataParameter" />. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">Возвращает или задает имя исходного столбца, сопоставленного с <see cref="T:System.Data.DataSet" /> и используемого для загрузки или возвращения значения <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns vsli:raw="The name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">Имя исходного столбца, сопоставленного с <see cref="T:System.Data.DataSet" />. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when loading &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">Возвращает или задает значение <see cref="T:System.Data.DataRowVersion" /> при загрузке <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">Для свойства не задано одно из допустимых значений типа <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.DataRowVersion" />. Значение по умолчанию — <see langword="Current" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">Возвращает или задает значение параметра.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">Объект <see cref="T:System.Object" />, который является значением параметра. По умолчанию используется значение NULL.</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary vsli:raw="Collects all parameters relevant to a Command object and their mappings to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns, and is implemented by .NET data providers that access data sources.">Собирает все параметры, относящиеся к объекту Command, и их сопоставления со столбцами <see cref="T:System.Data.DataSet" />. Реализация осуществляют поставщики данных .NET Framework, которые обращаются к источникам данных.</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a parameter in the collection has the specified name.">Возвращает значение, которое показывает, имеет ли параметр в коллекции указанное имя.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">Имя параметра.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если коллекция содержит параметр. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">Возвращает расположение элемента <see cref="T:System.Data.IDataParameter" /> в коллекции.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">Имя параметра.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">Отсчитываемое от нуля расположение элемента <see cref="T:System.Data.IDataParameter" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from the collection.">Удаляет объект <see cref="T:System.Data.IDataParameter" /> из коллекции.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">Имя параметра.</param>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">Возвращает или задает параметр по указанному индексу.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">Имя получаемого параметра.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">Объект <see cref="T:System.Object" /> в указанном индексе.</returns>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary vsli:raw="Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET data providers that access relational databases.">Предоставляет средства чтения одного или нескольких прямонаправленных потоков наборов результатов, полученных вследствие выполнения команды в источнике данных. Реализацию осуществляют поставщики данных .NET Framework, которые имеют доступ к реляционным базам данных.</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; Object.">Закрывает объект <see cref="T:System.Data.IDataReader" />.</summary>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.&#xA;&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.IDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.IDataReader" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; is closed.">Объект <see cref="T:System.Data.IDataReader" /> закрыт.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary vsli:raw="Advances the data reader to the next result, when reading the results of batch SQL statements.">Перемещает модуль чтения данных к следующему результату при чтении результатов из пакета инструкций SQL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если имеются другие строки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to the next record.">Перемещает <see cref="T:System.Data.IDataReader" /> к следующей записи.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если имеются другие строки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">Возвращает значение, показывающее глубину вложенности для текущей строки.</summary>
      <returns vsli:raw="The level of nesting.">Уровень вложенности.</returns>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary vsli:raw="Gets a value indicating whether the data reader is closed.">Возвращает значение, которое указывает, является ли модуль чтения закрытым.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data reader is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если модуль чтения данных закрытый. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">Возвращает число строк, которые были изменены, вставлены или удалены инструкцией SQL.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">Число измененных, вставленных или удаленных строк. Значение 0, если строки не были затронуты или инструкция завершилась ошибкой. Значение -1 для инструкций SELECT.</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary vsli:raw="Provides access to the column values within each row for a &lt;see langword=&quot;DataReader&quot; /&gt;, and is implemented by .NET data providers that access relational databases.">Предоставляет доступ к значениям столбцов в каждой строке для <see langword="DataReader" />. Реализация осуществляют поставщики данных .NET Framework, которые обращаются к реляционным базам данных.</summary>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">Возвращает значение указанного столбца в виде логического значения.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The value of the column.">Значение столбца.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Gets the 8-bit unsigned integer value of the specified column.">Возвращает 8-битное целое число без знака для указанного столбца.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The 8-bit unsigned integer value of the specified column.">8-битное целое число без знака для указанного столбца.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.">Считывает поток байтов из указанного смещения столбца в буфер в виде массива, начиная с заданного смещения буфера.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <param name="fieldOffset" vsli:raw="The index within the field from which to start the read operation.">Индекс в поле, с которого необходимо начать считывание.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">Буфер, в который считывается поток байтов.</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">Индекс для <paramref name="buffer" /> для запуска операции чтения.</param>
      <param name="length" vsli:raw="The number of bytes to read.">Количество байтов, чтение которых необходимо выполнить.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The actual number of bytes read.">Число фактически считанных байтов.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Gets the character value of the specified column.">Возвращает значение символа для указанного столбца.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The character value of the specified column.">Значение символа указанного столбца.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.">Считывает поток символов из указанного смещения столбца в буфер как массив, начиная с заданного смещения буфера.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Порядковый номер столбца (от нуля).</param>
      <param name="fieldoffset" vsli:raw="The index within the row from which to start the read operation.">Индекс в строке, с которого начинается операция считывания.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">Буфер, в который считывается поток байтов.</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">Индекс для <paramref name="buffer" /> для запуска операции чтения.</param>
      <param name="length" vsli:raw="The number of bytes to read.">Количество байтов, чтение которых необходимо выполнить.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The actual number of characters read.">Число фактически считанных символов.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">Возвращает <see cref="T:System.Data.IDataReader" /> для указанного порядкового номера столбца.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">
        <see cref="T:System.Data.IDataReader" /> для указанного порядкового номера столбца.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets the data type information for the specified field.">Возвращает сведения о типе данных для указанного поля.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The data type information for the specified field.">Сведения о типе данных для указанного поля.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the date and time data value of the specified field.">Возвращает значение даты и времени для указанного поля.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The date and time data value of the specified field.">Значение даты и времени данных для указанного поля.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the fixed-position numeric value of the specified field.">Возвращает числовое значение с фиксированным расположением для указанного поля.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The fixed-position numeric value of the specified field.">Числовое значение с фиксированным расположением для указанного поля.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the double-precision floating point number of the specified field.">Возвращает число с плавающей запятой двойной точности для указанного поля.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The double-precision floating point number of the specified field.">Число с плавающей запятой двойной точности для указанного поля.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">Возвращает сведения <see cref="T:System.Type" /> о типе <see cref="T:System.Object" />, который будет возвращен из <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">Сведения <see cref="T:System.Type" /> о типе <see cref="T:System.Object" />, который будет возвращен из <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the single-precision floating point number of the specified field.">Возвращает число с плавающей запятой одиночной точности для указанного поля.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The single-precision floating point number of the specified field.">Число с плавающей запятой одиночной точности для указанного поля.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">Возвращает значение GUID указанного поля.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The GUID value of the specified field.">Значение GUID указанного поля.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the 16-bit signed integer value of the specified field.">Возвращает 16-битное целое число со знаком для указанного поля.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The 16-bit signed integer value of the specified field.">16-битное целое число со знаком для указанного поля.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the 32-bit signed integer value of the specified field.">Возвращает 32-битное целое число со знаком для указанного поля.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The 32-bit signed integer value of the specified field.">32-битное целое число со знаком для указанного поля.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the 64-bit signed integer value of the specified field.">Возвращает 64-битное целое число со знаком для указанного поля.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The 64-bit signed integer value of the specified field.">64-битное целое число со знаком для указанного поля.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Gets the name for the field to find.">Возвращает имя для поля, которое необходимо найти.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The name of the field or the empty string (&quot;&quot;), if there is no value to return.">Имя поля или пустая строка (""), если возвращаемое значение отсутствует.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Return the index of the named field.">Возвращает индекс именованного поля.</summary>
      <param name="name" vsli:raw="The name of the field to find.">Имя искомого поля.</param>
      <returns vsli:raw="The index of the named field.">Индекс именованного поля.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Gets the string value of the specified field.">Получает значение строки заданного ключа.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The string value of the specified field.">Значение строки заданного ключа.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Return the value of the specified field.">Возвращает значение указанного поля.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; which will contain the field value upon return.">
        <see cref="T:System.Object" /> — будет содержать возвращаемое значение поля.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">Заполняет массив объектов значениями столбцов текущей записи.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">Массив <see cref="T:System.Object" />, в который нужно копировать поля атрибутов.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">Число экземпляров <see cref="T:System.Object" /> в массиве.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Return whether the specified field is set to null.">Возвращает логическое значение, показывающее, имеет ли указанное поле значение null.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Индекс поля, которое необходимо найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified field is set to null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если для указанного поля задано значение null. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary vsli:raw="Gets the number of columns in the current row.">Возвращает число столбцов в текущей строке.</summary>
      <returns vsli:raw="When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record. The default is -1.">Если отсутствует в допустимом наборе записей 0. В противном случае — число столбцов в текущей записи. Значение по умолчанию — -1.</returns>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary vsli:raw="Gets the column located at the specified index.">Возвращает столбец, находящийся по указанному индексу.</summary>
      <param name="i" vsli:raw="The zero-based index of the column to get.">Отсчитываемый от нуля индекс возвращаемого столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns vsli:raw="The column located at the specified index as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Столбец, находящийся по указанному индексу, например <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary vsli:raw="Gets the column with the specified name.">Возвращает столбец с указанным именем.</summary>
      <param name="name" vsli:raw="The name of the column to find.">Имя столбца, который нужно найти.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">Столбец с указанным именем не найден.</exception>
      <returns vsli:raw="The column with the specified name as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Столбец с указанным именем в качестве <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary vsli:raw="Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET data providers that access relational databases.">Представляет инструкцию SQL, выполняемую при подключении к источнику данных, которую реализуют поставщики данных платформы NET Framework, имеющие доступ к реляционным базам данных.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary vsli:raw="Attempts to cancels the execution of an &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Пытается отменить выполнение <see cref="T:System.Data.IDbCommand" />.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">Создает новый экземпляр объекта <see cref="T:System.Data.IDbDataParameter" /> .</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">Объект <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes an SQL statement against the &lt;see langword=&quot;Connection&quot; /&gt; object of a .NET data provider, and returns the number of rows affected.">Выполняет инструкцию SQL для объекта <see langword="Connection" /> поставщика данных .NET Framework и возвращает число задействованных строк.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is not open.">Подключение не существует.  
  
 -или-  
  
 Подключение не открыто.</exception>
      <returns vsli:raw="The number of rows affected.">Число обработанных строк.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Выполняет <see cref="P:System.Data.IDbCommand.CommandText" /> применительно к объекту <see cref="P:System.Data.IDbCommand.Connection" /> и создает <see cref="T:System.Data.IDataReader" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Объект <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Выполняет <see cref="P:System.Data.IDbCommand.CommandText" /> применительно к объекту <see cref="P:System.Data.IDbCommand.Connection" /> и создает <see cref="T:System.Data.IDataReader" /> с помощью одного из значений <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Объект <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.">Выполняет запрос и возвращает первый столбец первой строки результирующего набора, возвращаемого запросом. Дополнительные столбцы или строки не обрабатываются.</summary>
      <returns vsli:raw="The first column of the first row in the resultset.">Первый столбец или первая строка в результирующем наборе.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">Создает подготовленную (или скомпилированную) версию команды в источнике данных.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not &lt;see cref=&quot;M:System.Data.OleDb.OleDbConnection.Open&quot; /&gt;.">
        <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> не указывается.  
  
-или- 
Значением параметра <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> не является <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">Возвращает или задает текстовую команду, выполняемую применительно к источнику данных.</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">Текст команды для выполнения. Значение по умолчанию — пустая строка.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute a command and generating an error.">Возвращает или задает время ожидания (в секундах) перед прекращением попытки выполнить команду и выводом ошибки.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property value assigned is less than 0.">Присвоенное значение свойства меньше 0.</exception>
      <returns vsli:raw="The time (in seconds) to wait for the command to execute. The default value is 30 seconds.">Время ожидания выполнения команды (в секундах). Значение по умолчанию - 30 секунды.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary vsli:raw="Indicates or specifies how the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; property is interpreted.">Указывает или определяет способ интерпретации свойства <see cref="P:System.Data.IDbCommand.CommandText" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandType&quot; /&gt; values. The default is &lt;see langword=&quot;Text&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.CommandType" />. Значение по умолчанию — <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Возвращает или задает объект <see cref="T:System.Data.IDbConnection" />, используемый этим экземпляром класса <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">Соединение с источником данных.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">Возвращает набор <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Параметры инструкции SQL или хранимой процедуры.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary vsli:raw="Gets or sets the transaction within which the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET data provider executes.">Возвращает или задает транзакцию, в пределах которой выполняется объект <see langword="Command" /> поставщика данных .NET Framework.</summary>
      <returns vsli:raw="the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is &lt;see langword=&quot;null&quot; /&gt;.">выполняется объект <see langword="Command" /> поставщика данных .NET Framework. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Возвращает или задает способы применения результатов команд к объекту <see cref="T:System.Data.DataRow" /> при использовании метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value entered was not one of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values.">Введенное значение не являлось одним из значений <see cref="T:System.Data.UpdateRowSource" />.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Data.UpdateRowSource" />. Значение по умолчанию — <see langword="Both" />, если команда не создается автоматически. Значение по умолчанию — <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary vsli:raw="Represents an open connection to a data source, and is implemented by .NET data providers that access relational databases.">Представляет открытое подключение к источнику данных и реализуется поставщиками данных платформы NET Framework, которые имеют доступ к реляционным базам данных.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">Начинает транзакцию базы данных.</summary>
      <returns vsli:raw="An object representing the new transaction.">Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; value.">Начинает транзакцию базы данных с указанным значением <see cref="T:System.Data.IsolationLevel" />.</summary>
      <param name="il" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.IsolationLevel" />.</param>
      <returns vsli:raw="An object representing the new transaction.">Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="Changes the current database for an open &lt;see langword=&quot;Connection&quot; /&gt; object.">Изменяет текущую базу данных для открытого объекта <see langword="Connection" />.</summary>
      <param name="databaseName" vsli:raw="The name of the database to use in place of the current database.">Имя базы данных, которая предназначена для использования вместо текущей базы данных.</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary vsli:raw="Closes the connection to the database.">Закрывает соединение с базой данных.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a Command object associated with the connection.">Создает и возвращает объект Command, связанный с подключением.</summary>
      <returns vsli:raw="A Command object associated with the connection.">Объект Command, связанный с подключением.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary vsli:raw="Opens a database connection with the settings specified by the &lt;see langword=&quot;ConnectionString&quot; /&gt; property of the provider-specific Connection object.">Устанавливает подключение к базе данных с параметрами, указанными в свойстве <see langword="ConnectionString" /> объекта Connection для определенного поставщика.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary vsli:raw="Gets or sets the string used to open a database.">Получает или задает строку, используемую для открытия базы данных.</summary>
      <returns vsli:raw="A string containing connection settings.">Строка, содержащая параметры подключения.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while trying to establish a connection before terminating the attempt and generating an error.">Возвращает значение времени ожидания (в секундах) при попытке установления подключения, по истечении которого процедура завершается и генерируется ошибка.</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is 15 seconds.">Время (в секундах), в течение которого должно производиться ожидание открытия соединения. Значение по умолчанию - 15 секунды.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary vsli:raw="Gets the name of the current database or the database to be used after a connection is opened.">Получает имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения.</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.">Имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary vsli:raw="Gets the current state of the connection.">Возвращает текущее состояние подключения.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary vsli:raw="Represents a set of command-related properties that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source, and is implemented by .NET data providers that access relational databases.">Представляет набор связанных с командой свойств, которые используются для заполнения <see cref="T:System.Data.DataSet" /> и обновления источника данных, реализуемый поставщиками данных .NET Framework, осуществляющими доступ к реляционным базам данных.</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">Возвращает или задает оператор SQL для удаления записей из набора данных.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">Возвращает или задает оператор SQL для вставки новых записей в источник данных.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">Возвращает или задает оператор SQL для выбора записей в источнике данных.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">Возвращает или задает оператор SQL для обновления записей в источнике данных.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary vsli:raw="Used by the Visual Basic .NET Data Designers to represent a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns.">Используется в конструкторах данных Visual Basic .NET для представления параметра в объект Command и при необходимости его сопоставления со столбцами <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">Указывает точность числовых параметров.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the Value property of a data provider Parameter object. The default value is 0, which indicates that a data provider sets the precision for Value.">Максимальное число разрядов, используемых для представления свойства Value объекта Parameter поставщика данных. Значение по умолчанию — 0. Оно указывает, что точность значения Value задает поставщик данных.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary vsli:raw="Indicates the scale of numeric parameters.">Указывает масштаб числовых параметров.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">Число десятичных знаков, применяемых в <see cref="P:System.Data.OleDb.OleDbParameter.Value" />. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary vsli:raw="The size of the parameter.">Размер параметра.</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">Максимальный размер в байтах данных внутри столбца. Значение по умолчанию определяется исходя из значения параметра.</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary vsli:raw="Represents a transaction to be performed at a data source, and is implemented by .NET data providers that access relational databases.">Представляет транзакцию, выполняемую с источником данных; реализуется поставщиками данных платформы NET Framework, у которых есть доступ к реляционным базам данных.</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary vsli:raw="Commits the database transaction.">Фиксирует транзакцию базы данных.</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">Ошибка при попытке фиксации транзакции.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">Транзакция уже зафиксирована, или выполнен откат.  
  
 -или-  
  
 Соединение закрыто.</exception>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary vsli:raw="Rolls back a transaction from a pending state.">Откатывает транзакцию из состояния ожидания.</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">Ошибка при попытке фиксации транзакции.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">Транзакция уже зафиксирована, или выполнен откат.  
  
 -или-  
  
 Соединение закрыто.</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary vsli:raw="Specifies the Connection object to associate with the transaction.">Указывает объект Connection для связывания с транзакцией.</summary>
      <returns vsli:raw="The Connection object to associate with the transaction.">Объект Connection для связывания с транзакцией.</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction.">Указывает <see cref="T:System.Data.IsolationLevel" /> для этой транзакции.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction. The default is &lt;see langword=&quot;ReadCommitted&quot; /&gt;.">
        <see cref="T:System.Data.IsolationLevel" /> для этой транзакции. Значение по умолчанию — <see langword="ReadCommitted" />.</returns>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary vsli:raw="Represents the exception that is thrown when you call the &lt;see cref=&quot;M:System.Data.DataRow.EndEdit&quot; /&gt; method within the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Представляет исключение, которое выдается при вызове метода <see cref="M:System.Data.DataRow.EndEdit" /> в событии <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.InRowChangingEventException" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with serialization information.">Инициализирует новый экземпляр класса <see cref="T:System.Data.InRowChangingEventException" /> со сведениями о сериализации.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.InRowChangingEventException" /> с заданной строкой.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.InRowChangingEventException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary vsli:raw="Provides the base functionality for creating collections.">Предоставляет базовую функциональность для создания коллекций.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.InternalDataCollectionBase" />.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; index.">Копирует все элементы текущего объекта <see cref="T:System.Data.InternalDataCollectionBase" /> в одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса <see cref="T:System.Data.InternalDataCollectionBase" />.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; object's elements into.">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы текущего объекта <see cref="T:System.Data.InternalDataCollectionBase" />.</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">Индекс целевого массива <see cref="T:System.Array" />, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">Возвращает объект <see cref="T:System.Collections.IEnumerator" /> для коллекции.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">Перечислитель <see cref="T:System.Collections.IEnumerator" /> для коллекции.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary vsli:raw="Gets the total number of elements in a collection.">Возвращает общее число элементов в коллекции.</summary>
      <returns vsli:raw="The total number of elements in a collection.">Общее число элементов в коллекции.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is read-only.">Получает значение, указывающее, доступен ли объект <see cref="T:System.Data.InternalDataCollectionBase" /> только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если коллекция доступна только для чтения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is synchronized.">Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.InternalDataCollectionBase" /> синхронизированной.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если коллекция синхронизирована; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary vsli:raw="Gets the items of the collection as a list.">Возвращает элементы коллекции в виде списка.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the collection.">Объект <see cref="T:System.Collections.ArrayList" />, содержащий коллекцию.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize the collection.">Возвращает объект, который можно использовать для синхронизации коллекции.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; used to synchronize the collection.">Объект <see cref="T:System.Object" />, который используется для синхронизации коллекции.</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when incorrectly trying to create or access a relation.">Представляет исключение, возникающее при неправильной попытке создания отношения или доступа к нему.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidConstraintException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with serialization information.">Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidConstraintException" /> со сведениями о сериализации.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidConstraintException" /> с заданной строкой.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidConstraintException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary vsli:raw="Represents the exception that is thrown when you try to add a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains an invalid &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Представляет собой исключение, возникающее при попытке добавления столбца <see cref="T:System.Data.DataColumn" />, содержащего недопустимое выражение <see cref="P:System.Data.DataColumn.Expression" />, к коллекции <see cref="T:System.Data.DataColumnCollection" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidExpressionException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidExpressionException" /> со свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Информация, необходимая для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">Источник и назначение данного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidExpressionException" /> с заданной строкой.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidExpressionException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary vsli:raw="Specifies the transaction locking behavior for the connection.">Указывает режим блокировки транзакций для подключения.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary vsli:raw="The pending changes from more highly isolated transactions cannot be overwritten.">Ожидающие изменения более изолированных транзакций не могут быть перезаписаны.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary vsli:raw="Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.">В процессе чтения данных совмещаемые блокировки сохраняются, чтобы избежать чтения "грязных" данных, однако данные могут быть изменены до окончания транзакции, что может стать причиной неповторяемого чтения или появления фиктивных данных.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary vsli:raw="A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.">Чтение "грязных" данных возможно, что означает отсутствие совмещаемых и монопольных блокировок.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary vsli:raw="Locks are placed on all data that is used in a query, preventing other users from updating the data. Prevents non-repeatable reads but phantom rows are still possible.">Блокировки помещаются на все данные, используемые в запросе, что предотвращает обновление данных другими пользователями. Предотвращает неповторяемое чтение, однако появление фиктивных строк остается возможным.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary vsli:raw="A range lock is placed on the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preventing other users from updating or inserting rows into the dataset until the transaction is complete.">Блокировка диапазона устанавливается для объекта <see cref="T:System.Data.DataSet" />, что предотвращает обновление или ставку строк другими пользователями в набор данных до завершения транзакции.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary vsli:raw="Reduces blocking by storing a version of data that one application can read while another is modifying the same data. Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.">Уменьшает блокировку, сохраняя версию данных, которую приложение может считывать в то время, когда другое приложение изменяет те же самые данные. Указывает, что из одной транзакции пользователь не может просматривать изменения, сделанные в других транзакциях, даже если он запросит их повторно.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary vsli:raw="A different isolation level than the one specified is being used, but the level cannot be determined.">Используется уровень изоляции, отличный от указанного, однако этот уровень не может быть определен.</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary vsli:raw="Associates a source table with a table in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class, which is used in common by .NET data providers.">Связывает исходную таблицу с таблицей в <see cref="T:System.Data.DataSet" /> и реализуется классом <see cref="T:System.Data.Common.DataTableMapping" />, который обычно используется поставщиками данных .NET Framework.</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Получает производной коллекции <see cref="T:System.Data.Common.DataColumnMappingCollection" /> для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A collection of data column mappings.">Коллекция сопоставлений столбцов данных.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Возвращает или задает имя таблицы в <see cref="T:System.Data.DataSet" /> без учета регистра.</summary>
      <returns vsli:raw="The case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Имя таблицы в <see cref="T:System.Data.DataSet" /> без учета регистра.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive name of the source table.">Возвращает или задает имя исходной таблицы с учетом регистра.</summary>
      <returns vsli:raw="The case-sensitive name of the source table.">Имя исходной таблицы с учетом регистра.</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary vsli:raw="Contains a collection of TableMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">Содержит коллекцию объектов TableMapping и реализуется коллекцией <see cref="T:System.Data.Common.DataTableMappingCollection" />, которая обычно используется поставщиками данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">Добавляет сопоставление таблицы в коллекцию.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Имя исходной таблицы с учетом регистра.</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">Имя таблицы <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">Ссылка на вновь сопоставленный объект <see cref="T:System.Data.ITableMapping" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the collection contains a table mapping with the specified source table name.">Получает значение, указывающее на наличие в коллекции сопоставления таблицы с указанным именем исходной таблицы.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Имя исходной таблицы с учетом регистра.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a table mapping with the specified source table name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сопоставление таблицы с указанным именем исходной таблицы существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Получает объект TableMapping с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">Имя таблицы <see langword="DataSet" /> в коллекции.</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">Объект TableMapping с указанным именем таблицы <see langword="DataSet" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">Получает местоположение объекта <see cref="T:System.Data.ITableMapping" /> в коллекции.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Имя исходной таблицы с учетом регистра.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">Получает местоположение объекта <see cref="T:System.Data.ITableMapping" /> в коллекции (отсчет ведется от нуля).</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name from the collection.">Удаляет объект <see cref="T:System.Data.ITableMapping" /> с указанным именем <see cref="P:System.Data.ITableMapping.SourceTable" /> из коллекции.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the &lt;see langword=&quot;SourceTable&quot; /&gt;.">Имя <see langword="SourceTable" /> с учетом регистра.</param>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">Возвращает или задает экземпляр класса <see cref="T:System.Data.ITableMapping" /> с указанным именем <see cref="P:System.Data.ITableMapping.SourceTable" />.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">Имя <see langword="SourceTable" /> объекта <see cref="T:System.Data.ITableMapping" />.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">Экземпляр класса <see cref="T:System.Data.ITableMapping" /> с указанным именем <see langword="SourceTable" />.</returns>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary vsli:raw="Identifies a list of connection string parameters identified by the &lt;see langword=&quot;KeyRestrictions&quot; /&gt; property that are either allowed or not allowed.">Определяет список параметров строки подключения, определяемых свойством <see langword="KeyRestrictions" />, которые могут быть разрешены или запрещены.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary vsli:raw="Default. Identifies the only additional connection string parameters that are allowed.">По умолчанию. Определяет только разрешенные дополнительные параметры строки подключения.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary vsli:raw="Identifies additional connection string parameters that are not allowed.">Определяет запрещенные дополнительные параметры строки подключения.</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary vsli:raw="Controls how the values from the data source will be applied to existing rows when using the &lt;see cref=&quot;Overload:System.Data.DataTable.Load&quot; /&gt; or &lt;see cref=&quot;Overload:System.Data.DataSet.Load&quot; /&gt; method.">Управляет применением значений из источника данных в существующих строках при использовании метода <see cref="Overload:System.Data.DataTable.Load" /> или <see cref="Overload:System.Data.DataSet.Load" />.</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary vsli:raw="The incoming values for this row will be written to both the current value and the original value versions of the data for each column.">Входные значения для этой строки будут записаны как в текущее значение, так и в исходное значение данных для каждого столбца.</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary vsli:raw="The incoming values for this row will be written to the original value version of each column. The current version of the data in each column will not be changed.  This is the default.">Входные значения для этой строки будут записаны в исходные значения данных для каждого столбца. Текущая версия данных в столбце не изменяется.  Это значение по умолчанию.</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary vsli:raw="The incoming values for this row will be written to the current version of each column. The original version of each column's data will not be changed.">Входные значения для этой строки будут записаны в текущее значение данных для каждого столбца. Исходная версия данных в столбце не изменяется.</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary vsli:raw="Specifies how a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is mapped.">Указывает на порядок сопоставления <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary vsli:raw="The column is mapped to an XML attribute.">Столбец сопоставляется с атрибутом XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary vsli:raw="The column is mapped to an XML element.">Столбец сопоставляется с элементом XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary vsli:raw="The column is mapped to an internal structure.">Столбец сопоставляется с внутренней структурой.</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary vsli:raw="The column is mapped to an &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; node.">Столбец сопоставляется с узелом <see cref="T:System.Xml.XmlText" />.</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary vsli:raw="Occurs when a target and source &lt;see langword=&quot;DataRow&quot; /&gt; have the same primary key value, and the &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; property is set to true.">Происходит, если целевой и исходный объекты <see langword="DataRow" /> имеют одинаковое значение первичного ключа и если свойство <see cref="P:System.Data.DataSet.EnforceConstraints" /> имеет значение true.</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MergeFailedEventArgs&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and a description of the merge conflict.">Инициализирует новый экземпляр класса <see cref="T:System.Data.MergeFailedEventArgs" /> с <see cref="T:System.Data.DataTable" /> и описанием конфликта слияния.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Объект <see cref="T:System.Data.DataTable" />.</param>
      <param name="conflict" vsli:raw="A description of the merge conflict.">Описание конфликта слияния.</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary vsli:raw="Returns a description of the merge conflict.">Возвращает описание конфликта слияния.</summary>
      <returns vsli:raw="A description of the merge conflict.">Описание конфликта слияния.</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Возвращает объект <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Объект <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataSet.MergeFailed&quot; /&gt; event.">Представляет метод обработки события <see cref="E:System.Data.DataSet.MergeFailed" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="The data for the event.">Данные для события.</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary vsli:raw="Determines the action that occurs when a mapping is missing from a source table or a source column.">Определяет действие, которое выполняется при отсутствии сопоставления в исходной таблице или исходном столбце.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">Если отсутствует сопоставление указанного столбца, создается исключение <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary vsli:raw="The column or table not having a mapping is ignored. Returns &lt;see langword=&quot;null&quot; /&gt;.">Столбец или таблица, для которых сопоставление отсутствует, игнорируются. Возвращает <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary vsli:raw="The source column or source table is created and added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using its original name.">Создается исходный столбец или исходная таблица, которая добавляется к <see cref="T:System.Data.DataSet" /> с использованием исходного имени.</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to access a row in a table that has no primary key.">Представляет собой исключение, выдаваемое при попытке доступа к строке таблицы, не имеющей первичного ключа.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.MissingPrimaryKeyException" />.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with serialization information.">Инициализирует новый экземпляр класса <see cref="T:System.Data.MissingPrimaryKeyException" /> со сведениями о сериализации.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="A description of the source and destination of the specified serialized stream.">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.MissingPrimaryKeyException" /> с заданной строкой.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.MissingPrimaryKeyException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary vsli:raw="Specifies the action to take when adding data to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and the required &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; or &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is missing.">Определяет действие, выполняемое при добавлении данных к <see cref="T:System.Data.DataSet" />, если необходимые объекты <see cref="T:System.Data.DataTable" /> или <see cref="T:System.Data.DataColumn" /> отсутствуют.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary vsli:raw="Adds the necessary columns to complete the schema.">Добавляет необходимые столбцы для завершения схемы.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary vsli:raw="&lt;para&gt;Adds the necessary columns and primary key information to complete the schema. For more information about how primary key information is added to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, see &lt;see cref=&quot;M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt;.&lt;/para&gt;&lt;para&gt;To function properly with the .NET Framework Data Provider for OLE DB, &lt;see langword=&quot;AddWithKey&quot; /&gt; requires that the native OLE DB provider obtains necessary primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the IColumnsRowset. As an alternative, the user may explicitly set the primary key constraints on each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This ensures that incoming records that match existing records are updated instead of appended. When using &lt;see langword=&quot;AddWithKey&quot; /&gt;, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. For more information, see SET FMTONLY (Transact-SQL).&lt;/para&gt;">Добавляет необходимые столбцы и сведения о первичном ключе для завершения схемы. Дополнительные сведения о порядке добавления сведений о первичном ключе к <see cref="T:System.Data.DataTable" /> см. в описании метода <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />. Для правильного функционирования <see langword="AddWithKey" /> с поставщиком данных .NET Framework для Microsoft OLE DB необходимо, чтобы собственный поставщик Microsoft OLE DB получил необходимые сведения о первичном ключе путем задания свойства DBPROP_UNIQUEROWS и определил столбцы первичного ключа с помощью проверки свойства DBCOLUMN_KEYCOLUMN в IColumnsRowset. В качестве альтернативного варианта пользователь может явно задать ограничения первичного ключа для каждого объекта <see cref="T:System.Data.DataTable" />. Это гарантирует, что при добавлении записей, соответствующих уже имеющимся записям, они будут обновляться, а не дописываться в конец. При использовании метода <see langword="AddWithKey" /> поставщик данных .NET Framework для SQL Server добавляет предложение FOR BROWSE к выполняемому оператору. Пользователь должен быть осведомлен о возможных побочных эффектах, например о проблемах, возникающих при использовании операторов SET FMTONLY ON. Дополнительные сведения см. в разделе SET FMTONLY (Transact-SQL).</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">Если отсутствует сопоставление указанного столбца, создается исключение <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary vsli:raw="Ignores the extra columns.">Игнорирует лишние столбцы.</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary vsli:raw="Represents the exception that is thrown when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">Представляет исключение, которое создается при попытке вставить значение NULL в столбец, где <see cref="P:System.Data.DataColumn.AllowDBNull" /> имеет значение <see langword="false" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.NoNullAllowedException" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with serialization information.">Инициализирует новый экземпляр класса <see cref="T:System.Data.NoNullAllowedException" /> со сведениями о сериализации.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.NoNullAllowedException" /> с заданной строкой.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.NoNullAllowedException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of ordered &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">Представляет упорядоченную коллекцию объектов <see cref="T:System.Data.DataRow" />, возвращенных запросом.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип объектов в исходной последовательности, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary vsli:raw="Specifies the type of a parameter within a query relative to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Указывает тип параметра в запросе к объекту <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary vsli:raw="The parameter is an input parameter.">Параметр является входным.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary vsli:raw="The parameter is capable of both input and output.">Параметр может быть как входным, так и выходным.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary vsli:raw="The parameter is an output parameter.">Параметр является выходным.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary vsli:raw="The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function.">Параметр представляет значение, возвращаемое как результат операции, например хранимой процедуры, встроенной функции или определяемой пользователем функции.</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary vsli:raw="Represents a collection of properties that can be added to &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Представляет коллекцию свойств, которые можно добавить в объекты <see cref="T:System.Data.DataColumn" />, <see cref="T:System.Data.DataSet" /> или <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.PropertyCollection" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.PropertyCollection" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Информация, необходимая для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">Источник и назначение данного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">Создает неполную копию объекта <see cref="T:System.Data.PropertyCollection" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Object&quot; /&gt;, a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">Возвращает <see cref="T:System.Object" />, неполную копию объекта <see cref="T:System.Data.PropertyCollection" />.</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to change the value of a read-only column.">Представляет исключение, которое выдается при попытке изменить значение столбца, доступное только для чтения.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.ReadOnlyException" />.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with serialization information.">Инициализирует новый экземпляр класса <see cref="T:System.Data.ReadOnlyException" /> со сведениями о сериализации.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.ReadOnlyException" /> с заданной строкой.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.ReadOnlyException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary vsli:raw="Represents the exception that is thrown when you try to perform an operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is not in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Представляет исключение, которое выдается при попытке выполнить действие с объектом <see cref="T:System.Data.DataRow" />, который не содержится в объекте <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.RowNotInTableException" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with serialization information.">Инициализирует новый экземпляр класса <see cref="T:System.Data.RowNotInTableException" /> со сведениями о сериализации.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.RowNotInTableException" /> с заданной строкой.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.RowNotInTableException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary vsli:raw="Indicates the action that occurs when a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced.">Указывает действие, которое должно быть выполнено для обеспечения ограничения <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary vsli:raw="Delete or update related rows. This is the default.">Удалить или обновить связанные строки. Это значение по умолчанию.</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary vsli:raw="No action taken on related rows.">К связанным строкам действия не применялись.</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary vsli:raw="Set values in related rows to the value contained in the &lt;see cref=&quot;P:System.Data.DataColumn.DefaultValue&quot; /&gt; property.">Задайте связанным строкам значения, содержащиеся в свойстве <see cref="P:System.Data.DataColumn.DefaultValue" />.</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary vsli:raw="Set values in related rows to &lt;see langword=&quot;DBNull&quot; /&gt;.">Задайте связанным строкам значение <see langword="DBNull" />.</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary vsli:raw="Indicates the schema serialization mode for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Указывает режим схемы сериализации для типизированного объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary vsli:raw="Skips schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Пропускает схему сериализации для типизированного объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary vsli:raw="Includes schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default.">Включает схему сериализации для типизированного объекта <see cref="T:System.Data.DataSet" />. Это значение используется по умолчанию.</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary vsli:raw="Specifies how to handle existing schema mappings when performing a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt; operation.">Указывает, как будут обрабатываться существующие сопоставления схемы при выполнении операции <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary vsli:raw="Apply any existing table mappings to the incoming schema. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the transformed schema.">Все существующие сопоставления таблиц будут применяться к входящей схеме. При конфигурировании <see cref="T:System.Data.DataSet" /> будет использоваться преобразованная схема.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary vsli:raw="Ignore any table mappings on the DataAdapter. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the incoming schema without applying any transformations.">Все сопоставления таблиц в DataAdapter будут игнорироваться. При конфигурировании <see cref="T:System.Data.DataSet" /> будет использоваться непреобразованная входящая схема.</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary vsli:raw="Determines the serialization format for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Определяет формат сериализации для объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary vsli:raw="Serialize as binary content. Available in ADO.NET 2.0 and later versions only. This field is obsolete starting in .NET 7.">Сериализация в качестве двоичного содержимого. Доступна только в ADO.NET 2.0.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary vsli:raw="Serialize as XML content. The default.">Сериализация в качестве XML-содержимого. Это значение используется по умолчанию.</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary vsli:raw="Specifies SQL Server-specific data type of a field, property, for use in a &lt;see cref=&quot;T:System.Data.SqlClient.SqlParameter&quot; /&gt;.">Указывает относящийся к SQL Server тип данных поля или свойства для использования в <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int64&quot; /&gt;. A 64-bit signed integer.">
        <see cref="T:System.Int64" />. 64-разрядное целое число со знаком.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.">
        <see cref="T:System.Array" /> имеет тип данных <see cref="T:System.Byte" />. Поток фиксированной длины из двоичных данных, имеющий длину от 1 до 8000 байтов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Boolean&quot; /&gt;. An unsigned numeric value that can be 0, 1, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Boolean" />. Числовое значение без знака, которое может быть равно 0, 1 или <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">
        <see cref="T:System.String" />. Поток фиксированной длины из символов, не принадлежащих кодировке Юникод. В нем может быть от 1 до 8000 символов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary vsli:raw="Date data ranging in value from January 1,1 AD through December 31, 9999 AD.">Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.">
        <see cref="T:System.DateTime" />. Значение даты и времени, лежащее в диапазоне от 1 января 1753 года до 31 декабря 9999 года и имеющее точность 3.33 миллисекунды.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">Данные даты и времени. Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">Данные даты и времени с учетом часового пояса. Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд. Часовые пояса могут находиться в диапазоне от -14:00 до +14:00.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1.">
        <see cref="T:System.Decimal" />. Числовое значение с фиксированной точностью и масштабом в диапазоне от –10 38 –1 до 10 38 –1.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Double&quot; /&gt;. A floating point number within the range of -1.79E +308 through 1.79E +308.">
        <see cref="T:System.Double" />. Числовое значение с плавающей запятой, лежащее в диапазоне от -1.79E +308 до 1.79E +308.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging from 0 to 2 31 -1 (or 2,147,483,647) bytes.">
        <see cref="T:System.Array" /> имеет тип данных <see cref="T:System.Byte" />. Поток переменной длины из двоичных данных, имеющий длину от 0 до 2 31 –1 (или 2 147 483 647) байтов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int32&quot; /&gt;. A 32-bit signed integer.">
        <see cref="T:System.Int32" />. 32-разрядное знаковое целое число.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -2 63 (or -9,223,372,036,854,775,808) to 2 63 -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />. Значение типа currency, лежащее в диапазоне от –2 63 (или –9 223 372 036 854 775 808) до 2 63 –1 (или +9 223 372 036 854 775 807) и имеющее точность до одной десятитысячной денежной единицы.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.">
        <see cref="T:System.String" />. Поток фиксированной длины из символов кодировки Юникод. В нем может быть от 1 до 4 000 символов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode data with a maximum length of 2 30 - 1 (or 1,073,741,823) characters.">
        <see cref="T:System.String" />. Поток переменной длины из данных Юникод, максимальная длина которого равна 2 30 – 1 (или 1 073 741 823) символов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.NVarChar&quot; /&gt; when the database column is &lt;see langword=&quot;nvarchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />. Поток переменной длины из символов кодировки Юникод. В нем может быть от 1 до 4 000 символов. Неявное преобразование не может быть выполнено, если длина строки превышает 4 000 символов. Поэтому при работе со строками длиннее 4 000 символов нужно явно задавать значение этого объекта. Используйте <see cref="F:System.Data.SqlDbType.NVarChar" />, если столбец базы данных имеет тип <see langword="nvarchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Single&quot; /&gt;. A floating point number within the range of -3.40E +38 through 3.40E +38.">
        <see cref="T:System.Single" />. Числовое значение с плавающей запятой, лежащее в диапазоне от -3,40E +38 до 3,40E +38.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.">
        <see cref="T:System.DateTime" />. Значение даты и времени, лежащее в диапазоне от 1 января 1900 года до 6 июня 2079 года, точность которого равна одной минуте.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int16&quot; /&gt;. A 16-bit signed integer.">
        <see cref="T:System.Int16" />. 16-разрядное знаковое целое число.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />. Денежная сумма в диапазоне от -214 748,3648 до +214 748,3647 с точностью, равной одной десятитысячной денежной единицы.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary vsli:raw="A special data type for specifying structured data contained in table-valued parameters.">Специальный тип данных для определения структурированных данных, содержащихся в параметрах табличных значений.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode data with a maximum length of 2 31 -1 (or 2,147,483,647) characters.">
        <see cref="T:System.String" />. Поток переменной длины из символов, не принадлежащих кодировке Юникод, максимальная длина которого равна 2 31 –1 (или 2 147 483 647) символов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary vsli:raw="Time data based on a 24-hour clock. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Corresponds to a SQL Server &lt;see langword=&quot;time&quot; /&gt; value.">Данные времени в 24-часовом формате. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд. Соответствует значению <see langword="time" /> SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. Automatically generated binary numbers, which are guaranteed to be unique within a database. &lt;see langword=&quot;timestamp&quot; /&gt; is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.">
        <see cref="T:System.Array" /> имеет тип данных <see cref="T:System.Byte" />. Автоматически создаваемые двоичные числа, которые гарантированно являются уникальными в пределах базы данных. Значения <see langword="timestamp" /> обычно используются для отметки версий строк таблицы. Размер при хранении — 8 байт.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Byte&quot; /&gt;. An 8-bit unsigned integer.">
        <see cref="T:System.Byte" />. 8-разрядное целое число без знака.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary vsli:raw="A SQL Server user-defined type (UDT).">Пользовательский тип (UDT) SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Guid&quot; /&gt;. A globally unique identifier (or GUID).">
        <see cref="T:System.Guid" />. Глобальный уникальный идентификатор (GUID).</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.">
        <see cref="T:System.Array" /> имеет тип данных <see cref="T:System.Byte" />. Поток переменной длины из двоичных данных, имеющий длину от 1 до 8000 байт. Неявное преобразование не может быть выполнено, если длина массива превышает 8 000 байтов. Поэтому при работе с массивами байтов, состоящими из более чем 8000 байтов, нужно явно задать значение этого объекта.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.VarChar&quot; /&gt; when the database column is &lt;see langword=&quot;varchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />. Поток переменной длины из символов, не принадлежащих кодировке Юникод. В нем может быть от 1 до 8000 символов. Используйте <see cref="F:System.Data.SqlDbType.VarChar" />, если столбец базы данных имеет тип <see langword="varchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Object&quot; /&gt;. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.">
        <see cref="T:System.Object" />. Специальный тип данных, который может содержать числовые, строковые, двоичные данные, даты, а также значения Empty и Null, относящиеся к SQL Server. Если ни один тип не объявлен, считается, что данные имеют этот тип.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary vsli:raw="An XML value. Obtain the XML as a string using the &lt;see cref=&quot;M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)&quot; /&gt; method or &lt;see cref=&quot;P:System.Data.SqlTypes.SqlXml.Value&quot; /&gt; property, or as an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; by calling the &lt;see cref=&quot;M:System.Data.SqlTypes.SqlXml.CreateReader&quot; /&gt; method.">Значение XML. Получает XML как строку с помощью метода <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> или свойства <see cref="P:System.Data.SqlTypes.SqlXml.Value" />, или в качестве средства чтения <see cref="T:System.Xml.XmlReader" /> путем вызова метода <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary vsli:raw="All the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; objects and structures implement the &lt;see langword=&quot;INullable&quot; /&gt; interface.">Во всех объектах и структурах <see cref="N:System.Data.SqlTypes" /> реализован интерфейс <see langword="INullable" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary vsli:raw="Indicates whether a structure is null. This property is read-only.">Показывает, является ли структура неопределенной. Это свойство доступно только для чтения.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see langword=&quot;true&quot; /&gt; if the value of this object is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
        <see langword="true" />, если значение этого объекта равно NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">Класс <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
      <param name="e" vsli:raw="A reference to an inner exception.">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Represents a variable-length stream of binary data to be stored in or retrieved from a database.">Представляет поток двоичных данных переменной длины, сохраняемый в базе данных или извлекаемый из нее.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure, setting the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property to the contents of the supplied byte array.">Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, задавая в качестве значения свойства <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> содержимое предоставленного массива байтов.</summary>
      <param name="value" vsli:raw="The byte array to be stored or retrieved.">Сохраняемый или извлекаемый массив байтов.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Сцепляет два заданных значения <see cref="T:System.Data.SqlTypes.SqlBinary" /> для создания новой структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; that is the concatenated value of x and y.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />, представляющая собой сцепленное значение, составленное из x и y.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object and returns an indication of their relative values.">Сравнивает этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> с предоставленным объектом <see cref="T:System.Data.SqlTypes.SqlBinary" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> для сравнения с этой структурой <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее относительные значения данной структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Значение этого объекта <see cref="T:System.Data.SqlTypes.SqlBinary" /> меньше, чем данный объект.</description></item><item><term> Нуль</term><description> Этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> совпадает с объектом.</description></item><item><term> Больше нуля</term><description> Этот <see cref="T:System.Data.SqlTypes.SqlBinary" /> объект больше объекта, или объект является пустой ссылкой.</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied object and returns an indication of their relative values.">Сравнивает этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> с предоставленным объектом и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Объект, который необходимо сравнить с этой структурой <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее относительные значения данной структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Значение этого объекта <see cref="T:System.Data.SqlTypes.SqlBinary" /> меньше, чем данный объект.</description></item><item><term> Нуль</term><description> Этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> совпадает с объектом.</description></item><item><term> Больше нуля</term><description> Этот <see cref="T:System.Data.SqlTypes.SqlBinary" /> объект больше объекта, или объект является пустой ссылкой.</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Сцепляет две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> для создания новой структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">Сцепленные значения параметров <paramref name="x" /> и <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, совпадают ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlBinary&quot; /&gt; will be null.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlBinary" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Сравниваемый объект.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Возвращает хэш-код данной структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, превышает ли первая вторую.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, является ли первая меньше второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, является ли первая меньше или равна второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> на неравенство.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameters to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Сцепляет два параметра <see cref="T:System.Data.SqlTypes.SqlBinary" /> для создания новой структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">Сцепленные значения параметров <paramref name="x" /> и <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, совпадают ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlBinary" /> в массив <see cref="T:System.Byte" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Массив <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, превышает ли первая вторую.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts an array of bytes to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Преобразует массив байтов в структуру <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="The array of bytes to be converted.">Преобразуемый массив байтов.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure that represents the converted array of bytes.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />, которая представляет преобразованный массив байтов.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> на неравенство.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, является ли первая меньше второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, является ли первая меньше или равна второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">Экземпляр <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Объект <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Объект <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Преобразует этот экземпляр <see cref="T:System.Data.SqlTypes.SqlBinary" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to a string.">Преобразует этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> в строку.</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;. If the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; is null the string will contain &quot;null&quot;.">Строка, содержащая <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> типа <see cref="T:System.Data.SqlTypes.SqlBinary" />. Если <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> пусто, строка будет содержать "NULL".</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure is null. This property is read-only.">Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlBinary" /> значение null. Это свойство доступно только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> если <see langword="null" />. В противном случае <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary vsli:raw="Gets the single byte from the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property located at the position indicated by the integer parameter, &lt;paramref name=&quot;index&quot; /&gt;. If &lt;paramref name=&quot;index&quot; /&gt; indicates a position beyond the end of the byte array, a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; will be raised. This property is read-only.">Получает один байт из свойства <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />, расположенный в позиции, на которую указывает целочисленный параметр <paramref name="index" />. Если <paramref name="index" /> указывает на позицию за пределами массива байтов, появится <see cref="T:System.Data.SqlTypes.SqlNullValueException" />. Это свойство доступно только для чтения.</summary>
      <param name="index" vsli:raw="The position of the byte to be retrieved.">Позиция извлекаемого байта.</param>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;index&quot; /&gt; parameter indicates a position beyond the length of the byte array as indicated by the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property.">Свойство читается, когда свойство <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> содержит <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.  
  
-или- 
Параметр <paramref name="index" /> указывает на позицию за пределами длины массива байтов, указанной в свойстве <see cref="P:System.Data.SqlTypes.SqlBinary.Length" />.</exception>
      <returns vsli:raw="The byte located at the position indicated by the integer parameter.">Байт, расположенный в позиции, на которую указывает целочисленный параметр.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary vsli:raw="Gets the length in bytes of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property. This property is read-only.">Получает длину в байтах для свойства <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />. Это свойство доступно только для чтения.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">Свойство <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> читается, когда свойство <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> содержит <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
      <returns vsli:raw="The length of the binary data in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property.">Длина массива двоичных данных в свойстве <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure. This property is read-only.">Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />. Это свойство доступно только для чтения.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property is read when the property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">Свойство <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> читается, когда свойство содержит <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Значение структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.">Представляет целое значение 1 или 0, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary vsli:raw="Represents a false value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Представляет значение ЛОЖЬ, которое может быть присвоено свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary vsli:raw="Represents &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary vsli:raw="Represents a one value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Представляет значение единицы, которое может быть назначено свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary vsli:raw="Represents a true value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Представляет значение ИСТИНА, которое может быть присвоено свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the supplied Boolean value.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с использованием предоставленного логического значения.</summary>
      <param name="value" vsli:raw="The value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure; either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">Значение для новой структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />; или <see langword="true" />, или <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the specified integer value.">Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с использованием заданного целого значения.</summary>
      <param name="value" vsli:raw="The integer whose value is to be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Целое число, значение которого требуется использовать для новой структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Вычисляет результат битовой операции логического умножения для двух указанных структур <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical AND operation.">Результат операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object and returns an indication of their relative values.">Сравнивает этот объект <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с предоставленным объектом <see cref="T:System.Data.SqlTypes.SqlBoolean" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Сравниваемый объект <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> или пустая ссылка (<see langword="Nothing" /> в Visual Basic).</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее относительные значения экземпляра и значения.  
  
 <list type="table"><listheader><term> Значение</term><description> Описание:</description></listheader><item><term> Отрицательное целое число</term><description> Этот экземпляр меньше параметра <paramref name="value" />.</description></item><item><term> Нуль</term><description> Этот экземпляр и параметр <paramref name="value" /> равны.</description></item><item><term> Положительное целое число</term><description> Этот экземпляр больше <paramref name="value" /> или <paramref name="value" /> является пустой ссылкой ( <see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a specified object and returns an indication of their relative values.">Сравнивает данную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с заданным объектом и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="An object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Сравниваемый объект или пустая ссылка (<see langword="Nothing" /> в Visual Basic).</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее относительные значения экземпляра и значения.  
  
 <list type="table"><listheader><term> Значение</term><description> Описание:</description></listheader><item><term> Отрицательное целое число</term><description> Этот экземпляр меньше параметра <paramref name="value" />.</description></item><item><term> Нуль</term><description> Этот экземпляр и параметр <paramref name="value" /> равны.</description></item><item><term> Положительное целое число</term><description> Этот экземпляр больше <paramref name="value" /> или <paramref name="value" /> является пустой ссылкой ( <see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether they are equal.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, совпадают ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Сравнивает параметр предоставленного объекта с <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Сравниваемый объект.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Возвращает хэш-код данного экземпляра.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго, в противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше или равен второму экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго, в противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше или равен второму экземпляру; в противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">Сравнивает на равенство два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Выполняет операцию дополнения до единицы для предоставленных структур <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Дополнение до единицы предоставленной структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Вычисляет результат битовой операции логического умножения для двух указанных структур <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical AND operation.">Результат операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise OR of its operands.">Вычисляет результат битовой операции логического сложения операндов.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The results of the logical OR operation.">Результаты операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">Сравнивает на равенство два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR (XOR) operation on the supplied parameters.">Выполняет побитовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical XOR operation.">Результат операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to a Boolean.">Преобразует значение <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в логическое значение.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to convert.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которое требуется преобразовать.</param>
      <returns vsli:raw="A Boolean set to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Логическое значение, установленное для <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Параметр <see cref="T:System.Data.SqlTypes.SqlByte" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, значение которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Параметр <see cref="T:System.Data.SqlTypes.SqlDouble" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Параметр <see cref="T:System.Data.SqlTypes.SqlInt16" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Параметр <see cref="T:System.Data.SqlTypes.SqlInt32" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Параметр <see cref="T:System.Data.SqlTypes.SqlInt64" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Параметр <see cref="T:System.Data.SqlTypes.SqlMoney" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Параметр <see cref="T:System.Data.SqlTypes.SqlSingle" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Параметр <see cref="T:System.Data.SqlTypes.SqlString" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The false operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is false.">Оператор false может использоваться для проверки свойства <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, имеет ли оно значение FALSE.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">Проверяемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> имеет значение <see langword="false" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, превышает ли первая вторую.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго, в противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше или равен второму экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Преобразует предоставленное значение байта в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Значение байта, преобразуемое в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; value that contains 0 or 1.">Значение <see cref="T:System.Data.SqlTypes.SqlBoolean" />, содержащее 0 или 1.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether they are not equal.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с целью проверить, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше или равен второму экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a NOT operation on a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Выполняет операцию логического отрицания со структурой <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; on which the NOT operation will be performed.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, для которой будет выполняться операция логического отрицания.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; with the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt;&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if argument was true, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if argument was null, and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; otherwise.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если аргумент имел значение TRUE, <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, если аргумент имел значение NULL; в противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Выполняет операцию дополнения до единицы для предоставленных структур <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Дополнение до единицы предоставленной структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The true operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is true.">Оператор true может использоваться для проверки свойства <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> для структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, имеет ли оно значение TRUE.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">Проверяемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> имеет значение <see langword="true" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise OR operation on the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Выполняет битовую операцию ИЛИ с двумя указанными структурами <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose Value is the result of the bitwise OR operation.">Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, значение которой является результатом битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a logical value to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; equivalent.">Преобразует заданное представление логического значения <see cref="T:System.String" /> в его эквивалент <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">Преобразуемая структура <see cref="T:System.String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure that contains the parsed value.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, содержащая анализируемое значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 0.">Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlByte" /> имеет значение 1. В противном случае новое значение структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 0.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> имеет значение 1. В противном случае новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 0.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> имеет значение 1. В противном случае новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure's value is 0.">Новая структура <see langword="SqlInt16" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" /> имеет значение 1. В противном случае новое значение структуры <see langword="SqlInt16" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure's value is 0.">Новая структура <see langword="SqlInt32" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" /> имеет значение 1. В противном случае новое значение структуры <see langword="SqlInt32" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure's value is 0.">Новая структура <see langword="SqlInt64" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" /> имеет значение 1. В противном случае новое значение структуры <see langword="SqlInt64" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 1. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;false&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 0. If &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value is neither 1 nor 0, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новое значение <see cref="T:System.Data.SqlTypes.SqlMoney" /> равняется 1. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="false" />, новое значение <see cref="T:System.Data.SqlTypes.SqlMoney" /> равняется 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> не равняется ни 1, ни 0, новое значение <see cref="T:System.Data.SqlTypes.SqlMoney" /> равняется <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose value is 1 or 0.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals true, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 1; otherwise the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 0.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" /> со значением 1 или 0.  
  
Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равно TRUE, значение новой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> равно 1; в противном случае значение новой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> равно 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 0.">Новая структура <see cref="T:System.Data.SqlTypes.SqlString" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> — <see langword="true" />, то значение структуры <see cref="T:System.Data.SqlTypes.SqlString" /> — 1. В противном случае новое значение структуры <see cref="T:System.Data.SqlTypes.SqlString" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a string.">Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в строку.</summary>
      <returns vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;. If the value is null, the string will contain &quot;null&quot;.">Строка, содержащая значение <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Если данное значение равно NULL, строка будет содержать "NULL".</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical XOR operation.">Результат операции исключающего логического сложения.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure as a byte.">Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в виде байта.</summary>
      <returns vsli:raw="A byte representing the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Байт, представляющий значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">Показывает, задано ли для текущего свойства <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если свойство <see langword="Value" /> имеет значение <see langword="False" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null.">Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlBoolean" /> значение null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> значение, если структура пуста <see cref="T:System.Data.SqlTypes.SqlBoolean" /> . в противном случае — значение <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary vsli:raw="Gets a value that indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">Получает значение, указывающее имеет ли данный <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если свойство <see langword="Value" /> имеет значение <see langword="true" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value. This property is read-only.">Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Это свойство доступно только для чтения.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">Для свойства задано значение NULL.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Data.SqlTypes.SqlBoolean" /> имеет тип <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database.">Представляет 8-разрядное целое число без знака в диапазоне от 0 до 255, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Константа, представляющая наибольшее возможное значение <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Константа, представляющая наименьшее возможное значение <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure using the specified byte value.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> с использованием заданного байтового значения.</summary>
      <param name="value" vsli:raw="A byte value to be stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Байтовое значение, сохраняемое в свойстве <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; property contains the results of the addition.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see langword="Value" /> которой содержит результаты сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise AND operation.">Результаты битовой операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise OR operation.">Результаты битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object and returns an indication of their relative values.">Сравнивает данный экземпляр с предоставленным объектом <see cref="T:System.Data.SqlTypes.SqlByte" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object to be compared.">Сравниваемый объект <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр с предоставленным объектом <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Делит свой первый операнд <see cref="T:System.Data.SqlTypes.SqlByte" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlByte&quot; /&gt; will be null.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlByte" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object.">Сравнивает предоставленный параметр <see cref="T:System.Object" /> со свойством <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Возвращает хэш-код данного экземпляра.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Вычисляет остаток от деления первого операнда <see cref="T:System.Data.SqlTypes.SqlByte" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; values and returns the remainder.">Делит одно значение <see cref="T:System.Data.SqlTypes.SqlByte" />на другое и возвращает остаток.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Остаток, получившийся при делении <paramref name="x" /> на <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Вычисляет произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" /> с целью проверить, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">Оператор дополнения до единицы выполняет битовую операцию дополнения до единицы над своим операндом <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит дополнение до единицы параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the sum of the two operands.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, в свойстве <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержится сумма двух операндов.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise AND operation.">Результаты битовой операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise OR operation.">Результаты битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Делит свой первый операнд <see cref="T:System.Data.SqlTypes.SqlByte" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise XOR operation.">Результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" />, преобразуемый в <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> предоставленного параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a byte.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в байт.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted to a byte.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, преобразуемая в байт.</param>
      <returns vsli:raw="A byte whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Байт, значение которого равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure.">Структура <see langword="SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="An instance of the &lt;see langword=&quot;SqlString&quot; /&gt; class.">Экземпляр класса <see langword="SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the numeric value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно числовому значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see langword=&quot;SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see langword="SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует предоставленное значение байта в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Значение байта, преобразуемое в <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the supplied parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно предоставленному параметру.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" /> с целью проверить, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Вычисляет остаток от деления первого операнда <see cref="T:System.Data.SqlTypes.SqlByte" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Вычисляет произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">Оператор дополнения до единицы выполняет битовую операцию дополнения до единицы над своим операндом <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит дополнение до единицы параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Вычитает второй операнд <see cref="T:System.Data.SqlTypes.SqlByte" /> из первого.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Результаты вычитания второго операнда <see cref="T:System.Data.SqlTypes.SqlByte" /> из первого.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 8-bit unsigned integer equivalent.">Преобразует представление <see cref="T:System.String" /> числа в эквивалентное ему 8-разрядное целое число без знака.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure that contains the 8-bit number represented by the &lt;see langword=&quot;String&quot; /&gt; parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, содержащая 8-разрядное число, представленное параметром <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Вычитает второй операнд <see cref="T:System.Data.SqlTypes.SqlByte" /> из первого.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Результаты вычитания второго операнда <see cref="T:System.Data.SqlTypes.SqlByte" /> из первого.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see langword="SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDouble&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Структура <see langword="SqlDouble" />, имеющая то же значение, что и данная структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt16&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Структура <see langword="SqlInt16" />, имеющая то же значение, что и данная структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt32&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Структура <see langword="SqlInt32" />, имеющая то же значение, что и данная структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure who &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Структура <see langword="SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see langword="SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlSingle&quot; /&gt; structure that has the same &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see langword="SqlSingle" />, имеющая то же <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />, что и данная структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует этот экземпляр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt;.">Структура <see langword="SqlString" />, содержащая строковое представление <see cref="T:System.Data.SqlTypes.SqlByte" /> структуры <see cref="P:System.Data.SqlTypes.SqlByte.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;. If the &lt;see langword=&quot;Value&quot; /&gt; is null, the &lt;see langword=&quot;String&quot; /&gt; will be a null string.">Строка, содержащая <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> типа <see cref="T:System.Data.SqlTypes.SqlByte" />. Если <see langword="Value" /> равно NULL, <see langword="String" /> будет пустой строкой.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the XOR operation.">Результаты операции исключающего логического сложения.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure is null.">Получает логическое значение, показывающее, имеет ли данная структура <see cref="T:System.Data.SqlTypes.SqlByte" /> значение NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure. This property is read-only.">Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlByte" />. Это свойство доступно только для чтения.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Значение структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Represents a mutable reference type that wraps either a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Buffer&quot; /&gt; or a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Stream&quot; /&gt;.">Представляет изменяемый ссылочный тип, служащий оболочкой для <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> или <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified byte array.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlBytes" /> на основе заданного массива байтов.</summary>
      <param name="buffer" vsli:raw="The array of unsigned bytes.">Массив байтов без знака.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlBytes" /> на основе указанного значения <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">Значение <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; value.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlBytes" /> на основе указанного значения <see cref="T:System.IO.Stream" />.</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Объект <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see langword=&quot;XmlSchemaSet&quot; /&gt;.">Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see langword="XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlBinary" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlBytes" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to the passed-in buffer and returns the number of copied bytes.">Копирует байты из этого экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" /> в буфер передачи и возвращает количество скопированных байтов.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Смещение типа long <see cref="T:System.Int64" /> в значении, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">Буфер массива байтов, в который будет выполняться копирование.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Целочисленное смещение <see cref="T:System.Int32" /> в буфере для начала копирования.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">Целое число <see cref="T:System.Int32" />, представляющее количество байтов для копирования.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the number of copied bytes.">Значение типа long <see cref="T:System.Int64" />, представляющее число скопированных байтов.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Задает длину данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the length.">Значение типа long <see cref="T:System.Int64" />, представляющее длину.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to null.">Задает для данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" /> значение NULL.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Получает сведения о сериализации со всеми данными, необходимыми для повторного создания данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">Объект, для которого будут заполнены сведения о сериализации.</param>
      <param name="context" vsli:raw="The destination context of the serialization.">Контекст назначения сериализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary vsli:raw="Constructs and returns a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Формирует и возвращает <see cref="T:System.Data.SqlTypes.SqlBinary" /> из данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this instance.">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> из данного экземпляра.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Копирует байты из буфера передачи в этот экземпляр <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Смещение типа long <see cref="T:System.Int64" /> в значении, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">Буфер массива байтов, в который будет выполняться копирование.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Целочисленное смещение <see cref="T:System.Int32" /> в буфере для начала копирования.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">Целое число <see cref="T:System.Int32" />, представляющее количество байтов для копирования.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">Возвращает ссылку на внутренний буфер.</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">Ссылка на внутренний буфер. Для экземпляров <see cref="T:System.Data.SqlTypes.SqlBytes" />, созданных поверх неуправляемых указателей, возвращает управляемую копию внутреннего буфера.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null.">Получает логическое значение, показывающее, имеет ли данный экземпляр <see cref="T:System.Data.SqlTypes.SqlBytes" /> значение NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null, &lt;see langword=&quot;false&quot; /&gt; otherwise.">Значение <see langword="true" />, если объект <see cref="T:System.Data.SqlTypes.SqlBytes" /> имеет значение NULL; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance at the specified index.">Получает или задает экземпляр <see cref="T:System.Data.SqlTypes.SqlBytes" /> по указанному индексу.</summary>
      <param name="offset" vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">Значение <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">Значение <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Получает длину значения, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">Значение <see cref="T:System.Int64" />, представляющее длину значения, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlBytes" />.  
  
Возвращает -1, если для экземпляра нет доступного буфера или если значение равно NULL.  
  
Возвращает <see cref="P:System.IO.Stream.Length" /> для экземпляра, включенного в поток.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary vsli:raw="Gets the maximum length of the value of the internal buffer of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Получает максимальную длину значения внутреннего буфера данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A long representing the maximum length of the value of the internal buffer. Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Число типа long, представляющее максимальную длину значения внутреннего буфера. Возвращает –1 для экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />, включенного в поток.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary vsli:raw="Gets a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Получает пустой экземпляр данного объекта <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;.">Экземпляр, <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> свойство которого возвращает <see langword="true" /> .</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Возвращает сведения о состоянии хранения данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">Перечисление <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary vsli:raw="Gets or sets the data of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as a stream.">Возвращает или задает данные этого экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" /> в виде потока.</summary>
      <returns vsli:raw="The stream that contains the SqlBytes data.">Поток, содержащий данные SqlBytes.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Возвращает управляемую копию значения, которое содержится в данном объекте <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as an array of bytes.">Значение данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" /> в виде массива байтов.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is a mutable reference type that wraps a &lt;see cref=&quot;T:System.Char&quot; /&gt; array or a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> —изменяемый ссылочный тип, служащий оболочкой для массива <see cref="T:System.Char" /> или экземпляра <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified character array.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlChars" /> на основе заданного массива знаков.</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">Массив <see cref="T:System.Char" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; value.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlChars" /> на основе указанного значения <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlChars" /> в структуру <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в структуру <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to the passed-in buffer and returns the number of copied characters.">Копирует знаки из этого экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" /> в буфер передачи и возвращает количество скопированных знаков.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Смещение значения <see cref="T:System.Int64" /><see langword="long" /> в значение, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">Буфер массива знаков для копирования.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Целочисленное смещение <see cref="T:System.Int32" /> в буфере для начала копирования.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer value representing the number of characters to copy.">Целое число <see cref="T:System.Int32" />, представляющее количество знаков для копирования.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the number of copied bytes.">Значение <see cref="T:System.Int64" /><see langword="long" />, представляющее число скопированных байтов.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Задает длину данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the length.">Значение <see cref="T:System.Int64" /><see langword="long" />, представляющее длину.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to null.">Задает для данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" /> значение NULL.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Получает сведения о сериализации со всеми данными, необходимыми для повторного создания данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">Объект, для которого будут заполнены сведения о сериализации.</param>
      <param name="context" vsli:raw="The destination context of the serialization.">Контекст назначения сериализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to its equivalent &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation.">Преобразует данный экземпляр <see cref="T:System.Data.SqlTypes.SqlChars" /> в эквивалентное представление <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation of this type.">Представление <see cref="T:System.Data.SqlTypes.SqlString" /> данного типа.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Копирует знаки из буфера передачи в этот экземпляр <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="offset" vsli:raw="A &lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Смещение значения <see langword="long" /> в значении, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">Буфер массива знаков для копирования.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Целочисленное смещение <see cref="T:System.Int32" /> в буфере для начала копирования.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of characters to copy.">Целое число <see cref="T:System.Int32" />, представляющее количество знаков для копирования.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">Возвращает ссылку на внутренний буфер.</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">Ссылка на внутренний буфер. Для экземпляров <see cref="T:System.Data.SqlTypes.SqlChars" />, созданных поверх неуправляемых указателей, возвращает управляемую копию внутреннего буфера.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null.">Получает логическое значение, показывающее, имеет ли данный экземпляр <see cref="T:System.Data.SqlTypes.SqlChars" /> значение NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <see cref="T:System.Data.SqlTypes.SqlChars" /> имеет значение NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance at the specified index.">Получает или задает экземпляр <see cref="T:System.Data.SqlTypes.SqlChars" /> по указанному индексу.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">Значение <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">Значение <see cref="T:System.Char" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Получает длину значения, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that indicates the length in characters of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance, or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">Значение <see cref="T:System.Int64" />, указывающее длину (в символах) значения, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlChars" />.  
  
Возвращает -1, если для экземпляра нет доступного буфера или если значение равно NULL.  
  
Возвращает <see cref="P:System.IO.Stream.Length" /> для экземпляра, включенного в поток.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary vsli:raw="Gets the maximum length in two-byte characters of the value the internal buffer can hold.">Получает максимальную длину значения, которое может содержаться во внутреннем буфере, в двухбайтовых знаках.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the maximum length in two-byte characters of the value of the internal buffer.  &#xA;  &#xA; Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Значение <see cref="T:System.Int64" />, представляющее максимальную длину значения внутреннего буфера в двухбайтовых знаках.  
  
Возвращает –1 для экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" />, включенного в поток.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary vsli:raw="Returns a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Возвращает пустой экземпляр данного объекта <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlChars.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;. For more information, see Handling Null Values.">Экземпляр, <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> свойство которого возвращает <see langword="true" /> . Дополнительные сведения см. в разделе Обработка значений NULL.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Возвращает сведения о состоянии хранения данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">Перечисление <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Возвращает управляемую копию значения, которое содержится в данном объекте <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; as an array of characters.">Значение данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" /> в виде массива знаков.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary vsli:raw="Specifies the compare option values for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Задает значения параметров сравнения для структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">Задает сортировку на основе числового значения символов вместо сортировки по алфавиту.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary vsli:raw="Performs a binary sort.">Выполняет двоичную сортировку.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore case.">Указывает, что при выполнении сравнения объектов <see cref="T:System.Data.SqlTypes.SqlString" /> не должен учитываться регистр.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the Kana type. Kana type refers to Japanese hiragana and katakana characters that represent phonetic sounds in the Japanese language. Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as &quot;computer&quot; or &quot;Internet&quot;. A phonetic sound can be expressed in both hiragana and katakana. If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.">Задает игнорирование типа японской азбуки при сравнении объектов типа <see cref="T:System.Data.SqlTypes.SqlString" />. Типы японской азбуки Каны обозначают символы хираганы и катаканы, представляющие звуки японского языка. Хирагана используется для японских выражений и слов, а катакана — для слов, заимствованных из других языков, например "компьютер" и "Интернет". Для обозначения любого звука может быть использована как хирагана, так и катакана. Если выбрано это значение, знаки хирагана и катакана для одного и того же звука считаются равными.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore nonspace combining characters, such as diacritics. The Unicode Standard defines combining characters as characters that are combined with base characters to produce a new character. Non-space combining characters do not use character space by themselves when rendered. For more information about non-space combining characters, see the Unicode Standard at https://www.unicode.org.">Задает игнорирование несамостоятельных знаков (например, диакритических) при сравнении объектов типа  <see cref="T:System.Data.SqlTypes.SqlString" />. В стандарте Юникод несамостоятельные знаки определяются как знаки, которые в сочетании с основными знаками образуют новый знак. Несамостоятельные знаки при отображении не занимают место знака. Дополнительные сведения о несамостоятельных знаках без пробелов см. на веб-сайте стандарта Юникод по адресу https://www.unicode.org.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the character width. For example, Japanese katakana characters can be written as full-width or half-width and, if this value is selected, the katakana characters written as full-width are considered equal to the same characters written in half-width.">Задает игнорирование ширины знака при сравнении объектов типа <see cref="T:System.Data.SqlTypes.SqlString" />. Например, японские знаки катакана могут быть представлены в полную ширину или в половину ширины. Если выбрано это значение, знаки катакана, написанные в полную ширину, считаются равными знакам, написанным в половину ширины.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary vsli:raw="Specifies the default option settings for &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons.">Задает параметры по умолчанию для сравнения объектов типа <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Represents the date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds to be stored in or retrieved from a database. The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure has a different underlying data structure from its corresponding .NET type, &lt;see cref=&quot;T:System.DateTime&quot; /&gt;, which can represent any time between 12:00:00 AM 1/1/0001 and 11:59:59 PM 12/31/9999, to the accuracy of 100 nanoseconds. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; actually stores the relative difference to 00:00:00 AM 1/1/1900. Therefore, a conversion from &quot;00:00:00 AM 1/1/1900&quot; to an integer will return 0.">Представляет сохраняемые в базе данных или извлекаемые из нее данные о дате и времени в диапазоне значений от 1 января 1753 г. до 31 декабря 9999 г. с точностью 3,33 миллисекунды. Базовая структура данных структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> отличается от соответствующего типа платформы .NET Framework, <see cref="T:System.DateTime" />, который может представлять любое время между 00:00:00 01.01.0001 и 23:59:59 31.12.9999 с точностью 100 наносекунд. В объекте <see cref="T:System.Data.SqlTypes.SqlDateTime" /> фактически хранится разница относительно 00:00:00 01.01.1900. Поэтому в результате преобразования "00:00:00 01.01.1900" в целое число будет возвращен 0.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary vsli:raw="Represents the maximum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Представляет максимальное допустимое значение даты для структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary vsli:raw="Represents the minimum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Представляет минимальное допустимое значение даты для структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one hour.">Константа, значение которой представляет собой число импульсов, эквивалентное одному часу.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one minute.">Константа, значение которой представляет собой число импульсов, эквивалентное одной минуте.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one second.">Константа, значение которой представляет собой число импульсов, эквивалентное одной секунде.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с использованием заданного значения <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">Структура <see langword="DateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters.">Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с использованием предоставленных параметров.</summary>
      <param name="dayTicks" vsli:raw="An integer value that represents the date as ticks.">Целое значение, представляющее дату как число импульсов.</param>
      <param name="timeTicks" vsli:raw="An integer value that represents the time as ticks.">Целое значение, представляющее время как число импульсов.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с использованием предоставленных параметров для инициализации года, месяца, дня.</summary>
      <param name="year" vsli:raw="An integer representing the year of the of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее год в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее месяц в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day number of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое значение, представляющее номер дня в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, and second of the new structure.">Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с помощью предоставленных параметров для инициализации года, месяца, дня, часа, минуты и секунды новой структуры.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее год в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее месяц в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее день месяца в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее час в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее минуту в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее секунду в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and millisecond of the new structure.">Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с помощью предоставленных параметров для инициализации года, месяца, дня, часа, минуты, секунды и миллисекунды новой структуры.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее год в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее месяц в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее день месяца в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее час в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее минуту в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее секунду в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="millisecond" vsli:raw="An double value representing the millisecond of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Значение типа double, представляющее миллисекунду в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and microsecond of the new structure.">Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с помощью предоставленных параметров для инициализации года, месяца, дня, часа, минуты, секунды и микросекунды новой структуры.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее год в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее месяц в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое значение, представляющее день в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее час в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее минуту в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее секунду в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="bilisecond" vsli:raw="An integer value representing the microsecond (thousandths of a millisecond) of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Целое число, представляющее микросекунду (одну тысячную миллисекунды) в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to the specified &lt;see langword=&quot;TimeSpan&quot; /&gt;.">Добавляет объект <see cref="T:System.Data.SqlTypes.SqlDateTime" /> к указанному объекту <see langword="TimeSpan" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Значение <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">Значение <see langword="Timespan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Значение <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure and returns an indication of their relative values.">Сравнивает данную структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с предоставленной структурой <see cref="T:System.Data.SqlTypes.SqlDateTime" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be compared.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше параметра <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</description></item><item><term> Нуль</term><description> Данный экземпляр равен <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</description></item><item><term> Больше нуля</term><description> Данный экземпляр больше, чем <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  
  
-или- 
 Параметр <see cref="T:System.Data.SqlTypes.SqlDateTime" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Сравнивает данную структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; as Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; object.">Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Сравниваемый объект.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Получает хэш-код для этого экземпляра.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">Выполняет логическое сравнение двух экземпляров <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds the period of time indicated by the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; parameter, &lt;paramref name=&quot;t&quot; /&gt;, to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Добавляет период времени, указанный предоставленным параметром <see cref="T:System.TimeSpan" />, <paramref name="t" />, к предоставленной структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">Структура <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;. If either argument is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;, the new &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;.">Новый объект <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Если один из аргументов имеет значение <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />, новый объект <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> в структуру <see cref="T:System.DateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object whose &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties contain the same date and time values as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Объект <see cref="T:System.DateTime" />, свойства <see cref="P:System.DateTime.Date" /> и <see cref="P:System.DateTime.TimeOfDay" /> которого содержат те же значения даты и времени, что и свойство <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> предоставленной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the date and time represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see langword=&quot;Value&quot; /&gt; of the newly created &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure will be null.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />, значение свойства <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> которой равно дате и времени, представленным параметром <see cref="T:System.Data.SqlTypes.SqlString" />. Если <see cref="T:System.Data.SqlTypes.SqlString" /> равно NULL, <see langword="Value" /> созданной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> будет равно NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Преобразует структуру <see cref="T:System.DateTime" /> в структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">Структура <see langword="DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the combined &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties of the supplied &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />, <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> которой равно объединенным свойствам <see cref="P:System.DateTime.Date" /> и <see cref="P:System.DateTime.TimeOfDay" /> предоставленной структуры <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">Выполняет логическое сравнение двух экземпляров <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure, &lt;paramref name=&quot;t&quot; /&gt;, from the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Вычитает предоставленную структуру <see cref="T:System.TimeSpan" />, <paramref name="t" />, из предоставленной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">Структура <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure representing the results of the subtraction.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />, представляющая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a date and time to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; equivalent.">Преобразует заданное представление даты и времени <see cref="T:System.String" /> в его эквивалент для структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; to be parsed.">Представление <see langword="string" />, которое необходимо проанализировать.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure equal to the date and time represented by the specified &lt;see langword=&quot;string&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />, эквивалентная дате и времени, которые представлены заданной <see langword="string" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the specified &lt;see langword=&quot;Timespan&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; instance.">Вычитает указанное значение  <see langword="Timespan" /> из этого экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Значение <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">Значение <see langword="Timespan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Значение <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; structure whose value is a string representing the date and time that is contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Структура <see langword="SqlString" />, значением которой является строка, представляющая дату и время, содержащиеся в данной структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> в <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see langword="String" /> представляет свойство <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary vsli:raw="Gets the number of ticks representing the date of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Получает число импульсов, представляющее дату данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">Исключение, возникающее, когда для свойства <see langword="Value" /> структуры <see cref="N:System.Data.SqlTypes" /> установлено значение NULL.</exception>
      <returns vsli:raw="The number of ticks representing the date that is contained in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Число импульсов, представляющее дату, которая содержится в свойстве <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure is null.">Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlDateTime" /> значение null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary vsli:raw="Gets the number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Получает число импульсов, представляющее время данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns vsli:raw="The number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Число импульсов, представляющее время данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure. This property is read-only.">Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Это свойство доступно только для чтения.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">Исключение, возникающее, когда для свойства <see langword="Value" /> структуры <see cref="N:System.Data.SqlTypes" /> установлено значение NULL.</exception>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Значение данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Represents a numeric value between - 10^38 +1 and 10^38 - 1, with fixed precision and scale.">Представляет числовое значение с фиксированной точностью и масштабом в диапазоне от - 10^38 +1 и 10^38 - 1.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary vsli:raw="A constant representing the largest possible value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Precision&quot; /&gt; property.">Константа, представляющая наибольшее возможное значение для свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary vsli:raw="A constant representing the maximum value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Scale&quot; /&gt; property.">Константа, представляющая максимальное значение для свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary vsli:raw="A constant representing the maximum value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Константа, представляющая максимальное значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary vsli:raw="A constant representing the minimum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Константа, представляющая минимальное значение для структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; class.">Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру класса <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с использованием предоставленных параметров.</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Максимальное число цифр, используемое для представления свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Число десятичных разрядов, для которых будет осуществляться разрешение свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">Логическое значение, указывающее, представляет ли новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> положительное или отрицательное число.</param>
      <param name="data1" vsli:raw="An 32-bit unsigned integer which will be combined with data2, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">32-разрядное целое число без знака, объединяемое с data2, data3 и data4 при составлении 128-разрядного целого числа без знака, которое представляет новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data2" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">32-разрядное целое число без знака, объединяемое с data1, data3 и data4 при составлении 128-разрядного целого числа без знака, которое представляет новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data3" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">32-разрядное целое число без знака, объединяемое с data1, data2 и data4 при составлении 128-разрядного целого числа без знака, которое представляет новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data4" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data3 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">32-разрядное целое число без знака, объединяемое с data1, data2 и data3 при составлении 128-разрядного целого числа без знака, которое представляет новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с использованием предоставленных параметров.</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Максимальное число цифр, используемое для представления свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Число десятичных разрядов, для которых будет осуществляться разрешение свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">Логическое значение, указывающее, представляет ли новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> положительное или отрицательное число.</param>
      <param name="bits" vsli:raw="The 128-bit unsigned integer that provides the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">128-разрядное целое число без знака, предоставляющее значение новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с помощью предоставленного значения <see cref="T:System.Decimal" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be stored as a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Значение <see cref="T:System.Decimal" />, сохраняемое как структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied double parameter.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с использованием предоставленного параметра типа double.</summary>
      <param name="dVal" vsli:raw="A double, representing the value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Значение типа double для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied integer value.">Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с использованием предоставленного целого значения.</summary>
      <param name="value" vsli:raw="The supplied integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Предоставленное целое число, используемое в качестве значения новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied long integer value.">Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с помощью предоставленного длинного целого значения.</summary>
      <param name="value" vsli:raw="The supplied long integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Предоставленное длинное целое число, используемое в качестве значения новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The Abs method gets the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Метод Abs получает абсолютное значение параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="n" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the unsigned number representing the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит число без знака, представляющее абсолютное значение параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">Вычисляет сумму двух операторов <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, у которой свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> содержит сумму.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary vsli:raw="The scale of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand will be adjusted to the number of digits indicated by the digits parameter. Depending on the value of the fRound parameter, the value will either be rounded to the appropriate number of digits or truncated.">Масштаб операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> будет согласован с количеством цифр, указанным в параметре digits. В зависимости от значения параметра fRound данное значение или округляется до соответствующего числа цифр, или усекается.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be adjusted.">Настраиваемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="digits" vsli:raw="The number of digits in the adjusted structure.">Число цифр в настраиваемой структуре.</param>
      <param name="fRound" vsli:raw="If this parameter is &lt;see langword=&quot;true&quot; /&gt;, the new Value will be rounded, if &lt;see langword=&quot;false&quot; /&gt;, the value will be truncated.">Если этот параметр имеет значение <see langword="true" />, новое значение округляется, если <see langword="false" /> — значение усекается.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the adjusted number.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит настроенное число.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Returns the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Возвращает наименьшее целое число, превышающее значение указанной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> или равное ему.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the ceiling value is to be calculated.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, для которой необходимо рассчитать предельное значение.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; representing the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Значение <see cref="T:System.Data.SqlTypes.SqlDecimal" />, представляющее наименьшее целое число, превышающее значение указанной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> или равное ему.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; object and returns an indication of their relative values.">Сравнивает данный экземпляр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с предоставленным объектом <see cref="T:System.Data.SqlTypes.SqlDecimal" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be compared.">Выражение <see cref="T:System.Data.SqlTypes.SqlDecimal" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary vsli:raw="Adjusts the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand to the indicated precision and scale.">Настраивает значение операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> для достижения указанной точности и масштаба.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is to be adjusted.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, значение которой требуется настроить.</param>
      <param name="precision" vsli:raw="The precision for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Точность для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="scale" vsli:raw="The scale for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Масштаб для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value has been adjusted to the precision and scale indicated in the parameters.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, значение которой настроено для достижения точности и масштаба, указанных в данных параметрах.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">Оператор деления вычисляет результаты деления первого операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, the value of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; will be null.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если хотя бы один из экземпляров имеет значение NULL, значение <see langword="SqlDecimal" /> будет равно NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance.">Сравнивает предоставленный параметр <see cref="T:System.Object" /> со свойством <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> экземпляра  <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> и они равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Rounds a specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; number to the next lower whole number.">Округляет заданное число <see cref="T:System.Data.SqlTypes.SqlDecimal" /> до ближайшего меньшего целого числа.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the floor value is to be calculated.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, для которой необходимо рассчитать наименьшее значение.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the whole number part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, содержащая целую часть числа данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Возвращает хэш-код данного экземпляра.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, больше ли первая структура, чем вторая.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, меньше ли первая структура, чем вторая.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">Оператор умножения вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">Вычисляет сумму двух операторов <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, у которой свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> содержит сумму.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">Оператор деления вычисляет результаты деления первого операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Decimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Новая структура <see langword="Decimal" />, значение которой равно <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />, который необходимо преобразовать.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует параметр <see cref="T:System.Double" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Double" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value equals the value of the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, значение которой равно значению параметра <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, больше ли первая структура, чем вторая.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to SqlDecimal.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в SqlDecimal.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; operand to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует операнд <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует значение <see cref="T:System.Decimal" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">Преобразуемое значение <see cref="T:System.Decimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see langword=&quot;Decimal&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно значению параметра <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Int64" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно значению параметра <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, меньше ли первая структура, чем вторая.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">Оператор умножения вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">Вычисляет результаты вычитания второго операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> из первого.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство Value которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Оператор "унарный минус" меняет знак параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be negated.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, для которой выполняется инверсия.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value contains the results of the negation.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, значение которой содержит инвертированный результат.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent.">Преобразует представление числа типа <see cref="T:System.String" /> в эквивалентное ему значение <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Значение <see cref="T:System.Data.SqlTypes.SqlDecimal" />, эквивалентное значению, которое содержится в заданном представлении <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary vsli:raw="Raises the value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to the specified exponential power.">Возводит значение заданной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в заданную экспоненциальную степень.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be raised to a power.">Возводимая в степень структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="exp" vsli:raw="A double value that indicates the power to which the number should be raised.">Значение типа double, указывающее степень, в которую необходимо возвести число.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, содержащая результаты.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Gets the number nearest the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value with the specified precision.">Получает ближайшее к заданному значению структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> число с заданной точностью.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be rounded.">Округляемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="position" vsli:raw="The number of significant fractional digits (precision) in the return value.">Количество значащих цифр дробной части числа (точность) возвращаемого значения.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results of the rounding operation.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, содержащая результаты операции округления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Gets a value that indicates the sign of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Получает значение, определяющее в структуре <see cref="T:System.Data.SqlTypes.SqlDecimal" /> знак свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose sign is to be evaluated.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, в которой необходимо определить знак.</param>
      <returns vsli:raw="A number that indicates the sign of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Число, указывающее знак структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">Вычисляет результаты вычитания второго операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> из первого.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство Value которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary vsli:raw="Returns the a double equal to the contents of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of this instance.">Возвращает число типа double, равное содержимому свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> данного экземпляра.</summary>
      <returns vsli:raw="The decimal representation of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Десятичное представление свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> равняется <see langword="true" />, значение <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> будет равняться 1. В противном случае значение <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> будет равняться 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlString" />, значение которой является строкой, представляющей значение, содержащееся в данной структуре <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Новый объект <see cref="T:System.String" />, содержащий строковое представление свойства <see cref="T:System.Data.SqlTypes.SqlDecimal" />, относящегося к структуре <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Truncates the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value to the that you want position.">Усекает значение указанной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> до требуемой позиции.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be truncated.">Усекаемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="position" vsli:raw="The decimal position to which the number will be truncated.">Десятичный разряд, до которого усекается число.</param>
      <returns vsli:raw="Supply a negative value for the &lt;paramref name=&quot;position&quot; /&gt; parameter in order to truncate the value to the corresponding position to the left of the decimal point.">Для усечения данного значения до соответствующего разряда слева от десятичной запятой следует предоставить для параметра <paramref name="position" /> отрицательное значение.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary vsli:raw="Gets the binary representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of bytes.">Получает двоичное представление значения данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в виде массива байтов.</summary>
      <returns vsli:raw="An array of bytes that contains the binary representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value.">Массив байтов, содержащий двоичное представление значения структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary vsli:raw="Gets the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of integers.">Получает двоичное представление данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в виде массива целых чисел.</summary>
      <returns vsli:raw="An array of integers that contains the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Массив целых чисел, содержащий двоичное представление данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null.">Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> значение null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данная структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> имеет значение NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is greater than zero.">Указывает, больше ли нуля <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is assigned to null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если для <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> назначено значение NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary vsli:raw="Gets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Получает максимальное число цифр, используемых для представления свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Максимальное число цифр, используемых для представления <see langword="Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary vsli:raw="Gets the number of decimal places to which &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is resolved.">Получает число десятичных разрядов для разрешения <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <returns vsli:raw="The number of decimal places to which the &lt;see langword=&quot;Value&quot; /&gt; property is resolved.">Число десятичных разрядов, используемых для разрешения свойства <see langword="Value" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. This property is read-only.">Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Это свойство доступно только для чтения.</summary>
      <returns vsli:raw="A number in the range -79,228,162,514,264,337,593,543,950,335 through 79,228,162,514,162,514,264,337,593,543,950,335.">Число в диапазоне от -79 228 162 514 264 337 593 543 950 335 до 79 228 162 514 264 337 593 543 950 335.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.">Представляет число с плавающей запятой в диапазоне от -1,79E + 308 до 1,79E + 308, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary vsli:raw="A constant representing the maximum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Константа, представляющая максимальное значение для структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary vsli:raw="A constant representing the minimum possible value of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Константа, представляющая минимальное возможное значение структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure using the supplied double parameter to set the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> с использованием предоставленного параметра типа double для настройки нового свойства <see cref="T:System.Data.SqlTypes.SqlDouble" /> структуры <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />.</summary>
      <param name="value" vsli:raw="A double whose value will be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Значение типа double для новой структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Оператор сложения вычисляет сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Сумма двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlDouble" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlDouble" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be compared.">Выражение <see cref="T:System.Data.SqlTypes.SqlDouble" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlDouble" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">Сравниваемый шаблон <see cref="T:System.Object" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">Оператор деления делит первый операнд <see cref="T:System.Data.SqlTypes.SqlDouble" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, содержащая результаты операции деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">Выполняет логическое сравнение двух экземпляров <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; object.">Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Сравниваемый объект.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Возвращает хэш-код данной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Оператор умножения вычисляет произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are notequal.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" /> с целью определить, верно ли, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Оператор сложения вычисляет сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Сумма двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">Оператор деления делит первый операнд <see cref="T:System.Data.SqlTypes.SqlDouble" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, содержащая результаты операции деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">Выполняет логическое сравнение двух экземпляров <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is either 0 or 1, depending on the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно 0 или 1 в зависимости от свойства <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Если значение <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равно <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to double.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в тип double.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A double equivalent to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Эквивалент типа double для значения заданной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the value of the number represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно значению числа, представленного объектом <see cref="T:System.Data.SqlTypes.SqlString" />. Если значение <see cref="T:System.Data.SqlTypes.SqlString" /> равно <see cref="F:System.Data.SqlTypes.SqlString.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlByte.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />. Если значение <see cref="T:System.Data.SqlTypes.SqlByte" /> равно <see cref="F:System.Data.SqlTypes.SqlByte.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDecimal.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Если значение <see cref="T:System.Data.SqlTypes.SqlDecimal" /> равно <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt16.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />. Если значение <see cref="T:System.Data.SqlTypes.SqlInt16" /> равно <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />. Если значение <see cref="T:System.Data.SqlTypes.SqlInt32" /> равно <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt64.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />. Если значение <see cref="T:System.Data.SqlTypes.SqlInt64" /> равно <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />. Если значение <see cref="T:System.Data.SqlTypes.SqlMoney" /> равно <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlSingle.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />. Если значение <see cref="T:System.Data.SqlTypes.SqlSingle" /> равно <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied double value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует предоставленное значение типа double в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="The double value to convert.">Преобразуемое значение типа double.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; with the same value as the specified double parameter.">Параметр типа <see cref="T:System.Data.SqlTypes.SqlDouble" /> с тем же значением, что и у заданного параметра типа double.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are not equal.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" /> с целью проверить, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Оператор умножения вычисляет произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">Оператор вычитания вычитает второй операнд <see cref="T:System.Data.SqlTypes.SqlDouble" /> из первого.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The results of the subtraction operation.">Результаты операции вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Returns the negated value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Возвращает инвертированное значение заданной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the negated value.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, содержащая противоположное значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its double-precision floating point number equivalent.">Преобразует представление <see cref="T:System.String" /> числа в его эквивалент в виде числа с плавающей запятой с удвоенной точностью.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that contains the value represented by the &lt;see langword=&quot;String&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlDouble" />, содержащий значение, представленное параметром типа <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">Оператор вычитания вычитает второй операнд <see cref="T:System.Data.SqlTypes.SqlDouble" /> из первого.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The results of the subtraction operation.">Результаты операции вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">Схема XML, используемая платформой .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Объект <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Объект <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBoolean&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is non-zero, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is zero and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Структура <see langword="SqlBoolean" />, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> которой будет равно <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если для структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /><see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> не равно нулю, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если <see cref="T:System.Data.SqlTypes.SqlDouble" /> равно нулю, и <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, если структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> имеет значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see langword="SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose converted value equals the rounded value of this &lt;see langword=&quot;SqlDouble&quot; /&gt;.">Новая структура <see langword="SqlDecimal" />, преобразованное значение которой равно округленному значению данной структуры <see langword="SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see langword="Value" /> которой равно целой части значения структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see langword="Value" /> которой равно целой части значения структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see langword="Value" /> которой равно целой части значения структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; is equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Новая структура <see langword="SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Новая структура <see langword="SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Структура <see langword="SqlString" />, представляющая <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to a string.">Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в строку.</summary>
      <returns vsli:raw="A string representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Строка, представляющая <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance is null.">Возвращает логическое значение, показывающее, имеет ли данный экземпляр <see cref="T:System.Data.SqlTypes.SqlDouble" /> значение NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> равно NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure. This property is read-only.">Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />. Это свойство доступно только для чтения.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Значение структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Represents a GUID to be stored in or retrieved from a database.">Представляет код GUID, сохраняемый в базе данных или извлекаемый из нее.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the supplied byte array parameter.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> с использованием предоставленного параметра в виде массива байтов.</summary>
      <param name="value" vsli:raw="A byte array.">Массив байтов.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> с использованием заданного параметра <see cref="T:System.Guid" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified values.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> с использованием заданных значений.</summary>
      <param name="a" vsli:raw="The first four bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Первые четыре байта структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="b" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Следующие два байта структуры  <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="c" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Следующие два байта структуры  <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="d" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="e" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="f" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="g" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="h" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="i" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="j" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="k" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.String&quot; /&gt; parameter.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> с использованием заданного параметра <see cref="T:System.String" />.</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Объект <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">Сравнивает данную структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlGuid" /> и возвращает сведения об их относительных значениях. Сравнивает не только последние 6 байтов, но последние 6 байтов считаются наиболее важными при выполнении сравнения.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to be compared.">Выражение <see cref="T:System.Data.SqlTypes.SqlGuid" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше, чем объект.</description></item><item><term> Нуль</term><description> Этот экземпляр равен объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше, чем объект, 
-или- 
объект является пустой ссылкой (<see langword="Nothing" />).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied object and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">Сравнивает эту структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> с предоставленным объектом и возвращает сведения об их относительных значениях. Сравнивает не только последние 6 байтов, но последние 6 байтов считаются наиболее важными при выполнении сравнения.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше, чем объект.</description></item><item><term> Нуль</term><description> Этот экземпляр равен объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше, чем объект, 
-или- 
объект является пустой ссылкой (<see langword="Nothing" />).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlGuid&quot; /&gt; will be null.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlGuid" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; object.">Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Сравниваемый объект.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary vsli:raw="Returns the hash code of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Возвращает хэш-код данной структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlGuid" /> с целью определить, верно ли, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlBinary" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; object.">Объект <see langword="SqlBinary" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />, <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.Guid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Guid&quot; /&gt; equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Новая структура <see cref="T:System.Guid" />, равная <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />, <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Guid" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Объект <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">Новый объект <see cref="T:System.Data.SqlTypes.SqlGuid" />, <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> которого равен параметру <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlGuid" /> с целью определить, верно ли, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Преобразует заданную структуру <see cref="T:System.String" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Значение <see cref="T:System.Data.SqlTypes.SqlGuid" />, эквивалентное значению, которое содержится в заданном представлении <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a byte array.">Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в массив байтов.</summary>
      <returns vsli:raw="An array of bytes representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Массив байтов, представляющий <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; structure that contains the bytes in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see langword="SqlBinary" />, содержащая байты структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlString" />, содержащая строковое представление структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Структура <see cref="T:System.String" />, содержащая строковое представление структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure is null.">Получает логическое значение, показывающее, имеет ли данная структура <see cref="T:System.Data.SqlTypes.SqlGuid" /> значение NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> если <see langword="null" />. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure. This property is read-only.">Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />. Это свойство доступно только для чтения.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; structure.">Структура <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Represents a 16-bit signed integer to be stored in or retrieved from a database.">Представляет 16-разрядное целое число со знаком, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Константа, представляющая наибольшее возможное значение <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Константа, представляющая наименьшее возможное значение <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure using the supplied short integer parameter.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> с использованием предоставленного параметра типа короткого целого.</summary>
      <param name="value" vsli:raw="A short integer.">Короткое целое число.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Вычисляет сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt16" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlInt16" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be compared.">Выражение <see cref="T:System.Data.SqlTypes.SqlInt16" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object, or the object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта, или же объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt16" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">Делит первый операнд <see cref="T:System.Data.SqlTypes.SqlInt16" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt16&quot; /&gt; will be null.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlInt16" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary vsli:raw="Compares the specified object to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; object.">Сравнивает заданный объект со свойством <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Сравниваемый объект.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Возвращает хэш-код данного экземпляра.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Значение <see cref="T:System.String" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, является ли первая меньше или равна второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">Вычисляет остаток от деления первого операнда <see cref="T:System.Data.SqlTypes.SqlInt16" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; values and returns the remainder.">Делит одно значение <see cref="T:System.Data.SqlTypes.SqlInt16" />на другое и возвращает остаток.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">Значение <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">Значение <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Остаток, получившийся при делении <paramref name="x" /> на <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит произведение двух параметров.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlInt16" /> с целью определить, отличаются ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">Оператор ~ выполняет битовую операцию дополнения до единицы над операндом <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит дополнение заданной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Вычисляет сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">Делит первый операнд <see cref="T:System.Data.SqlTypes.SqlInt16" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise XOR.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to a short integer.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в короткое целое число.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A short integer whose value is the Value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Короткое целое число, значение которого является значением параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> предоставленного параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует предоставленный объект <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно значению, представленному параметром объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied short integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует предоставленное короткое целое число в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A short integer value.">Короткое целое число.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as the specified short integer.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" /> со значением, равным заданному короткому целому числу.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlInt16" /> с целью определить, отличаются ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, является ли первая меньше или равна второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">Вычисляет остаток от деления первого операнда <see cref="T:System.Data.SqlTypes.SqlInt16" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит произведение двух параметров.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">Оператор ~ выполняет битовую операцию дополнения до единицы над операндом <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит дополнение заданной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> из первого.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand.">Оператор "унарный минус" меняет знак <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> операнда <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the negated value.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, содержащая противоположное значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 16-bit signed integer equivalent.">Преобразует представление <see cref="T:System.String" /> числа в эквивалентное ему 16-разрядное целое число со знаком.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns vsli:raw="A 16-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">16-разрядное целое число со знаком, эквивалентное значению указанной строки <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> из первого.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">Схема XML, используемая платформой .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />. Если значение <see cref="T:System.Data.SqlTypes.SqlInt16" /> меньше 0 или больше 255, происходит <see cref="T:System.OverflowException" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />, представляющий <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> этого экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Объект <see cref="T:System.String" />, представляющий <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> этого экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the results of the XOR operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, содержащая результаты операции исключающего логического сложения.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure is null.">Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlInt16" /> значение null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. For more information, see Handling Null Values.">Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />. Дополнительные сведения см. в разделе Обработка значений NULL.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary vsli:raw="Gets the value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. This property is read-only.">Получает значение этого экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />. Это свойство доступно только для чтения.</summary>
      <returns vsli:raw="A short integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Короткое целое число, представляющее значение этой структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Represents a 32-bit signed integer to be stored in or retrieved from a database.">Представляет 32-разрядное целое число со знаком, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Константа, представляющая наибольшее возможное значение <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Константа, представляющая наименьшее возможное значение <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; class.">Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру класса <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure using the supplied integer value.">Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> с использованием предоставленного целого значения.</summary>
      <param name="value" vsli:raw="The integer to be converted.">Преобразуемое целое число.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит сумму заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты поразрядной операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Выполняет поразрядную операцию логического сложения заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты поразрядной операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt32" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlInt32" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be compared.">Выражение <see cref="T:System.Data.SqlTypes.SqlInt32" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt32" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">Делит первый параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" /> с целью определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt32&quot; /&gt; will be null.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlInt32" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; object.">Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Сравниваемый объект.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Возвращает хэш-код данного экземпляра.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый большим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый большим, чем второй, или равным ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый меньшим, чем второй, или равным ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">Вычисляет остаток после деления первого параметра <see cref="T:System.Data.SqlTypes.SqlInt32" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; values and returns the remainder.">Делит одно значение <see cref="T:System.Data.SqlTypes.SqlInt32" />на другое и возвращает остаток.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">Значение <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">Значение <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Остаток, получившийся при делении <paramref name="x" /> на <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит произведение двух параметров.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" /> с целью определить, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Выполняет битовую операцию дополнения до единицы над заданной структурой <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты операции дополнения до единицы.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит сумму заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты поразрядной операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Выполняет поразрядную операцию логического сложения заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты поразрядной операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">Делит первый параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" /> с целью определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Выполняет битовую операцию исключающего логического сложения с заданными структурами <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to an integer.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в целое число.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="The converted integer value.">Преобразованное целое значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует предоставленный объект <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый большим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый большим, чем второй, или равным ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; property to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует предоставленное свойство <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует предоставленное целое число в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="An integer value.">Целочисленное значение.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose Value property is equal to the integer parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство Value которой равно целочисленному параметру.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" /> с целью определить, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый меньшим, чем второй, или равным ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">Вычисляет остаток после деления первого параметра <see cref="T:System.Data.SqlTypes.SqlInt32" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит произведение двух параметров.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Выполняет битовую операцию дополнения до единицы над заданной структурой <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты операции дополнения до единицы.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> из первого.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operand.">Отрицает <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> операнда <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the negated value.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая противоположное значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 32-bit signed integer equivalent.">Преобразует представление <see cref="T:System.String" /> числа в эквивалентное ему 32-разрядное целое число со знаком.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">Представление <see cref="T:System.String" />, которое необходимо проанализировать.</param>
      <returns vsli:raw="A 32-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Эквивалент 32-разрядного целого числа со знаком значению, содержащемуся в заданном <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> из первого.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. If the value of the &lt;see langword=&quot;SqlInt32&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />. Если значение <see langword="SqlInt32" /> меньше 0 или больше 255, происходит <see cref="T:System.OverflowException" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlString" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Структура <see cref="T:System.String" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Выполняет битовую операцию исключающего логического сложения с заданными структурами <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure is null.">Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlInt32" /> значение null.</summary>
      <returns vsli:raw="This property is &lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Это свойство имеет значение <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> имеет значение NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. This property is read-only.">Получает значение этой структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />. Это свойство доступно только для чтения.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;.">Данное свойство содержит <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />.</exception>
      <returns vsli:raw="An integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Целое число, представляющее значение этой структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Represents a 64-bit signed integer to be stored in or retrieved from a database.">Представляет 64-разрядное целое число со знаком, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Константа, представляющая наибольшее возможное значение структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Константа, представляющая наименьшее возможное значение структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure using the supplied long integer.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> с использованием предоставленного длинного целого значения.</summary>
      <param name="value" vsli:raw="A long integer.">Длинное целое число.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Вычисляет сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно сумме двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты поразрядной операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты поразрядной операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt64" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlInt64" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be compared.">Выражение <see cref="T:System.Data.SqlTypes.SqlInt64" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt64" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Делит первый параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит результаты операции деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" /> с целью определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt64&quot; /&gt; will be null.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlInt64" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; object.">Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Сравниваемый объект.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Возвращает хэш-код данного экземпляра.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, больше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Вычисляет остаток после деления первого параметра <see cref="T:System.Data.SqlTypes.SqlInt64" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; values and returns the remainder.">Делит одно значение <see cref="T:System.Data.SqlTypes.SqlInt64" />на другое и возвращает остаток.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">Значение <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">Значение <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Остаток, получившийся при делении <paramref name="x" /> на <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно произведению двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">Выполняет логическое сравнение двух параметров SqlInt64 с целью определить, верно ли, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">Выполняет битовую операцию дополнения до единицы над своим операндом <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно дополнению до единицы параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Вычисляет сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно сумме двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты поразрядной операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты поразрядной операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Делит первый параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит результаты операции деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" /> с целью определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to long.">Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в значение типа LONG.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new long value equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Новое значение типа LONG, равное <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит целую часть параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />, который необходимо преобразовать.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, больше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the long parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует параметр типа LONG в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A long integer value.">Длинное целое значение.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the value of the long parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно значению параметра типа LONG.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">Выполняет логическое сравнение двух параметров SqlInt64 с целью определить, верно ли, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Вычисляет остаток после деления первого параметра <see cref="T:System.Data.SqlTypes.SqlInt64" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно произведению двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">Выполняет битовую операцию дополнения до единицы над своим операндом <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно дополнению до единицы параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> из первого.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно результатам операции вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">Оператор "унарный минус" меняет знак <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> операнда <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the negated &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно инвертированному <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 64-bit signed integer equivalent.">Преобразует представление <see cref="T:System.String" /> числа в эквивалентное ему 64-разрядное целое число со знаком.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">Представление <see cref="T:System.String" />, которое необходимо проанализировать.</param>
      <returns vsli:raw="A 64-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Эквивалент 64-разрядного целого числа со знаком значению, содержащемуся в заданном <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> из первого.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно результатам операции вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />, представляющий значение данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Объект <see cref="T:System.String" />, представляющий значение данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure is null.">Получает логическое значение, показывающее, имеет ли данная структура <see cref="T:System.Data.SqlTypes.SqlInt64" /> значение NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure. This property is read-only.">Получает значение этой структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />. Это свойство доступно только для чтения.</summary>
      <returns vsli:raw="A long integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Длинное целое число, представляющее значение данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Represents a currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of currency unit to be stored in or retrieved from a database.">Представляет значение валюты в диапазоне от –2 63 (или –922 337 203 685 477,5808) до 2 63 –1 (или +922 337 203 685 477,5807) с точностью до десятитысячных единицы валюты, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Представляет максимальное значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Представляет минимальное значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру класса <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Представляет нулевое значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlMoney" /> заданным значением <see cref="T:System.Decimal" />.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Денежное значение для инициализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with specified double value.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlMoney" /> с заданным значением типа double.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Денежное значение для инициализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified integer value.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlMoney" /> с заданным целым значением.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Денежное значение для инициализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified long integer value.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlMoney" /> с заданным значением типа длинное целое.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Денежное значение для инициализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Вычисляет сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlMoney" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlMoney" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be compared.">Выражение <see cref="T:System.Data.SqlTypes.SqlMoney" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlMoney" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">Оператор деления делит первый параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlMoney&quot; /&gt; will be null.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlMoney" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; object.">Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Сравниваемый объект.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> и они равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Получает хэш-код для этого экземпляра.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, больше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Оператор умножения вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Вычисляет сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">Оператор деления делит первый параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> на второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Этот оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Этот оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Decimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Новая структура <see cref="T:System.Decimal" />, значение которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Этот оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Этот оператор преобразует параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />, который необходимо преобразовать.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, больше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Преобразует параметр <see cref="T:System.Decimal" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">Преобразуемое значение <see cref="T:System.Decimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the value of the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно значению параметра <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Int64" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно значению параметра <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Оператор умножения вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">Оператор вычитания вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> из первого.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, содержащая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Оператор "унарный минус" меняет знак параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be negated.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, для которой выполняется инверсия.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the negation.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результаты отрицания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent.">Преобразует представление числа типа <see cref="T:System.String" /> в эквивалентное ему значение <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Значение <see cref="T:System.Data.SqlTypes.SqlMoney" />, эквивалентное значению, которое содержится в заданном представлении <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">Оператор вычитания вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> из первого.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, содержащая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary vsli:raw="Converts the Value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure.">Преобразует значение этого экземпляра <see cref="T:System.Data.SqlTypes.SqlMoney" /> как структуру <see cref="T:System.Decimal" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура <see cref="T:System.Decimal" />, значение которой равно свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Double" />.</summary>
      <returns vsli:raw="A double with a value equal to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Структура типа double со значением, равным этой структуре <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Int32" />.</summary>
      <returns vsli:raw="A 32-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">32-разрядное целое число, значение которого равно целой части этой структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary vsli:raw="Converts the Value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Преобразует значение этой структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Int64" />.</summary>
      <returns vsli:raw="A 64-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">64-разрядное целое число, значение которого равно целой части этой структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is zero, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> равно нулю, значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlString" />, значение которой является строкой, представляющей значение данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to string.">Преобразует этот экземпляр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в строку.</summary>
      <returns vsli:raw="A string whose value is the string representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Строка, значение которой является строковым представлением значения данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is null.">Возвращает логическое значение, показывающее, имеет ли данная структура <see cref="T:System.Data.SqlTypes.SqlMoney" /> значение NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary vsli:raw="Gets the monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure. This property is read-only.">Получает денежное значение экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />. Это свойство доступно только для чтения.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">Для свойства задано значение NULL.</exception>
      <returns vsli:raw="The monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Денежное значение экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">Класс <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
      <param name="e" vsli:raw="A reference to an inner exception.">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">Исключение, возникающее, когда для свойства <see langword="Value" /> структуры <see cref="N:System.Data.SqlTypes" /> установлено значение NULL.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a system-supplied message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> с предоставленным системой описанием ошибки.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> с указанным описанием ошибки.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Для гарантированной локализации этой строки для текущей системной культуры необходимы сведения о том, кто вызывает этот конструктор.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Для гарантированной локализации этой строки для текущей системной культуры необходимы сведения о том, кто вызывает этот конструктор.</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <c>innerException</c> не равно <see langword="null" />, текущее исключение возникает в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Represents a floating point number within the range of -3.40E +38 through 3.40E +38 to be stored in or retrieved from a database.">Представляет число с плавающей запятой в диапазоне от -3,40E +38 до 3,40E +38, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Представляет максимальное значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Представляет минимальное значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Представляет нулевое значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure using the supplied double parameter.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> с использованием предоставленного параметра типа double.</summary>
      <param name="value" vsli:raw="A double value which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Значение типа double, которое будет использоваться в качестве <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value" vsli:raw="A floating point number which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Число с плавающей десятичной запятой, которое будет использоваться в качестве <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlSingle" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlSingle" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be compared.">Выражение <see cref="T:System.Data.SqlTypes.SqlSingle" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlSingle" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">Делит первую структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> на вторую.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure that contains the results of the division.">Структура <see langword="SqlInt64" />, содержащая результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlSingle&quot; /&gt; will be null.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlSingle" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; object.">Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Сравниваемый объект.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> и они равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Получает хэш-код для этого экземпляра.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, больше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, верно ли, что первая больше второй или равна ей.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Вычисляет произведение двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">Делит первую структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> на вторую.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the division.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two SqlSingle parameters to determine whether they are equal.">Выполняет логическое сравнение двух параметров SqlSingle с целью определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Этот неявный оператор преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to be converted.">Преобразуемый параметр <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to float.">Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в число с плавающей запятой.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; value to be converted to float.">Значение <see cref="T:System.Data.SqlTypes.SqlSingle" />, преобразуемое в число с плавающей запятой.</param>
      <returns vsli:raw="A float that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Число с плавающей запятой, содержащее значение структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />, который необходимо преобразовать.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равен значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, больше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, верно ли, что первая больше второй или равна ей.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Этот неявный оператор преобразует параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, свойство <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the specified floating point value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует заданное значение с плавающей десятичной запятой в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The float value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Значение с плавающей десятичной запятой, преобразуемое в структуру <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the value of the specified float.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая значение заданного числа с плавающей запятой.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, что они не равны.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Вычисляет произведение двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">Вычитает вторую структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> из первой.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Инвертирует <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> заданной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the negated value.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая противоположное значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Преобразует заданную структуру <see cref="T:System.String" /> в структуру <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">Представление <see cref="T:System.String" />, которое необходимо проанализировать.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Значение <see cref="T:System.Data.SqlTypes.SqlSingle" />, эквивалентное значению, которое содержится в заданном представлении <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">Вычитает вторую структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> из первой.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> равняется <see langword="true" />, значение <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> будет равняться 1. В противном случае значение <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> будет равняться 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Новая структура <see langword="SqlDecimal" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Новая структура <see langword="SqlDouble" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Новая структура <see langword="SqlInt16" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />, представляющий значение данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; object representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Объект <see langword="String" />, представляющий значение данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure is null.">Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlSingle" /> значение null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. This property is read-only.">Получает значение этой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />. Это свойство доступно только для чтения.</summary>
      <returns vsli:raw="A floating point value in the range -3.40E+38 through 3.40E+38.">Значение с плавающей десятичной запятой в диапазоне от -3,40E+38 до 3,40E+38.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Represents a variable-length stream of characters to be stored in or retrieved from the database. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; has a different underlying data structure from its corresponding .NET &lt;see cref=&quot;T:System.String&quot; /&gt; data type.">Представляет поток символов переменной длины, сохраняемый в базе данных или извлекаемый из нее. <see cref="T:System.Data.SqlTypes.SqlString" /> имеет базовую структуру данных, отличную от соответствующего типа данных <see cref="T:System.String" /> платформы .NET Framework.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">Задает сортировку на основе числового значения символов вместо сортировки по алфавиту.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary vsli:raw="Specifies that sorts should be based on a character's numeric value instead of its alphabetical value.">Задает сортировку на основе числового значения символов вместо сортировки по алфавиту.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons should ignore case.">Задает игнорирование регистра при выполнении сравнения <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary vsli:raw="Specifies that the string comparison must ignore the Kana type.">Задает игнорирование типа японской азбуки при сравнении строк.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary vsli:raw="Specifies that the string comparison must ignore non-space combining characters, such as diacritics.">Задает игнорирование несамостоятельных знаков (например, диакритических) при сравнении строк.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary vsli:raw="Specifies that the string comparison must ignore the character width.">Задает игнорирование ширины знака при сравнении строк.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified locale id, compare options, and data.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlString" /> с использованием заданных кода языка, параметров сравнения и данных.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">Массив данных для хранения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">Массив данных для хранения.</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если используется кодировка Юникод. В противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">Массив данных для хранения.</param>
      <param name="index" vsli:raw="The starting index within the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">Число символов из индекса для копирования.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">Массив данных для хранения.</param>
      <param name="index" vsli:raw="The starting index within the array.">Начальный индекс в массиве.</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">Число символов из индекса для копирования.</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если используется кодировка Юникод. В противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlString" /> с использованием заданной строки.</summary>
      <param name="data" vsli:raw="The string to store.">Строка, которую необходимо сохранить.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string and locale id values.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlString" /> с использованием заданной строки и значений кода языка.</summary>
      <param name="data" vsli:raw="The string to store.">Строка, которую необходимо сохранить.</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string, locale id, and compare option values.">Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlString" /> с использованием заданных строки, кода языка и значений параметров сравнения.</summary>
      <param name="data" vsli:raw="The string to store.">Строка, которую необходимо сохранить.</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Сцепляет два заданных значения <see cref="T:System.Data.SqlTypes.SqlString" /> для создания новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that is the concatenated value of &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlString" />, представляющая собой сцепленное значение, составленное из <paramref name="x" /> и <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Создает копию данного объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object in which all property values are the same as the original.">Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, в котором все значения свойств аналогичны значениям свойств исходного объекта.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareOptions&quot; /&gt; enumeration equivalent of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value.">Получает эквивалент перечисления <see cref="T:System.Globalization.CompareOptions" /> указанного значения <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />.</summary>
      <param name="compareOptions" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value that describes the comparison options for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Значение <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />, которое описывает параметры сравнения для данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;CompareOptions&quot; /&gt; value that corresponds to the &lt;see langword=&quot;SqlCompareOptions&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Значение <see langword="CompareOptions" />, которое соответствует <see langword="SqlCompareOptions" /> для данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlString" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlString" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be compared.">Выражение <see cref="T:System.Data.SqlTypes.SqlString" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Сравнивает этот объект <see cref="T:System.Data.SqlTypes.SqlString" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  
 <list type="table"><listheader><term> Возвращаемое значение</term><description> Условие</description></listheader><item><term> Меньше нуля</term><description> Этот экземпляр меньше данного объекта.</description></item><item><term> Нуль</term><description> Этот экземпляр равен данному объекту.</description></item><item><term> Больше нуля</term><description> Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Сцепляет две указанные структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">Структура <see cref="T:System.Data.SqlTypes.SqlString" />, которая содержит новое сцепленное значение, представляющее собой содержимое двух параметров <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlString&quot; /&gt; will be null.">
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlString" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlString.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Сравниваемый объект.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlString" /> и они равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Получает хэш-код для этого экземпляра.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">Получает массив байтов, в который помещено содержимое <see cref="T:System.Data.SqlTypes.SqlString" /> в формате ANSI.</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">Массив байтов с содержимым <see cref="T:System.Data.SqlTypes.SqlString" /> в формате ANSI.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">Получает массив байтов, в который помещено содержимое <see cref="T:System.Data.SqlTypes.SqlString" /> в формате Юникод.</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">Массив байтов с содержимым <see cref="T:System.Data.SqlTypes.SqlString" /> в формате Юникод.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, больше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, верно ли, что первый больше второго или равен ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, верно ли, что первый меньше второго или равен ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, отличаются ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Сцепляет две указанные структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">Структура <see cref="T:System.Data.SqlTypes.SqlString" />, которая содержит новое сцепленное значение, представляющее собой содержимое двух параметров <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, равны ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlDateTime" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter.">Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure to be converted.">Преобразуемая структура <see langword="SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; parameter.">Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see langword="SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; whose value is the string representation of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />, значение которого является строковым представлением заданной структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The SqlInt32 structure to be converted.">Преобразуемая структура SqlInt32.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.String" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted.">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt;, whose contents are the same as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Объект <see langword="String" />, содержимое которого совпадает со свойством <see cref="P:System.Data.SqlTypes.SqlString.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, больше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, верно ли, что первый больше второго или равен ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Преобразует параметр <see cref="T:System.String" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">Преобразуемая структура <see cref="T:System.String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the value of the specified &lt;see langword=&quot;String&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий значение указанного параметра <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, отличаются ли они.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, верно ли, что первый меньше второго или равен ему.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlString.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; equals the number represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Новая структура <see langword="SqlByte" />, <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно числу, представленному данной структурой <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDateTime&quot; /&gt; structure that contains the date value represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Новая структура <see langword="SqlDateTime" />, содержащая значение даты, представленное данной структурой <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; that contains the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, содержащая значение данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is the &lt;see langword=&quot;Guid&quot; /&gt; represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Новая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />, свойство <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> которой имеет значение <see langword="Guid" />, представленное данной структурой <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует объект <see cref="T:System.Data.SqlTypes.SqlString" /> в объект <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Объект <see cref="T:System.String" /> имеет то же значение, что и данная структура <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareInfo&quot; /&gt; object that defines how string comparisons should be performed for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Получает объект <see cref="T:System.Globalization.CompareInfo" />, который определяет способ сравнения строк для этой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;CompareInfo&quot; /&gt; object that defines string comparison for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Объект <see langword="CompareInfo" />, который определяет сравнение строк для этой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that represents information about the culture of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Получает структуру <see cref="T:System.Globalization.CultureInfo" />, которая представляет сведения о языке и региональных параметрах этого объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that describes information about the culture of this SqlString structure including the names of the culture, the writing system, and the calendar used, and also access to culture-specific objects that provide methods for common operations, such as formatting dates and sorting strings.">Структура <see cref="T:System.Globalization.CultureInfo" />, в которой приводятся сведения о языке и региональных параметрах этой структуры SqlString, в том числе об именах, системе письма и календаре, а также о доступе к характерным объектам, предоставляющим методы для выполнения распространенных операций, таких как форматирование даты и сортировка строк.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure is null.">Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlString" /> значение null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если свойство <see cref="P:System.Data.SqlTypes.SqlString.Value" /> имеет значение <see cref="F:System.Data.SqlTypes.SqlString.Null" />. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary vsli:raw="Specifies the geographical locale and language for the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Задает региональные параметры и язык для структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="The locale id for the string stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property.">Код языка для строки, хранящейся в свойстве <see cref="P:System.Data.SqlTypes.SqlString.Value" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary vsli:raw="A combination of one or more of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; enumeration values that represent the way in which this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Сочетание одного или нескольких значений перечисления <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />, представляющее способ сравнения <see cref="T:System.Data.SqlTypes.SqlString" /> с другими структурами <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A value specifying how this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Значение, указывающее способ сравнения <see cref="T:System.Data.SqlTypes.SqlString" /> с другими структурами <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary vsli:raw="Gets the string that is stored in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure. This property is read-only.">Получает строку, которая хранится в данной структуре <see cref="T:System.Data.SqlTypes.SqlString" />. Это свойство доступно только для чтения.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The value of the string is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;.">Значением строки является <see cref="F:System.Data.SqlTypes.SqlString.Null" />.</exception>
      <returns vsli:raw="The string that is stored.">Хранимая строка.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary vsli:raw="The exception that is thrown when you set a value into a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure would truncate that value.">Исключение, генерируемое в том случае, когда в структуре <see cref="N:System.Data.SqlTypes" /> задается значение, которое было бы усечено.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTruncateException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> с указанным сообщением об ошибке.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message and a reference to the &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> с указанным сообщением об ошибке и ссылкой на <see cref="T:System.Exception" />.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="e" vsli:raw="A reference to an inner &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">Ссылка на внутреннее <see cref="T:System.Exception" />.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary vsli:raw="The base exception class for the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt;.">Базовый класс исключений для <see cref="N:System.Data.SqlTypes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTypeException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTypeException" /> с сериализованными данными.</summary>
      <param name="si" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="sc" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTypeException" /> с указанным сообщением об ошибке.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTypeException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Для гарантированной локализации этой строки для текущей системной культуры необходимы сведения о том, кто вызывает этот конструктор.</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <c>innerException</c> не равно <see langword="null" />, текущее исключение возникает в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary vsli:raw="Represents XML data stored in or retrieved from a server.">Представляет XML-данные, сохраняемые на сервере или извлекаемые с него.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Создает новый экземпляр <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance, supplying the XML value from the supplied &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance.">Создает новый экземпляр <see cref="T:System.Data.SqlTypes.SqlXml" />, получая XML-значение из полученного производного экземпляра <see cref="T:System.IO.Stream" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance (such as &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt;) from which to load the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance's Xml content.">Производный экземпляр <see cref="T:System.IO.Stream" /> (например, <see cref="T:System.IO.FileStream" />), из которого следует загрузить XML-содержимое экземпляра <see cref="T:System.Data.SqlTypes.SqlXml" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance and associates it with the content of the supplied &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Создает новый экземпляр <see cref="T:System.Data.SqlTypes.SqlXml" /> и связывает его с содержимым предоставленного <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived class instance to be used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Экземпляр производного класса, полученного из <see cref="T:System.Xml.XmlReader" />, который требуется использовать в качестве значения нового экземпляра <see cref="T:System.Data.SqlTypes.SqlXml" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary vsli:raw="Gets the value of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; as a &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Получает значение XML-содержимого данного экземпляра <see cref="T:System.Data.SqlTypes.SqlXml" /> в формате <see cref="T:System.Xml.XmlReader" />.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="Attempt was made to access this property on a null instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt;.">Предпринята попытка получить доступ к этому свойству в неопределенном экземпляре <see cref="T:System.Data.SqlTypes.SqlXml" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived instance that contains the XML content. The actual type may vary (for example, the return value might be &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;) depending on how the information is represented internally, on the server.">Производный экземпляр, полученный из <see cref="T:System.Xml.XmlReader" /> и содержащий XML-данные. Фактический тип может меняться (например, возвращаемое значение может быть в формате <see cref="T:System.Xml.XmlTextReader" />) в зависимости от внутреннего способа представления данных на сервере.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A string that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Строка, указывающая определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, который описывает XML-представление объекта, созданного методом <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и используемого методом <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="r" vsli:raw="An XmlReader.">XmlReader.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; stream to which the object is serialized.">XmlWriter.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary vsli:raw="Indicates whether this instance represents a null &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; value.">Показывает, представляет ли данный экземпляр неопределенное значение <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <see langword="Value" /> равно NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary vsli:raw="Represents a null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">Представляет неопределенный экземпляр типа <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns vsli:raw="A null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">Неопределенный экземпляр типа <see cref="T:System.Data.SqlTypes.SqlXml" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary vsli:raw="Gets the string representation of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Получает строковое представление XML-содержимого данного экземпляра <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns vsli:raw="The string representation of the XML content.">Строковое представление XML-содержимого.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration is not intended for use as a stand-alone component, but as an enumeration from which other classes derive standard functionality.">Перечисление <see cref="T:System.Data.SqlTypes.StorageState" /> не предназначено для использования в качестве самостоятельного компонента; оно является перечислением, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary vsli:raw="Buffer size.">Размер буфера.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary vsli:raw="Stream.">Поток.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary vsli:raw="Unmanaged buffer.">Неуправляемый буфер.</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary vsli:raw="Provides data for the state change event of a .NET data provider.">Предоставляет данные для события изменения состояния поставщика данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; class, when given the original state and the current state of the object.">Инициализирует новый экземпляр класса <see cref="T:System.Data.StateChangeEventArgs" /> при данном исходном и текущем состоянии объекта.</summary>
      <param name="originalState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.ConnectionState" />.</param>
      <param name="currentState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.ConnectionState" />.</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary vsli:raw="Gets the new state of the connection. The connection object will be in the new state already when the event is fired.">Получает новое состояние подключения. Объект подключения будет уже в новом состоянии, когда событие запущено.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary vsli:raw="Gets the original state of the connection.">Получает текущее состояние подключения.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">Представляет метод обработки события <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">Объект класса <see cref="T:System.Data.StateChangeEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary vsli:raw="Provides additional information for the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">Предоставляет дополнительные сведения для события <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.StatementCompletedEventArgs&quot; /&gt; class.">Создает новый экземпляр класса <see cref="T:System.Data.StatementCompletedEventArgs" />.</summary>
      <param name="recordCount" vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">Указывает количество строк, на которые повлиял оператор, применение которого вызвало событие <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">Указывает количество строк, на которые повлиял оператор, применение которого вызвало событие <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <returns vsli:raw="The number of rows affected.">Число обработанных строк.</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary vsli:raw="The delegate type for the event handlers of the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">Тип делегата для обработчиков событий, относящихся к событию <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="The data for the event.">Данные для события.</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary vsli:raw="Specifies the type of SQL query to be used by the &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatedEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatingEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatedEventArgs&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatingEventArgs&quot; /&gt; class.">Задает тип SQL запроса для использования в классах <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />, <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> или <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" />.</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary vsli:raw="A SQL query that is a batch statement.">SQL-запрос, являющийся пакетным оператором.</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary vsli:raw="An SQL query that is a DELETE statement.">SQL-запрос, являющийся оператором DELETE.</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary vsli:raw="An SQL query that is an INSERT statement.">SQL-запрос, являющийся оператором INSERT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary vsli:raw="An SQL query that is a SELECT statement.">SQL-запрос, являющийся оператором SELECT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary vsli:raw="An SQL query that is an UPDATE statement.">SQL-запрос, являющийся оператором UPDATE.</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary vsli:raw="The exception that is thrown by a strongly typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; when the user accesses a &lt;see langword=&quot;DBNull&quot; /&gt; value.">Исключение, которое выдается строго типизированным объектом <see cref="T:System.Data.DataSet" />, когда пользователь получает доступ к значению <see langword="DBNull" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.StrongTypingException" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class using the specified serialization information and streaming context.">Инициализирует новый экземпляр класса <see cref="T:System.Data.StrongTypingException" />, используя заданную информацию сериализации и контекст потоков.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure.">Структура <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.StrongTypingException" /> с заданной строкой.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string and inner exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.StrongTypingException" />, используя заданную строку и внутреннее исключение.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a syntax error.">Предоставляет исключение, возникающее, когда свойство <see cref="P:System.Data.DataColumn.Expression" /> объекта <see cref="T:System.Data.DataColumn" /> содержит синтаксическую ошибку.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SyntaxErrorException" />.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SyntaxErrorException" /> со свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Информация, необходимая для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="The source and destination of a specific serialized stream.">Источник и назначение определенного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SyntaxErrorException" /> с заданной строкой.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.SyntaxErrorException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary vsli:raw="This type is used as a base class for typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool, and is not intended to be used directly from your code.">Этот тип используется как базовый класс для создания объектов с типом <see cref="T:System.Data.DataTable" /> Visual Studio и инструмента .NET Framework XSD.exe; тип не предназначен для непосредственного использования из кода.</summary>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence represented by the table, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип объектов в исходной последовательности, представленной в таблице, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This type is not intended to be used directly from your code.">Инициализирует новый объект <see cref="T:System.Data.TypedTableBase`1" />. Этот метод поддерживает создание типизированного объекта <see cref="T:System.Data.DataTable" /> с помощью Visual Studio и средства .NET Framework XSD.exe. Этот тип не предназначен для непосредственного использования в коде.</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Инициализирует новый объект <see cref="T:System.Data.TypedTableBase`1" />. Этот метод поддерживает создание типизированного объекта <see cref="T:System.Data.DataTable" /> с помощью Visual Studio и средства .NET Framework XSD.exe. Этот метод не предназначен для непосредственного использования в коде.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that contains data to construct the object.">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные для создания объекта.</param>
      <param name="context" vsli:raw="The streaming context for the object being deserialized.">Потоковый контекст для десериализуемого объекта.</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to the specified type. This method supports typed &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Преобразовывает элементы объекта <see cref="T:System.Data.TypedTableBase`1" /> в заданный тип. Этот метод поддерживает создание типизированного объекта <see cref="T:System.Data.DataTable" /> с помощью Visual Studio и средства .NET Framework XSD.exe. Этот метод не предназначен для непосредственного использования в коде.</summary>
      <typeparam name="TResult" vsli:raw="The type to convert the elements to.">Тип, к которому требуется преобразовать элементы.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">
        <see cref="T:System.Data.EnumerableRowCollection" /> — содержит все элементы исходной последовательности, преобразованные в указанный тип.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Возвращает перечислитель для типизированной строки <see cref="T:System.Data.DataRow" />. Этот метод поддерживает создание типизированного объекта <see cref="T:System.Data.DataTable" /> с помощью Visual Studio и средства .NET Framework XSD.exe. Этот метод не предназначен для непосредственного использования в коде.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">Объект, реализующий интерфейс <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Возвращает перечислитель для типизированной строки <see cref="T:System.Data.DataRow" />. Этот метод поддерживает создание типизированного объекта <see cref="T:System.Data.DataTable" /> с помощью Visual Studio и средства .NET Framework XSD.exe. Этот метод не предназначен для непосредственного использования в коде.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">Объект, реализующий интерфейс <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary vsli:raw="Contains the extension methods for the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; class.">Содержит методы расширения для класса <see cref="T:System.Data.TypedTableBase`1" />.</summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary vsli:raw="Enumerates the data row elements of the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; and returns an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">Перечисляет элементы строки данных <see cref="T:System.Data.TypedTableBase`1" /> и возвращает объект <see cref="T:System.Data.EnumerableRowCollection`1" />, в котором универсальный параметр <paramref name="T" /> равен <see cref="T:System.Data.DataRow" />. Этот объект может использоваться в выражении LINQ или запросе метода.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to make enumerable.">Исходный объект <see cref="T:System.Data.TypedTableBase`1" />, который требуется сделать перечисляемым.</param>
      <typeparam name="TRow" vsli:raw="The type to convert the elements of the source to.">Тип, в который преобразуются элементы источника.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Объект <see cref="T:System.Data.EnumerableRowCollection`1" />, где универсальный параметр <paramref name="T" /> имеет значение <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified row in a sequence or a default value if the row is out of range.">Возвращает элемент в указанной строке в последовательности или значение по умолчанию, если строка вне допустимого диапазона.</summary>
      <param name="source" vsli:raw="An enumerable object to return an element from.">Перечисляемый объект, из которого требуется возвратить элемент.</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">Отсчитываемый от нуля индекс извлекаемого элемента.</param>
      <typeparam name="TRow" vsli:raw="The type of the elements or the row.">Тип элементов или строки.</typeparam>
      <returns vsli:raw="The element at a specified row in a sequence.">Элемент, расположенный в указанной строке в последовательности.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key.">Сортирует строки объекта <see cref="T:System.Data.TypedTableBase`1" /> в порядке возрастания по заданному ключу.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Объект <see cref="T:System.Data.TypedTableBase`1" />, содержащий упорядочиваемые элементы <see cref="T:System.Data.DataRow" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого сортируются по заданному ключу.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key and comparer.">Сортирует строки объекта <see cref="T:System.Data.TypedTableBase`1" /> в порядке возрастания по указанному ключу и компаратору.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Объект <see cref="T:System.Data.TypedTableBase`1" />, содержащий упорядочиваемые элементы <see cref="T:System.Data.DataRow" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого отсортированы по указанному ключу и компаратору.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key.">Сортирует строки объекта <see cref="T:System.Data.TypedTableBase`1" /> в порядке убывания по указанному ключу.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Объект <see cref="T:System.Data.TypedTableBase`1" />, содержащий упорядочиваемые элементы <see cref="T:System.Data.DataRow" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого сортируются по заданному ключу.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key and comparer.">Сортирует строки объекта <see cref="T:System.Data.TypedTableBase`1" /> в порядке убывания в соответствии с указанным ключом и компаратором.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">Объект <see cref="T:System.Data.TypedTableBase`1" />, содержащий упорядочиваемые элементы <see cref="T:System.Data.DataRow" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого отсортированы по указанному ключу и компаратору.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; into a new form.">Проецирует каждый элемент <see cref="T:System.Data.TypedTableBase`1" /> в новую форму.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transformation function upon.">Объект <see cref="T:System.Data.TypedTableBase`1" />, содержащий элементы <see cref="T:System.Data.DataRow" />, для которых будет вызвана функция преобразования.</param>
      <param name="selector" vsli:raw="A transformation function to apply to each element.">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" vsli:raw="" />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transformation function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">Объект <see cref="T:System.Data.EnumerableRowCollection`1" />, элементы которого получены в результате вызова функции преобразования для каждого элемента последовательности <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">Выполняет фильтрацию последовательности строк на основе указанного предиката.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">Объект <see cref="T:System.Data.TypedTableBase`1" />, содержащий фильтруемые элементы <see cref="T:System.Data.DataRow" />.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, содержащий строки входной последовательности, которые удовлетворяют условию.</returns>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary vsli:raw="Represents a restriction on a set of columns in which all values must be unique.">Предоставляет ограничение на набор столбцов, в которых все значения должны быть уникальными.</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> указанным значением <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">Объект <see cref="T:System.Data.DataColumn" />, который требуется ограничить.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> объектом <see cref="T:System.Data.DataColumn" />, который необходимо ограничить, и значением, определяющим, является ли ограничение первичным ключом.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">Объект <see cref="T:System.Data.DataColumn" />, который требуется ограничить.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the given array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" />, используя заданный массив объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> массивом объектов <see cref="T:System.Data.DataColumn" />, которые необходимо ограничить, и значением, определяющим является ли ограничение первичным ключом.</summary>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем и объектом <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Имя ограничения.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">Объект <see cref="T:System.Data.DataColumn" />, который требуется ограничить.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем, объектом <see cref="T:System.Data.DataColumn" />, который необходимо ограничить, и значением, определяющим, является ли ограничение первичным ключом.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Имя ограничения.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">Объект <see cref="T:System.Data.DataColumn" />, который требуется ограничить.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем и массивом объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Имя ограничения.</param>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем, массивом объектов <see cref="T:System.Data.DataColumn" />, которые необходимо ограничить, и значением, определяющим является ли ограничение первичным ключом.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Имя ограничения.</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем, массивом объектов <see cref="T:System.Data.DataColumn" />, которые необходимо ограничить, и значением, определяющим является ли ограничение первичным ключом.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Имя ограничения.</param>
      <param name="columnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary vsli:raw="Compares this constraint to a second to determine if both are identical.">Сравнивает это ограничение со вторым, чтобы определить, являются ли они идентичными.</summary>
      <param name="key2" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; is compared.">Объект, с которым сравнивается объект <see cref="T:System.Data.UniqueConstraint" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraints are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если ограничения одинаковы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; object.">Возвращает хэш-код этого экземпляра объекта <see cref="T:System.Data.UniqueConstraint" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary vsli:raw="Gets the array of columns that this constraint affects.">Получает массив столбцов, на которые влияет это ограничение.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Массив объектов <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary vsli:raw="Gets a value indicating whether or not the constraint is on a primary key.">Получает значение, указывающее, является ли ограничение первичным ключом.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraint is on a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary vsli:raw="Gets the table to which this constraint belongs.">Получает таблицу, к которой относится это ограничение.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint belongs.">Объект <see cref="T:System.Data.DataTable" />, которому принадлежит данное ограничение.</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary vsli:raw="Specifies how query command results are applied to the row being updated.">Задает способ применения результатов команды запроса к обновляемой строке.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary vsli:raw="Both the output parameters and the first returned row are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Выходные параметры и первая возвращаемая строка отображаются в измененной строке объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary vsli:raw="The data in the first returned row is mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Данные первой возвращаемой строки отображаются в измененной строке объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary vsli:raw="Any returned parameters or rows are ignored.">Все возвращаемые параметры или строки игнорируются.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary vsli:raw="Output parameters are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Выходные параметры отображаются в измененной строке объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary vsli:raw="Specifies the action to take with regard to the current and remaining rows during an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Указывает действия, предпринимаемые в отношении текущей строки и остальных строк во время выполнения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; is to continue processing rows.">Класс <see cref="T:System.Data.Common.DataAdapter" /> продолжает обработку строк.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary vsli:raw="The event handler reports that the update should be treated as an error.">Обработчик событий сообщает, что обновление будет рассматриваться как ошибка.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary vsli:raw="The current row and all remaining rows are not to be updated.">Текущая строка и все остальные строки не обновляются.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary vsli:raw="The current row is not to be updated.">Текущая строка не обновляется.</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary vsli:raw="Represents the exception that is thrown when you try to return a version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">Предоставляет исключение, возникающее при попытке возврата версии объекта <see cref="T:System.Data.DataRow" />, который был удален.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Data.VersionNotFoundException" />.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with serialization information.">Инициализирует новый экземпляр класса <see cref="T:System.Data.VersionNotFoundException" /> со сведениями о сериализации.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with the specified string.">Инициализирует новый экземпляр класса <see cref="T:System.Data.VersionNotFoundException" /> с заданной строкой.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Data.VersionNotFoundException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary vsli:raw="Specifies how to read XML data and a relational schema into a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Указывает, как считывать XML-данные и реляционную схему в объект <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary vsli:raw="The default read mode.">Режим чтения по умолчанию.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary vsli:raw="Reads a DiffGram, applying changes from the DiffGram to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The semantics are identical to those of a &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation. As with the &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation, &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; values are preserved. Input to &lt;see cref=&quot;M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)&quot; /&gt; with DiffGrams should only be obtained using the output from &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram.&#xA;        &#xA;The target &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; must have the same schema as the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; on which &lt;see cref=&quot;Overload:System.Data.DataSet.WriteXml&quot; /&gt; as DiffGram is called. Otherwise the DiffGram merge operation fails and an exception is thrown.">Считывает DiffGram, применяя изменения из DiffGram к объекту <see cref="T:System.Data.DataSet" />. Семантика идентична семантике операции <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Как и в случае операции <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, значения <see cref="P:System.Data.DataRow.RowState" /> сохраняются. Входные данные метода <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> с DiffGrams могут быть получены только с использованием выходных данных метода <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> в виде DiffGram.
        
Целевой объект <see cref="T:System.Data.DataSet" /> должен иметь ту же схему, что и <see cref="T:System.Data.DataSet" />, для которого <see cref="Overload:System.Data.DataSet.WriteXml" /> вызывается как DiffGram. В противном случае происходит сбой операции слияния DiffGram и возникает исключение.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary vsli:raw="Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; is set to &lt;see langword=&quot;Fragment&quot; /&gt;, the default namespace is read as the inline schema.">Считывает XML-фрагменты, которые созданы при выполнении запросов FOR XML к экземпляру SQL Server. Когда для режима <see cref="T:System.Data.XmlReadMode" /> задано значение <see langword="Fragment" />, пространство имен по умолчанию читается как встроенная схема.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary vsli:raw="Ignores any inline schema and reads data into the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;). If the data is a DiffGram, &lt;see langword=&quot;IgnoreSchema&quot; /&gt; has the same functionality as &lt;see langword=&quot;DiffGram&quot; /&gt;.">Пропускает любую встроенную схему и считывает данные в существующую схему <see cref="T:System.Data.DataSet" />. Если какие-либо данные не соответствуют существующей схеме, они удаляются (включая данные из разных пространств имен, определенных для объекта <see cref="T:System.Data.DataSet" />). Если данные являются DiffGram, значение <see langword="IgnoreSchema" /> имеет такую же функциональность, что и <see langword="DiffGram" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary vsli:raw="Ignores any inline schema, infers schema from the data and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">Игнорирует все встроенные схемы, выводит схему из данных и загружает их. Если объект <see cref="T:System.Data.DataSet" /> уже содержит схему, текущая схема расширяется за счет добавления новых таблиц или столбцов в существующие таблицы. Если добавляемая таблица уже существует, но с другим пространством имен, или если добавляемые столбцы конфликтуют с существующими, выдается исключение.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary vsli:raw="Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">Игнорирует все встроенные схемы, выводит строго типизированную схему из данных и загружает их. Если тип не может быть выведен из данных, он интерпретируется как строковые данные. Если объект <see cref="T:System.Data.DataSet" /> уже содержит схему, текущая схема расширяется за счет добавления либо новых таблиц, либо столбцов в существующие таблицы. Если добавляемая таблица уже существует, но с другим пространством имен, или если добавляемые столбцы конфликтуют с существующими, выдается исключение.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary vsli:raw="Reads any inline schema and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Считывает любую встроенную схему и загружает данные. Если объект <see cref="T:System.Data.DataSet" /> уже содержит схему, новая таблица может быть в нее добавлена, но если какая-либо таблица во внутренней схеме уже существует в объекте <see cref="T:System.Data.DataSet" />, выдается исключение.</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary vsli:raw="Specifies how to write XML data and a relational schema from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Указывает, как записывать XML-данные и реляционную схему из объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary vsli:raw="Writes the entire &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as a DiffGram, including original and current values. To generate a DiffGram containing only changed values, call &lt;see cref=&quot;M:System.Data.DataSet.GetChanges&quot; /&gt;, and then call &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram on the returned &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Записывает весь <see cref="T:System.Data.DataSet" /> как DiffGram, включая исходные и текущие значения. Для создания формата DiffGram, содержащего только измененные значения, следует вызвать метод <see cref="M:System.Data.DataSet.GetChanges" />, а затем — метод <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> как DiffGram для возвращенного объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data, without an XSD schema. If no data is loaded into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, nothing is written.">Записывает текущее содержимое объекта <see cref="T:System.Data.DataSet" /> как XML-данные без схемы XSD. Если никакие данные не загружены в объект <see cref="T:System.Data.DataSet" />, запись не производится.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data with the relational structure as inline XSD schema. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has only a schema with no data, only the inline schema is written. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; does not have a current schema, nothing is written.">Записывает текущее содержимое объекта <see cref="T:System.Data.DataSet" /> в виде XML-данных с реляционной структурой как встроенную схему XSD. Если объект <see cref="T:System.Data.DataSet" /> имеет только схему без данных, записывается только встроенная схема. Если объект <see cref="T:System.Data.DataSet" /> не имеет текущей схемы, запись не производится.</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary vsli:raw="Allows structured data to be stored, retrieved, and manipulated through a relational &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Обеспечивает хранение, получение и управление структурированными данными с использованием реляционного объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDataDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDataDocument" /> указанным значением <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataset" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; to load into &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">Объект <see langword="DataSet" /> для загрузки в <see langword="XmlDataDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of the current node.">Создает дубликат текущего узла.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла.</param>
      <returns vsli:raw="The cloned node.">Точная копия узла.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; , and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Создает элемент с помощью указанных <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="prefix" vsli:raw="The prefix of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no prefix.">Префикс нового элемента. Если значение String.Empty или <see langword="null" />, префикс отсутствует.</param>
      <param name="localName" vsli:raw="The local name of the new element.">Локальное имя нового элемента.</param>
      <param name="namespaceURI" vsli:raw="The namespace Uniform Resource Identifier (URI) of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no namespaceURI.">Уникальный код ресурса пространства имен нового элемента. Если значение String.Empty или <see langword="null" />, URI пространства имен отсутствует.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">Новый объект <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">Создает объект <see cref="T:System.Xml.XmlEntityReference" /> с указанным именем.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">Имя ссылки на сущность.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">Вызов этого метода.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">
        <see cref="T:System.Xml.XmlEntityReference" /> с указанным именем.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document. The &lt;see langword=&quot;XPathNavigator&quot; /&gt; is positioned on the node specified in the &lt;paramref name=&quot;node&quot; /&gt; parameter.">Создает новый объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации в данном документе. Объект <see langword="XPathNavigator" /> находится в узле, заданном в параметре <paramref name="node" />.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; you want the navigator initially positioned on.">Узел <see cref="T:System.Xml.XmlNode" />, который будет служить исходной позицией навигатора.</param>
      <returns vsli:raw="An &lt;see langword=&quot;XPathNavigator&quot; /&gt; used to navigate the document.">Объект <see langword="XPathNavigator" />, используемый для перехода по документу.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID. This method is not supported by the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class. Calling this method throws an exception.">Возвращает элемент <see cref="T:System.Xml.XmlElement" /> с указанным идентификатором. Этот метод не поддерживается классом <see cref="T:System.Xml.XmlDataDocument" />. При вызове этого метода возникает исключение.</summary>
      <param name="elemId" vsli:raw="The attribute ID to match.">Идентификатор атрибута для сопоставления.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">Вызов этого метода.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID.">Объект <see cref="T:System.Xml.XmlElement" /> с указанным идентификатором.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Получает объект <see cref="T:System.Xml.XmlElement" />, связанный с указанным объектом <see cref="T:System.Data.DataRow" />.</summary>
      <param name="r" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; whose associated &lt;see langword=&quot;XmlElement&quot; /&gt; you want to retrieve.">Объект <see langword="DataRow" />, связанный с которым объект <see langword="XmlElement" /> необходимо получить.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; containing a representation of the specified &lt;see langword=&quot;DataRow&quot; /&gt;.">Объект <see langword="XmlElement" />, содержащий представление заданного объекта <see langword="DataRow" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">Возвращает значение <see cref="T:System.Xml.XmlNodeList" />, содержащее список всех элементов-потомков, соответствующих указанному имени <see cref="P:System.Xml.XmlDocument.Name" />.</summary>
      <param name="name" vsli:raw="The qualified name to match. It is matched against the &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt; property of the matching node. The special value &quot;*&quot; matches all tags.">Сопоставляемое полное имя. Оно противопоставляется свойству <see cref="P:System.Xml.XmlDocument.Name" /> соответствующего узла. Специальное значение "*" соответствует всем тегам.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes.">Класс <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех соответствующих узлов.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">Получает объект <see cref="T:System.Data.DataRow" />, связанный с указанным объектом <see cref="T:System.Xml.XmlElement" />.</summary>
      <param name="e" vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; whose associated &lt;see langword=&quot;DataRow&quot; /&gt; you want to retrieve.">Объект <see langword="XmlElement" />, связанный с которым объект <see langword="DataRow" /> необходимо получить.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; containing a representation of the &lt;see langword=&quot;XmlElement&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see langword=&quot;DataRow&quot; /&gt; associated with the &lt;see langword=&quot;XmlElement&quot; /&gt;.">Объект <see langword="DataRow" />, содержащий представление <see langword="XmlElement" />; значение <see langword="null" />, если отсутствует объект <see langword="DataRow" />, связанный с <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified stream.">Загружает <see langword="XmlDataDocument" /> из указанного потока.</summary>
      <param name="inStream" vsli:raw="The stream containing the XML document to load.">Поток, содержащий загружаемый документ XML.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Загружает объект <see langword="XmlDataDocument" /> из указанного объекта <see cref="T:System.IO.TextReader" />.</summary>
      <param name="txtReader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; used to feed the XML data into the document.">
        <see langword="TextReader" />, используемый для передачи данных XML в документ.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using the specified URL.">Загружает объект <see langword="XmlDataDocument" /> по указанному URL-адресу.</summary>
      <param name="filename" vsli:raw="The URL of the file containing the XML document to load.">Универсальный код ресурса (URI) файла, содержащего загружаемый XML-документ.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Загружает объект <see langword="XmlDataDocument" /> из указанного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; containing the XML document to load.">Объект <see langword="XmlReader" />, содержащий загружаемый XML-документ.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The XML being loaded contains entity references, and the reader cannot resolve entities.">Загружаемый XML содержит ссылки на сущность, и средство чтения не может разрешить сущности.</exception>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that provides a relational representation of the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">Получает объект <see cref="T:System.Data.DataSet" />, обеспечивающий реляционное представление данных в <see langword="XmlDataDocument" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;DataSet&quot; /&gt; that can be used to access the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using a relational model.">Объект <see langword="DataSet" />, который можно использовать для доступа к данным в <see langword="XmlDataDocument" /> с помощью реляционной модели.</returns>
    </member>
  </members>
</doc>