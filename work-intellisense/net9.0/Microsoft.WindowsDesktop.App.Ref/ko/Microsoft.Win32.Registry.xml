<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Win32.Registry</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.Registry">
      <summary>Windows 레지스트리의 루트 키를 나타내는 <see cref="T:Microsoft.Win32.RegistryKey" /> 개체와 키/값 쌍에 액세스하는 <see langword="static" /> 메서드를 제공합니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.Registry.ClassesRoot">
      <summary>해당 형식과 관련된 속성 및 문서의 형식 또는 클래스를 정의합니다. 이 필드는 Windows 레지스트리 기본 키 HKEY_CLASSES_ROOT를 읽습니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.Registry.CurrentConfig">
      <summary>사용자와 관련되지 않은 하드웨어에 대한 구성 정보가 들어 있습니다. 이 필드는 Windows 레지스트리 기본 키 HKEY_CURRENT_CONFIG를 읽습니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.Registry.CurrentUser">
      <summary>현재 사용자 기본 설정에 대한 정보가 들어 있습니다. 이 필드는 Windows 레지스트리 기본 키 HKEY_CURRENT_USER를 읽습니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.Registry.LocalMachine">
      <summary>로컬 컴퓨터에 대한 구성 데이터가 들어 있습니다. 이 필드는 Windows 레지스트리 기본 키 HKEY_LOCAL_MACHINE을 읽습니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.Registry.PerformanceData">
      <summary>소프트웨어 구성 요소에 대한 성능 정보를 포함합니다. 이 필드는 Windows 레지스트리 기본 키 HKEY_PERFORMANCE_DATA를 읽습니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.Registry.Users">
      <summary>기본 사용자 구성에 대한 정보가 들어 있습니다. 이 필드는 Windows 레지스트리 기본 키 HKEY_USERS를 읽습니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
      <summary>지정된 레지스트리 키에서 지정된 이름에 연결된 값을 검색합니다. 지정된 키에 해당 이름이 없으면 사용자가 제공한 기본값이 반환되고, 지정된 키가 없으면 <see langword="null" />이 반환됩니다.</summary>
      <param name="keyName">"HKEY_CURRENT_USER"와 같이 유효한 레지스트리 루트로 시작하는 키의 전체 레지스트리 경로입니다.</param>
      <param name="valueName">이름/값 쌍의 이름입니다.</param>
      <param name="defaultValue">
        <paramref name="valueName" />이 없는 경우에 반환할 값입니다.</param>
      <exception cref="T:System.Security.SecurityException">사용자가 레지스트리 키를 읽는 데 필요한 사용 권한이 없는 경우</exception>
      <exception cref="T:System.IO.IOException">지정된 값이 포함된 <see cref="T:Microsoft.Win32.RegistryKey" />가 삭제 표시된 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" />이 유효한 레지스트리 루트로 시작하지 않은 경우</exception>
      <returns>
        <paramref name="keyName" />에 지정된 하위 키가 없으면 <see langword="null" />이 반환되고, 그렇지 않으면 <paramref name="valueName" />과 연결된 값이 반환됩니다. <paramref name="defaultValue" />이 없으면 <paramref name="valueName" />가 반환됩니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
      <summary>지정된 레지스트리 키에 지정된 이름/값 쌍을 설정합니다. 지정된 키가 없으면 키가 새로 만들어집니다.</summary>
      <param name="keyName">"HKEY_CURRENT_USER"와 같이 유효한 레지스트리 루트로 시작하는 키의 전체 레지스트리 경로입니다.</param>
      <param name="valueName">이름/값 쌍의 이름입니다.</param>
      <param name="value">저장할 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" />이 유효한 레지스트리 루트로 시작하지 않은 경우  
  
또는 
 <paramref name="keyName" />이 최대 허용 길이(255자)보다 긴 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">루트 수준 노드와 같이 <see cref="T:Microsoft.Win32.RegistryKey" />가 읽기 전용이므로 여기에 쓸 수 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자가 레지스트리 키를 만들거나 수정하는 데 필요한 사용 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
      <summary>지정된 레지스트리 데이터 형식을 사용하여 지정된 레지스트리 키에 이름/값 쌍을 설정합니다. 지정된 키가 없으면 키가 새로 만들어집니다.</summary>
      <param name="keyName">"HKEY_CURRENT_USER"와 같이 유효한 레지스트리 루트로 시작하는 키의 전체 레지스트리 경로입니다.</param>
      <param name="valueName">이름/값 쌍의 이름입니다.</param>
      <param name="value">저장할 값입니다.</param>
      <param name="valueKind">데이터를 저장할 때 사용할 레지스트리 데이터 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" />이 유효한 레지스트리 루트로 시작하지 않은 경우  
  
또는 
 <paramref name="keyName" />이 최대 허용 길이(255자)보다 긴 경우  
  
또는 
<paramref name="value" />의 형식이 <paramref name="valueKind" />에 지정된 레지스트리 데이터 형식과 일치하지 않아 데이터가 올바르게 변환되지 않은 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="T:Microsoft.Win32.RegistryKey" />가 읽기 전용이므로 쓸 수 없는 경우. 예를 들어, 루트 수준 노드이거나 쓰기 권한으로 키를 열지 않은 경우일 수 있습니다.</exception>
      <exception cref="T:System.Security.SecurityException">사용자가 레지스트리 키를 만들거나 수정하는 데 필요한 사용 권한이 없는 경우</exception>
    </member>
    <member name="T:Microsoft.Win32.RegistryHive">
      <summary>외부 시스템의 상위 수준 노드에 대한 가능한 값을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryHive.ClassesRoot">
      <summary>다른 컴퓨터의 HKEY_CLASSES_ROOT 기본 키를 나타냅니다. 이 값을 <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> 메서드에 전달하여 해당 노드를 원격으로 열 수 있습니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryHive.CurrentConfig">
      <summary>다른 컴퓨터의 HKEY_CURRENT_CONFIG 기본 키를 나타냅니다. 이 값을 <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> 메서드에 전달하여 해당 노드를 원격으로 열 수 있습니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryHive.CurrentUser">
      <summary>다른 컴퓨터의 HKEY_CURRENT_USER 기본 키를 나타냅니다. 이 값을 <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> 메서드에 전달하여 해당 노드를 원격으로 열 수 있습니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryHive.LocalMachine">
      <summary>다른 컴퓨터의 HKEY_LOCAL_MACHINE 기본 키를 나타냅니다. 이 값을 <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> 메서드에 전달하여 해당 노드를 원격으로 열 수 있습니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryHive.PerformanceData">
      <summary>다른 컴퓨터의 HKEY_PERFORMANCE_DATA 기본 키를 나타냅니다. 이 값을 <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> 메서드에 전달하여 해당 노드를 원격으로 열 수 있습니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryHive.Users">
      <summary>다른 컴퓨터의 HKEY_USERS 기본 키를 나타냅니다. 이 값을 <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> 메서드에 전달하여 해당 노드를 원격으로 열 수 있습니다.</summary>
    </member>
    <member name="T:Microsoft.Win32.RegistryKey">
      <summary>Windows 레지스트리의 키 수준 노드를 나타냅니다. 이 클래스는 레지스트리 캡슐화 클래스입니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.Close">
      <summary>내용이 수정되었으면 키를 닫고 디스크에 플러시합니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)">
      <summary>새 하위 키를 만들거나 쓰기 권한으로 기존 하위 키를 엽니다.</summary>
      <param name="subkey">만들거나 열 하위 키의 이름 또는 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 레지스트리 키를 만들거나 열 수 있는 권한이 없습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">이 메서드를 호출할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="T:Microsoft.Win32.RegistryKey" />에 쓸 수 없는 경우. 예를 들어, 해당 키가 쓸 수 있는 키로 열리지 않았거나 사용자에게 필요한 액세스 권한이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">중첩 수준이 510을 초과합니다.  
  
또는 
키 삭제와 같은 시스템 오류가 발생했거나 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 루트에 키를 만들려고 했습니다.</exception>
      <returns>새로 만든 하위 키 또는 작업이 실패한 경우 <see langword="null" />입니다. 길이가 0인 문자열이 <paramref name="subkey" />에 지정되어 있으면 현재 <see cref="T:Microsoft.Win32.RegistryKey" /> 개체가 반환됩니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)">
      <summary>지정된 권한 검사 옵션을 사용하여 새 하위 키를 만들거나 쓰기 권한으로 기존 하위 키를 엽니다.</summary>
      <param name="subkey">만들거나 열 하위 키의 이름 또는 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="permissionCheck">키가 읽기 또는 읽기/쓰기 권한으로 열려 있는지를 지정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 레지스트리 키를 만들거나 열 수 있는 권한이 없습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permissionCheck" />에 잘못된 값이 포함된 경우</exception>
      <exception cref="T:System.ObjectDisposedException">이 메서드를 호출할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="T:Microsoft.Win32.RegistryKey" />에 쓸 수 없는 경우. 예를 들어, 해당 키가 쓸 수 있는 키로 열리지 않았거나 사용자에게 필요한 액세스 권한이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">중첩 수준이 510을 초과합니다.  
  
또는 
키 삭제와 같은 시스템 오류가 발생했거나 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 루트에 키를 만들려고 했습니다.</exception>
      <returns>새로 만든 하위 키 또는 작업이 실패한 경우 <see langword="null" />입니다. 길이가 0인 문자열이 <paramref name="subkey" />에 지정되어 있으면 현재 <see cref="T:Microsoft.Win32.RegistryKey" /> 개체가 반환됩니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)">
      <summary>지정된 권한 검사 및 레지스트리 옵션을 사용하여 하위 키를 만들거나 쓰기 권한을 위해 하위 키를 엽니다.</summary>
      <param name="subkey">만들거나 열 하위 키의 이름 또는 경로입니다.</param>
      <param name="permissionCheck">키가 읽기 또는 읽기/쓰기 권한으로 열려 있는지를 지정하는 열거형 값 중 하나입니다.</param>
      <param name="registryOptions">사용할 레지스트리 옵션입니다(예: 휘발성 키를 만드는 옵션).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException">현재 <see cref="T:Microsoft.Win32.RegistryKey" /> 개체를 닫습니다. 이때 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">현재 <see cref="T:Microsoft.Win32.RegistryKey" /> 개체에 쓸 수 없는 경우. 예를 들어, 해당 키가 쓸 수 있는 키로 열리지 않았거나 사용자에게 필수 액세스 권한이 없는 경우.</exception>
      <exception cref="T:System.IO.IOException">중첩 수준이 510을 초과합니다.  
  
또는 
시스템 오류가 발생한 경우. 예를 들어, <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 루트에서 키를 삭제했거나 키를 만들려고 했습니다.</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 레지스트리 키를 만들거나 열 수 있는 권한이 없습니다.</exception>
      <returns>새로 만든 하위 키 또는 작업이 실패한 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)">
      <summary>지정된 권한 검사 옵션, 레지스트리 옵션 및 레지스트리 보안을 사용하여 하위 키를 만들거나 쓰기 권한을 위해 하위 키를 엽니다.</summary>
      <param name="subkey">만들거나 열 하위 키의 이름 또는 경로입니다.</param>
      <param name="permissionCheck">키가 읽기 또는 읽기/쓰기 권한으로 열려 있는지를 지정하는 열거형 값 중 하나입니다.</param>
      <param name="registryOptions">사용할 레지스트리 옵션입니다.</param>
      <param name="registrySecurity">새 하위 키에 대한 액세스 제어 보안입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException">현재 <see cref="T:Microsoft.Win32.RegistryKey" /> 개체를 닫습니다. 닫힌 키에 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">현재 <see cref="T:Microsoft.Win32.RegistryKey" /> 개체에 쓸 수 없는 경우. 예를 들어, 해당 키가 쓸 수 있는 키로 열리지 않았거나 사용자에게 필수 액세스 권한이 없는 경우.</exception>
      <exception cref="T:System.IO.IOException">중첩 수준이 510을 초과합니다.  
  
또는 
시스템 오류가 발생한 경우. 예를 들어, <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 루트에서 키를 삭제했거나 키를 만들려고 했습니다.</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 레지스트리 키를 만들거나 열 수 있는 권한이 없습니다.</exception>
      <returns>새로 만든 하위 키 또는 작업이 실패한 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)">
      <summary>지정된 권한 검사 옵션과 레지스트리 보안을 사용하여 새 하위 키를 만들거나 쓰기 권한으로 기존 하위 키를 엽니다.</summary>
      <param name="subkey">만들거나 열 하위 키의 이름 또는 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="permissionCheck">키가 읽기 또는 읽기/쓰기 권한으로 열려 있는지를 지정하는 열거형 값 중 하나입니다.</param>
      <param name="registrySecurity">새 키에 대한 액세스 제어 보안입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 레지스트리 키를 만들거나 열 수 있는 권한이 없습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permissionCheck" />에 잘못된 값이 포함된 경우</exception>
      <exception cref="T:System.ObjectDisposedException">이 메서드를 호출할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">현재 <see cref="T:Microsoft.Win32.RegistryKey" />에 쓸 수 없습니다. 예를 들어 쓸 수 있는 키로 열지 않았거나 사용자에게 필요한 액세스 권한이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">중첩 수준이 510을 초과합니다.  
  
또는 
키 삭제와 같은 시스템 오류가 발생했거나 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 루트에 키를 만들려고 했습니다.</exception>
      <returns>새로 만든 하위 키 또는 작업이 실패한 경우 <see langword="null" />입니다. 길이가 0인 문자열이 <paramref name="subkey" />에 지정되어 있으면 현재 <see cref="T:Microsoft.Win32.RegistryKey" /> 개체가 반환됩니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)">
      <summary>새 하위 키를 만들거나 지정된 액세스로 기존 하위 키를 엽니다. .NET Framework 4.6부터 사용할 수 있습니다.</summary>
      <param name="subkey">만들거나 열 하위 키의 이름 또는 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="writable">새 하위 키를 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 레지스트리 키를 만들거나 열 수 있는 권한이 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">현재 <see cref="T:Microsoft.Win32.RegistryKey" />에 쓸 수 없습니다. 예를 들어 쓸 수 있는 키로 열지 않았거나 사용자에게 필요한 액세스 권한이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">중첩 수준이 510을 초과합니다.  
  
또는 
키 삭제와 같은 시스템 오류가 발생했거나 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 루트에 키를 만들려고 했습니다.</exception>
      <returns>새로 만든 하위 키 또는 작업이 실패한 경우 <see langword="null" />입니다. 길이가 0인 문자열이 <paramref name="subkey" />에 지정되어 있으면 현재 <see cref="T:Microsoft.Win32.RegistryKey" /> 개체가 반환됩니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)">
      <summary>새 하위 키를 만들거나 지정된 액세스로 기존 하위 키를 엽니다. .NET Framework 4.6부터 사용할 수 있습니다.</summary>
      <param name="subkey">만들거나 열 하위 키의 이름 또는 경로입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="writable">새 하위 키를 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="options">사용할 레지스트리 옵션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> 유효한 옵션을 지정하지 않습니다.</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 레지스트리 키를 만들거나 열 수 있는 권한이 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">현재 <see cref="T:Microsoft.Win32.RegistryKey" />에 쓸 수 없습니다. 예를 들어 쓸 수 있는 키로 열지 않았거나 사용자에게 필요한 액세스 권한이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">중첩 수준이 510을 초과합니다.  
  
또는 
키 삭제와 같은 시스템 오류가 발생했거나 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 루트에 키를 만들려고 했습니다.</exception>
      <returns>새로 만든 하위 키 또는 작업이 실패한 경우 <see langword="null" />입니다. 길이가 0인 문자열이 <paramref name="subkey" />에 지정되어 있으면 현재 <see cref="T:Microsoft.Win32.RegistryKey" /> 개체가 반환됩니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)">
      <summary>지정된 하위 키를 삭제합니다.</summary>
      <param name="subkey">삭제할 하위 키의 이름입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="subkey" />에 자식 하위 키가 있는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="subkey" /> 매개 변수에 유효한 레지스트리 키가 지정되지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 키를 삭제하는 데 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">조작할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)">
      <summary>지정된 하위 키를 삭제하고 하위 키가 없는 경우 예외를 발생시킬지 여부를 지정합니다.</summary>
      <param name="subkey">삭제할 하위 키의 이름입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="throwOnMissingSubKey">지정된 하위 키를 찾을 수 없는 경우에 예외를 발생시킬지 여부를 나타냅니다. 이 인수가 <see langword="true" />이고 지정된 하위 키가 없으면 예외가 발생합니다. 이 인수가 <see langword="false" />이고 지정된 하위 키가 없으면 아무 작업도 수행되지 않습니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="subkey" />에 자식 하위 키가 있는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="subkey" />가 유효한 레지스트리 키를 지정하지 않으며, <paramref name="throwOnMissingSubKey" />는 <see langword="true" />입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 키를 삭제하는 데 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">조작할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)">
      <summary>하위 키와 자식 하위 키를 재귀적으로 삭제합니다.</summary>
      <param name="subkey">삭제할 하위 키입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">루트 하이브를 삭제하려고 한 경우  
  
또는 
 <paramref name="subkey" />에 유효한 레지스트리 하위 키가 지정되지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 키를 삭제하는 데 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">조작할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)">
      <summary>지정된 하위 키와 자식 하위 키를 재귀적으로 삭제하고 하위 키가 없는 경우 예외를 발생시킬지 여부를 지정합니다.</summary>
      <param name="subkey">삭제할 하위 키의 이름입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="throwOnMissingSubKey">지정된 하위 키를 찾을 수 없는 경우에 예외를 발생시킬지 여부를 나타냅니다. 이 인수가 <see langword="true" />이고 지정된 하위 키가 없으면 예외가 발생합니다. 이 인수가 <see langword="false" />이고 지정된 하위 키가 없으면 아무 작업도 수행되지 않습니다.</param>
      <exception cref="T:System.ArgumentException">트리의 루트 하이브를 삭제하려고 한 경우  
  
또는 
 <paramref name="subkey" />을를는 유효한 레지스트리 하위 키를 지정하지 않으며, <paramref name="throwOnMissingSubKey" />을를는 <see langword="true" />입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subkey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 키를 삭제하는 데 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)">
      <summary>지정된 값을 이 키에서 삭제합니다.</summary>
      <param name="name">삭제할 값의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" />이 값에 대한 유효한 참조가 아닌 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 값을 삭제하는 데 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">조작할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">조작할 <see cref="T:Microsoft.Win32.RegistryKey" />가 읽기 전용인 경우</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)">
      <summary>이 키에서 지정된 값을 삭제하고 값이 없을 경우 예외를 발생시킬지 여부를 지정합니다.</summary>
      <param name="name">삭제할 값의 이름입니다.</param>
      <param name="throwOnMissingValue">지정된 값을 찾을 수 없는 경우에 예외를 발생시킬지 여부를 나타냅니다. 이 인수가 <see langword="true" />이고 지정된 값이 없으면 예외가 발생합니다. 이 인수가 <see langword="false" />이고 지정된 값이 없으면 아무 작업도 수행되지 않습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" />이 값에 대한 유효한 참조가 아니고 <paramref name="throwOnMissingValue" />가 <see langword="true" />인 경우  
  
또는 
 <paramref name="name" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 값을 삭제하는 데 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">조작할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">조작할 <see cref="T:Microsoft.Win32.RegistryKey" />가 읽기 전용인 경우</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.Dispose">
      <summary>
        <see cref="T:Microsoft.Win32.RegistryKey" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.Flush">
      <summary>지정된 열린 레지스트리 키의 특성을 모두 레지스트리에 기록합니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)">
      <summary>지정된 핸들에서 레지스트리 키를 만듭니다.</summary>
      <param name="handle">레지스트리 키에 대한 핸들입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handle" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자는 이 작업을 수행한 데 필요한 권한을 가지고 있지 않습니다.</exception>
      <returns>레지스트리 키입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)">
      <summary>지정된 핸들 및 레지스트리 뷰 설정에서 레지스트리 키를 만듭니다.</summary>
      <param name="handle">레지스트리 키에 대한 핸들입니다.</param>
      <param name="view">사용할 레지스트리 뷰입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="view" />이 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handle" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자는 이 작업을 수행한 데 필요한 권한을 가지고 있지 않습니다.</exception>
      <returns>레지스트리 키입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetAccessControl">
      <summary>현재 레지스트리 키에 대한 액세스 제어 보안을 반환합니다.</summary>
      <exception cref="T:System.Security.SecurityException">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">조작할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">현재 키가 삭제된 경우</exception>
      <returns>현재 <see cref="T:Microsoft.Win32.RegistryKey" />로 표시된 레지스트리 키에 대한 액세스 제어 권한을 설명하는 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
      <summary>현재 레지스트리 키에 대한 액세스 제어 보안의 지정된 섹션을 반환합니다.</summary>
      <param name="includeSections">가져올 보안 정보의 형식을 지정하는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.Security.SecurityException">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">조작할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">현재 키가 삭제된 경우</exception>
      <returns>현재 <see cref="T:Microsoft.Win32.RegistryKey" />로 표시된 레지스트리 키에 대한 액세스 제어 권한을 설명하는 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetSubKeyNames">
      <summary>모든 하위 키 이름이 포함된 문자열의 배열을 검색합니다.</summary>
      <exception cref="T:System.Security.SecurityException">사용자에게 키를 읽는 데 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">조작할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <exception cref="T:System.IO.IOException">시스템 오류가 발생한 경우. 예를 들어, 현재 키가 삭제되었습니다.</exception>
      <returns>현재 키에 대한 하위 키의 이름이 포함된 문자열의 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetValue(System.String)">
      <summary>지정된 이름과 연결된 값을 검색합니다. 이름/값 쌍이 레지스트리에 없으면 <see langword="null" />을 반환합니다.</summary>
      <param name="name">검색할 값의 이름입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <exception cref="T:System.Security.SecurityException">사용자가 레지스트리 키를 읽는 데 필요한 사용 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">지정된 값이 포함된 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">지정된 값이 포함된 <see cref="T:Microsoft.Win32.RegistryKey" />가 삭제 표시된 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <returns>
        <paramref name="name" />과 연결된 값이거나, <paramref name="name" />이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)">
      <summary>지정된 이름과 연결된 값을 검색합니다. 이름이 없으면 사용자가 제공하는 기본값을 반환합니다.</summary>
      <param name="name">검색할 값의 이름입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="defaultValue">
        <paramref name="name" />이 없는 경우에 반환할 값입니다.</param>
      <exception cref="T:System.Security.SecurityException">사용자가 레지스트리 키를 읽는 데 필요한 사용 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">지정된 값이 포함된 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">지정된 값이 포함된 <see cref="T:Microsoft.Win32.RegistryKey" />가 삭제 표시된 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <returns>확장되지 않은 상태로 유지되는 포함 환경 변수가 있는 <paramref name="name" />과 연결된 값이거나, <paramref name="defaultValue" />이 없으면 <paramref name="name" />입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)">
      <summary>지정된 이름 및 검색 옵션과 연결된 값을 검색합니다. 이름이 없으면 사용자가 제공하는 기본값을 반환합니다.</summary>
      <param name="name">검색할 값의 이름입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <param name="defaultValue">
        <paramref name="name" />이 없는 경우에 반환할 값입니다.</param>
      <param name="options">검색된 값의 선택적인 처리를 지정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.Security.SecurityException">사용자가 레지스트리 키를 읽는 데 필요한 사용 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">지정된 값이 포함된 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">지정된 값이 포함된 <see cref="T:Microsoft.Win32.RegistryKey" />가 삭제 표시된 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" />가 유효한 <see cref="T:Microsoft.Win32.RegistryValueOptions" /> 값이 아닌 경우. 예를 들어, 잘못된 값이 <see cref="T:Microsoft.Win32.RegistryValueOptions" />로 캐스팅되었습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <returns>지정된 <paramref name="name" />에 따라 처리되는 <paramref name="options" />과 연결된 값이거나, <paramref name="defaultValue" />이 없으면 <paramref name="name" />입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)">
      <summary>지정된 이름과 연결된 값의 레지스트리 데이터 형식을 검색합니다.</summary>
      <param name="name">레지스트리 데이터 형식을 검색할 값의 이름입니다. 이 문자열은 대/소문자를 구분하지 않습니다.</param>
      <exception cref="T:System.Security.SecurityException">사용자가 레지스트리 키를 읽는 데 필요한 사용 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">지정된 값이 포함된 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">지정된 값이 포함된 하위 키가 없는 경우  
  
또는 
<paramref name="name" />으로 지정된 이름/값 쌍이 없는 경우  
  
Windows 95, Windows 98 또는 Windows Millennium Edition에서는 이 예외가 throw되지 않습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <returns>
        <paramref name="name" />에 연결된 값의 레지스트리 데이터 형식입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.GetValueNames">
      <summary>이 키와 관련된 모든 값 이름이 포함된 문자열의 배열을 검색합니다.</summary>
      <exception cref="T:System.Security.SecurityException">사용자가 레지스트리 키를 읽는 데 필요한 사용 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">조작할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <exception cref="T:System.IO.IOException">시스템 오류가 발생한 경우. 예를 들어, 현재 키가 삭제되었습니다.</exception>
      <returns>현재 키의 값 이름이 포함된 문자열의 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)">
      <summary>지정된 뷰를 사용하여 로컬 컴퓨터의 요청된 키를 나타내는 새 <see cref="T:Microsoft.Win32.RegistryKey" />를 엽니다.</summary>
      <param name="hKey">열려는 HKEY입니다.</param>
      <param name="view">사용할 레지스트리 뷰입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hKey" /> 또는 <paramref name="view" />가 잘못되었습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자는 이 작업을 수행한 데 필요한 권한을 가지고 있지 않습니다.</exception>
      <returns>요청된 레지스트리 키입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)">
      <summary>원격 컴퓨터에서 요청된 키를 나타내는 새 <see cref="T:Microsoft.Win32.RegistryKey" />를 엽니다.</summary>
      <param name="hKey">
        <see cref="T:Microsoft.Win32.RegistryHive" /> 열거형에서 열 HKEY입니다.</param>
      <param name="machineName">원격 컴퓨터입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hKey" />이 잘못되었습니다.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="machineName" /> 가 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="machineName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException">이 작업을 수행하는 데 필요한 해당 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <returns>요청된 레지스트리 키입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)">
      <summary>지정된 뷰를 사용하여 원격 컴퓨터의 요청된 키를 나타내는 새 레지스트리 키를 엽니다.</summary>
      <param name="hKey">
        <see cref="T:Microsoft.Win32.RegistryHive" /> 열거형에서 열려는 HKEY입니다.</param>
      <param name="machineName">원격 컴퓨터입니다.</param>
      <param name="view">사용할 레지스트리 뷰입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hKey" /> 또는 <paramref name="view" />가 잘못되었습니다.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="machineName" /> 가 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="machineName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException">이 작업을 수행하는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns>요청된 레지스트리 키입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String)">
      <summary>하위 키를 읽기 전용으로 검색합니다.</summary>
      <param name="name">읽기 전용으로 열려는 하위 키의 이름 또는 경로입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 레지스트리 키를 읽는 데 필요한 권한이 없는 경우</exception>
      <returns>요청된 하위 키이거나, 작업에 실패하면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)">
      <summary>읽기 또는 읽기/쓰기 권한으로 지정된 하위 키를 검색합니다.</summary>
      <param name="name">만들거나 열 하위 키의 이름 또는 경로입니다.</param>
      <param name="permissionCheck">키가 읽기 또는 읽기/쓰기 권한으로 열려 있는지를 지정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permissionCheck" />에 잘못된 값이 포함된 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 레지스트리 키를 읽는 데 필요한 권한이 없는 경우</exception>
      <returns>요청된 하위 키이거나, 작업에 실패하면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)">
      <summary>지정된 액세스 권한을 요청하여 읽기 또는 읽기/쓰기 권한으로 지정된 하위 키를 검색합니다.</summary>
      <param name="name">만들거나 열 하위 키의 이름 또는 경로입니다.</param>
      <param name="permissionCheck">키가 읽기 또는 읽기/쓰기 권한으로 열려 있는지를 지정하는 열거형 값 중 하나입니다.</param>
      <param name="rights">원하는 보안 액세스를 지정하는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permissionCheck" />에 잘못된 값이 포함된 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="rights" />에 잘못된 레지스트리 권한 값이 포함된 경우  
  
또는 
사용자에게 요청된 권한이 없는 경우</exception>
      <returns>요청된 하위 키이거나, 작업에 실패하면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)">
      <summary>지정된 하위 키를 검색하고 키에 쓰기 액세스를 적용할지 여부를 지정합니다.</summary>
      <param name="name">열려는 하위 키의 이름 또는 경로입니다.</param>
      <param name="writable">키에 대한 쓰기 권한이 필요하면 <see langword="true" />로 설정합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 지정된 모드에서 레지스트리 키에 액세스하는 데 필요한 권한이 없는 경우</exception>
      <returns>요청된 하위 키이거나, 작업에 실패하면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)">
      <summary>지정된 이름 및 액세스 권한으로 하위 키를 검색합니다. .NET Framework 4.6부터 사용할 수 있습니다.</summary>
      <param name="name">만들거나 열 하위 키의 이름 또는 경로입니다.</param>
      <param name="rights">레지스트리 키의 권한입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 지정된 모드에서 레지스트리 키에 액세스하는 데 필요한 권한이 없는 경우</exception>
      <returns>요청된 하위 키이거나, 작업에 실패하면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)">
      <summary>Windows 액세스 제어 보안을 기존 레지스트리 키에 적용합니다.</summary>
      <param name="registrySecurity">현재 하위 키에 적용할 액세스 제어 보안입니다.</param>
      <exception cref="T:System.UnauthorizedAccessException">현재 <see cref="T:Microsoft.Win32.RegistryKey" /> 개체가 액세스 제어 보안이 적용된 키를 나타내고 호출자에게 <see cref="F:System.Security.AccessControl.RegistryRights.ChangePermissions" /> 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="registrySecurity" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException">조작할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)">
      <summary>지정된 이름/값 쌍을 설정합니다.</summary>
      <param name="name">저장할 값의 이름입니다.</param>
      <param name="value">저장할 데이터입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />가 지원되지 않는 데이터 형식인 경우</exception>
      <exception cref="T:System.ObjectDisposedException">지정된 값이 포함된 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="T:Microsoft.Win32.RegistryKey" />가 읽기 전용이고 쓸 수 없는 경우. 예를 들어, 키가 쓰기 권한으로 열리지 않았습니다.  
  
또는 
<see cref="T:Microsoft.Win32.RegistryKey" /> 개체가 루트 수준 노드를 나타내고 운영 체제가 Windows Millennium Edition이나 Windows 98인 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자가 레지스트리 키를 만들거나 수정하는 데 필요한 사용 권한이 없는 경우</exception>
      <exception cref="T:System.IO.IOException">
        <see cref="T:Microsoft.Win32.RegistryKey" /> 개체가 루트 수준 노드를 나타내고 운영 체제가 Windows 2000, Windows XP 또는 Windows Server 2003인 경우</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
      <summary>지정된 레지스트리 데이터 형식을 사용하여 레지스트리 키에서 이름/값 쌍의 값을 설정합니다.</summary>
      <param name="name">저장할 값의 이름입니다.</param>
      <param name="value">저장할 데이터입니다.</param>
      <param name="valueKind">데이터를 저장할 때 사용할 레지스트리 데이터 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />의 형식이 <paramref name="valueKind" />에 지정된 레지스트리 데이터 형식과 일치하지 않아 데이터가 올바르게 변환되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException">지정된 값이 포함된 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="T:Microsoft.Win32.RegistryKey" />가 읽기 전용이고 쓸 수 없는 경우. 예를 들어, 키가 쓰기 권한으로 열리지 않았습니다.  
  
또는 
<see cref="T:Microsoft.Win32.RegistryKey" /> 개체가 루트 수준 노드를 나타내고 운영 체제가 Windows Millennium Edition이나 Windows 98인 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자가 레지스트리 키를 만들거나 수정하는 데 필요한 사용 권한이 없는 경우</exception>
      <exception cref="T:System.IO.IOException">
        <see cref="T:Microsoft.Win32.RegistryKey" /> 개체가 루트 수준 노드를 나타내고 운영 체제가 Windows 2000, Windows XP 또는 Windows Server 2003인 경우</exception>
    </member>
    <member name="M:Microsoft.Win32.RegistryKey.ToString">
      <summary>이 키의 문자열 표현을 검색합니다.</summary>
      <exception cref="T:System.ObjectDisposedException">액세스할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <returns>키를 나타내는 문자열입니다. 지정된 키가 잘못되었으면(없으면) <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="P:Microsoft.Win32.RegistryKey.Handle">
      <summary>현재 <see cref="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" /> 개체가 캡슐화하는 레지스트리 키를 나타내는 <see cref="T:Microsoft.Win32.RegistryKey" /> 개체를 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException">레지스트리 키가 닫힌 경우 닫힌 키에 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <exception cref="T:System.IO.IOException">현재 키의 삭제 같은 시스템 오류가 발생했습니다.</exception>
      <exception cref="T:System.Security.SecurityException">사용자는 키를 읽는 데 필요한 권한을 가지고 있지 않습니다.</exception>
      <returns>레지스트리 키에 대한 핸들입니다.</returns>
    </member>
    <member name="P:Microsoft.Win32.RegistryKey.Name">
      <summary>키 이름을 검색합니다.</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <returns>키의 절대(정규화된) 이름입니다.</returns>
    </member>
    <member name="P:Microsoft.Win32.RegistryKey.SubKeyCount">
      <summary>현재 키의 하위 키 개수를 검색합니다.</summary>
      <exception cref="T:System.Security.SecurityException">키에 대한 읽기 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">조작할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <exception cref="T:System.IO.IOException">시스템 오류가 발생한 경우. 예를 들어, 현재 키가 삭제되었습니다.</exception>
      <returns>현재 키의 하위 키 수입니다.</returns>
    </member>
    <member name="P:Microsoft.Win32.RegistryKey.ValueCount">
      <summary>키의 값 개수를 검색합니다.</summary>
      <exception cref="T:System.Security.SecurityException">키에 대한 읽기 권한이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">조작할 <see cref="T:Microsoft.Win32.RegistryKey" />가 닫힌 경우. 닫힌 키는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 레지스트리 권한이 없는 경우</exception>
      <exception cref="T:System.IO.IOException">시스템 오류가 발생한 경우. 예를 들어, 현재 키가 삭제되었습니다.</exception>
      <returns>키에 있는 이름/값 쌍의 수입니다.</returns>
    </member>
    <member name="P:Microsoft.Win32.RegistryKey.View">
      <summary>레지스트리 키를 만드는 데 사용된 뷰를 가져옵니다.</summary>
      <returns>레지스트리 키를 만드는 데 사용된 뷰입니다.  
  
또는 
 뷰를 사용하지 않은 경우 <see cref="F:Microsoft.Win32.RegistryView.Default" />입니다.</returns>
    </member>
    <member name="T:Microsoft.Win32.RegistryKeyPermissionCheck">
      <summary>레지스트리 키를 열고 이름/값 쌍에 액세스하는 경우 보안 검사가 수행되는지 여부를 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryKeyPermissionCheck.Default">
      <summary>레지스트리 키가 부모의 모드를 상속합니다. 부모가 <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree" /> 또는 <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree" /> 모드로 열리지 않았으면 보안 검사는 하위 키나 값에 액세스하려는 경우에 수행됩니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree">
      <summary>보안 검사가 하위 키나 값에 액세스하는 경우에 수행되지 않습니다. 부모가 <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree" /> 또는 <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree" />로 열리지 않았으면 보안 검사는 현재 키를 열려는 경우에 수행됩니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree">
      <summary>보안 검사가 하위 키나 값에 액세스하는 경우에 수행되지 않습니다. 부모가 <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree" />로 열리지 않았으면 보안 검사는 현재 키를 열려는 경우에 수행됩니다.</summary>
    </member>
    <member name="T:Microsoft.Win32.RegistryOptions">
      <summary>레지스트리 키를 만들 때 사용할 옵션을 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryOptions.None">
      <summary>비휘발성 키입니다. 이것이 기본값입니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryOptions.Volatile">
      <summary>휘발성 키입니다. 정보는 메모리에 저장되며 해당 레지스트리 하이브를 언로드하면 유지되지 않습니다.</summary>
    </member>
    <member name="T:Microsoft.Win32.RegistryValueKind">
      <summary>레지스트리에 값을 저장할 때 사용할 데이터 형식을 지정하거나 레지스트리 값의 데이터 형식을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.Binary">
      <summary>모든 형태의 이진 데이터입니다. 이 값은 Windows API 레지스트리 데이터 형식 REG_BINARY와 동일합니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.DWord">
      <summary>32비트 이진수입니다. 이 값은 Windows API 레지스트리 데이터 형식 REG_DWORD와 동일합니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.ExpandString">
      <summary>값이 검색될 때 확장되는 %PATH%와 같은 환경 변수에 대한 확장되지 않는 참조가 포함된 null로 끝나는 문자열입니다. 이 값은 Windows API 레지스트리 데이터 형식 REG_EXPAND_SZ와 동일합니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.MultiString">
      <summary>두 null 문자로 끝나는, null로 끝나는 문자열의 배열입니다. 이 값은 Windows API 레지스트리 데이터 형식 REG_MULTI_SZ와 동일합니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.None">
      <summary>데이터 형식이 없습니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.QWord">
      <summary>64비트 이진수입니다. 이 값은 Windows API 레지스트리 데이터 형식 REG_QWORD와 동일합니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.String">
      <summary>null로 끝나는 문자열입니다. 이 값은 Windows API 레지스트리 데이터 형식 REG_SZ와 동일합니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueKind.Unknown">
      <summary>지원되지 않는 레지스트리 데이터 형식입니다. 예를 들어, Microsoft Windows API 레지스트리 데이터 형식 REG_RESOURCE_LIST는 지원되지 않습니다. <see cref="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)" /> 메서드가 이름/값 쌍을 저장할 때 적절한 레지스트리 데이터 형식을 확인해야 함을 지정하려면 이 값을 사용합니다.</summary>
    </member>
    <member name="T:Microsoft.Win32.RegistryValueOptions">
      <summary>레지스트리 키에서 이름/값 쌍을 검색하는 경우의 선택적 동작을 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueOptions.DoNotExpandEnvironmentNames">
      <summary>
        <see cref="F:Microsoft.Win32.RegistryValueKind.ExpandString" /> 형식의 값이 포함 환경 변수를 확장하지 않고 검색됩니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryValueOptions.None">
      <summary>선택적 동작이 지정되어 있지 않습니다.</summary>
    </member>
    <member name="T:Microsoft.Win32.RegistryView">
      <summary>64비트 운영 체제에서 대상으로 사용할 레지스트리 뷰를 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryView.Default">
      <summary>기본 뷰입니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryView.Registry32">
      <summary>32비트 뷰입니다.</summary>
    </member>
    <member name="F:Microsoft.Win32.RegistryView.Registry64">
      <summary>64비트 뷰입니다.</summary>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle">
      <summary>Windows 레지스트리에 대한 SafeHandle을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeRegistryHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>
        <see cref="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="preexistingHandle">사용할 기존 핸들을 나타내는 개체입니다.</param>
      <param name="ownsHandle">종료 단계 중 핸들을 안정적으로 해제하려면 <see langword="true" />이고, 안정적으로 해제되지 않게 하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="T:System.Security.AccessControl.RegistryAccessRule">
      <summary>사용자 또는 그룹에 대해 허용 또는 거부된 액세스 권한 집합을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)">
      <summary>
        <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> 클래스의 새 인스턴스를 초기화하여 규칙을 적용할 사용자 또는 그룹, 액세스 권한 및 지정된 액세스 권한의 허용 또는 거부를 지정합니다.</summary>
      <param name="identity">규칙을 적용할 사용자나 그룹입니다. 이 값은 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식이거나 <see cref="T:System.Security.Principal.NTAccount" />와 같이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식으로 변환할 수 있는 형식이어야 합니다.</param>
      <param name="registryRights">허용 또는 거부 권한을 나타내는 <see cref="T:System.Security.AccessControl.RegistryRights" /> 값의 비트 조합입니다.</param>
      <param name="type">권한 허용 여부를 나타내는 <see cref="T:System.Security.AccessControl.AccessControlType" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="registryRights" />가 잘못된 값을 지정하는 경우  
  
또는 
 <paramref name="type" />가 잘못된 값을 지정하는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="eventRights" />가 0입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" />의 형식이 <see cref="T:System.Security.Principal.SecurityIdentifier" />도 아니고 <see cref="T:System.Security.Principal.NTAccount" />와 같이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식으로 변환할 수 있는 형식도 아닌 경우</exception>
    </member>
    <member name="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>규칙을 적용할 사용자 또는 그룹, 액세스 권한, 상속 플래그, 전파 플래그 및 지정된 액세스 권한의 허용 여부를 지정하여 <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="identity">규칙을 적용할 사용자나 그룹입니다. 이 값은 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식이거나 <see cref="T:System.Security.Principal.NTAccount" />와 같이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식으로 변환할 수 있는 형식이어야 합니다.</param>
      <param name="registryRights">허용 또는 거부 권한을 지정하는 <see cref="T:System.Security.AccessControl.RegistryRights" /> 값의 비트 조합입니다.</param>
      <param name="inheritanceFlags">액세스 권한이 다른 개체에서 상속되는 방식을 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 플래그의 비트 조합입니다.</param>
      <param name="propagationFlags">액세스 권한이 다른 개체로 전파되는 방식을 지정하는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 플래그의 비트 조합입니다.</param>
      <param name="type">권한 허용 여부를 지정하는 <see cref="T:System.Security.AccessControl.AccessControlType" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="registryRights" />가 잘못된 값을 지정하는 경우  
  
또는 
 <paramref name="type" />가 잘못된 값을 지정하는 경우  
  
또는 
 <paramref name="inheritanceFlags" />가 잘못된 값을 지정하는 경우  
  
또는 
 <paramref name="propagationFlags" />가 잘못된 값을 지정하는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="registryRights" />가 0입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" />의 형식이 <see cref="T:System.Security.Principal.SecurityIdentifier" />도 아니고 <see cref="T:System.Security.Principal.NTAccount" />와 같이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식으로 변환할 수 있는 형식도 아닌 경우</exception>
    </member>
    <member name="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)">
      <summary>
        <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> 클래스의 새 인스턴스를 초기화하여 규칙을 적용할 사용자 또는 그룹의 이름, 액세스 권한 및 지정된 액세스 권한의 허용 또는 거부 여부를 지정합니다.</summary>
      <param name="identity">규칙을 적용할 사용자나 그룹의 이름입니다.</param>
      <param name="registryRights">허용 또는 거부 권한을 나타내는 <see cref="T:System.Security.AccessControl.RegistryRights" /> 값의 비트 조합입니다.</param>
      <param name="type">권한 허용 여부를 나타내는 <see cref="T:System.Security.AccessControl.AccessControlType" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="registryRights" />가 잘못된 값을 지정하는 경우  
  
또는 
 <paramref name="type" />가 잘못된 값을 지정하는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="registryRights" />가 0입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="identity" />이 빈 문자열입니다.  
  
또는 
 <paramref name="identity" />이 512자보다 깁니다.</exception>
    </member>
    <member name="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>
        <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> 클래스의 새 인스턴스를 초기화하여 규칙을 적용할 사용자 또는 그룹의 이름, 액세스 권한, 상속 플래그, 전파 플래그 및 지정된 액세스 권한의 허용 또는 거부 여부를 지정합니다.</summary>
      <param name="identity">규칙을 적용할 사용자나 그룹의 이름입니다.</param>
      <param name="registryRights">허용 또는 거부 권한을 나타내는 <see cref="T:System.Security.AccessControl.RegistryRights" /> 값의 비트 조합입니다.</param>
      <param name="inheritanceFlags">액세스 권한이 다른 개체에서 상속되는 방식을 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 플래그의 비트 조합입니다.</param>
      <param name="propagationFlags">액세스 권한이 다른 개체로 전파되는 방식을 지정하는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 플래그의 비트 조합입니다.</param>
      <param name="type">권한 허용 여부를 지정하는 <see cref="T:System.Security.AccessControl.AccessControlType" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="registryRights" />가 잘못된 값을 지정하는 경우  
  
또는 
 <paramref name="type" />가 잘못된 값을 지정하는 경우  
  
또는 
 <paramref name="inheritanceFlags" />가 잘못된 값을 지정하는 경우  
  
또는 
 <paramref name="propagationFlags" />가 잘못된 값을 지정하는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" />가 0입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="identity" />이 빈 문자열입니다.  
  
또는 
 <paramref name="identity" />이 512자보다 깁니다.</exception>
    </member>
    <member name="P:System.Security.AccessControl.RegistryAccessRule.RegistryRights">
      <summary>액세스 규칙에 의해 허용 또는 거부된 권한을 가져옵니다.</summary>
      <returns>액세스 규칙에 의해 허용되거나 거부된 권한을 나타내는 <see cref="T:System.Security.AccessControl.RegistryRights" /> 값의 비트 조합입니다.</returns>
    </member>
    <member name="T:System.Security.AccessControl.RegistryAuditRule">
      <summary>사용자 또는 그룹에 대해 감사할 액세스 권한 집합을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>
        <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> 클래스의 새 인스턴스를 초기화하여 감사할 사용자 또는 그룹, 감사 권한, 상속 고려 여부 및 성공, 실패 또는 두 가지 모두에 대한 감사 여부를 지정합니다.</summary>
      <param name="identity">규칙을 적용할 사용자나 그룹입니다. 이 값은 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식이거나 <see cref="T:System.Security.Principal.NTAccount" />와 같이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식으로 변환할 수 있는 형식이어야 합니다.</param>
      <param name="registryRights">감사할 액세스 종류를 지정하는 <see cref="T:System.Security.AccessControl.RegistryRights" /> 값의 비트 조합입니다.</param>
      <param name="inheritanceFlags">현재 키의 하위 키에 감사 규칙을 적용할지 여부를 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 값의 비트 조합입니다.</param>
      <param name="propagationFlags">현재 키의 하위 키에 상속된 감사 규칙을 전파하는 방법에 영향을 주는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 값의 비트 조합입니다.</param>
      <param name="flags">성공 또는 실패를 감사할지 아니면 둘 다 감사할지를 지정하는 <see cref="T:System.Security.AccessControl.AuditFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" />가 잘못된 값을 지정하는 경우  
  
또는 
 <paramref name="flags" />가 잘못된 값을 지정하는 경우  
  
또는 
 <paramref name="inheritanceFlags" />가 잘못된 값을 지정하는 경우  
  
또는 
 <paramref name="propagationFlags" />가 잘못된 값을 지정하는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="registryRights" />가 0입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" />의 형식이 <see cref="T:System.Security.Principal.SecurityIdentifier" />도 아니고 <see cref="T:System.Security.Principal.NTAccount" />와 같이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식으로 변환할 수 있는 형식도 아닌 경우</exception>
    </member>
    <member name="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>
        <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> 클래스의 새 인스턴스를 초기화하여 감사할 사용자 또는 그룹의 이름, 감사 권한, 상속 고려 여부 및 성공, 실패 또는 두 가지 모두에 대한 감사 여부를 지정합니다.</summary>
      <param name="identity">규칙을 적용할 사용자나 그룹의 이름입니다.</param>
      <param name="registryRights">감사할 액세스 종류를 지정하는 <see cref="T:System.Security.AccessControl.RegistryRights" /> 값의 비트 조합입니다.</param>
      <param name="inheritanceFlags">현재 키의 하위 키에 감사 규칙을 적용할지 여부를 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 플래그의 조합입니다.</param>
      <param name="propagationFlags">현재 키의 하위 키에 상속된 감사 규칙을 전파하는 방법에 영향을 주는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 플래그의 조합입니다.</param>
      <param name="flags">성공 또는 실패를 감사할지 아니면 둘 다 감사할지를 지정하는 <see cref="T:System.Security.AccessControl.AuditFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" />가 잘못된 값을 지정하는 경우  
  
또는 
 <paramref name="flags" />가 잘못된 값을 지정하는 경우  
  
또는 
 <paramref name="inheritanceFlags" />가 잘못된 값을 지정하는 경우  
  
또는 
 <paramref name="propagationFlags" />가 잘못된 값을 지정하는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="registryRights" />가 0입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="identity" />이 빈 문자열입니다.  
  
또는 
 <paramref name="identity" />이 512자보다 깁니다.</exception>
    </member>
    <member name="P:System.Security.AccessControl.RegistryAuditRule.RegistryRights">
      <summary>감사 규칙의 영향을 받는 액세스 권한을 가져옵니다.</summary>
      <returns>감사 규칙의 영향을 받는 권한을 나타내는 <see cref="T:System.Security.AccessControl.RegistryRights" /> 값의 비트 조합입니다.</returns>
    </member>
    <member name="T:System.Security.AccessControl.RegistryRights">
      <summary>레지스트리 개체에 적용할 수 있는 액세스 제어 권한을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.AccessControl.RegistryRights.ChangePermissions">
      <summary>레지스트리 키와 관련된 액세스 규칙 및 감사 규칙을 변경할 권한입니다.</summary>
    </member>
    <member name="F:System.Security.AccessControl.RegistryRights.CreateLink">
      <summary>시스템에서 사용하도록 예약되었습니다.</summary>
    </member>
    <member name="F:System.Security.AccessControl.RegistryRights.CreateSubKey">
      <summary>레지스트리 키의 하위 키를 만들 권한입니다.</summary>
    </member>
    <member name="F:System.Security.AccessControl.RegistryRights.Delete">
      <summary>레지스트리 키를 삭제할 권한입니다.</summary>
    </member>
    <member name="F:System.Security.AccessControl.RegistryRights.EnumerateSubKeys">
      <summary>레지스트리 키의 하위 키를 나열할 권한입니다.</summary>
    </member>
    <member name="F:System.Security.AccessControl.RegistryRights.ExecuteKey">
      <summary>
        <see cref="F:System.Security.AccessControl.RegistryRights.ReadKey" />와 동일합니다.</summary>
    </member>
    <member name="F:System.Security.AccessControl.RegistryRights.FullControl">
      <summary>레지스트리 키에 대한 모든 권한을 실행하고 해당 액세스 규칙 및 감사 규칙을 수정할 권한입니다.</summary>
    </member>
    <member name="F:System.Security.AccessControl.RegistryRights.Notify">
      <summary>레지스트리 키에 대한 변경 알림을 요청할 권한입니다.</summary>
    </member>
    <member name="F:System.Security.AccessControl.RegistryRights.QueryValues">
      <summary>레지스트리 키의 이름/값 쌍을 쿼리할 권한입니다.</summary>
    </member>
    <member name="F:System.Security.AccessControl.RegistryRights.ReadKey">
      <summary>레지스트리 키의 이름/값 쌍을 쿼리하고, 변경 알림을 요청하고, 하위 키를 열거하고, 해당 액세스 규칙과 감사 규칙을 읽을 권한입니다.</summary>
    </member>
    <member name="F:System.Security.AccessControl.RegistryRights.ReadPermissions">
      <summary>레지스트리 키에 대한 액세스 규칙 및 감사 규칙을 열고 복사할 권한입니다.</summary>
    </member>
    <member name="F:System.Security.AccessControl.RegistryRights.SetValue">
      <summary>레지스트리 키의 이름/값 쌍을 만들거나 삭제하거나 설정할 권한입니다.</summary>
    </member>
    <member name="F:System.Security.AccessControl.RegistryRights.TakeOwnership">
      <summary>레지스트리 키의 소유자를 변경할 권한입니다.</summary>
    </member>
    <member name="F:System.Security.AccessControl.RegistryRights.WriteKey">
      <summary>레지스트리 키의 이름/값 쌍을 만들거나 삭제하거나 설정하고, 하위 키를 만들거나 삭제하고, 변경 알림을 요청하고, 하위 키를 열거하고, 해당 액세스 규칙과 감사 규칙을 읽을 권한입니다.</summary>
    </member>
    <member name="T:System.Security.AccessControl.RegistrySecurity">
      <summary>레지스트리 키에 대한 Windows 액세스 제어 보안을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.AccessControl.RegistrySecurity.#ctor">
      <summary>기본값을 사용하여 <see cref="T:System.Security.AccessControl.RegistrySecurity" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>지정된 액세스 권한, 액세스 제어 및 플래그로 지정한 사용자의 새 액세스 제어 규칙을 만듭니다.</summary>
      <param name="identityReference">규칙을 적용할 사용자 또는 그룹을 식별하는 <see cref="T:System.Security.Principal.IdentityReference" />입니다.</param>
      <param name="accessMask">정수로 캐스팅된 허용하거나 거부할 액세스 권한을 지정하는 <see cref="T:System.Security.AccessControl.RegistryRights" /> 값의 비트 조합입니다.</param>
      <param name="isInherited">규칙의 상속 여부를 지정하는 부울 값입니다.</param>
      <param name="inheritanceFlags">규칙이 하위 키에 상속되는 방식을 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 값의 비트 조합입니다.</param>
      <param name="propagationFlags">규칙이 하위 키에 상속되는 방식을 수정하는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 값의 비트 조합입니다. <paramref name="inheritanceFlags" />의 값이 <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />이면 의미가 없습니다.</param>
      <param name="type">권한 허용 여부를 지정하는 <see cref="T:System.Security.AccessControl.AccessControlType" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> 또는 <paramref name="type" />에 잘못된 값을 지정하는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="accessMask" />가 0입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" />의 형식이 <see cref="T:System.Security.Principal.SecurityIdentifier" />도 아니고 <see cref="T:System.Security.Principal.NTAccount" />와 같이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식으로 변환할 수 있는 형식도 아닌 경우</exception>
      <returns>지정한 사용자의 지정한 권한을 나타내는 <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
      <summary>새 규칙을 병합할 수 있는 일치하는 액세스 제어를 검색합니다. 아무 것도 발견되지 않으면 새 규칙을 추가합니다.</summary>
      <param name="rule">추가할 액세스 제어 규칙입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)">
      <summary>새 규칙을 병합할 수 있는 감사 규칙을 검색합니다. 아무 것도 발견되지 않으면 새 규칙을 추가합니다.</summary>
      <param name="rule">추가할 감사 규칙입니다. 이 규칙에서 지정하는 사용자가 검색을 결정합니다.</param>
    </member>
    <member name="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>새 감사 규칙을 만들어 규칙을 적용할 사용자, 감사할 액세스 권한, 규칙의 상속과 전파 및 감사 규칙을 트리거할 결과를 지정합니다.</summary>
      <param name="identityReference">규칙을 적용할 사용자 또는 그룹을 식별하는 <see cref="T:System.Security.Principal.IdentityReference" />입니다.</param>
      <param name="accessMask">정수로 캐스팅된 감사할 액세스 권한을 지정하는 <see cref="T:System.Security.AccessControl.RegistryRights" /> 값의 비트 조합입니다.</param>
      <param name="isInherited">규칙의 상속 여부를 지정하는 부울 값입니다.</param>
      <param name="inheritanceFlags">규칙이 하위 키에 상속되는 방식을 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 값의 비트 조합입니다.</param>
      <param name="propagationFlags">규칙이 하위 키에 상속되는 방식을 수정하는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 값의 비트 조합입니다. <paramref name="inheritanceFlags" />의 값이 <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />이면 의미가 없습니다.</param>
      <param name="flags">성공 또는 실패를 감사할지 아니면 둘 다 감사할지를 지정하는 <see cref="T:System.Security.AccessControl.AuditFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> 또는 <paramref name="flags" />에 잘못된 값을 지정하는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="accessMask" />가 0입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" />의 형식이 <see cref="T:System.Security.Principal.SecurityIdentifier" />도 아니고 <see cref="T:System.Security.Principal.NTAccount" />와 같이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식으로 변환할 수 있는 형식도 아닌 경우</exception>
      <returns>지정한 플래그를 사용하여 지정한 사용자의 지정한 감사 규칙을 나타내는 <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> 개체입니다. 메서드의 반환 형식은 기본 클래스 <see cref="T:System.Security.AccessControl.AuditRule" />이지만 반환 값은 파생 클래스로 안전하게 캐스팅할 수 있습니다.</returns>
    </member>
    <member name="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
      <summary>지정한 액세스 규칙과 사용자 및 <see cref="T:System.Security.AccessControl.AccessControlType" />(허용 또는 거부)이 같고 상속 및 전파 플래그가 호환되는 액세스 제어 규칙을 검색합니다. 그러한 규칙이 있으면 지정한 액세스 규칙에 포함된 권한이 규칙에서 제거됩니다.</summary>
      <param name="rule">검색할 사용자 및 <see cref="T:System.Security.AccessControl.RegistryAccessRule" />을 비롯하여 일치하는 규칙(있다면)과 호환되어야 하는 상속 및 전파 플래그 집합을 지정하는 <see cref="T:System.Security.AccessControl.AccessControlType" />입니다. 발견된 경우 호환되는 규칙에서 제거할 권한을 지정합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" />이(가) <see langword="null" />인 경우</exception>
      <returns>호환 가능한 규칙이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
      <summary>지정한 규칙과 사용자 및 <see cref="T:System.Security.AccessControl.AccessControlType" />(허용 또는 거부)이 같은 모든 액세스 제어 규칙을 검색하여 제거합니다.</summary>
      <param name="rule">검색할 사용자 및 <see cref="T:System.Security.AccessControl.RegistryAccessRule" />을 지정하는 <see cref="T:System.Security.AccessControl.AccessControlType" />입니다. 이 규칙에서 지정한 모든 권한, 상속 플래그 또는 전파 플래그는 무시됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
      <summary>지정한 규칙과 정확히 일치하는 액세스 제어 규칙을 검색하여 제거합니다.</summary>
      <param name="rule">제거할 <see cref="T:System.Security.AccessControl.RegistryAccessRule" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)">
      <summary>지정한 규칙과 사용자가 같고 상속 및 전파 플래그가 호환되는 감사 제어 규칙을 검색합니다. 호환되는 규칙이 있으면 지정한 규칙에 포함된 권한이 규칙에서 제거됩니다.</summary>
      <param name="rule">검색할 사용자 및 일치하는 규칙(있다면)이 호환되어야 하는 상속 및 전파 플래그 집합을 지정하는 <see cref="T:System.Security.AccessControl.RegistryAuditRule" />입니다. 발견된 경우 호환되는 규칙에서 제거할 권한을 지정합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" />이(가) <see langword="null" />인 경우</exception>
      <returns>호환 가능한 규칙이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleAll(System.Security.AccessControl.RegistryAuditRule)">
      <summary>지정한 규칙과 같은 사용자를 가진 모든 감사 규칙을 검색하고 해당 규칙이 있을 경우 제거합니다.</summary>
      <param name="rule">검색할 사용자를 지정하는 <see cref="T:System.Security.AccessControl.RegistryAuditRule" />입니다. 이 규칙에서 지정한 모든 권한, 상속 플래그 또는 전파 플래그는 무시됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.RegistryAuditRule)">
      <summary>지정한 규칙과 정확히 일치하는 감사 규칙을 검색하여 제거합니다.</summary>
      <param name="rule">제거할 <see cref="T:System.Security.AccessControl.RegistryAuditRule" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
      <summary>
        <see cref="T:System.Security.AccessControl.AccessControlType" />과 상관없이 지정한 규칙과 사용자가 같은 모든 액세스 제어 규칙을 제거한 다음 지정한 규칙을 추가합니다.</summary>
      <param name="rule">추가할 <see cref="T:System.Security.AccessControl.RegistryAccessRule" />입니다. 이 규칙에서 지정하는 사용자가 이 규칙이 추가되기 전에 제거할 규칙을 결정합니다.</param>
    </member>
    <member name="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
      <summary>지정된 규칙과 사용자 및 <see cref="T:System.Security.AccessControl.AccessControlType" />(허용 또는 거부)이 같은 모든 액세스 제어 규칙을 제거한 다음 지정한 규칙을 추가합니다.</summary>
      <param name="rule">추가할 <see cref="T:System.Security.AccessControl.RegistryAccessRule" />입니다. 이 규칙의 사용자 및 <see cref="T:System.Security.AccessControl.AccessControlType" />은 이 규칙이 추가되기 전에 제거할 규칙을 결정합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.AccessControl.RegistrySecurity.SetAuditRule(System.Security.AccessControl.RegistryAuditRule)">
      <summary>
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 과 상관없이 지정한 규칙과 사용자가 같은 모든 감사 규칙을 제거한 다음 지정한 규칙을 추가합니다.</summary>
      <param name="rule">추가할 <see cref="T:System.Security.AccessControl.RegistryAuditRule" />입니다. 이 규칙에서 지정하는 사용자가 이 규칙이 추가되기 전에 제거할 규칙을 결정합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Security.AccessControl.RegistrySecurity.AccessRightType">
      <summary>
        <see cref="T:System.Security.AccessControl.RegistrySecurity" /> 클래스가 액세스 권한을 나타내는 데 사용하는 열거형을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Type" /> 열거형을 나타내는 <see cref="T:System.Security.AccessControl.RegistryRights" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.AccessControl.RegistrySecurity.AccessRuleType">
      <summary>
        <see cref="T:System.Security.AccessControl.RegistrySecurity" /> 클래스가 액세스 규칙을 나타내는 데 사용하는 형식을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Type" /> 클래스를 나타내는 <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.AccessControl.RegistrySecurity.AuditRuleType">
      <summary>
        <see cref="T:System.Security.AccessControl.RegistrySecurity" /> 클래스에서 감사 규칙을 나타내는 데 사용하는 형식을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Type" /> 클래스를 나타내는 <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> 개체입니다.</returns>
    </member>
  </members>
</doc>