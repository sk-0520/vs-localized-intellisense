<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xaml</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute">
      <summary>Tipos notates para relatório herdado de características de extensão de marcação XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute" />.</summary>
      <param name="type">O tipo de retorno que esse atributo relata.</param>
    </member>
    <member name="P:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.Type">
      <summary>Obtém ou define o tipo de retorno que esse atributo relata.</summary>
      <returns>O tipo de retorno que esse atributo relata.</returns>
    </member>
    <member name="T:System.Windows.Markup.AmbientAttribute">
      <summary>Especifica que uma propriedade ou tipo deve ser tratado como ambiente. O conceito de ambiente está relacionado a como os processadores XAML determinam os proprietários do tipo dos membros.</summary>
    </member>
    <member name="M:System.Windows.Markup.AmbientAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.ArrayExtension">
      <summary>Implementa o suporte de <see langword="x:Array" /> para serviços de XAML do .NET Framework.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ArrayExtension" />. Isso cria uma matriz vazia.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Array)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ArrayExtension" /> com base na matriz bruta fornecida.</summary>
      <param name="elements">O conteúdo da matriz que preenche a matriz criada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ArrayExtension" /> e inicializa o tipo da matriz.</summary>
      <param name="arrayType">O tipo de objeto da nova matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="arrayType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddChild(System.Object)">
      <summary>Anexa o objeto fornecido ao final da matriz.</summary>
      <param name="value">O objeto a ser adicionado ao final da matriz.</param>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddText(System.String)">
      <summary>Adiciona um nó de texto como um novo item de matriz.</summary>
      <param name="text">O texto a ser adicionado ao final da matriz.</param>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)">
      <summary>Retorna uma matriz dimensionada para o número de objetos fornecidos nos valores de <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</summary>
      <param name="serviceProvider">Um objeto que pode fornecer serviços para a extensão de marcação.</param>
      <exception cref="T:System.InvalidOperationException">Processou uma matriz que não forneceu um <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> válido.  
  
- ou - 
Há tipos incompatíveis entre o <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> declarado da matriz e um ou mais dos seus valores <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</exception>
      <returns>A matriz criada ou nula.</returns>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Items">
      <summary>Obtém o conteúdo da matriz. Pode ser definido na linguagem XAML por meio da sintaxe de coleção XAML.</summary>
      <returns>O conteúdo da matriz.</returns>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Type">
      <summary>Obtém ou define o tipo de matriz a ser criado ao chamar <see cref="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)" />.</summary>
      <returns>O tipo da matriz.</returns>
    </member>
    <member name="T:System.Windows.Markup.ConstructorArgumentAttribute">
      <summary>Especifica que um objeto pode ser inicializado usando uma sintaxe de construtor que não seja sem parâmetros e que uma propriedade do nome especificado fornece informações de construção.  Essas informações são principalmente para serialização XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" />.</summary>
      <param name="argumentName">O nome do construtor que inicializará a propriedade associada.</param>
    </member>
    <member name="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName">
      <summary>Obtém o parâmetro de nome do construtor que inicializará a propriedade associada.</summary>
      <returns>O nome do construtor. Supondo que o backup do CLR, isso corresponde ao <see cref="P:System.Reflection.ParameterInfo.Name" /> do parâmetro de construtor relevante.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentPropertyAttribute">
      <summary>Indica qual propriedade de um tipo é a propriedade de conteúdo XAML. Um processador XAML usa essas informações durante o processamento de elementos filho XAML de representações XAML do tipo atribuído.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />, usando o nome especificado.</summary>
      <param name="name">O nome da propriedade para a propriedade que é a propriedade de conteúdo.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentPropertyAttribute.Name">
      <summary>Obtém o nome da propriedade que é a propriedade de conteúdo.</summary>
      <returns>O nome da propriedade que é a propriedade de conteúdo.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentWrapperAttribute">
      <summary>Especifica um ou mais tipos no tipo de coleção associado que será usado para encapsular conteúdo externo.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ContentWrapperAttribute" />.</summary>
      <param name="contentWrapper">O <see cref="T:System.Type" /> que é declarado como um wrapper de conteúdo para o tipo de coleção.</param>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> especificado é equivalente a esse <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> comparando as propriedades <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" />.</summary>
      <param name="obj">O <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> de comparação.</param>
      <returns>
        <see langword="true" /> se as propriedades <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.GetHashCode">
      <summary>Obtém um código hash para essa instância.</summary>
      <returns>Um código hash inteiro</returns>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper">
      <summary>Obtém o tipo que é declarado como um wrapper de conteúdo para o tipo de coleção associado a esse atributo.</summary>
      <returns>O tipo declarado como um wrapper de conteúdo para o tipo de coleção.</returns>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.TypeId">
      <summary>Obtém um identificador exclusivo para este atributo.</summary>
      <returns>Um identificador exclusivo para o atributo.</returns>
    </member>
    <member name="T:System.Windows.Markup.DateTimeValueSerializer">
      <summary>Converte instâncias de <see cref="T:System.String" /> de e para instâncias de <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.DateTimeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se a <see cref="T:System.String" /> especificada pode ser convertida em uma instância de <see cref="T:System.DateTime" />.</summary>
      <param name="value">A cadeia de caracteres a ser avaliada para conversão.</param>
      <param name="context">Informações de contexto que são usadas para conversão.</param>
      <returns>
        <see langword="true" /> se o valor puder ser convertido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina se o objeto especificado pode ser convertido em um <see cref="T:System.String" />.</summary>
      <param name="value">O objeto a ser avaliado para conversão.</param>
      <param name="context">Informações de contexto que são usadas para conversão.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> puder ser convertido em um <see cref="T:System.String" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte um <see cref="T:System.String" /> em um <see cref="T:System.DateTime" />.</summary>
      <param name="value">A cadeia de caracteres a ser convertida em um <see cref="T:System.DateTime" />.</param>
      <param name="context">Informações de contexto que são usadas para conversão.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <returns>Uma nova instância de <see cref="T:System.DateTime" /> com base no <paramref name="value" /> fornecido.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converte uma instância de <see cref="T:System.DateTime" /> em um <see cref="T:System.String" />.</summary>
      <param name="value">O objeto a ser convertido em uma cadeia de caracteres.</param>
      <param name="context">Informações de contexto que são usadas para conversão.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> não é um <see cref="T:System.DateTime" /> ou é <see langword="null" />.</exception>
      <returns>Uma representação de cadeia de caracteres do <see cref="T:System.DateTime" /> especificado.</returns>
    </member>
    <member name="T:System.Windows.Markup.DependsOnAttribute">
      <summary>Indica que a propriedade atribuída é dependente do valor de outra propriedade.</summary>
    </member>
    <member name="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <param name="name">A propriedade da qual propriedade associada a este <see cref="T:System.Windows.Markup.DependsOnAttribute" /> depende.</param>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.Name">
      <summary>Obtém o nome da propriedade relacionada declarada neste <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns>O nome da propriedade relacionada.</returns>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.TypeId">
      <summary>Obtém um identificador exclusivo para este <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns>O identificador exclusivo.</returns>
    </member>
    <member name="T:System.Windows.Markup.DictionaryKeyPropertyAttribute">
      <summary>Especifica uma propriedade da classe associada que fornece o valor da chave implícita. Chaves implícitas são usadas para chaves em vez de atributos <see langword="x:Key" /> explícitos definidos em XAML para um item em coleções <see cref="T:System.Collections.IDictionary" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DictionaryKeyPropertyAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.DictionaryKeyPropertyAttribute" />.</summary>
      <param name="name">O nome da propriedade que fornece o valor da chave implícita.</param>
    </member>
    <member name="P:System.Windows.Markup.DictionaryKeyPropertyAttribute.Name">
      <summary>Obtém nome da propriedade que fornece o valor da chave implícita.</summary>
      <returns>O nome da propriedade que fornece o valor da chave implícita.</returns>
    </member>
    <member name="T:System.Windows.Markup.IComponentConnector">
      <summary>Dá suporte de marcação, compilação e ferramentas para elementos XAML nomeados e para anexar manipuladores de eventos a eles.</summary>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
      <summary>Anexa eventos e nomes ao conteúdo compilado.</summary>
      <param name="connectionId">Um token de identificador para distinguir as chamadas.</param>
      <param name="target">O destino a que se conectar eventos e nomes.</param>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
      <summary>Carrega a página compilada de um componente.</summary>
    </member>
    <member name="T:System.Windows.Markup.INameScope">
      <summary>Define um contrato de como nomes de elementos devem ser acessados dentro de um determinado namescope XAML e como impor exclusividade dos nomes dentro desse namescope XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.INameScope.FindName(System.String)">
      <summary>Retorna um objeto que tem o nome de identificação fornecido.</summary>
      <param name="name">O identificador de nome para o objeto que está sendo solicitado.</param>
      <returns>O objeto, se encontrado. Retornará <see langword="null" /> se nenhum objeto com esse nome tiver sido encontrado.</returns>
    </member>
    <member name="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
      <summary>Registra o nome fornecido para o namescope XAML atual.</summary>
      <param name="name">O nome para registrar.</param>
      <param name="scopedElement">O elemento específico ao qual o <paramref name="name" /> fornecido se refere.</param>
    </member>
    <member name="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
      <summary>Cancela o registro do nome fornecido para o namescope XAML atual.</summary>
      <param name="name">O nome para cancelar o registro.</param>
    </member>
    <member name="T:System.Windows.Markup.INameScopeDictionary">
      <summary>Unifica o suporte a dicionário, coleção e enumerável, que são úteis para expor um dicionário de nomes em um namescope XAML.</summary>
    </member>
    <member name="T:System.Windows.Markup.IProvideValueTarget">
      <summary>Representa um serviço que relata os relacionamentos situacionais propriedade/objeto para avaliação da extensão de marcação.</summary>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
      <summary>Obtém o objeto de destino que está sendo relatado.</summary>
      <returns>O objeto de destino que está sendo relatado.</returns>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
      <summary>Obtém um identificador para a propriedade de destino está sendo relatada.</summary>
      <returns>Um identificador para a propriedade de destino que está sendo relatada.</returns>
    </member>
    <member name="T:System.Windows.Markup.IQueryAmbient">
      <summary>Consulta se uma propriedade especificada deve ser tratada como ambiente no escopo atual.</summary>
    </member>
    <member name="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)">
      <summary>Consulta se uma propriedade nomeada especificada pode ser considerada ambiente no escopo atual.</summary>
      <param name="propertyName">O nome da propriedade a ser verificada quanto ao estado do ambiente.</param>
      <returns>
        <see langword="true" /> se a propriedade solicitada puder ser considerada ambiente; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.IUriContext">
      <summary>Representa um serviço que pode usar o contexto do aplicativo para resolver um URI relativo fornecido para um URI absoluto.</summary>
    </member>
    <member name="P:System.Windows.Markup.IUriContext.BaseUri">
      <summary>Obtém ou define o URI base do contexto do aplicativo atual.</summary>
      <returns>O URI de base do contexto do aplicativo.</returns>
    </member>
    <member name="T:System.Windows.Markup.IValueSerializerContext">
      <summary>Define um contexto que é fornecido para um <see cref="T:System.Windows.Markup.ValueSerializer" />. O contexto pode ser usado para habilitar casos especiais de serialização ou modos diferentes de serialização.</summary>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary>Obtém um <see cref="T:System.Windows.Markup.ValueSerializer" /> para o descritor de propriedade determinado.</summary>
      <param name="descriptor">O descritor da propriedade que está sendo convertida.</param>
      <returns>Um <see cref="T:System.Windows.Markup.ValueSerializer" /> capaz de serializar a propriedade especificada.</returns>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.Type)">
      <summary>Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> associado ao tipo especificado.</summary>
      <param name="type">O tipo do valor que está sendo convertido.</param>
      <returns>Um <see cref="T:System.Windows.Markup.ValueSerializer" /> capaz de serializar o tipo especificado.</returns>
    </member>
    <member name="T:System.Windows.Markup.IXamlTypeResolver">
      <summary>Representa um serviço que resolve de elementos nomeados na marcação XAML no tipo adequado do CLR.</summary>
    </member>
    <member name="M:System.Windows.Markup.IXamlTypeResolver.Resolve(System.String)">
      <summary>Resolve um tipo XAML nomeado no <see cref="T:System.Type" /> de CLR correspondente.</summary>
      <param name="qualifiedTypeName">O nome do tipo XAML a ser resolvido. O nome do tipo é opcionalmente qualificado pelo prefixo para um namespace de XML. Caso contrário, o namespace de XML padrão atual será assumido.</param>
      <returns>O <see cref="T:System.Type" /> no qual <paramref name="qualifiedTypeName" /> é resolvido</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtension">
      <summary>Fornece uma classe base para as implementações de extensão de marcação XAML que podem ter o suporte pelos serviços XAML do .NET Framework e outros leitores e gravadores de XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.#ctor">
      <summary>Inicializa uma nova instância de uma classe derivada de <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
      <summary>Quando implementada em uma classe derivada, retorna um objeto que é fornecido como o valor da propriedade de destino para esta extensão de marcação.</summary>
      <param name="serviceProvider">Um auxiliar de provedor de serviço que pode fornecer serviços para a extensão de marcação.</param>
      <returns>O valor do objeto para definir na propriedade na qual a extensão é aplicada.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute">
      <summary>Relata os caracteres de colchete que uma extensão de marcação pode retornar.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.#ctor(System.Char,System.Char)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute" /> usando os caracteres fornecidos.</summary>
      <param name="openingBracket">Um <see cref="T:System.Char" /> que define o caractere de colchete de abertura.</param>
      <param name="closingBracket">Um <see cref="T:System.Char" /> que define o caractere de colchete de fechamento.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.ClosingBracket">
      <summary>Especifica o caractere a ser usado como o delimitador de fechamento em um <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns>Um <see cref="T:System.Char" /> que representa o caractere.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.OpeningBracket">
      <summary>Especifica o caractere a ser usado como o delimitador de abertura em um <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns>Um <see cref="T:System.Char" /> que representa o caractere.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
      <summary>Relata o tipo que pode ser retornado por uma extensão de marcação.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> usando o <see cref="T:System.Type" /> fornecido.</summary>
      <param name="returnType">O tipo de retorno que esse atributo relata.</param>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
      <summary>Preterido; não use.</summary>
      <param name="returnType">O tipo de retorno que esse Atributo do .NET Framework relata.</param>
      <param name="expressionType">Preterido; não use.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
      <summary>Preterido; não use.</summary>
      <returns>Preterido; não use.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ReturnType">
      <summary>O tipo de retorno <see cref="T:System.Windows.Markup.MarkupExtension" /> que esse Atributo do .NET Framework relata.</summary>
      <returns>O tipo de retorno de tipo seguro da <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> implementação específica da extensão de marcação em que o <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> Atributo do .NET Framework é aplicado.</returns>
    </member>
    <member name="T:System.Windows.Markup.MemberDefinition">
      <summary>Fornece a classe base que é usada para uma técnica de marcação de definição de membros de uma classe em XAML declarativo.</summary>
    </member>
    <member name="M:System.Windows.Markup.MemberDefinition.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.MemberDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.MemberDefinition.Name">
      <summary>Quando implementado em uma classe derivada, obtém ou define o nome do membro a ser definido.</summary>
      <returns>O nome do membro a ser definido.</returns>
    </member>
    <member name="T:System.Windows.Markup.NameReferenceConverter">
      <summary>Fornece a conversão de tipo para converter um nome de cadeia de caracteres em uma referência de objeto para o objeto com esse nome ou para retornar o nome de um objeto de gráfico do objeto.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.NameReferenceConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Retorna se este conversor pode converter um objeto de um tipo em um outro objeto.</summary>
      <param name="context">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</param>
      <param name="sourceType">Um <see cref="T:System.Type" /> que representa o tipo do qual você deseja converter.</param>
      <returns>
        <see langword="true" /> se esse conversor puder realizar a conversão; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Retorna um valor que indica se o conversor pode converter um objeto no tipo de destino especificado.</summary>
      <param name="context">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</param>
      <param name="destinationType">O tipo para o qual converter.</param>
      <returns>
        <see langword="true" /> se o conversor puder realizar a conversão; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte o objeto fornecido em outro objeto usando as informações de contexto e cultura especificadas.</summary>
      <param name="context">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</param>
      <param name="culture">O objeto <see cref="T:System.Globalization.CultureInfo" /> a ser usado como a cultura atual.</param>
      <param name="value">A cadeia de caracteres do nome de referência a converter.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> é uma cadeia de caracteres nula ou uma cadeia de caracteres vazia.  
  
- ou - 
 O serviço <see cref="T:System.Xaml.IXamlNameResolver" /> está faltando ou é inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> é <see langword="null" />.</exception>
      <returns>O objeto retornado, que é potencialmente qualquer objeto mapeado por tipo nos assemblies de apoio relevantes e capaz de ser declarado em XAML com uma referência de nome XAML.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte um objeto no tipo especificado. Isso serve para retornar nomes de referência XAML para objetos em um gráfico de objeto.</summary>
      <param name="context">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</param>
      <param name="culture">O objeto <see cref="T:System.Globalization.CultureInfo" /> a ser usado como a cultura atual.</param>
      <param name="value">O objeto para o qual recuperar o nome de referência.</param>
      <param name="destinationType">O tipo a ser retornado. Você sempre deve fazer referência ao tipo <see cref="T:System.String" />.</param>
      <exception cref="T:System.InvalidOperationException">O serviço <see cref="T:System.Xaml.IXamlNameProvider" /> está faltando ou é inválido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> é <see langword="null" />.</exception>
      <returns>O nome de referência do objeto <paramref name="value" /> da entrada.</returns>
    </member>
    <member name="T:System.Windows.Markup.NameScopePropertyAttribute">
      <summary>Especifica uma propriedade da classe associada que fornece o valor do namescope XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> com o nome especificado.</summary>
      <param name="name">O nome da propriedade no tipo atribuído que fornece o namescope XAML.</param>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> com o nome e o tipo especificados.</summary>
      <param name="name">O nome do membro anexável que fornece o escopo do nome XAML.</param>
      <param name="type">O tipo de proprietário do membro anexável que fornece o escopo do nome XAML.</param>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Name">
      <summary>Obtém o nome da propriedade que fornece o namescope XAML.</summary>
      <returns>Um valor de cadeia de caracteres que é o nome da propriedade que fornece o namescope XAML.</returns>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Type">
      <summary>Obtém o tipo de proprietário da propriedade anexada que fornece o suporte de namescope XAML.</summary>
      <returns>Um <see cref="T:System.Type" /> valor que é o tipo de proprietário da propriedade anexada que fornece o suporte ao namescope do XAML, ou <see langword="null" /> .</returns>
    </member>
    <member name="T:System.Windows.Markup.NullExtension">
      <summary>Implementa uma extensão de marcação XAML para retornar um objeto nulo, que você pode usar para definir explicitamente os valores como nulos em XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.NullExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)">
      <summary>Fornece <see langword="null" /> para usar como um valor como a saída dessa extensão de marcação.</summary>
      <param name="serviceProvider">Um objeto que pode fornecer serviços para a implementação da extensão de marcação.</param>
      <returns>Uma referência nula.</returns>
    </member>
    <member name="T:System.Windows.Markup.PropertyDefinition">
      <summary>Dá suporte a uma técnica de marcação de definição de propriedades de uma classe em linguagem XAML declarativa.</summary>
    </member>
    <member name="M:System.Windows.Markup.PropertyDefinition.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Attributes">
      <summary>Obtém uma lista de atributos do CLR associados.</summary>
      <returns>Uma lista de atributos associados.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Modifier">
      <summary>Obtém ou define o nível de acesso da propriedade definida.</summary>
      <returns>O nível de acesso da propriedade definida, como uma cadeia de caracteres.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Name">
      <summary>Obtém ou define o nome da propriedade a ser definida.</summary>
      <returns>O nome da propriedade a ser definida.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Type">
      <summary>Obtém ou define o <see cref="T:System.Xaml.XamlType" /> da propriedade a ser definida.</summary>
      <returns>O identificador do tipo XAML da propriedade a ser definida.</returns>
    </member>
    <member name="T:System.Windows.Markup.Reference">
      <summary>Implementa a extensão de marcação <c>{x:Reference}</c>.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.Reference" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.Reference" /> com o argumento <paramref name="name" />.</summary>
      <param name="name">O nome XAML do elemento a referenciar.</param>
    </member>
    <member name="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
      <summary>Retorna um objeto que é o valor da propriedade de destino. Para o tipo <see cref="T:System.Windows.Markup.Reference" />, esse é o objeto referenciado pelo <see cref="P:System.Windows.Markup.Reference.Name" /> fornecido.</summary>
      <param name="serviceProvider">Uma classe que implementa o serviço <see cref="T:System.Xaml.IXamlNameResolver" />.</param>
      <exception cref="T:System.InvalidOperationException">O valor <paramref name="serviceProvider" /> não implementa o serviço <see cref="T:System.Xaml.IXamlNameResolver" />.  
  
- ou - 
 O valor <see cref="P:System.Windows.Markup.Reference.Name" /> não foi definido por meio de construção ou de uso posicional.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> é <see langword="null" />.</exception>
      <returns>O valor da propriedade de destino. Isso é potencialmente qualquer objeto que é mapeado por tipo nos assemblies de suporte relevantes.</returns>
    </member>
    <member name="P:System.Windows.Markup.Reference.Name">
      <summary>Obtém ou define o nome XAML para o qual obter a referência.</summary>
      <returns>O nome XAML do elemento para o qual obter a referência.</returns>
    </member>
    <member name="T:System.Windows.Markup.RootNamespaceAttribute">
      <summary>Representa um atributo de nível de assembly que é usado para identificar o valor da propriedade <see langword="RootNamespace" /> em um arquivo de projeto do Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Markup.RootNamespaceAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.RootNamespaceAttribute" />.</summary>
      <param name="nameSpace">O valor do namespace raiz.</param>
    </member>
    <member name="P:System.Windows.Markup.RootNamespaceAttribute.Namespace">
      <summary>Obtém a cadeia de caracteres que corresponde ao valor da propriedade <see langword="RootNamespace" /> em um arquivo de projeto do Visual Studio.</summary>
      <returns>A cadeia de caracteres que corresponde ao valor da <see langword="RootNamespace" /> propriedade em um arquivo de projeto do Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
      <summary>Representa um atributo de tipo nível que informa qual propriedade do tipo é mapeada para o XAML atributo X:Name.</summary>
    </member>
    <member name="M:System.Windows.Markup.RuntimeNamePropertyAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <param name="name">O nome da propriedade a ser usada como o equivalente de <see langword="x:Name" /> da classe.</param>
    </member>
    <member name="P:System.Windows.Markup.RuntimeNamePropertyAttribute.Name">
      <summary>Obtém o nome da propriedade de nome do runtime especificado por este <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <returns>O nome da propriedade.</returns>
    </member>
    <member name="T:System.Windows.Markup.StaticExtension">
      <summary>Implementa uma extensão de marcação que retorna referências de campo e de propriedade estáticas.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.StaticExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.StaticExtension" /> usando a cadeia de caracteres <paramref name="member" /> fornecida.</summary>
      <param name="member">Uma cadeia de caracteres que identifica o membro ao qual fazer uma referência. Esta cadeia de caracteres usa o formato <c>prefix:typeName.fieldOrPropertyName</c>. <c>prefixo</c> é o prefixo de mapeamento de um namespace XAML e só é necessário para referenciar valores estáticos que não estão mapeados no namespace XAML padrão.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="member" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)">
      <summary>Retorna um valor de objeto a ser definido na propriedade na qual a extensão é aplicada. Para <see cref="T:System.Windows.Markup.StaticExtension" />, o valor retornado é o valor estático avaliado para o membro estático solicitado.</summary>
      <param name="serviceProvider">Um objeto que pode fornecer serviços para a extensão de marcação. O provedor de serviços deve fornecer um serviço que implementa um resolvedor de tipo (<see cref="T:System.Windows.Markup.IXamlTypeResolver" />).</param>
      <exception cref="T:System.InvalidOperationException">O valor <paramref name="member" /> da extensão é <see langword="null" /> no momento da avaliação.</exception>
      <exception cref="T:System.ArgumentException">Alguma parte da cadeia de caracteres <paramref name="member" /> não foi analisada corretamente 
- ou - 
 <paramref name="serviceProvider" /> não forneceu um serviço para <see cref="T:System.Windows.Markup.IXamlTypeResolver" />  
  
- ou - 
 O valor <paramref name="member" /> não foi resolvido para um membro estático.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> é <see langword="null" />.</exception>
      <returns>O valor estático a ser definido na propriedade na qual a extensão é aplicada.</returns>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.Member">
      <summary>Obtém ou define uma cadeia de caracteres de nome de membro usada para resolver uma propriedade ou campo estático com base no resolvedor de tipo fornecido pelo serviço.</summary>
      <exception cref="T:System.ArgumentNullException">Tentativa de definir <see cref="P:System.Windows.Markup.StaticExtension.Member" /> como <see langword="null" />.</exception>
      <returns>Uma cadeia de caracteres que identifica o membro ao qual fazer uma referência.</returns>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.MemberType">
      <summary>Obtém ou define o <see cref="T:System.Type" /> que define o membro estático a ser retornado.</summary>
      <exception cref="T:System.ArgumentNullException">Tentativa de definir <see cref="P:System.Windows.Markup.StaticExtension.MemberType" /> como <see langword="null" />.</exception>
      <returns>O <see cref="T:System.Type" /> que define o membro estático a ser retornado.</returns>
    </member>
    <member name="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute">
      <summary>Indica aos processadores XAML que o espaço em branco ao redor dos elementos do tipo na marcação devem ser cortados durante a serialização.</summary>
    </member>
    <member name="M:System.Windows.Markup.TrimSurroundingWhitespaceAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.TypeExtension">
      <summary>Implementa uma extensão de marcação que retorna um <see cref="T:System.Type" /> baseado em uma entrada de cadeia de caracteres.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.TypeExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.TypeExtension" />, inicializando o valor <see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> com base na cadeia de caracteres <paramref name="typeName" /> fornecida.</summary>
      <param name="typeName">Uma cadeia de caracteres que identifica o tipo ao qual fazer uma referência. Essa cadeia de caracteres usa o formato <c>prefix:className</c>. <c>prefixo</c> é o prefixo de mapeamento de um namespace XAML e só é necessário para fazer referência a tipos que não estão mapeados no namespace XAML padrão.</param>
      <exception cref="T:System.ArgumentNullException">Tentativa de especificar <paramref name="typeName" /> como <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.TypeExtension" />, declarando o tipo diretamente.</summary>
      <param name="type">O tipo a ser representado por esse <see cref="T:System.Windows.Markup.TypeExtension" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> é <see langword="null" /></exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
      <summary>Retorna um objeto que deve ser definido na propriedade em que essa extensão é aplicada. Para <see cref="T:System.Windows.Markup.TypeExtension" />, esse é o valor <see cref="T:System.Type" />, conforme avaliada para o nome de tipo solicitado.</summary>
      <param name="serviceProvider">Objeto que pode fornecer serviços para a extensão de marcação. Espera-se que o provedor forneça um serviço para o <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.</param>
      <exception cref="T:System.InvalidOperationException">O valor <paramref name="member" /> para a extensão é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Alguma parte da cadeia de caracteres <paramref name="typeName" /> não foi analisada corretamente.  
  
- ou - 
 <paramref name="serviceProvider" /> não forneceu um serviço para <see cref="T:System.Windows.Markup.IXamlTypeResolver" />  
  
- ou - 
 O valor <paramref name="typeName" /> não foi resolvido para um tipo.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> é <see langword="null" /></exception>
      <returns>O <see cref="T:System.Type" /> a ser definido na propriedade em que a extensão é aplicada.</returns>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.Type">
      <summary>Obtém ou define informações de tipo dessa extensão.</summary>
      <exception cref="T:System.ArgumentNullException">Tentativa de definir como <see langword="null" />.</exception>
      <returns>O tipo estabelecido. Para fins de tempo de execução, isso pode ser <see langword="null" /> para obter acesso, mas não pode ser definido como <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.TypeName">
      <summary>Obtém ou define o nome do tipo representado por essa extensão de marcação.</summary>
      <exception cref="T:System.ArgumentNullException">Tentativa de definir como <see langword="null" />.</exception>
      <returns>Uma cadeia de caracteres que identifica o tipo. Essa cadeia de caracteres usa o formato prefix<c>:</c>ClassName. (prefix é o prefixo de mapeamento para um namespace XML e só é necessário para os tipos de referência que não são mapeados para o namespace XML padrão para WPF ( <c>http://schemas.microsoft.com/winfx/2006/xaml/presentation</c> ).</returns>
    </member>
    <member name="T:System.Windows.Markup.UidPropertyAttribute">
      <summary>Indica a propriedade CLR de uma classe que fornece o valor diretiva x:Uid.</summary>
    </member>
    <member name="M:System.Windows.Markup.UidPropertyAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.UidPropertyAttribute" />.</summary>
      <param name="name">O nome da propriedade que fornece o valor <see langword="x:Uid" />.</param>
    </member>
    <member name="P:System.Windows.Markup.UidPropertyAttribute.Name">
      <summary>Obtém o nome da propriedade CLR que representa o valor diretiva x:Uid.</summary>
      <returns>O nome da propriedade CLR que representa a diretiva x:Uid.</returns>
    </member>
    <member name="T:System.Windows.Markup.UsableDuringInitializationAttribute">
      <summary>Indica se este tipo é criado de cima para baixo durante a criação do gráfico de objeto XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" />.</summary>
      <param name="usable">Define se a classe associada pode ser usada durante a inicialização.</param>
    </member>
    <member name="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable">
      <summary>Obtém um valor que indica se a classe associada pode ser usada durante a inicialização.</summary>
      <returns>
        <see langword="true" /> se a classe associada for utilizável durante a inicialização; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializer">
      <summary>Classe abstrata que define o comportamento de conversão para a serialização de uma representação de objeto.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Quando substituído em uma classe derivada, determina se o <see cref="T:System.String" /> especificado pode ser convertido em uma instância do tipo compatível com a implementação de <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value">A cadeia de caracteres a ser avaliada para conversão.</param>
      <param name="context">Informações de contexto que são usadas para conversão.</param>
      <returns>
        <see langword="true" /> se o valor puder ser convertido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Quando substituído em uma classe derivada, determina se o objeto especificado pode ser convertido em um <see cref="T:System.String" />.</summary>
      <param name="value">O objeto a ser avaliado para conversão.</param>
      <param name="context">Informações de contexto que são usadas para conversão.</param>
      <returns>
        <see langword="true" /> Se o <paramref name="value" /> puder ser convertido em um <see cref="T:System.String" /> ; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Quando substituído em uma classe derivada, converte um <see cref="T:System.String" /> em uma instância do tipo compatível com a implementação de <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value">A cadeia de caracteres a ser convertida.</param>
      <param name="context">Informações de contexto que são usadas para conversão.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> não pode ser convertido.</exception>
      <returns>Uma nova instância do tipo compatível com a implementação de <see cref="T:System.Windows.Markup.ValueSerializer" /> com base no <paramref name="value" /> fornecido.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Quando substituído em uma classe derivada, converte o objeto especificado em um <see cref="T:System.String" />.</summary>
      <param name="value">O objeto a ser convertido em uma cadeia de caracteres.</param>
      <param name="context">Informações de contexto que são usadas para conversão.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> não pode ser convertido.</exception>
      <returns>Uma representação de cadeia de caracteres do objeto especificado.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)">
      <summary>Retorna uma exceção a ser gerada quando uma conversão não puder ser executada.</summary>
      <param name="value">O objeto não pôde ser convertido.</param>
      <returns>Um objeto <see cref="T:System.Exception" /> para a exceção a gerar quando uma conversão <see langword="ConvertFrom" /> não pode ser executada.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)">
      <summary>Retorna uma exceção a ser gerada quando uma conversão não puder ser executada.</summary>
      <param name="value">O objeto não pôde ser convertido.</param>
      <param name="destinationType">Um tipo que representa o tipo no qual a conversão estava tentando converter.</param>
      <returns>Um objeto <see cref="T:System.Exception" /> para a exceção a gerar quando uma conversão <see langword="ConvertTo" /> não pode ser executada.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary>Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para uma propriedade, passando um descritor de propriedade CLR para a propriedade.</summary>
      <param name="descriptor">O descritor de propriedade CLR para a propriedade a ser serializada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="descriptor" /> é <see langword="null" />.</exception>
      <returns>O serializador associado à propriedade especificada. Pode retornar <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)">
      <summary>Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para a propriedade especificada usando o contexto especificado.</summary>
      <param name="descriptor">Descritor da propriedade a ser serializada.</param>
      <param name="context">Informações de contexto que são usadas para conversão.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="descriptor" /> é <see langword="null" />.</exception>
      <returns>O serializador associado à propriedade especificada.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)">
      <summary>Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para o tipo especificado.</summary>
      <param name="type">O tipo para o qual obter <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> é <see langword="null" />.</exception>
      <returns>O serializador associado ao tipo especificado. Pode retornar <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)">
      <summary>Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para o tipo especificado usando o contexto especificado.</summary>
      <param name="type">O tipo para o qual obter <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <param name="context">Informações de contexto que são usadas para conversão.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> é <see langword="null" />.</exception>
      <returns>O serializador associado ao tipo especificado.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Obtém uma enumeração dos tipos referenciados pelo <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value">O valor que está sendo serializado.</param>
      <param name="context">Informações de contexto que são usadas para conversão.</param>
      <returns>Os tipos de convertidos por este serializador.</returns>
    </member>
    <member name="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute">
      <summary>Indica que um tipo de coleção deve ser processado considerando espaços em branco por um processador de XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.WhitespaceSignificantCollectionAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlDeferLoadAttribute">
      <summary>Indica que uma classe ou propriedade possui um uso de carregamento adiado para XAML (como um comportamento de modelo) e relata a classe que habilita o comportamento de adiamento e seu tipo de conteúdo/destino.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" />, usando os nomes de cadeia de caracteres de tipos.</summary>
      <param name="loaderType">O nome da cadeia de caracteres do tipo da implementação a ser usado para o comportamento de carregamento de adiamento.</param>
      <param name="contentType">O nome de cadeia de caracteres do tipo para o tipo de destino/conteúdo do comportamento de carregamento de adiamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loaderType" /> ou <paramref name="contentType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.Type,System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" /> usando valores de <see cref="T:System.Type" /> do CLR.</summary>
      <param name="loaderType">O valor de <see cref="T:System.Type" /> do CLR da implementação a ser usado para o comportamento de carregamento de adiamento.</param>
      <param name="contentType">O valor de <see cref="T:System.Type" /> do CLR do tipo de destino/conteúdo a ser usado para o comportamento de carregamento de adiamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loaderType" /> ou <paramref name="contentType" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentType">
      <summary>Obtém o valor de <see cref="T:System.Type" /> do CLR do tipo de destino/conteúdo a ser usado para o comportamento de carregamento de adiamento.</summary>
      <returns>O valor de <see cref="T:System.Type" /> do CLR do tipo de destino/conteúdo a ser usado para o comportamento de carregamento de adiamento.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentTypeName">
      <summary>Obtém o nome da cadeia de caracteres do tipo da implementação a ser usado para o comportamento de carregamento de adiamento.</summary>
      <returns>O nome da cadeia de caracteres do tipo para o conversor a ser usado para o comportamento de carregamento de adiamento.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderType">
      <summary>Obtém o valor de <see cref="T:System.Type" /> do CLR da implementação a ser usado para o comportamento de carregamento de adiamento.</summary>
      <returns>O valor de <see cref="T:System.Type" /> do CLR da implementação a ser usado para o comportamento de carregamento de adiamento.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderTypeName">
      <summary>Obtém o nome de cadeia de caracteres do tipo para o tipo de destino/conteúdo do comportamento de carregamento de adiamento.</summary>
      <returns>O nome de cadeia de caracteres do tipo para o tipo de destino/conteúdo do comportamento de carregamento de adiamento.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute">
      <summary>Indica que uma classe pode usar uma extensão de marcação para fornecer um valor e faz referência a um manipulador a ser usado para operações de conjuntos de extensões de marcação.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />.</summary>
      <param name="xamlSetMarkupExtensionHandler">O nome do manipulador a ser usado para operações de conjuntos de extensões de marcação.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionHandler">
      <summary>Obtém o nome do manipulador a ser usado para operações de conjuntos de extensões de marcação.</summary>
      <returns>O nome do manipulador a ser usado para operações de conjuntos de extensões de marcação.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs">
      <summary>Fornece dados para retornos de chamada que são invocados quando um gravador de objeto XAML define um valor usando uma extensão de marcação.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.#ctor(System.Xaml.XamlMember,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <param name="member">Informações de sistema/esquema de tipo XAML para o membro que está sendo definido.</param>
      <param name="value">A referência de extensão de marcação a ser fornecida para o membro que está sendo definido.</param>
      <param name="serviceProvider">As informações do provedor de serviço passadas para a extensão de marcação.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.CallBase">
      <summary>Fornece uma maneira de invocar um retorno de chamada, conforme definido em uma classe base do tipo de ação atual.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.MarkupExtension">
      <summary>Obtém a referência de <see cref="T:System.Windows.Markup.MarkupExtension" /> que é relevante para esse <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <returns>A referência de extensão de marcação que é relevante para isso <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" /> .</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.ServiceProvider">
      <summary>Obtém as informações do provedor de serviço que foram passadas para a extensão de marcação.</summary>
      <returns>Informações do provedor de serviços que foram transmitidas à extensão de marcação.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterAttribute">
      <summary>Indica que uma classe pode usar um conversor de tipo para fornecer um valor e faz referência a um manipulador a ser usado para casos de configuração de conversor de tipo.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <param name="xamlSetTypeConverterHandler">O nome do manipulador a ser usado para operações de configuração de conversor de tipo.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterAttribute.XamlSetTypeConverterHandler">
      <summary>Obtém o valor de inicialização do <paramref name="xamlSetTypeConverterHandler" /> (o nome do manipulador) especificado no <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <returns>O <paramref name="xamlSetTypeConverterHandler" /> valor especificado em <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" /> .</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterEventArgs">
      <summary>Fornece dados para retornos de chamada que são invocados quando um gravador de XAML define um valor usando uma chamada de conversor de tipo.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.#ctor(System.Xaml.XamlMember,System.ComponentModel.TypeConverter,System.Object,System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />.</summary>
      <param name="member">Informações de sistema/esquema de tipo XAML para o membro que está sendo definido.</param>
      <param name="typeConverter">A instância do conversor de tipo específico que está sendo invocada.</param>
      <param name="value">O valor a ser fornecido para o membro que está sendo definido.</param>
      <param name="serviceProvider">Informações de provedor de serviço que podem ser usadas pelo serviço da classe <paramref name="typeConverter" />.</param>
      <param name="cultureInfo">Informações de cultura que podem ser usadas pela classe <paramref name="typeConverter" /> ao chamar <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> e outros métodos.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.CallBase">
      <summary>Fornece uma maneira de invocar um retorno de chamada, conforme definido em uma classe base do tipo de ação atual.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.CultureInfo">
      <summary>Obtém informações de <see cref="T:System.Globalization.CultureInfo" /> que podem ser usadas pela classe do conversor de tipo ao chamar <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> e outros métodos.</summary>
      <returns>Informações de cultura que podem ser usadas pela classe do conversor de tipo</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.ServiceProvider">
      <summary>Obtém informações de <see cref="T:System.IServiceProvider" /> que podem ser usadas pela classe de conversor de tipo.</summary>
      <returns>Informações de provedor de serviço que podem ser usadas pelo serviço da classe <paramref name="typeConverter" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.TypeConverter">
      <summary>Obtém a instância de <see cref="T:System.ComponentModel.TypeConverter" /> que é invocada e fornece o comportamento de conversão de tipo.</summary>
      <returns>O conversor de tipo que fornece o comportamento de conversão de tipo.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetValueEventArgs">
      <summary>Fornece dados para retornos de chamada invocados quando um <see cref="T:System.Xaml.XamlObjectWriter" /> define determinados valores.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</summary>
      <param name="member">Informações de sistema/esquema de tipo XAML para o membro que está sendo definido.</param>
      <param name="value">O valor a ser fornecido para o membro.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase">
      <summary>Quando substituído em uma classe derivada, fornece uma maneira de invocar um retorno de chamada de <see langword="SetValue" />, conforme definido em uma classe base do tipo de ação atual.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Handled">
      <summary>Obtém ou define um valor que determina se um chamador que está usando os <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> pode usar os valores sem precisar chamar <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" />.</summary>
      <returns>
        <see langword="true" /> Se os valores eram úteis e a chamada <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" /> não é necessária; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Member">
      <summary>Obtém o sistema de tipo XAML e as informações de esquema XAML para o membro que está sendo definido.</summary>
      <returns>Sistema de tipos XAML e informações de esquema XAML para o membro que está sendo definido.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Value">
      <summary>Obtém o valor a ser fornecido para o membro que está sendo definido.</summary>
      <returns>O valor a ser fornecido para o membro que está sendo definido.</returns>
    </member>
    <member name="T:System.Windows.Markup.XData">
      <summary>Representa dados literais que podem aparecer como o valor para um nó <see langword="Value" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.XData.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XData" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.XData.Text">
      <summary>Obtém ou define a cadeia de caracteres de valor literal que esses <see cref="T:System.Windows.Markup.XData" /> encapsulam.</summary>
      <returns>A cadeia de caracteres do valor literal.</returns>
    </member>
    <member name="P:System.Windows.Markup.XData.XmlReader">
      <summary>Obtém ou define um leitor de dados literais.</summary>
      <returns>Um leitor para os dados literais.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlLangPropertyAttribute">
      <summary>Identifica a propriedade a ser associada ao atributo xml:lang.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLangPropertyAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XmlLangPropertyAttribute" />.</summary>
      <param name="name">O nome da propriedade a ser associada ao atributo <see langword="xml:lang" />.</param>
    </member>
    <member name="P:System.Windows.Markup.XmlLangPropertyAttribute.Name">
      <summary>Obtém o nome da propriedade que está especificada nesse atributo.</summary>
      <returns>O nome da propriedade.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsCompatibleWithAttribute">
      <summary>Especifica que um namespace de XAML pode ser incluído em outro namespace de XAML. Normalmente, o namespace de XAML incluído é indicado em um <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" /> definido anteriormente.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsCompatibleWithAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XmlnsCompatibleWithAttribute" />.</summary>
      <param name="oldNamespace">O identificador do namespace de XAML de referência.</param>
      <param name="newNamespace">O identificador do namespace de XAML incluído.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldNamespace" /> ou <paramref name="newNamespace" /> são <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.NewNamespace">
      <summary>Obtém o identificador de namespace incluído relatado por este atributo.</summary>
      <returns>O identificador do namespace subsuming relatado no atributo.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.OldNamespace">
      <summary>Obtém o identificador de namespace de referência relatado por este atributo.</summary>
      <returns>O identificador do namespace de referência.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDefinitionAttribute">
      <summary>Especifica um mapeamento por assembly entre um namespace de XAML e um namespace do CLR que, em seguida, será usado para resolução de tipo por um gravador de objeto XAML ou um contexto de esquema XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" />.</summary>
      <param name="xmlNamespace">O identificador do namespace de XAML.</param>
      <param name="clrNamespace">Uma cadeia de caracteres que faz referência a um nome de namespace do CLR.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> ou <paramref name="clrNamespace" /> são <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.AssemblyName">
      <summary>Obtém ou define o nome do assembly associado ao atributo.</summary>
      <returns>O nome do assembly.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace">
      <summary>Obtém o nome de cadeia de caracteres do namespace de CLR especificado neste atributo.</summary>
      <returns>O namespace CLR, especificado como uma cadeia de caracteres.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace">
      <summary>Obtém o identificador do namespace de XAML especificado neste atributo.</summary>
      <returns>O identificador do namespace de XAML.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsPrefixAttribute">
      <summary>Identifica um prefixo recomendado a ser associado a um namespace de XAML para uso em XAML, ao escrever elementos e atributos em um arquivo XAML (serialização) ou ao interagir com um ambiente de design que tenha recursos de edição de XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" />.</summary>
      <param name="xmlNamespace">O identificador do namespace de XAML.</param>
      <param name="prefix">A cadeia de caracteres de prefixo recomendada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> ou <paramref name="prefix" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
      <summary>Obtém o prefixo recomendado associado a este atributo.</summary>
      <returns>A cadeia de caracteres de prefixo recomendada.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
      <summary>Obtém o identificador do namespace de XAML associado a esse atributo.</summary>
      <returns>O identificador do namespace de XAML.</returns>
    </member>
    <member name="T:System.Xaml.AmbientPropertyValue">
      <summary>Relata informações sobre uma propriedade de ambiente como parte de uma implementação <see cref="T:System.Xaml.IAmbientProvider" />.</summary>
    </member>
    <member name="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.AmbientPropertyValue" />.</summary>
      <param name="property">O identificador que representa a propriedade do ambiente.</param>
      <param name="value">O valor a relar.</param>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.RetrievedProperty">
      <summary>Obtém o identificador de sistema do tipo XAML (<see cref="T:System.Xaml.XamlMember" />) que representa a propriedade do ambiente.</summary>
      <returns>O identificador que representa a propriedade do ambiente.</returns>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.Value">
      <summary>Obtém o valor da propriedade de ambiente.</summary>
      <returns>O valor da propriedade de ambiente.</returns>
    </member>
    <member name="T:System.Xaml.AttachableMemberIdentifier">
      <summary>Fornece uma representação de identificador de sistema de tipo XAML para membros anexáveis. A estrutura do identificador coloca em paralelo o formulário de cadeia de caracteres <paramref name="declaringType" /><see langword="." /><paramref name="memberName" /> para uso do membro anexável.</summary>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.#ctor(System.Type,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <param name="declaringType">O componente <paramref name="declaringType" /> do identificador, que deve corresponder ao nome do <see cref="P:System.Xaml.XamlMember.Type" /> declarante.</param>
      <param name="memberName">O <paramref name="memberName" /> componente do identificador, que deve corresponder ao <see cref="P:System.Xaml.XamlMember.Name" />.</param>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Object)">
      <summary>Determina se essa instância do <see cref="T:System.Xaml.AttachableMemberIdentifier" /> e um objeto especificado têm o mesmo valor.</summary>
      <param name="obj">O objeto a ser comparado com o <see cref="T:System.Xaml.AttachableMemberIdentifier" /> atual.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> for um <see cref="T:System.Xaml.AttachableMemberIdentifier" /> e seu valor for o mesmo que o dessa instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Xaml.AttachableMemberIdentifier)">
      <summary>Determina se essa instância e outro objeto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> especificado têm o mesmo valor.</summary>
      <param name="other">O <see cref="T:System.Xaml.AttachableMemberIdentifier" /> a ser comparado com o <see cref="T:System.Xaml.AttachableMemberIdentifier" /> atual.</param>
      <returns>
        <see langword="true" /> se ambos os objetos tiverem o mesmo valor; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.GetHashCode">
      <summary>Retorna o código hash para este <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns>Um código hash inteiro.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Equality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary>Determina se dois objetos <see cref="T:System.Xaml.AttachableMemberIdentifier" /> especificados têm o mesmo valor.</summary>
      <param name="left">Um <see cref="T:System.Xaml.AttachableMemberIdentifier" /> ou <see langword="null" />.</param>
      <param name="right">Um <see cref="T:System.Xaml.AttachableMemberIdentifier" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se o valor de <paramref name="left" /> for o mesmo que o valor de <paramref name="right" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Inequality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary>Determina se dois objetos <see cref="T:System.Xaml.AttachableMemberIdentifier" /> especificados têm valores diferentes.</summary>
      <param name="left">Um <see cref="T:System.Xaml.AttachableMemberIdentifier" /> ou <see langword="null" />.</param>
      <param name="right">Um <see cref="T:System.Xaml.AttachableMemberIdentifier" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se o valor de <paramref name="left" /> for diferente do valor de <paramref name="right" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.ToString">
      <summary>Retorna um valor <see cref="T:System.String" /> que representa o <see cref="T:System.Xaml.AttachableMemberIdentifier" /> atual.</summary>
      <returns>Um <see cref="T:System.String" /> que representa o <see cref="T:System.Xaml.AttachableMemberIdentifier" /> atual.</returns>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.DeclaringType">
      <summary>Obtém ou define o valor de componente <paramref name="declaringType" /> de <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns>O <paramref name="declaringType" /> valor do componente do <see cref="T:System.Xaml.AttachableMemberIdentifier" /> .</returns>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.MemberName">
      <summary>Obtém ou define o valor de componente <paramref name="memberName" /> de <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns>O <paramref name="memberName" /> valor do componente do <see cref="T:System.Xaml.AttachableMemberIdentifier" /> .</returns>
    </member>
    <member name="T:System.Xaml.AttachablePropertyServices">
      <summary>Fornece métodos auxiliares estáticos que obtêm as informações de método do acessador e valores de uma propriedade anexável e que funcionam com um repositório de propriedades anexadas.</summary>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary>Copia todos os pares de valor/propriedade anexáveis de um repositório de propriedades anexáveis especificado para uma matriz de destino.</summary>
      <param name="instance">Um repositório de propriedades anexáveis específico que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />; ou qualquer objeto não nulo para acessar um repositório de propriedades anexáveis padrão estático.</param>
      <param name="array">A matriz de destino. A matriz é uma matriz genérica, deve ser passada não dimensionada e deve ter os componentes de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> e <see langword="object" />.</param>
      <param name="index">O índice de origem para o qual copiar.</param>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
      <summary>Retorna a contagem das entradas de propriedade anexável que estão no repositório especificado.</summary>
      <param name="instance">Um repositório de propriedades anexáveis específico que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />; ou qualquer objeto não nulo para acessar um repositório de propriedades anexáveis padrão estático.</param>
      <returns>A contagem de inteiro de entradas no repositório.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
      <summary>Remove a entrada para a propriedade anexável especificada do repositório especificado.</summary>
      <param name="instance">Um repositório de propriedades anexáveis específico que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />; ou qualquer objeto não nulo para acessar um repositório de propriedades anexáveis padrão estático.</param>
      <param name="name">O identificador da entrada de propriedade anexável a remover do armazenamento.</param>
      <returns>
        <see langword="true" /> se uma entrada de propriedade anexável para <paramref name="name" /> tiver sido encontrada no repositório e removida dele; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary>Define um valor para a propriedade anexável especificada no repositório especificado.</summary>
      <param name="instance">Um repositório de propriedades anexáveis específico que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />; ou qualquer objeto não nulo para usar um repositório de propriedades anexáveis padrão estático.</param>
      <param name="name">O identificador da entrada de propriedade anexável para a qual definir um valor.</param>
      <param name="value">O valor a ser definido.</param>
      <exception cref="T:System.InvalidOperationException">Não foi possível definir um valor no repositório.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary>Tenta obter um valor para a propriedade anexável especificada no repositório especificado. Não lançará uma exceção se a propriedade anexável específica não existir no repositório.</summary>
      <param name="instance">Um repositório de propriedades anexáveis específico que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />; ou qualquer objeto não nulo para usar um repositório de propriedades anexáveis padrão estático.</param>
      <param name="name">O identificador da entrada de propriedade anexável para a qual obter um valor.</param>
      <param name="value">Parâmetro de saída. Quando esse método for retornado, ele conterá o objeto de destino para o valor se <paramref name="name" /> existir no repositório e tiver um valor.</param>
      <returns>
        <see langword="true" /> se uma entrada de propriedade anexável para <paramref name="name" /> for encontrada no repositório e um valor for lançado em <paramref name="value" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
      <summary>Tenta obter um valor para a propriedade anexável especificada no repositório especificado, retornando um formulário genérico de saída. Não lançará uma exceção se a propriedade anexável específica não existir no repositório.</summary>
      <param name="instance">Um repositório de propriedades anexáveis específico que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />; ou qualquer objeto não nulo para acessar um repositório de propriedades anexáveis padrão estático.</param>
      <param name="name">O identificador da entrada de propriedade anexável para a qual obter um valor.</param>
      <param name="value">Parâmetro de saída. Quando esse método for retornado, ele conterá o objeto de destino para o valor se <paramref name="name" /> existir no repositório e tiver um valor.</param>
      <typeparam name="T">O tipo esperado da saída.</typeparam>
      <returns>
        <see langword="true" /> se uma entrada de propriedade anexável para <paramref name="name" /> for encontrada no repositório e um valor for lançado em <paramref name="value" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IAmbientProvider">
      <summary>Representa um serviço que pode retornar itens de informações sobre propriedades de ambiente ou tipos de ambiente para conversores de tipo e extensões de marcação.</summary>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary>Retorna um conjunto enumerável de itens de informações de propriedade de ambiente para o conjunto solicitado de tipos e propriedades.</summary>
      <param name="ceilingTypes">Especifica um ou mais tipos que devem parar a avaliação quando eles forem encontrados subindo no gráfico de objeto. Esse tipo contém a propriedade de ambiente desejada. Pode ser <see langword="null" />.</param>
      <param name="searchLiveStackOnly">
        <see langword="true" /> para não usar um contexto salvo; <see langword="false" /> para usar um contexto salvo. O padrão é <see langword="false" />.</param>
      <param name="types">Especifica um ou mais objetos de identificador tipo que identificam os tipos a serem considerados ambiente.</param>
      <param name="properties">Especifica um ou mais objetos de identificador de propriedades que identificam as propriedades a serem consideradas ambiente.</param>
      <returns>Um conjunto enumerável de itens de informações de propriedade de ambiente para o conjunto solicitado de propriedades e tipos. As informações de propriedade para cada <see cref="T:System.Xaml.AmbientPropertyValue" /> que é retornado corresponderá a uma entrada <paramref name="types" /> ou <paramref name="properties" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary>Retorna um conjunto enumerável de itens de informações de propriedade de ambiente para o conjunto solicitado de propriedades.</summary>
      <param name="ceilingTypes">Especifica um ou mais tipos que devem parar a avaliação quando eles forem encontrados subindo no gráfico de objeto. Esse tipo contém a propriedade de ambiente desejada. Pode ser <see langword="null" />.</param>
      <param name="properties">Especifica um ou mais objetos de identificador de propriedades que identificam as propriedades a serem consideradas ambiente.</param>
      <returns>Um conjunto enumerável de itens de informações de propriedade de ambiente para o conjunto solicitado de propriedades. As informações de propriedade para cada <see cref="T:System.Xaml.AmbientPropertyValue" /> que é retornado corresponderá a uma entrada <paramref name="properties" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])">
      <summary>Retorna um conjunto enumerável de instâncias de objeto de possíveis tipos de ambiente para tipos solicitados.</summary>
      <param name="types">O conjunto de tipos do qual recuperar informações de tipo de ambiente.</param>
      <returns>Um conjunto enumerável de objetos que representam os valores do conjunto solicitado de identificadores <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary>Retorna um único item de informações de propriedade de ambiente do conjunto solicitado de propriedades, com base em qual propriedade é encontrada pela primeira.</summary>
      <param name="ceilingTypes">Especifica um ou mais tipos que devem parar a avaliação quando eles forem encontrados subindo no gráfico de objeto. Esse tipo contém a propriedade de ambiente desejada.</param>
      <param name="properties">Especifica um ou mais objetos que identificam as propriedades a serem consideradas ambiente.</param>
      <returns>Um único item de informação de propriedade de ambiente para o primeiro valor da propriedade de ambiente da lista <paramref name="properties" /> que é encontrado.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])">
      <summary>Retorna o primeiro objeto correspondente que é um tipo de ambiente possível para os tipos solicitados.</summary>
      <param name="types">O conjunto de tipos do qual recuperar informações de tipo de ambiente.</param>
      <returns>O primeiro objeto de resultado para o conjunto solicitado.</returns>
    </member>
    <member name="T:System.Xaml.IAttachedPropertyStore">
      <summary>Representa um repositório de membros anexável para um objeto em que os membros anexáveis são definidos. Esse repositório de membros anexável pode ser referenciado com <see cref="T:System.Xaml.AttachablePropertyServices" />.</summary>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary>Copia todos os pares de valor-membro anexáveis deste repositório de membros anexável para uma matriz de destino.</summary>
      <param name="array">A matriz de destino. A matriz é uma matriz genérica, deve ser passada não dimensionada e deve ter os componentes de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> e <see langword="object" />.</param>
      <param name="index">O índice de origem no qual a cópia deve ser iniciada.</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
      <summary>Remove a entrada para o membro anexável especificado desse repositório de membros anexável.</summary>
      <param name="attachableMemberIdentifier">O identificador do sistema de tipo XAML para a entrada de membro anexável a remover.</param>
      <returns>
        <see langword="true" /> se uma entrada de membro anexável para <paramref name="attachableMemberIdentifier" /> tiver sido encontrada no repositório e removida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary>Define um valor para o membro anexável especificado no repositório especificado.</summary>
      <param name="attachableMemberIdentifier">O identificador do sistema de tipo XAML para a entrada de membro anexável a definir.</param>
      <param name="value">O valor a ser definido.</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary>Tenta obter um valor para o membro anexável especificado no repositório especificado.</summary>
      <param name="attachableMemberIdentifier">O identificador do sistema de tipo XAML para a entrada de membro anexável a obter.</param>
      <param name="value">Parâmetro de saída. Quando esse método for retornado, ele conterá o objeto de destino para o valor se <paramref name="attachableMemberIdentifier" /> existir no repositório e tiver um valor.</param>
      <returns>
        <see langword="true" /> se uma entrada de membro anexável para <paramref name="attachableMemberIdentifier" /> for encontrada no repositório e um valor for lançado em <paramref name="value" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.IAttachedPropertyStore.PropertyCount">
      <summary>Obtém a contagem de entradas de membro anexáveis neste repositório de membros anexável.</summary>
      <returns>A contagem de inteiro de entradas no repositório.</returns>
    </member>
    <member name="T:System.Xaml.IDestinationTypeProvider">
      <summary>Representa um serviço que pode retornar um identificador de sistema do tipo CLR para o tipo de destino. O tipo de destino é relevante quando o tipo de destino de uma operação de configuração de propriedade é relatado indiretamente por reflexão ou outros mecanismos.</summary>
    </member>
    <member name="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
      <summary>Retorna o CLR <see cref="T:System.Type" /> que identifica o tipo de destino para a extensão de marcação ou o conversor de tipo relevante.</summary>
      <returns>Um valor CLR <see cref="T:System.Type" /> para o tipo de destino.</returns>
    </member>
    <member name="T:System.Xaml.INamespacePrefixLookup">
      <summary>Representa um serviço que pode retornar o prefixo recomendado para um mapeamento de namespace XAML para consumidores. Os consumidores podem incluir serializadores ou ambientes de design.</summary>
    </member>
    <member name="M:System.Xaml.INamespacePrefixLookup.LookupPrefix(System.String)">
      <summary>Retorna o prefixo recomendado para um identificador de namespace XAML especificado.</summary>
      <param name="ns">A cadeia de caracteres do identificador de namespace XAML para a qual obter um prefixo.</param>
      <returns>O prefixo recomendado.</returns>
    </member>
    <member name="T:System.Xaml.IRootObjectProvider">
      <summary>Descreve um serviço que pode retornar o objeto raiz da marcação que está sendo analisada.</summary>
    </member>
    <member name="P:System.Xaml.IRootObjectProvider.RootObject">
      <summary>Obtém o objeto raiz de marcação ou de um grafo de objeto.</summary>
      <returns>O objeto raiz.</returns>
    </member>
    <member name="T:System.Xaml.IXamlIndexingReader">
      <summary>Fornece um serviço que representa um controle de nó indexado para uma implementação simples de um leitor XAML baseado em nó.</summary>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.Count">
      <summary>Obtém o número de nós no conjunto de nós externo atual.</summary>
      <returns>O número de nós no conjunto de nós externo atual.</returns>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.CurrentIndex">
      <summary>Obtém ou define o número de índice da posição atual do leitor para a exibição de lista indexada de nós XAML.</summary>
      <returns>O número de índice da posição atual do leitor.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfo">
      <summary>Descreve um serviço para relatar informações de linha de texto em implementações do leitor XAML.</summary>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.HasLineInfo">
      <summary>Obtém um valor que especifica se as informações da linha estão disponíveis.</summary>
      <returns>
        <see langword="true" /> Se as informações de linha estiverem disponíveis; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LineNumber">
      <summary>Obtém o número de linha a ser relatado.</summary>
      <returns>O número de linha a ser relatado.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LinePosition">
      <summary>Obtém a posição da linha a ser relatada.</summary>
      <returns>A posição da linha a ser relatada.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfoConsumer">
      <summary>Descreve um serviço em que um gravador XAML pode usar as informações de linha relatadas e, em seguida, incluir as informações na saída.</summary>
    </member>
    <member name="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)">
      <summary>Coleta informações de linha.</summary>
      <param name="lineNumber">O número de linha a ser usado na saída.</param>
      <param name="linePosition">A posição de linha a ser usada na saída.</param>
    </member>
    <member name="P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo">
      <summary>Obtém um valor que determina se um serviço de informações de linha deve fornecer valores e, portanto, também deve chamar <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> quando relevante.</summary>
      <returns>
        <see langword="true" /> Se as informações de linha forem usadas pela implementação; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameProvider">
      <summary>Fornece um serviço que é usado durante operações de gravação e salvamento para inserir um objeto e retornar um nome XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameProvider.GetName(System.Object)">
      <summary>Recupera o nome XAML do objeto especificado.</summary>
      <param name="value">O objeto para o qual obter o nome.</param>
      <returns>O valor do nome XAML do objeto solicitado.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameResolver">
      <summary>Descreve um serviço que pode retornar objetos especificados pelo nome XAML ou, como alternativa, retorna um token que adia a resolução de nomes. O serviço também pode retornar um conjunto enumerável de todos os objetos nomeados que estão em namescope XAML.</summary>
    </member>
    <member name="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete">
      <summary>Ocorre quando um processador XAML registrou todos os nomes relevantes para o namescope XAML de backup.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope">
      <summary>Retorna um conjunto enumerável de todos os objetos nomeados no namescope XAML.</summary>
      <returns>Um conjunto enumerável de objetos <see cref="T:System.Collections.Generic.KeyValuePair`2" />. Para cada <see cref="T:System.Collections.Generic.KeyValuePair`2" />, o componente <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> é uma cadeia de caracteres e o componente <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> é o objeto que usa o nome <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> no namescope XAML.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Retorna um objeto que pode corrigir determinados padrões de marcação que produzem referências de encaminhamento.</summary>
      <param name="names">Uma coleção de nomes que são possíveis referências de encaminhamento.</param>
      <returns>Um objeto que fornece um token para o comportamento de pesquisa a ser avaliado mais tarde.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>Retorna um objeto que pode corrigir determinados padrões de marcação que produzem referências de encaminhamento.</summary>
      <param name="names">Uma coleção de nomes que são possíveis referências de encaminhamento.</param>
      <param name="canAssignDirectly">
        <see langword="true" /> para atribuir imediatamente a referência de nome resolvido à propriedade de destino. <see langword="false" /> para chamar o código de usuário para uma nova análise. O comportamento padrão é <see langword="false" />.</param>
      <returns>Um objeto que fornece um token para o comportamento de pesquisa a ser avaliado mais tarde.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String)">
      <summary>Resolve um objeto de uma referência de nome.</summary>
      <param name="name">A referência de nome a resolver.</param>
      <returns>O objeto resolvido; ou nulo.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)">
      <summary>Resolve um objeto de uma referência de nome e fornece um valor de acompanhamento que informa se o objeto está totalmente inicializado para fins de gráfico de objeto.</summary>
      <param name="name">A referência de nome a resolver.</param>
      <param name="isFullyInitialized">Quando este método retorna, <see langword="true" /> se o objeto retornado tiver quaisquer dependências de referências não resolvidas; caso contrário, <see langword="false" />.</param>
      <returns>Um objeto que fornece um token para o comportamento de pesquisa a ser avaliado mais tarde.</returns>
    </member>
    <member name="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable">
      <summary>Obtém um valor que determina se chamar <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> está disponível para resolver um nome em um token para resolução de encaminhamento.</summary>
      <returns>
        <see langword="true" /> Se <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> está disponível como uma implementação que retorna um token útil para resolução de encaminhamento; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Xaml.IXamlNamespaceResolver">
      <summary>Descreve um serviço que pode retornar um namespace de XAML que se baseia em seu prefixo, pois ele é mapeado na marcação XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespace(System.String)">
      <summary>Recupera um identificador de namespace de XAML para a cadeia de caracteres de prefixo especificada.</summary>
      <param name="prefix">O prefixo para o qual recuperar as informações do namespace de XAML.</param>
      <returns>O identificador de namespace de XAML solicitado, como uma cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespacePrefixes">
      <summary>Retorna todos os possíveis mapeamentos de namespace de XAML para prefixo (valores <see cref="T:System.Xaml.NamespaceDeclaration" />) que estão disponíveis no contexto de esquema de XAML ativo.</summary>
      <returns>Um conjunto enumerável de valores <see cref="T:System.Xaml.NamespaceDeclaration" />. Para obter todas as cadeias de caracteres de prefixo, obtenha o valor <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> de cada valor no conjunto retornado. Para obter prefixos de namespaces de XAML específicos, processe qualquer valor retornado que tenha o valor <see cref="P:System.Xaml.NamespaceDeclaration.Namespace" /> desejado.</returns>
    </member>
    <member name="T:System.Xaml.IXamlObjectWriterFactory">
      <summary>Representa um serviço que gera um <see cref="T:System.Xaml.XamlObjectWriter" /> que é baseado no contexto atual do analisador interno.</summary>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetParentSettings">
      <summary>Retorna o <see cref="T:System.Xaml.XamlObjectWriterSettings" /> do contexto original do analisador interno.</summary>
      <returns>As configurações do contexto original do analisador interno.</returns>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)">
      <summary>Retorna um <see cref="T:System.Xaml.XamlObjectWriter" /> que é baseado no contexto de esquema XAML ativo.</summary>
      <param name="settings">As configurações a serem usadas para a construção e inicialização do <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <returns>Um <see cref="T:System.Xaml.XamlObjectWriter" /> que tem as configurações especificadas.</returns>
    </member>
    <member name="T:System.Xaml.IXamlSchemaContextProvider">
      <summary>Representa um serviço que fornece informações de contexto de esquema XAML para conversores de tipo e extensões de marcação.</summary>
    </member>
    <member name="P:System.Xaml.IXamlSchemaContextProvider.SchemaContext">
      <summary>Obtém o <see cref="T:System.Xaml.XamlSchemaContext" /> que é relatado pelo contexto de serviço.</summary>
      <returns>O contexto do esquema XAML que é relatado pelo contexto de serviço.</returns>
    </member>
    <member name="T:System.Xaml.NamespaceDeclaration">
      <summary>Declara o identificador e o prefixo de um namespace XAML armazenando estes valores de cadeia de caracteres como propriedades separadas.</summary>
    </member>
    <member name="M:System.Xaml.NamespaceDeclaration.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.NamespaceDeclaration" /> usando valores de propriedade iniciais.</summary>
      <param name="ns">O identificador do namespace XAML, como uma cadeia de caracteres.</param>
      <param name="prefix">O prefixo de cadeia de caracteres usado para o namespace em mapeamentos de prefixo.</param>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Namespace">
      <summary>Obtém o componente do identificador de um <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns>O identificador da declaração do namespace XAML.</returns>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Prefix">
      <summary>Obtém o prefixo usado como o prefixo de mapeamento do namespace XAML para um <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns>A cadeia de caracteres de prefixo para isso <see cref="T:System.Xaml.NamespaceDeclaration" /> .</returns>
    </member>
    <member name="T:System.Xaml.Schema.AllowedMemberLocations">
      <summary>Especifica as restrições de sintaxe impostas em uma propriedade quando ela é definida em XAML, conforme relatado por um <see cref="T:System.Xaml.XamlDirective" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Any">
      <summary>A propriedade pode ser definida no local <see cref="F:System.Xaml.Schema.AllowedMemberLocations.Attribute" /> ou <see cref="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement" />. (Esse membro de enumeração é definido como a combinação desses valores.)</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Attribute">
      <summary>A propriedade pode ser definida na sintaxe do atributo XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement">
      <summary>A propriedade pode ser definida na sintaxe do elemento da propriedade XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.None">
      <summary>Propriedade não pode ser definida em XAML de modo algum. Este é o padrão.</summary>
    </member>
    <member name="T:System.Xaml.Schema.ShouldSerializeResult">
      <summary>Define o comportamento de serialização conforme relatado por um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.Default">
      <summary>Desconhecido, adiar para o tipo do membro.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.False">
      <summary>Não serialize o resultado.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.True">
      <summary>Serialize o resultado.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlCollectionKind">
      <summary>Descreve a metáfora de coleção (se houver) usada por um membro XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Array">
      <summary>O membro XAML dá suporte a uma coleção de matrizes.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Collection">
      <summary>O membro XAML dá suporte a uma lista ou coleção.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Dictionary">
      <summary>O membro XAML dá suporte a um dicionário (pares chave-valor).</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.None">
      <summary>O membro XAML não dá suporte a uma coleção.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlMemberInvoker">
      <summary>Fornece um ponto de extensão que pode acessar as características de um membro XAML por meio de técnicas que não são de reflexão.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> com base em um <see cref="T:System.Xaml.XamlMember" /> fornecido.</summary>
      <param name="member">O valor do <see cref="T:System.Xaml.XamlMember" /> para o membro XAML específico, relevante a este <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="member" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
      <summary>Obtém um valor da propriedade relevante de uma instância.</summary>
      <param name="instance">Uma instância do tipo de proprietário para o membro.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Esse método foi invocado em um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlMember" /> desconhecido.  
  
 - ou -  
  
Esse método foi invocado em um membro somente gravação.  
  
 - ou -  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> é <see langword="null" />.</exception>
      <returns>O valor da propriedade solicitada.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
      <summary>Define um valor da propriedade relevante em uma instância.</summary>
      <param name="instance">Uma instância do tipo de proprietário para o membro.</param>
      <param name="value">O valor da propriedade a ser definido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Esse método foi invocado em um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlMember" /> desconhecido.  
  
 - ou -  
  
Esse método foi invocado em um membro somente leitura.  
  
 - ou -  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
      <summary>Indica se o valor deve ser persistido ao longo dos processos de serialização.</summary>
      <param name="instance">A instância com a propriedade a ser examinada quanto à persistência.</param>
      <returns>Um valor da enumeração.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
      <summary>Obtém a <see cref="T:System.Reflection.MethodInfo" /> para o método do CLR que obtém valores para a propriedade que é relevante para esse <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns>O <see cref="T:System.Reflection.MethodInfo" /> para o método CLR que obtém valores para a propriedade que é relevante para isso <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> , ou <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
      <summary>Obtém a <see cref="T:System.Reflection.MethodInfo" /> para o método do CLR que define valores para a propriedade que é relevante para esse <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns>O <see cref="T:System.Reflection.MethodInfo" /> para o método CLR que define valores para a propriedade que é relevante para isso <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> , ou <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
      <summary>Fornece um valor estático que representa um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> desconhecido, que não foi totalmente implementado.</summary>
      <returns>Um valor estático que representa um desconhecido, não totalmente implementado <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> .</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeInvoker">
      <summary>Fornece um ponto de extensão que pode construir instâncias de um tipo XAML por meio de técnicas que não reflexão e construtores.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> com base em um <see cref="T:System.Xaml.XamlType" /> fornecido.</summary>
      <param name="type">O valor <see cref="T:System.Xaml.XamlType" /> para o tipo específico de XAML relevante a este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)">
      <summary>Adiciona o item fornecido a uma instância do tipo relevante a esse <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance">Uma instância do tipo especificado pelo <see cref="T:System.Xaml.XamlType" /> usado para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="item">O item a ser adicionado.</param>
      <exception cref="T:System.NotSupportedException">Esse método foi invocado em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlType" /> desconhecido.  
  
 - ou -  
  
Invocado esse método em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> em que o tipo relevante não é uma coleção.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> retorna <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)">
      <summary>Adiciona o valor de chave e item fornecido a uma instância do tipo que é relevante para esse <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance">Uma instância do tipo especificado pelo <see cref="T:System.Xaml.XamlType" /> usado para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="key">Chave de dicionário para o item a ser adicionado.</param>
      <param name="item">O valor do item a adicionar.</param>
      <exception cref="T:System.NotSupportedException">Esse método foi invocado em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlType" /> desconhecido.  
  
 - ou -  
  
Invocado esse método em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> em que o tipo relevante não é um dicionário.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> retorna <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])">
      <summary>Cria uma instância do objeto com base no <see cref="T:System.Xaml.XamlType" /> iniciado pela construção para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="arguments">Uma matriz de objetos que fornecem o <see langword="x:ConstructorArgs" /> para a instância. Pode ser <see langword="null" /> para tipos que não exigem nem usam <see langword="x:ConstructorArgs" />.</param>
      <exception cref="T:System.MissingMethodException">Não foi possível resolver um construtor.</exception>
      <returns>A instância criada com base no <see cref="T:System.Xaml.XamlType" /> iniciado pela construção para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)">
      <summary>Retorna o método <see langword="Add" /> relevante para um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que é relevante a uma coleção ou a um dicionário.</summary>
      <param name="contentType">
        <see cref="T:System.Xaml.XamlType" /> para o tipo de item que é usado pelo método <see langword="Add" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentType" /> é <see langword="null" />.</exception>
      <returns>Informações <see cref="T:System.Reflection.MethodInfo" /> de CLR para o método <see langword="Add" /> ou nulo.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod">
      <summary>Retorna um objeto que representa um método que pode fazer a enumeração sobre itens.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> para um método de enumerador ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)">
      <summary>Retorna um objeto <see cref="T:System.Collections.IEnumerator" /> que representa o conjunto de itens.</summary>
      <param name="instance">Uma instância do tipo especificado pelo <see cref="T:System.Xaml.XamlType" /> usado para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <exception cref="T:System.NotSupportedException">Esse método foi invocado em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlType" /> desconhecido.  
  
 - ou -  
  
Invocado esse método em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> em que o tipo relevante não é uma coleção ou dicionário.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <returns>Um objeto <see cref="T:System.Collections.IEnumerator" /> ou <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler">
      <summary>Obtém o manipulador a ser usado quando um <see cref="T:System.Xaml.XamlObjectWriter" /> chama um <see cref="T:System.Windows.Markup.MarkupExtension" /> implementado.</summary>
      <returns>Uma implementação de manipulador que manipula esse caso.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler">
      <summary>Obtém o manipulador a ser usado quando um <see cref="T:System.Xaml.XamlObjectWriter" /> chama um <see cref="T:System.ComponentModel.TypeConverter" /> implementado por CLR.</summary>
      <returns>Uma implementação de manipulador que manipula esse caso.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker">
      <summary>Fornece um valor estático que representa um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> desconhecido, que não foi totalmente implementado.</summary>
      <returns>Um valor estático que representa um desconhecido, não totalmente implementado <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> .</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeName">
      <summary>Fornece um meio para especificar um tipo XAML em termos de nome e namespace.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeName" />, com base nas cadeias de caracteres de nome e namespace.</summary>
      <param name="xamlNamespace">O namespace XAML que contém o nome.</param>
      <param name="name">O nome do tipo para o qual um <see cref="T:System.Xaml.Schema.XamlTypeName" /> será criado.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeName" />, com base nas cadeias de caracteres de nome e namespace, bem como em uma matriz de argumentos de tipo.</summary>
      <param name="xamlNamespace">O namespace XAML que contém o <paramref name="name" />.</param>
      <param name="name">O nome do tipo para o qual um <see cref="T:System.Xaml.Schema.XamlTypeName" /> será criado.</param>
      <param name="typeArguments">Uma matriz de argumentos de tipo, em que cada um deve ser um <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeName" /> com base em um <see cref="T:System.Xaml.XamlType" /> existente.</summary>
      <param name="xamlType">Um <see cref="T:System.Xaml.XamlType" /> existente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary>Fornece um valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> com base em um nome de tipo e um objeto que pode resolver um prefixo de marcação em um namespace.</summary>
      <param name="typeName">O nome de tipo para criar um valor de <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver">Um provedor de serviço ou de objeto que implementa o <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> ou <paramref name="namespaceResolver" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Não é possível analisar cadeias de caracteres.</exception>
      <returns>O <see cref="T:System.Xaml.Schema.XamlTypeName" /> criado.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary>Fornece um valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> com base em uma cadeia de caracteres que pode especificar vários nomes de tipo e um objeto que pode resolver um prefixo de marcação em um namespace.</summary>
      <param name="typeNameList">Uma cadeia de caracteres que contém vários tipos.</param>
      <param name="namespaceResolver">Um provedor de serviço ou de objeto que implementa o <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeNameList" /> ou <paramref name="namespaceResolver" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Não é possível analisar cadeias de caracteres.</exception>
      <returns>O <see cref="T:System.Xaml.Schema.XamlTypeName" /> criado.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString">
      <summary>Converte o valor deste <see cref="T:System.Xaml.Schema.XamlTypeName" /> em sua representação de cadeia de caracteres equivalente.</summary>
      <returns>A representação de cadeia de caracteres equivalente deste <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)">
      <summary>Converte o valor deste <see cref="T:System.Xaml.Schema.XamlTypeName" /> em sua representação de cadeia de caracteres equivalente, que pode ser usada na sintaxe de marcação para o uso que um elemento de objeto faz de vários tipos.</summary>
      <param name="typeNameList">Uma lista de tipos.</param>
      <param name="prefixLookup">Uma referência de serviço para pesquisa de prefixo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefixLookup" /> ou <paramref name="typeNameList" /> é <see langword="null" />.</exception>
      <returns>Uma cadeia de caracteres concatenada de todos os resultados do tipo.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)">
      <summary>Converte o valor deste <see cref="T:System.Xaml.Schema.XamlTypeName" /> em sua representação de cadeia de caracteres equivalente, que pode ser usada na sintaxe de marcação para o uso que um elemento de objeto faz de um tipo.</summary>
      <param name="prefixLookup">Uma referência de serviço para pesquisa de prefixo.</param>
      <exception cref="T:System.InvalidOperationException">O <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> deste <see cref="T:System.Xaml.Schema.XamlTypeName" /> é <see langword="null" />.  
  
- ou - 
 <see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> não é válido.  
  
- ou - 
Não foi possível pesquisar o prefixo.</exception>
      <returns>Uma cadeia de caracteres de uso prefixada.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)">
      <summary>Fornece um valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> com base em um nome de tipo e um objeto que pode resolver um prefixo de marcação em um namespace.</summary>
      <param name="typeName">O nome de tipo para criar um valor de <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver">Um provedor de serviço ou de objeto que implementa o <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result">Parâmetro de saída que contém o <see cref="T:System.Xaml.Schema.XamlTypeName" /> criado quando o valor retornado é <see langword="true" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> ou <paramref name="namespaceResolver" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se a análise for bem-sucedida e <paramref name="result" /> contiver um valor útil, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)">
      <summary>Fornece um valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> com base em uma cadeia de caracteres que pode especificar vários nomes de tipo e um objeto que pode resolver um prefixo de marcação em um namespace.</summary>
      <param name="typeNameList">Uma cadeia de caracteres que contém vários tipos.</param>
      <param name="namespaceResolver">Um provedor de serviço ou de objeto que implementa o <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result">Parâmetro de saída que contém o <see cref="T:System.Xaml.Schema.XamlTypeName" /> criado quando o valor retornado é <see langword="true" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeNameList" /> ou <paramref name="namespaceResolver" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se a análise for bem-sucedida e <paramref name="result" /> contiver um valor útil, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Name">
      <summary>Obtém o nome usado para construir este <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns>O nome do tipo.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Namespace">
      <summary>Obtém o identificador do namespace XAML usado para construir este <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns>O identificador do namespace de XAML.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.TypeArguments">
      <summary>Obtém os argumentos de tipo usados para construir este <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns>Os argumentos de tipo, se houver. Pode ser nulo.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeTypeConverter">
      <summary>Converte um objeto <see cref="T:System.Xaml.XamlType" /> de/em uma cadeia de caracteres que representa o nome do tipo. Essa funcionalidade é usada para extensibilidade de XAML pelas definições de marcação, por meio de <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeTypeConverter" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se um objeto do tipo especificado pode ser convertido em uma instância do <see cref="T:System.Xaml.XamlType" />, usando o contexto especificado.</summary>
      <param name="context">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="sourceType">O tipo que está sendo avaliado para conversão.</param>
      <returns>
        <see langword="true" /> se esse conversor puder realizar a operação, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se uma instância do <see cref="T:System.Xaml.XamlType" /> pode ser convertida no tipo especificado, usando o contexto especificado.</summary>
      <param name="context">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="destinationType">O tipo que está sendo avaliado para conversão.</param>
      <returns>
        <see langword="true" /> se esse conversor puder realizar a operação, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tenta converter o objeto especificado em um <see cref="T:System.Xaml.XamlType" />, usando o contexto especificado.</summary>
      <param name="context">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="culture">Informações específicas da cultura.</param>
      <param name="value">O objeto a ser convertido.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> não pode ser convertido.</exception>
      <returns>O objeto convertido.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tenta converter um <see cref="T:System.Xaml.XamlType" /> no tipo especificado, usando o contexto especificado.</summary>
      <param name="context">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="culture">Informações específicas da cultura.</param>
      <param name="value">O objeto a ser convertido.</param>
      <param name="destinationType">O tipo no qual converter o objeto.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> não pode ser convertido.</exception>
      <returns>O objeto convertido.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlValueConverter`1">
      <summary>Fornece uma superfície de API comum para técnicas que geram valores de serialização ou de inicialização para o XAML baseado em uma entrada que não seja o tipo de destino eventual. Isso inclui extensões de marcação e conversores de tipo.</summary>
      <typeparam name="TConverterBase">A classe base CLR para o conversor específico que isso <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> representa. Normalmente, este é um dos seguintes: <see cref="T:System.ComponentModel.TypeConverter" /> ; <see cref="T:System.Windows.Markup.MarkupExtension" /> ; <see cref="T:System.Windows.Markup.ValueSerializer" /> ;</typeparam>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, com base em um conversor que implementa <see cref="T:System.Type" /> e o tipo de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <param name="converterType">O <see cref="T:System.Type" /> que implementa o comportamento do conversor.</param>
      <param name="targetType">O <see cref="T:System.Xaml.XamlType" /> de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, com base em um conversor que implementa <see cref="T:System.Type" />, o tipo de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e um nome de cadeia de caracteres.</summary>
      <param name="converterType">O <see cref="T:System.Type" /> que implementa o comportamento do conversor.</param>
      <param name="targetType">O <see cref="T:System.Xaml.XamlType" /> de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
      <param name="name">O nome da cadeia de caracteres.</param>
      <exception cref="T:System.ArgumentException">Todos os três parâmetros são <see langword="null" /> (pelo menos um deve ser não nulo).</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
      <summary>Retorna uma instância da implementação do conversor.</summary>
      <exception cref="T:System.Xaml.XamlSchemaException">O conversor não implementou o tipo de base correto.</exception>
      <returns>Uma instância da implementação do conversor ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
      <summary>Determina se esta instância do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e um objeto especificado, que também deve ser um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, têm o mesmo valor.</summary>
      <param name="obj">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> for um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e seu valor for o mesmo que o dessa instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
      <summary>Determina se esta instância do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e outro objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> têm o mesmo valor.</summary>
      <param name="other">O <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> de comparação.</param>
      <returns>
        <see langword="true" /> se <paramref name="other" /> for um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e seu valor for o mesmo que o dessa instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
      <summary>Retorna o código hash para este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>Um código hash inteiro.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary>Determina se dois objetos <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> especificados têm o mesmo valor.</summary>
      <param name="converter1">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <param name="converter2">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se o valor de <paramref name="converter1" /> for o mesmo que o valor de <paramref name="converter2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary>Determina se dois objetos <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> especificados têm valores diferentes.</summary>
      <param name="converter1">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <param name="converter2">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se o valor de <paramref name="converter1" /> for diferente do valor de <paramref name="converter2" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
      <summary>Retorna uma <see cref="T:System.String" /> que representa este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>Uma <see cref="T:System.String" /> que representa este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
      <summary>Obtém uma instância criada da implementação do conversor.</summary>
      <returns>Uma instância criada da implementação do conversor ou <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
      <summary>Obtém o <see cref="T:System.Type" /> para a classe que implementa o comportamento do conversor.</summary>
      <returns>O <see cref="T:System.Type" /> para a classe que implementa o comportamento do conversor.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.Name">
      <summary>Obtém um nome de cadeia de caracteres para este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>Um nome de cadeia de caracteres para isso <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> .</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
      <summary>Obtém o <see cref="T:System.Xaml.XamlType" /> de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>O <see cref="T:System.Xaml.XamlType" /> de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlBackgroundReader">
      <summary>Implementa um <see cref="T:System.Xaml.XamlReader" /> de buffer duplo que pode dividir a leitura e a gravação em threads diferentes.</summary>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlBackgroundReader" />.</summary>
      <param name="wrappedReader">O <see cref="T:System.Xaml.XamlReader" /> no qual este <see cref="T:System.Xaml.XamlBackgroundReader" /> se baseia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wrappedReader" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Xaml.XamlBackgroundReader" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados, caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Read">
      <summary>Fornecerá o próximo nó XAML de origem, se um nó estiver disponível.</summary>
      <returns>
        <see langword="true" /> se um nó estiver disponível; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread">
      <summary>Cria e inicia um novo <see cref="T:System.Threading.Thread" /> (construído usando o <see cref="T:System.Threading.ParameterizedThreadStart" />) que manipula um thread nomeado para o <see cref="T:System.Xaml.XamlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">O thread já foi iniciado.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
      <summary>Cria e inicia um novo <see cref="T:System.Threading.Thread" /> (construído usando o <see cref="T:System.Threading.ParameterizedThreadStart" />) que manipula um thread nomeado para o <see cref="T:System.Xaml.XamlReader" />. Você pode especificar o nome de thread como um parâmetro.</summary>
      <param name="threadName">O nome do thread.</param>
      <exception cref="T:System.InvalidOperationException">O thread já foi iniciado.</exception>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.HasLineInfo">
      <summary>Obtém um valor que especifica se as informações da linha estão disponíveis.</summary>
      <returns>
        <see langword="true" /> Se as informações de linha estiverem disponíveis; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.IsEof">
      <summary>Obtém um valor que informa se a posição do leitor está no fim do arquivo.</summary>
      <returns>
        <see langword="true" /> se a posição estiver no final do arquivo; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LineNumber">
      <summary>Obtém o número de linha a ser relatado.</summary>
      <returns>O número de linha a ser relatado.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LinePosition">
      <summary>Obtém a posição da linha a ser relatada.</summary>
      <returns>A posição da linha a ser relatada.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Member">
      <summary>Obterá o membro atual na posição do leitor, se a posição do leitor estiver em um <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>O membro atual; ou <see langword="null" /> , se a posição não estiver em um membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Namespace">
      <summary>Obtém o namespace de XAML do nó atual.</summary>
      <returns>O namespace XAML, se estiver disponível; caso contrário, <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>Um valor da enumeração <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.SchemaContext">
      <summary>Obtém um objeto que fornece informações de contexto de esquema para o conjunto de informações.</summary>
      <returns>Um objeto que fornece informações de contexto de esquema para o conjunto de informações.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Type">
      <summary>Obtém o <see cref="T:System.Xaml.XamlType" /> do nó atual.</summary>
      <returns>O <see cref="T:System.Xaml.XamlType" /> do nó atual; ou <see langword="null" /> , se a posição atual do leitor não estiver em um objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Value">
      <summary>Obtém o valor do nó atual.</summary>
      <returns>O valor do nó atual; ou <see langword="null" /> , se a posição atual do leitor não estiver em um <see cref="F:System.Xaml.XamlNodeType.Value" /> tipo de nó.</returns>
    </member>
    <member name="T:System.Xaml.XamlDeferringLoader">
      <summary>Representa um comportamento do leitor de XAML que carrega e retorna o conteúdo adiado.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDeferringLoader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary>Carrega o conteúdo XAML em um modo adiado, que se baseia em um <see cref="T:System.Xaml.XamlReader" /> e em certos serviços necessários de um provedor de serviços.</summary>
      <param name="xamlReader">O leitor inicial que é retornado em chamadas para <see cref="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)" />.</param>
      <param name="serviceProvider">O provedor de serviços para os serviços necessários.</param>
      <returns>O objeto raiz que é produzido pelo <see cref="T:System.Xaml.XamlReader" /> de entrada.</returns>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)">
      <summary>Confirma um valor para o carregamento adiado.</summary>
      <param name="value">O valor de entrada a ser confirmado para o carregamento adiado.</param>
      <param name="serviceProvider">O provedor de serviços para os serviços necessários.</param>
      <returns>Um leitor de XAML que pode ser usado para obter o valor adiado como informações do nó XAML.</returns>
    </member>
    <member name="T:System.Xaml.XamlDirective">
      <summary>Fornece o identificador do sistema tipo XAML para um membro se o membro também for uma diretiva XAML. Leitores XAML e gravadores XAML usam o identificador <see cref="T:System.Xaml.XamlDirective" /> durante o processamento de nós membro. O identificador é usado quando o leitor XAML é posicionado em um <see cref="F:System.Xaml.XamlNodeType.StartMember" /> e <see cref="P:System.Xaml.XamlMember.IsDirective" /> é <see langword="true" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDirective" />, especificando valores para cada valor por caso de um <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <param name="xamlNamespaces">Um conjunto de namespaces XAML em que este <see cref="T:System.Xaml.XamlDirective" /> pode existir, passado como um conjunto enumerável de cadeias de caracteres identificadoras.</param>
      <param name="name">O nome de identificação do <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="xamlType">O tipo de XAML que faz o <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="typeConverter">O conversor de tipo que este <see cref="T:System.Xaml.XamlDirective" /> usa para conversão de sintaxe do texto.</param>
      <param name="allowedLocation">Um valor da enumeração <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="xamlType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDirective" />, especificando valores para um nome e um namespace XAML único. Use esta assinatura somente quando você quiser ou esperar que <see cref="P:System.Xaml.XamlMember.IsUnknown" /> relate <see langword="true" /> para a diretiva.</summary>
      <param name="xamlNamespace">O namespace XAML primário em que este <see cref="T:System.Xaml.XamlDirective" /> pode existir.</param>
      <param name="name">O nome de identificação do <see cref="T:System.Xaml.XamlDirective" />.</param>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetHashCode">
      <summary>Retorna o código hash deste objeto.</summary>
      <returns>Um código hash inteiro.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetXamlNamespaces">
      <summary>Retorna uma lista de namespaces XAML em que esse membro XAML pode existir.</summary>
      <returns>Uma lista de identificadores de namespace XAML, como cadeias de caracteres.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
      <summary>Retorna um implementação de <see cref="T:System.Reflection.ICustomAttributeProvider" />. Essa implementação sempre retorna <see langword="null" />.</summary>
      <returns>Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDeferringLoader">
      <summary>Retorna um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado durante o carregamento adiado de objetos declarados em XAML. Essa implementação sempre retorna <see langword="null" />.</summary>
      <returns>Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDependsOn">
      <summary>Retorna uma lista de objetos <see cref="T:System.Xaml.XamlMember" />. A lista relata os membros em que há relações de dependência para a ordem de inicialização em relação a esse <see cref="T:System.Xaml.XamlMember" />. Essa implementação sempre retorna <see langword="null" />.</summary>
      <returns>Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupInvoker">
      <summary>Retorna o <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que é associado a um <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns>As informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> para este <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsAmbient">
      <summary>Retorna se este <see cref="T:System.Xaml.XamlMember" /> é relatado como uma propriedade de ambiente.</summary>
      <returns>Sempre retorna <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsEvent">
      <summary>Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa um evento.</summary>
      <returns>Sempre retorna <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadOnly">
      <summary>Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa uma propriedade somente leitura pretendida.</summary>
      <returns>Sempre retorna <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadPublic">
      <summary>Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa uma propriedade que tem um acessador <see langword="get" /> público.</summary>
      <returns>Sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsUnknown">
      <summary>Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa um membro que não pode ser resolvido pelo sistema de backup que é usado para a resolução de tipo e membro.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlDirective" /> representar um membro não pode ser resolvido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
      <summary>Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa uma propriedade somente gravação pretendida.</summary>
      <returns>Sempre retorna <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWritePublic">
      <summary>Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa uma propriedade que tem um acessador <see langword="set" /> público.</summary>
      <returns>Sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTargetType">
      <summary>Retorna o <see cref="T:System.Xaml.XamlType" /> do tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir. Essa implementação sempre retorna <see langword="null" />.</summary>
      <returns>Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupType">
      <summary>Retorna o <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</summary>
      <returns>O <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTypeConverter">
      <summary>Retorna uma implementação do conversos de tipo associado a este <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns>Uma instância de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.ComponentModel.TypeConverter" />; ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
      <summary>Retorna um acessador <see langword="get" /> associado a este <see cref="T:System.Xaml.XamlDirective" />. Essa implementação sempre retorna <see langword="null" />.</summary>
      <returns>Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
      <summary>Retorna um reflexo de CLR <see cref="T:System.Reflection.MemberInfo" /> associado a este <see cref="T:System.Xaml.XamlDirective" />. Essa implementação sempre retorna <see langword="null" />.</summary>
      <returns>Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
      <summary>Retorna um acessador <see langword="set" /> associado a este <see cref="T:System.Xaml.XamlDirective" />. Essa implementação sempre retorna <see langword="null" />.</summary>
      <returns>Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.ToString">
      <summary>Retorna uma representação de cadeia de caracteres desse <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns>Uma representação da cadeia de caracteres deste <see cref="T:System.Xaml.XamlDirective" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlDirective.AllowedLocation">
      <summary>Obtém um valor que especifica os tipos de nó XAML em que a diretiva pode ser especificada.</summary>
      <returns>Um valor da enumeração. O padrão é o padrão de enumeração, que é <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" /> .</returns>
    </member>
    <member name="T:System.Xaml.XamlDuplicateMemberException">
      <summary>A exceção que é gerada quando um gravador de XAML tenta gravar um valor para um membro duplicado no mesmo nó do objeto.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> com dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
      <param name="innerException">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> com as informações relevantes de membro e tipo a serem relatadas.</summary>
      <param name="member">O identificador de membro XAML a ser relatado.</param>
      <param name="type">O identificador de tipo XAML a ser relatado como o tipo pai.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> com dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.DuplicateMember">
      <summary>Obtém ou define o identificador de membro XAML da propriedade a ser relatado como uma duplicação.</summary>
      <returns>O <see cref="T:System.Xaml.XamlMember" /> objeto (identificador de membro XAML) a ser relatado.</returns>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.ParentType">
      <summary>Obtém ou define o identificador de tipo XAML a ser relatado como o tipo pai.</summary>
      <returns>O <see cref="T:System.Xaml.XamlType" /> objeto (identificador de tipo XAML) a ser relatado como o tipo pai.</returns>
    </member>
    <member name="T:System.Xaml.XamlException">
      <summary>A exceção lançada para um leitor XAML geral ou a exceção de gravador XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlException" />. A instância contém uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlException" /> com dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlException" />. A instância contém uma mensagem especificada que descreve o erro.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador desse construtor deve garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlException" />. A instância contém uma mensagem de erro especificada e uma referência à exceção interna que é a causa dessa exceção.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador desse construtor deve garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
      <param name="innerException">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlException" />. A instância contém uma mensagem de erro especificada, a exceção interna e informações de linha.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador desse construtor deve garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
      <param name="innerException">A exceção que é a causa da exceção atual.</param>
      <param name="lineNumber">O número de linha a ser relatado para a depuração ou para os consumidores de informações de linha.</param>
      <param name="linePosition">A posição da linha a ser relatada para a depuração ou para os consumidores de informações de linha.</param>
    </member>
    <member name="M:System.Xaml.XamlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementa <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> e fornece suporte de serialização para os dados de informações de linha.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlException.LineNumber">
      <summary>Obtém ou define o componente de número de linha de informações de linha do texto XAML que a exceção relata.</summary>
      <returns>O componente de número de linha das informações de linha de texto XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.LinePosition">
      <summary>Obtém ou define o componente de posição de linha de informações de linha do texto XAML que a exceção relata.</summary>
      <returns>O componente de posição de linha das informações de linha de texto XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.Message">
      <summary>Obtém ou define a mensagem de exceção e, se houver informações de linha disponíveis, acrescenta as informações de linha à mensagem.</summary>
      <returns>A mensagem de exceção que inclui as informações de linha acrescentadas.</returns>
    </member>
    <member name="T:System.Xaml.XamlInternalException">
      <summary>A exceção que é gerada para inconsistências internas que ocorrem durante a leitura e a gravação de XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlInternalException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlInternalException" /> com dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlInternalException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message">A mensagem que descreve a exceção.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlInternalException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem que descreve a exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Xaml.XamlLanguage">
      <summary>Define constantes que fornecem cadeias de caracteres ou objetos que são úteis para marcação XAML ou para programação com tipos XAML. Essas cadeias de caracteres ou objetos são relevantes para conceitos de linguagem XAML, para a implementação dos conceitos de linguagem XAML em Serviços XAML do .NET Framework ou para ambos.</summary>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xaml2006Namespace">
      <summary>Obtém um valor de cadeia de caracteres para a cadeia de caracteres que identifica o namespace da linguagem XAML (2006). Esse namespace corresponde ao XAML (2006) "x" namespace prefixado conforme definido na seção [MS-XAML] 5.1.1.</summary>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xml1998Namespace">
      <summary>Obtém um valor de cadeia de caracteres para a cadeia de caracteres que identifica o namespace da linguagem XML (1998). Esse namespace corresponde ao namespace prefixado XML "XML" como referenciado na seção [MS-XAML] 5.1.2.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllDirectives">
      <summary>Obtém uma coleção genérica somente leitura de cada identificador <see cref="T:System.Xaml.XamlDirective" /> definido por Serviços XAML do .NET Framework.</summary>
      <returns>Uma coleção genérica somente leitura de cada <see cref="T:System.Xaml.XamlDirective" /> identificador que é definido por .NET Framework serviços XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllTypes">
      <summary>Obtém uma coleção genérica somente leitura dos valores de <see cref="T:System.Xaml.XamlType" /> individuais que são correspondentes ou o alias, de uma linguagem XAML intrínseca que é definida pelos Serviços XAML do .NET Framework.</summary>
      <returns>Uma coleção genérica somente leitura de cada <see cref="T:System.Xaml.XamlType" /> que corresponde a uma linguagem XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Arguments">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para o <see langword="Arguments" /> de um método de fábrica ou um uso genérico.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para o <see langword="Arguments" /> de um método de fábrica ou uso genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Array">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Array" /> intrínseco da linguagem XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Array" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AsyncRecords">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para o pseudomembro <see langword="AsyncRecords" />.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para o <see langword="AsyncRecords" /> pseudomember.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Base">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="base" /> do XML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="base" /> diretiva do XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Boolean">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Boolean" /> intrínseco da linguagem XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Boolean" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Byte">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Byte" /> intrínseco da linguagem XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Byte" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Char">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Char" /> intrínseco da linguagem XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Char" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Class">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Class" /> do XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Class" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassAttributes">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="ClassAttributes" /> do XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="ClassAttributes" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassModifier">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="ClassModifier" /> do XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="ClassModifier" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Code">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para <see langword="Code" /> conforme detalhado em [MS-XAML].</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para <see langword="Code" /> , conforme detalhado em [MS-XAML].</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ConnectionId">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> que identifica um ponto de conexão para conectar eventos a manipuladores.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> que identifica um ponto de conexão para conectar eventos a manipuladores.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Decimal">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Decimal" /> intrínseco da linguagem XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Decimal" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Double">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Double" /> intrínseco da linguagem XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Double" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FactoryMethod">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> que identifica um método de fábrica para XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> que identifica um método de fábrica para XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FieldModifier">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="FieldModifier" /> do XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="FieldModifier" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Initialization">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Initialization" /> do XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Initialization" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int16">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see cref="T:System.Int16" /> intrínseco da linguagem XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para a <see cref="T:System.Int16" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int32">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see cref="T:System.Int32" /> intrínseco da linguagem XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para a <see cref="T:System.Int32" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int64">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see cref="T:System.Int64" /> intrínseco da linguagem XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para a <see cref="T:System.Int64" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Items">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Items" /> do XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Items" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Key">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Key" /> do XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Key" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Lang">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="lang" /> do XML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="lang" /> diretiva do XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Member">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o tipo que é o tipo de item de <see cref="P:System.Xaml.XamlLanguage.Members" />.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para o tipo que é o tipo de item <see cref="P:System.Xaml.XamlLanguage.Members" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Members">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para o conceito <see langword="Members" /> no XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para o <see langword="Members" /> conceito em XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Name">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Name" /> do XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Name" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Null">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Null" /> ou <see langword="NullExtension" /> intrínseco da linguagem XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Null" /> / <see langword="NullExtension" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Object">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o conceito de linguagem XAML <see langword="Object" />.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Object" /> conceito de linguagem XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.PositionalParameters">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="PositionalParameters" /> do XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="PositionalParameters" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Property">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o conceito <see langword="Property" /> no XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Property" /> conceito em XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Reference">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> que representa um <see langword="Reference" /> para XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> que representa um <see langword="Reference" /> para XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Shared">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Shared" /> para XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Shared" /> diretiva para XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Single">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para a linguagem <c>única</c> do XAML intrínseca.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para a linguagem <c>única</c> de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Space">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="space" /> do XML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="space" /> diretiva do XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Static">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Static" />/<see langword="StaticExtension" /> intrínseco da linguagem XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Static" /> / <see langword="StaticExtension" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.String">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="String" /> intrínseco da linguagem XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="String" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Subclass">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Subclass" /> do XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Subclass" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.SynchronousMode">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> que permite o carregamento do XAML de forma assíncrona se o processador XAML der suporte a esse modo.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> que permite carregar XAML de forma assíncrona.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TimeSpan">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o conceito <see langword="TimeSpan" /> na linguagem XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para o <see langword="TimeSpan" /> conceito de linguagem XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Type">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Type" />/<see langword="TypeExtension" /> intrínseco da linguagem XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Type" /> / <see langword="TypeExtension" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TypeArguments">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="TypeArguments" /> do XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="TypeArguments" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uid">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Uid" /> do XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Uid" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.UnknownContent">
      <summary>Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="UnknownContent" /> do XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="UnknownContent" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uri">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o conceito de linguagem XAML <see langword="Uri" />.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Uri" /> conceito de linguagem XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XamlNamespaces">
      <summary>Obtém uma coleção de identificadores de namespace de XAML.</summary>
      <returns>Uma coleção de identificadores de namespace para XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XData">
      <summary>Obtém um <see cref="T:System.Xaml.XamlType" /> para o tipo XAML que faz o backup de um bloco <see langword="XData" /> em XAML.</summary>
      <returns>O <see cref="T:System.Xaml.XamlType" /> para o tipo XAML que faz o backup de um <see langword="XData" /> bloco. Consulte a seção [MS-XAML] 5.2.23.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XmlNamespaces">
      <summary>Obtém uma coleção de identificadores de namespace de XML.</summary>
      <returns>Uma coleção de identificadores de namespace para XML.</returns>
    </member>
    <member name="T:System.Xaml.XamlMember">
      <summary>Fornece o identificador do sistema de tipo XAML para membros de tipos de XAML. O identificador é usado por leitores de XAML e gravadores de XAML durante o processamento de nós de membros (quando o leitor de XAML está posicionado em um <see cref="F:System.Xaml.XamlNodeType.StartMember" />) e também para a lógica de sistema do tipo XAML geral.</summary>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o <see cref="T:System.Reflection.EventInfo" /> do sistema de tipo CLR e um <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="eventInfo">O <see cref="T:System.Reflection.EventInfo" /> do sistema do tipo CLR que representa o membro de evento.</param>
      <param name="schemaContext">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o <see cref="T:System.Reflection.EventInfo" /> do sistema de tipo CLR e um <see cref="T:System.Xaml.XamlSchemaContext" />, incluindo informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="eventInfo">O <see cref="T:System.Reflection.EventInfo" /> do sistema do tipo CLR que representa o membro de evento.</param>
      <param name="schemaContext">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
      <param name="invoker">A implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que manipula a reflexão de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o <see cref="T:System.Reflection.PropertyInfo" /> do sistema de tipo CLR e um <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="propertyInfo">O <see cref="T:System.Reflection.PropertyInfo" /> do sistema do tipo CLR que representa o membro de propriedade.</param>
      <param name="schemaContext">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o <see cref="T:System.Reflection.PropertyInfo" /> de reflexão e um <see cref="T:System.Xaml.XamlSchemaContext" />, incluindo informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="propertyInfo">O <see cref="T:System.Reflection.PropertyInfo" /> do sistema do tipo CLR que representa o membro de propriedade.</param>
      <param name="schemaContext">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
      <param name="invoker">A implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que manipula a invocação de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> para um <see cref="T:System.Xaml.XamlMember" /> que representa uma propriedade anexável.</summary>
      <param name="attachablePropertyName">O nome da cadeia de caracteres da propriedade anexável.</param>
      <param name="getter">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do acessador <see langword="get" /> da implementação de suporte do membro anexável.</param>
      <param name="setter">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do acessador <see langword="set" /> da implementação de suporte do membro anexável.</param>
      <param name="schemaContext">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> para um <see cref="T:System.Xaml.XamlMember" /> que representa uma propriedade anexável, incluindo informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachablePropertyName">O nome da cadeia de caracteres da propriedade anexável.</param>
      <param name="getter">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do acessador <see langword="get" /> da implementação de suporte do membro anexável.</param>
      <param name="setter">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do acessador <see langword="set" /> da implementação de suporte do membro anexável.</param>
      <param name="schemaContext">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
      <param name="invoker">A implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que manipula a invocação de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> para um <see cref="T:System.Xaml.XamlMember" /> que representa um evento anexável.</summary>
      <param name="attachableEventName">O nome da cadeia de caracteres do evento anexável.</param>
      <param name="adder">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do método <see langword="Add" /> do manipulador da implementação de suporte do membro anexável.</param>
      <param name="schemaContext">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> para um <see cref="T:System.Xaml.XamlMember" /> que representa um evento anexável, incluindo informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachableEventName">O nome da cadeia de caracteres do evento anexável.</param>
      <param name="adder">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do método <see langword="Add" /> do manipulador da implementação de suporte do membro anexável.</param>
      <param name="schemaContext">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
      <param name="invoker">A implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que manipula a invocação de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o nome da cadeia de caracteres e as informações de <see cref="T:System.Xaml.XamlType" /> declarativo. Um <see cref="T:System.Xaml.XamlMember" /> que é construído com esta assinatura tem limitações significativas.</summary>
      <param name="name">O nome da cadeia de caracteres do membro.</param>
      <param name="declaringType">As informações de <see cref="T:System.Xaml.XamlType" /> para o tipo declarativo.</param>
      <param name="isAttachable">
        <see langword="true" /> para indicar que o membro anexável, caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <paramref name="declaringType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Object)">
      <summary>Indica se o objeto atual é igual a outro objeto.</summary>
      <param name="obj">O objeto a ser comparado com este objeto.</param>
      <returns>
        <see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="obj" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)">
      <summary>Indica se o objeto atual é igual a outro objeto do mesmo tipo.</summary>
      <param name="other">Um objeto para comparação com esse objeto.</param>
      <returns>
        <see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="other" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetHashCode">
      <summary>Retorna o código hash deste objeto.</summary>
      <returns>Um código hash inteiro.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetXamlNamespaces">
      <summary>Retorna uma lista de namespaces XAML em que esse membro XAML pode existir.</summary>
      <returns>Uma lista de identificadores de namespace XAML como cadeias de caracteres.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
      <summary>Quando implementado em uma classe derivada, retorna uma implementação <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns>Uma implementação <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDeferringLoader">
      <summary>Retorna um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado para o carregamento adiado de objetos declarados em XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.Xaml.XamlDeferringLoader" /> sobre o genérico.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDependsOn">
      <summary>Retorna uma lista de objetos <see cref="T:System.Xaml.XamlMember" />. Os itens na lista relatam os membros em que há relações de dependência para a ordem de inicialização em relação a esse <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Uma lista de objetos <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupInvoker">
      <summary>Retorna um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que é associado a esse <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>As informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> para este <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsAmbient">
      <summary>Retorna se este <see cref="T:System.Xaml.XamlMember" /> é relatado como uma propriedade de ambiente.</summary>
      <returns>
        <see langword="true" /> para relatar este <see cref="T:System.Xaml.XamlMember" /> como uma propriedade de ambiente, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsEvent">
      <summary>Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa um evento.</summary>
      <returns>
        <see langword="true" /> para relatar que este <see cref="T:System.Xaml.XamlMember" /> representa um evento, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadOnly">
      <summary>Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa uma propriedade somente leitura pretendida.</summary>
      <returns>
        <see langword="true" /> para relatar este <see cref="T:System.Xaml.XamlMember" /> como uma propriedade somente leitura pretendida, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadPublic">
      <summary>Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa uma propriedade que tem um acessador <see langword="get" /> público.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representa uma propriedade que tem um acessador público <see langword="get" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsUnknown">
      <summary>Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa um membro que não pode ser resolvido pelo sistema de backup que é usado para a resolução de tipo e membro.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representar um membro não pode ser resolvido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWriteOnly">
      <summary>Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa um membro que tem um acessador <see langword="set" /> público, mas não um acessador <see langword="get" /> público.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representar um membro somente gravação, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWritePublic">
      <summary>Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa um membro de que tem um acessador <see langword="set" /> público.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representar um membro gravável, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters">
      <summary>Retorna os caracteres de colchete de abertura e fechamento de uma extensão de marcação.</summary>
      <returns>Uma coleção que contém os caracteres de colchete de abertura e fechamento.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTargetType">
      <summary>Retorna o <see cref="T:System.Xaml.XamlType" /> do tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir.</summary>
      <returns>O tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupType">
      <summary>Retorna o <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</summary>
      <returns>O <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTypeConverter">
      <summary>Retorna uma implementação do conversos de tipo associado a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Uma instância <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com a restrição <see cref="T:System.ComponentModel.TypeConverter" /> ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
      <summary>Retorna um acessador <see langword="get" /> associado a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>O <see cref="T:System.Reflection.MethodInfo" /> para o acessador <see langword="get" /> associado ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingMember">
      <summary>Retorna um <see cref="T:System.Reflection.MemberInfo" /> do sistema de tipo CLR que está associado a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Cria um objeto <see cref="T:System.Reflection.MemberInfo" /> do sistema de tipo CLR que está associado a este <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
      <summary>Retorna um acessador <see langword="set" /> associado a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>O <see cref="T:System.Reflection.MethodInfo" /> para o acessador <see langword="set" /> associado ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupValueSerializer">
      <summary>Retorna uma implementação do serializador de valor que está associado a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Uma instância <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com a restrição <see cref="T:System.Windows.Markup.ValueSerializer" /> ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary>Determina se dois objetos <see cref="T:System.Xaml.XamlMember" /> especificados têm o mesmo valor.</summary>
      <param name="xamlMember1">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <param name="xamlMember2">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se o valor de <paramref name="xamlMember1" /> for o mesmo que o valor de <paramref name="xamlMember2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary>Determina se dois objetos <see cref="T:System.Xaml.XamlMember" /> especificados têm valores diferentes.</summary>
      <param name="xamlMember1">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <param name="xamlMember2">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se o valor de <paramref name="xamlMember1" /> for diferente do valor de <paramref name="xamlMember2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.ToString">
      <summary>Retorna uma representação de cadeia de caracteres desse <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Uma representação da cadeia de caracteres deste <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DeclaringType">
      <summary>Obtém o <see cref="T:System.Xaml.XamlType" /> para o tipo que declara o membro que é associado a esse <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>O <see cref="T:System.Xaml.XamlType" /> para o tipo que declara o membro que está associado a isso <see cref="T:System.Xaml.XamlMember" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DeferringLoader">
      <summary>Obtém um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado para o carregamento adiado de objetos declarados em XAML.</summary>
      <returns>Uma <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /><see cref="T:System.Xaml.XamlDeferringLoader" /> restrição with no genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DependsOn">
      <summary>Obtém uma lista de objetos <see cref="T:System.Xaml.XamlMember" />. Eles relatam os membros em que há relações de dependência para a ordem de inicialização em relação a esse <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Uma lista de objetos <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Invoker">
      <summary>Obtém a implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que está associada a esse <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>A <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementação associada a isso <see cref="T:System.Xaml.XamlMember" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAmbient">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> é relatado como uma propriedade de ambiente.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlMember" /> for relatado como uma propriedade de ambiente; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAttachable">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> é um membro anexável.</summary>
      <returns>
        <see langword="true" /> Se esse <see cref="T:System.Xaml.XamlMember" /> for um membro anexável; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsDirective">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> é uma diretiva XAML.</summary>
      <returns>
        <see langword="true" /> Se esta <see cref="T:System.Xaml.XamlMember" /> for uma diretiva XAML; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsEvent">
      <summary>Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlMember" /> representa um membro de evento.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlMember" /> representar um evento; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsNameValid">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> é inicializado com uma cadeia de caracteres <see langword="xamlName" /> válida como seu <see cref="P:System.Xaml.XamlMember.Name" />.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlMember" /> for inicializado com uma <see langword="xamlName" /> cadeia de caracteres válida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadOnly">
      <summary>Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlMember" /> representa um membro somente leitura.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlMember" /> representar um membro somente leitura; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadPublic">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> representa um membro com um acessador <see langword="get" /> público chamável.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlMember" /> representar um acessador público que possa ser chamado <see langword="get" /> ; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsUnknown">
      <summary>Obtém um valor que indica se o membro não pode ser resolvido pelo sistema de backup que é usado para a resolução de membro e de tipo.</summary>
      <returns>
        <see langword="true" /> Se o membro não puder ser resolvido; <see langword="false" /> se o membro puder ser resolvido.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWriteOnly">
      <summary>Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlMember" /> representa um membro somente gravação.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representar um membro somente gravação, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWritePublic">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> representa um membro que tem um acessador <see langword="set" /> público chamável.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlMember" /> representar um acessador público que possa ser chamado <see langword="set" /> ; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters">
      <summary>Define os caracteres de colchete de abertura e fechamento de uma extensão de marcação.</summary>
      <returns>Uma coleção que contém os caracteres de colchete de abertura e fechamento.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Name">
      <summary>Obtém o nome de cadeia de caracteres <see langword="xamlName" /> que declara este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>A <see langword="xamlName" /> cadeia de caracteres de nome que declara isso <see cref="T:System.Xaml.XamlMember" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.PreferredXamlNamespace">
      <summary>Obtém o único URI de namespace de XAML que identifica o namespace de XAML primário para este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>O identificador para o namespace XAML primário para isso <see cref="T:System.Xaml.XamlMember" /> , como uma cadeia de caracteres.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.SerializationVisibility">
      <summary>Obtém um valor <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />, que indica como um designer visual deve processar o membro.</summary>
      <returns>Um valor da enumeração <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. O padrão é <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TargetType">
      <summary>Obtém o <see cref="T:System.Xaml.XamlType" /> do tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir.</summary>
      <returns>O tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Type">
      <summary>Obtém o <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</summary>
      <returns>O <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TypeConverter">
      <summary>Obtém um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que pode ser usado para a construção de conversão de tipo de objetos declarados XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> valor, com uma <see cref="T:System.ComponentModel.TypeConverter" /> restrição no genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.UnderlyingMember">
      <summary>Obtém o <see cref="T:System.Reflection.MemberInfo" /> do sistema do tipo CLR que está disponível para um membro que é criado por <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> ou <see cref="T:System.Reflection.EventInfo" />.</summary>
      <returns>Informações do sistema do tipo CLR <see cref="T:System.Reflection.MemberInfo" /> , como conversão dos parâmetros do Construtor inicial. Um <see cref="T:System.Xaml.XamlMember" /> que é construído com a <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> assinatura retorna <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.ValueSerializer">
      <summary>Obtém um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado para a serialização de valor de objetos declarados XAML.</summary>
      <returns>Uma <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /><see cref="T:System.Windows.Markup.ValueSerializer" /> restrição with no genérico.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeList">
      <summary>Fornece uma lista de nós XAML, que podem ser usados para cenários como gravar nós XAML de forma adiada.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlNodeList" /> usando um contexto de esquema fornecido.</summary>
      <param name="schemaContext">O contexto do esquema a ser usado para operações de nó.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlNodeList" /> usando um contexto de esquema e um tamanho de lista fornecidos.</summary>
      <param name="schemaContext">O contexto do esquema a ser usado para operações de nó.</param>
      <param name="size">A contagem do item desejado na lista.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.Clear">
      <summary>Limpa os itens nessa lista.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeList.GetReader">
      <summary>Retorna um representante de implementação de leitor de XAML.</summary>
      <exception cref="T:System.Xaml.XamlException">A <see cref="T:System.Xaml.XamlNodeList" /> ainda está no modo de gravação.  
  
- ou - 
O gravador usado para a lista de nós não tem nenhum contexto de esquema.</exception>
      <returns>Um representante de implementação de leitor de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Count">
      <summary>Obtém o número de nós nesta <see cref="T:System.Xaml.XamlNodeList" />.</summary>
      <returns>O número de nós neste <see cref="T:System.Xaml.XamlNodeList" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Writer">
      <summary>Obtém o gravador de XAML associado.</summary>
      <returns>O gravador XAML associado.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeQueue">
      <summary>Fornece um buffer para gravar nós e lê-los novamente.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlNodeQueue" /> usando um contexto de esquema XAML fornecido.</summary>
      <param name="schemaContext">O contexto do esquema a ser usado para operações de nó.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlSchemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Count">
      <summary>Obtém o número de nós no <see cref="T:System.Xaml.XamlNodeQueue" />.</summary>
      <returns>O número de nós no <see cref="T:System.Xaml.XamlNodeQueue" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.IsEmpty">
      <summary>Obtém um valor que determina se esta <see cref="T:System.Xaml.XamlNodeQueue" /> não contém nós.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlNodeQueue" /> não contiver nós, <see langword="false" /> se ele <see cref="T:System.Xaml.XamlNodeQueue" /> contiver nós.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Reader">
      <summary>Obtém um representante de implementação de leitor de XAML.</summary>
      <exception cref="T:System.Xaml.XamlException">O gravador de XAML que é usado para a lista de nós não tem nenhum contexto de esquema XAML válido.</exception>
      <returns>Um representante de implementação de leitor de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Writer">
      <summary>Obtém o gravador de XAML associado.</summary>
      <returns>O gravador XAML associado.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeType">
      <summary>Descreve o tipo do nó que está sendo processado por um leitor XAML no momento.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndMember">
      <summary>O leitor está no final de um nó de membro.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndObject">
      <summary>O leitor está no final de um nó de objeto.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.GetObject">
      <summary>O leitor está dentro de um nó de objeto e gravando um valor padrão ou implícito, em vez de ser um valor de objeto especificado.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.NamespaceDeclaration">
      <summary>O leitor está dentro de uma declaração de namespace de XML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.None">
      <summary>O leitor não está posicionado em um nó verdadeiro (por exemplo, o leitor pode estar no fim do arquivo).</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartMember">
      <summary>O leitor está no início de um nó de membro.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartObject">
      <summary>O leitor está no início de um nó de objeto.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.Value">
      <summary>O leitor está dentro de um nó e processando um valor.</summary>
    </member>
    <member name="T:System.Xaml.XamlObjectEventArgs">
      <summary>Fornece dados para retornos de chamada que podem ser inseridos na sequência para inicialização de objeto e configuração de propriedade. Isso influencia o gráfico de objeto que é produzido pelo <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectEventArgs.#ctor(System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectEventArgs" />.</summary>
      <param name="instance">A instância do objeto que é relevante para os dados do evento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLineNumber">
      <summary>Obtém ou define o número de linha da instância do objeto relevante.</summary>
      <returns>O número de linha do elemento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLinePosition">
      <summary>Obtém ou define a posição na linha da instância do objeto relevante.</summary>
      <returns>A posição na linha do elemento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.Instance">
      <summary>Obtém a instância do objeto que é relevante para os dados do evento.</summary>
      <returns>A instância do objeto que é relevante para os dados do evento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.SourceBamlUri">
      <summary>Obtém ou define o URI de BAML da instância do objeto relevante.</summary>
      <returns>O URI de BAML da instância de objeto relevante.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReader">
      <summary>Fornece uma implementação <see cref="T:System.Xaml.XamlReader" /> que lê gráficos de objeto e gera um fluxo de nós XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
      <param name="instance">A raiz da árvore de objetos/gráfico de objeto a ser lida.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReader" /> com as configurações de leitor especificadas.</summary>
      <param name="instance">A raiz da árvore de objetos a ser lida.</param>
      <param name="settings">Um objeto de configurações.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReader" /> com o contexto de esquema especificado.</summary>
      <param name="instance">A raiz da árvore de objetos a ser lida.</param>
      <param name="schemaContext">O contexto de esquema para o leitor a ser usado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReader" /> com o contexto de esquema e as configurações de leitor especificados.</summary>
      <param name="instance">A raiz da árvore de objetos a ser lida.</param>
      <param name="schemaContext">O contexto de esquema para o leitor a ser usado.</param>
      <param name="settings">Um objeto de configurações.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.Read">
      <summary>Fornecerá o próximo nó XAML do gráfico de objeto de origem, se um nó estiver disponível.</summary>
      <returns>
        <see langword="true" /> se um nó estiver disponível; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Instance">
      <summary>Obtém a instância do objeto que está disponível na posição atual do leitor.</summary>
      <returns>A instância do objeto na posição atual do leitor; ou <see langword="null" /> se a posição do leitor não estiver em um objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.IsEof">
      <summary>Obtém um valor que informa se a posição de leitor está no final do arquivo.</summary>
      <returns>
        <see langword="true" /> se a posição do leitor estiver no final do arquivo; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Member">
      <summary>Obterá o <see cref="T:System.Xaml.XamlMember" /> atual na posição do leitor, se a posição do leitor estiver em um <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>O membro atual; ou <see langword="null" /> se a posição do leitor não estiver em um membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Namespace">
      <summary>Obtém a declaração do namespace de XAML da posição atual do leitor.</summary>
      <returns>A declaração do namespace XAML se o leitor estiver posicionado em um <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" /> ; caso contrário, <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>O tipo do nó atual.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.SchemaContext">
      <summary>Obtém um objeto que fornece informações de esquema para o conjunto de informações.</summary>
      <returns>Um objeto que fornece informações de esquema para o conjunto de informações.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Type">
      <summary>Obtém o <see cref="T:System.Xaml.XamlType" /> do objeto na posição atual do leitor.</summary>
      <returns>O <see cref="T:System.Xaml.XamlType" /> do objeto na posição atual do leitor; ou <see langword="null" /> se a posição não estiver em um objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Value">
      <summary>Obtém o valor do nó na posição atual do leitor.</summary>
      <returns>O valor do nó atual; ou <see langword="null" /> , se a posição do leitor não estiver em um <see cref="F:System.Xaml.XamlNodeType.Value" /> tipo de nó.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderException">
      <summary>A exceção que é gerada por várias APIs auxiliares internas do <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReaderException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReaderException" /> com dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReaderException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReaderException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
      <param name="innerException">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderSettings">
      <summary>Especifica as regras de processamento ou as configurações de opção de um <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderSettings.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReaderSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlObjectReaderSettings.RequireExplicitContentVisibility">
      <summary>Obtém ou define um valor que determina se os gravadores que usam o <see cref="T:System.Xaml.XamlObjectReader" /> associado para o contexto deve usar as configurações do designer para gravar o conteúdo explicitamente.</summary>
      <returns>
        <see langword="true" /> para especificar que os gravadores que usam esse contexto devem usar as configurações de designer para gravar qualquer conteúdo de saída nos casos em que os <see cref="P:System.Xaml.XamlMember.IsWritePublic" /> relatórios <see langword="false" /> ; <see langword="false" /> se as configurações do designer devem ser ignoradas.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectWriter">
      <summary>Cria um grafo de objeto com base em um fluxo de nó XAML de origem.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriter" /> usando o contexto de esquema XAML usado por um <see cref="T:System.Xaml.XamlReader" />.</summary>
      <param name="schemaContext">Um contexto de esquema XAML que é compartilhado com o leitor XAML que fornece nós para gravação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriter" /> usando o contexto de esquema XML usado por um <see cref="T:System.Xaml.XamlReader" /> e suas configurações.</summary>
      <param name="schemaContext">Um contexto de esquema XAML que é compartilhado com o leitor XAML que fornece nós para gravação.</param>
      <param name="settings">Um objeto de configurações que especifica determinadas opções para comportamento e saída de <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Clear">
      <summary>Redefine todos os quadros possíveis e limpa o grafo de objeto.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Xaml.XamlObjectWriter" /> e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar os recursos gerenciados; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)">
      <summary>Invoca qualquer método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> que está associado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">O objeto a ser relatado. O objeto é empacotado em <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando o manipulador é invocado.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)">
      <summary>Invoca qualquer método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> que está associado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">O objeto a ser relatado. O valor é empacotado em <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando o manipulador é invocado.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)">
      <summary>Invoca qualquer método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> referenciado que está associado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">O objeto a ser relatado. Isso é empacotado em <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando o manipulador é invocado.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)">
      <summary>Invoca qualquer método <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> referenciado que está associado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">O valor a ser passado pelo <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando o manipulador é invocado.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
      <summary>Invoca qualquer método <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> referenciado que está associado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este gravador, contanto que <paramref name="handled" /> nos dados de evento <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> não seja <see langword="true" />.</summary>
      <param name="eventSender">O objeto a ser relatado como a fonte para o manipulador.</param>
      <param name="member">O nome da propriedade a ser definida, que é passado para o manipulador como parte de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <param name="value">O valor a ser fornecido para a propriedade que é nomeada pela <paramref name="property" />. O valor é passado para o manipulador como parte do <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <returns>Um valor booliano que é definido por qualquer manipulador associado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
      <summary>Implementa <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> e fornece informações de linha para exceções.</summary>
      <param name="lineNumber">O número de linha do leitor.</param>
      <param name="linePosition">A posição de linha do leitor.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndMember">
      <summary>Fecha o escopo do membro atual e pode gravar o valor de escopo do membro enquanto ele é fechado. O novo escopo se torna o escopo do objeto pai do membro.</summary>
      <exception cref="T:System.Xaml.XamlObjectWriterException">Falha ao criar o valor do membro de um nó de valor que é encontrado entre essa chamada e um <see langword="StartMember" /> anterior.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndObject">
      <summary>Fecha o escopo do objeto atual no gravador. O novo escopo de objeto se torna o escopo do membro pai.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteGetObject">
      <summary>Grava o <see langword="StartObject" /> conceitual no grafo de objeto quando o objeto especificado é um valor padrão ou implícito da propriedade pai. O valor implícito vem de informações que são obtidas com base no contexto do esquema XAML e informações de tipo de suporte, em vez de ser especificado como um valor de objeto no conjunto de nós XAML de entrada.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary>Define uma declaração de namespace que se aplica ao seguinte escopo de objeto ou escopo do membro.</summary>
      <param name="namespaceDeclaration">A declaração de namespace a ser gravada.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="namespaceDeclaration" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Um componente de <paramref name="namespaceDeclaration" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlObjectReaderException">Tentativa de gravar um nó de namespace XAML em um escopo inválido.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary>Grava um novo nó de membro no escopo do objeto atual e o escopo se torna um novo escopo do membro.</summary>
      <param name="property">A propriedade XAML a ser gravada. Normalmente esse valor é obtido de um leitor de XAML por meio de fluxo do nó XAML intermediário.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException">
        <paramref name="property" /> definiu <see cref="P:System.Xaml.XamlMember.IsUnknown" /> como <see langword="true" />.  
  
- ou - 
 <see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> foi passado, o que indica que o fluxo do nó XAML continha o conteúdo de um objeto não compatível com conteúdo.  
  
- ou - 
Tentativa de gravar um membro inicial em um escopo inválido.</exception>
      <exception cref="T:System.Xaml.XamlDuplicateMemberException">
        <paramref name="property" /> especifica uma propriedade que já explicitamente é definida no escopo do objeto pai.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="property" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary>Grava um nó de objeto no escopo atual e define o escopo para um novo escopo de objeto.</summary>
      <param name="xamlType">O tipo a ser gravado. Normalmente esse valor é obtido de um leitor de XAML.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException">Processando um tipo <see cref="P:System.Xaml.XamlType.IsUnknown" /> e não é possível criar um objeto.  
  
- ou - 
Tentativa de gravar um objeto inicial em um escopo inválido.</exception>
      <exception cref="T:System.Xaml.XamlParseException">Tentativa de gravar um objeto raiz quando este já foi fornecido nas configurações.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
      <summary>Grava um valor no escopo de membro atual. Se o escopo atual estiver dentro de uma coleção, um dicionário ou um objeto de matriz, o valor deverá ser adicionado à coleção, dicionário ou matriz.</summary>
      <param name="value">O valor a ser gravado.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException">Tentativa de gravar um valor em um escopo inválido.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.Result">
      <summary>Obtém o último objeto que foi gravado. Normalmente chamado apenas quando o fluxo do nó é o final e o grafo do objeto é concluído.</summary>
      <returns>O último objeto gravado ou <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.RootNameScope">
      <summary>Obtém o serviço <see cref="T:System.Windows.Markup.INameScope" /> que mantém o namescope XAML para a raiz do nó absoluto do gravador de objeto XAML.</summary>
      <returns>O <see cref="T:System.Windows.Markup.INameScope" /> serviço que mantém o NAMESCOPE XAML para a raiz atual do gravador de objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.SchemaContext">
      <summary>Obtém o contexto do esquema XAML ativo.</summary>
      <returns>O contexto do esquema XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo">
      <summary>Obtém um valor que informa se um serviço de informações de linha deve fornecer valores e, portanto, também deve chamar o método <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> quando ele é relevante.</summary>
      <returns>
        <see langword="true" /> Se as informações de linha forem usadas pelo gravador; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterException">
      <summary>A exceção que é lançada quando um gravador XAML (como a classe <see cref="T:System.Xaml.XamlObjectWriter" />) encontra um erro ao tentar produzir grafos de objeto de um fluxo de nó XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriterException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriterException" /> com dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriterException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriterException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
      <param name="innerException">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterSettings">
      <summary>Fornece configurações específicas de gravador XAML para <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriterSettings" /> que se baseia na cópia de uma instância existente.</summary>
      <param name="settings">A instância de configurações a copiar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
      <summary>Obtém ou define permissões <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que o gravador XAML observa.</summary>
      <returns>As <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> permissões.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
      <summary>Obtém ou define uma referência a um retorno de chamada invocado pelo gravador de XAML na fase <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> do tempo de vida do objeto para cada objeto criado.</summary>
      <returns>Um retorno de chamada que é invocado pelo gravador XAML na <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> fase de vida útil do objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
      <summary>Obtém ou define uma referência a um retorno de chamada invocado pelo gravador de XAML na fase <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> do tempo de vida do objeto para cada objeto criado.</summary>
      <returns>Um retorno de chamada que é invocado pelo gravador XAML na <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> fase de vida útil do objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
      <summary>Obtém ou define uma referência a um retorno de chamada invocado pelo gravador de XAML na fase de pós-gravação do membro do tempo de vida do objeto para cada objeto criado.</summary>
      <returns>Um retorno de chamada que é invocado pelo gravador XAML na fase pós-membro-gravação do tempo de vida do objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
      <summary>Obtém ou define uma referência a um retorno de chamada invocado pelo gravador de XAML na fase de pré-gravação do membro do tempo de vida do objeto para cada objeto criado.</summary>
      <returns>Um retorno de chamada que é invocado pelo gravador XAML na fase pré-membro-gravação da vida útil do objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
      <summary>Obtém ou define o namescope XAML a usar para registrar nomes de a XAML se <see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /> for <see langword="true" />.</summary>
      <returns>O namescope XAML a ser usado para registrar nomes. O padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
      <summary>Obtém ou define um valor que especifica se o gravador XAML deve ignorar (não chamar) implementações <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> em <see cref="T:System.ComponentModel.TypeConverter" /> em situações de conversor de tipo.</summary>
      <returns>
        <see langword="true" /> Se o gravador XAML ignorar <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> implementações; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
      <summary>Obtém ou define um valor que determina se necessário desabilitar um recurso <see cref="T:System.Xaml.XamlObjectWriter" /> padrão que executa conversão de tipo no componente <paramref name="K" /> de um <see cref="T:System.Collections.Generic.Dictionary`2" /> antes de gravar a representação de gráfico de objeto.</summary>
      <returns>
        <see langword="true" /> Se <paramref name="K" /> a conversão de tipo para um <see cref="T:System.Collections.Generic.Dictionary`2" /> objeto deve ser desabilitada. <see langword="false" /> Se <paramref name="K" /> a execução da conversão de tipo para um <see cref="T:System.Collections.Generic.Dictionary`2" /> objeto for aplicada. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
      <summary>Obtém ou define um valor que determina se o registro do nome deve ocorrer em relação ao <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> especificado.</summary>
      <returns>
        <see langword="true" /> Se o registro de nome deve ocorrer em relação a <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> ; <see langword="false" /> se o registro de nome deve ocorrer no NAMESCOPE de XAML pai. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
      <summary>Obtém ou define um objeto raiz preexistente para operações <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <returns>Um objeto raiz preexistente para <see cref="T:System.Xaml.XamlObjectWriter" /> operações.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
      <summary>Obtém ou define um valor que determina se o gravador XAML omite a verificação do caminho do código que verifica se há propriedades duplicadas.</summary>
      <returns>
        <see langword="true" /> se a verificação de propriedade duplicada deve ser omitida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Xaml.XamlObjectWriter" /> deve omitir a chamada a <see langword="ProvideValue" /> em uma extensão de marcação, o que é relevante quando a extensão de marcação representa a raiz de um gráfico de objeto.</summary>
      <returns>
        <see langword="true" /> Se o <see cref="T:System.Xaml.XamlObjectWriter" /> deve omitir para chamar <see langword="ProvideValue" /> em uma extensão de marcação; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
      <summary>Usado no <see langword="BeginInitHandler" /> em lugar do <see langword="BaseUri" /> real.</summary>
      <returns>Um <see cref="T:System.Uri" /> a ser usado no lugar do real <see langword="BaseUri" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
      <summary>Obtém ou define o manipulador a ser usado quando o gravador de objeto chama em um <see langword="SetValue" /> implementado por CLR para propriedades de dependência.</summary>
      <returns>Uma implementação de manipulador que manipula esse caso.</returns>
    </member>
    <member name="T:System.Xaml.XamlParseException">
      <summary>A exceção que é gerada quando um leitor de XAML não pode processar elementos da origem do leitor de XAML em um fluxo do nó XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlParseException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlParseException" /> com dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlParseException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlParseException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
      <param name="innerException">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Xaml.XamlReader">
      <summary>Fornece definições de base para classes que consomem entradas XAML e produzem fluxos de nós XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.#ctor">
      <summary>Inicializa a classe <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Close">
      <summary>Fecha o fluxo de nós XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Xaml.XamlReader" /> e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar os recursos gerenciados; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlReader.Read">
      <summary>Quando implementado em uma classe derivada, fornecerá o próximo nó XAML da origem, se houver um nó disponível.</summary>
      <returns>
        <see langword="true" /> se um nó estiver disponível; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.ReadSubtree">
      <summary>Retorna um <see cref="T:System.Xaml.XamlReader" /> que se baseia no <see cref="T:System.Xaml.XamlReader" /> atual, no qual o <see cref="T:System.Xaml.XamlReader" /> retornado é usado para iterar em uma subárvore da estrutura de nós XAML.</summary>
      <returns>Uma nova instância de leitor de XAML da subárvore.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Skip">
      <summary>Ignora o nó atual e avança a posição do leitor para o próximo nó.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.System#IDisposable#Dispose">
      <summary>Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlReader.IsDisposed">
      <summary>Obtém se <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> foi chamado.</summary>
      <returns>
        <see langword="true" /> se foi <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> chamado; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.IsEof">
      <summary>Quando implementado em uma classe derivada, obtém um valor que informa se a posição do leitor está no fim do arquivo.</summary>
      <returns>
        <see langword="true" /> se a posição estiver no final conceitual do arquivo do fluxo do nó XAML; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Member">
      <summary>Quando implementada em uma classe derivada, obterá o membro atual na posição do leitor, se a posição do leitor estiver em um <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>O membro atual; ou <see langword="null" /> , se a posição do leitor não estiver em um membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Namespace">
      <summary>Quando implementado em uma classe derivada, obtém as informações do namespace de XAML do nó atual.</summary>
      <returns>As informações do namespace XAML, se estiverem disponíveis; caso contrário, <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.NodeType">
      <summary>Quando implementado em uma classe derivada, obtém o tipo do nó atual.</summary>
      <returns>Um valor da enumeração <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.SchemaContext">
      <summary>Quando implementado em uma classe derivada, obtém um objeto que fornece informações de contexto do esquema XAML para o conjunto de informações.</summary>
      <returns>Um objeto que fornece informações de contexto de esquema XAML para o conjunto de informações.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Type">
      <summary>Quando implementado em uma classe derivada, obtém o <see cref="T:System.Xaml.XamlType" /> do nó atual.</summary>
      <returns>O <see cref="T:System.Xaml.XamlType" /> do nó atual; ou <see langword="null" /> , se a posição atual do leitor não estiver em um objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Value">
      <summary>Quando implementado em uma classe derivada, obtém o valor do nó atual.</summary>
      <returns>O valor do nó atual; ou <see langword="null" /> , se a posição atual do leitor não estiver em um <see cref="F:System.Xaml.XamlNodeType.Value" /> tipo de nó.</returns>
    </member>
    <member name="T:System.Xaml.XamlReaderSettings">
      <summary>Especifica as regras de processamento ou as configurações de opção de uma implementação de <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlReaderSettings" /> com base nos valores de outro objeto <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
      <param name="settings">Um objeto <see cref="T:System.Xaml.XamlReaderSettings" /> existente.</param>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot">
      <summary>Obtém ou define um valor que indica se o objeto raiz pode incluir membros que tenham um modelo de acesso de código protegido ao informar a representação de tipo XAML.</summary>
      <returns>
        <see langword="true" /> Se o objeto raiz pode incluir membros que têm um modelo de acesso de código protegido; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.BaseUri">
      <summary>Obtém ou define o URI base que é usado para resolver os caminhos relativos.</summary>
      <returns>O URI de base a ser usado. O padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements">
      <summary>Obtém ou define um valor que especifica se o leitor de XAML deve ignorar os valores de atributos <see langword="x:Uid" /> que existem em elementos de propriedade.</summary>
      <returns>
        <see langword="true" /> Se o leitor deve ignorar valores para <see langword="x:Uid" /> atributos em elementos de propriedade. <see langword="false" /> Se o leitor deve processar <see langword="x:Uid" /> atributos em elementos de propriedade. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.LocalAssembly">
      <summary>Obtém ou define o objeto que representa o assembly local atual a ser processado. Essas informações de assembly são usadas para chamadas a APIs auxiliares, como <see cref="M:System.Xaml.XamlType.GetAllMembers" />.</summary>
      <returns>Um objeto de reflexão do CLR <see cref="T:System.Reflection.Assembly" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ProvideLineInfo">
      <summary>Obtém ou define um valor que especifica se o leitor pode fornecer o número e a posição da linha.</summary>
      <returns>
        <see langword="true" /> Se o leitor puder fornecer informações de número de linha e de posição; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ValuesMustBeString">
      <summary>Obtém ou define um valor que especifica se o leitor impõe que todos os nós <see langword="Value" /> sejam processados como um tipo <see langword="String" />.</summary>
      <returns>
        <see langword="true" /> Se o leitor impõe que apenas <see langword="String" /> está contido em <see langword="Value" /> nós; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaContext">
      <summary>Define um contexto reutilizável para interpretar ou mapear tipos XAML e os tipos nos assemblies subjacentes a eles.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaContext" />, com base em um conjunto de assemblies de referência.</summary>
      <param name="referenceAssemblies">Um conjunto enumerável de itens de informações de assembly. Cada item de informações de assembly é especificado por um valor <see cref="T:System.Reflection.Assembly" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaContext" />, com base em um conjunto de assemblies de referência e um objeto de configurações.</summary>
      <param name="referenceAssemblies">Um conjunto enumerável de informações de assembly. Cada item de informações de assembly é especificado por um valor <see cref="T:System.Reflection.Assembly" />.</param>
      <param name="settings">O objeto de configurações a ser usado para criar o <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaContext" /> baseada em um objeto de configurações.</summary>
      <param name="settings">O objeto de configurações a ser usado para criar o <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.Finalize">
      <summary>Fornece uma implantação <see langword="Finalize" /> não padrão que não invoca <see langword="Dispose" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
      <summary>Pesquisa os assemblies que são mantidos por este <see cref="T:System.Xaml.XamlSchemaContext" /> e retorna um conjunto de namespaces.</summary>
      <returns>Um conjunto enumerável de identificadores de namespace. Esses identificadores são fornecidos como cadeias de caracteres.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
      <summary>Pesquisa os assemblies que são mantidos por este <see cref="T:System.Xaml.XamlSchemaContext" /> e retorna um conjunto de tipos do namespace XAML especificado.</summary>
      <param name="xamlNamespace">O namespace XAML para os quais retornar os tipos.</param>
      <returns>Um conjunto enumerável de tipos de XAML. Cada tipo de XAML no conjunto é representado por um objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
      <summary>Obtém uma cadeia de caracteres que é relatada como o prefixo preferencial para os consumidores usados quando eles mapeiam o namespace de XAML especificado.</summary>
      <param name="xmlns">O namespace de XAML para o qual obter o prefixo preferencial.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlns" /> é nulo.</exception>
      <returns>Uma cadeia de caracteres que os consumidores devem usar quando mapeiam o namespace de XAML especificado para o uso de marcação.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
      <summary>Retorna um conversor de valor que pode ser convertido para o <paramref name="targetType" /> solicitado.</summary>
      <param name="converterType">A implementação de conversor.</param>
      <param name="targetType">O tipo de destino desejado para o conversor.</param>
      <typeparam name="TConverterBase">A classe base do conversor específico.</typeparam>
      <returns>Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com uma restrição que corresponde à restrição que é colocada na chamada do método.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
      <summary>Retorna um valor <see cref="T:System.Xaml.XamlDirective" /> que representa uma diretiva para a linguagem XAML ou para uma implementação específica.</summary>
      <param name="xamlNamespace">O namespace de XAML que contém a diretiva nomeada.</param>
      <param name="name">O nome da diretiva a ser obtida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlNamespace" /> ou <paramref name="name" /> é <see langword="null" />.</exception>
      <returns>Um objeto <see cref="T:System.Xaml.XamlDirective" /> que representa a diretiva solicitada.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
      <summary>Retorna um <see cref="T:System.Xaml.XamlType" /> que se baseia em um namespace XAML e uma cadeia de caracteres para o nome do tipo. Esta assinatura pode especificar os argumentos de tipo para casos em que o tipo desejado é um tipo genérico.</summary>
      <param name="xamlNamespace">O namespace de XAML que contém o tipo desejado.</param>
      <param name="name">O nome da cadeia de caracteres do tipo desejado.</param>
      <param name="typeArguments">Os argumentos de tipo de inicialização para um tipo genérico.</param>
      <returns>O <see cref="T:System.Xaml.XamlType" /> que corresponde aos critérios de entrada.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
      <summary>Retorna um <see cref="T:System.Xaml.XamlType" /> que se baseia em um identificador de tipo CLR.</summary>
      <param name="type">O tipo para o qual obter um <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> é <see langword="null" />.</exception>
      <returns>O <see cref="T:System.Xaml.XamlType" /> que corresponda ao <paramref name="type" /> de entrada.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
      <summary>Retorna um <see cref="T:System.Xaml.XamlType" /> que se baseia em um nome de tipo de sistema XAML.</summary>
      <param name="xamlTypeName">O nome de tipo XAML para o qual obter um <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentException">Um componente de <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> ou <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlTypeName" /> é <see langword="null" />.</exception>
      <returns>O <see cref="T:System.Xaml.XamlType" /> que corresponda ao <paramref name="xamlTypeName" /> de entrada.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
      <summary>Chamado quando operações usam este contexto de esquema para resolver um assembly que é necessário para resolver os namespaces de XAML que ele contém.</summary>
      <param name="assemblyName">O nome do assembly a ser carregado.</param>
      <returns>O assembly resolvido.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
      <summary>Retorna o êxito ou falha de uma solicitação para um namespace de XAML compatível. Uma solicitação bem-sucedida reporta o namespace de XAML como um parâmetro de saída.</summary>
      <param name="xamlNamespace">A cadeia de caracteres <see langword="xmlns" /> para o namespace de XAML ser verificado quanto a um resultado compatível.</param>
      <param name="compatibleNamespace">Quando este método retorna, a cadeia de caracteres <see langword="xmlns" /> para uma solicitação de namespace de XAML compatível. Isso pode ser idêntico a <paramref name="xamlNamespace" /> se o método retornar <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlNamespace" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <paramref name="compatibleNamespace" /> contiver um resultado utilizável, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary>Obtém um valor que especifica se um esquema XAML e seu contexto usam nomes de assembly totalmente qualificados nos valores que são retornados pela API de pesquisa.</summary>
      <returns>
        <see langword="true" /> se um esquema XAML e seu contexto usarem nomes de assembly totalmente qualificados nos valores retornados pelas APIs de pesquisa; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
      <summary>Obtém um conjunto enumerável de assemblies de referência para o contexto do esquema XAML.</summary>
      <returns>Um conjunto enumerável de assemblies de referência para o contexto do esquema. Cada item de informações de assembly é especificado por um valor <see cref="T:System.Reflection.Assembly" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
      <summary>Obtém um valor que especifica se um esquema XAML e seu contexto dão suporte a extensões de marcação que têm dois construtores com o mesmo arity (número de parâmetros de entrada).</summary>
      <returns>
        <see langword="true" /> Se o contexto de esquema permitir extensões de marcação com arity duplicado; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaContextSettings">
      <summary>Fornece configurações opcionais para um <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaContextSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaContextSettings" /> copiando os valores de uma instância de <see cref="T:System.Xaml.XamlSchemaContextSettings" /> existente.</summary>
      <param name="settings">Um <see cref="T:System.Xaml.XamlSchemaContextSettings" /> existente.</param>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary>Obtém define um valor que especifica se um esquema XAML e seu contexto usam nomes de assembly totalmente qualificados nos valores que são retornados pela API de pesquisa.</summary>
      <returns>
        <see langword="true" /> se um esquema XAML e seu contexto usarem nomes de assembly totalmente qualificados nos valores retornados pelas APIs de pesquisa; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity">
      <summary>Obtém ou define um valor que especifica se um contexto de esquema XAML permite extensões de marcação que tenham dois construtores com o mesmo arity (número de parâmetros de entrada).</summary>
      <returns>
        <see langword="true" /> Se o contexto de esquema permitir extensões de marcação com arity duplicado; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaException">
      <summary>A exceção que é gerada quando um sistema de associação ou outro sistema de representação de esquema para XAML informa uma exceção para o contexto do esquema.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaException" /> com dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
      <param name="innerException">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Xaml.XamlServices">
      <summary>Fornece serviços de nível superior (métodos estáticos) para as tarefas comuns de XAML de ler XAML e gravar um grafo de objeto; ou ler um grafo de objeto e gravar a saída do arquivo XAML para fins de serialização.</summary>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
      <summary>Carrega um <see cref="T:System.IO.Stream" /> de origem em um leitor de XAML e grava a saída como um gráfico de objeto.</summary>
      <param name="stream">O fluxo a ser carregado como entrada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
      <returns>O gráfico de objeto que é gravado como saída.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
      <summary>Cria um leitor de XAML de um <see cref="T:System.IO.TextReader" /> e retorna um gráfico de objeto.</summary>
      <param name="textReader">O <see cref="T:System.IO.TextReader" /> a ser usado como base para o <see cref="T:System.Xml.XmlReader" /> criado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> é <see langword="null" />.</exception>
      <returns>O grafo de objeto que é retornado.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.String)">
      <summary>Carrega um <see cref="T:System.IO.Stream" /> de origem para um leitor de XAML e retorna um gráfico de objeto.</summary>
      <param name="fileName">O nome do arquivo a ser carregado e usado como origem.</param>
      <exception cref="T:System.ArgumentNullException">A entrada <paramref name="fileName" /> é <see langword="null" />.</exception>
      <returns>O grafo de objeto que é retornado.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
      <summary>Carrega uma implementação do leitor de XAML específica e retorna um gráfico de objeto.</summary>
      <param name="xamlReader">A implementação do leitor de XAML a ser usado como leitor para esta operação de <see langword="Load" />.</param>
      <exception cref="T:System.ArgumentNullException">A entrada <paramref name="xamlReader" /> é <see langword="null" />.</exception>
      <returns>O grafo de objeto que é retornado.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
      <summary>Carrega uma implementação do leitor de XML específica e retorna um gráfico de objeto.</summary>
      <param name="xmlReader">A implementação de <see cref="T:System.Xml.XmlReader" /> a ser usada como leitor para esta operação de <see langword="Load" />.</param>
      <exception cref="T:System.ArgumentNullException">A entrada <paramref name="xamlReader" /> é <see langword="null" />.</exception>
      <returns>O gráfico de objeto de saída.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Parse(System.String)">
      <summary>Lê o XAML como saída de cadeia de caracteres e retorna um grafo de objeto.</summary>
      <param name="xaml">A entrada de cadeia de caracteres XAML a ser analisada.</param>
      <exception cref="T:System.ArgumentNullException">A entrada <paramref name="xaml" /> é <see langword="null" />.</exception>
      <returns>O grafo de objeto que é retornado.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
      <summary>Processa um gráfico de objeto fornecido em uma representação de nó XAML e, em seguida, em um fluxo de saída para serialização.</summary>
      <param name="stream">O fluxo de destino.</param>
      <param name="instance">A raiz do gráfico de objeto a ser processado.</param>
      <exception cref="T:System.ArgumentNullException">A entrada <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
      <summary>Processa um gráfico de objeto fornecido em uma representação de nó XAML e, em seguida, em uma saída que vai para o <see cref="T:System.IO.TextWriter" /> fornecido.</summary>
      <param name="writer">O <see cref="T:System.IO.TextWriter" /> que grava a saída.</param>
      <param name="instance">A raiz do gráfico de objeto a ser processado.</param>
      <exception cref="T:System.ArgumentNullException">A entrada <paramref name="writer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Object)">
      <summary>Processa uma árvore de objetos fornecida em uma representação de nó XAML e retorna uma representação de cadeia de caracteres do XAML de saída.</summary>
      <param name="instance">A raiz do gráfico de objeto a ser processado.</param>
      <returns>A saída da marcação XAML como uma cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
      <summary>Processa um gráfico de objeto fornecido em uma representação de nó XAML e, em seguida, o grava em um arquivo de saída em um local fornecido.</summary>
      <param name="fileName">O nome e o local do arquivo no qual gravar a saída.</param>
      <param name="instance">A raiz do gráfico de objeto a ser processado.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileName" /> é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
      <summary>Processa um gráfico de objeto fornecido em uma representação de nó XAML e, em seguida, o grava no gravador XAML fornecido.</summary>
      <param name="writer">A implementação de <see cref="T:System.Xaml.XamlWriter" /> a ser usada.</param>
      <param name="instance">A raiz do gráfico de objeto a ser processado.</param>
      <exception cref="T:System.ArgumentNullException">A entrada <paramref name="writer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
      <summary>Processa um gráfico de objeto fornecido em uma representação de nó XAML e, em seguida, o grava no <see cref="T:System.Xml.XmlWriter" /> fornecido.</summary>
      <param name="writer">A implementação de <see cref="T:System.Xml.XmlWriter" /> a ser usada.</param>
      <param name="instance">A raiz do gráfico de objeto a ser processado.</param>
      <exception cref="T:System.ArgumentNullException">A entrada <paramref name="writer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
      <summary>Conecta um <see cref="T:System.Xaml.XamlReader" /> e um <see cref="T:System.Xaml.XamlWriter" /> para usar um intermediário de conjunto de nós XAML comum. Potencialmente transforma o conteúdo, dependendo dos tipos de leitores e gravadores fornecidos.</summary>
      <param name="xamlReader">A implementação de <see cref="T:System.Xaml.XamlReader" /> a ser usada.</param>
      <param name="xamlWriter">O <see cref="T:System.Xaml.XamlWriter" /> a ser usado.</param>
      <exception cref="T:System.ArgumentNullException">A entrada <paramref name="xamlReader" /> ou <paramref name="xamlWriter" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException">O contexto do esquema XAML não corresponde entre o <paramref name="xamlReader" /> fornecido e <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
      <summary>Conecta um <see cref="T:System.Xaml.XamlReader" /> e um <see cref="T:System.Xaml.XamlWriter" /> para usar um intermediário de conjunto de nós XAML comum. Potencialmente transforma o conteúdo, dependendo dos tipos de leitores e gravadores fornecidos. Fornece um parâmetro para especificar se o gravador deve ser fechado após a chamada ser concluída.</summary>
      <param name="xamlReader">A implementação de <see cref="T:System.Xaml.XamlReader" /> a ser usada.</param>
      <param name="xamlWriter">O <see cref="T:System.Xaml.XamlWriter" /> a ser usado.</param>
      <param name="closeWriter">
        <see langword="true" /> para fechar o gravador após a conclusão da chamada; <see langword="false" /> para deixar o gravador ativo na última posição gravada.</param>
      <exception cref="T:System.ArgumentNullException">A entrada <paramref name="xamlReader" /> ou <paramref name="xamlWriter" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException">O contexto do esquema XAML não corresponde entre o <paramref name="xamlReader" /> fornecido e <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="T:System.Xaml.XamlType">
      <summary>Relata informações sobre os tipos XAML, como parte do sistema geral de XAML que é implementado nos serviços XAML do .NET Framework.</summary>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlType" /> com base em um nome de cadeia de caracteres para o tipo.</summary>
      <param name="typeName">O nome do tipo a ser criado.</param>
      <param name="typeArguments">Os argumentos de tipo para um <see cref="T:System.Xaml.XamlType" /> que representa um tipo genérico. Pode ser (e geralmente é) <see langword="null" />, o que indica que o tipo representado não é um tipo genérico.</param>
      <param name="schemaContext">Contexto do esquema XAML para leitores de XAML e gravadores de XAML.</param>
      <exception cref="T:System.ArgumentNullException">Um ou mais <paramref name="typeName" /> ou <paramref name="schemaContext" /> são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlType" /> com base no namespace de XAML e em um nome de cadeia de caracteres para o tipo. Este construtor é exclusivamente para análise e a gravação de nó de XAML de usos de tipo que são conhecidos por não terem suporte no sistema de tipos compatível nem no contexto de esquema XAML.</summary>
      <param name="unknownTypeNamespace">O namespace de XAML para o tipo, como uma cadeia de caracteres.</param>
      <param name="unknownTypeName">O nome do tipo no namespace XAML <paramref name="unknownTypeNamespace" /> fornecido.</param>
      <param name="typeArguments">Os argumentos de tipo para um <see cref="T:System.Xaml.XamlType" /> que representa um tipo genérico. Pode ser (e geralmente é) <see langword="null" />, o que indica que o tipo representado não é um tipo genérico.</param>
      <param name="schemaContext">Contexto do esquema XAML para leitores de XAML ou gravadores de XAML.</param>
      <exception cref="T:System.ArgumentNullException">Um ou mais dentre <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlType" /> com base nas informações do tipo de CLR subjacente.</summary>
      <param name="underlyingType">O CLR subjacente <see cref="T:System.Type" /> para o tipo XAML a ser construído.</param>
      <param name="schemaContext">Contexto do esquema XAML para leitores de XAML ou gravadores de XAML.</param>
      <exception cref="T:System.ArgumentNullException">Um ou mais <paramref name="underlyingType" /> ou <paramref name="schemaContext" /> são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlType" /> com base nas informações de tipo subjacentes e uma implementação <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="underlyingType">O tipo subjacente para o tipo XAML a ser construído.</param>
      <param name="schemaContext">Contexto do esquema XML para o leitor de XAML.</param>
      <param name="invoker">A implementação de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que manipula a reflexão de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException">Um ou mais <paramref name="underlyingType" /> ou <paramref name="schemaContext" /> são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
      <summary>Retorna um valor que indica se uma instância deste <see cref="T:System.Xaml.XamlType" /> tem o <see cref="T:System.Xaml.XamlType" /> especificado em sua lista de tipos atribuíveis.</summary>
      <param name="xamlType">O tipo para verificar em relação ao <see cref="T:System.Xaml.XamlType" /> atual.</param>
      <returns>
        <see langword="true" /> se <paramref name="xamlType" /> está na lista de tipos atribuíveis; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Object)">
      <summary>Indica se o objeto atual é igual a outro objeto.</summary>
      <param name="obj">O objeto a ser comparado com este objeto.</param>
      <returns>
        <see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="obj" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)">
      <summary>Indica se o objeto atual é igual a outro objeto do mesmo tipo.</summary>
      <param name="other">Um objeto para comparação com esse objeto.</param>
      <returns>
        <see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="other" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
      <summary>Retorna o membro XAML que é transformado em alias para uma diretiva XAML por esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive">A diretiva para a qual localizar o membro com alias.</param>
      <returns>O membro transformado em alias, se encontrado; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllAttachableMembers">
      <summary>Retorna uma coleção que contém todas as propriedades anexáveis que são expostas por esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Uma coleção que contém zero ou mais valores <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllMembers">
      <summary>Retorna uma coleção que contém todos os membros que são expostos por esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Uma coleção que contém zero ou mais valores <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
      <summary>Retorna um <see cref="T:System.Xaml.XamlMember" /> que representa um membro anexável nomeado específico deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name">O nome do membro anexável a ser obtido, no formato <c>ownerTypeName.MemberName</c>.</param>
      <returns>Um objeto <see cref="T:System.Xaml.XamlMember" /> para o membro anexável solicitado; caso contrário, <see langword="null" />, se não existir nenhum membro anexável com esse nome.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetHashCode">
      <summary>Retorna o código hash deste objeto.</summary>
      <returns>Um código hash inteiro.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetMember(System.String)">
      <summary>Retorna um <see cref="T:System.Xaml.XamlMember" /> para um membro nomeado específico deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name">O nome do membro a ser obtido (como uma cadeia de caracteres).</param>
      <returns>As informações <see cref="T:System.Xaml.XamlMember" /> para o membro, se esse membro for encontrado; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
      <summary>Para tipos de extensão de marcação, retorna os tipos dos parâmetros posicionais que são compatíveis no uso de extensão de marcação específica para este <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount">A contagem (aridade) do modo de sintaxe ou de construtor específico do qual você deseja obter informações.</param>
      <returns>Uma lista de valores <see cref="T:System.Xaml.XamlType" />, em que cada <see cref="T:System.Xaml.XamlType" /> é o tipo da posição na sintaxe. Você deve especificar os tipos na mesma ordem em que fornecer a entrada de marcação para a extensão de marcação.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetXamlNamespaces">
      <summary>Retorna uma lista de identificadores de cadeia de caracteres para namespaces de XAML nos quais o tipo está incluído.</summary>
      <returns>Uma lista de valores de cadeia de caracteres, em que cada cadeia de caracteres é o identificador de URI para um namespace de XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
      <summary>Retorna o membro XAML que é transformado em alias para uma diretiva XAML por esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive">A diretiva para a qual localizar o membro com alias.</param>
      <returns>O membro transformado em alias, se encontrado; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllAttachableMembers">
      <summary>Retorna um conjunto enumerável que contém todas as propriedades anexáveis que são expostas por esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Um conjunto enumerável que contém zero ou mais valores <see cref="T:System.Xaml.XamlMember" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllMembers">
      <summary>Retorna um conjunto enumerável que contém todos os membros que são expostos por esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Um conjunto enumerável que contém zero ou mais valores <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllowedContentTypes">
      <summary>Retorna uma lista dos tipos que podem ser usados como o valor <see cref="P:System.Xaml.XamlType.ContentProperty" /> para este <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Uma lista de possíveis tipos de conteúdo.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
      <summary>Retorna um <see cref="T:System.Xaml.XamlMember" /> para um anexável nomeado específico deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name">O nome do membro anexável a ser obtido, no formato <c>ownerTypeName.MemberName</c>.</param>
      <returns>Um objeto <see cref="T:System.Xaml.XamlMember" /> para o membro anexável solicitado; caso contrário, <see langword="null" />, se não existir nenhum membro anexável com esse nome.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupBaseType">
      <summary>Retorna o <see cref="T:System.Xaml.XamlType" /> para o tipo base imediato desse tipo de XAML. A determinação desse valor é baseada no tipo subjacente deste <see cref="T:System.Xaml.XamlType" /> e no contexto do esquema.</summary>
      <returns>O <see cref="T:System.Xaml.XamlType" /> para o tipo base imediato desse tipo de XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCollectionKind">
      <summary>Retorna um valor da enumeração <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> que declara qual tipo de coleção específica esse <see cref="T:System.Xaml.XamlType" /> usa.</summary>
      <returns>Um valor da enumeração <see cref="T:System.Xaml.Schema.XamlCollectionKind" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
      <summary>Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> deve ter argumentos (restrições genéricas por meio de <see langword="x:TypeArguments" />, de texto de inicialização ou de outras técnicas de XAML) para construir uma instância válida do tipo.</summary>
      <returns>
        <see langword="true" /> se a construção de uma instância exige algum valor de argumento; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentProperty">
      <summary>Retorna as informações de <see cref="T:System.Xaml.XamlMember" /> para a propriedade de conteúdo deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>As informações de <see cref="T:System.Xaml.XamlMember" /> para a propriedade de conteúdo deste <see cref="T:System.Xaml.XamlType" />. Pode ser <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentWrappers">
      <summary>Obtém uma lista de valores <see cref="T:System.Xaml.XamlType" /> que representam os wrappers de conteúdo para este <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Uma lista de valores <see cref="T:System.Xaml.XamlType" /> que representam os wrappers de conteúdo para este <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
      <summary>Quando implementado em uma classe derivada, retorna uma implementação <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns>Uma implementação <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupDeferringLoader">
      <summary>Retorna um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado para o carregamento adiado de objetos declarados em XAML.</summary>
      <returns>Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.Xaml.XamlDeferringLoader" /> sobre o genérico.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupInvoker">
      <summary>Retorna um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que é associado a esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>As informações <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> para este <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsAmbient">
      <summary>Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo de ambiente, de acordo com a definição de XAML.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo de ambiente; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsConstructible">
      <summary>Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo construível, de acordo com a definição de XAML.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo construível; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsMarkupExtension">
      <summary>Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa uma extensão de marcação.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa uma extensão de marcação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNameScope">
      <summary>Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um namescope de XAML, de acordo com a definição de XAML.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um namescope de XAML; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNullable">
      <summary>Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que permite valor nulo, de acordo com a definição de XAML.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que permite valor nulo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsPublic">
      <summary>Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo público no sistema de tipos relevante.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo público; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsUnknown">
      <summary>Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que não pode ser resolvido no sistema de tipos subjacente.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo não resolvido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
      <summary>Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa uma coleção significativa de espaço em branco, de acordo com a definição de XML.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa uma coleção significativa de espaço em branco; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsXData">
      <summary>Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um <see langword="XDATA" /> XML, de acordo com a definição de XAML.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupItemType">
      <summary>Retorna um valor que fornece as informações de tipo para a propriedade <see langword="Items" /> deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Um objeto <see cref="T:System.Xaml.XamlType" /> para o tipo dos itens na coleção; caso contrário, <see langword="null" /> se este <see cref="T:System.Xaml.XamlType" /> não representa uma coleção.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupKeyType">
      <summary>Retorna um valor que fornece as informações de tipo para a propriedade de chave deste <see cref="T:System.Xaml.XamlType" />, se o <see cref="T:System.Xaml.XamlType" /> representa um dicionário.</summary>
      <returns>Um objeto <see cref="T:System.Xaml.XamlType" /> para o tipo da chave para uso de dicionário ou <see langword="null" /> se este <see cref="T:System.Xaml.XamlType" /> não representa um dicionário,</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
      <summary>Retorna um valor que fornece as informações de tipo para o <see langword="ProvideValue" /> retornado deste <see cref="T:System.Xaml.XamlType" />, se ele representa uma extensão de marcação.</summary>
      <returns>Um objeto <see cref="T:System.Xaml.XamlType" /> para o tipo de retorno para o uso da extensão de marcação; caso contrário, <see langword="null" />, se este <see cref="T:System.Xaml.XamlType" /> não representa uma extensão de marcação.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
      <summary>Retorna o <see cref="T:System.Xaml.XamlMember" /> para um membro nomeado específico deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name">O nome do membro a ser obtido (como uma cadeia de caracteres).</param>
      <param name="skipReadOnlyCheck">
        <see langword="true" /> para retornar um membro, mesmo se esse membro tiver um valor <see langword="true" /> para <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> para não retornar um membro <see cref="P:System.Xaml.XamlMember.IsReadOnly" />. O padrão é <see langword="false" />.</param>
      <returns>As informações <see cref="T:System.Xaml.XamlMember" /> para o membro, se um membro for encontrado; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
      <summary>Para tipos de extensão de marcação, retorna os tipos dos parâmetros posicionais que são compatíveis no uso de extensão de marcação específica para este <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount">A contagem (aridade) do modo de sintaxe ou de construtor específico do qual você deseja obter informações.</param>
      <returns>Uma lista de valores <see cref="T:System.Xaml.XamlType" />, em que cada um desses <see cref="T:System.Xaml.XamlType" /> é o tipo da posição na sintaxe. Você deve especificar esses tipos na mesma ordem ao fornecer a entrada de marcação para a extensão de marcação.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
      <summary>Retorna um retorno de chamada do manipulador a ser usado para as operações de conjunto das extensões de marcação.</summary>
      <returns>Um retorno de chamada do manipulador a ser usado para as operações de conjunto das extensões de marcação.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
      <summary>Retorna um manipulador a ser usado para casos configuração de conversor de tipo.</summary>
      <returns>Um manipulador a ser usado para casos configuração de conversor de tipo.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
      <summary>Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> deve ser serializado usando um modo que corta os espaços em branco ao redor.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> deve ser serializado em um modo que corta os espaços em branco ao redor; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTypeConverter">
      <summary>Retorna um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.ComponentModel.TypeConverter" />, que representa o comportamento de conversão de tipo para valores desse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.ComponentModel.TypeConverter" /> que representa o comportamento de conversão de tipo para valores desse <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUnderlyingType">
      <summary>Retorna o <see cref="T:System.Type" /> do CLR que é subjacente a esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>O <see cref="T:System.Type" /> do CLR que é subjacente a esse <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
      <summary>Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> é compilado de cima para baixo durante a inicialização do XAML.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> é compilado de cima para baixo durante a inicialização do XAML; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupValueSerializer">
      <summary>Retorna um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.Windows.Markup.ValueSerializer" />, que representa o comportamento de serialização de valor para valores desse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa o comportamento de serialização de valor para valores desse <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary>Determina se dois objetos <see cref="T:System.Xaml.XamlType" /> especificados têm o mesmo valor.</summary>
      <param name="xamlType1">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <param name="xamlType2">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se o valor de <paramref name="xamlType1" /> for o mesmo que o valor de <paramref name="xamlType2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary>Determina se dois objetos <see cref="T:System.Xaml.XamlType" /> especificados têm valores diferentes.</summary>
      <param name="xamlType1">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <param name="xamlType2">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se o valor de <paramref name="xamlType1" /> for diferente do valor de <paramref name="xamlType2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.ToString">
      <summary>Retorna uma representação de cadeia de caracteres desse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Uma representação da cadeia de caracteres deste <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.AllowedContentTypes">
      <summary>Obtém uma coleção somente leitura dos tipos que são utilizáveis como o valor <see cref="P:System.Xaml.XamlType.ContentProperty" /> para esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Uma coleção somente leitura de possíveis tipos de conteúdo.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.BaseType">
      <summary>Obtém o <see cref="T:System.Xaml.XamlType" /> para o tipo base imediato desse tipo de XAML. A determinação desse valor é baseada no tipo subjacente deste <see cref="T:System.Xaml.XamlType" /> e no contexto do esquema.</summary>
      <returns>O <see cref="T:System.Xaml.XamlType" /> para o tipo base imediato desse tipo de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ConstructionRequiresArguments">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> deve ter argumentos (restrições genéricas por meio de <see langword="x:TypeArguments" />, de texto de inicialização ou de outras técnicas de XAML) para construir uma instância válida do tipo.</summary>
      <returns>
        <see langword="true" /> se a construção de uma instância exige algum valor de argumento; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentProperty">
      <summary>Obtém as informações de <see cref="T:System.Xaml.XamlMember" /> para a propriedade de conteúdo deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>As informações de <see cref="T:System.Xaml.XamlMember" /> para a propriedade de conteúdo deste <see cref="T:System.Xaml.XamlType" />. Pode ser <see langword="null" /> se não existir nenhuma propriedade de conteúdo.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentWrappers">
      <summary>Obtém os tipos que são usados para encapsular conteúdo para uma propriedade de conteúdo quando não for uma correspondência de tipo estrito, como cadeias de caracteres em uma <see langword="Collection&lt;T&gt;" /> fortemente tipada.</summary>
      <returns>Uma coleção somente leitura de tipos de wrapper de conteúdo possíveis; caso contrário, <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.DeferringLoader">
      <summary>Obtém o <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que representa o comportamento de conversão de carregamento adiado para esse tipo.</summary>
      <returns>A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /><see cref="T:System.Xaml.XamlDeferringLoader" /> restrição with que representa o comportamento de carregamento adiado para esse tipo.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Invoker">
      <summary>Obtém a implementação de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que está associada a esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>A <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementação associada a isso <see cref="T:System.Xaml.XamlType" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsAmbient">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo de ambiente, de acordo com a definição de XAML.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo de ambiente; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsArray">
      <summary>Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlType" /> representa uma matriz.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> representar uma matriz; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsCollection">
      <summary>Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlType" /> representa uma coleção.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> representar uma coleção; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsConstructible">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo construível, de acordo com a definição de XAML.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo construível; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsDictionary">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um dicionário, de acordo com a definição de XAML.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> representar um dicionário; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsGeneric">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo genérico.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> representar um tipo genérico; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsMarkupExtension">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa uma extensão de marcação.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa uma extensão de marcação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameScope">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um namescope de XAML, de acordo com a definição de XAML.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um namescope de XAML; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameValid">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> é inicializado usando uma cadeia de caracteres <see langword="xamlName" /> válida como seu <see cref="P:System.Xaml.XamlType.Name" />.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> for inicializado usando uma <see langword="xamlName" /> cadeia de caracteres válida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNullable">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que permite valor nulo, de acordo com a definição de XAML.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que permite valor nulo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsPublic">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo público no sistema de tipos relevante.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo público; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUnknown">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que não pode ser resolvido no sistema de tipos subjacente.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> representar um tipo não resolvido; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUsableDuringInitialization">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> é compilado de cima para baixo durante a inicialização do XAML.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> é compilado de cima para baixo durante a inicialização do XAML; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa uma coleção significativa de espaço em branco, de acordo com a definição de XML.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> representar uma coleção de espaço em branco significativa; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsXData">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um <see langword="XDATA" /> XML, de acordo com a definição de XAML.</summary>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ItemType">
      <summary>Obtém um valor que fornece as informações de tipo para a propriedade <see langword="Items" /> deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> objeto para o tipo de itens na coleção; caso contrário, <see langword="null" /> , se isso <see cref="T:System.Xaml.XamlType" /> não representar uma coleção.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.KeyType">
      <summary>Obtém um valor que fornece as informações de tipo para a propriedade de chave deste <see cref="T:System.Xaml.XamlType" />, se o <see cref="T:System.Xaml.XamlType" /> representa um dicionário.</summary>
      <returns>Um <see cref="T:System.Xaml.XamlType" /> objeto para o tipo de chave para uso de dicionário, caso contrário, <see langword="null" /> se isso <see cref="T:System.Xaml.XamlType" /> não representar um dicionário.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.MarkupExtensionReturnType">
      <summary>Obtém um valor que fornece as informações de tipo para o <see langword="ProvideValue" /> retornado deste <see cref="T:System.Xaml.XamlType" />, se ele representa uma extensão de marcação.</summary>
      <returns>Um objeto <see cref="T:System.Xaml.XamlType" /> para o tipo de retorno para o uso da extensão de marcação; caso contrário, <see langword="null" />, se este <see cref="T:System.Xaml.XamlType" /> não representa uma extensão de marcação.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Name">
      <summary>Obtém o nome da cadeia de caracteres do tipo que esse <see cref="T:System.Xaml.XamlType" /> representa.</summary>
      <returns>O nome da cadeia de caracteres deste tipo XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.PreferredXamlNamespace">
      <summary>Obtém o único namespace de XAML que é o namespace de XAML primário para este <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>O identificador, como uma cadeia de caracteres, do namespace XAML primário para esse tipo XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.SchemaContext">
      <summary>Obtém o <see cref="T:System.Xaml.XamlSchemaContext" /> ativo para o processamento desse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>O ativo <see cref="T:System.Xaml.XamlSchemaContext" /> para processar isso <see cref="T:System.Xaml.XamlType" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> tem o comportamento de manipulação de espaço em branco para serialização que corta o espaço em branco ao redor em seu conteúdo.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> representar um tipo que usa corte de espaço em branco; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeArguments">
      <summary>Obtém uma lista de argumentos de tipo para casos em que esse <see cref="T:System.Xaml.XamlType" /> representa um genérico.</summary>
      <returns>Uma lista de tipos de argumento de tipo; caso contrário, <see langword="null" /> , se isso <see cref="T:System.Xaml.XamlType" /> não representar um genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeConverter">
      <summary>Obtém um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.ComponentModel.TypeConverter" /> que representa o comportamento de conversão de tipo para valores desse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Uma <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /><see cref="T:System.ComponentModel.TypeConverter" /> restrição with que representa o comportamento de conversão de tipo para valores deste <see cref="T:System.Xaml.XamlType" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.UnderlyingType">
      <summary>Obtém o <see cref="T:System.Type" /> do CLR que é subjacente a esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>O CLR <see cref="T:System.Type" /> que se baseia <see cref="T:System.Xaml.XamlType" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ValueSerializer">
      <summary>Obtém um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa o comportamento de serialização de valor para valores desse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa o comportamento de serialização de valor para valores desse <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlWriter">
      <summary>Fornece definições de classe base e implementação padrão para um gravador XAML. Esse não é um gravador XAML padrão de trabalho, você deve derivar de <see cref="T:System.Xaml.XamlWriter" /> e implementar seus membros abstratos ou usar uma classe derivada <see cref="T:System.Xaml.XamlWriter" /> existente.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Close">
      <summary>Fecha o objeto do gravador de XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Xaml.XamlWriter" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar os recursos gerenciados; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.System#IDisposable#Dispose">
      <summary>Consulte <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndMember">
      <summary>Quando implementado em uma classe derivada, gera a representação de um nó de membro final.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndObject">
      <summary>Quando implementada em uma classe derivada, gera a representação de um nó de objeto final.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteGetObject">
      <summary>Quando implementada em uma classe derivada, gera um objeto para casos em que o objeto é um valor padrão ou implícito da propriedade que sendo definida, em vez de ser especificado como um valor de objeto discreto no conjunto de nós XAML de entrada.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary>Quando implementado em uma classe derivada, grava um nó de declaração de namespace de XAML.</summary>
      <param name="namespaceDeclaration">A declaração de namespace a ser gravada.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
      <summary>Executa a comutação com base no tipo de nó do leitor de XAML (<see cref="P:System.Xaml.XamlReader.NodeType" />) e chama o método <see langword="Write" /> relevante para a implementação de gravador.</summary>
      <param name="reader">O leitor a ser usado para a determinação de nó.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotImplementedException">A implementação padrão encontrou um <see cref="T:System.Xaml.XamlNodeType" /> que não está na enumeração padrão.</exception>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary>Quando implementado em uma classe derivada, grava a representação de um nó de membro inicial.</summary>
      <param name="xamlMember">O nó de membro a ser gravado.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary>Quando implementado em uma classe derivada, grava a representação de um nó de objeto inicial.</summary>
      <param name="type">O tipo XAML do objeto a ser gravado.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
      <summary>Quando implementado em uma classe derivada, grava um nó de valor.</summary>
      <param name="value">O valor a ser gravado.</param>
    </member>
    <member name="P:System.Xaml.XamlWriter.IsDisposed">
      <summary>Obtém se <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> foi chamado.</summary>
      <returns>
        <see langword="true" /> se foi <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> chamado; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlWriter.SchemaContext">
      <summary>Quando implementado em uma classe derivada, obtém o contexto do esquema XAML ativo.</summary>
      <returns>O contexto do esquema XAML ativo.</returns>
    </member>
    <member name="T:System.Xaml.XamlWriterSettings">
      <summary>Fornece configurações de inicialização para uma implementação de <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor(System.Xaml.XamlWriterSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlWriterSettings" /> usando outra instância de configurações existente.</summary>
      <param name="settings">Um objeto <see cref="T:System.Xaml.XamlWriterSettings" /> existente.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlReader">
      <summary>Processa a marcação XAML de arquivos XML usando um intermediário do <see cref="T:System.Xml.XmlReader" /> e produz um fluxo de nó XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base em um fluxo.</summary>
      <param name="stream">O fluxo inicial a ser carregado no leitor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" /> com base no fluxo e usando um contexto de esquema XAML fornecido.</summary>
      <param name="stream">O fluxo inicial a ser carregado no leitor.</param>
      <param name="schemaContext">O contexto do esquema XAML para processamento de XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base em um fluxo, com um contexto de esquema XAML e configurações específicas de XAML fornecidos.</summary>
      <param name="stream">O fluxo inicial a ser carregado no leitor.</param>
      <param name="schemaContext">O contexto do esquema XAML para processamento de XAML.</param>
      <param name="settings">As configurações específicas do leitor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base em um fluxo, com configurações específicas de XAML.</summary>
      <param name="stream">O fluxo inicial a ser carregado no leitor.</param>
      <param name="settings">As configurações específicas do leitor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base em um <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader">A <see cref="T:System.IO.TextReader" /> a ser usada para inicialização.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base em um <see cref="T:System.IO.TextReader" />, com um contexto de esquema e configurações específicas de XAML fornecidos.</summary>
      <param name="textReader">A <see cref="T:System.IO.TextReader" /> a ser usada para inicialização.</param>
      <param name="schemaContext">O contexto do esquema XAML para processamento de XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base em um <see cref="T:System.IO.TextReader" />, usando um contexto de esquema e configurações específicas de XAML fornecidos.</summary>
      <param name="textReader">A <see cref="T:System.IO.TextReader" /> a ser usada para inicialização.</param>
      <param name="schemaContext">O contexto do esquema XAML para processamento de XAML.</param>
      <param name="settings">As configurações específicas do leitor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base em um <see cref="T:System.IO.TextReader" />, usando configurações específicas de XAML.</summary>
      <param name="textReader">A <see cref="T:System.IO.TextReader" /> a ser usada para inicialização.</param>
      <param name="settings">As configurações específicas do leitor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base no nome do arquivo de um arquivo a ser carregado em um leitor de XML padrão.</summary>
      <param name="fileName">O nome do arquivo XML a ser carregado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base no nome do arquivo de um arquivo a ser carregado em um leitor de XML padrão, com um contexto de esquema de XAML fornecido.</summary>
      <param name="fileName">O nome do arquivo a ser carregado.</param>
      <param name="schemaContext">O contexto do esquema XAML para processamento de XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base no nome de arquivo de um arquivo a ser carregado em um leitor de XML padrão e usando um contexto de esquema XAML e configurações do leitor específicas de XAML.</summary>
      <param name="fileName">O nome do arquivo XML a ser carregado.</param>
      <param name="schemaContext">O contexto do esquema XAML para processamento de XAML.</param>
      <param name="settings">As configurações específicas do leitor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base no nome de arquivo de um arquivo a ser carregado em um leitor de XML padrão e usando configurações do leitor específicas de XAML.</summary>
      <param name="fileName">O nome do arquivo XML a ser carregado.</param>
      <param name="settings">As configurações específicas do leitor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" /> usando o <see cref="T:System.Xml.XmlReader" /> fornecido.</summary>
      <param name="xmlReader">O <see cref="T:System.Xml.XmlReader" /> a ser usado como o processador XML intermediário.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" /> usando o <see cref="T:System.Xml.XmlReader" /> e o contexto de esquema fornecidos.</summary>
      <param name="xmlReader">O <see cref="T:System.Xml.XmlReader" /> a ser usado como o processador XML intermediário.</param>
      <param name="schemaContext">O contexto do esquema XAML para processamento de XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" /> usando o <see cref="T:System.Xml.XmlReader" />, o contexto de esquema e as configurações do leitor fornecidos.</summary>
      <param name="xmlReader">O <see cref="T:System.Xml.XmlReader" /> a ser usado como o processador XML intermediário.</param>
      <param name="schemaContext">O contexto do esquema XAML para processamento de XAML.</param>
      <param name="settings">As configurações específicas do leitor de XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" /> usando o <see cref="T:System.Xml.XmlReader" /> e as configurações do leitor fornecidos.</summary>
      <param name="xmlReader">O <see cref="T:System.Xml.XmlReader" /> a ser usado como o processador XML intermediário.</param>
      <param name="settings">As configurações específicas do leitor de XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.Read">
      <summary>Fornece o próximo nó XAML da origem carregada se um nó XAML está disponível.</summary>
      <returns>
        <see langword="true" /> se um nó estiver disponível, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.HasLineInfo">
      <summary>Obtém um valor que especifica se as informações da linha estão disponíveis.</summary>
      <returns>
        <see langword="true" /> Se as informações de linha estiverem disponíveis; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.IsEof">
      <summary>Obtém um valor que informa se a posição do leitor no fluxo do nó XAML está no fim do arquivo.</summary>
      <returns>
        <see langword="true" /> se a posição estiver no final conceitual do arquivo no fluxo do nó; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LineNumber">
      <summary>Obtém o número de linha a ser relatado.</summary>
      <returns>O número de linha a ser relatado.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LinePosition">
      <summary>Obtém a posição da linha a ser relatada.</summary>
      <returns>A posição da linha a ser relatada.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Member">
      <summary>Obterá o membro atual na posição do leitor, se a posição do leitor atual estiver em um <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>O membro atual; ou <see langword="null" /> , se a posição atual do leitor não estiver em um membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Namespace">
      <summary>Obtém o namespace de XAML do nó atual.</summary>
      <returns>O namespace XAML do nó atual, se estiver disponível; caso contrário, <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>Um valor da enumeração <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.SchemaContext">
      <summary>Obtém um objeto que fornece informações de esquema para o conjunto de informações.</summary>
      <returns>Um objeto que fornece informações de esquema para o conjunto de informações.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Type">
      <summary>Obtém o <see cref="T:System.Xaml.XamlType" /> do nó atual.</summary>
      <returns>O <see cref="T:System.Xaml.XamlType" /> do nó atual; ou <see langword="null" /> , se a posição não estiver em um objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Value">
      <summary>Obtém o valor do nó atual.</summary>
      <returns>O valor do nó atual; ou <see langword="null" /> , se a posição não estiver em um <see cref="F:System.Xaml.XamlNodeType.Value" /> tipo de nó.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlReaderSettings">
      <summary>Especifica as regras de processamento ou as configurações de opção para a implementação do leitor de XAML <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor(System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReaderSettings" /> copiando as configurações de um objeto <see cref="T:System.Xaml.XamlXmlReaderSettings" /> existente.</summary>
      <param name="settings">O objeto <see cref="T:System.Xaml.XamlXmlReaderSettings" /> existente a ser copiado.</param>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.CloseInput">
      <summary>Obtém ou define um valor que indica se o leitor de texto ou o fluxo subjacente deverá ser fechado quando o <see cref="T:System.Xaml.XamlXmlReader" /> for fechado.</summary>
      <returns>
        <see langword="true" /> Se o fluxo ou leitor subjacente deve ser fechado quando o <see cref="T:System.Xaml.XamlXmlReader" /> é fechado; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.SkipXmlCompatibilityProcessing">
      <summary>Obtém ou define um valor que determina se o leitor deve diferir do comportamento <see cref="T:System.Xaml.XamlXmlReader" /> padrão de como o conteúdo de compatibilidade de marcação é processado.</summary>
      <returns>
        <see langword="true" /> Se o leitor de inicialização for usado diretamente, o que significa que a marcação de compatibilidade de XML é processada como parte do fluxo principal e a compatibilidade não é considerada. <see langword="false" /> Se o comportamento padrão for usado, o que processa a compatibilidade XML separadamente. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlLang">
      <summary>Obtém ou define o valor de configuração de idioma que o leitor pode promover para gravadores que gravam atributos <see langword="xml:lang" /> em nós.</summary>
      <returns>A cadeia de caracteres a ser usada para <see langword="xml:lang" /> a saída possível com base no leitor.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlSpacePreserve">
      <summary>Obtém ou define um valor que determina se o leitor de XAML instrui os gravadores de XAML a gravarem atributos <see langword="xml:space" /> em nós. Se esse comportamento for o desejado, essas informações serão passadas por meio do contexto de esquema XAML compartilhado.</summary>
      <returns>
        <see langword="true" /> Se os gravadores que estiverem processando o fluxo do nó XAML puderem gravar <c>XML: Space = "preserve"</c> na saída; <see langword="false" /> se <see langword="xml:space" /> não for possível gravar atributos em nós.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlWriter">
      <summary>Usa uma classe de suporte <see cref="T:System.IO.TextWriter" /> ou <see cref="T:System.Xml.XmlWriter" /> para gravar um fluxo do nó XAML em um formulário serializado de texto ou marcação.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriter" /> de um fluxo.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="schemaContext">O contexto do esquema XAML para o gravador de XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriter" /> de um fluxo usando um objeto de configurações do gravador.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="schemaContext">O contexto do esquema XAML para o gravador de XAML.</param>
      <param name="settings">Uma instância de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, que geralmente tem configurações não padrão específicas.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="schemaContext" /> é <see langword="null" /></exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriter" /> de uma base <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">O <see cref="T:System.IO.TextWriter" /> que grava a saída.</param>
      <param name="schemaContext">O contexto do esquema XAML para o gravador de XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textWriter" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriter" /> de uma base <see cref="T:System.IO.TextWriter" /> usando um objeto de configurações.</summary>
      <param name="textWriter">O <see cref="T:System.IO.TextWriter" /> que grava a saída.</param>
      <param name="schemaContext">O contexto do esquema XAML para o gravador de XAML.</param>
      <param name="settings">Uma instância de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, que geralmente tem configurações não padrão específicas.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textWriter" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriter" /> de uma base <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xmlWriter">O <see cref="T:System.Xml.XmlWriter" /> que grava a saída.</param>
      <param name="schemaContext">O contexto do esquema XAML para o gravador de XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlWriter" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriter" /> de uma base <see cref="T:System.Xml.XmlWriter" /> usando um objeto de configurações.</summary>
      <param name="xmlWriter">O <see cref="T:System.Xml.XmlWriter" /> que grava a saída.</param>
      <param name="schemaContext">O contexto do esquema XAML para o gravador de XAML.</param>
      <param name="settings">Uma instância de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, que geralmente tem configurações não padrão específicas.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlWriter" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Xaml.XamlXmlWriter" /> e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar os recursos não gerenciados; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Flush">
      <summary>Chama o método <see langword="Flush" /> do <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> subjacente, que grava tudo o que está no buffer no momento e, em seguida, fecha o gravador.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndMember">
      <summary>Grava um nó de membro final XAML no <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> subjacente. Gera uma exceção se a posição atual do fluxo do nó XAML não estiver dentro de um membro ou se o estado do gravador interno não for compatível com a gravação a de um membro final.</summary>
      <exception cref="T:System.InvalidOperationException">A posição atual do fluxo do nó XAML não está dentro de um membro.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">O estado atual do gravador não é compatível com a gravação de um membro final.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndObject">
      <summary>Grava um nó de objeto final XAML no <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> subjacente. Gera uma exceção se a posição atual do fluxo do nó XAML que está sendo processada é incompatível com a gravação de um objeto final.</summary>
      <exception cref="T:System.InvalidOperationException">A posição atual do fluxo do nó XAML não está em um escopo em que um membro de extremidade pode ser gravado.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">O estado atual do gravador não é compatível com a gravação de um objeto final.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteGetObject">
      <summary>Grava um objeto para casos em que o objeto especificado é um valor padrão ou implícito da propriedade que está sendo gravada, em vez de ser especificada como um valor de objeto no conjunto de nó XAML de entrada.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary>Grava informações de namespace no <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> subjacente. Pode gerar uma exceção para determinados estados, no entanto, pode, em vez disso, adiar a gravação das informações de namespace até que o gravador e o fluxo do nó XAML que está sendo processado atinjam uma posição em que uma declaração de namespace XAML possa ser inserida.</summary>
      <param name="namespaceDeclaration">A declaração de namespace XAML a ser gravada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceDeclaration" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="namespaceDeclaration" /> não é uma declaração de namespace XAML válida (tem um prefixo nulo ou um componente de identificador nulo).</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">O estado atual do gravador não dá suporte à gravação de uma declaração de namespace XAML.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary>Grava um nó de membro inicial XAML no <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> subjacente. Gera uma exceção se a posição atual do fluxo do nó XAML estiver dentro de outro membro ou se ele não estiver em um estado de escopo ou gravador em que um membro inicial pode ser gravado.</summary>
      <param name="property">O identificador de membro XAML para o membro a ser gravado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="property" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="property" /> não é um <see cref="T:System.Xaml.XamlMember" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException">A posição atual do fluxo do nó XAML é inválida para a gravação de um membro inicial.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">O estado do gravador não é válido para a gravação de um membro inicial.  
  
 - ou -  
  
 O gravador de XAML tentou gravar um membro duplicado. Essa exceção pode ter uma exceção interna mais precisa.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary>Grava um nó de objeto inicial XAML no <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> subjacente. Gera uma exceção se a posição atual do fluxo do nó XAML não está em um escopo em que um objeto inicial pode ser gravado ou se o gravador não está em um estado que pode gravar um objeto inicial.</summary>
      <param name="type">O <see cref="T:System.Xaml.XamlType" /> (identificador de tipo XAML) para o objeto a ser gravado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> não é um <see cref="T:System.Xaml.XamlType" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException">A posição atual do fluxo do nó XAML é inválida para a gravação de um novo objeto inicial.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">O estado do gravador XAML não é válido para gravar um novo objeto inicial.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
      <summary>Grava um nó de valor XAML no <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> subjacente. Gera uma exceção se a posição atual do fluxo do nó XAML for inválida para gravar um valor ou o gravador está em um estado em que não é possível gravar um valor.</summary>
      <param name="value">As informações de valor a ser gravado.</param>
      <exception cref="T:System.InvalidOperationException">A posição atual do fluxo do nó XAML é inválida para a gravação de um valor.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">O estado do gravador XAML não é compatível com a gravação de um nó de valor.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> especifica um valor que não seja nulo ou uma cadeia de caracteres.</exception>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.SchemaContext">
      <summary>Obtém o contexto do esquema XAML que esse <see cref="T:System.Xaml.XamlXmlWriter" /> usa para processamento.</summary>
      <returns>O contexto do esquema XAML que isso <see cref="T:System.Xaml.XamlXmlWriter" /> usa para processamento XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.Settings">
      <summary>Obtém as configurações do gravador que esse <see cref="T:System.Xaml.XamlXmlWriter" /> usa para processamento de XAML.</summary>
      <returns>As configurações do gravador que isso <see cref="T:System.Xaml.XamlXmlWriter" /> usa para processamento XAML.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterException">
      <summary>A exceção que é gerada por determinadas APIs <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriterException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriterException" /> com dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriterException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriterException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
      <param name="innerException">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterSettings">
      <summary>Fornece configurações de inicialização para a implementação do gravador XAML <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.Copy">
      <summary>Retorna uma cópia desta instância de <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
      <returns>A cópia retornada.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.AssumeValidInput">
      <summary>Obtém ou define um valor que especifica se o <see cref="T:System.Xaml.XamlXmlWriter" /> sempre deve considerar a entrada XAML válida para fins de verificação de resolução duplicada ou de outros erros.</summary>
      <returns>
        <see langword="true" /> Se o <see cref="T:System.Xaml.XamlXmlWriter" /> ignorar determinadas verificações de erro ou validação, como lançar exceções em membros duplicados. <see langword="false" /> Se o <see cref="T:System.Xaml.XamlXmlWriter" /> lançar exceções quando um XAML inválido for encontrado. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.CloseOutput">
      <summary>Obtém ou define um valor que especifica se o <see cref="T:System.Xaml.XamlXmlWriter" /> deve ser fechado imediatamente em <see langword="Dispose" /> ou em outras operações ou, se, nesse caso, o gravador de XAML deve gravar a saída do buffer antes de ser fechado. Use essa configuração com cuidado, pois fechar imediatamente pode resultar em um XAML inválido que não pode ser carregado novamente.</summary>
      <returns>
        <see langword="true" /> Se <see cref="T:System.Xaml.XamlXmlWriter" /> o fechar imediatamente em uma <see langword="Dispose" /> ou mais operações semelhantes. <see langword="false" /> se a saída de buffer restante for gravada antes de o <see cref="T:System.Xaml.XamlXmlWriter" /> ser liberado. O padrão é <see langword="false" />.</returns>
    </member>
  </members>
</doc>