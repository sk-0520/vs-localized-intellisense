<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xaml</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute">
      <summary vsli:raw="Notates types for legacy reporting of XAML markup extension characteristics.">Tipos notates para relatório herdado de características de extensão de marcação XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute" />.</summary>
      <param name="type" vsli:raw="The return type that this attribute reports.">O tipo de retorno que esse atributo relata.</param>
    </member>
    <member name="P:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.Type">
      <summary vsli:raw="Gets or sets the return type that this attribute reports.">Obtém ou define o tipo de retorno que esse atributo relata.</summary>
      <returns vsli:raw="The return type that this attribute reports.">O tipo de retorno que esse atributo relata.</returns>
    </member>
    <member name="T:System.Windows.Markup.AmbientAttribute">
      <summary vsli:raw="Specifies that a property or type should be treated as ambient. The ambient concept relates to how XAML processors determine type owners of members.">Especifica que uma propriedade ou tipo deve ser tratado como ambiente. O conceito de ambiente está relacionado a como os processadores XAML determinam os proprietários do tipo dos membros.</summary>
    </member>
    <member name="M:System.Windows.Markup.AmbientAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.AmbientAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.ArrayExtension">
      <summary vsli:raw="Implements &lt;see langword=&quot;x:Array&quot; /&gt; support for .NET XAML Services.">Implementa o suporte de <see langword="x:Array" /> para serviços de XAML do .NET Framework.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class. This creates an empty array.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ArrayExtension" />. Isso cria uma matriz vazia.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Array)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class based on the provided raw array.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ArrayExtension" /> com base na matriz bruta fornecida.</summary>
      <param name="elements" vsli:raw="The array content that populates the created array.">O conteúdo da matriz que preenche a matriz criada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;elements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="elements" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class and initializes the type of the array.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ArrayExtension" /> e inicializa o tipo da matriz.</summary>
      <param name="arrayType" vsli:raw="The object type of the new array.">O tipo de objeto da nova matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;arrayType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="arrayType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddChild(System.Object)">
      <summary vsli:raw="Appends the supplied object to the end of the array.">Anexa o objeto fornecido ao final da matriz.</summary>
      <param name="value" vsli:raw="The object to add to the end of the array.">O objeto a ser adicionado ao final da matriz.</param>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddText(System.String)">
      <summary vsli:raw="Adds a text node as a new array item.">Adiciona um nó de texto como um novo item de matriz.</summary>
      <param name="text" vsli:raw="The text to add to the end of the array.">O texto a ser adicionado ao final da matriz.</param>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an array that is sized to the number of objects supplied in the &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Items&quot; /&gt; values.">Retorna uma matriz dimensionada para o número de objetos fornecidos nos valores de <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension.">Um objeto que pode fornecer serviços para a extensão de marcação.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Processed an array that did not provide a valid &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Type&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; There is a type mismatch between the declared &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Type&quot; /&gt; of the array and one or more of its &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Items&quot; /&gt; values.">Processou uma matriz que não forneceu um <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> válido.  
  
- ou - 
Há tipos incompatíveis entre o <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> declarado da matriz e um ou mais dos seus valores <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</exception>
      <returns vsli:raw="The created array, or null.">A matriz criada ou nula.</returns>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Items">
      <summary vsli:raw="Gets the contents of the array. Settable in XAML through XAML collection syntax.">Obtém o conteúdo da matriz. Pode ser definido na linguagem XAML por meio da sintaxe de coleção XAML.</summary>
      <returns vsli:raw="The array contents.">O conteúdo da matriz.</returns>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Type">
      <summary vsli:raw="Gets or sets the type of array to be created when calling &lt;see cref=&quot;M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)&quot; /&gt;.">Obtém ou define o tipo de matriz a ser criado ao chamar <see cref="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)" />.</summary>
      <returns vsli:raw="The type of the array.">O tipo da matriz.</returns>
    </member>
    <member name="T:System.Windows.Markup.ConstructorArgumentAttribute">
      <summary vsli:raw="Specifies that an object can be initialized by using a non-parameterless constructor syntax, and that a property of the specified name supplies construction information.  This information is primarily for XAML serialization.">Especifica que um objeto pode ser inicializado usando uma sintaxe de construtor que não seja sem parâmetros e que uma propriedade do nome especificado fornece informações de construção.  Essas informações são principalmente para serialização XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ConstructorArgumentAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" />.</summary>
      <param name="argumentName" vsli:raw="The name of the constructor that will initialize the associated property.">O nome do construtor que inicializará a propriedade associada.</param>
    </member>
    <member name="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName">
      <summary vsli:raw="Gets the name parameter of the constructor that will initialize the associated property.">Obtém o parâmetro de nome do construtor que inicializará a propriedade associada.</summary>
      <returns vsli:raw="The name of the constructor. Assuming CLR backing, this corresponds to the &lt;see cref=&quot;P:System.Reflection.ParameterInfo.Name&quot; /&gt; of the relevant constructor parameter.">O nome do construtor. Supondo que o backup do CLR, isso corresponde ao <see cref="P:System.Reflection.ParameterInfo.Name" /> do parâmetro de construtor relevante.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentPropertyAttribute">
      <summary vsli:raw="Indicates which property of a type is the XAML content property. A XAML processor uses this information when processing XAML child elements of XAML representations of the attributed type.">Indica qual propriedade de um tipo é a propriedade de conteúdo XAML. Um processador XAML usa essas informações durante o processamento de elementos filho XAML de representações XAML do tipo atribuído.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentPropertyAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentPropertyAttribute&quot; /&gt; class, by using the specified name.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />, usando o nome especificado.</summary>
      <param name="name" vsli:raw="The property name for the property that is the content property.">O nome da propriedade para a propriedade que é a propriedade de conteúdo.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that is the content property.">Obtém o nome da propriedade que é a propriedade de conteúdo.</summary>
      <returns vsli:raw="The name of the property that is the content property.">O nome da propriedade que é a propriedade de conteúdo.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentWrapperAttribute">
      <summary vsli:raw="Specifies one or more types on the associated collection type that will be used to wrap foreign content.">Especifica um ou mais tipos no tipo de coleção associado que será usado para encapsular conteúdo externo.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ContentWrapperAttribute" />.</summary>
      <param name="contentWrapper" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is declared as a content wrapper for the collection type.">O <see cref="T:System.Type" /> que é declarado como um wrapper de conteúdo para o tipo de coleção.</param>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; is equivalent this &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; by comparing the &lt;see cref=&quot;P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper&quot; /&gt; properties.">Determina se o <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> especificado é equivalente a esse <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> comparando as propriedades <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; to compare.">O <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> de comparação.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper&quot; /&gt; properties are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as propriedades <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">Obtém um código hash para essa instância.</summary>
      <returns vsli:raw="An integer hash code.">Um código hash inteiro</returns>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper">
      <summary vsli:raw="Gets the type that is declared as a content wrapper for the collection type associated with this attribute.">Obtém o tipo que é declarado como um wrapper de conteúdo para o tipo de coleção associado a esse atributo.</summary>
      <returns vsli:raw="The type that is declared as a content wrapper for the collection type.">O tipo declarado como um wrapper de conteúdo para o tipo de coleção.</returns>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this attribute.">Obtém um identificador exclusivo para este atributo.</summary>
      <returns vsli:raw="A unique identifier for the attribute.">Um identificador exclusivo para o atributo.</returns>
    </member>
    <member name="T:System.Windows.Markup.DateTimeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Converte instâncias de <see cref="T:System.String" /> de e para instâncias de <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DateTimeValueSerializer&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.DateTimeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Determina se a <see cref="T:System.String" /> especificada pode ser convertida em uma instância de <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="The string to evaluate for conversion.">A cadeia de caracteres a ser avaliada para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor puder ser convertido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified object can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se o objeto especificado pode ser convertido em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">O objeto a ser avaliado para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> puder ser convertido em um <see cref="T:System.String" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Converte um <see cref="T:System.String" /> em um <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">A cadeia de caracteres a ser convertida em um <see cref="T:System.DateTime" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Uma nova instância de <see cref="T:System.DateTime" /> com base no <paramref name="value" /> fornecido.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte uma instância de <see cref="T:System.DateTime" /> em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">O objeto a ser convertido em uma cadeia de caracteres.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; or is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> não é um <see cref="T:System.DateTime" /> ou é <see langword="null" />.</exception>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Uma representação de cadeia de caracteres do <see cref="T:System.DateTime" /> especificado.</returns>
    </member>
    <member name="T:System.Windows.Markup.DependsOnAttribute">
      <summary vsli:raw="Indicates that the attributed property is dependent on the value of another property.">Indica que a propriedade atribuída é dependente do valor de outra propriedade.</summary>
    </member>
    <member name="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <param name="name" vsli:raw="The property that the property associated with this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt; depends on.">A propriedade da qual propriedade associada a este <see cref="T:System.Windows.Markup.DependsOnAttribute" /> depende.</param>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.Name">
      <summary vsli:raw="Gets the name of the related property declared in this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt;.">Obtém o nome da propriedade relacionada declarada neste <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns vsli:raw="The name of the related property.">O nome da propriedade relacionada.</returns>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt;.">Obtém um identificador exclusivo para este <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns vsli:raw="The unique identifier.">O identificador exclusivo.</returns>
    </member>
    <member name="T:System.Windows.Markup.DictionaryKeyPropertyAttribute">
      <summary vsli:raw="Specifies a property of the associated class that provides the implicit key value. Implicit keys are used for keys rather than explicit &lt;see langword=&quot;x:Key&quot; /&gt; attributes defined in XAML for an item in &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; collections.">Especifica uma propriedade da classe associada que fornece o valor da chave implícita. Chaves implícitas são usadas para chaves em vez de atributos <see langword="x:Key" /> explícitos definidos em XAML para um item em coleções <see cref="T:System.Collections.IDictionary" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DictionaryKeyPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DictionaryKeyPropertyAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.DictionaryKeyPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property that provides the implicit key value.">O nome da propriedade que fornece o valor da chave implícita.</param>
    </member>
    <member name="P:System.Windows.Markup.DictionaryKeyPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that provides the implicit key value.">Obtém nome da propriedade que fornece o valor da chave implícita.</summary>
      <returns vsli:raw="The name of the property that provides the implicit key value.">O nome da propriedade que fornece o valor da chave implícita.</returns>
    </member>
    <member name="T:System.Windows.Markup.IComponentConnector">
      <summary vsli:raw="Provides markup compile and tools support for named XAML elements and for attaching event handlers to them.">Dá suporte de marcação, compilação e ferramentas para elementos XAML nomeados e para anexar manipuladores de eventos a eles.</summary>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
      <summary vsli:raw="Attaches events and names to compiled content.">Anexa eventos e nomes ao conteúdo compilado.</summary>
      <param name="connectionId" vsli:raw="An identifier token to distinguish calls.">Um token de identificador para distinguir as chamadas.</param>
      <param name="target" vsli:raw="The target to connect events and names to.">O destino a que se conectar eventos e nomes.</param>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
      <summary vsli:raw="Loads the compiled page of a component.">Carrega a página compilada de um componente.</summary>
    </member>
    <member name="T:System.Windows.Markup.INameScope">
      <summary vsli:raw="Defines a contract for how names of elements should be accessed within a particular XAML namescope, and how to enforce uniqueness of names within that XAML namescope.">Define um contrato de como nomes de elementos devem ser acessados dentro de um determinado namescope XAML e como impor exclusividade dos nomes dentro desse namescope XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.INameScope.FindName(System.String)">
      <summary vsli:raw="Returns an object that has the provided identifying name.">Retorna um objeto que tem o nome de identificação fornecido.</summary>
      <param name="name" vsli:raw="The name identifier for the object being requested.">O identificador de nome para o objeto que está sendo solicitado.</param>
      <returns vsli:raw="The object, if found. Returns &lt;see langword=&quot;null&quot; /&gt; if no object of that name was found.">O objeto, se encontrado. Retornará <see langword="null" /> se nenhum objeto com esse nome tiver sido encontrado.</returns>
    </member>
    <member name="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers the provided name into the current XAML namescope.">Registra o nome fornecido para o namescope XAML atual.</summary>
      <param name="name" vsli:raw="The name to register.">O nome para registrar.</param>
      <param name="scopedElement" vsli:raw="The specific element that the provided &lt;paramref name=&quot;name&quot; /&gt; refers to.">O elemento específico ao qual o <paramref name="name" /> fornecido se refere.</param>
    </member>
    <member name="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
      <summary vsli:raw="Unregisters the provided name from the current XAML namescope.">Cancela o registro do nome fornecido para o namescope XAML atual.</summary>
      <param name="name" vsli:raw="The name to unregister.">O nome para cancelar o registro.</param>
    </member>
    <member name="T:System.Windows.Markup.INameScopeDictionary">
      <summary vsli:raw="Unifies enumerable, collection, and dictionary support that are useful for exposing a dictionary of names in a XAML namescope.">Unifica o suporte a dicionário, coleção e enumerável, que são úteis para expor um dicionário de nomes em um namescope XAML.</summary>
    </member>
    <member name="T:System.Windows.Markup.IProvideValueTarget">
      <summary vsli:raw="Represents a service that reports situational object-property relationships for markup extension evaluation.">Representa um serviço que relata os relacionamentos situacionais propriedade/objeto para avaliação da extensão de marcação.</summary>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
      <summary vsli:raw="Gets the target object being reported.">Obtém o objeto de destino que está sendo relatado.</summary>
      <returns vsli:raw="The target object being reported.">O objeto de destino que está sendo relatado.</returns>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
      <summary vsli:raw="Gets an identifier for the target property being reported.">Obtém um identificador para a propriedade de destino está sendo relatada.</summary>
      <returns vsli:raw="An identifier for the target property being reported.">Um identificador para a propriedade de destino que está sendo relatada.</returns>
    </member>
    <member name="T:System.Windows.Markup.IQueryAmbient">
      <summary vsli:raw="Queries for whether a specified property should be treated as ambient in the current scope.">Consulta se uma propriedade especificada deve ser tratada como ambiente no escopo atual.</summary>
    </member>
    <member name="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)">
      <summary vsli:raw="Queries for whether a specified named property can be considered ambient in the current scope.">Consulta se uma propriedade nomeada especificada pode ser considerada ambiente no escopo atual.</summary>
      <param name="propertyName" vsli:raw="The name of the property to check for ambience state.">O nome da propriedade a ser verificada quanto ao estado do ambiente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the requested property can be considered ambient; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a propriedade solicitada puder ser considerada ambiente; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.IUriContext">
      <summary vsli:raw="Represents a service that can use application context to resolve a provided relative URI to an absolute URI.">Representa um serviço que pode usar o contexto do aplicativo para resolver um URI relativo fornecido para um URI absoluto.</summary>
    </member>
    <member name="P:System.Windows.Markup.IUriContext.BaseUri">
      <summary vsli:raw="Gets or sets the base URI of the current application context.">Obtém ou define o URI base do contexto do aplicativo atual.</summary>
      <returns vsli:raw="The base URI of the application context.">O URI de base do contexto do aplicativo.</returns>
    </member>
    <member name="T:System.Windows.Markup.IValueSerializerContext">
      <summary vsli:raw="Defines a context that is provided to a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;. The context can be used to enable special cases of serialization or different modes of serialization.">Define um contexto que é fornecido para um <see cref="T:System.Windows.Markup.ValueSerializer" />. O contexto pode ser usado para habilitar casos especiais de serialização ou modos diferentes de serialização.</summary>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for the given property descriptor.">Obtém um <see cref="T:System.Windows.Markup.ValueSerializer" /> para o descritor de propriedade determinado.</summary>
      <param name="descriptor" vsli:raw="The descriptor of the property being converted.">O descritor da propriedade que está sendo convertida.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; capable of serializing the specified property.">Um <see cref="T:System.Windows.Markup.ValueSerializer" /> capaz de serializar a propriedade especificada.</returns>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.Type)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; associated with the specified type.">Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> associado ao tipo especificado.</summary>
      <param name="type" vsli:raw="The type of the value being converted.">O tipo do valor que está sendo convertido.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; capable of serializing the specified type.">Um <see cref="T:System.Windows.Markup.ValueSerializer" /> capaz de serializar o tipo especificado.</returns>
    </member>
    <member name="T:System.Windows.Markup.IXamlTypeResolver">
      <summary vsli:raw="Represents a service that resolves from named elements in XAML markup to the appropriate CLR type.">Representa um serviço que resolve de elementos nomeados na marcação XAML no tipo adequado do CLR.</summary>
    </member>
    <member name="M:System.Windows.Markup.IXamlTypeResolver.Resolve(System.String)">
      <summary vsli:raw="Resolves a named XAML type to the corresponding CLR &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Resolve um tipo XAML nomeado no <see cref="T:System.Type" /> de CLR correspondente.</summary>
      <param name="qualifiedTypeName" vsli:raw="The XAML type name to resolve. The type name is optionally qualified by the prefix for a XML namespace. Otherwise the current default XML namespace is assumed.">O nome do tipo XAML a ser resolvido. O nome do tipo é opcionalmente qualificado pelo prefixo para um namespace de XML. Caso contrário, o namespace de XML padrão atual será assumido.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that &lt;paramref name=&quot;qualifiedTypeName&quot; /&gt; resolves to.">O <see cref="T:System.Type" /> no qual <paramref name="qualifiedTypeName" /> é resolvido</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtension">
      <summary vsli:raw="Provides a base class for XAML markup extension implementations that can be supported by .NET XAML Services and other XAML readers and XAML writers.">Fornece uma classe base para as implementações de extensão de marcação XAML que podem ter o suporte pelos serviços XAML do .NET Framework e outros leitores e gravadores de XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of a class derived from &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Inicializa uma nova instância de uma classe derivada de <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.">Quando implementada em uma classe derivada, retorna um objeto que é fornecido como o valor da propriedade de destino para esta extensão de marcação.</summary>
      <param name="serviceProvider" vsli:raw="A service provider helper that can provide services for the markup extension.">Um auxiliar de provedor de serviço que pode fornecer serviços para a extensão de marcação.</param>
      <returns vsli:raw="The object value to set on the property where the extension is applied.">O valor do objeto para definir na propriedade na qual a extensão é aplicada.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute">
      <summary vsli:raw="Reports the bracket characters that a markup extension can return.">Relata os caracteres de colchete que uma extensão de marcação pode retornar.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.#ctor(System.Char,System.Char)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute&quot; /&gt; class using the provided characters.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute" /> usando os caracteres fornecidos.</summary>
      <param name="openingBracket" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; that defines the opening bracket character.">Um <see cref="T:System.Char" /> que define o caractere de colchete de abertura.</param>
      <param name="closingBracket" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; that defines the closing bracket character.">Um <see cref="T:System.Char" /> que define o caractere de colchete de fechamento.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.ClosingBracket">
      <summary vsli:raw="Specifies the character to be used as the closing delimiter in a &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Especifica o caractere a ser usado como o delimitador de fechamento em um <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; representing the character.">Um <see cref="T:System.Char" /> que representa o caractere.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.OpeningBracket">
      <summary vsli:raw="Specifies the character to be used as the opening delimiter in a &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Especifica o caractere a ser usado como o delimitador de abertura em um <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; representing the character.">Um <see cref="T:System.Char" /> que representa o caractere.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
      <summary vsli:raw="Reports the type that a markup extension can return.">Relata o tipo que pode ser retornado por uma extensão de marcação.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> usando o <see cref="T:System.Type" /> fornecido.</summary>
      <param name="returnType" vsli:raw="The return type that this attribute reports.">O tipo de retorno que esse atributo relata.</param>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Deprecated; do not use.">Preterido; não use.</summary>
      <param name="returnType" vsli:raw="The return type that this  .NET Framework attribute reports.">O tipo de retorno que esse Atributo do .NET Framework relata.</param>
      <param name="expressionType" vsli:raw="Deprecated; do not use.">Preterido; não use.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
      <summary vsli:raw="Deprecated; do not use.">Preterido; não use.</summary>
      <returns vsli:raw="Deprecated; do not use.">Preterido; não use.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ReturnType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt; return type that this .NET Framework attribute reports.">O tipo de retorno <see cref="T:System.Windows.Markup.MarkupExtension" /> que esse Atributo do .NET Framework relata.</summary>
      <returns vsli:raw="The type-safe return type of the specific &lt;see cref=&quot;M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)&quot; /&gt; implementation of the markup extension where the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; .NET Framework attribute is applied.">O tipo de retorno de tipo seguro da <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> implementação específica da extensão de marcação em que o <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> Atributo do .NET Framework é aplicado.</returns>
    </member>
    <member name="T:System.Windows.Markup.MemberDefinition">
      <summary vsli:raw="Provides the base class that is used for a markup technique of defining members of a class in declarative XAML.">Fornece a classe base que é usada para uma técnica de marcação de definição de membros de uma classe em XAML declarativo.</summary>
    </member>
    <member name="M:System.Windows.Markup.MemberDefinition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MemberDefinition&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.MemberDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.MemberDefinition.Name">
      <summary vsli:raw="When implemented in a derived class, gets or sets the name of the member to define.">Quando implementado em uma classe derivada, obtém ou define o nome do membro a ser definido.</summary>
      <returns vsli:raw="The name of the member to define.">O nome do membro a ser definido.</returns>
    </member>
    <member name="T:System.Windows.Markup.NameReferenceConverter">
      <summary vsli:raw="Provides type conversion to convert a string name into an object reference to the object with that name, or to return the name of an object from the object graph.">Fornece a conversão de tipo para converter um nome de cadeia de caracteres em uma referência de objeto para o objeto com esse nome ou para retornar o nome de um objeto de gráfico do objeto.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameReferenceConverter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.NameReferenceConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an object of one type to another object.">Retorna se este conversor pode converter um objeto de um tipo em um outro objeto.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you want to convert from.">Um <see cref="T:System.Type" /> que representa o tipo do qual você deseja converter.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the conversion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se esse conversor puder realizar a conversão; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns a value that indicates whether the converter can convert an object to the specified destination type.">Retorna um valor que indica se o conversor pode converter um objeto no tipo de destino especificado.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</param>
      <param name="destinationType" vsli:raw="The type to convert to.">O tipo para o qual converter.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the converter can perform the conversion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o conversor puder realizar a conversão; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided object to another object, using the specified context and culture information.">Converte o objeto fornecido em outro objeto usando as informações de contexto e cultura especificadas.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">O objeto <see cref="T:System.Globalization.CultureInfo" /> a ser usado como a cultura atual.</param>
      <param name="value" vsli:raw="The reference name string to convert.">A cadeia de caracteres do nome de referência a converter.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is a null string or empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service is missing or invalid.">
        <paramref name="value" /> é uma cadeia de caracteres nula ou uma cadeia de caracteres vazia.  
  
- ou - 
 O serviço <see cref="T:System.Xaml.IXamlNameResolver" /> está faltando ou é inválido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;context&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="context" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The returned object, which is potentially any object that is type-mapped in the relevant backing assemblies and capable of being declared in XAML with a XAML name reference.">O objeto retornado, que é potencialmente qualquer objeto mapeado por tipo nos assemblies de apoio relevantes e capaz de ser declarado em XAML com uma referência de nome XAML.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type. This is intended to return XAML reference names for objects in an object graph.">Converte um objeto no tipo especificado. Isso serve para retornar nomes de referência XAML para objetos em um gráfico de objeto.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">O objeto <see cref="T:System.Globalization.CultureInfo" /> a ser usado como a cultura atual.</param>
      <param name="value" vsli:raw="The object to retrieve the reference name for.">O objeto para o qual recuperar o nome de referência.</param>
      <param name="destinationType" vsli:raw="The type to return. You should always reference the &lt;see cref=&quot;T:System.String&quot; /&gt; type.">O tipo a ser retornado. Você sempre deve fazer referência ao tipo <see cref="T:System.String" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;T:System.Xaml.IXamlNameProvider&quot; /&gt; service is missing or invalid.">O serviço <see cref="T:System.Xaml.IXamlNameProvider" /> está faltando ou é inválido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;context&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="context" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The reference name of the input &lt;paramref name=&quot;value&quot; /&gt; object.">O nome de referência do objeto <paramref name="value" /> da entrada.</returns>
    </member>
    <member name="T:System.Windows.Markup.NameScopePropertyAttribute">
      <summary vsli:raw="Specifies a property of the associated class that provides the XAML namescope value.">Especifica uma propriedade da classe associada que fornece o valor do namescope XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameScopePropertyAttribute&quot; /&gt; class with the specified name.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> com o nome especificado.</summary>
      <param name="name" vsli:raw="The name of the property on the attributed type that provides the XAML namescope.">O nome da propriedade no tipo atribuído que fornece o namescope XAML.</param>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameScopePropertyAttribute&quot; /&gt; class with the specified name and type.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> com o nome e o tipo especificados.</summary>
      <param name="name" vsli:raw="The name of the attachable member that provides the XAML name scope.">O nome do membro anexável que fornece o escopo do nome XAML.</param>
      <param name="type" vsli:raw="The owner type of the attachable member that provides the XAML name scope.">O tipo de proprietário do membro anexável que fornece o escopo do nome XAML.</param>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that provides the XAML namescope.">Obtém o nome da propriedade que fornece o namescope XAML.</summary>
      <returns vsli:raw="A string value that is the name of the property that provides the XAML namescope.">Um valor de cadeia de caracteres que é o nome da propriedade que fornece o namescope XAML.</returns>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Type">
      <summary vsli:raw="Gets the owner type of the attached property that provides the XAML namescope support.">Obtém o tipo de proprietário da propriedade anexada que fornece o suporte de namescope XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; value that is the owner type of the attached property that provides the XAML namescope support, or &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Type" /> valor que é o tipo de proprietário da propriedade anexada que fornece o suporte ao namescope do XAML, ou <see langword="null" /> .</returns>
    </member>
    <member name="T:System.Windows.Markup.NullExtension">
      <summary vsli:raw="Implements a XAML markup extension in order to return a null object, which you can use to explicitly set values to null in XAML.">Implementa uma extensão de marcação XAML para retornar um objeto nulo, que você pode usar para definir explicitamente os valores como nulos em XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NullExtension&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.NullExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Provides &lt;see langword=&quot;null&quot; /&gt; to use as a value as the output of this markup extension.">Fornece <see langword="null" /> para usar como um valor como a saída dessa extensão de marcação.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension implementation.">Um objeto que pode fornecer serviços para a implementação da extensão de marcação.</param>
      <returns vsli:raw="A null reference.">Uma referência nula.</returns>
    </member>
    <member name="T:System.Windows.Markup.PropertyDefinition">
      <summary vsli:raw="Supports a markup technique of defining properties of a class in declarative XAML.">Dá suporte a uma técnica de marcação de definição de propriedades de uma classe em linguagem XAML declarativa.</summary>
    </member>
    <member name="M:System.Windows.Markup.PropertyDefinition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.PropertyDefinition&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Attributes">
      <summary vsli:raw="Gets a list of associated CLR attributes.">Obtém uma lista de atributos do CLR associados.</summary>
      <returns vsli:raw="A list of associated attributes.">Uma lista de atributos associados.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Modifier">
      <summary vsli:raw="Gets or sets the access level of the defined property.">Obtém ou define o nível de acesso da propriedade definida.</summary>
      <returns vsli:raw="The access level of the defined property, as a string.">O nível de acesso da propriedade definida, como uma cadeia de caracteres.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Name">
      <summary vsli:raw="Gets or sets the name of the property to define.">Obtém ou define o nome da propriedade a ser definida.</summary>
      <returns vsli:raw="The name of the property to define.">O nome da propriedade a ser definida.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Type">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the property to define.">Obtém ou define o <see cref="T:System.Xaml.XamlType" /> da propriedade a ser definida.</summary>
      <returns vsli:raw="The XAML type identifier of the property to define.">O identificador do tipo XAML da propriedade a ser definida.</returns>
    </member>
    <member name="T:System.Windows.Markup.Reference">
      <summary vsli:raw="Implements the &lt;c&gt;{x:Reference}&lt;/c&gt; markup extension.">Implementa a extensão de marcação <c>{x:Reference}</c>.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.Reference" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; class with the &lt;paramref name=&quot;name&quot; /&gt; argument.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.Reference" /> com o argumento <paramref name="name" />.</summary>
      <param name="name" vsli:raw="The XAML name of the element to reference.">O nome XAML do elemento a referenciar.</param>
    </member>
    <member name="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object that is the value of the target property. For the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; type, this is the object that the provided &lt;see cref=&quot;P:System.Windows.Markup.Reference.Name&quot; /&gt; references.">Retorna um objeto que é o valor da propriedade de destino. Para o tipo <see cref="T:System.Windows.Markup.Reference" />, esse é o objeto referenciado pelo <see cref="P:System.Windows.Markup.Reference.Name" /> fornecido.</summary>
      <param name="serviceProvider" vsli:raw="A class that implements the &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service.">Uma classe que implementa o serviço <see cref="T:System.Xaml.IXamlNameResolver" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; value does not implement the &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Windows.Markup.Reference.Name&quot; /&gt; value has not been set through construction or positional usage.">O valor <paramref name="serviceProvider" /> não implementa o serviço <see cref="T:System.Xaml.IXamlNameResolver" />.  
  
- ou - 
 O valor <see cref="P:System.Windows.Markup.Reference.Name" /> não foi definido por meio de construção ou de uso posicional.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceProvider" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The value of the target property. This is potentially any object that is type-mapped in the relevant backing assemblies.">O valor da propriedade de destino. Isso é potencialmente qualquer objeto que é mapeado por tipo nos assemblies de suporte relevantes.</returns>
    </member>
    <member name="P:System.Windows.Markup.Reference.Name">
      <summary vsli:raw="Gets or sets the XAML name to obtain the reference for.">Obtém ou define o nome XAML para o qual obter a referência.</summary>
      <returns vsli:raw="The XAML name of the element to obtain the reference for.">O nome XAML do elemento para o qual obter a referência.</returns>
    </member>
    <member name="T:System.Windows.Markup.RootNamespaceAttribute">
      <summary vsli:raw="Represents an assembly level attribute that is used to identify the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Representa um atributo de nível de assembly que é usado para identificar o valor da propriedade <see langword="RootNamespace" /> em um arquivo de projeto do Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Markup.RootNamespaceAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.RootNamespaceAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.RootNamespaceAttribute" />.</summary>
      <param name="nameSpace" vsli:raw="The root namespace value.">O valor do namespace raiz.</param>
    </member>
    <member name="P:System.Windows.Markup.RootNamespaceAttribute.Namespace">
      <summary vsli:raw="Gets the string that corresponds to the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Obtém a cadeia de caracteres que corresponde ao valor da propriedade <see langword="RootNamespace" /> em um arquivo de projeto do Visual Studio.</summary>
      <returns vsli:raw="The string that corresponds to the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">A cadeia de caracteres que corresponde ao valor da <see langword="RootNamespace" /> propriedade em um arquivo de projeto do Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
      <summary vsli:raw="Represents a type-level attribute that reports which property of the type maps to the XAML x:Name attribute.">Representa um atributo de tipo nível que informa qual propriedade do tipo é mapeada para o XAML atributo X:Name.</summary>
    </member>
    <member name="M:System.Windows.Markup.RuntimeNamePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.RuntimeNamePropertyAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property to use as the &lt;see langword=&quot;x:Name&quot; /&gt; equivalent of the class.">O nome da propriedade a ser usada como o equivalente de <see langword="x:Name" /> da classe.</param>
    </member>
    <member name="P:System.Windows.Markup.RuntimeNamePropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the runtime name property that is specified by this &lt;see cref=&quot;T:System.Windows.Markup.RuntimeNamePropertyAttribute&quot; /&gt;.">Obtém o nome da propriedade de nome do runtime especificado por este <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <returns vsli:raw="The name of the property.">O nome da propriedade.</returns>
    </member>
    <member name="T:System.Windows.Markup.StaticExtension">
      <summary vsli:raw="Implements a markup extension that returns static field and property references.">Implementa uma extensão de marcação que retorna referências de campo e de propriedade estáticas.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.StaticExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt; class using the provided &lt;paramref name=&quot;member&quot; /&gt; string.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.StaticExtension" /> usando a cadeia de caracteres <paramref name="member" /> fornecida.</summary>
      <param name="member" vsli:raw="A string that identifies the member to make a reference to. This string uses the format &lt;c&gt;prefix:typeName.fieldOrPropertyName&lt;/c&gt;. &lt;c&gt;prefix&lt;/c&gt; is the mapping prefix for a XAML namespace, and is only required to reference static values that are not mapped to the default XAML namespace.">Uma cadeia de caracteres que identifica o membro ao qual fazer uma referência. Esta cadeia de caracteres usa o formato <c>prefix:typeName.fieldOrPropertyName</c>. <c>prefixo</c> é o prefixo de mapeamento de um namespace XAML e só é necessário para referenciar valores estáticos que não estão mapeados no namespace XAML padrão.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object value to set on the property where you apply this extension. For &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt;, the return value is the static value that is evaluated for the requested static member.">Retorna um valor de objeto a ser definido na propriedade na qual a extensão é aplicada. Para <see cref="T:System.Windows.Markup.StaticExtension" />, o valor retornado é o valor estático avaliado para o membro estático solicitado.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension. The service provider is expected to provide a service that implements a type resolver (&lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;).">Um objeto que pode fornecer serviços para a extensão de marcação. O provedor de serviços deve fornecer um serviço que implementa um resolvedor de tipo (<see cref="T:System.Windows.Markup.IXamlTypeResolver" />).</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;member&quot; /&gt; value for the extension is &lt;see langword=&quot;null&quot; /&gt; at the time of evaluation.">O valor <paramref name="member" /> da extensão é <see langword="null" /> no momento da avaliação.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Some part of the &lt;paramref name=&quot;member&quot; /&gt; string did not parse properly  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceProvider&quot; /&gt; did not provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;member&quot; /&gt; value did not resolve to a static member.">Alguma parte da cadeia de caracteres <paramref name="member" /> não foi analisada corretamente 
- ou - 
 <paramref name="serviceProvider" /> não forneceu um serviço para <see cref="T:System.Windows.Markup.IXamlTypeResolver" />  
  
- ou - 
 O valor <paramref name="member" /> não foi resolvido para um membro estático.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceProvider" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The static value to set on the property where the extension is applied.">O valor estático a ser definido na propriedade na qual a extensão é aplicada.</returns>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.Member">
      <summary vsli:raw="Gets or sets a member name string that is used to resolve a static field or property based on the service-provided type resolver.">Obtém ou define uma cadeia de caracteres de nome de membro usada para resolver uma propriedade ou campo estático com base no resolvedor de tipo fornecido pelo serviço.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set &lt;see cref=&quot;P:System.Windows.Markup.StaticExtension.Member&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">Tentativa de definir <see cref="P:System.Windows.Markup.StaticExtension.Member" /> como <see langword="null" />.</exception>
      <returns vsli:raw="A string that identifies the member to make a reference to.">Uma cadeia de caracteres que identifica o membro ao qual fazer uma referência.</returns>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.MemberType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that defines the static member to return.">Obtém ou define o <see cref="T:System.Type" /> que define o membro estático a ser retornado.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set &lt;see cref=&quot;P:System.Windows.Markup.StaticExtension.MemberType&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">Tentativa de definir <see cref="P:System.Windows.Markup.StaticExtension.MemberType" /> como <see langword="null" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that defines the static member to return.">O <see cref="T:System.Type" /> que define o membro estático a ser retornado.</returns>
    </member>
    <member name="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute">
      <summary vsli:raw="Indicates to XAML processors that the whitespace surrounding elements of the type in markup should be trimmed when serializing.">Indica aos processadores XAML que o espaço em branco ao redor dos elementos do tipo na marcação devem ser cortados durante a serialização.</summary>
    </member>
    <member name="M:System.Windows.Markup.TrimSurroundingWhitespaceAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.TypeExtension">
      <summary vsli:raw="Implements a markup extension that returns a &lt;see cref=&quot;T:System.Type&quot; /&gt; based on a string input.">Implementa uma extensão de marcação que retorna um <see cref="T:System.Type" /> baseado em uma entrada de cadeia de caracteres.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.TypeExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class, initializing the &lt;see cref=&quot;P:System.Windows.Markup.TypeExtension.TypeName&quot; /&gt; value based on the provided &lt;paramref name=&quot;typeName&quot; /&gt; string.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.TypeExtension" />, inicializando o valor <see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> com base na cadeia de caracteres <paramref name="typeName" /> fornecida.</summary>
      <param name="typeName" vsli:raw="A string that identifies the type to make a reference to. This string uses the format &lt;c&gt;prefix:className&lt;/c&gt;. &lt;c&gt;prefix&lt;/c&gt; is the mapping prefix for a XAML namespace, and is only required to reference types that are not mapped to the default XAML namespace.">Uma cadeia de caracteres que identifica o tipo ao qual fazer uma referência. Essa cadeia de caracteres usa o formato <c>prefix:className</c>. <c>prefixo</c> é o prefixo de mapeamento de um namespace XAML e só é necessário para fazer referência a tipos que não estão mapeados no namespace XAML padrão.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to specify &lt;paramref name=&quot;typeName&quot; /&gt; as &lt;see langword=&quot;null&quot; /&gt;.">Tentativa de especificar <paramref name="typeName" /> como <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class, declaring the type directly.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.TypeExtension" />, declarando o tipo diretamente.</summary>
      <param name="type" vsli:raw="The type to be represented by this &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt;.">O tipo a ser representado por esse <see cref="T:System.Windows.Markup.TypeExtension" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="type" /> é <see langword="null" /></exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object that should be set on the property where this extension is applied. For &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; , this is the &lt;see cref=&quot;T:System.Type&quot; /&gt; value as evaluated for the requested type name.">Retorna um objeto que deve ser definido na propriedade em que essa extensão é aplicada. Para <see cref="T:System.Windows.Markup.TypeExtension" />, esse é o valor <see cref="T:System.Type" />, conforme avaliada para o nome de tipo solicitado.</summary>
      <param name="serviceProvider" vsli:raw="Object that can provide services for the markup extension. The provider is expected to provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;.">Objeto que pode fornecer serviços para a extensão de marcação. Espera-se que o provedor forneça um serviço para o <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; value for the extension is &lt;see langword=&quot;null&quot; /&gt;.">O valor <paramref name="member" /> para a extensão é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Some part of the &lt;paramref name=&quot;typeName&quot; /&gt; string did not parse properly.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceProvider&quot; /&gt; did not provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;typeName&quot; /&gt; value did not resolve to a type.">Alguma parte da cadeia de caracteres <paramref name="typeName" /> não foi analisada corretamente.  
  
- ou - 
 <paramref name="serviceProvider" /> não forneceu um serviço para <see cref="T:System.Windows.Markup.IXamlTypeResolver" />  
  
- ou - 
 O valor <paramref name="typeName" /> não foi resolvido para um tipo.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="serviceProvider" /> é <see langword="null" /></exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to set on the property where the extension is applied.">O <see cref="T:System.Type" /> a ser definido na propriedade em que a extensão é aplicada.</returns>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.Type">
      <summary vsli:raw="Gets or sets the type information for this extension.">Obtém ou define informações de tipo dessa extensão.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set to &lt;see langword=&quot;null&quot; /&gt;.">Tentativa de definir como <see langword="null" />.</exception>
      <returns vsli:raw="The established type. For runtime purposes, this may be &lt;see langword=&quot;null&quot; /&gt; for get access, but cannot be set to &lt;see langword=&quot;null&quot; /&gt;.">O tipo estabelecido. Para fins de tempo de execução, isso pode ser <see langword="null" /> para obter acesso, mas não pode ser definido como <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.TypeName">
      <summary vsli:raw="Gets or sets the type name represented by this markup extension.">Obtém ou define o nome do tipo representado por essa extensão de marcação.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set to &lt;see langword=&quot;null&quot; /&gt;.">Tentativa de definir como <see langword="null" />.</exception>
      <returns vsli:raw="A string that identifies the type. This string uses the format prefix&lt;c&gt;:&lt;/c&gt;className. (prefix is the mapping prefix for an XML namespace and is only required to reference types that are not mapped to the default XML namespace for WPF (&lt;c&gt;http://schemas.microsoft.com/winfx/2006/xaml/presentation&lt;/c&gt;).">Uma cadeia de caracteres que identifica o tipo. Essa cadeia de caracteres usa o formato prefix<c>:</c>ClassName. (prefix é o prefixo de mapeamento para um namespace XML e só é necessário para os tipos de referência que não são mapeados para o namespace XML padrão para WPF ( <c>http://schemas.microsoft.com/winfx/2006/xaml/presentation</c> ).</returns>
    </member>
    <member name="T:System.Windows.Markup.UidPropertyAttribute">
      <summary vsli:raw="Indicates the CLR property of a class that provides the x:Uid Directive value.">Indica a propriedade CLR de uma classe que fornece o valor diretiva x:Uid.</summary>
    </member>
    <member name="M:System.Windows.Markup.UidPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.UidPropertyAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.UidPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property that provides the &lt;see langword=&quot;x:Uid&quot; /&gt; value.">O nome da propriedade que fornece o valor <see langword="x:Uid" />.</param>
    </member>
    <member name="P:System.Windows.Markup.UidPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the CLR property that represents the x:Uid Directive value.">Obtém o nome da propriedade CLR que representa o valor diretiva x:Uid.</summary>
      <returns vsli:raw="The name of the CLR property that represents x:Uid Directive.">O nome da propriedade CLR que representa a diretiva x:Uid.</returns>
    </member>
    <member name="T:System.Windows.Markup.UsableDuringInitializationAttribute">
      <summary vsli:raw="Indicates whether this type is built top-down during XAML object graph creation.">Indica se este tipo é criado de cima para baixo durante a criação do gráfico de objeto XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.UsableDuringInitializationAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" />.</summary>
      <param name="usable" vsli:raw="Defines whether the associated class is usable during initialization.">Define se a classe associada pode ser usada durante a inicialização.</param>
    </member>
    <member name="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable">
      <summary vsli:raw="Gets a value that indicates whether the associated class is usable during initialization.">Obtém um valor que indica se a classe associada pode ser usada durante a inicialização.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated class is usable during initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a classe associada for utilizável durante a inicialização; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializer">
      <summary vsli:raw="Abstract class that defines conversion behavior for serialization from an object representation.">Classe abstrata que define o comportamento de conversão para a serialização de uma representação de objeto.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports.">Quando substituído em uma classe derivada, determina se o <see cref="T:System.String" /> especificado pode ser convertido em uma instância do tipo compatível com a implementação de <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value" vsli:raw="The string to evaluate for conversion.">A cadeia de caracteres a ser avaliada para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor puder ser convertido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, determines whether the specified object can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Quando substituído em uma classe derivada, determina se o objeto especificado pode ser convertido em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">O objeto a ser avaliado para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se o <paramref name="value" /> puder ser convertido em um <see cref="T:System.String" /> ; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports.">Quando substituído em uma classe derivada, converte um <see cref="T:System.String" /> em uma instância do tipo compatível com a implementação de <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value" vsli:raw="The string to convert.">A cadeia de caracteres a ser convertida.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> não pode ser convertido.</exception>
      <returns vsli:raw="A new instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Uma nova instância do tipo compatível com a implementação de <see cref="T:System.Windows.Markup.ValueSerializer" /> com base no <paramref name="value" /> fornecido.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, converts the specified object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Quando substituído em uma classe derivada, converte o objeto especificado em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">O objeto a ser convertido em uma cadeia de caracteres.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> não pode ser convertido.</exception>
      <returns vsli:raw="A string representation of the specified object.">Uma representação de cadeia de caracteres do objeto especificado.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)">
      <summary vsli:raw="Returns an exception to throw when a conversion cannot be performed.">Retorna uma exceção a ser gerada quando uma conversão não puder ser executada.</summary>
      <param name="value" vsli:raw="The object that could not be converted.">O objeto não pôde ser convertido.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object for the exception to throw when a &lt;see langword=&quot;ConvertFrom&quot; /&gt; conversion cannot be performed.">Um objeto <see cref="T:System.Exception" /> para a exceção a gerar quando uma conversão <see langword="ConvertFrom" /> não pode ser executada.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)">
      <summary vsli:raw="Returns an exception to throw when a conversion cannot be performed.">Retorna uma exceção a ser gerada quando uma conversão não puder ser executada.</summary>
      <param name="value" vsli:raw="The object that could not be converted.">O objeto não pôde ser convertido.</param>
      <param name="destinationType" vsli:raw="A type that represents the type the conversion was trying to convert to.">Um tipo que representa o tipo no qual a conversão estava tentando converter.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object for the exception to throw when a &lt;see langword=&quot;ConvertTo&quot; /&gt; conversion cannot be performed.">Um objeto <see cref="T:System.Exception" /> para a exceção a gerar quando uma conversão <see langword="ConvertTo" /> não pode ser executada.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for a property, by passing a CLR property descriptor for the property.">Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para uma propriedade, passando um descritor de propriedade CLR para a propriedade.</summary>
      <param name="descriptor" vsli:raw="The CLR property descriptor for the property to be serialized.">O descritor de propriedade CLR para a propriedade a ser serializada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="descriptor" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The serializer associated with the specified property. May return &lt;see langword=&quot;null&quot; /&gt;.">O serializador associado à propriedade especificada. Pode retornar <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified property, using the specified context.">Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para a propriedade especificada usando o contexto especificado.</summary>
      <param name="descriptor" vsli:raw="Descriptor for the property to be serialized.">Descritor da propriedade a ser serializada.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="descriptor" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The serializer associated with the specified property.">O serializador associado à propriedade especificada.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified type.">Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para o tipo especificado.</summary>
      <param name="type" vsli:raw="The type to get the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for.">O tipo para o qual obter <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The serializer associated with the specified type. May return &lt;see langword=&quot;null&quot; /&gt;.">O serializador associado ao tipo especificado. Pode retornar <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified type, using the specified context.">Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para o tipo especificado usando o contexto especificado.</summary>
      <param name="type" vsli:raw="The type to get the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for.">O tipo para o qual obter <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The serializer associated with the specified type.">O serializador associado ao tipo especificado.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets an enumeration of the types referenced by the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">Obtém uma enumeração dos tipos referenciados pelo <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value" vsli:raw="The value being serialized.">O valor que está sendo serializado.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="The types converted by this serializer.">Os tipos de convertidos por este serializador.</returns>
    </member>
    <member name="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute">
      <summary vsli:raw="Indicates that a collection type should be processed as being whitespace significant by a XAML processor.">Indica que um tipo de coleção deve ser processado considerando espaços em branco por um processador de XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.WhitespaceSignificantCollectionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlDeferLoadAttribute">
      <summary vsli:raw="Indicates that a class or property has a deferred load usage for XAML (such as a template behavior), and reports the class that enables the deferring behavior and its destination/content type.">Indica que uma classe ou propriedade possui um uso de carregamento adiado para XAML (como um comportamento de modelo) e relata a classe que habilita o comportamento de adiamento e seu tipo de conteúdo/destino.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlDeferLoadAttribute&quot; /&gt; class, using string names of types.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" />, usando os nomes de cadeia de caracteres de tipos.</summary>
      <param name="loaderType" vsli:raw="The string name of the type for the implementation to use for the defer load behavior.">O nome da cadeia de caracteres do tipo da implementação a ser usado para o comportamento de carregamento de adiamento.</param>
      <param name="contentType" vsli:raw="The string name of the type for the destination/content type of the defer load behavior.">O nome de cadeia de caracteres do tipo para o tipo de destino/conteúdo do comportamento de carregamento de adiamento.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loaderType&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loaderType" /> ou <paramref name="contentType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlDeferLoadAttribute&quot; /&gt; class, using CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; values.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" /> usando valores de <see cref="T:System.Type" /> do CLR.</summary>
      <param name="loaderType" vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">O valor de <see cref="T:System.Type" /> do CLR da implementação a ser usado para o comportamento de carregamento de adiamento.</param>
      <param name="contentType" vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">O valor de <see cref="T:System.Type" /> do CLR do tipo de destino/conteúdo a ser usado para o comportamento de carregamento de adiamento.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loaderType&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loaderType" /> ou <paramref name="contentType" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Obtém o valor de <see cref="T:System.Type" /> do CLR do tipo de destino/conteúdo a ser usado para o comportamento de carregamento de adiamento.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">O valor de <see cref="T:System.Type" /> do CLR do tipo de destino/conteúdo a ser usado para o comportamento de carregamento de adiamento.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentTypeName">
      <summary vsli:raw="Gets the string name of the type for the implementation to use for the defer load behavior.">Obtém o nome da cadeia de caracteres do tipo da implementação a ser usado para o comportamento de carregamento de adiamento.</summary>
      <returns vsli:raw="The string name of the type for the converter to use for the defer load behavior.">O nome da cadeia de caracteres do tipo para o conversor a ser usado para o comportamento de carregamento de adiamento.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Obtém o valor de <see cref="T:System.Type" /> do CLR da implementação a ser usado para o comportamento de carregamento de adiamento.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">O valor de <see cref="T:System.Type" /> do CLR da implementação a ser usado para o comportamento de carregamento de adiamento.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderTypeName">
      <summary vsli:raw="Gets the string name of the type for the destination/content type of the defer load behavior.">Obtém o nome de cadeia de caracteres do tipo para o tipo de destino/conteúdo do comportamento de carregamento de adiamento.</summary>
      <returns vsli:raw="The string name of the type for the destination/content type of the defer load behavior.">O nome de cadeia de caracteres do tipo para o tipo de destino/conteúdo do comportamento de carregamento de adiamento.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute">
      <summary vsli:raw="Indicates that a class can use a markup extension to provide a value, and references a handler to use for markup extension set operations.">Indica que uma classe pode usar uma extensão de marcação para fornecer um valor e faz referência a um manipulador a ser usado para operações de conjuntos de extensões de marcação.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />.</summary>
      <param name="xamlSetMarkupExtensionHandler" vsli:raw="The name of the handler to use for markup extension set operations.">O nome do manipulador a ser usado para operações de conjuntos de extensões de marcação.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionHandler">
      <summary vsli:raw="Gets the name of the handler to use for markup extension set operations.">Obtém o nome do manipulador a ser usado para operações de conjuntos de extensões de marcação.</summary>
      <returns vsli:raw="The name of the handler to use for markup extension set operations.">O nome do manipulador a ser usado para operações de conjuntos de extensões de marcação.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a XAML object writer sets a value using a markup extension.">Fornece dados para retornos de chamada que são invocados quando um gravador de objeto XAML define um valor usando uma extensão de marcação.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.#ctor(System.Xaml.XamlMember,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Informações de sistema/esquema de tipo XAML para o membro que está sendo definido.</param>
      <param name="value" vsli:raw="The markup extension reference to provide for the member being set.">A referência de extensão de marcação a ser fornecida para o membro que está sendo definido.</param>
      <param name="serviceProvider" vsli:raw="Service provider information passed to the markup extension.">As informações do provedor de serviço passadas para a extensão de marcação.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.CallBase">
      <summary vsli:raw="Provides a way to invoke a callback as defined on a base class of the current acting type.">Fornece uma maneira de invocar um retorno de chamada, conforme definido em uma classe base do tipo de ação atual.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.MarkupExtension">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt; reference that is relevant to this &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt;.">Obtém a referência de <see cref="T:System.Windows.Markup.MarkupExtension" /> que é relevante para esse <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <returns vsli:raw="The markup extension reference that is relevant to this &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt;.">A referência de extensão de marcação que é relevante para isso <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" /> .</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.ServiceProvider">
      <summary vsli:raw="Gets service provider information that was passed to the markup extension.">Obtém as informações do provedor de serviço que foram passadas para a extensão de marcação.</summary>
      <returns vsli:raw="Service provider information that was passed to the markup extension.">Informações do provedor de serviços que foram transmitidas à extensão de marcação.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterAttribute">
      <summary vsli:raw="Indicates that a class can use a type converter to provide a value, and references a handler to use for type converter setting cases.">Indica que uma classe pode usar um conversor de tipo para fornecer um valor e faz referência a um manipulador a ser usado para casos de configuração de conversor de tipo.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <param name="xamlSetTypeConverterHandler" vsli:raw="The name of the handler to use for type converter setting operations.">O nome do manipulador a ser usado para operações de configuração de conversor de tipo.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterAttribute.XamlSetTypeConverterHandler">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;xamlSetTypeConverterHandler&quot; /&gt; initialization value (the handler name) specified in the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt;.">Obtém o valor de inicialização do <paramref name="xamlSetTypeConverterHandler" /> (o nome do manipulador) especificado no <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;xamlSetTypeConverterHandler&quot; /&gt; value specified in the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt;.">O <paramref name="xamlSetTypeConverterHandler" /> valor especificado em <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" /> .</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a XAML writer sets a value using a type converter call.">Fornece dados para retornos de chamada que são invocados quando um gravador de XAML define um valor usando uma chamada de conversor de tipo.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.#ctor(System.Xaml.XamlMember,System.ComponentModel.TypeConverter,System.Object,System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Informações de sistema/esquema de tipo XAML para o membro que está sendo definido.</param>
      <param name="typeConverter" vsli:raw="The specific type converter instance being invoked.">A instância do conversor de tipo específico que está sendo invocada.</param>
      <param name="value" vsli:raw="The value to provide for the member being set.">O valor a ser fornecido para o membro que está sendo definido.</param>
      <param name="serviceProvider" vsli:raw="Service provider information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class.">Informações de provedor de serviço que podem ser usadas pelo serviço da classe <paramref name="typeConverter" />.</param>
      <param name="cultureInfo" vsli:raw="Culture information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class when calling &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)&quot; /&gt; and other methods.">Informações de cultura que podem ser usadas pela classe <paramref name="typeConverter" /> ao chamar <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> e outros métodos.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.CallBase">
      <summary vsli:raw="Provides a way to invoke a callback as defined on a base class of the current acting type.">Fornece uma maneira de invocar um retorno de chamada, conforme definido em uma classe base do tipo de ação atual.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.CultureInfo">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; information that can be used by the type converter class when calling &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)&quot; /&gt; and other methods.">Obtém informações de <see cref="T:System.Globalization.CultureInfo" /> que podem ser usadas pela classe do conversor de tipo ao chamar <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> e outros métodos.</summary>
      <returns vsli:raw="Culture information that can be used by the type converter class.">Informações de cultura que podem ser usadas pela classe do conversor de tipo</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.ServiceProvider">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; information that can be used by the type converter class.">Obtém informações de <see cref="T:System.IServiceProvider" /> que podem ser usadas pela classe de conversor de tipo.</summary>
      <returns vsli:raw="Service provider information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class.">Informações de provedor de serviço que podem ser usadas pelo serviço da classe <paramref name="typeConverter" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.TypeConverter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; instance that is invoked and provides type conversion behavior.">Obtém a instância de <see cref="T:System.ComponentModel.TypeConverter" /> que é invocada e fornece o comportamento de conversão de tipo.</summary>
      <returns vsli:raw="The type converter that provides type conversion behavior.">O conversor de tipo que fornece o comportamento de conversão de tipo.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetValueEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; sets certain values.">Fornece dados para retornos de chamada invocados quando um <see cref="T:System.Xaml.XamlObjectWriter" /> define determinados valores.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Informações de sistema/esquema de tipo XAML para o membro que está sendo definido.</param>
      <param name="value" vsli:raw="The value to provide for the member.">O valor a ser fornecido para o membro.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase">
      <summary vsli:raw="When overridden in a derived class, provides a way to invoke a &lt;see langword=&quot;SetValue&quot; /&gt; callback as defined on a base class of the current acting type.">Quando substituído em uma classe derivada, fornece uma maneira de invocar um retorno de chamada de <see langword="SetValue" />, conforme definido em uma classe base do tipo de ação atual.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Handled">
      <summary vsli:raw="Gets or sets a value that determines whether a caller that is using the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; can use the values without having to call &lt;see cref=&quot;M:System.Windows.Markup.XamlSetValueEventArgs.CallBase&quot; /&gt;.">Obtém ou define um valor que determina se um chamador que está usando os <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> pode usar os valores sem precisar chamar <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values were useful and calling &lt;see cref=&quot;M:System.Windows.Markup.XamlSetValueEventArgs.CallBase&quot; /&gt; is not necessary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se os valores eram úteis e a chamada <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" /> não é necessária; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Member">
      <summary vsli:raw="Gets XAML type system and XAML schema information for the member being set.">Obtém o sistema de tipo XAML e as informações de esquema XAML para o membro que está sendo definido.</summary>
      <returns vsli:raw="XAML type system and XAML schema information for the member being set.">Sistema de tipos XAML e informações de esquema XAML para o membro que está sendo definido.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Value">
      <summary vsli:raw="Gets the value to provide for the member being set.">Obtém o valor a ser fornecido para o membro que está sendo definido.</summary>
      <returns vsli:raw="The value to provide for the member being set.">O valor a ser fornecido para o membro que está sendo definido.</returns>
    </member>
    <member name="T:System.Windows.Markup.XData">
      <summary vsli:raw="Represents literal data that can appear as the value for a &lt;see langword=&quot;Value&quot; /&gt; node.">Representa dados literais que podem aparecer como o valor para um nó <see langword="Value" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.XData.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XData&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XData" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.XData.Text">
      <summary vsli:raw="Gets or sets the literal value string that this &lt;see cref=&quot;T:System.Windows.Markup.XData&quot; /&gt; wraps.">Obtém ou define a cadeia de caracteres de valor literal que esses <see cref="T:System.Windows.Markup.XData" /> encapsulam.</summary>
      <returns vsli:raw="The literal value string.">A cadeia de caracteres do valor literal.</returns>
    </member>
    <member name="P:System.Windows.Markup.XData.XmlReader">
      <summary vsli:raw="Gets or sets a reader for the literal data.">Obtém ou define um leitor de dados literais.</summary>
      <returns vsli:raw="A reader for the literal data.">Um leitor para os dados literais.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlLangPropertyAttribute">
      <summary vsli:raw="Identifies the property to associate with the xml:lang attribute.">Identifica a propriedade a ser associada ao atributo xml:lang.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLangPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlLangPropertyAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XmlLangPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The property name to associate with the &lt;see langword=&quot;xml:lang&quot; /&gt; attribute.">O nome da propriedade a ser associada ao atributo <see langword="xml:lang" />.</param>
    </member>
    <member name="P:System.Windows.Markup.XmlLangPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that is specified in this attribute.">Obtém o nome da propriedade que está especificada nesse atributo.</summary>
      <returns vsli:raw="The name of the property.">O nome da propriedade.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsCompatibleWithAttribute">
      <summary vsli:raw="Specifies that a XAML namespace can be subsumed by another XAML namespace. Typically, the subsuming XAML namespace is indicated in a previously defined &lt;see cref=&quot;T:System.Windows.Markup.XmlnsDefinitionAttribute&quot; /&gt;.">Especifica que um namespace de XAML pode ser incluído em outro namespace de XAML. Normalmente, o namespace de XAML incluído é indicado em um <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" /> definido anteriormente.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsCompatibleWithAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsCompatibleWithAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XmlnsCompatibleWithAttribute" />.</summary>
      <param name="oldNamespace" vsli:raw="The reference XAML namespace identifier.">O identificador do namespace de XAML de referência.</param>
      <param name="newNamespace" vsli:raw="The subsuming XAML namespace identifier.">O identificador do namespace de XAML incluído.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;oldNamespace&quot; /&gt; or &lt;paramref name=&quot;newNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="oldNamespace" /> ou <paramref name="newNamespace" /> são <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.NewNamespace">
      <summary vsli:raw="Gets the subsuming namespace identifier reported by this attribute.">Obtém o identificador de namespace incluído relatado por este atributo.</summary>
      <returns vsli:raw="The subsuming namespace identifier reported in the attribute.">O identificador do namespace subsuming relatado no atributo.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.OldNamespace">
      <summary vsli:raw="Gets the reference namespace identifier reported by this attribute.">Obtém o identificador de namespace de referência relatado por este atributo.</summary>
      <returns vsli:raw="The reference namespace identifier.">O identificador do namespace de referência.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDefinitionAttribute">
      <summary vsli:raw="Specifies a mapping on a per-assembly basis between a XAML namespace and a CLR namespace, which is then used for type resolution by a XAML object writer or XAML schema context.">Especifica um mapeamento por assembly entre um namespace de XAML e um namespace do CLR que, em seguida, será usado para resolução de tipo por um gravador de objeto XAML ou um contexto de esquema XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsDefinitionAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" />.</summary>
      <param name="xmlNamespace" vsli:raw="The XAML namespace identifier.">O identificador do namespace de XAML.</param>
      <param name="clrNamespace" vsli:raw="A string that references a CLR namespace name.">Uma cadeia de caracteres que faz referência a um nome de namespace do CLR.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlNamespace&quot; /&gt; or &lt;paramref name=&quot;clrNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlNamespace" /> ou <paramref name="clrNamespace" /> são <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly associated with the attribute.">Obtém ou define o nome do assembly associado ao atributo.</summary>
      <returns vsli:raw="The assembly name.">O nome do assembly.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace">
      <summary vsli:raw="Gets the string name of the CLR namespace specified in this attribute.">Obtém o nome de cadeia de caracteres do namespace de CLR especificado neste atributo.</summary>
      <returns vsli:raw="The CLR namespace, specified as a string.">O namespace CLR, especificado como uma cadeia de caracteres.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace">
      <summary vsli:raw="Gets the XAML namespace identifier specified in this attribute.">Obtém o identificador do namespace de XAML especificado neste atributo.</summary>
      <returns vsli:raw="The XAML namespace identifier.">O identificador do namespace de XAML.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsPrefixAttribute">
      <summary vsli:raw="Identifies a recommended prefix to associate with a XAML namespace for XAML usage, when writing elements and attributes in a XAML file (serialization) or when interacting with a design environment that has XAML editing features.">Identifica um prefixo recomendado a ser associado a um namespace de XAML para uso em XAML, ao escrever elementos e atributos em um arquivo XAML (serialização) ou ao interagir com um ambiente de design que tenha recursos de edição de XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsPrefixAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" />.</summary>
      <param name="xmlNamespace" vsli:raw="The XAML namespace identifier.">O identificador do namespace de XAML.</param>
      <param name="prefix" vsli:raw="The recommended prefix string.">A cadeia de caracteres de prefixo recomendada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlNamespace&quot; /&gt; or &lt;paramref name=&quot;prefix&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlNamespace" /> ou <paramref name="prefix" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
      <summary vsli:raw="Gets the recommended prefix associated with this attribute.">Obtém o prefixo recomendado associado a este atributo.</summary>
      <returns vsli:raw="The recommended prefix string.">A cadeia de caracteres de prefixo recomendada.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
      <summary vsli:raw="Gets the XAML namespace identifier associated with this attribute.">Obtém o identificador do namespace de XAML associado a esse atributo.</summary>
      <returns vsli:raw="The XAML namespace identifier.">O identificador do namespace de XAML.</returns>
    </member>
    <member name="T:System.Xaml.AmbientPropertyValue">
      <summary vsli:raw="Reports information about an ambient property, as part of an &lt;see cref=&quot;T:System.Xaml.IAmbientProvider&quot; /&gt; implementation.">Relata informações sobre uma propriedade de ambiente como parte de uma implementação <see cref="T:System.Xaml.IAmbientProvider" />.</summary>
    </member>
    <member name="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.AmbientPropertyValue" />.</summary>
      <param name="property" vsli:raw="The identifier that represents the ambient property.">O identificador que representa a propriedade do ambiente.</param>
      <param name="value" vsli:raw="The value to report.">O valor a relar.</param>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.RetrievedProperty">
      <summary vsli:raw="Gets the XAML type system identifier (&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;) that represents the ambient property.">Obtém o identificador de sistema do tipo XAML (<see cref="T:System.Xaml.XamlMember" />) que representa a propriedade do ambiente.</summary>
      <returns vsli:raw="The identifier that represents the ambient property.">O identificador que representa a propriedade do ambiente.</returns>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.Value">
      <summary vsli:raw="Gets the value of the ambient property.">Obtém o valor da propriedade de ambiente.</summary>
      <returns vsli:raw="The value of the ambient property.">O valor da propriedade de ambiente.</returns>
    </member>
    <member name="T:System.Xaml.AttachableMemberIdentifier">
      <summary vsli:raw="Provides a XAML type system identifier representation for attachable members. The identifier structure parallels the &lt;paramref name=&quot;declaringType&quot; /&gt;&lt;see langword=&quot;.&quot; /&gt;&lt;paramref name=&quot;memberName&quot; /&gt; string form for attachable member usage.">Fornece uma representação de identificador de sistema de tipo XAML para membros anexáveis. A estrutura do identificador coloca em paralelo o formulário de cadeia de caracteres <paramref name="declaringType" /><see langword="." /><paramref name="memberName" /> para uso do membro anexável.</summary>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <param name="declaringType" vsli:raw="The &lt;paramref name=&quot;declaringType&quot; /&gt; component of the identifier, which should match the name of the declaring &lt;see cref=&quot;P:System.Xaml.XamlMember.Type&quot; /&gt;.">O componente <paramref name="declaringType" /> do identificador, que deve corresponder ao nome do <see cref="P:System.Xaml.XamlMember.Type" /> declarante.</param>
      <param name="memberName" vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; component of the identifier, which should match the &lt;see cref=&quot;P:System.Xaml.XamlMember.Name&quot; /&gt;.">O <paramref name="memberName" /> componente do identificador, que deve corresponder ao <see cref="P:System.Xaml.XamlMember.Name" />.</param>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and a specified object have the same value.">Determina se essa instância do <see cref="T:System.Xaml.AttachableMemberIdentifier" /> e um objeto especificado têm o mesmo valor.</summary>
      <param name="obj" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">O objeto a ser comparado com o <see cref="T:System.Xaml.AttachableMemberIdentifier" /> atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and if its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj" /> for um <see cref="T:System.Xaml.AttachableMemberIdentifier" /> e seu valor for o mesmo que o dessa instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether this instance and another specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; object have the same value.">Determina se essa instância e outro objeto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> especificado têm o mesmo valor.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">O <see cref="T:System.Xaml.AttachableMemberIdentifier" /> a ser comparado com o <see cref="T:System.Xaml.AttachableMemberIdentifier" /> atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the objects have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se ambos os objetos tiverem o mesmo valor; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Retorna o código hash para este <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="An integer hash code.">Um código hash inteiro.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Equality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; objects have the same value.">Determina se dois objetos <see cref="T:System.Xaml.AttachableMemberIdentifier" /> especificados têm o mesmo valor.</summary>
      <param name="left" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Xaml.AttachableMemberIdentifier" /> ou <see langword="null" />.</param>
      <param name="right" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Xaml.AttachableMemberIdentifier" /> ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;left&quot; /&gt; is the same as the value of &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor de <paramref name="left" /> for o mesmo que o valor de <paramref name="right" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Inequality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; objects have different values.">Determina se dois objetos <see cref="T:System.Xaml.AttachableMemberIdentifier" /> especificados têm valores diferentes.</summary>
      <param name="left" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Xaml.AttachableMemberIdentifier" /> ou <see langword="null" />.</param>
      <param name="right" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Xaml.AttachableMemberIdentifier" /> ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;left&quot; /&gt; differs from the value of &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor de <paramref name="left" /> for diferente do valor de <paramref name="right" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Retorna um valor <see cref="T:System.String" /> que representa o <see cref="T:System.Xaml.AttachableMemberIdentifier" /> atual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Um <see cref="T:System.String" /> que representa o <see cref="T:System.Xaml.AttachableMemberIdentifier" /> atual.</returns>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.DeclaringType">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;declaringType&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Obtém ou define o valor de componente <paramref name="declaringType" /> de <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;declaringType&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">O <paramref name="declaringType" /> valor do componente do <see cref="T:System.Xaml.AttachableMemberIdentifier" /> .</returns>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.MemberName">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;memberName&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Obtém ou define o valor de componente <paramref name="memberName" /> de <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">O <paramref name="memberName" /> valor do componente do <see cref="T:System.Xaml.AttachableMemberIdentifier" /> .</returns>
    </member>
    <member name="T:System.Xaml.AttachablePropertyServices">
      <summary vsli:raw="Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.">Fornece métodos auxiliares estáticos que obtêm as informações de método do acessador e valores de uma propriedade anexável e que funcionam com um repositório de propriedades anexadas.</summary>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies all attachable property/value pairs from a specified attachable property store and into a destination array.">Copia todos os pares de valor/propriedade anexáveis de um repositório de propriedades anexáveis especificado para uma matriz de destino.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Um repositório de propriedades anexáveis específico que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />; ou qualquer objeto não nulo para acessar um repositório de propriedades anexáveis padrão estático.</param>
      <param name="array" vsli:raw="The destination array. The array is a generic array, should be passed undimensioned, and should have components of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and &lt;see langword=&quot;object&quot; /&gt;.">A matriz de destino. A matriz é uma matriz genérica, deve ser passada não dimensionada e deve ter os componentes de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> e <see langword="object" />.</param>
      <param name="index" vsli:raw="The source index into which to copy.">O índice de origem para o qual copiar.</param>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
      <summary vsli:raw="Returns the count of the attachable property entries that are in the specified store.">Retorna a contagem das entradas de propriedade anexável que estão no repositório especificado.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Um repositório de propriedades anexáveis específico que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />; ou qualquer objeto não nulo para acessar um repositório de propriedades anexáveis padrão estático.</param>
      <returns vsli:raw="The integer count of entries in the store.">A contagem de inteiro de entradas no repositório.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Removes the entry for the specified attachable property from the specified store.">Remove a entrada para a propriedade anexável especificada do repositório especificado.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Um repositório de propriedades anexáveis específico que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />; ou qualquer objeto não nulo para acessar um repositório de propriedades anexáveis padrão estático.</param>
      <param name="name" vsli:raw="The identifier for the attachable property entry to remove from the store.">O identificador da entrada de propriedade anexável a remover do armazenamento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and removed from it; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uma entrada de propriedade anexável para <paramref name="name" /> tiver sido encontrada no repositório e removida dele; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary vsli:raw="Sets a value for the specified attachable property in the specified store.">Define um valor para a propriedade anexável especificada no repositório especificado.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to use a static default attachable property store.">Um repositório de propriedades anexáveis específico que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />; ou qualquer objeto não nulo para usar um repositório de propriedades anexáveis padrão estático.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to set a value.">O identificador da entrada de propriedade anexável para a qual definir um valor.</param>
      <param name="value" vsli:raw="The value to set.">O valor a ser definido.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A value could not be set in the store.">Não foi possível definir um valor no repositório.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable property in the specified store. Does not throw an exception if the specific attachable property does not exist in the store.">Tenta obter um valor para a propriedade anexável especificada no repositório especificado. Não lançará uma exceção se a propriedade anexável específica não existir no repositório.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to use a static default attachable property store.">Um repositório de propriedades anexáveis específico que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />; ou qualquer objeto não nulo para usar um repositório de propriedades anexáveis padrão estático.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to get a value.">O identificador da entrada de propriedade anexável para a qual obter um valor.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;name&quot; /&gt; exists in the store and has a value.">Parâmetro de saída. Quando esse método for retornado, ele conterá o objeto de destino para o valor se <paramref name="name" /> existir no repositório e tiver um valor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uma entrada de propriedade anexável para <paramref name="name" /> for encontrada no repositório e um valor for lançado em <paramref name="value" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable property in the specified store, returning a generic output form. Does not throw an exception if the specific attachable property does not exist in the store.">Tenta obter um valor para a propriedade anexável especificada no repositório especificado, retornando um formulário genérico de saída. Não lançará uma exceção se a propriedade anexável específica não existir no repositório.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Um repositório de propriedades anexáveis específico que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />; ou qualquer objeto não nulo para acessar um repositório de propriedades anexáveis padrão estático.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to get a value.">O identificador da entrada de propriedade anexável para a qual obter um valor.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;name&quot; /&gt; exists in the store and has a value.">Parâmetro de saída. Quando esse método for retornado, ele conterá o objeto de destino para o valor se <paramref name="name" /> existir no repositório e tiver um valor.</param>
      <typeparam name="T" vsli:raw="The expected type of the output.">O tipo esperado da saída.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uma entrada de propriedade anexável para <paramref name="name" /> for encontrada no repositório e um valor for lançado em <paramref name="value" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IAmbientProvider">
      <summary vsli:raw="Represents a service that can return information items about ambient properties or ambient types to type converters and markup extensions.">Representa um serviço que pode retornar itens de informações sobre propriedades de ambiente ou tipos de ambiente para conversores de tipo e extensões de marcação.</summary>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns an enumerable set of ambient property information items for the requested set of types and properties.">Retorna um conjunto enumerável de itens de informações de propriedade de ambiente para o conjunto solicitado de tipos e propriedades.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property. May be &lt;see langword=&quot;null&quot; /&gt;.">Especifica um ou mais tipos que devem parar a avaliação quando eles forem encontrados subindo no gráfico de objeto. Esse tipo contém a propriedade de ambiente desejada. Pode ser <see langword="null" />.</param>
      <param name="searchLiveStackOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to not use a saved context; &lt;see langword=&quot;false&quot; /&gt; to use a saved context. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para não usar um contexto salvo; <see langword="false" /> para usar um contexto salvo. O padrão é <see langword="false" />.</param>
      <param name="types" vsli:raw="Specifies one or more type identifier objects that identify the types to be considered ambient.">Especifica um ou mais objetos de identificador tipo que identificam os tipos a serem considerados ambiente.</param>
      <param name="properties" vsli:raw="Specifies one or more property identifier objects that identify the properties to be considered ambient.">Especifica um ou mais objetos de identificador de propriedades que identificam as propriedades a serem consideradas ambiente.</param>
      <returns vsli:raw="An enumerable set of ambient property information items for the requested set of types and properties. The property information for each &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; that is returned will match one of the input &lt;paramref name=&quot;types&quot; /&gt; or &lt;paramref name=&quot;properties&quot; /&gt;.">Um conjunto enumerável de itens de informações de propriedade de ambiente para o conjunto solicitado de propriedades e tipos. As informações de propriedade para cada <see cref="T:System.Xaml.AmbientPropertyValue" /> que é retornado corresponderá a uma entrada <paramref name="types" /> ou <paramref name="properties" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns an enumerable set of ambient property information items for the requested set of properties.">Retorna um conjunto enumerável de itens de informações de propriedade de ambiente para o conjunto solicitado de propriedades.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property. May be &lt;see langword=&quot;null&quot; /&gt;.">Especifica um ou mais tipos que devem parar a avaliação quando eles forem encontrados subindo no gráfico de objeto. Esse tipo contém a propriedade de ambiente desejada. Pode ser <see langword="null" />.</param>
      <param name="properties" vsli:raw="Specifies one or more property identifier objects that identify the properties to be considered ambient.">Especifica um ou mais objetos de identificador de propriedades que identificam as propriedades a serem consideradas ambiente.</param>
      <returns vsli:raw="An enumerable set of ambient property information items for the requested set of properties. The property information for each &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; that is returned will match one of the input &lt;paramref name=&quot;properties&quot; /&gt;.">Um conjunto enumerável de itens de informações de propriedade de ambiente para o conjunto solicitado de propriedades. As informações de propriedade para cada <see cref="T:System.Xaml.AmbientPropertyValue" /> que é retornado corresponderá a uma entrada <paramref name="properties" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])">
      <summary vsli:raw="Returns an enumerable set of object instances of possible ambient types for the requested types.">Retorna um conjunto enumerável de instâncias de objeto de possíveis tipos de ambiente para tipos solicitados.</summary>
      <param name="types" vsli:raw="The set of types from which to retrieve ambient type information.">O conjunto de tipos do qual recuperar informações de tipo de ambiente.</param>
      <returns vsli:raw="An enumerable set of objects that represent the values for the requested set of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; identifiers.">Um conjunto enumerável de objetos que representam os valores do conjunto solicitado de identificadores <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns a single ambient property information item from the requested set of properties, based on which property is first encountered.">Retorna um único item de informações de propriedade de ambiente do conjunto solicitado de propriedades, com base em qual propriedade é encontrada pela primeira.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property.">Especifica um ou mais tipos que devem parar a avaliação quando eles forem encontrados subindo no gráfico de objeto. Esse tipo contém a propriedade de ambiente desejada.</param>
      <param name="properties" vsli:raw="Specifies one or more objects that identify the properties to be considered ambient.">Especifica um ou mais objetos que identificam as propriedades a serem consideradas ambiente.</param>
      <returns vsli:raw="A single ambient property information item for the first ambient property value from the &lt;paramref name=&quot;properties&quot; /&gt; list that is found.">Um único item de informação de propriedade de ambiente para o primeiro valor da propriedade de ambiente da lista <paramref name="properties" /> que é encontrado.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])">
      <summary vsli:raw="Returns the first matching object that is a possible ambient type for the requested types.">Retorna o primeiro objeto correspondente que é um tipo de ambiente possível para os tipos solicitados.</summary>
      <param name="types" vsli:raw="The set of types from which to retrieve ambient type information.">O conjunto de tipos do qual recuperar informações de tipo de ambiente.</param>
      <returns vsli:raw="The first result object for the requested set.">O primeiro objeto de resultado para o conjunto solicitado.</returns>
    </member>
    <member name="T:System.Xaml.IAttachedPropertyStore">
      <summary vsli:raw="Represents an attachable member store for an object where attachable members are set. This attachable member store can then be referenced with &lt;see cref=&quot;T:System.Xaml.AttachablePropertyServices&quot; /&gt;.">Representa um repositório de membros anexável para um objeto em que os membros anexáveis são definidos. Esse repositório de membros anexável pode ser referenciado com <see cref="T:System.Xaml.AttachablePropertyServices" />.</summary>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies all attachable member/value pairs from this attachable member store into a destination array.">Copia todos os pares de valor-membro anexáveis deste repositório de membros anexável para uma matriz de destino.</summary>
      <param name="array" vsli:raw="The destination array. The array is a generic array, should be passed undimensioned, and should have components of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and &lt;see langword=&quot;object&quot; /&gt;.">A matriz de destino. A matriz é uma matriz genérica, deve ser passada não dimensionada e deve ter os componentes de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> e <see langword="object" />.</param>
      <param name="index" vsli:raw="The source index where copying should begin.">O índice de origem no qual a cópia deve ser iniciada.</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Removes the entry for the specified attachable member from this attachable member store.">Remove a entrada para o membro anexável especificado desse repositório de membros anexável.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to remove.">O identificador do sistema de tipo XAML para a entrada de membro anexável a remover.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable member entry for &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; was found in the store and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uma entrada de membro anexável para <paramref name="attachableMemberIdentifier" /> tiver sido encontrada no repositório e removida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary vsli:raw="Sets a value for the specified attachable member in the specified store.">Define um valor para o membro anexável especificado no repositório especificado.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to set.">O identificador do sistema de tipo XAML para a entrada de membro anexável a definir.</param>
      <param name="value" vsli:raw="The value to set.">O valor a ser definido.</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable member in the specified store.">Tenta obter um valor para o membro anexável especificado no repositório especificado.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to get.">O identificador do sistema de tipo XAML para a entrada de membro anexável a obter.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; exists in the store and has a value.">Parâmetro de saída. Quando esse método for retornado, ele conterá o objeto de destino para o valor se <paramref name="attachableMemberIdentifier" /> existir no repositório e tiver um valor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable member entry for &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uma entrada de membro anexável para <paramref name="attachableMemberIdentifier" /> for encontrada no repositório e um valor for lançado em <paramref name="value" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.IAttachedPropertyStore.PropertyCount">
      <summary vsli:raw="Gets the count of the attachable member entries in this attachable member store.">Obtém a contagem de entradas de membro anexáveis neste repositório de membros anexável.</summary>
      <returns vsli:raw="The integer count of entries in the store.">A contagem de inteiro de entradas no repositório.</returns>
    </member>
    <member name="T:System.Xaml.IDestinationTypeProvider">
      <summary vsli:raw="Represents a service that can return a CLR type system identifier for the destination type. The destination type is relevant when the destination type for a property-setting operation is indirectly reported by reflection or other mechanisms.">Representa um serviço que pode retornar um identificador de sistema do tipo CLR para o tipo de destino. O tipo de destino é relevante quando o tipo de destino de uma operação de configuração de propriedade é relatado indiretamente por reflexão ou outros mecanismos.</summary>
    </member>
    <member name="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
      <summary vsli:raw="Returns the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that identifies the destination type for the relevant type converter or markup extension.">Retorna o CLR <see cref="T:System.Type" /> que identifica o tipo de destino para a extensão de marcação ou o conversor de tipo relevante.</summary>
      <returns vsli:raw="A CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination type.">Um valor CLR <see cref="T:System.Type" /> para o tipo de destino.</returns>
    </member>
    <member name="T:System.Xaml.INamespacePrefixLookup">
      <summary vsli:raw="Represents a service that can return the recommended prefix for a XAML namespace mapping to consumers. Consumers might include design environments or serializers.">Representa um serviço que pode retornar o prefixo recomendado para um mapeamento de namespace XAML para consumidores. Os consumidores podem incluir serializadores ou ambientes de design.</summary>
    </member>
    <member name="M:System.Xaml.INamespacePrefixLookup.LookupPrefix(System.String)">
      <summary vsli:raw="Returns the recommended prefix for a specified XAML namespace identifier.">Retorna o prefixo recomendado para um identificador de namespace XAML especificado.</summary>
      <param name="ns" vsli:raw="The XAML namespace identifier string for which to obtain a prefix.">A cadeia de caracteres do identificador de namespace XAML para a qual obter um prefixo.</param>
      <returns vsli:raw="The recommended prefix.">O prefixo recomendado.</returns>
    </member>
    <member name="T:System.Xaml.IRootObjectProvider">
      <summary vsli:raw="Describes a service that can return the root object of markup being parsed.">Descreve um serviço que pode retornar o objeto raiz da marcação que está sendo analisada.</summary>
    </member>
    <member name="P:System.Xaml.IRootObjectProvider.RootObject">
      <summary vsli:raw="Gets the root object from markup or from an object graph.">Obtém o objeto raiz de marcação ou de um grafo de objeto.</summary>
      <returns vsli:raw="The root object.">O objeto raiz.</returns>
    </member>
    <member name="T:System.Xaml.IXamlIndexingReader">
      <summary vsli:raw="Provides a service that represents indexed node control for a simple implementation of a node-based XAML reader.">Fornece um serviço que representa um controle de nó indexado para uma implementação simples de um leitor XAML baseado em nó.</summary>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.Count">
      <summary vsli:raw="Gets the number of nodes in the current external node set.">Obtém o número de nós no conjunto de nós externo atual.</summary>
      <returns vsli:raw="The number of nodes in the current external node set.">O número de nós no conjunto de nós externo atual.</returns>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.CurrentIndex">
      <summary vsli:raw="Gets or sets the index number of the current reader position for the indexed list view of XAML nodes.">Obtém ou define o número de índice da posição atual do leitor para a exibição de lista indexada de nós XAML.</summary>
      <returns vsli:raw="The index number of the current reader position.">O número de índice da posição atual do leitor.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfo">
      <summary vsli:raw="Describes a service for reporting text line information in XAML reader implementations.">Descreve um serviço para relatar informações de linha de texto em implementações do leitor XAML.</summary>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Obtém um valor que especifica se as informações da linha estão disponíveis.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se as informações de linha estiverem disponíveis; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Obtém o número de linha a ser relatado.</summary>
      <returns vsli:raw="The line number to report.">O número de linha a ser relatado.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Obtém a posição da linha a ser relatada.</summary>
      <returns vsli:raw="The line position to report.">A posição da linha a ser relatada.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfoConsumer">
      <summary vsli:raw="Describes a service where a XAML writer can use reported line information and then include the information in the output.">Descreve um serviço em que um gravador XAML pode usar as informações de linha relatadas e, em seguida, incluir as informações na saída.</summary>
    </member>
    <member name="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)">
      <summary vsli:raw="Collects line information.">Coleta informações de linha.</summary>
      <param name="lineNumber" vsli:raw="The line number to use in the output.">O número de linha a ser usado na saída.</param>
      <param name="linePosition" vsli:raw="The line position to use in the output.">A posição de linha a ser usada na saída.</param>
    </member>
    <member name="P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo">
      <summary vsli:raw="Gets a value that determines whether a line information service should provide values and therefore, should also call &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; when relevant.">Obtém um valor que determina se um serviço de informações de linha deve fornecer valores e, portanto, também deve chamar <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> quando relevante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is used by the implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se as informações de linha forem usadas pela implementação; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameProvider">
      <summary vsli:raw="Provides a service that is used during save and write operations to input an object and return a XAML name.">Fornece um serviço que é usado durante operações de gravação e salvamento para inserir um objeto e retornar um nome XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameProvider.GetName(System.Object)">
      <summary vsli:raw="Retrieves the XAML name of the specified object.">Recupera o nome XAML do objeto especificado.</summary>
      <param name="value" vsli:raw="The object to get the name for.">O objeto para o qual obter o nome.</param>
      <returns vsli:raw="The XAML name value of the requested object.">O valor do nome XAML do objeto solicitado.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameResolver">
      <summary vsli:raw="Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution. The service can also return an enumerable set of all named objects that are in the XAML namescope.">Descreve um serviço que pode retornar objetos especificados pelo nome XAML ou, como alternativa, retorna um token que adia a resolução de nomes. O serviço também pode retornar um conjunto enumerável de todos os objetos nomeados que estão em namescope XAML.</summary>
    </member>
    <member name="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete">
      <summary vsli:raw="Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.">Ocorre quando um processador XAML registrou todos os nomes relevantes para o namescope XAML de backup.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope">
      <summary vsli:raw="Returns an enumerable set of all named objects in the XAML namescope.">Retorna um conjunto enumerável de todos os objetos nomeados no namescope XAML.</summary>
      <returns vsli:raw="An enumerable set of &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; objects. For each &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt;, the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Key&quot; /&gt; component is a string, and the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Value&quot; /&gt; component is the object that uses the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Key&quot; /&gt; name in the XAML namescope.">Um conjunto enumerável de objetos <see cref="T:System.Collections.Generic.KeyValuePair`2" />. Para cada <see cref="T:System.Collections.Generic.KeyValuePair`2" />, o componente <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> é uma cadeia de caracteres e o componente <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> é o objeto que usa o nome <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> no namescope XAML.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Returns an object that can correct for certain markup patterns that produce forward references.">Retorna um objeto que pode corrigir determinados padrões de marcação que produzem referências de encaminhamento.</summary>
      <param name="names" vsli:raw="A collection of names that are possible forward references.">Uma coleção de nomes que são possíveis referências de encaminhamento.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Um objeto que fornece um token para o comportamento de pesquisa a ser avaliado mais tarde.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary vsli:raw="Returns an object that can correct for certain markup patterns that produce forward references.">Retorna um objeto que pode corrigir determinados padrões de marcação que produzem referências de encaminhamento.</summary>
      <param name="names" vsli:raw="A collection of names that are possible forward references.">Uma coleção de nomes que são possíveis referências de encaminhamento.</param>
      <param name="canAssignDirectly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to immediately assign the resolved name reference to the target property. &lt;see langword=&quot;false&quot; /&gt; to call the user code for a reparse. The default behavior is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para atribuir imediatamente a referência de nome resolvido à propriedade de destino. <see langword="false" /> para chamar o código de usuário para uma nova análise. O comportamento padrão é <see langword="false" />.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Um objeto que fornece um token para o comportamento de pesquisa a ser avaliado mais tarde.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String)">
      <summary vsli:raw="Resolves an object from a name reference.">Resolve um objeto de uma referência de nome.</summary>
      <param name="name" vsli:raw="The name reference to resolve.">A referência de nome a resolver.</param>
      <returns vsli:raw="The resolved object; or null.">O objeto resolvido; ou nulo.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)">
      <summary vsli:raw="Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.">Resolve um objeto de uma referência de nome e fornece um valor de acompanhamento que informa se o objeto está totalmente inicializado para fins de gráfico de objeto.</summary>
      <param name="name" vsli:raw="The name reference to resolve.">A referência de nome a resolver.</param>
      <param name="isFullyInitialized" vsli:raw="When this method returns, &lt;see langword=&quot;true&quot; /&gt; if the returned object has any dependencies on unresolved references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Quando este método retorna, <see langword="true" /> se o objeto retornado tiver quaisquer dependências de referências não resolvidas; caso contrário, <see langword="false" />.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Um objeto que fornece um token para o comportamento de pesquisa a ser avaliado mais tarde.</returns>
    </member>
    <member name="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable">
      <summary vsli:raw="Gets a value that determines whether calling &lt;see cref=&quot;M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)&quot; /&gt; is available in order to resolve a name into a token for forward resolution.">Obtém um valor que determina se chamar <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> está disponível para resolver um nome em um token para resolução de encaminhamento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)&quot; /&gt; is available as an implementation that returns a useful token for forward resolution; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> está disponível como uma implementação que retorna um token útil para resolução de encaminhamento; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Xaml.IXamlNamespaceResolver">
      <summary vsli:raw="Describes a service that can return a XAML namespace that is based on its prefix as it is mapped in XAML markup.">Descreve um serviço que pode retornar um namespace de XAML que se baseia em seu prefixo, pois ele é mapeado na marcação XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespace(System.String)">
      <summary vsli:raw="Retrieves a XAML namespace identifier for the specified prefix string.">Recupera um identificador de namespace de XAML para a cadeia de caracteres de prefixo especificada.</summary>
      <param name="prefix" vsli:raw="The prefix for which to retrieve the XAML namespace information.">O prefixo para o qual recuperar as informações do namespace de XAML.</param>
      <returns vsli:raw="The requested XAML namespace identifier, as a string.">O identificador de namespace de XAML solicitado, como uma cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespacePrefixes">
      <summary vsli:raw="Returns all the possible prefix-to-XAML namespace mappings (&lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; values) that are available in the active XAML schema context.">Retorna todos os possíveis mapeamentos de namespace de XAML para prefixo (valores <see cref="T:System.Xaml.NamespaceDeclaration" />) que estão disponíveis no contexto de esquema de XAML ativo.</summary>
      <returns vsli:raw="An enumerable set of &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; values. To get all the prefix strings, get the &lt;see cref=&quot;P:System.Xaml.NamespaceDeclaration.Prefix&quot; /&gt; value from each value in the returned set. To get prefixes for specific XAML namespaces, process any return value that has the desired &lt;see cref=&quot;P:System.Xaml.NamespaceDeclaration.Namespace&quot; /&gt; value.">Um conjunto enumerável de valores <see cref="T:System.Xaml.NamespaceDeclaration" />. Para obter todas as cadeias de caracteres de prefixo, obtenha o valor <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> de cada valor no conjunto retornado. Para obter prefixos de namespaces de XAML específicos, processe qualquer valor retornado que tenha o valor <see cref="P:System.Xaml.NamespaceDeclaration.Namespace" /> desejado.</returns>
    </member>
    <member name="T:System.Xaml.IXamlObjectWriterFactory">
      <summary vsli:raw="Represents a service that generates a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that is based on the current internal parser context.">Representa um serviço que gera um <see cref="T:System.Xaml.XamlObjectWriter" /> que é baseado no contexto atual do analisador interno.</summary>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetParentSettings">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; from the original internal parser context.">Retorna o <see cref="T:System.Xaml.XamlObjectWriterSettings" /> do contexto original do analisador interno.</summary>
      <returns vsli:raw="The settings from the original internal parser context.">As configurações do contexto original do analisador interno.</returns>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that is based on active XAML schema context.">Retorna um <see cref="T:System.Xaml.XamlObjectWriter" /> que é baseado no contexto de esquema XAML ativo.</summary>
      <param name="settings" vsli:raw="The settings to use for construction and initialization of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">As configurações a serem usadas para a construção e inicialização do <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that has the specified settings.">Um <see cref="T:System.Xaml.XamlObjectWriter" /> que tem as configurações especificadas.</returns>
    </member>
    <member name="T:System.Xaml.IXamlSchemaContextProvider">
      <summary vsli:raw="Represents a service that provides XAML schema context information to type converters and markup extensions.">Representa um serviço que fornece informações de contexto de esquema XAML para conversores de tipo e extensões de marcação.</summary>
    </member>
    <member name="P:System.Xaml.IXamlSchemaContextProvider.SchemaContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; that is reported by the service context.">Obtém o <see cref="T:System.Xaml.XamlSchemaContext" /> que é relatado pelo contexto de serviço.</summary>
      <returns vsli:raw="The XAML schema context that is reported by the service context.">O contexto do esquema XAML que é relatado pelo contexto de serviço.</returns>
    </member>
    <member name="T:System.Xaml.NamespaceDeclaration">
      <summary vsli:raw="Declares the identifier and the prefix of a XAML namespace by storing these string values as separate properties.">Declara o identificador e o prefixo de um namespace XAML armazenando estes valores de cadeia de caracteres como propriedades separadas.</summary>
    </member>
    <member name="M:System.Xaml.NamespaceDeclaration.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; class using initial property values.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.NamespaceDeclaration" /> usando valores de propriedade iniciais.</summary>
      <param name="ns" vsli:raw="The XAML namespace identifier, as a string.">O identificador do namespace XAML, como uma cadeia de caracteres.</param>
      <param name="prefix" vsli:raw="The string prefix that is used for the namespace in prefix mappings.">O prefixo de cadeia de caracteres usado para o namespace em mapeamentos de prefixo.</param>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Namespace">
      <summary vsli:raw="Gets the identifier component of a &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Obtém o componente do identificador de um <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns vsli:raw="The identifier of the XAML namespace declaration.">O identificador da declaração do namespace XAML.</returns>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Prefix">
      <summary vsli:raw="Gets the prefix that is used as the XAML namespace mapping prefix for a &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Obtém o prefixo usado como o prefixo de mapeamento do namespace XAML para um <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns vsli:raw="The prefix string for this &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">A cadeia de caracteres de prefixo para isso <see cref="T:System.Xaml.NamespaceDeclaration" /> .</returns>
    </member>
    <member name="T:System.Xaml.Schema.AllowedMemberLocations">
      <summary vsli:raw="Specifies the syntax restrictions enforced on a property when it is set in XAML, as reported by a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Especifica as restrições de sintaxe impostas em uma propriedade quando ela é definida em XAML, conforme relatado por um <see cref="T:System.Xaml.XamlDirective" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Any">
      <summary vsli:raw="Property can be set in either &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.Attribute&quot; /&gt; or &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.MemberElement&quot; /&gt; location. (This enumeration member is defined as the combination of those values.)">A propriedade pode ser definida no local <see cref="F:System.Xaml.Schema.AllowedMemberLocations.Attribute" /> ou <see cref="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement" />. (Esse membro de enumeração é definido como a combinação desses valores.)</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Attribute">
      <summary vsli:raw="Property can be set in XAML attribute syntax.">A propriedade pode ser definida na sintaxe do atributo XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement">
      <summary vsli:raw="Property can be set in XAML property element syntax.">A propriedade pode ser definida na sintaxe do elemento da propriedade XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.None">
      <summary vsli:raw="Property cannot be set in XAML at all. This is the default.">Propriedade não pode ser definida em XAML de modo algum. Este é o padrão.</summary>
    </member>
    <member name="T:System.Xaml.Schema.ShouldSerializeResult">
      <summary vsli:raw="Defines serialization behavior as reported by a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Define o comportamento de serialização conforme relatado por um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.Default">
      <summary vsli:raw="Unknown, defer to the type of the member.">Desconhecido, adiar para o tipo do membro.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.False">
      <summary vsli:raw="Do not serialize the result.">Não serialize o resultado.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.True">
      <summary vsli:raw="Serialize the result.">Serialize o resultado.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlCollectionKind">
      <summary vsli:raw="Describes the collection metaphor (if any) used by a XAML member.">Descreve a metáfora de coleção (se houver) usada por um membro XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Array">
      <summary vsli:raw="XAML member supports an array collection.">O membro XAML dá suporte a uma coleção de matrizes.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Collection">
      <summary vsli:raw="XAML member supports a list or a collection.">O membro XAML dá suporte a uma lista ou coleção.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Dictionary">
      <summary vsli:raw="XAML member supports a dictionary (key-value pairs).">O membro XAML dá suporte a um dicionário (pares chave-valor).</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.None">
      <summary vsli:raw="XAML member does not support a collection.">O membro XAML não dá suporte a uma coleção.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlMemberInvoker">
      <summary vsli:raw="Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.">Fornece um ponto de extensão que pode acessar as características de um membro XAML por meio de técnicas que não são de reflexão.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; class, based on a provided &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> com base em um <see cref="T:System.Xaml.XamlMember" /> fornecido.</summary>
      <param name="member" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; value for the specific XAML member relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">O valor do <see cref="T:System.Xaml.XamlMember" /> para o membro XAML específico, relevante a este <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
      <summary vsli:raw="Gets a value of the relevant property from an instance.">Obtém um valor da propriedade relevante de uma instância.</summary>
      <param name="instance" vsli:raw="An instance of the owner type for the member.">Uma instância do tipo de proprietário para o membro.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Invoked this method on a write-only member.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Esse método foi invocado em um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlMember" /> desconhecido.  
  
 - ou -  
  
Esse método foi invocado em um membro somente gravação.  
  
 - ou -  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The requested property value.">O valor da propriedade solicitada.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets a value of the relevant property on an instance.">Define um valor da propriedade relevante em uma instância.</summary>
      <param name="instance" vsli:raw="An instance of the owner type for the member.">Uma instância do tipo de proprietário para o membro.</param>
      <param name="value" vsli:raw="The property value to set.">O valor da propriedade a ser definido.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Invoked this method on a read-only member.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Esse método foi invocado em um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlMember" /> desconhecido.  
  
 - ou -  
  
Esse método foi invocado em um membro somente leitura.  
  
 - ou -  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value needs to be persisted by serialization processes.">Indica se o valor deve ser persistido ao longo dos processos de serialização.</summary>
      <param name="instance" vsli:raw="The instance with the property to be examined for persistence.">A instância com a propriedade a ser examinada quanto à persistência.</param>
      <returns vsli:raw="A value of the enumeration.">Um valor da enumeração.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that gets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Obtém a <see cref="T:System.Reflection.MethodInfo" /> para o método do CLR que obtém valores para a propriedade que é relevante para esse <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that gets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">O <see cref="T:System.Reflection.MethodInfo" /> para o método CLR que obtém valores para a propriedade que é relevante para isso <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> , ou <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that sets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Obtém a <see cref="T:System.Reflection.MethodInfo" /> para o método do CLR que define valores para a propriedade que é relevante para esse <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that sets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">O <see cref="T:System.Reflection.MethodInfo" /> para o método CLR que define valores para a propriedade que é relevante para isso <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> , ou <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
      <summary vsli:raw="Provides a static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Fornece um valor estático que representa um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> desconhecido, que não foi totalmente implementado.</summary>
      <returns vsli:raw="A static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Um valor estático que representa um desconhecido, não totalmente implementado <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> .</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeInvoker">
      <summary vsli:raw="Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.">Fornece um ponto de extensão que pode construir instâncias de um tipo XAML por meio de técnicas que não reflexão e construtores.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; class, based on a provided &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> com base em um <see cref="T:System.Xaml.XamlType" /> fornecido.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; value for the specific XAML type relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">O valor <see cref="T:System.Xaml.XamlType" /> para o tipo específico de XAML relevante a este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)">
      <summary vsli:raw="Adds the provided item to an instance of the type that is relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Adiciona o item fornecido a uma instância do tipo relevante a esse <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Uma instância do tipo especificado pelo <see cref="T:System.Xaml.XamlType" /> usado para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="item" vsli:raw="The item to add.">O item a ser adicionado.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a collection.">Esse método foi invocado em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlType" /> desconhecido.  
  
 - ou -  
  
Invocado esse método em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> em que o tipo relevante não é uma coleção.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="&lt;see cref=&quot;M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> retorna <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Adds the provided key and item value to an instance of the type that is relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Adiciona o valor de chave e item fornecido a uma instância do tipo que é relevante para esse <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Uma instância do tipo especificado pelo <see cref="T:System.Xaml.XamlType" /> usado para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="key" vsli:raw="Dictionary key for the item to add.">Chave de dicionário para o item a ser adicionado.</param>
      <param name="item" vsli:raw="The item value to add.">O valor do item a adicionar.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a dictionary.">Esse método foi invocado em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlType" /> desconhecido.  
  
 - ou -  
  
Invocado esse método em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> em que o tipo relevante não é um dicionário.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="&lt;see cref=&quot;M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> retorna <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])">
      <summary vsli:raw="Creates an object instance based on the construction-initiated &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Cria uma instância do objeto com base no <see cref="T:System.Xaml.XamlType" /> iniciado pela construção para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="arguments" vsli:raw="An array of objects that supply the &lt;see langword=&quot;x:ConstructorArgs&quot; /&gt; for the instance. May be &lt;see langword=&quot;null&quot; /&gt; for types that do not require or use &lt;see langword=&quot;x:ConstructorArgs&quot; /&gt;.">Uma matriz de objetos que fornecem o <see langword="x:ConstructorArgs" /> para a instância. Pode ser <see langword="null" /> para tipos que não exigem nem usam <see langword="x:ConstructorArgs" />.</param>
      <exception cref="T:System.MissingMethodException" vsli:raw="Could not resolve a constructor.">Não foi possível resolver um construtor.</exception>
      <returns vsli:raw="The created instance based on the construction-initiated &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">A instância criada com base no <see cref="T:System.Xaml.XamlType" /> iniciado pela construção para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)">
      <summary vsli:raw="Returns the relevant &lt;see langword=&quot;Add&quot; /&gt; method for a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is relevant to a collection or dictionary.">Retorna o método <see langword="Add" /> relevante para um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que é relevante a uma coleção ou a um dicionário.</summary>
      <param name="contentType" vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the item type that is used by the &lt;see langword=&quot;Add&quot; /&gt; method.">
        <see cref="T:System.Xaml.XamlType" /> para o tipo de item que é usado pelo método <see langword="Add" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="contentType" /> é <see langword="null" />.</exception>
      <returns vsli:raw="CLR &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; information for the &lt;see langword=&quot;Add&quot; /&gt; method, or null.">Informações <see cref="T:System.Reflection.MethodInfo" /> de CLR para o método <see langword="Add" /> ou nulo.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod">
      <summary vsli:raw="Returns an object representing a method that can enumerate over items.">Retorna um objeto que representa um método que pode fazer a enumeração sobre itens.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for an enumerator method, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.MethodInfo" /> para um método de enumerador ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object representing the set of items.">Retorna um objeto <see cref="T:System.Collections.IEnumerator" /> que representa o conjunto de itens.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Uma instância do tipo especificado pelo <see cref="T:System.Xaml.XamlType" /> usado para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a collection or dictionary.">Esse método foi invocado em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlType" /> desconhecido.  
  
 - ou -  
  
Invocado esse método em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> em que o tipo relevante não é uma coleção ou dicionário.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, or &lt;see langword=&quot;null&quot; /&gt;.">Um objeto <see cref="T:System.Collections.IEnumerator" /> ou <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler">
      <summary vsli:raw="Gets the handler to use when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; calls into an implemented &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Obtém o manipulador a ser usado quando um <see cref="T:System.Xaml.XamlObjectWriter" /> chama um <see cref="T:System.Windows.Markup.MarkupExtension" /> implementado.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Uma implementação de manipulador que manipula esse caso.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler">
      <summary vsli:raw="Gets the handler to use when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; calls into a CLR-implemented &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt;.">Obtém o manipulador a ser usado quando um <see cref="T:System.Xaml.XamlObjectWriter" /> chama um <see cref="T:System.ComponentModel.TypeConverter" /> implementado por CLR.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Uma implementação de manipulador que manipula esse caso.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker">
      <summary vsli:raw="Provides a static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Fornece um valor estático que representa um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> desconhecido, que não foi totalmente implementado.</summary>
      <returns vsli:raw="A static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Um valor estático que representa um desconhecido, não totalmente implementado <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> .</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeName">
      <summary vsli:raw="Provides a means to specify a XAML type in terms of name and namespace.">Fornece um meio para especificar um tipo XAML em termos de nome e namespace.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on name and namespace strings.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeName" />, com base nas cadeias de caracteres de nome e namespace.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains name.">O namespace XAML que contém o nome.</param>
      <param name="name" vsli:raw="The name of the type to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; for.">O nome do tipo para o qual um <see cref="T:System.Xaml.Schema.XamlTypeName" /> será criado.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on name and namespace strings as well as an array of type arguments.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeName" />, com base nas cadeias de caracteres de nome e namespace, bem como em uma matriz de argumentos de tipo.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains &lt;paramref name=&quot;name&quot; /&gt;.">O namespace XAML que contém o <paramref name="name" />.</param>
      <param name="name" vsli:raw="The name of the type to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; for.">O nome do tipo para o qual um <see cref="T:System.Xaml.Schema.XamlTypeName" /> será criado.</param>
      <param name="typeArguments" vsli:raw="An array of type arguments, each of which must be a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Uma matriz de argumentos de tipo, em que cada um deve ser um <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on an existing &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeName" /> com base em um <see cref="T:System.Xaml.XamlType" /> existente.</summary>
      <param name="xamlType" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Um <see cref="T:System.Xaml.XamlType" /> existente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a type name and an object that can resolve a markup prefix into a namespace.">Fornece um valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> com base em um nome de tipo e um objeto que pode resolver um prefixo de marcação em um namespace.</summary>
      <param name="typeName" vsli:raw="The type name to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value for.">O nome de tipo para criar um valor de <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Um provedor de serviço ou de objeto que implementa o <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeName" /> ou <paramref name="namespaceResolver" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="String cannot be parsed.">Não é possível analisar cadeias de caracteres.</exception>
      <returns vsli:raw="The created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">O <see cref="T:System.Xaml.Schema.XamlTypeName" /> criado.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.">Fornece um valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> com base em uma cadeia de caracteres que pode especificar vários nomes de tipo e um objeto que pode resolver um prefixo de marcação em um namespace.</summary>
      <param name="typeNameList" vsli:raw="A string that contains multiple types.">Uma cadeia de caracteres que contém vários tipos.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Um provedor de serviço ou de objeto que implementa o <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeNameList&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeNameList" /> ou <paramref name="namespaceResolver" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="String cannot be parsed.">Não é possível analisar cadeias de caracteres.</exception>
      <returns vsli:raw="The created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">O <see cref="T:System.Xaml.Schema.XamlTypeName" /> criado.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation.">Converte o valor deste <see cref="T:System.Xaml.Schema.XamlTypeName" /> em sua representação de cadeia de caracteres equivalente.</summary>
      <returns vsli:raw="The equivalent string representation of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">A representação de cadeia de caracteres equivalente deste <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types.">Converte o valor deste <see cref="T:System.Xaml.Schema.XamlTypeName" /> em sua representação de cadeia de caracteres equivalente, que pode ser usada na sintaxe de marcação para o uso que um elemento de objeto faz de vários tipos.</summary>
      <param name="typeNameList" vsli:raw="A list of types.">Uma lista de tipos.</param>
      <param name="prefixLookup" vsli:raw="A service reference for prefix lookup.">Uma referência de serviço para pesquisa de prefixo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;prefixLookup&quot; /&gt; or &lt;paramref name=&quot;typeNameList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="prefixLookup" /> ou <paramref name="typeNameList" /> é <see langword="null" />.</exception>
      <returns vsli:raw="A concatenated string of all type results.">Uma cadeia de caracteres concatenada de todos os resultados do tipo.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation, which can be used in markup syntax for an object element usage of a type.">Converte o valor deste <see cref="T:System.Xaml.Schema.XamlTypeName" /> em sua representação de cadeia de caracteres equivalente, que pode ser usada na sintaxe de marcação para o uso que um elemento de objeto faz de um tipo.</summary>
      <param name="prefixLookup" vsli:raw="A service reference for prefix lookup.">Uma referência de serviço para pesquisa de prefixo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Namespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Name&quot; /&gt; is not valid.  &#xA;  &#xA; -or-  &#xA;  &#xA; Could not look up the prefix.">O <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> deste <see cref="T:System.Xaml.Schema.XamlTypeName" /> é <see langword="null" />.  
  
- ou - 
 <see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> não é válido.  
  
- ou - 
Não foi possível pesquisar o prefixo.</exception>
      <returns vsli:raw="A prefixed usage string.">Uma cadeia de caracteres de uso prefixada.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a type name and an object that can resolve a markup prefix into a namespace.">Fornece um valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> com base em um nome de tipo e um objeto que pode resolver um prefixo de marcação em um namespace.</summary>
      <param name="typeName" vsli:raw="The type name to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value for.">O nome de tipo para criar um valor de <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Um provedor de serviço ou de objeto que implementa o <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result" vsli:raw="Out parameter that contains the created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; if the return value is &lt;see langword=&quot;true&quot; /&gt;.">Parâmetro de saída que contém o <see cref="T:System.Xaml.Schema.XamlTypeName" /> criado quando o valor retornado é <see langword="true" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeName" /> ou <paramref name="namespaceResolver" /> é <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parse was successful and &lt;paramref name=&quot;result&quot; /&gt; contains a useful value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a análise for bem-sucedida e <paramref name="result" /> contiver um valor útil, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.">Fornece um valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> com base em uma cadeia de caracteres que pode especificar vários nomes de tipo e um objeto que pode resolver um prefixo de marcação em um namespace.</summary>
      <param name="typeNameList" vsli:raw="A string that contains multiple types.">Uma cadeia de caracteres que contém vários tipos.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Um provedor de serviço ou de objeto que implementa o <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result" vsli:raw="Out parameter that contains the created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; if the return value is &lt;see langword=&quot;true&quot; /&gt;.">Parâmetro de saída que contém o <see cref="T:System.Xaml.Schema.XamlTypeName" /> criado quando o valor retornado é <see langword="true" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeNameList&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeNameList" /> ou <paramref name="namespaceResolver" /> é <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parse was successful and &lt;paramref name=&quot;result&quot; /&gt; contains a useful value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a análise for bem-sucedida e <paramref name="result" /> contiver um valor útil, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Name">
      <summary vsli:raw="Gets the name used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Obtém o nome usado para construir este <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The name of the type.">O nome do tipo.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Namespace">
      <summary vsli:raw="Gets the XAML namespace identifier used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Obtém o identificador do namespace XAML usado para construir este <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The XAML namespace identifier.">O identificador do namespace de XAML.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.TypeArguments">
      <summary vsli:raw="Gets the type arguments used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Obtém os argumentos de tipo usados para construir este <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The type arguments, if any. May be null.">Os argumentos de tipo, se houver. Pode ser nulo.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeTypeConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object to and from a string that represents the type name. This functionality is used for XAML extensibility by markup definitions, via &lt;see cref=&quot;T:System.Windows.Markup.PropertyDefinition&quot; /&gt;.">Converte um objeto <see cref="T:System.Xaml.XamlType" /> de/em uma cadeia de caracteres que representa o nome do tipo. Essa funcionalidade é usada para extensibilidade de XAML pelas definições de marcação, por meio de <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeTypeConverter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeTypeConverter" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, using the specified context.">Determina se um objeto do tipo especificado pode ser convertido em uma instância do <see cref="T:System.Xaml.XamlType" />, usando o contexto especificado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">O tipo que está sendo avaliado para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se esse conversor puder realizar a operação, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; can be converted to the specified type, using the specified context.">Determina se uma instância do <see cref="T:System.Xaml.XamlType" /> pode ser convertida no tipo especificado, usando o contexto especificado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">O tipo que está sendo avaliado para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se esse conversor puder realizar a operação, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, using the specified context.">Tenta converter o objeto especificado em um <see cref="T:System.Xaml.XamlType" />, usando o contexto especificado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informações específicas da cultura.</param>
      <param name="value" vsli:raw="The object to convert.">O objeto a ser convertido.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> não pode ser convertido.</exception>
      <returns vsli:raw="The converted object.">O objeto convertido.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; to the specified type, using the specified context.">Tenta converter um <see cref="T:System.Xaml.XamlType" /> no tipo especificado, usando o contexto especificado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informações específicas da cultura.</param>
      <param name="value" vsli:raw="The object to convert.">O objeto a ser convertido.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">O tipo no qual converter o objeto.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> não pode ser convertido.</exception>
      <returns vsli:raw="The converted object.">O objeto convertido.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlValueConverter`1">
      <summary vsli:raw="Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type. This includes markup extensions and type converters.">Fornece uma superfície de API comum para técnicas que geram valores de serialização ou de inicialização para o XAML baseado em uma entrada que não seja o tipo de destino eventual. Isso inclui extensões de marcação e conversores de tipo.</summary>
      <typeparam name="TConverterBase" vsli:raw="The CLR base class for the particular converter that this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; represents. Typically this is one of the following: &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt;; &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;; &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">A classe base CLR para o conversor específico que isso <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> representa. Normalmente, este é um dos seguintes: <see cref="T:System.ComponentModel.TypeConverter" /> ; <see cref="T:System.Windows.Markup.MarkupExtension" /> ; <see cref="T:System.Windows.Markup.ValueSerializer" /> ;</typeparam>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; class, based on a converter implementing &lt;see cref=&quot;T:System.Type&quot; /&gt; and the target/destination type of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, com base em um conversor que implementa <see cref="T:System.Type" /> e o tipo de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <param name="converterType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that implements the converter behavior.">O <see cref="T:System.Type" /> que implementa o comportamento do conversor.</param>
      <param name="targetType" vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">O <see cref="T:System.Xaml.XamlType" /> de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; class, based on a converter implementing &lt;see cref=&quot;T:System.Type&quot; /&gt; the target/destination type of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, and a string name.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, com base em um conversor que implementa <see cref="T:System.Type" />, o tipo de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e um nome de cadeia de caracteres.</summary>
      <param name="converterType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that implements the converter behavior.">O <see cref="T:System.Type" /> que implementa o comportamento do conversor.</param>
      <param name="targetType" vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">O <see cref="T:System.Xaml.XamlType" /> de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
      <param name="name" vsli:raw="The string name.">O nome da cadeia de caracteres.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="All three parameters are &lt;see langword=&quot;null&quot; /&gt; (at least one is required to be non-null).">Todos os três parâmetros são <see langword="null" /> (pelo menos um deve ser não nulo).</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
      <summary vsli:raw="Returns an instance of the converter implementation.">Retorna uma instância da implementação do conversor.</summary>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="Converter did not implement the correct base type.">O conversor não implementou o tipo de base correto.</exception>
      <returns vsli:raw="An instance of the converter implementation, or &lt;see langword=&quot;null&quot; /&gt;.">Uma instância da implementação do conversor ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and a specified object, which must also be a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, have the same value.">Determina se esta instância do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e um objeto especificado, que também deve ser um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, têm o mesmo valor.</summary>
      <param name="obj" vsli:raw="The object to compare.">O objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj" /> for um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e seu valor for o mesmo que o dessa instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and another &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object have the same value.">Determina se esta instância do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e outro objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> têm o mesmo valor.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; to compare.">O <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> de comparação.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; is a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="other" /> for um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e seu valor for o mesmo que o dessa instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Retorna o código hash para este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="An integer hash code.">Um código hash inteiro.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; objects have the same value.">Determina se dois objetos <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> especificados têm o mesmo valor.</summary>
      <param name="converter1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <param name="converter2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;converter1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;converter2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor de <paramref name="converter1" /> for o mesmo que o valor de <paramref name="converter2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; objects have different values.">Determina se dois objetos <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> especificados têm valores diferentes.</summary>
      <param name="converter1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <param name="converter2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;converter1&quot; /&gt; is different than the value of &lt;paramref name=&quot;converter2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor de <paramref name="converter1" /> for diferente do valor de <paramref name="converter2" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Retorna uma <see cref="T:System.String" /> que representa este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Uma <see cref="T:System.String" /> que representa este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
      <summary vsli:raw="Gets a created instance of the converter implementation.">Obtém uma instância criada da implementação do conversor.</summary>
      <returns vsli:raw="A created instance of the converter implementation, or &lt;see langword=&quot;null&quot; /&gt;.">Uma instância criada da implementação do conversor ou <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; for the class that implements the converter behavior.">Obtém o <see cref="T:System.Type" /> para a classe que implementa o comportamento do conversor.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for the class that implements the converter behavior.">O <see cref="T:System.Type" /> para a classe que implementa o comportamento do conversor.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.Name">
      <summary vsli:raw="Gets a string name for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Obtém um nome de cadeia de caracteres para este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="A string name for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Um nome de cadeia de caracteres para isso <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> .</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
      <summary vsli:raw="Gets the target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Obtém o <see cref="T:System.Xaml.XamlType" /> de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">O <see cref="T:System.Xaml.XamlType" /> de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlBackgroundReader">
      <summary vsli:raw="Implements a double-buffered &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that can split reading and writing to different threads.">Implementa um <see cref="T:System.Xaml.XamlReader" /> de buffer duplo que pode dividir a leitura e a gravação em threads diferentes.</summary>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlBackgroundReader" />.</summary>
      <param name="wrappedReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that this &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; is based on.">O <see cref="T:System.Xaml.XamlReader" /> no qual este <see cref="T:System.Xaml.XamlBackgroundReader" /> se baseia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;wrappedReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="wrappedReader" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; and optionally releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.Xaml.XamlBackgroundReader" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para liberar recursos gerenciados, caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Read">
      <summary vsli:raw="Provides the next XAML node from the source, if a node is available.">Fornecerá o próximo nó XAML de origem, se um nó estiver disponível.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um nó estiver disponível; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread">
      <summary vsli:raw="Creates and starts a new &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; (constructed from &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt;) that handles a named thread for the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Cria e inicia um novo <see cref="T:System.Threading.Thread" /> (construído usando o <see cref="T:System.Threading.ParameterizedThreadStart" />) que manipula um thread nomeado para o <see cref="T:System.Xaml.XamlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is already started.">O thread já foi iniciado.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
      <summary vsli:raw="Creates and starts a new &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; (constructed from &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt;) that handles a named thread for the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;. You specify the thread name as a parameter.">Cria e inicia um novo <see cref="T:System.Threading.Thread" /> (construído usando o <see cref="T:System.Threading.ParameterizedThreadStart" />) que manipula um thread nomeado para o <see cref="T:System.Xaml.XamlReader" />. Você pode especificar o nome de thread como um parâmetro.</summary>
      <param name="threadName" vsli:raw="The name for the thread.">O nome do thread.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is already started.">O thread já foi iniciado.</exception>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Obtém um valor que especifica se as informações da linha estão disponíveis.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se as informações de linha estiverem disponíveis; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position is at end-of-file.">Obtém um valor que informa se a posição do leitor está no fim do arquivo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at end-of-file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a posição estiver no final do arquivo; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Obtém o número de linha a ser relatado.</summary>
      <returns vsli:raw="The line number to report.">O número de linha a ser relatado.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Obtém a posição da linha a ser relatada.</summary>
      <returns vsli:raw="The line position to report.">A posição da linha a ser relatada.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Member">
      <summary vsli:raw="Gets the current member at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Obterá o membro atual na posição do leitor, se a posição do leitor estiver em um <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on a member.">O membro atual; ou <see langword="null" /> , se a posição não estiver em um membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace from the current node.">Obtém o namespace de XAML do nó atual.</summary>
      <returns vsli:raw="The XAML namespace, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">O namespace XAML, se estiver disponível; caso contrário, <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtém o tipo do nó atual.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Um valor da enumeração <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema context information for the information set.">Obtém um objeto que fornece informações de contexto de esquema para o conjunto de informações.</summary>
      <returns vsli:raw="An object that provides schema context information for the information set.">Um objeto que fornece informações de contexto de esquema para o conjunto de informações.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Obtém o <see cref="T:System.Xaml.XamlType" /> do nó atual.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on an object.">O <see cref="T:System.Xaml.XamlType" /> do nó atual; ou <see langword="null" /> , se a posição atual do leitor não estiver em um objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Value">
      <summary vsli:raw="Gets the value of the current node.">Obtém o valor do nó atual.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">O valor do nó atual; ou <see langword="null" /> , se a posição atual do leitor não estiver em um <see cref="F:System.Xaml.XamlNodeType.Value" /> tipo de nó.</returns>
    </member>
    <member name="T:System.Xaml.XamlDeferringLoader">
      <summary vsli:raw="Represents a XAML reader behavior that loads and returns deferred content.">Representa um comportamento do leitor de XAML que carrega e retorna o conteúdo adiado.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDeferringLoader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary vsli:raw="Loads XAML content in a deferred mode, which is based on a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and certain required services from a service provider.">Carrega o conteúdo XAML em um modo adiado, que se baseia em um <see cref="T:System.Xaml.XamlReader" /> e em certos serviços necessários de um provedor de serviços.</summary>
      <param name="xamlReader" vsli:raw="The initiating reader that is returned on calls to &lt;see cref=&quot;M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)&quot; /&gt;.">O leitor inicial que é retornado em chamadas para <see cref="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)" />.</param>
      <param name="serviceProvider" vsli:raw="The service provider for the required services.">O provedor de serviços para os serviços necessários.</param>
      <returns vsli:raw="The root object that is produced by the input &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">O objeto raiz que é produzido pelo <see cref="T:System.Xaml.XamlReader" /> de entrada.</returns>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)">
      <summary vsli:raw="Commits a value for deferred loading.">Confirma um valor para o carregamento adiado.</summary>
      <param name="value" vsli:raw="The input value to commit for deferred loading.">O valor de entrada a ser confirmado para o carregamento adiado.</param>
      <param name="serviceProvider" vsli:raw="The service provider for the required services.">O provedor de serviços para os serviços necessários.</param>
      <returns vsli:raw="A XAML reader that can be used to obtain the deferred value as XAML node information.">Um leitor de XAML que pode ser usado para obter o valor adiado como informações do nó XAML.</returns>
    </member>
    <member name="T:System.Xaml.XamlDirective">
      <summary vsli:raw="Provides the XAML type system identifier for a member if the member is also a XAML directive. XAML readers and XAML writers use the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier during processing of member nodes. The identifier is used when the XAML reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt; and &lt;see cref=&quot;P:System.Xaml.XamlMember.IsDirective&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Fornece o identificador do sistema tipo XAML para um membro se o membro também for uma diretiva XAML. Leitores XAML e gravadores XAML usam o identificador <see cref="T:System.Xaml.XamlDirective" /> durante o processamento de nós membro. O identificador é usado quando o leitor XAML é posicionado em um <see cref="F:System.Xaml.XamlNodeType.StartMember" /> e <see cref="P:System.Xaml.XamlMember.IsDirective" /> é <see langword="true" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; class, specifying values for each per-case value of a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDirective" />, especificando valores para cada valor por caso de um <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <param name="xamlNamespaces" vsli:raw="A set of XAML namespaces where this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; can exist, passed as an enumerable set of the identifier strings.">Um conjunto de namespaces XAML em que este <see cref="T:System.Xaml.XamlDirective" /> pode existir, passado como um conjunto enumerável de cadeias de caracteres identificadoras.</param>
      <param name="name" vsli:raw="The identifying name of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">O nome de identificação do <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="xamlType" vsli:raw="The XAML type that backs the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">O tipo de XAML que faz o <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="typeConverter" vsli:raw="The type converter that this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; uses for text syntax conversion.">O conversor de tipo que este <see cref="T:System.Xaml.XamlDirective" /> usa para conversão de sintaxe do texto.</param>
      <param name="allowedLocation" vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.Schema.AllowedMemberLocations&quot; /&gt; enumeration.">Um valor da enumeração <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xamlType&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="xamlType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; class, specifying values for a name and a single XAML namespace. Use this signature only when you want or expect &lt;see cref=&quot;P:System.Xaml.XamlMember.IsUnknown&quot; /&gt; to report &lt;see langword=&quot;true&quot; /&gt; for the directive.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDirective" />, especificando valores para um nome e um namespace XAML único. Use esta assinatura somente quando você quiser ou esperar que <see cref="P:System.Xaml.XamlMember.IsUnknown" /> relate <see langword="true" /> para a diretiva.</summary>
      <param name="xamlNamespace" vsli:raw="The primary XAML namespace where this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; can exist.">O namespace XAML primário em que este <see cref="T:System.Xaml.XamlDirective" /> pode existir.</param>
      <param name="name" vsli:raw="The identifying name of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">O nome de identificação do <see cref="T:System.Xaml.XamlDirective" />.</param>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Retorna o código hash deste objeto.</summary>
      <returns vsli:raw="An integer hash code.">Um código hash inteiro.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of XAML namespaces where this XAML member can exist.">Retorna uma lista de namespaces XAML em que esse membro XAML pode existir.</summary>
      <returns vsli:raw="A list of XAML namespace identifiers, as strings.">Uma lista de identificadores de namespace XAML, como cadeias de caracteres.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Retorna um implementação de <see cref="T:System.Reflection.ICustomAttributeProvider" />. Essa implementação sempre retorna <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used during deferred loading of XAML-declared objects. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Retorna um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado durante o carregamento adiado de objetos declarados em XAML. Essa implementação sempre retorna <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDependsOn">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. The list reports the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Retorna uma lista de objetos <see cref="T:System.Xaml.XamlMember" />. A lista relata os membros em que há relações de dependência para a ordem de inicialização em relação a esse <see cref="T:System.Xaml.XamlMember" />. Essa implementação sempre retorna <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupInvoker">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is associated with a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Retorna o <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que é associado a um <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">As informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> para este <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsAmbient">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Retorna se este <see cref="T:System.Xaml.XamlMember" /> é relatado como uma propriedade de ambiente.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Sempre retorna <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsEvent">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an event.">Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa um evento.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Sempre retorna <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an intended read-only property.">Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa uma propriedade somente leitura pretendida.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Sempre retorna <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadPublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa uma propriedade que tem um acessador <see langword="get" /> público.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsUnknown">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a member that is not resolvable by the backing system that is used for type and member resolution.">Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa um membro que não pode ser resolvido pelo sistema de backup que é usado para a resolução de tipo e membro.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a non-resolvable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlDirective" /> representar um membro não pode ser resolvido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an intended write-only property.">Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa uma propriedade somente gravação pretendida.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Sempre retorna <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWritePublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a property that has a public &lt;see langword=&quot;set&quot; /&gt; accessor.">Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa uma propriedade que tem um acessador <see langword="set" /> público.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTargetType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Retorna o <see cref="T:System.Xaml.XamlType" /> do tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir. Essa implementação sempre retorna <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Retorna o <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">O <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTypeConverter">
      <summary vsli:raw="Returns a type converter implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Retorna uma implementação do conversos de tipo associado a este <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance that has &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint; or &lt;see langword=&quot;null&quot; /&gt;.">Uma instância de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.ComponentModel.TypeConverter" />; ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;get&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Retorna um acessador <see langword="get" /> associado a este <see cref="T:System.Xaml.XamlDirective" />. Essa implementação sempre retorna <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
      <summary vsli:raw="Returns a CLR reflection &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Retorna um reflexo de CLR <see cref="T:System.Reflection.MemberInfo" /> associado a este <see cref="T:System.Xaml.XamlDirective" />. Essa implementação sempre retorna <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;set&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Retorna um acessador <see langword="set" /> associado a este <see cref="T:System.Xaml.XamlDirective" />. Essa implementação sempre retorna <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Retorna uma representação de cadeia de caracteres desse <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Uma representação da cadeia de caracteres deste <see cref="T:System.Xaml.XamlDirective" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlDirective.AllowedLocation">
      <summary vsli:raw="Gets a value that specifies the XAML node types where the directive can be specified.">Obtém um valor que especifica os tipos de nó XAML em que a diretiva pode ser especificada.</summary>
      <returns vsli:raw="A value of the enumeration. The default is the enumeration default, which is &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.None&quot; /&gt;.">Um valor da enumeração. O padrão é o padrão de enumeração, que é <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" /> .</returns>
    </member>
    <member name="T:System.Xaml.XamlDuplicateMemberException">
      <summary vsli:raw="The exception that is thrown when a XAML writer attempts to write a value for a duplicate member into the same object node.">A exceção que é gerada quando um gravador de XAML tenta gravar um valor para um membro duplicado no mesmo nó do objeto.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> com dados serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a specified message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with the relevant member and type information to report.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> com as informações relevantes de membro e tipo a serem relatadas.</summary>
      <param name="member" vsli:raw="The XAML member identifier to report.">O identificador de membro XAML a ser relatado.</param>
      <param name="type" vsli:raw="The XAML type identifier to report as the parent type.">O identificador de tipo XAML a ser relatado como o tipo pai.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> com dados serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.DuplicateMember">
      <summary vsli:raw="Gets or sets the XAML member identifier for the property to report as a duplicate.">Obtém ou define o identificador de membro XAML da propriedade a ser relatado como uma duplicação.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object (XAML member identifier) to report.">O <see cref="T:System.Xaml.XamlMember" /> objeto (identificador de membro XAML) a ser relatado.</returns>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.ParentType">
      <summary vsli:raw="Gets or sets the XAML type identifier to report as the parent type.">Obtém ou define o identificador de tipo XAML a ser relatado como o tipo pai.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object (XAML type identifier) to report as the parent type.">O <see cref="T:System.Xaml.XamlType" /> objeto (identificador de tipo XAML) a ser relatado como o tipo pai.</returns>
    </member>
    <member name="T:System.Xaml.XamlException">
      <summary vsli:raw="The exception that is thrown for a general XAML reader or XAML writer exception.">A exceção lançada para um leitor XAML geral ou a exceção de gravador XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a system-supplied message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlException" />. A instância contém uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlException" /> com dados serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlException" />. A instância contém uma mensagem especificada que descreve o erro.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador desse construtor deve garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlException" />. A instância contém uma mensagem de erro especificada e uma referência à exceção interna que é a causa dessa exceção.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador desse construtor deve garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified error message, inner exception, and line information.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlException" />. A instância contém uma mensagem de erro especificada, a exceção interna e informações de linha.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador desse construtor deve garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">A exceção que é a causa da exceção atual.</param>
      <param name="lineNumber" vsli:raw="The line number to report to debugging or to line information consumers.">O número de linha a ser relatado para a depuração ou para os consumidores de informações de linha.</param>
      <param name="linePosition" vsli:raw="The line position to report to debugging or line information consumers.">A posição da linha a ser relatada para a depuração ou para os consumidores de informações de linha.</param>
    </member>
    <member name="M:System.Xaml.XamlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Implements &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; and provides serialization support for the line information data.">Implementa <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> e fornece suporte de serialização para os dados de informações de linha.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlException.LineNumber">
      <summary vsli:raw="Gets or sets the line number component of XAML text line information that the exception reports.">Obtém ou define o componente de número de linha de informações de linha do texto XAML que a exceção relata.</summary>
      <returns vsli:raw="The line number component of the XAML text line information.">O componente de número de linha das informações de linha de texto XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.LinePosition">
      <summary vsli:raw="Gets or sets the line position component of XAML text line information that the exception reports.">Obtém ou define o componente de posição de linha de informações de linha do texto XAML que a exceção relata.</summary>
      <returns vsli:raw="The line position component of XAML text line information.">O componente de posição de linha das informações de linha de texto XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.Message">
      <summary vsli:raw="Gets or sets the exception message, and if line information is available, appends the line information to the message.">Obtém ou define a mensagem de exceção e, se houver informações de linha disponíveis, acrescenta as informações de linha à mensagem.</summary>
      <returns vsli:raw="The exception message that includes the appended line information.">A mensagem de exceção que inclui as informações de linha acrescentadas.</returns>
    </member>
    <member name="T:System.Xaml.XamlInternalException">
      <summary vsli:raw="The exception that is thrown for internal inconsistencies that occur during XAML reading and XAML writing.">A exceção que é gerada para inconsistências internas que ocorrem durante a leitura e a gravação de XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlInternalException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlInternalException" /> com dados serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a specified message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlInternalException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message" vsli:raw="The message that describes the exception.">A mensagem que descreve a exceção.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlInternalException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The message that describes the exception.">A mensagem que descreve a exceção.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Xaml.XamlLanguage">
      <summary vsli:raw="Defines constants that provide strings or objects that are useful for XAML markup or for programming with XAML types. These strings or objects are relevant to XAML language concepts, to the implementation of XAML language concepts in .NET XAML Services, or to both.">Define constantes que fornecem cadeias de caracteres ou objetos que são úteis para marcação XAML ou para programação com tipos XAML. Essas cadeias de caracteres ou objetos são relevantes para conceitos de linguagem XAML, para a implementação dos conceitos de linguagem XAML em Serviços XAML do .NET Framework ou para ambos.</summary>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xaml2006Namespace">
      <summary vsli:raw="Gets a string value for the string that identifies the XAML (2006) language namespace. That namespace corresponds to the XAML (2006) &quot;x&quot; prefixed namespace as defined in [MS-XAML] Section 5.1.1.">Obtém um valor de cadeia de caracteres para a cadeia de caracteres que identifica o namespace da linguagem XAML (2006). Esse namespace corresponde ao XAML (2006) "x" namespace prefixado conforme definido na seção [MS-XAML] 5.1.1.</summary>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xml1998Namespace">
      <summary vsli:raw="Gets a string value for the string that identifies the XML (1998) language namespace. That namespace corresponds to the XML &quot;xml&quot; prefixed namespace as referenced in [MS-XAML] Section 5.1.2.">Obtém um valor de cadeia de caracteres para a cadeia de caracteres que identifica o namespace da linguagem XML (1998). Esse namespace corresponde ao namespace prefixado XML "XML" como referenciado na seção [MS-XAML] 5.1.2.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllDirectives">
      <summary vsli:raw="Gets a read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier that is defined by .NET XAML Services.">Obtém uma coleção genérica somente leitura de cada identificador <see cref="T:System.Xaml.XamlDirective" /> definido por Serviços XAML do .NET Framework.</summary>
      <returns vsli:raw="A read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier that is defined by .NET XAML Services.">Uma coleção genérica somente leitura de cada <see cref="T:System.Xaml.XamlDirective" /> identificador que é definido por .NET Framework serviços XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllTypes">
      <summary vsli:raw="Gets a read-only generic collection of individual &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that match, or alias, a XAML language intrinsic that is defined by .NET XAML Services.">Obtém uma coleção genérica somente leitura dos valores de <see cref="T:System.Xaml.XamlType" /> individuais que são correspondentes ou o alias, de uma linguagem XAML intrínseca que é definida pelos Serviços XAML do .NET Framework.</summary>
      <returns vsli:raw="A read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches a XAML language intrinsic.">Uma coleção genérica somente leitura de cada <see cref="T:System.Xaml.XamlType" /> que corresponde a uma linguagem XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Arguments">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Arguments&quot; /&gt; of a factory method or a generic usage.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para o <see langword="Arguments" /> de um método de fábrica ou um uso genérico.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Arguments&quot; /&gt; of a factory method or generic usage.">Um <see cref="T:System.Xaml.XamlDirective" /> para o <see langword="Arguments" /> de um método de fábrica ou uso genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Array">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Array&quot; /&gt; XAML language intrinsic.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Array" /> intrínseco da linguagem XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Array&quot; /&gt; XAML language intrinsic.">Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Array" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AsyncRecords">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;AsyncRecords&quot; /&gt; pseudomember.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para o pseudomembro <see langword="AsyncRecords" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;AsyncRecords&quot; /&gt; pseudomember.">Um <see cref="T:System.Xaml.XamlDirective" /> para o <see langword="AsyncRecords" /> pseudomember.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Base">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;base&quot; /&gt; directive from XML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="base" /> do XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;base&quot; /&gt; directive from XML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="base" /> diretiva do XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Boolean">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Boolean&quot; /&gt; XAML language intrinsic.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Boolean" /> intrínseco da linguagem XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Boolean&quot; /&gt; XAML language intrinsic.">Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Boolean" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Byte">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Byte&quot; /&gt; XAML language intrinsic.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Byte" /> intrínseco da linguagem XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Byte&quot; /&gt; XAML language intrinsic.">Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Byte" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Char">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Char&quot; /&gt; XAML language intrinsic.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Char" /> intrínseco da linguagem XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Char&quot; /&gt; XAML language intrinsic.">Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Char" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Class">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Class&quot; /&gt; directive from XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Class" /> do XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Class&quot; /&gt; directive from XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Class" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassAttributes">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassAttributes&quot; /&gt; directive from XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="ClassAttributes" /> do XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassAttributes&quot; /&gt; directive from XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="ClassAttributes" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassModifier">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassModifier&quot; /&gt; directive from XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="ClassModifier" /> do XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassModifier&quot; /&gt; directive from XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="ClassModifier" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Code">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for &lt;see langword=&quot;Code&quot; /&gt; as detailed in [MS-XAML].">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para <see langword="Code" /> conforme detalhado em [MS-XAML].</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for &lt;see langword=&quot;Code&quot; /&gt; as detailed in [MS-XAML].">Um <see cref="T:System.Xaml.XamlDirective" /> para <see langword="Code" /> , conforme detalhado em [MS-XAML].</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ConnectionId">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a connection point for wiring events to handlers.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> que identifica um ponto de conexão para conectar eventos a manipuladores.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a connection point for wiring events to handlers.">Um <see cref="T:System.Xaml.XamlDirective" /> que identifica um ponto de conexão para conectar eventos a manipuladores.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Decimal">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Decimal&quot; /&gt; XAML language intrinsic.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Decimal" /> intrínseco da linguagem XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Decimal&quot; /&gt; XAML language intrinsic.">Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Decimal" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Double">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Double&quot; /&gt; XAML language intrinsic.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Double" /> intrínseco da linguagem XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Double&quot; /&gt; XAML language intrinsic.">Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Double" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FactoryMethod">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a factory method for XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> que identifica um método de fábrica para XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a factory method for XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> que identifica um método de fábrica para XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FieldModifier">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;FieldModifier&quot; /&gt; directive from XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="FieldModifier" /> do XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;FieldModifier&quot; /&gt; directive from XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="FieldModifier" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Initialization">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Initialization&quot; /&gt; directive from XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Initialization" /> do XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Initialization&quot; /&gt; directive from XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Initialization" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int16">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int16&quot; /&gt; XAML language intrinsic.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see cref="T:System.Int16" /> intrínseco da linguagem XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int16&quot; /&gt; XAML language intrinsic.">Um <see cref="T:System.Xaml.XamlType" /> para a <see cref="T:System.Int16" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int32">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; XAML language intrinsic.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see cref="T:System.Int32" /> intrínseco da linguagem XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; XAML language intrinsic.">Um <see cref="T:System.Xaml.XamlType" /> para a <see cref="T:System.Int32" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int64">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; XAML language intrinsic.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see cref="T:System.Int64" /> intrínseco da linguagem XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; XAML language intrinsic.">Um <see cref="T:System.Xaml.XamlType" /> para a <see cref="T:System.Int64" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Items">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Items&quot; /&gt; directive from XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Items" /> do XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Items&quot; /&gt; directive from XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Items" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Key">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Key&quot; /&gt; directive from XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Key" /> do XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Key&quot; /&gt; directive from XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Key" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Lang">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;lang&quot; /&gt; directive from XML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="lang" /> do XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;lang&quot; /&gt; directive from XML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="lang" /> diretiva do XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Member">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that is the item type of &lt;see cref=&quot;P:System.Xaml.XamlLanguage.Members&quot; /&gt;.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o tipo que é o tipo de item de <see cref="P:System.Xaml.XamlLanguage.Members" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that is the item type of &lt;see cref=&quot;P:System.Xaml.XamlLanguage.Members&quot; /&gt;.">Um <see cref="T:System.Xaml.XamlType" /> para o tipo que é o tipo de item <see cref="P:System.Xaml.XamlLanguage.Members" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Members">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Members&quot; /&gt; concept in XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para o conceito <see langword="Members" /> no XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Members&quot; /&gt; concept in XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para o <see langword="Members" /> conceito em XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Name">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Name&quot; /&gt; directive from XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Name" /> do XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Name&quot; /&gt; directive from XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Name" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Null">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Null&quot; /&gt; or &lt;see langword=&quot;NullExtension&quot; /&gt; XAML language intrinsic.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Null" /> ou <see langword="NullExtension" /> intrínseco da linguagem XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Null&quot; /&gt;/&lt;see langword=&quot;NullExtension&quot; /&gt; XAML language intrinsic.">Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Null" /> / <see langword="NullExtension" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Object">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Object&quot; /&gt; XAML language concept.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o conceito de linguagem XAML <see langword="Object" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Object&quot; /&gt; XAML language concept.">Um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Object" /> conceito de linguagem XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.PositionalParameters">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;PositionalParameters&quot; /&gt; directive from XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="PositionalParameters" /> do XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;PositionalParameters&quot; /&gt; directive from XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="PositionalParameters" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Property">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Property&quot; /&gt; concept in XAML.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o conceito <see langword="Property" /> no XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Property&quot; /&gt; concept in XAML.">Um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Property" /> conceito em XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Reference">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a &lt;see langword=&quot;Reference&quot; /&gt; for XAML.">Obtém um <see cref="T:System.Xaml.XamlType" /> que representa um <see langword="Reference" /> para XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a &lt;see langword=&quot;Reference&quot; /&gt; for XAML.">Um <see cref="T:System.Xaml.XamlType" /> que representa um <see langword="Reference" /> para XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Shared">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Shared&quot; /&gt; directive for XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Shared" /> para XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Shared&quot; /&gt; directive for XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Shared" /> diretiva para XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Single">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;c&gt;Single&lt;/c&gt; XAML language intrinsic.">Obtém um <see cref="T:System.Xaml.XamlType" /> para a linguagem <c>única</c> do XAML intrínseca.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;c&gt;Single&lt;/c&gt; XAML language intrinsic.">Um <see cref="T:System.Xaml.XamlType" /> para a linguagem <c>única</c> de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Space">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;space&quot; /&gt; directive from XML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="space" /> do XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;space&quot; /&gt; directive from XML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="space" /> diretiva do XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Static">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Static&quot; /&gt;/&lt;see langword=&quot;StaticExtension&quot; /&gt; XAML language intrinsic.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Static" />/<see langword="StaticExtension" /> intrínseco da linguagem XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Static&quot; /&gt;/&lt;see langword=&quot;StaticExtension&quot; /&gt; XAML language intrinsic.">Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Static" /> / <see langword="StaticExtension" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.String">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;String&quot; /&gt; XAML language intrinsic.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="String" /> intrínseco da linguagem XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;String&quot; /&gt; XAML language intrinsic.">Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="String" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Subclass">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Subclass&quot; /&gt; directive from XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Subclass" /> do XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Subclass&quot; /&gt; directive from XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Subclass" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.SynchronousMode">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that enables loading XAML asynchronously if the XAML processor supports such a mode.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> que permite o carregamento do XAML de forma assíncrona se o processador XAML der suporte a esse modo.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that enables loading XAML asynchronously.">Um <see cref="T:System.Xaml.XamlDirective" /> que permite carregar XAML de forma assíncrona.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TimeSpan">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;TimeSpan&quot; /&gt; concept in XAML language.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o conceito <see langword="TimeSpan" /> na linguagem XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;TimeSpan&quot; /&gt; XAML language concept.">Um <see cref="T:System.Xaml.XamlType" /> para o <see langword="TimeSpan" /> conceito de linguagem XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Type">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Type&quot; /&gt;/&lt;see langword=&quot;TypeExtension&quot; /&gt; XAML language intrinsic.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Type" />/<see langword="TypeExtension" /> intrínseco da linguagem XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Type&quot; /&gt;/&lt;see langword=&quot;TypeExtension&quot; /&gt; XAML language intrinsic.">Um <see cref="T:System.Xaml.XamlType" /> para a <see langword="Type" /> / <see langword="TypeExtension" /> linguagem de XAML intrínseca.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TypeArguments">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;TypeArguments&quot; /&gt; directive from XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="TypeArguments" /> do XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;TypeArguments&quot; /&gt; directive from XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="TypeArguments" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uid">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Uid&quot; /&gt; directive from XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="Uid" /> do XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Uid&quot; /&gt; directive from XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="Uid" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.UnknownContent">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;UnknownContent&quot; /&gt; directive from XAML.">Obtém um <see cref="T:System.Xaml.XamlDirective" /> para a diretiva <see langword="UnknownContent" /> do XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;UnknownContent&quot; /&gt; directive from XAML.">Um <see cref="T:System.Xaml.XamlDirective" /> para a <see langword="UnknownContent" /> diretiva do XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uri">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Uri&quot; /&gt; XAML language concept.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o conceito de linguagem XAML <see langword="Uri" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Uri&quot; /&gt; XAML language concept.">Um <see cref="T:System.Xaml.XamlType" /> para o <see langword="Uri" /> conceito de linguagem XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XamlNamespaces">
      <summary vsli:raw="Gets a collection of the namespace identifiers for XAML.">Obtém uma coleção de identificadores de namespace de XAML.</summary>
      <returns vsli:raw="A collection of the namespace identifiers for XAML.">Uma coleção de identificadores de namespace para XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XData">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the XAML type that backs an &lt;see langword=&quot;XData&quot; /&gt; block in XAML.">Obtém um <see cref="T:System.Xaml.XamlType" /> para o tipo XAML que faz o backup de um bloco <see langword="XData" /> em XAML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the XAML type that backs an &lt;see langword=&quot;XData&quot; /&gt; block. See [MS-XAML] Section 5.2.23.">O <see cref="T:System.Xaml.XamlType" /> para o tipo XAML que faz o backup de um <see langword="XData" /> bloco. Consulte a seção [MS-XAML] 5.2.23.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XmlNamespaces">
      <summary vsli:raw="Gets a collection of the namespace identifiers for XML.">Obtém uma coleção de identificadores de namespace de XML.</summary>
      <returns vsli:raw="A collection of the namespace identifiers for XML.">Uma coleção de identificadores de namespace para XML.</returns>
    </member>
    <member name="T:System.Xaml.XamlMember">
      <summary vsli:raw="Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;) and also for general XAML type system logic.">Fornece o identificador do sistema de tipo XAML para membros de tipos de XAML. O identificador é usado por leitores de XAML e gravadores de XAML durante o processamento de nós de membros (quando o leitor de XAML está posicionado em um <see cref="F:System.Xaml.XamlNodeType.StartMember" />) e também para a lógica de sistema do tipo XAML geral.</summary>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o <see cref="T:System.Reflection.EventInfo" /> do sistema de tipo CLR e um <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="eventInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; that represents the event member.">O <see cref="T:System.Reflection.EventInfo" /> do sistema do tipo CLR que representa o membro de evento.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o <see cref="T:System.Reflection.EventInfo" /> do sistema de tipo CLR e um <see cref="T:System.Xaml.XamlSchemaContext" />, incluindo informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="eventInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; that represents the event member.">O <see cref="T:System.Reflection.EventInfo" /> do sistema do tipo CLR que representa o membro de evento.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time reflection calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">A implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que manipula a reflexão de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o <see cref="T:System.Reflection.PropertyInfo" /> do sistema de tipo CLR e um <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="propertyInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; that represents the property member.">O <see cref="T:System.Reflection.PropertyInfo" /> do sistema do tipo CLR que representa o membro de propriedade.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using reflection &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o <see cref="T:System.Reflection.PropertyInfo" /> de reflexão e um <see cref="T:System.Xaml.XamlSchemaContext" />, incluindo informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="propertyInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; that represents the property member.">O <see cref="T:System.Reflection.PropertyInfo" /> do sistema do tipo CLR que representa o membro de propriedade.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">A implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que manipula a invocação de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable property.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> para um <see cref="T:System.Xaml.XamlMember" /> que representa uma propriedade anexável.</summary>
      <param name="attachablePropertyName" vsli:raw="The string name of the attachable property.">O nome da cadeia de caracteres da propriedade anexável.</param>
      <param name="getter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;get&quot; /&gt; accessor of the attachable member's backing implementation.">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do acessador <see langword="get" /> da implementação de suporte do membro anexável.</param>
      <param name="setter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;set&quot; /&gt; accessor of the attachable member's backing implementation.">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do acessador <see langword="set" /> da implementação de suporte do membro anexável.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable property, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> para um <see cref="T:System.Xaml.XamlMember" /> que representa uma propriedade anexável, incluindo informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachablePropertyName" vsli:raw="The string name of the attachable property.">O nome da cadeia de caracteres da propriedade anexável.</param>
      <param name="getter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;get&quot; /&gt; accessor of the attachable member's backing implementation.">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do acessador <see langword="get" /> da implementação de suporte do membro anexável.</param>
      <param name="setter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;set&quot; /&gt; accessor of the attachable member's backing implementation.">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do acessador <see langword="set" /> da implementação de suporte do membro anexável.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">A implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que manipula a invocação de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable event.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> para um <see cref="T:System.Xaml.XamlMember" /> que representa um evento anexável.</summary>
      <param name="attachableEventName" vsli:raw="The string name of the attachable event.">O nome da cadeia de caracteres do evento anexável.</param>
      <param name="adder" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the handler &lt;see langword=&quot;Add&quot; /&gt; method of the attachable member's backing implementation.">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do método <see langword="Add" /> do manipulador da implementação de suporte do membro anexável.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable event, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> para um <see cref="T:System.Xaml.XamlMember" /> que representa um evento anexável, incluindo informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachableEventName" vsli:raw="The string name of the attachable event.">O nome da cadeia de caracteres do evento anexável.</param>
      <param name="adder" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the handler &lt;see langword=&quot;Add&quot; /&gt; method of the attachable member's backing implementation.">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do método <see langword="Add" /> do manipulador da implementação de suporte do membro anexável.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">A implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que manipula a invocação de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using a string name and declaring &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; information. A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that is constructed with this signature has significant limitations.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o nome da cadeia de caracteres e as informações de <see cref="T:System.Xaml.XamlType" /> declarativo. Um <see cref="T:System.Xaml.XamlMember" /> que é construído com esta assinatura tem limitações significativas.</summary>
      <param name="name" vsli:raw="The string name of the member.">O nome da cadeia de caracteres do membro.</param>
      <param name="declaringType" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; information for the declaring type.">As informações de <see cref="T:System.Xaml.XamlType" /> para o tipo declarativo.</param>
      <param name="isAttachable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the member is attachable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que o membro anexável, caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;declaringType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> ou <paramref name="declaringType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equal to another object.">Indica se o objeto atual é igual a outro objeto.</summary>
      <param name="obj" vsli:raw="The object to compare with this object.">O objeto a ser comparado com este objeto.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;obj&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="obj" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)">
      <summary vsli:raw="Indicates whether the current object is equal to another object of the same type.">Indica se o objeto atual é igual a outro objeto do mesmo tipo.</summary>
      <param name="other" vsli:raw="An object to compare with this object.">Um objeto para comparação com esse objeto.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;other&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="other" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Retorna o código hash deste objeto.</summary>
      <returns vsli:raw="An integer hash code.">Um código hash inteiro.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of XAML namespaces where this XAML member can exist.">Retorna uma lista de namespaces XAML em que esse membro XAML pode existir.</summary>
      <returns vsli:raw="A list of XAML namespace identifiers as strings.">Uma lista de identificadores de namespace XAML como cadeias de caracteres.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
      <summary vsli:raw="When implemented in a derived class, returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Quando implementado em uma classe derivada, retorna uma implementação <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Uma implementação <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML declared objects.">Retorna um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado para o carregamento adiado de objetos declarados em XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.Xaml.XamlDeferringLoader" /> sobre o genérico.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDependsOn">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. Items in the list report the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retorna uma lista de objetos <see cref="T:System.Xaml.XamlMember" />. Os itens na lista relatam os membros em que há relações de dependência para a ordem de inicialização em relação a esse <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects.">Uma lista de objetos <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupInvoker">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retorna um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que é associado a esse <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;.">As informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> para este <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsAmbient">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Retorna se este <see cref="T:System.Xaml.XamlMember" /> é relatado como uma propriedade de ambiente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; as an ambient property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para relatar este <see cref="T:System.Xaml.XamlMember" /> como uma propriedade de ambiente, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsEvent">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event.">Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa um evento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report that this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para relatar que este <see cref="T:System.Xaml.XamlMember" /> representa um evento, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an intended read-only property.">Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa uma propriedade somente leitura pretendida.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; as an intended read-only property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para relatar este <see cref="T:System.Xaml.XamlMember" /> como uma propriedade somente leitura pretendida, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadPublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa uma propriedade que tem um acessador <see langword="get" /> público.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representa uma propriedade que tem um acessador público <see langword="get" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsUnknown">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that is not resolvable by the backing system that is used for type and member resolution.">Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa um membro que não pode ser resolvido pelo sistema de backup que é usado para a resolução de tipo e membro.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a non-resolvable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representar um membro não pode ser resolvido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWriteOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a public &lt;see langword=&quot;set&quot; /&gt; accessor but not a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa um membro que tem um acessador <see langword="set" /> público, mas não um acessador <see langword="get" /> público.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representar um membro somente gravação, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWritePublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a public &lt;see langword=&quot;set&quot; /&gt; accessor.">Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa um membro de que tem um acessador <see langword="set" /> público.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a writable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representar um membro gravável, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters">
      <summary vsli:raw="Returns the opening and closing bracket characters for a markup extension.">Retorna os caracteres de colchete de abertura e fechamento de uma extensão de marcação.</summary>
      <returns vsli:raw="A collection containing the opening and closing bracket characters.">Uma coleção que contém os caracteres de colchete de abertura e fechamento.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTargetType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Retorna o <see cref="T:System.Xaml.XamlType" /> do tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir.</summary>
      <returns vsli:raw="The type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">O tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Retorna o <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">O <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTypeConverter">
      <summary vsli:raw="Returns a type converter implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retorna uma implementação do conversos de tipo associado a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint; or &lt;see langword=&quot;null&quot; /&gt;.">Uma instância <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com a restrição <see cref="T:System.ComponentModel.TypeConverter" /> ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;get&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retorna um acessador <see langword="get" /> associado a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the associated &lt;see langword=&quot;get&quot; /&gt; accessor; or &lt;see langword=&quot;null&quot; /&gt;.">O <see cref="T:System.Reflection.MethodInfo" /> para o acessador <see langword="get" /> associado ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingMember">
      <summary vsli:raw="Returns a CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retorna um <see cref="T:System.Reflection.MemberInfo" /> do sistema de tipo CLR que está associado a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; object that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;.">Cria um objeto <see cref="T:System.Reflection.MemberInfo" /> do sistema de tipo CLR que está associado a este <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;set&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retorna um acessador <see langword="set" /> associado a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the associated &lt;see langword=&quot;set&quot; /&gt; accessor; or &lt;see langword=&quot;null&quot; /&gt;.">O <see cref="T:System.Reflection.MethodInfo" /> para o acessador <see langword="set" /> associado ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupValueSerializer">
      <summary vsli:raw="Returns a value serializer implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retorna uma implementação do serializador de valor que está associado a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint, or &lt;see langword=&quot;null&quot; /&gt;.">Uma instância <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com a restrição <see cref="T:System.Windows.Markup.ValueSerializer" /> ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects have the same value.">Determina se dois objetos <see cref="T:System.Xaml.XamlMember" /> especificados têm o mesmo valor.</summary>
      <param name="xamlMember1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <param name="xamlMember2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlMember1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;xamlMember2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor de <paramref name="xamlMember1" /> for o mesmo que o valor de <paramref name="xamlMember2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects have different values.">Determina se dois objetos <see cref="T:System.Xaml.XamlMember" /> especificados têm valores diferentes.</summary>
      <param name="xamlMember1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <param name="xamlMember2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlMember1&quot; /&gt; differs from the value of &lt;paramref name=&quot;xamlMember2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor de <paramref name="xamlMember1" /> for diferente do valor de <paramref name="xamlMember2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retorna uma representação de cadeia de caracteres desse <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Uma representação da cadeia de caracteres deste <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DeclaringType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that declares the member that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtém o <see cref="T:System.Xaml.XamlType" /> para o tipo que declara o membro que é associado a esse <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that declares the member that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">O <see cref="T:System.Xaml.XamlType" /> para o tipo que declara o membro que está associado a isso <see cref="T:System.Xaml.XamlMember" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DeferringLoader">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML declared objects.">Obtém um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado para o carregamento adiado de objetos declarados em XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">Uma <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /><see cref="T:System.Xaml.XamlDeferringLoader" /> restrição with no genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DependsOn">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. These report the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtém uma lista de objetos <see cref="T:System.Xaml.XamlMember" />. Eles relatam os membros em que há relações de dependência para a ordem de inicialização em relação a esse <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects.">Uma lista de objetos <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Invoker">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtém a implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que está associada a esse <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">A <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementação associada a isso <see cref="T:System.Xaml.XamlMember" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAmbient">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> é relatado como uma propriedade de ambiente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlMember" /> for relatado como uma propriedade de ambiente; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAttachable">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is an attachable member.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> é um membro anexável.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is an attachable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se esse <see cref="T:System.Xaml.XamlMember" /> for um membro anexável; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsDirective">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is a XAML directive.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> é uma diretiva XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is a XAML directive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se esta <see cref="T:System.Xaml.XamlMember" /> for uma diretiva XAML; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsEvent">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event member.">Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlMember" /> representa um membro de evento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlMember" /> representar um evento; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsNameValid">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is initialized with a valid &lt;see langword=&quot;xamlName&quot; /&gt; string as its &lt;see cref=&quot;P:System.Xaml.XamlMember.Name&quot; /&gt;.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> é inicializado com uma cadeia de caracteres <see langword="xamlName" /> válida como seu <see cref="P:System.Xaml.XamlMember.Name" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is initialized with a valid &lt;see langword=&quot;xamlName&quot; /&gt; string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlMember" /> for inicializado com uma <see langword="xamlName" /> cadeia de caracteres válida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a read-only member.">Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlMember" /> representa um membro somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a read-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlMember" /> representar um membro somente leitura; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadPublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member with a callable public &lt;see langword=&quot;get&quot; /&gt; accessor.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> representa um membro com um acessador <see langword="get" /> público chamável.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a callable public &lt;see langword=&quot;get&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlMember" /> representar um acessador público que possa ser chamado <see langword="get" /> ; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsUnknown">
      <summary vsli:raw="Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.">Obtém um valor que indica se o membro não pode ser resolvido pelo sistema de backup que é usado para a resolução de membro e de tipo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is not resolvable; &lt;see langword=&quot;false&quot; /&gt; if the member is resolvable.">
        <see langword="true" /> Se o membro não puder ser resolvido; <see langword="false" /> se o membro puder ser resolvido.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWriteOnly">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member.">Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlMember" /> representa um membro somente gravação.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representar um membro somente gravação, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWritePublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a callable public &lt;see langword=&quot;set&quot; /&gt; accessor.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> representa um membro que tem um acessador <see langword="set" /> público chamável.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a callable public &lt;see langword=&quot;set&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlMember" /> representar um acessador público que possa ser chamado <see langword="set" /> ; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters">
      <summary vsli:raw="Defines the opening and closing bracket characters for a markup extension.">Define os caracteres de colchete de abertura e fechamento de uma extensão de marcação.</summary>
      <returns vsli:raw="A collection containing the opening and closing bracket characters.">Uma coleção que contém os caracteres de colchete de abertura e fechamento.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Name">
      <summary vsli:raw="Gets the &lt;see langword=&quot;xamlName&quot; /&gt; name string that declares this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtém o nome de cadeia de caracteres <see langword="xamlName" /> que declara este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;xamlName&quot; /&gt; name string that declares this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">A <see langword="xamlName" /> cadeia de caracteres de nome que declara isso <see cref="T:System.Xaml.XamlMember" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.PreferredXamlNamespace">
      <summary vsli:raw="Gets the single XAML namespace URI that identifies the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtém o único URI de namespace de XAML que identifica o namespace de XAML primário para este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The identifier for the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;, as a string.">O identificador para o namespace XAML primário para isso <see cref="T:System.Xaml.XamlMember" /> , como uma cadeia de caracteres.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.SerializationVisibility">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; value, which indicates how a visual designer should process the member.">Obtém um valor <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />, que indica como um designer visual deve processar o membro.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; enumeration. The default is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibility.Visible&quot; /&gt;.">Um valor da enumeração <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. O padrão é <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TargetType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Obtém o <see cref="T:System.Xaml.XamlType" /> do tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir.</summary>
      <returns vsli:raw="The type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">O tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Obtém o <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">O <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TypeConverter">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which can be used for type conversion construction of XAML declared objects.">Obtém um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que pode ser usado para a construção de conversão de tipo de objetos declarados XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; value, with a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint on the generic.">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> valor, com uma <see cref="T:System.ComponentModel.TypeConverter" /> restrição no genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.UnderlyingMember">
      <summary vsli:raw="Gets the CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is available for a member that is constructed by &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt;, &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt;, or &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt;.">Obtém o <see cref="T:System.Reflection.MemberInfo" /> do sistema do tipo CLR que está disponível para um membro que é criado por <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> ou <see cref="T:System.Reflection.EventInfo" />.</summary>
      <returns vsli:raw="CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; information, as cast from the initial constructor parameters. A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that is constructed with the &lt;see cref=&quot;M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)&quot; /&gt; signature returns &lt;see langword=&quot;null&quot; /&gt;.">Informações do sistema do tipo CLR <see cref="T:System.Reflection.MemberInfo" /> , como conversão dos parâmetros do Construtor inicial. Um <see cref="T:System.Xaml.XamlMember" /> que é construído com a <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> assinatura retorna <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.ValueSerializer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for value serialization of XAML declared objects.">Obtém um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado para a serialização de valor de objetos declarados XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint on the generic.">Uma <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /><see cref="T:System.Windows.Markup.ValueSerializer" /> restrição with no genérico.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeList">
      <summary vsli:raw="Provides a list of XAML nodes, which can be used for scenarios such as writing XAML nodes in a deferred manner.">Fornece uma lista de nós XAML, que podem ser usados para cenários como gravar nós XAML de forma adiada.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; class, using a provided schema context.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlNodeList" /> usando um contexto de esquema fornecido.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">O contexto do esquema a ser usado para operações de nó.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; class, using a provided schema context and list size.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlNodeList" /> usando um contexto de esquema e um tamanho de lista fornecidos.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">O contexto do esquema a ser usado para operações de nó.</param>
      <param name="size" vsli:raw="The intended item count of the list.">A contagem do item desejado na lista.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.Clear">
      <summary vsli:raw="Clears the items in this list.">Limpa os itens nessa lista.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeList.GetReader">
      <summary vsli:raw="Returns a XAML reader implementation delegate.">Retorna um representante de implementação de leitor de XAML.</summary>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; is still in Write mode.  &#xA;  &#xA; -or-  &#xA;  &#xA; The writer that is used for the node list has no schema context.">A <see cref="T:System.Xaml.XamlNodeList" /> ainda está no modo de gravação.  
  
- ou - 
O gravador usado para a lista de nós não tem nenhum contexto de esquema.</exception>
      <returns vsli:raw="A XAML reader implementation delegate.">Um representante de implementação de leitor de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Count">
      <summary vsli:raw="Gets the number of nodes in this &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt;.">Obtém o número de nós nesta <see cref="T:System.Xaml.XamlNodeList" />.</summary>
      <returns vsli:raw="The number of nodes in this &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt;.">O número de nós neste <see cref="T:System.Xaml.XamlNodeList" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Writer">
      <summary vsli:raw="Gets the associated XAML writer.">Obtém o gravador de XAML associado.</summary>
      <returns vsli:raw="The associated XAML writer.">O gravador XAML associado.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeQueue">
      <summary vsli:raw="Provides a buffer for writing nodes and reading them again.">Fornece um buffer para gravar nós e lê-los novamente.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; class using a provided XAML schema context.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlNodeQueue" /> usando um contexto de esquema XAML fornecido.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">O contexto do esquema a ser usado para operações de nó.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlSchemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlSchemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Count">
      <summary vsli:raw="Gets the number of nodes in the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt;.">Obtém o número de nós no <see cref="T:System.Xaml.XamlNodeQueue" />.</summary>
      <returns vsli:raw="The number of nodes in the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt;.">O número de nós no <see cref="T:System.Xaml.XamlNodeQueue" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.IsEmpty">
      <summary vsli:raw="Gets a value that determines whether this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; does not contain nodes.">Obtém um valor que determina se esta <see cref="T:System.Xaml.XamlNodeQueue" /> não contém nós.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; does not contain nodes; &lt;see langword=&quot;false&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; contains nodes.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlNodeQueue" /> não contiver nós, <see langword="false" /> se ele <see cref="T:System.Xaml.XamlNodeQueue" /> contiver nós.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Reader">
      <summary vsli:raw="Gets a XAML reader implementation delegate.">Obtém um representante de implementação de leitor de XAML.</summary>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML writer that is used for the node list has no valid XAML schema context.">O gravador de XAML que é usado para a lista de nós não tem nenhum contexto de esquema XAML válido.</exception>
      <returns vsli:raw="A XAML reader implementation delegate.">Um representante de implementação de leitor de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Writer">
      <summary vsli:raw="Gets the associated XAML writer.">Obtém o gravador de XAML associado.</summary>
      <returns vsli:raw="The associated XAML writer.">O gravador XAML associado.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeType">
      <summary vsli:raw="Describes the type of the node that is currently being processed by a XAML reader.">Descreve o tipo do nó que está sendo processado por um leitor XAML no momento.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndMember">
      <summary vsli:raw="The reader is at the end of a member node.">O leitor está no final de um nó de membro.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndObject">
      <summary vsli:raw="The reader is at the end of an object node.">O leitor está no final de um nó de objeto.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.GetObject">
      <summary vsli:raw="The reader is within an object node and writing a default or implicit value, instead of being a specified object value.">O leitor está dentro de um nó de objeto e gravando um valor padrão ou implícito, em vez de ser um valor de objeto especificado.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.NamespaceDeclaration">
      <summary vsli:raw="The reader is within an XML namespace declaration.">O leitor está dentro de uma declaração de namespace de XML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.None">
      <summary vsli:raw="The reader is not positioned at a true node (for example, the reader might be at end-of-file).">O leitor não está posicionado em um nó verdadeiro (por exemplo, o leitor pode estar no fim do arquivo).</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartMember">
      <summary vsli:raw="The reader is at the start of a member node.">O leitor está no início de um nó de membro.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartObject">
      <summary vsli:raw="The reader is at the start of an object node.">O leitor está no início de um nó de objeto.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.Value">
      <summary vsli:raw="The reader is within a node and processing a value.">O leitor está dentro de um nó e processando um valor.</summary>
    </member>
    <member name="T:System.Xaml.XamlObjectEventArgs">
      <summary vsli:raw="Provides data for callbacks that can be inserted in the sequence for object initialization and property setting. This influences the object graph that is produced by &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Fornece dados para retornos de chamada que podem ser inseridos na sequência para inicialização de objeto e configuração de propriedade. Isso influencia o gráfico de objeto que é produzido pelo <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectEventArgs.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectEventArgs" />.</summary>
      <param name="instance" vsli:raw="The object instance that is relevant to the event data.">A instância do objeto que é relevante para os dados do evento.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLineNumber">
      <summary vsli:raw="Gets or sets the line number of the relevant object instance.">Obtém ou define o número de linha da instância do objeto relevante.</summary>
      <returns vsli:raw="The line number of the element.">O número de linha do elemento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLinePosition">
      <summary vsli:raw="Gets or sets the position in the line of the relevant object instance.">Obtém ou define a posição na linha da instância do objeto relevante.</summary>
      <returns vsli:raw="The position in the line of the element.">A posição na linha do elemento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.Instance">
      <summary vsli:raw="Gets the object instance that is relevant to the event data.">Obtém a instância do objeto que é relevante para os dados do evento.</summary>
      <returns vsli:raw="The object instance that is relevant to the event data.">A instância do objeto que é relevante para os dados do evento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.SourceBamlUri">
      <summary vsli:raw="Gets or sets the BAML URI of the relevant object instance.">Obtém ou define o URI de BAML da instância do objeto relevante.</summary>
      <returns vsli:raw="The BAML URI of the relevant object instance.">O URI de BAML da instância de objeto relevante.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReader">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation that reads object graphs and generates a XAML node stream.">Fornece uma implementação <see cref="T:System.Xaml.XamlReader" /> que lê gráficos de objeto e gera um fluxo de nós XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
      <param name="instance" vsli:raw="The root of the object tree / object graph to read.">A raiz da árvore de objetos/gráfico de objeto a ser lida.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified reader settings.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReader" /> com as configurações de leitor especificadas.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">A raiz da árvore de objetos a ser lida.</param>
      <param name="settings" vsli:raw="A settings object.">Um objeto de configurações.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified schema context.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReader" /> com o contexto de esquema especificado.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">A raiz da árvore de objetos a ser lida.</param>
      <param name="schemaContext" vsli:raw="The schema context for the reader to use.">O contexto de esquema para o leitor a ser usado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified schema context and reader settings.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReader" /> com o contexto de esquema e as configurações de leitor especificados.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">A raiz da árvore de objetos a ser lida.</param>
      <param name="schemaContext" vsli:raw="The schema context for the reader to use.">O contexto de esquema para o leitor a ser usado.</param>
      <param name="settings" vsli:raw="A settings object.">Um objeto de configurações.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.Read">
      <summary vsli:raw="Provides the next XAML node from the source object graph, if a node is available.">Fornecerá o próximo nó XAML do gráfico de objeto de origem, se um nó estiver disponível.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um nó estiver disponível; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Instance">
      <summary vsli:raw="Gets the object instance that is available at the current reader position.">Obtém a instância do objeto que está disponível na posição atual do leitor.</summary>
      <returns vsli:raw="The object instance at the current reader position; or &lt;see langword=&quot;null&quot; /&gt; if the reader position is not on an object.">A instância do objeto na posição atual do leitor; ou <see langword="null" /> se a posição do leitor não estiver em um objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position is at the end of the file.">Obtém um valor que informa se a posição de leitor está no final do arquivo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader position is at the end of the file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a posição do leitor estiver no final do arquivo; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Member">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Obterá o <see cref="T:System.Xaml.XamlMember" /> atual na posição do leitor, se a posição do leitor estiver em um <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt; if the reader position is not on a member.">O membro atual; ou <see langword="null" /> se a posição do leitor não estiver em um membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace declaration from the current reader position.">Obtém a declaração do namespace de XAML da posição atual do leitor.</summary>
      <returns vsli:raw="The XAML namespace declaration if the reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.NamespaceDeclaration&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">A declaração do namespace XAML se o leitor estiver posicionado em um <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" /> ; caso contrário, <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtém o tipo do nó atual.</summary>
      <returns vsli:raw="The type of the current node.">O tipo do nó atual.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema information for the information set.">Obtém um objeto que fornece informações de esquema para o conjunto de informações.</summary>
      <returns vsli:raw="An object that provides schema information for the information set.">Um objeto que fornece informações de esquema para o conjunto de informações.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the object at the current reader position.">Obtém o <see cref="T:System.Xaml.XamlType" /> do objeto na posição atual do leitor.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the object at the current reader position; or &lt;see langword=&quot;null&quot; /&gt; if the position is not on an object.">O <see cref="T:System.Xaml.XamlType" /> do objeto na posição atual do leitor; ou <see langword="null" /> se a posição não estiver em um objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Value">
      <summary vsli:raw="Gets the value of the node at the current reader position.">Obtém o valor do nó na posição atual do leitor.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">O valor do nó atual; ou <see langword="null" /> , se a posição do leitor não estiver em um <see cref="F:System.Xaml.XamlNodeType.Value" /> tipo de nó.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderException">
      <summary vsli:raw="The exception that is thrown by several &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; internal helper APIs.">A exceção que é gerada por várias APIs auxiliares internas do <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReaderException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReaderException" /> com dados serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a specified message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReaderException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReaderException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for a &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt;.">Especifica as regras de processamento ou as configurações de opção de um <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderSettings&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectReaderSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlObjectReaderSettings.RequireExplicitContentVisibility">
      <summary vsli:raw="Gets or sets a value that determines whether writers that use the associated &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; for context should use designer settings for writing content explicitly.">Obtém ou define um valor que determina se os gravadores que usam o <see cref="T:System.Xaml.XamlObjectReader" /> associado para o contexto deve usar as configurações do designer para gravar o conteúdo explicitamente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that writers that use this context should use designer settings for writing any output content in cases where &lt;see cref=&quot;P:System.Xaml.XamlMember.IsWritePublic&quot; /&gt; reports &lt;see langword=&quot;false&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if designer settings should be ignored.">
        <see langword="true" /> para especificar que os gravadores que usam esse contexto devem usar as configurações de designer para gravar qualquer conteúdo de saída nos casos em que os <see cref="P:System.Xaml.XamlMember.IsWritePublic" /> relatórios <see langword="false" /> ; <see langword="false" /> se as configurações do designer devem ser ignoradas.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectWriter">
      <summary vsli:raw="Creates an object graph from a source XAML node stream.">Cria um grafo de objeto com base em um fluxo de nó XAML de origem.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class using  the XAML schema context that is used by a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriter" /> usando o contexto de esquema XAML usado por um <see cref="T:System.Xaml.XamlReader" />.</summary>
      <param name="schemaContext" vsli:raw="A XAML schema context that is shared with the XAML reader that provides nodes for writing.">Um contexto de esquema XAML que é compartilhado com o leitor XAML que fornece nós para gravação.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class using the context that is used by a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and its settings.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriter" /> usando o contexto de esquema XML usado por um <see cref="T:System.Xaml.XamlReader" /> e suas configurações.</summary>
      <param name="schemaContext" vsli:raw="A XAML schema context that is shared with the XAML reader that provides nodes for writing.">Um contexto de esquema XAML que é compartilhado com o leitor XAML que fornece nós para gravação.</param>
      <param name="settings" vsli:raw="A settings object that specifies certain options for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; behavior and output.">Um objeto de configurações que especifica determinadas opções para comportamento e saída de <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Clear">
      <summary vsli:raw="Resets all possible frames and clears the object graph.">Redefine todos os quadros possíveis e limpa o grafo de objeto.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;, and optionally, releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.Xaml.XamlObjectWriter" /> e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para liberar os recursos gerenciados; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler&quot; /&gt; method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Invoca qualquer método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> que está associado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. The object is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">O objeto a ser relatado. O objeto é empacotado em <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando o manipulador é invocado.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler&quot; /&gt; method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Invoca qualquer método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> que está associado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. The value  is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">O objeto a ser relatado. O valor é empacotado em <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando o manipulador é invocado.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Invoca qualquer método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> referenciado que está associado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. This is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">O objeto a ser relatado. Isso é empacotado em <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando o manipulador é invocado.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Invoca qualquer método <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> referenciado que está associado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The value to pass through &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">O valor a ser passado pelo <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando o manipulador é invocado.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this writer, as long as &lt;paramref name=&quot;handled&quot; /&gt; in &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; event data is not &lt;see langword=&quot;true&quot; /&gt;.">Invoca qualquer método <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> referenciado que está associado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este gravador, contanto que <paramref name="handled" /> nos dados de evento <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> não seja <see langword="true" />.</summary>
      <param name="eventSender" vsli:raw="The object to report as the source to the handler.">O objeto a ser relatado como a fonte para o manipulador.</param>
      <param name="member" vsli:raw="The name of the property to set, which is passed to the handler as part of &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt;.">O nome da propriedade a ser definida, que é passado para o manipulador como parte de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <param name="value" vsli:raw="The value to provide for the property that is named by &lt;paramref name=&quot;property&quot; /&gt;. The value is passed to the handler as part of &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt;.">O valor a ser fornecido para a propriedade que é nomeada pela <paramref name="property" />. O valor é passado para o manipulador como parte do <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <returns vsli:raw="A Boolean value that is set by any associated handler; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Um valor booliano que é definido por qualquer manipulador associado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
      <summary vsli:raw="Implements &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; and provides line information for exceptions.">Implementa <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> e fornece informações de linha para exceções.</summary>
      <param name="lineNumber" vsli:raw="The line number from the reader.">O número de linha do leitor.</param>
      <param name="linePosition" vsli:raw="The line position from the reader.">A posição de linha do leitor.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndMember">
      <summary vsli:raw="Closes the current member scope, and may write the value of the member scope while it closes. The new scope becomes the parent object scope of the member.">Fecha o escopo do membro atual e pode gravar o valor de escopo do membro enquanto ele é fechado. O novo escopo se torna o escopo do objeto pai do membro.</summary>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Failed to create member value from a value node that is encountered between this call and a previous &lt;see langword=&quot;StartMember&quot; /&gt;.">Falha ao criar o valor do membro de um nó de valor que é encontrado entre essa chamada e um <see langword="StartMember" /> anterior.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndObject">
      <summary vsli:raw="Closes the current object scope in the writer. The new object scope becomes the parent member scope.">Fecha o escopo do objeto atual no gravador. O novo escopo de objeto se torna o escopo do membro pai.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteGetObject">
      <summary vsli:raw="Writes the conceptual &lt;see langword=&quot;StartObject&quot; /&gt; into the object graph when the specified object is a default or implicit value of the parent property. The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.">Grava o <see langword="StartObject" /> conceitual no grafo de objeto quando o objeto especificado é um valor padrão ou implícito da propriedade pai. O valor implícito vem de informações que são obtidas com base no contexto do esquema XAML e informações de tipo de suporte, em vez de ser especificado como um valor de objeto no conjunto de nós XAML de entrada.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="Defines a namespace declaration that applies to the next object scope or member scope.">Define uma declaração de namespace que se aplica ao seguinte escopo de objeto ou escopo do membro.</summary>
      <param name="namespaceDeclaration" vsli:raw="The namespace declaration to write.">A declaração de namespace a ser gravada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">O <paramref name="namespaceDeclaration" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A component of &lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Um componente de <paramref name="namespaceDeclaration" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlObjectReaderException" vsli:raw="Tried to write a XAML namespace node in an invalid scope.">Tentativa de gravar um nó de namespace XAML em um escopo inválido.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="Writes a new member node into the current object scope, and the scope becomes a new member scope.">Grava um novo nó de membro no escopo do objeto atual e o escopo se torna um novo escopo do membro.</summary>
      <param name="property" vsli:raw="The XAML property to write. Typically you obtain this value from a XAML reader through the XAML node stream intermediate.">A propriedade XAML a ser gravada. Normalmente esse valor é obtido de um leitor de XAML por meio de fluxo do nó XAML intermediário.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; has &lt;see cref=&quot;P:System.Xaml.XamlMember.IsUnknown&quot; /&gt; set to &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.XamlLanguage.UnknownContent&quot; /&gt; passed, which indicates that the XAML node stream contained content for an object that does not support content.  &#xA;  &#xA; -or-  &#xA;  &#xA; Attempted to write a start member in an invalid scope.">
        <paramref name="property" /> definiu <see cref="P:System.Xaml.XamlMember.IsUnknown" /> como <see langword="true" />.  
  
- ou - 
 <see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> foi passado, o que indica que o fluxo do nó XAML continha o conteúdo de um objeto não compatível com conteúdo.  
  
- ou - 
Tentativa de gravar um membro inicial em um escopo inválido.</exception>
      <exception cref="T:System.Xaml.XamlDuplicateMemberException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; specifies a property that is already explicitly set in the parent object scope.">
        <paramref name="property" /> especifica uma propriedade que já explicitamente é definida no escopo do objeto pai.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="property" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="Writes an object node into the current scope, and sets the scope to a new object scope.">Grava um nó de objeto no escopo atual e define o escopo para um novo escopo de objeto.</summary>
      <param name="xamlType" vsli:raw="The type to write. Typically you obtain this value from a XAML reader.">O tipo a ser gravado. Normalmente esse valor é obtido de um leitor de XAML.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Processing an &lt;see cref=&quot;P:System.Xaml.XamlType.IsUnknown&quot; /&gt; type and cannot create an object.  &#xA;  &#xA; -or-  &#xA;  &#xA; Attempted to write a start object in an invalid scope.">Processando um tipo <see cref="P:System.Xaml.XamlType.IsUnknown" /> e não é possível criar um objeto.  
  
- ou - 
Tentativa de gravar um objeto inicial em um escopo inválido.</exception>
      <exception cref="T:System.Xaml.XamlParseException" vsli:raw="Attempted to write a root object when the root object was already provided in the settings.">Tentativa de gravar um objeto raiz quando este já foi fornecido nas configurações.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes a value to the current member scope. If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.">Grava um valor no escopo de membro atual. Se o escopo atual estiver dentro de uma coleção, um dicionário ou um objeto de matriz, o valor deverá ser adicionado à coleção, dicionário ou matriz.</summary>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Attempted to write a value in an invalid scope.">Tentativa de gravar um valor em um escopo inválido.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.Result">
      <summary vsli:raw="Gets the last object that was written. Typically only called when the node stream is at its end and the object graph is complete.">Obtém o último objeto que foi gravado. Normalmente chamado apenas quando o fluxo do nó é o final e o grafo do objeto é concluído.</summary>
      <returns vsli:raw="The last object written, or &lt;see langword=&quot;null&quot; /&gt;.">O último objeto gravado ou <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.RootNameScope">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; service that maintains the XAML namescope for the absolute node root of the XAML object writer.">Obtém o serviço <see cref="T:System.Windows.Markup.INameScope" /> que mantém o namescope XAML para a raiz do nó absoluto do gravador de objeto XAML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; service that maintains the XAML namescope for the current root of the object writer.">O <see cref="T:System.Windows.Markup.INameScope" /> serviço que mantém o NAMESCOPE XAML para a raiz atual do gravador de objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.SchemaContext">
      <summary vsli:raw="Gets the active XAML schema context.">Obtém o contexto do esquema XAML ativo.</summary>
      <returns vsli:raw="The XAML schema context.">O contexto do esquema XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo">
      <summary vsli:raw="Gets a value that reports whether a line information service should provide values and therefore, should also call the &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; method when it is relevant.">Obtém um valor que informa se um serviço de informações de linha deve fornecer valores e, portanto, também deve chamar o método <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> quando ele é relevante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is used by the writer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se as informações de linha forem usadas pelo gravador; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterException">
      <summary vsli:raw="The exception that is thrown when a XAML writer (such as the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class) encounters an error while attempting to produce object graphs from a XAML node stream.">A exceção que é lançada quando um gravador XAML (como a classe <see cref="T:System.Xaml.XamlObjectWriter" />) encontra um erro ao tentar produzir grafos de objeto de um fluxo de nó XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriterException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriterException" /> com dados serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a specified message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriterException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriterException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterSettings">
      <summary vsli:raw="Provides specific XAML writer settings for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Fornece configurações específicas de gravador XAML para <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; class that is based on the copy of an existing instance.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlObjectWriterSettings" /> que se baseia na cópia de uma instância existente.</summary>
      <param name="settings" vsli:raw="The settings instance to copy.">A instância de configurações a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;settings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="settings" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
      <summary vsli:raw="Gets or sets &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; permissions that the XAML writer observes.">Obtém ou define permissões <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que o gravador XAML observa.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; permissions.">As <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> permissões.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.BeginInit&quot; /&gt; phase of the object lifetime for each created object.">Obtém ou define uma referência a um retorno de chamada invocado pelo gravador de XAML na fase <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> do tempo de vida do objeto para cada objeto criado.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.BeginInit&quot; /&gt; phase of object lifetime.">Um retorno de chamada que é invocado pelo gravador XAML na <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> fase de vida útil do objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.EndInit&quot; /&gt; phase of the object lifetime for each created object.">Obtém ou define uma referência a um retorno de chamada invocado pelo gravador de XAML na fase <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> do tempo de vida do objeto para cada objeto criado.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.EndInit&quot; /&gt; phase of object lifetime.">Um retorno de chamada que é invocado pelo gravador XAML na <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> fase de vida útil do objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the post-member-write phase of the object lifetime for each created object.">Obtém ou define uma referência a um retorno de chamada invocado pelo gravador de XAML na fase de pós-gravação do membro do tempo de vida do objeto para cada objeto criado.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the post-member-write phase of object lifetime.">Um retorno de chamada que é invocado pelo gravador XAML na fase pós-membro-gravação do tempo de vida do objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the pre-member-write phase of the object lifetime for each created object.">Obtém ou define uma referência a um retorno de chamada invocado pelo gravador de XAML na fase de pré-gravação do membro do tempo de vida do objeto para cada objeto criado.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the pre-member-write phase of object lifetime.">Um retorno de chamada que é invocado pelo gravador XAML na fase pré-membro-gravação da vida útil do objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
      <summary vsli:raw="Gets or sets the XAML namescope to use for registering names from the XAML writer if &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Obtém ou define o namescope XAML a usar para registrar nomes de a XAML se <see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /> for <see langword="true" />.</summary>
      <returns vsli:raw="The XAML namescope to use for registering names. The default is &lt;see langword=&quot;null&quot; /&gt;.">O namescope XAML a ser usado para registrar nomes. O padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
      <summary vsli:raw="Gets or sets a value that specifies whether the XAML writer should ignore (not call) &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)&quot; /&gt; implementations on a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; in type-converter situations.">Obtém ou define um valor que especifica se o gravador XAML deve ignorar (não chamar) implementações <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> em <see cref="T:System.ComponentModel.TypeConverter" /> em situações de conversor de tipo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XAML writer ignores &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)&quot; /&gt; implementations; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se o gravador XAML ignorar <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> implementações; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
      <summary vsli:raw="Gets or sets a value that determines whether to disable a default &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; feature that runs type conversion on the &lt;paramref name=&quot;K&quot; /&gt; component of a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; before writing the object graph representation.">Obtém ou define um valor que determina se necessário desabilitar um recurso <see cref="T:System.Xaml.XamlObjectWriter" /> padrão que executa conversão de tipo no componente <paramref name="K" /> de um <see cref="T:System.Collections.Generic.Dictionary`2" /> antes de gravar a representação de gráfico de objeto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;K&quot; /&gt; type conversion for a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; object should be disabled. &lt;see langword=&quot;false&quot; /&gt; if performing &lt;paramref name=&quot;K&quot; /&gt; type conversion for a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; object applies. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se <paramref name="K" /> a conversão de tipo para um <see cref="T:System.Collections.Generic.Dictionary`2" /> objeto deve ser desabilitada. <see langword="false" /> Se <paramref name="K" /> a execução da conversão de tipo para um <see cref="T:System.Collections.Generic.Dictionary`2" /> objeto for aplicada. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
      <summary vsli:raw="Gets or sets a value that determines whether name registration should occur against the specified &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope&quot; /&gt;.">Obtém ou define um valor que determina se o registro do nome deve ocorrer em relação ao <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> especificado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if name registration should occur against the &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if name registration should occur into the parent XAML namescope. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se o registro de nome deve ocorrer em relação a <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> ; <see langword="false" /> se o registro de nome deve ocorrer no NAMESCOPE de XAML pai. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
      <summary vsli:raw="Gets or sets a preexisting root object for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; operations.">Obtém ou define um objeto raiz preexistente para operações <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <returns vsli:raw="A preexisting root object for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; operations.">Um objeto raiz preexistente para <see cref="T:System.Xaml.XamlObjectWriter" /> operações.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
      <summary vsli:raw="Gets or sets a value that determines whether the XAML writer omits to check for the code path that checks for duplicate properties.">Obtém ou define um valor que determina se o gravador XAML omite a verificação do caminho do código que verifica se há propriedades duplicadas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the duplicate property check should be omitted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a verificação de propriedade duplicada deve ser omitida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; should omit to call &lt;see langword=&quot;ProvideValue&quot; /&gt; on a markup extension, which is relevant when the markup extension represents the root of an object graph.">Obtém ou define um valor que indica se o <see cref="T:System.Xaml.XamlObjectWriter" /> deve omitir a chamada a <see langword="ProvideValue" /> em uma extensão de marcação, o que é relevante quando a extensão de marcação representa a raiz de um gráfico de objeto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; should omit to call &lt;see langword=&quot;ProvideValue&quot; /&gt; on a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se o <see cref="T:System.Xaml.XamlObjectWriter" /> deve omitir para chamar <see langword="ProvideValue" /> em uma extensão de marcação; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
      <summary vsli:raw="Used in the &lt;see langword=&quot;BeginInitHandler&quot; /&gt; in place of the actual &lt;see langword=&quot;BaseUri&quot; /&gt;.">Usado no <see langword="BeginInitHandler" /> em lugar do <see langword="BaseUri" /> real.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; to be used in place of the actual &lt;see langword=&quot;BaseUri&quot; /&gt;.">Um <see cref="T:System.Uri" /> a ser usado no lugar do real <see langword="BaseUri" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
      <summary vsli:raw="Gets or sets the handler to use when the object writer calls into a CLR-implemented &lt;see langword=&quot;SetValue&quot; /&gt; for dependency properties.">Obtém ou define o manipulador a ser usado quando o gravador de objeto chama em um <see langword="SetValue" /> implementado por CLR para propriedades de dependência.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Uma implementação de manipulador que manipula esse caso.</returns>
    </member>
    <member name="T:System.Xaml.XamlParseException">
      <summary vsli:raw="The exception that is thrown when a XAML reader cannot process elements of the XAML reader source into a XAML node stream.">A exceção que é gerada quando um leitor de XAML não pode processar elementos da origem do leitor de XAML em um fluxo do nó XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlParseException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlParseException" /> com dados serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a specified message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlParseException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlParseException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Xaml.XamlReader">
      <summary vsli:raw="Provides base definitions for classes that consume XAML input and produce XAML node streams.">Fornece definições de base para classes que consomem entradas XAML e produzem fluxos de nós XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.#ctor">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; class.">Inicializa a classe <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Close">
      <summary vsli:raw="Closes the XAML node stream.">Fecha o fluxo de nós XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;, and optionally, releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.Xaml.XamlReader" /> e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para liberar os recursos gerenciados; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlReader.Read">
      <summary vsli:raw="When implemented in a derived class, provides the next XAML node from the source, if a node is available.">Quando implementado em uma classe derivada, fornecerá o próximo nó XAML da origem, se houver um nó disponível.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um nó estiver disponível; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.ReadSubtree">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that is based on the current &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;, where the returned &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; is used to iterate through a subtree of the XAML node structure.">Retorna um <see cref="T:System.Xaml.XamlReader" /> que se baseia no <see cref="T:System.Xaml.XamlReader" /> atual, no qual o <see cref="T:System.Xaml.XamlReader" /> retornado é usado para iterar em uma subárvore da estrutura de nós XAML.</summary>
      <returns vsli:raw="A new XAML reader instance for the subtree.">Uma nova instância de leitor de XAML da subárvore.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Skip">
      <summary vsli:raw="Skips the current node and advances the reader position to the next node.">Ignora o nó atual e avança a posição do leitor para o próximo nó.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.System#IDisposable#Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; class.">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlReader.IsDisposed">
      <summary vsli:raw="Gets whether &lt;see cref=&quot;M:System.Xaml.XamlReader.Dispose(System.Boolean)&quot; /&gt; has been called.">Obtém se <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> foi chamado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.XamlReader.Dispose(System.Boolean)&quot; /&gt; has been called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se foi <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> chamado; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.IsEof">
      <summary vsli:raw="When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.">Quando implementado em uma classe derivada, obtém um valor que informa se a posição do leitor está no fim do arquivo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at the conceptual end-of-file of the XAML node stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a posição estiver no final conceitual do arquivo do fluxo do nó XAML; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Member">
      <summary vsli:raw="When implemented in a derived class, gets the current member at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Quando implementada em uma classe derivada, obterá o membro atual na posição do leitor, se a posição do leitor estiver em um <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the reader position is not on a member.">O membro atual; ou <see langword="null" /> , se a posição do leitor não estiver em um membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Namespace">
      <summary vsli:raw="When implemented in a derived class, gets the XAML namespace information from the current node.">Quando implementado em uma classe derivada, obtém as informações do namespace de XAML do nó atual.</summary>
      <returns vsli:raw="The XAML namespace information, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">As informações do namespace XAML, se estiverem disponíveis; caso contrário, <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.NodeType">
      <summary vsli:raw="When implemented in a derived class, gets the type of the current node.">Quando implementado em uma classe derivada, obtém o tipo do nó atual.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Um valor da enumeração <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.SchemaContext">
      <summary vsli:raw="When implemented in a derived class, gets an object that provides XAML schema context information for the information set.">Quando implementado em uma classe derivada, obtém um objeto que fornece informações de contexto do esquema XAML para o conjunto de informações.</summary>
      <returns vsli:raw="An object that provides XAML schema context information for the information set.">Um objeto que fornece informações de contexto de esquema XAML para o conjunto de informações.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Type">
      <summary vsli:raw="When implemented in a derived class, gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Quando implementado em uma classe derivada, obtém o <see cref="T:System.Xaml.XamlType" /> do nó atual.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on an object.">O <see cref="T:System.Xaml.XamlType" /> do nó atual; ou <see langword="null" /> , se a posição atual do leitor não estiver em um objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Value">
      <summary vsli:raw="When implemented in a derived class, gets the value of the current node.">Quando implementado em uma classe derivada, obtém o valor do nó atual.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">O valor do nó atual; ou <see langword="null" /> , se a posição atual do leitor não estiver em um <see cref="F:System.Xaml.XamlNodeType.Value" /> tipo de nó.</returns>
    </member>
    <member name="T:System.Xaml.XamlReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation.">Especifica as regras de processamento ou as configurações de opção de uma implementação de <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; class based on values in another &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; object.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlReaderSettings" /> com base nos valores de outro objeto <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; object.">Um objeto <see cref="T:System.Xaml.XamlReaderSettings" /> existente.</param>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot">
      <summary vsli:raw="Gets or sets a value that indicates whether the root object may include members that have a protected code access model when it reports the XAML type representation.">Obtém ou define um valor que indica se o objeto raiz pode incluir membros que tenham um modelo de acesso de código protegido ao informar a representação de tipo XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the root object may include members that have a protected code access model; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se o objeto raiz pode incluir membros que têm um modelo de acesso de código protegido; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.BaseUri">
      <summary vsli:raw="Gets or sets the base URI that is used to resolve relative paths.">Obtém ou define o URI base que é usado para resolver os caminhos relativos.</summary>
      <returns vsli:raw="The base URI to use. The default is &lt;see langword=&quot;null&quot; /&gt;.">O URI de base a ser usado. O padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements">
      <summary vsli:raw="Gets or sets a value that specifies whether the XAML reader should ignore values for &lt;see langword=&quot;x:Uid&quot; /&gt; attributes that exist on property elements.">Obtém ou define um valor que especifica se o leitor de XAML deve ignorar os valores de atributos <see langword="x:Uid" /> que existem em elementos de propriedade.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader should ignore values for &lt;see langword=&quot;x:Uid&quot; /&gt; attributes on property elements. &lt;see langword=&quot;false&quot; /&gt; if the reader should process &lt;see langword=&quot;x:Uid&quot; /&gt; attributes on property elements. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se o leitor deve ignorar valores para <see langword="x:Uid" /> atributos em elementos de propriedade. <see langword="false" /> Se o leitor deve processar <see langword="x:Uid" /> atributos em elementos de propriedade. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.LocalAssembly">
      <summary vsli:raw="Gets or sets the object that represents the current local assembly for processing. This assembly information is used for calls to helper APIs such as &lt;see cref=&quot;M:System.Xaml.XamlType.GetAllMembers&quot; /&gt;.">Obtém ou define o objeto que representa o assembly local atual a ser processado. Essas informações de assembly são usadas para chamadas a APIs auxiliares, como <see cref="M:System.Xaml.XamlType.GetAllMembers" />.</summary>
      <returns vsli:raw="A CLR reflection &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; object.">Um objeto de reflexão do CLR <see cref="T:System.Reflection.Assembly" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ProvideLineInfo">
      <summary vsli:raw="Gets or sets a value that specifies whether the reader can provide line number and position.">Obtém ou define um valor que especifica se o leitor pode fornecer o número e a posição da linha.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can provide line number and position information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se o leitor puder fornecer informações de número de linha e de posição; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ValuesMustBeString">
      <summary vsli:raw="Gets or sets a value that specifies whether the reader enforces that all &lt;see langword=&quot;Value&quot; /&gt; nodes are processed as a &lt;see langword=&quot;String&quot; /&gt; type.">Obtém ou define um valor que especifica se o leitor impõe que todos os nós <see langword="Value" /> sejam processados como um tipo <see langword="String" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader enforces that only &lt;see langword=&quot;String&quot; /&gt; is contained in &lt;see langword=&quot;Value&quot; /&gt; nodes; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se o leitor impõe que apenas <see langword="String" /> está contido em <see langword="Value" /> nós; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaContext">
      <summary vsli:raw="Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.">Define um contexto reutilizável para interpretar ou mapear tipos XAML e os tipos nos assemblies subjacentes a eles.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a set of reference assemblies.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaContext" />, com base em um conjunto de assemblies de referência.</summary>
      <param name="referenceAssemblies" vsli:raw="An enumerable set of assembly information items. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Um conjunto enumerável de itens de informações de assembly. Cada item de informações de assembly é especificado por um valor <see cref="T:System.Reflection.Assembly" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a set of reference assemblies and a settings object.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaContext" />, com base em um conjunto de assemblies de referência e um objeto de configurações.</summary>
      <param name="referenceAssemblies" vsli:raw="An enumerable set of assembly information. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Um conjunto enumerável de informações de assembly. Cada item de informações de assembly é especificado por um valor <see cref="T:System.Reflection.Assembly" />.</param>
      <param name="settings" vsli:raw="The settings object to use to construct the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">O objeto de configurações a ser usado para criar o <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a settings object.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaContext" /> baseada em um objeto de configurações.</summary>
      <param name="settings" vsli:raw="The settings object to use to construct the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">O objeto de configurações a ser usado para criar o <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.Finalize">
      <summary vsli:raw="Provides a nonstandard &lt;see langword=&quot;Finalize&quot; /&gt; implementation that does not invoke &lt;see langword=&quot;Dispose&quot; /&gt;.">Fornece uma implantação <see langword="Finalize" /> não padrão que não invoca <see langword="Dispose" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
      <summary vsli:raw="Searches the assemblies that are held by this &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; and returns a set of namespaces.">Pesquisa os assemblies que são mantidos por este <see cref="T:System.Xaml.XamlSchemaContext" /> e retorna um conjunto de namespaces.</summary>
      <returns vsli:raw="An enumerable set of namespace identifiers. These identifiers are provided as strings.">Um conjunto enumerável de identificadores de namespace. Esses identificadores são fornecidos como cadeias de caracteres.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
      <summary vsli:raw="Searches the assemblies that are held by this &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; and returns a set of types from the specified XAML namespace.">Pesquisa os assemblies que são mantidos por este <see cref="T:System.Xaml.XamlSchemaContext" /> e retorna um conjunto de tipos do namespace XAML especificado.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace to return types for.">O namespace XAML para os quais retornar os tipos.</param>
      <returns vsli:raw="An enumerable set of XAML types. Each XAML type in the set is represented by a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object.">Um conjunto enumerável de tipos de XAML. Cada tipo de XAML no conjunto é representado por um objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
      <summary vsli:raw="Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.">Obtém uma cadeia de caracteres que é relatada como o prefixo preferencial para os consumidores usados quando eles mapeiam o namespace de XAML especificado.</summary>
      <param name="xmlns" vsli:raw="The XAML namespace to get the preferred prefix for.">O namespace de XAML para o qual obter o prefixo preferencial.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlns&quot; /&gt; is null.">
        <paramref name="xmlns" /> é nulo.</exception>
      <returns vsli:raw="A string that consumers should use when they map the specified XAML namespace for markup use.">Uma cadeia de caracteres que os consumidores devem usar quando mapeiam o namespace de XAML especificado para o uso de marcação.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
      <summary vsli:raw="Returns a value converter that can convert to the requested &lt;paramref name=&quot;targetType&quot; /&gt;.">Retorna um conversor de valor que pode ser convertido para o <paramref name="targetType" /> solicitado.</summary>
      <param name="converterType" vsli:raw="The converter implementation.">A implementação de conversor.</param>
      <param name="targetType" vsli:raw="The desired destination type for the converter.">O tipo de destino desejado para o conversor.</param>
      <typeparam name="TConverterBase" vsli:raw="The specific converter base class.">A classe base do conversor específico.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with a constraint that matches the constraint that is put on the method call.">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com uma restrição que corresponde à restrição que é colocada na chamada do método.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; value that represents a directive, either for the XAML language or for a particular implementation.">Retorna um valor <see cref="T:System.Xaml.XamlDirective" /> que representa uma diretiva para a linguagem XAML ou para uma implementação específica.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains the named directive.">O namespace de XAML que contém a diretiva nomeada.</param>
      <param name="name" vsli:raw="The name of the directive to obtain.">O nome da diretiva a ser obtida.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlNamespace&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlNamespace" /> ou <paramref name="name" /> é <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; object that represents the requested directive.">Um objeto <see cref="T:System.Xaml.XamlDirective" /> que representa a diretiva solicitada.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a XAML namespace and a string for the type name. This signature can specify the type arguments for cases where the desired type is a generic type.">Retorna um <see cref="T:System.Xaml.XamlType" /> que se baseia em um namespace XAML e uma cadeia de caracteres para o nome do tipo. Esta assinatura pode especificar os argumentos de tipo para casos em que o tipo desejado é um tipo genérico.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains the desired type.">O namespace de XAML que contém o tipo desejado.</param>
      <param name="name" vsli:raw="The string name of the desired type.">O nome da cadeia de caracteres do tipo desejado.</param>
      <param name="typeArguments" vsli:raw="The initialization type arguments for a generic type.">Os argumentos de tipo de inicialização para um tipo genérico.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input criteria.">O <see cref="T:System.Xaml.XamlType" /> que corresponde aos critérios de entrada.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a CLR type identifier.">Retorna um <see cref="T:System.Xaml.XamlType" /> que se baseia em um identificador de tipo CLR.</summary>
      <param name="type" vsli:raw="The type to get a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for.">O tipo para o qual obter um <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input &lt;paramref name=&quot;type&quot; /&gt;.">O <see cref="T:System.Xaml.XamlType" /> que corresponda ao <paramref name="type" /> de entrada.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a XAML system type name.">Retorna um <see cref="T:System.Xaml.XamlType" /> que se baseia em um nome de tipo de sistema XAML.</summary>
      <param name="xamlTypeName" vsli:raw="The XAML type name to get a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for.">O nome de tipo XAML para o qual obter um <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A component of &lt;paramref name=&quot;xamlTypeName&quot; /&gt; (&lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Name&quot; /&gt; or &lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Namespace&quot; /&gt;) is &lt;see langword=&quot;null&quot; /&gt;.">Um componente de <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> ou <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlTypeName" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input &lt;paramref name=&quot;xamlTypeName&quot; /&gt;.">O <see cref="T:System.Xaml.XamlType" /> que corresponda ao <paramref name="xamlTypeName" /> de entrada.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
      <summary vsli:raw="Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.">Chamado quando operações usam este contexto de esquema para resolver um assembly que é necessário para resolver os namespaces de XAML que ele contém.</summary>
      <param name="assemblyName" vsli:raw="The name of the assembly to load.">O nome do assembly a ser carregado.</param>
      <returns vsli:raw="The resolved assembly.">O assembly resolvido.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
      <summary vsli:raw="Returns the success or failure of a request for a compatible XAML namespace. A successful request reports that XAML namespace as an out parameter.">Retorna o êxito ou falha de uma solicitação para um namespace de XAML compatível. Uma solicitação bem-sucedida reporta o namespace de XAML como um parâmetro de saída.</summary>
      <param name="xamlNamespace" vsli:raw="The &lt;see langword=&quot;xmlns&quot; /&gt; string for the XAML namespace to be checked for a compatible result.">A cadeia de caracteres <see langword="xmlns" /> para o namespace de XAML ser verificado quanto a um resultado compatível.</param>
      <param name="compatibleNamespace" vsli:raw="When this method returns, the &lt;see langword=&quot;xmlns&quot; /&gt; string for a compatible XAML namespace request. This might be identical to &lt;paramref name=&quot;xamlNamespace&quot; /&gt; if the method returns &lt;see langword=&quot;false&quot; /&gt;.">Quando este método retorna, a cadeia de caracteres <see langword="xmlns" /> para uma solicitação de namespace de XAML compatível. Isso pode ser idêntico a <paramref name="xamlNamespace" /> se o método retornar <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlNamespace" /> é <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;compatibleNamespace&quot; /&gt; contains a usable result; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="compatibleNamespace" /> contiver um resultado utilizável, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary vsli:raw="Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.">Obtém um valor que especifica se um esquema XAML e seu contexto usam nomes de assembly totalmente qualificados nos valores que são retornados pela API de pesquisa.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um esquema XAML e seu contexto usarem nomes de assembly totalmente qualificados nos valores retornados pelas APIs de pesquisa; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
      <summary vsli:raw="Gets an enumerable set of reference assemblies for the XAML schema context.">Obtém um conjunto enumerável de assemblies de referência para o contexto do esquema XAML.</summary>
      <returns vsli:raw="An enumerable set of reference assemblies for the schema context. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Um conjunto enumerável de assemblies de referência para o contexto do esquema. Cada item de informações de assembly é especificado por um valor <see cref="T:System.Reflection.Assembly" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
      <summary vsli:raw="Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).">Obtém um valor que especifica se um esquema XAML e seu contexto dão suporte a extensões de marcação que têm dois construtores com o mesmo arity (número de parâmetros de entrada).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema context permits markup extensions that have duplicate arity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se o contexto de esquema permitir extensões de marcação com arity duplicado; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaContextSettings">
      <summary vsli:raw="Provides optional settings for a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Fornece configurações opcionais para um <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaContextSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; class by copying the values of an existing &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; instance.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaContextSettings" /> copiando os valores de uma instância de <see cref="T:System.Xaml.XamlSchemaContextSettings" /> existente.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt;.">Um <see cref="T:System.Xaml.XamlSchemaContextSettings" /> existente.</param>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary vsli:raw="Gets or sets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.">Obtém define um valor que especifica se um esquema XAML e seu contexto usam nomes de assembly totalmente qualificados nos valores que são retornados pela API de pesquisa.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um esquema XAML e seu contexto usarem nomes de assembly totalmente qualificados nos valores retornados pelas APIs de pesquisa; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity">
      <summary vsli:raw="Gets or sets a value that specifies whether a XAML schema context allows for markup extensions that have two constructors with the same arity (number of input parameters).">Obtém ou define um valor que especifica se um contexto de esquema XAML permite extensões de marcação que tenham dois construtores com o mesmo arity (número de parâmetros de entrada).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema context allows for markup extensions that have duplicate arity; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se o contexto de esquema permitir extensões de marcação com arity duplicado; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaException">
      <summary vsli:raw="The exception that is thrown when a binding system or another schema representation system for XAML reports an exception to the schema context.">A exceção que é gerada quando um sistema de associação ou outro sistema de representação de esquema para XAML informa uma exceção para o contexto do esquema.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaException" /> com dados serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a specified message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlSchemaException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Xaml.XamlServices">
      <summary vsli:raw="Provides higher-level services (static methods) for the common XAML tasks of reading XAML and writing an object graph; or reading an object graph and writing XAML file output for serialization purposes.">Fornece serviços de nível superior (métodos estáticos) para as tarefas comuns de XAML de ler XAML e gravar um grafo de objeto; ou ler um grafo de objeto e gravar a saída do arquivo XAML para fins de serialização.</summary>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; source for a XAML reader and writes its output as an object graph.">Carrega um <see cref="T:System.IO.Stream" /> de origem em um leitor de XAML e grava a saída como um gráfico de objeto.</summary>
      <param name="stream" vsli:raw="The stream to load as input.">O fluxo a ser carregado como entrada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The object graph that is written as output.">O gráfico de objeto que é gravado como saída.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
      <summary vsli:raw="Creates a XAML reader from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and returns an object graph.">Cria um leitor de XAML de um <see cref="T:System.IO.TextReader" /> e retorna um gráfico de objeto.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use as the basis for the created &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">O <see cref="T:System.IO.TextReader" /> a ser usado como base para o <see cref="T:System.Xml.XmlReader" /> criado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The object graph that is returned.">O grafo de objeto que é retornado.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.String)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; source for a XAML reader and returns an object graph.">Carrega um <see cref="T:System.IO.Stream" /> de origem para um leitor de XAML e retorna um gráfico de objeto.</summary>
      <param name="fileName" vsli:raw="The file name to load and use as source.">O nome do arquivo a ser carregado e usado como origem.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">A entrada <paramref name="fileName" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The object graph that is returned.">O grafo de objeto que é retornado.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
      <summary vsli:raw="Loads a specific XAML reader implementation and returns an object graph.">Carrega uma implementação do leitor de XAML específica e retorna um gráfico de objeto.</summary>
      <param name="xamlReader" vsli:raw="The XAML reader implementation to use as the reader for this &lt;see langword=&quot;Load&quot; /&gt; operation.">A implementação do leitor de XAML a ser usado como leitor para esta operação de <see langword="Load" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">A entrada <paramref name="xamlReader" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The object graph that is returned.">O grafo de objeto que é retornado.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads a specific XML reader implementation and returns an object graph.">Carrega uma implementação do leitor de XML específica e retorna um gráfico de objeto.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation to use as the reader for this &lt;see langword=&quot;Load&quot; /&gt; operation.">A implementação de <see cref="T:System.Xml.XmlReader" /> a ser usada como leitor para esta operação de <see langword="Load" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">A entrada <paramref name="xamlReader" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The output object graph.">O gráfico de objeto de saída.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Parse(System.String)">
      <summary vsli:raw="Reads XAML as string output and returns an object graph.">Lê o XAML como saída de cadeia de caracteres e retorna um grafo de objeto.</summary>
      <param name="xaml" vsli:raw="The XAML string input to parse.">A entrada de cadeia de caracteres XAML a ser analisada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xaml&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">A entrada <paramref name="xaml" /> é <see langword="null" />.</exception>
      <returns vsli:raw="The object graph that is returned.">O grafo de objeto que é retornado.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then into an output stream for serialization.">Processa um gráfico de objeto fornecido em uma representação de nó XAML e, em seguida, em um fluxo de saída para serialização.</summary>
      <param name="stream" vsli:raw="The destination stream.">O fluxo de destino.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">A raiz do gráfico de objeto a ser processado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">A entrada <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then into an output that goes to the provided &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Processa um gráfico de objeto fornecido em uma representação de nó XAML e, em seguida, em uma saída que vai para o <see cref="T:System.IO.TextWriter" /> fornecido.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">O <see cref="T:System.IO.TextWriter" /> que grava a saída.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">A raiz do gráfico de objeto a ser processado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">A entrada <paramref name="writer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Object)">
      <summary vsli:raw="Processes a provided object tree into a XAML node representation, and returns a string representation of the output XAML.">Processa uma árvore de objetos fornecida em uma representação de nó XAML e retorna uma representação de cadeia de caracteres do XAML de saída.</summary>
      <param name="instance" vsli:raw="The root of the object graph to process.">A raiz do gráfico de objeto a ser processado.</param>
      <returns vsli:raw="The XAML markup output as a string.">A saída da marcação XAML como uma cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to an output file at a provided location.">Processa um gráfico de objeto fornecido em uma representação de nó XAML e, em seguida, o grava em um arquivo de saída em um local fornecido.</summary>
      <param name="fileName" vsli:raw="The name and location of the file to write the output to.">O nome e o local do arquivo no qual gravar a saída.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">A raiz do gráfico de objeto a ser processado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is an empty string.">
        <paramref name="fileName" /> é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to the provided XAML writer.">Processa um gráfico de objeto fornecido em uma representação de nó XAML e, em seguida, o grava no gravador XAML fornecido.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; implementation to use.">A implementação de <see cref="T:System.Xaml.XamlWriter" /> a ser usada.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">A raiz do gráfico de objeto a ser processado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">A entrada <paramref name="writer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to the provided &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Processa um gráfico de objeto fornecido em uma representação de nó XAML e, em seguida, o grava no <see cref="T:System.Xml.XmlWriter" /> fornecido.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; implementation to use.">A implementação de <see cref="T:System.Xml.XmlWriter" /> a ser usada.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">A raiz do gráfico de objeto a ser processado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">A entrada <paramref name="writer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
      <summary vsli:raw="Connects a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use a common XAML node set intermediary. Potentially transforms the content, depending on the types of readers and writers that are provided.">Conecta um <see cref="T:System.Xaml.XamlReader" /> e um <see cref="T:System.Xaml.XamlWriter" /> para usar um intermediário de conjunto de nós XAML comum. Potencialmente transforma o conteúdo, dependendo dos tipos de leitores e gravadores fornecidos.</summary>
      <param name="xamlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation to use.">A implementação de <see cref="T:System.Xaml.XamlReader" /> a ser usada.</param>
      <param name="xamlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use.">O <see cref="T:System.Xaml.XamlWriter" /> a ser usado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; or &lt;paramref name=&quot;xamlWriter&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">A entrada <paramref name="xamlReader" /> ou <paramref name="xamlWriter" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML schema context does not match between the provided &lt;paramref name=&quot;xamlReader&quot; /&gt; and &lt;paramref name=&quot;xamlWriter&quot; /&gt;.">O contexto do esquema XAML não corresponde entre o <paramref name="xamlReader" /> fornecido e <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
      <summary vsli:raw="Connects a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use a common XAML node set intermediary. Potentially transforms the content, depending on the types of readers and writers that are provided. Provides a parameter for specifying whether to close the writer after the call is completed.">Conecta um <see cref="T:System.Xaml.XamlReader" /> e um <see cref="T:System.Xaml.XamlWriter" /> para usar um intermediário de conjunto de nós XAML comum. Potencialmente transforma o conteúdo, dependendo dos tipos de leitores e gravadores fornecidos. Fornece um parâmetro para especificar se o gravador deve ser fechado após a chamada ser concluída.</summary>
      <param name="xamlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation to use.">A implementação de <see cref="T:System.Xaml.XamlReader" /> a ser usada.</param>
      <param name="xamlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use.">O <see cref="T:System.Xaml.XamlWriter" /> a ser usado.</param>
      <param name="closeWriter" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to close the writer after the call is complete; &lt;see langword=&quot;false&quot; /&gt; to leave the writer active at the last written position.">
        <see langword="true" /> para fechar o gravador após a conclusão da chamada; <see langword="false" /> para deixar o gravador ativo na última posição gravada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; or &lt;paramref name=&quot;xamlWriter&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">A entrada <paramref name="xamlReader" /> ou <paramref name="xamlWriter" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML schema context does not match between the provided &lt;paramref name=&quot;xamlReader&quot; /&gt; and &lt;paramref name=&quot;xamlWriter&quot; /&gt;.">O contexto do esquema XAML não corresponde entre o <paramref name="xamlReader" /> fornecido e <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="T:System.Xaml.XamlType">
      <summary vsli:raw="Reports information about XAML types as part of the overall XAML system that is implemented in .NET XAML Services.">Relata informações sobre os tipos XAML, como parte do sistema geral de XAML que é implementado nos serviços XAML do .NET Framework.</summary>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on a string name for the type.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlType" /> com base em um nome de cadeia de caracteres para o tipo.</summary>
      <param name="typeName" vsli:raw="The name of the type to create.">O nome do tipo a ser criado.</param>
      <param name="typeArguments" vsli:raw="The type arguments for a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a generic type. Can be (and often is) &lt;see langword=&quot;null&quot; /&gt;, which indicates that the represented type is not a generic type.">Os argumentos de tipo para um <see cref="T:System.Xaml.XamlType" /> que representa um tipo genérico. Pode ser (e geralmente é) <see langword="null" />, o que indica que o tipo representado não é um tipo genérico.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers and XAML writers.">Contexto do esquema XAML para leitores de XAML e gravadores de XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Um ou mais <paramref name="typeName" /> ou <paramref name="schemaContext" /> são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on the XAML namespace and a string name for the type. This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlType" /> com base no namespace de XAML e em um nome de cadeia de caracteres para o tipo. Este construtor é exclusivamente para análise e a gravação de nó de XAML de usos de tipo que são conhecidos por não terem suporte no sistema de tipos compatível nem no contexto de esquema XAML.</summary>
      <param name="unknownTypeNamespace" vsli:raw="The XAML namespace for the type, as a string.">O namespace de XAML para o tipo, como uma cadeia de caracteres.</param>
      <param name="unknownTypeName" vsli:raw="The name of the type in the provided &lt;paramref name=&quot;unknownTypeNamespace&quot; /&gt; XAML namespace.">O nome do tipo no namespace XAML <paramref name="unknownTypeNamespace" /> fornecido.</param>
      <param name="typeArguments" vsli:raw="The type arguments for a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a generic type. Can be (and often is) &lt;see langword=&quot;null&quot; /&gt;, which indicates that the represented type is not a generic type.">Os argumentos de tipo para um <see cref="T:System.Xaml.XamlType" /> que representa um tipo genérico. Pode ser (e geralmente é) <see langword="null" />, o que indica que o tipo representado não é um tipo genérico.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers or XAML writers.">Contexto do esquema XAML para leitores de XAML ou gravadores de XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;unknownTypeNamespace&quot; /&gt;, &lt;paramref name=&quot;unknownTypeName&quot; /&gt;, or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Um ou mais dentre <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on the underlying CLR type information.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlType" /> com base nas informações do tipo de CLR subjacente.</summary>
      <param name="underlyingType" vsli:raw="The underlying CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; for the XAML type to construct.">O CLR subjacente <see cref="T:System.Type" /> para o tipo XAML a ser construído.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers or XAML writers.">Contexto do esquema XAML para leitores de XAML ou gravadores de XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;underlyingType&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Um ou mais <paramref name="underlyingType" /> ou <paramref name="schemaContext" /> são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on underlying type information and a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlType" /> com base nas informações de tipo subjacentes e uma implementação <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="underlyingType" vsli:raw="The underlying type for the XAML type to construct.">O tipo subjacente para o tipo XAML a ser construído.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for the XAML reader.">Contexto do esquema XML para o leitor de XAML.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that handles run-time reflection calls against the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">A implementação de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que manipula a reflexão de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;underlyingType&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Um ou mais <paramref name="underlyingType" /> ou <paramref name="schemaContext" /> são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
      <summary vsli:raw="Returns a value that indicates whether an instance of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; has the specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; in its list of assignable types.">Retorna um valor que indica se uma instância deste <see cref="T:System.Xaml.XamlType" /> tem o <see cref="T:System.Xaml.XamlType" /> especificado em sua lista de tipos atribuíveis.</summary>
      <param name="xamlType" vsli:raw="The type to check against the current &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; .">O tipo para verificar em relação ao <see cref="T:System.Xaml.XamlType" /> atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;xamlType&quot; /&gt; is in the assignable types list; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="xamlType" /> está na lista de tipos atribuíveis; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equal to another object.">Indica se o objeto atual é igual a outro objeto.</summary>
      <param name="obj" vsli:raw="The object to compare with this object.">O objeto a ser comparado com este objeto.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;obj&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="obj" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)">
      <summary vsli:raw="Indicates whether the current object is equal to another object of the same type.">Indica se o objeto atual é igual a outro objeto do mesmo tipo.</summary>
      <param name="other" vsli:raw="An object to compare with this object.">Um objeto para comparação com esse objeto.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;other&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="other" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
      <summary vsli:raw="Returns the XAML member that is aliased to a XAML directive by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna o membro XAML que é transformado em alias para uma diretiva XAML por esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive" vsli:raw="The directive for which to find the aliased member.">A diretiva para a qual localizar o membro com alias.</param>
      <returns vsli:raw="The aliased member, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">O membro transformado em alias, se encontrado; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllAttachableMembers">
      <summary vsli:raw="Returns a collection that contains all the attachable properties that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna uma coleção que contém todas as propriedades anexáveis que são expostas por esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A collection that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Uma coleção que contém zero ou mais valores <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllMembers">
      <summary vsli:raw="Returns a collection that contains all the members that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna uma coleção que contém todos os membros que são expostos por esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A collection that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Uma coleção que contém zero ou mais valores <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; representing a specific named attachable member of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna um <see cref="T:System.Xaml.XamlMember" /> que representa um membro anexável nomeado específico deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the attachable member to get, in &lt;c&gt;ownerTypeName.MemberName&lt;/c&gt; form.">O nome do membro anexável a ser obtido, no formato <c>ownerTypeName.MemberName</c>.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object for the requested attachable member; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if no attachable member by that name exists.">Um objeto <see cref="T:System.Xaml.XamlMember" /> para o membro anexável solicitado; caso contrário, <see langword="null" />, se não existir nenhum membro anexável com esse nome.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Retorna o código hash deste objeto.</summary>
      <returns vsli:raw="An integer hash code.">Um código hash inteiro.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named member from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna um <see cref="T:System.Xaml.XamlMember" /> para um membro nomeado específico deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the member to get (as a string).">O nome do membro a ser obtido (como uma cadeia de caracteres).</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the member, if such a member was found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">As informações <see cref="T:System.Xaml.XamlMember" /> para o membro, se esse membro for encontrado; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
      <summary vsli:raw="For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Para tipos de extensão de marcação, retorna os tipos dos parâmetros posicionais que são compatíveis no uso de extensão de marcação específica para este <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount" vsli:raw="The count (arity) of the particular syntax or constructor mode that you want information about.">A contagem (aridade) do modo de sintaxe ou de construtor específico do qual você deseja obter informações.</param>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values, where each &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is the type for that position in the syntax. You must specify the types in the same order when you supply markup input for the markup extension.">Uma lista de valores <see cref="T:System.Xaml.XamlType" />, em que cada <see cref="T:System.Xaml.XamlType" /> é o tipo da posição na sintaxe. Você deve especificar os tipos na mesma ordem em que fornecer a entrada de marcação para a extensão de marcação.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of string identifiers for XAML namespaces that the type is included in.">Retorna uma lista de identificadores de cadeia de caracteres para namespaces de XAML nos quais o tipo está incluído.</summary>
      <returns vsli:raw="A list of string values, where each string is the URI identifier for a XAML namespace.">Uma lista de valores de cadeia de caracteres, em que cada cadeia de caracteres é o identificador de URI para um namespace de XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
      <summary vsli:raw="Returns the XAML member that is aliased to a XAML directive by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna o membro XAML que é transformado em alias para uma diretiva XAML por esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive" vsli:raw="The directive for which to find the aliased member.">A diretiva para a qual localizar o membro com alias.</param>
      <returns vsli:raw="The aliased member, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">O membro transformado em alias, se encontrado; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllAttachableMembers">
      <summary vsli:raw="Returns an enumerable set that contains all attachable properties that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna um conjunto enumerável que contém todas as propriedades anexáveis que são expostas por esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="An enumerable set that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Um conjunto enumerável que contém zero ou mais valores <see cref="T:System.Xaml.XamlMember" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllMembers">
      <summary vsli:raw="Returns an enumerable set that contains all the members that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna um conjunto enumerável que contém todos os membros que são expostos por esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="An enumerable set that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Um conjunto enumerável que contém zero ou mais valores <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllowedContentTypes">
      <summary vsli:raw="Returns a list of the types that are usable as the &lt;see cref=&quot;P:System.Xaml.XamlType.ContentProperty&quot; /&gt; value for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna uma lista dos tipos que podem ser usados como o valor <see cref="P:System.Xaml.XamlType.ContentProperty" /> para este <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A list of possible content types.">Uma lista de possíveis tipos de conteúdo.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named attachable from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna um <see cref="T:System.Xaml.XamlMember" /> para um anexável nomeado específico deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the attachable member to get, in &lt;c&gt;ownerTypeName.MemberName&lt;/c&gt; form.">O nome do membro anexável a ser obtido, no formato <c>ownerTypeName.MemberName</c>.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object for the requested attachable member; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if no attachable member by that name exists.">Um objeto <see cref="T:System.Xaml.XamlMember" /> para o membro anexável solicitado; caso contrário, <see langword="null" />, se não existir nenhum membro anexável com esse nome.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupBaseType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; and schema context.">Retorna o <see cref="T:System.Xaml.XamlType" /> para o tipo base imediato desse tipo de XAML. A determinação desse valor é baseada no tipo subjacente deste <see cref="T:System.Xaml.XamlType" /> e no contexto do esquema.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type.">O <see cref="T:System.Xaml.XamlType" /> para o tipo base imediato desse tipo de XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCollectionKind">
      <summary vsli:raw="Returns a value of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlCollectionKind&quot; /&gt; enumeration that declares which specific collection type this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; uses.">Retorna um valor da enumeração <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> que declara qual tipo de coleção específica esse <see cref="T:System.Xaml.XamlType" /> usa.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlCollectionKind&quot; /&gt; enumeration.">Um valor da enumeração <see cref="T:System.Xaml.Schema.XamlCollectionKind" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; must have arguments (generic constraints through &lt;see langword=&quot;x:TypeArguments&quot; /&gt;, initialization text, or other XAML techniques) to construct a valid instance of the type.">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> deve ter argumentos (restrições genéricas por meio de <see langword="x:TypeArguments" />, de texto de inicialização ou de outras técnicas de XAML) para construir uma instância válida do tipo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if construction of an instance requires some argument value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a construção de uma instância exige algum valor de argumento; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentProperty">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna as informações de <see cref="T:System.Xaml.XamlMember" /> para a propriedade de conteúdo deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt;.">As informações de <see cref="T:System.Xaml.XamlMember" /> para a propriedade de conteúdo deste <see cref="T:System.Xaml.XamlType" />. Pode ser <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentWrappers">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that represent the content wrappers for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtém uma lista de valores <see cref="T:System.Xaml.XamlType" /> que representam os wrappers de conteúdo para este <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that represent the content wrappers for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Uma lista de valores <see cref="T:System.Xaml.XamlType" /> que representam os wrappers de conteúdo para este <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
      <summary vsli:raw="When implemented in a derived class, returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Quando implementado em uma classe derivada, retorna uma implementação <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Uma implementação <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML-declared objects.">Retorna um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado para o carregamento adiado de objetos declarados em XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.Xaml.XamlDeferringLoader" /> sobre o genérico.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupInvoker">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que é associado a esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">As informações <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> para este <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsAmbient">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type, as per the XAML definition.">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo de ambiente, de acordo com a definição de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo de ambiente; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsConstructible">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type, as per the XAML definition.">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo construível, de acordo com a definição de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo construível; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsMarkupExtension">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension.">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa uma extensão de marcação.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa uma extensão de marcação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNameScope">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope, as per the XAML definition.">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um namescope de XAML, de acordo com a definição de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um namescope de XAML; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNullable">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type, as per the XAML definition.">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que permite valor nulo, de acordo com a definição de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que permite valor nulo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsPublic">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type in the relevant type system.">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo público no sistema de tipos relevante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo público; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsUnknown">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that cannot be resolved in the underlying type system.">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que não pode ser resolvido no sistema de tipos subjacente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nonresolvable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo não resolvido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection, as per the XML definition.">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa uma coleção significativa de espaço em branco, de acordo com a definição de XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a white-space significant collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa uma coleção significativa de espaço em branco; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsXData">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents XML &lt;see langword=&quot;XDATA&quot; /&gt;, as per the XAML definition.">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um <see langword="XDATA" /> XML, de acordo com a definição de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents &lt;see langword=&quot;XDATA&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupItemType">
      <summary vsli:raw="Returns a value that provides the type information for the &lt;see langword=&quot;Items&quot; /&gt; property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna um valor que fornece as informações de tipo para a propriedade <see langword="Items" /> deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the items in the collection; otherwise, &lt;see langword=&quot;null&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a collection.">Um objeto <see cref="T:System.Xaml.XamlType" /> para o tipo dos itens na coleção; caso contrário, <see langword="null" /> se este <see cref="T:System.Xaml.XamlType" /> não representa uma coleção.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupKeyType">
      <summary vsli:raw="Returns a value that provides the type information for the key property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary.">Retorna um valor que fornece as informações de tipo para a propriedade de chave deste <see cref="T:System.Xaml.XamlType" />, se o <see cref="T:System.Xaml.XamlType" /> representa um dicionário.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the key for dictionary usage, or &lt;see langword=&quot;null&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a dictionary.">Um objeto <see cref="T:System.Xaml.XamlType" /> para o tipo da chave para uso de dicionário ou <see langword="null" /> se este <see cref="T:System.Xaml.XamlType" /> não representa um dicionário,</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
      <summary vsli:raw="Returns a value that provides the type information for the returned &lt;see langword=&quot;ProvideValue&quot; /&gt; of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if it represents a markup extension.">Retorna um valor que fornece as informações de tipo para o <see langword="ProvideValue" /> retornado deste <see cref="T:System.Xaml.XamlType" />, se ele representa uma extensão de marcação.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the return type for markup extension usage; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a markup extension.">Um objeto <see cref="T:System.Xaml.XamlType" /> para o tipo de retorno para o uso da extensão de marcação; caso contrário, <see langword="null" />, se este <see cref="T:System.Xaml.XamlType" /> não representa uma extensão de marcação.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named member from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna o <see cref="T:System.Xaml.XamlMember" /> para um membro nomeado específico deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the member to get (as a string).">O nome do membro a ser obtido (como uma cadeia de caracteres).</param>
      <param name="skipReadOnlyCheck" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return a member even if that member has a &lt;see langword=&quot;true&quot; /&gt; value for &lt;see cref=&quot;P:System.Xaml.XamlMember.IsReadOnly&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to not return a &lt;see cref=&quot;P:System.Xaml.XamlMember.IsReadOnly&quot; /&gt; member. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para retornar um membro, mesmo se esse membro tiver um valor <see langword="true" /> para <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> para não retornar um membro <see cref="P:System.Xaml.XamlMember.IsReadOnly" />. O padrão é <see langword="false" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the member, if a member was found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">As informações <see cref="T:System.Xaml.XamlMember" /> para o membro, se um membro for encontrado; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
      <summary vsli:raw="For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Para tipos de extensão de marcação, retorna os tipos dos parâmetros posicionais que são compatíveis no uso de extensão de marcação específica para este <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount" vsli:raw="The count (arity) of the particular syntax or constructor mode that you want information about.">A contagem (aridade) do modo de sintaxe ou de construtor específico do qual você deseja obter informações.</param>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values where each such &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is the type for that position in the syntax. You must specify those types in the same order when supplying markup input for the markup extension.">Uma lista de valores <see cref="T:System.Xaml.XamlType" />, em que cada um desses <see cref="T:System.Xaml.XamlType" /> é o tipo da posição na sintaxe. Você deve especificar esses tipos na mesma ordem ao fornecer a entrada de marcação para a extensão de marcação.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
      <summary vsli:raw="Returns a handler callback to use for the set operations of markup extensions.">Retorna um retorno de chamada do manipulador a ser usado para as operações de conjunto das extensões de marcação.</summary>
      <returns vsli:raw="A handler callback to use for the set operations of markup extensions.">Um retorno de chamada do manipulador a ser usado para as operações de conjunto das extensões de marcação.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
      <summary vsli:raw="Returns a handler to use for type converter setting cases.">Retorna um manipulador a ser usado para casos configuração de conversor de tipo.</summary>
      <returns vsli:raw="A handler to use for type converter setting cases.">Um manipulador a ser usado para casos configuração de conversor de tipo.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; should be serialized using a mode that  trims surrounding whitespace.">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> deve ser serializado usando um modo que corta os espaços em branco ao redor.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; should be serialized in a mode that trims surrounding whitespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> deve ser serializado em um modo que corta os espaços em branco ao redor; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTypeConverter">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint, which represents type-conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.ComponentModel.TypeConverter" />, que representa o comportamento de conversão de tipo para valores desse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type-conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.ComponentModel.TypeConverter" /> que representa o comportamento de conversão de tipo para valores desse <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUnderlyingType">
      <summary vsli:raw="Returns the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna o <see cref="T:System.Type" /> do CLR que é subjacente a esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">O <see cref="T:System.Type" /> do CLR que é subjacente a esse <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization.">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> é compilado de cima para baixo durante a inicialização do XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> é compilado de cima para baixo durante a inicialização do XAML; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupValueSerializer">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint, which represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.Windows.Markup.ValueSerializer" />, que representa o comportamento de serialização de valor para valores desse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa o comportamento de serialização de valor para valores desse <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; objects have the same value.">Determina se dois objetos <see cref="T:System.Xaml.XamlType" /> especificados têm o mesmo valor.</summary>
      <param name="xamlType1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <param name="xamlType2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlType1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;xamlType2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor de <paramref name="xamlType1" /> for o mesmo que o valor de <paramref name="xamlType2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; objects have different values.">Determina se dois objetos <see cref="T:System.Xaml.XamlType" /> especificados têm valores diferentes.</summary>
      <param name="xamlType1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <param name="xamlType2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlType1&quot; /&gt; is different from the value of &lt;paramref name=&quot;xamlType2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor de <paramref name="xamlType1" /> for diferente do valor de <paramref name="xamlType2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retorna uma representação de cadeia de caracteres desse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Uma representação da cadeia de caracteres deste <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.AllowedContentTypes">
      <summary vsli:raw="Gets a read-only collection of the types that are usable as the &lt;see cref=&quot;P:System.Xaml.XamlType.ContentProperty&quot; /&gt; value for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtém uma coleção somente leitura dos tipos que são utilizáveis como o valor <see cref="P:System.Xaml.XamlType.ContentProperty" /> para esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A read-only collection of possible content types.">Uma coleção somente leitura de possíveis tipos de conteúdo.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; and schema context.">Obtém o <see cref="T:System.Xaml.XamlType" /> para o tipo base imediato desse tipo de XAML. A determinação desse valor é baseada no tipo subjacente deste <see cref="T:System.Xaml.XamlType" /> e no contexto do esquema.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type.">O <see cref="T:System.Xaml.XamlType" /> para o tipo base imediato desse tipo de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ConstructionRequiresArguments">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; must have arguments (generic constraints through &lt;see langword=&quot;x:TypeArguments&quot; /&gt;, initialization text, or other XAML techniques) to construct a valid instance of the type.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> deve ter argumentos (restrições genéricas por meio de <see langword="x:TypeArguments" />, de texto de inicialização ou de outras técnicas de XAML) para construir uma instância válida do tipo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if construction of an instance requires some argument value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a construção de uma instância exige algum valor de argumento; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtém as informações de <see cref="T:System.Xaml.XamlMember" /> para a propriedade de conteúdo deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if no content property exists.">As informações de <see cref="T:System.Xaml.XamlMember" /> para a propriedade de conteúdo deste <see cref="T:System.Xaml.XamlType" />. Pode ser <see langword="null" /> se não existir nenhuma propriedade de conteúdo.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentWrappers">
      <summary vsli:raw="Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed &lt;see langword=&quot;Collection&amp;lt;T&amp;gt;&quot; /&gt;.">Obtém os tipos que são usados para encapsular conteúdo para uma propriedade de conteúdo quando não for uma correspondência de tipo estrito, como cadeias de caracteres em uma <see langword="Collection&lt;T&gt;" /> fortemente tipada.</summary>
      <returns vsli:raw="A read-only collection of possible content wrapper types; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Uma coleção somente leitura de tipos de wrapper de conteúdo possíveis; caso contrário, <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.DeferringLoader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that represents the deferred loading conversion behavior for this type.">Obtém o <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que representa o comportamento de conversão de carregamento adiado para esse tipo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint that represents the deferred loading behavior for this type.">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /><see cref="T:System.Xaml.XamlDeferringLoader" /> restrição with que representa o comportamento de carregamento adiado para esse tipo.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Invoker">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtém a implementação de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que está associada a esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">A <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementação associada a isso <see cref="T:System.Xaml.XamlType" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsAmbient">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type, as per the XAML definition.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo de ambiente, de acordo com a definição de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo de ambiente; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsArray">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an array.">Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlType" /> representa uma matriz.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an array; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> representar uma matriz; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsCollection">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a collection.">Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlType" /> representa uma coleção.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> representar uma coleção; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsConstructible">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type, as per the XAML definition.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo construível, de acordo com a definição de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo construível; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsDictionary">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary, as per the XAML definition.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um dicionário, de acordo com a definição de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> representar um dicionário; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsGeneric">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic type.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo genérico.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> representar um tipo genérico; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsMarkupExtension">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa uma extensão de marcação.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa uma extensão de marcação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameScope">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope, as per the XAML definition.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um namescope de XAML, de acordo com a definição de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um namescope de XAML; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameValid">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is initialized by using a valid &lt;see langword=&quot;xamlName&quot; /&gt; string as its &lt;see cref=&quot;P:System.Xaml.XamlType.Name&quot; /&gt;.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> é inicializado usando uma cadeia de caracteres <see langword="xamlName" /> válida como seu <see cref="P:System.Xaml.XamlType.Name" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is initialized by using a valid &lt;see langword=&quot;xamlName&quot; /&gt; string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> for inicializado usando uma <see langword="xamlName" /> cadeia de caracteres válida; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNullable">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type, as per the XAML definition.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que permite valor nulo, de acordo com a definição de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que permite valor nulo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsPublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type in the relevant type system.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo público no sistema de tipos relevante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo público; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUnknown">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that cannot be resolved in the underlying type system.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que não pode ser resolvido no sistema de tipos subjacente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an unresolvable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> representar um tipo não resolvido; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUsableDuringInitialization">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> é compilado de cima para baixo durante a inicialização do XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> é compilado de cima para baixo durante a inicialização do XAML; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection, as per the XML definition.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa uma coleção significativa de espaço em branco, de acordo com a definição de XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> representar uma coleção de espaço em branco significativa; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsXData">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents XML &lt;see langword=&quot;XDATA&quot; /&gt;, as per the XAML definition.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um <see langword="XDATA" /> XML, de acordo com a definição de XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents &lt;see langword=&quot;XDATA&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ItemType">
      <summary vsli:raw="Gets a value that provides the type information for the &lt;see langword=&quot;Items&quot; /&gt; property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtém um valor que fornece as informações de tipo para a propriedade <see langword="Items" /> deste <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the items in the collection; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a collection.">Um <see cref="T:System.Xaml.XamlType" /> objeto para o tipo de itens na coleção; caso contrário, <see langword="null" /> , se isso <see cref="T:System.Xaml.XamlType" /> não representar uma coleção.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.KeyType">
      <summary vsli:raw="Gets a value that provides the type information for the key property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary.">Obtém um valor que fornece as informações de tipo para a propriedade de chave deste <see cref="T:System.Xaml.XamlType" />, se o <see cref="T:System.Xaml.XamlType" /> representa um dicionário.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the key for dictionary usage, otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a dictionary.">Um <see cref="T:System.Xaml.XamlType" /> objeto para o tipo de chave para uso de dicionário, caso contrário, <see langword="null" /> se isso <see cref="T:System.Xaml.XamlType" /> não representar um dicionário.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.MarkupExtensionReturnType">
      <summary vsli:raw="Gets a value that provides the type information for the returned &lt;see langword=&quot;ProvideValue&quot; /&gt; of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if it represents a markup extension.">Obtém um valor que fornece as informações de tipo para o <see langword="ProvideValue" /> retornado deste <see cref="T:System.Xaml.XamlType" />, se ele representa uma extensão de marcação.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the return type for markup extension usage; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a markup extension.">Um objeto <see cref="T:System.Xaml.XamlType" /> para o tipo de retorno para o uso da extensão de marcação; caso contrário, <see langword="null" />, se este <see cref="T:System.Xaml.XamlType" /> não representa uma extensão de marcação.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Name">
      <summary vsli:raw="Gets the string name of the type that this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents.">Obtém o nome da cadeia de caracteres do tipo que esse <see cref="T:System.Xaml.XamlType" /> representa.</summary>
      <returns vsli:raw="The string name of this XAML type.">O nome da cadeia de caracteres deste tipo XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.PreferredXamlNamespace">
      <summary vsli:raw="Gets the single XAML namespace that is the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtém o único namespace de XAML que é o namespace de XAML primário para este <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The identifier, as a string, of the primary XAML namespace for this XAML type.">O identificador, como uma cadeia de caracteres, do namespace XAML primário para esse tipo XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.SchemaContext">
      <summary vsli:raw="Gets the active &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; for processing this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtém o <see cref="T:System.Xaml.XamlSchemaContext" /> ativo para o processamento desse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The active &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; for processing this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">O ativo <see cref="T:System.Xaml.XamlSchemaContext" /> para processar isso <see cref="T:System.Xaml.XamlType" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> tem o comportamento de manipulação de espaço em branco para serialização que corta o espaço em branco ao redor em seu conteúdo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that uses whitespace trimming; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se isso <see cref="T:System.Xaml.XamlType" /> representar um tipo que usa corte de espaço em branco; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeArguments">
      <summary vsli:raw="Gets a list of type arguments for cases where this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic.">Obtém uma lista de argumentos de tipo para casos em que esse <see cref="T:System.Xaml.XamlType" /> representa um genérico.</summary>
      <returns vsli:raw="A list of type argument types; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a generic.">Uma lista de tipos de argumento de tipo; caso contrário, <see langword="null" /> , se isso <see cref="T:System.Xaml.XamlType" /> não representar um genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeConverter">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtém um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.ComponentModel.TypeConverter" /> que representa o comportamento de conversão de tipo para valores desse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Uma <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /><see cref="T:System.ComponentModel.TypeConverter" /> restrição with que representa o comportamento de conversão de tipo para valores deste <see cref="T:System.Xaml.XamlType" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.UnderlyingType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtém o <see cref="T:System.Type" /> do CLR que é subjacente a esse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">O CLR <see cref="T:System.Type" /> que se baseia <see cref="T:System.Xaml.XamlType" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ValueSerializer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtém um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa o comportamento de serialização de valor para valores desse <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa o comportamento de serialização de valor para valores desse <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlWriter">
      <summary vsli:raw="Provides default implementation and base class definitions for a XAML writer. This is not a working default XAML writer; you must either derive from &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; and implement its abstract members, or use an existing &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; derived class.">Fornece definições de classe base e implementação padrão para um gravador XAML. Esse não é um gravador XAML padrão de trabalho, você deve derivar de <see cref="T:System.Xaml.XamlWriter" /> e implementar seus membros abstratos ou usar uma classe derivada <see cref="T:System.Xaml.XamlWriter" /> existente.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Close">
      <summary vsli:raw="Closes the XAML writer object.">Fecha o objeto do gravador de XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; and optionally releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.Xaml.XamlWriter" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para liberar os recursos gerenciados; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.System#IDisposable#Dispose">
      <summary vsli:raw="See &lt;see cref=&quot;M:System.IDisposable.Dispose&quot; /&gt;.">Consulte <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndMember">
      <summary vsli:raw="When implemented in a derived class, produces the representation of an end member node.">Quando implementado em uma classe derivada, gera a representação de um nó de membro final.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndObject">
      <summary vsli:raw="When implemented in a derived class, produces the representation of an end object node.">Quando implementada em uma classe derivada, gera a representação de um nó de objeto final.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteGetObject">
      <summary vsli:raw="When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.">Quando implementada em uma classe derivada, gera um objeto para casos em que o objeto é um valor padrão ou implícito da propriedade que sendo definida, em vez de ser especificado como um valor de objeto discreto no conjunto de nós XAML de entrada.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="When implemented in a derived class, writes a XAML namespace declaration node.">Quando implementado em uma classe derivada, grava um nó de declaração de namespace de XAML.</summary>
      <param name="namespaceDeclaration" vsli:raw="The namespace declaration to write.">A declaração de namespace a ser gravada.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
      <summary vsli:raw="Performs switching based on node type from the XAML reader (&lt;see cref=&quot;P:System.Xaml.XamlReader.NodeType&quot; /&gt;) and calls the relevant &lt;see langword=&quot;Write&quot; /&gt; method for the writer implementation.">Executa a comutação com base no tipo de nó do leitor de XAML (<see cref="P:System.Xaml.XamlReader.NodeType" />) e chama o método <see langword="Write" /> relevante para a implementação de gravador.</summary>
      <param name="reader" vsli:raw="The reader to use for node determination.">O leitor a ser usado para a determinação de nó.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="The default implementation encountered a &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; that is not in the default enumeration.">A implementação padrão encontrou um <see cref="T:System.Xaml.XamlNodeType" /> que não está na enumeração padrão.</exception>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="When implemented in a derived class, writes the representation of a start member node.">Quando implementado em uma classe derivada, grava a representação de um nó de membro inicial.</summary>
      <param name="xamlMember" vsli:raw="The member node to write.">O nó de membro a ser gravado.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="When implemented in a derived class, writes the representation of a start object node.">Quando implementado em uma classe derivada, grava a representação de um nó de objeto inicial.</summary>
      <param name="type" vsli:raw="The XAML type of the object to write.">O tipo XAML do objeto a ser gravado.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
      <summary vsli:raw="When implemented in a derived class, writes a value node.">Quando implementado em uma classe derivada, grava um nó de valor.</summary>
      <param name="value" vsli:raw="The value to write.">O valor a ser gravado.</param>
    </member>
    <member name="P:System.Xaml.XamlWriter.IsDisposed">
      <summary vsli:raw="Gets whether &lt;see cref=&quot;M:System.Xaml.XamlWriter.Dispose(System.Boolean)&quot; /&gt; has been called.">Obtém se <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> foi chamado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.XamlWriter.Dispose(System.Boolean)&quot; /&gt; has been called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se foi <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> chamado; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlWriter.SchemaContext">
      <summary vsli:raw="When implemented in a derived class, gets the active XAML schema context.">Quando implementado em uma classe derivada, obtém o contexto do esquema XAML ativo.</summary>
      <returns vsli:raw="The active XAML schema context.">O contexto do esquema XAML ativo.</returns>
    </member>
    <member name="T:System.Xaml.XamlWriterSettings">
      <summary vsli:raw="Provides initialization settings for a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; implementation.">Fornece configurações de inicialização para uma implementação de <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor(System.Xaml.XamlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; class using another existing settings instance.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlWriterSettings" /> usando outra instância de configurações existente.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; object.">Um objeto <see cref="T:System.Xaml.XamlWriterSettings" /> existente.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlReader">
      <summary vsli:raw="Processes XAML markup from XML files by using an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; intermediary, and produces a XAML node stream.">Processa a marcação XAML de arquivos XML usando um intermediário do <see cref="T:System.Xml.XmlReader" /> e produz um fluxo de nó XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base em um fluxo.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">O fluxo inicial a ser carregado no leitor.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, and using a supplied XAML schema context.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" /> com base no fluxo e usando um contexto de esquema XAML fornecido.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">O fluxo inicial a ser carregado no leitor.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">O contexto do esquema XAML para processamento de XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, with a supplied XAML schema context and XAML-specific settings.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base em um fluxo, com um contexto de esquema XAML e configurações específicas de XAML fornecidos.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">O fluxo inicial a ser carregado no leitor.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">O contexto do esquema XAML para processamento de XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">As configurações específicas do leitor.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, with XAML-specific settings.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base em um fluxo, com configurações específicas de XAML.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">O fluxo inicial a ser carregado no leitor.</param>
      <param name="settings" vsli:raw="The specific reader settings.">As configurações específicas do leitor.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base em um <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">A <see cref="T:System.IO.TextReader" /> a ser usada para inicialização.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, with a supplied schema context and XAML-specific settings.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base em um <see cref="T:System.IO.TextReader" />, com um contexto de esquema e configurações específicas de XAML fornecidos.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">A <see cref="T:System.IO.TextReader" /> a ser usada para inicialização.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">O contexto do esquema XAML para processamento de XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and using a supplied schema context and XAML-specific settings.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base em um <see cref="T:System.IO.TextReader" />, usando um contexto de esquema e configurações específicas de XAML fornecidos.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">A <see cref="T:System.IO.TextReader" /> a ser usada para inicialização.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">O contexto do esquema XAML para processamento de XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">As configurações específicas do leitor.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and using XAML-specific settings.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base em um <see cref="T:System.IO.TextReader" />, usando configurações específicas de XAML.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">A <see cref="T:System.IO.TextReader" /> a ser usada para inicialização.</param>
      <param name="settings" vsli:raw="The specific reader settings.">As configurações específicas do leitor.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a file name of a file to load into a default XML reader.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base no nome do arquivo de um arquivo a ser carregado em um leitor de XML padrão.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">O nome do arquivo XML a ser carregado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, with a supplied XAML schema context.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base no nome do arquivo de um arquivo a ser carregado em um leitor de XML padrão, com um contexto de esquema de XAML fornecido.</summary>
      <param name="fileName" vsli:raw="The name of the file to load.">O nome do arquivo a ser carregado.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">O contexto do esquema XAML para processamento de XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, and using a supplied XAML schema context and XAML-specific reader settings.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base no nome de arquivo de um arquivo a ser carregado em um leitor de XML padrão e usando um contexto de esquema XAML e configurações do leitor específicas de XAML.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">O nome do arquivo XML a ser carregado.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">O contexto do esquema XAML para processamento de XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">As configurações específicas do leitor.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, and using XAML-specific reader settings.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" />, com base no nome de arquivo de um arquivo a ser carregado em um leitor de XML padrão e usando configurações do leitor específicas de XAML.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">O nome do arquivo XML a ser carregado.</param>
      <param name="settings" vsli:raw="The specific reader settings.">As configurações específicas do leitor.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" /> usando o <see cref="T:System.Xml.XmlReader" /> fornecido.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">O <see cref="T:System.Xml.XmlReader" /> a ser usado como o processador XML intermediário.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and schema context.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" /> usando o <see cref="T:System.Xml.XmlReader" /> e o contexto de esquema fornecidos.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">O <see cref="T:System.Xml.XmlReader" /> a ser usado como o processador XML intermediário.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">O contexto do esquema XAML para processamento de XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, schema context, and reader settings.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" /> usando o <see cref="T:System.Xml.XmlReader" />, o contexto de esquema e as configurações do leitor fornecidos.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">O <see cref="T:System.Xml.XmlReader" /> a ser usado como o processador XML intermediário.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">O contexto do esquema XAML para processamento de XAML.</param>
      <param name="settings" vsli:raw="The specific XAML reader settings.">As configurações específicas do leitor de XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and reader settings.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReader" /> usando o <see cref="T:System.Xml.XmlReader" /> e as configurações do leitor fornecidos.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">O <see cref="T:System.Xml.XmlReader" /> a ser usado como o processador XML intermediário.</param>
      <param name="settings" vsli:raw="The specific XAML reader settings.">As configurações específicas do leitor de XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.Read">
      <summary vsli:raw="Provides the next XAML node from the loaded source, if a XAML node is available.">Fornece o próximo nó XAML da origem carregada se um nó XAML está disponível.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um nó estiver disponível, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Obtém um valor que especifica se as informações da linha estão disponíveis.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se as informações de linha estiverem disponíveis; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position in the XAML node stream is at end-of-file.">Obtém um valor que informa se a posição do leitor no fluxo do nó XAML está no fim do arquivo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at the conceptual end-of-file in the node stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a posição estiver no final conceitual do arquivo no fluxo do nó; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Obtém o número de linha a ser relatado.</summary>
      <returns vsli:raw="The line number to report.">O número de linha a ser relatado.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Obtém a posição da linha a ser relatada.</summary>
      <returns vsli:raw="The line position to report.">A posição da linha a ser relatada.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Member">
      <summary vsli:raw="Gets the current member at the reader position, if the current reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Obterá o membro atual na posição do leitor, se a posição do leitor atual estiver em um <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a member.">O membro atual; ou <see langword="null" /> , se a posição atual do leitor não estiver em um membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace from the current node.">Obtém o namespace de XAML do nó atual.</summary>
      <returns vsli:raw="The XAML namespace from the current node, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">O namespace XAML do nó atual, se estiver disponível; caso contrário, <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtém o tipo do nó atual.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Um valor da enumeração <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema information for the information set.">Obtém um objeto que fornece informações de esquema para o conjunto de informações.</summary>
      <returns vsli:raw="An object that provides schema information for the information set.">Um objeto que fornece informações de esquema para o conjunto de informações.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Obtém o <see cref="T:System.Xaml.XamlType" /> do nó atual.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on an object.">O <see cref="T:System.Xaml.XamlType" /> do nó atual; ou <see langword="null" /> , se a posição não estiver em um objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Value">
      <summary vsli:raw="Gets the value of the current node.">Obtém o valor do nó atual.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">O valor do nó atual; ou <see langword="null" /> , se a posição não estiver em um <see cref="F:System.Xaml.XamlNodeType.Value" /> tipo de nó.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; XAML reader implementation.">Especifica as regras de processamento ou as configurações de opção para a implementação do leitor de XAML <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor(System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; class by copying settings from an existing &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; object.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlReaderSettings" /> copiando as configurações de um objeto <see cref="T:System.Xaml.XamlXmlReaderSettings" /> existente.</summary>
      <param name="settings" vsli:raw="The existing &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; object to copy.">O objeto <see cref="T:System.Xaml.XamlXmlReaderSettings" /> existente a ser copiado.</param>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.CloseInput">
      <summary vsli:raw="Gets or sets a value that indicates whether the underlying stream or text reader should be closed when the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; is closed.">Obtém ou define um valor que indica se o leitor de texto ou o fluxo subjacente deverá ser fechado quando o <see cref="T:System.Xaml.XamlXmlReader" /> for fechado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the underlying stream or reader should be closed when the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se o fluxo ou leitor subjacente deve ser fechado quando o <see cref="T:System.Xaml.XamlXmlReader" /> é fechado; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.SkipXmlCompatibilityProcessing">
      <summary vsli:raw="Gets or sets a value that determines whether the reader should differ from the default &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; behavior of how markup compatibility content is processed.">Obtém ou define um valor que determina se o leitor deve diferir do comportamento <see cref="T:System.Xaml.XamlXmlReader" /> padrão de como o conteúdo de compatibilidade de marcação é processado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initiating reader is directly used, which means that XML compatibility markup is processed as part of the main stream and compatibility is not considered. &lt;see langword=&quot;false&quot; /&gt; if the default behavior is used, which processes XML compatibility separately. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se o leitor de inicialização for usado diretamente, o que significa que a marcação de compatibilidade de XML é processada como parte do fluxo principal e a compatibilidade não é considerada. <see langword="false" /> Se o comportamento padrão for usado, o que processa a compatibilidade XML separadamente. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlLang">
      <summary vsli:raw="Gets or sets the language setting value that the reader may promote to writers that write &lt;see langword=&quot;xml:lang&quot; /&gt; attributes in nodes.">Obtém ou define o valor de configuração de idioma que o leitor pode promover para gravadores que gravam atributos <see langword="xml:lang" /> em nós.</summary>
      <returns vsli:raw="The string to use for possible &lt;see langword=&quot;xml:lang&quot; /&gt; output that is based on the reader.">A cadeia de caracteres a ser usada para <see langword="xml:lang" /> a saída possível com base no leitor.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlSpacePreserve">
      <summary vsli:raw="Gets or sets a value that determines whether the XAML reader instructs any XAML writers to write &lt;see langword=&quot;xml:space&quot; /&gt; attributes in nodes. If that behavior is desired, this information is passed through shared XAML schema context.">Obtém ou define um valor que determina se o leitor de XAML instrui os gravadores de XAML a gravarem atributos <see langword="xml:space" /> em nós. Se esse comportamento for o desejado, essas informações serão passadas por meio do contexto de esquema XAML compartilhado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers that are processing the XAML node stream can write &lt;c&gt;xml:space=&quot;preserve&quot;&lt;/c&gt; in output; &lt;see langword=&quot;false&quot; /&gt; if &lt;see langword=&quot;xml:space&quot; /&gt; attributes cannot be written in nodes.">
        <see langword="true" /> Se os gravadores que estiverem processando o fluxo do nó XAML puderem gravar <c>XML: Space = "preserve"</c> na saída; <see langword="false" /> se <see langword="xml:space" /> não for possível gravar atributos em nós.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlWriter">
      <summary vsli:raw="Uses a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; support class to write a XAML node stream to a text or markup serialized form.">Usa uma classe de suporte <see cref="T:System.IO.TextWriter" /> ou <see cref="T:System.Xml.XmlWriter" /> para gravar um fluxo do nó XAML em um formulário serializado de texto ou marcação.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a stream.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriter" /> de um fluxo.</summary>
      <param name="stream" vsli:raw="The stream to write.">O fluxo para gravação.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">O contexto do esquema XAML para o gravador de XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a stream using a writer settings object.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriter" /> de um fluxo usando um objeto de configurações do gravador.</summary>
      <param name="stream" vsli:raw="The stream to write.">O fluxo para gravação.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">O contexto do esquema XAML para o gravador de XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Uma instância de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, que geralmente tem configurações não padrão específicas.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="stream" /> ou <paramref name="schemaContext" /> é <see langword="null" /></exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; basis.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriter" /> de uma base <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">O <see cref="T:System.IO.TextWriter" /> que grava a saída.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">O contexto do esquema XAML para o gravador de XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textWriter" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; basis using a settings object.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriter" /> de uma base <see cref="T:System.IO.TextWriter" /> usando um objeto de configurações.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">O <see cref="T:System.IO.TextWriter" /> que grava a saída.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">O contexto do esquema XAML para o gravador de XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Uma instância de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, que geralmente tem configurações não padrão específicas.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textWriter" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; basis.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriter" /> de uma base <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes the output.">O <see cref="T:System.Xml.XmlWriter" /> que grava a saída.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">O contexto do esquema XAML para o gravador de XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlWriter" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; basis using a settings object.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriter" /> de uma base <see cref="T:System.Xml.XmlWriter" /> usando um objeto de configurações.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes the output.">O <see cref="T:System.Xml.XmlWriter" /> que grava a saída.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">O contexto do esquema XAML para o gravador de XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Uma instância de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, que geralmente tem configurações não padrão específicas.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlWriter" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; and optionally releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.Xaml.XamlXmlWriter" /> e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the unmanaged resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para liberar os recursos não gerenciados; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Flush">
      <summary vsli:raw="Calls the &lt;see langword=&quot;Flush&quot; /&gt; method of the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, which writes anything that is currently in the buffer, and then closes the writer.">Chama o método <see langword="Flush" /> do <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> subjacente, que grava tudo o que está no buffer no momento e, em seguida, fecha o gravador.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndMember">
      <summary vsli:raw="Writes a XAML end member node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is not within a member, or if the internal writer state does not support writing to an end member.">Grava um nó de membro final XAML no <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> subjacente. Gera uma exceção se a posição atual do fluxo do nó XAML não estiver dentro de um membro ou se o estado do gravador interno não for compatível com a gravação a de um membro final.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not within a member.">A posição atual do fluxo do nó XAML não está dentro de um membro.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing an end member.">O estado atual do gravador não é compatível com a gravação de um membro final.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndObject">
      <summary vsli:raw="Writes a XAML end object node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream that is being processed is incompatible with writing an end object.">Grava um nó de objeto final XAML no <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> subjacente. Gera uma exceção se a posição atual do fluxo do nó XAML que está sendo processada é incompatível com a gravação de um objeto final.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not in a scope where an end member can be written.">A posição atual do fluxo do nó XAML não está em um escopo em que um membro de extremidade pode ser gravado.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing an end object.">O estado atual do gravador não é compatível com a gravação de um objeto final.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteGetObject">
      <summary vsli:raw="Writes an object for cases where the specified object is a default or implicit value of the property that is being written, instead of being specified as an object value in the input XAML node set.">Grava um objeto para casos em que o objeto especificado é um valor padrão ou implícito da propriedade que está sendo gravada, em vez de ser especificada como um valor de objeto no conjunto de nó XAML de entrada.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="Writes namespace information to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. May throw an exception for certain states; however, may instead defer writing the namespace information until the writer and the XAML node stream that is being processed reaches a position where a XAML namespace declaration can be inserted.">Grava informações de namespace no <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> subjacente. Pode gerar uma exceção para determinados estados, no entanto, pode, em vez disso, adiar a gravação das informações de namespace até que o gravador e o fluxo do nó XAML que está sendo processado atinjam uma posição em que uma declaração de namespace XAML possa ser inserida.</summary>
      <param name="namespaceDeclaration" vsli:raw="The XAML namespace declaration to write.">A declaração de namespace XAML a ser gravada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceDeclaration" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is not a valid XAML namespace declaration (has a null prefix or null identifier component).">
        <paramref name="namespaceDeclaration" /> não é uma declaração de namespace XAML válida (tem um prefixo nulo ou um componente de identificador nulo).</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing a XAML namespace declaration.">O estado atual do gravador não dá suporte à gravação de uma declaração de namespace XAML.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="Writes a XAML start member node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is within another member, or if it is not in a scope or writer state where a start member can be written.">Grava um nó de membro inicial XAML no <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> subjacente. Gera uma exceção se a posição atual do fluxo do nó XAML estiver dentro de outro membro ou se ele não estiver em um estado de escopo ou gravador em que um membro inicial pode ser gravado.</summary>
      <param name="property" vsli:raw="The XAML member identifier for the member to write.">O identificador de membro XAML para o membro a ser gravado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="property" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <paramref name="property" /> não é um <see cref="T:System.Xaml.XamlMember" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is invalid for writing a start member.">A posição atual do fluxo do nó XAML é inválida para a gravação de um membro inicial.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The writer state is not valid for writing a start member.  &#xA;  &#xA; -or-  &#xA;  &#xA; The XAML writer attempted to write a duplicate member. This exception may have a more precise inner exception.">O estado do gravador não é válido para a gravação de um membro inicial.  
  
 - ou -  
  
 O gravador de XAML tentou gravar um membro duplicado. Essa exceção pode ter uma exceção interna mais precisa.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="Writes a XAML start object node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is not in a scope where a start object can be written, or if the writer is not in a state that can write a start object.">Grava um nó de objeto inicial XAML no <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> subjacente. Gera uma exceção se a posição atual do fluxo do nó XAML não está em um escopo em que um objeto inicial pode ser gravado ou se o gravador não está em um estado que pode gravar um objeto inicial.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; (XAML type identifier) for the object to write.">O <see cref="T:System.Xaml.XamlType" /> (identificador de tipo XAML) para o objeto a ser gravado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">
        <paramref name="type" /> não é um <see cref="T:System.Xaml.XamlType" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not valid for writing a new start object.">A posição atual do fluxo do nó XAML é inválida para a gravação de um novo objeto inicial.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The state of the XAML writer is not valid for writing a new start object.">O estado do gravador XAML não é válido para gravar um novo objeto inicial.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes a XAML value node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is invalid for writing a value, or the writer is in a state where a value cannot be written.">Grava um nó de valor XAML no <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> subjacente. Gera uma exceção se a posição atual do fluxo do nó XAML for inválida para gravar um valor ou o gravador está em um estado em que não é possível gravar um valor.</summary>
      <param name="value" vsli:raw="The value information to write.">As informações de valor a ser gravado.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not valid for writing a value.">A posição atual do fluxo do nó XAML é inválida para a gravação de um valor.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The XAML writer state does not support the writing of a value node.">O estado do gravador XAML não é compatível com a gravação de um nó de valor.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; specifies a value that is not null or a string.">
        <paramref name="value" /> especifica um valor que não seja nulo ou uma cadeia de caracteres.</exception>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.SchemaContext">
      <summary vsli:raw="Gets the XAML schema context that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for processing.">Obtém o contexto do esquema XAML que esse <see cref="T:System.Xaml.XamlXmlWriter" /> usa para processamento.</summary>
      <returns vsli:raw="The XAML schema context that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">O contexto do esquema XAML que isso <see cref="T:System.Xaml.XamlXmlWriter" /> usa para processamento XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.Settings">
      <summary vsli:raw="Gets the writer settings that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Obtém as configurações do gravador que esse <see cref="T:System.Xaml.XamlXmlWriter" /> usa para processamento de XAML.</summary>
      <returns vsli:raw="The writer settings that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">As configurações do gravador que isso <see cref="T:System.Xaml.XamlXmlWriter" /> usa para processamento XAML.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterException">
      <summary vsli:raw="The exception that is thrown by certain &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; APIs.">A exceção que é gerada por determinadas APIs <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriterException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriterException" /> com dados serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a specified message that describes the error.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriterException" /> com uma mensagem especificada que descreve o erro.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriterException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">A mensagem que descreve a exceção. O chamador deste construtor é obrigatório para garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterSettings">
      <summary vsli:raw="Provides initialization settings for the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; XAML writer implementation.">Fornece configurações de inicialização para a implementação do gravador XAML <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.Copy">
      <summary vsli:raw="Returns a copy of this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt; instance.">Retorna uma cópia desta instância de <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
      <returns vsli:raw="The returned copy.">A cópia retornada.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.AssumeValidInput">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; should always assume valid XAML input for purposes of duplicate resolution or other error checking.">Obtém ou define um valor que especifica se o <see cref="T:System.Xaml.XamlXmlWriter" /> sempre deve considerar a entrada XAML válida para fins de verificação de resolução duplicada ou de outros erros.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; skips certain validation or error checks, such as throwing exceptions on duplicate members. &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; throws exceptions when invalid XAML is encountered. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se o <see cref="T:System.Xaml.XamlXmlWriter" /> ignorar determinadas verificações de erro ou validação, como lançar exceções em membros duplicados. <see langword="false" /> Se o <see cref="T:System.Xaml.XamlXmlWriter" /> lançar exceções quando um XAML inválido for encontrado. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.CloseOutput">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; should close immediately on &lt;see langword=&quot;Dispose&quot; /&gt; or other operations, or whether the XAML writer should instead write the buffer output before closing. Use this setting with caution; closing immediately can result in invalid XAML that cannot be loaded again.">Obtém ou define um valor que especifica se o <see cref="T:System.Xaml.XamlXmlWriter" /> deve ser fechado imediatamente em <see langword="Dispose" /> ou em outras operações ou, se, nesse caso, o gravador de XAML deve gravar a saída do buffer antes de ser fechado. Use essa configuração com cuidado, pois fechar imediatamente pode resultar em um XAML inválido que não pode ser carregado novamente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; immediately closes on a &lt;see langword=&quot;Dispose&quot; /&gt; or similar operations. &lt;see langword=&quot;false&quot; /&gt; if the remaining buffer output is written before the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; is released. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se <see cref="T:System.Xaml.XamlXmlWriter" /> o fechar imediatamente em uma <see langword="Dispose" /> ou mais operações semelhantes. <see langword="false" /> se a saída de buffer restante for gravada antes de o <see cref="T:System.Xaml.XamlXmlWriter" /> ser liberado. O padrão é <see langword="false" />.</returns>
    </member>
  </members>
</doc>