<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>UIAutomationClient</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Automation.AndCondition">
      <summary>Representa una combinación de dos o más objetos <see cref="T:System.Windows.Automation.PropertyCondition" />; ambos deben ser true para que exista una coincidencia.</summary>
    </member>
    <member name="M:System.Windows.Automation.AndCondition.#ctor(System.Windows.Automation.Condition[])">
      <summary>Crea un objeto <see cref="T:System.Windows.Automation.PropertyCondition" /> que es true si todas los subcondiciones son true.</summary>
      <param name="conditions">Dos o más subcondiciones.</param>
    </member>
    <member name="M:System.Windows.Automation.AndCondition.GetConditions">
      <summary>Recupera una matriz de subcondiciones para esta condición.</summary>
      <returns>Una matriz de subcondiciones para esta condición.</returns>
    </member>
    <member name="T:System.Windows.Automation.Automation">
      <summary>Contiene métodos y campos para aplicaciones cliente de automatización de la interfaz de usuario.</summary>
    </member>
    <member name="F:System.Windows.Automation.Automation.ContentViewCondition">
      <summary>Representa una vista predefinida del árbol de Automatización de la interfaz de usuario que sólo incluye elementos de Automatización de la interfaz de usuario que pueden tener contenido.</summary>
    </member>
    <member name="F:System.Windows.Automation.Automation.ControlViewCondition">
      <summary>Representa una vista predefinida del árbol de Automatización de la interfaz de usuario que sólo incluye elementos de Automatización de la interfaz de usuario que son controles.</summary>
    </member>
    <member name="F:System.Windows.Automation.Automation.RawViewCondition">
      <summary>Representa una vista predefinida del árbol de Automatización de la interfaz de usuario que incluye todos los elementos de Automatización de la interfaz de usuario.</summary>
    </member>
    <member name="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)">
      <summary>Registra un método que controla los eventos de Automatización de la interfaz de usuario.</summary>
      <param name="eventId">Identificador para el evento que el método controlará.</param>
      <param name="element">Elemento de Automatización de la interfaz de usuario que se debe asociar al controlador de eventos.</param>
      <param name="scope">Ámbito de eventos que se va a controlar; es decir, si se va a controlar el propio elemento o sus antecesores y descendientes.</param>
      <param name="eventHandler">Método al que se debe llamar cuando se produzca el evento especificado.</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)">
      <summary>Registra un método que controla los eventos de cambio de foco.</summary>
      <param name="eventHandler">Método al que se debe llamar cuando se produzca el evento.</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])">
      <summary>Registra un método que controla los eventos de cambio de propiedad.</summary>
      <param name="element">Elemento de Automatización de la interfaz de usuario al que debe asociarse el controlador de eventos.</param>
      <param name="scope">Ámbito de eventos que se va a controlar; es decir, si se va a controlar el propio elemento o sus antecesores y elementos secundarios.</param>
      <param name="eventHandler">Método al que se debe llamar cuando se produzca el evento.</param>
      <param name="properties">Propiedades de Automatización de la interfaz de usuario de interés.</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)">
      <summary>Registra el método que controla los eventos de cambio de estructura.</summary>
      <param name="element">Elemento de Automatización de la interfaz de usuario al que debe asociarse el controlador de eventos.</param>
      <param name="scope">Ámbito de eventos que se va a controlar; es decir, si se va a controlar el propio elemento o sus antecesores y descendientes.</param>
      <param name="eventHandler">Método al que se debe llamar cuando se produzca el evento de cambio de estructura.</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.Compare(System.Int32[],System.Int32[])">
      <summary>Compara dos matrices de enteros que contienen los identificadores (id) en tiempo de ejecución para determinar si su contenido es el mismo.</summary>
      <param name="runtimeId1">Primer identificador de tiempo de ejecución que se va a comparar.</param>
      <param name="runtimeId2">Segundo identificador de tiempo de ejecución que se va a comparar.</param>
      <returns>
        <see langword="true" /> si los Ids. en tiempo de ejecución comparados hacen referencia al mismo elemento de interfaz de usuario (UI); en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
      <summary>Compara dos elementos de Automatización de la interfaz de usuario y devuelve <see langword="true" /> si ambos hacen referencia al mismo elemento de UI.</summary>
      <param name="el1">Primer elemento de Automatización de la interfaz de usuario que se va a comparar.</param>
      <param name="el2">Segundo elemento de Automatización de la interfaz de usuario que se va a comparar.</param>
      <returns>
        <see langword="true" /> si los identificadores en tiempo de ejecución de los elementos de UI son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Automation.PatternName(System.Windows.Automation.AutomationPattern)">
      <summary>Recupera el nombre del patrón de control especificado.</summary>
      <param name="pattern">Identificador del patrón de control.</param>
      <returns>Nombre descriptivo del patrón de control o, si no se encuentra el patrón especificado, una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Windows.Automation.Automation.PropertyName(System.Windows.Automation.AutomationProperty)">
      <summary>Recupera el nombre de la propiedad de Automatización de la interfaz de usuario especificada.</summary>
      <param name="property">Identificador de Automatización de la interfaz de usuario de la propiedad con nombre.</param>
      <returns>Nombre descriptivo de la propiedad Automatización de la interfaz de usuario o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se encuentra la propiedad Automatización de la interfaz de usuario especificada.</returns>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveAllEventHandlers">
      <summary>Quita todos los controladores de eventos de Automatización de la interfaz de usuario registrados.</summary>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationEventHandler)">
      <summary>Quita el controlador de eventos de Automatización de la interfaz de usuario especificado.</summary>
      <param name="eventId">Identificador de evento.</param>
      <param name="element">Elemento de Automatización de la interfaz de usuario en el que se va a quitar el controlador de eventos.</param>
      <param name="eventHandler">Método del controlador que se pasó a <see cref="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)" /> para el identificador de eventos y el elemento de Automatización de la interfaz de usuario especificado.</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)">
      <summary>Quita el controlador de eventos de cambio de foco especificado.</summary>
      <param name="eventHandler">Método del controlador que se pasó a <see cref="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)" /></param>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationPropertyChangedEventHandler)">
      <summary>Quita el controlador de eventos de cambio de propiedad especificado.</summary>
      <param name="element">Elemento de Automatización de la interfaz de usuario del que se va a quitar el controlador de eventos.</param>
      <param name="eventHandler">Método del controlador que se pasó a <see cref="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])" /> para el elemento de Automatización de la interfaz de usuario especificado.</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.StructureChangedEventHandler)">
      <summary>Quita el controlador de eventos de cambio de estructura especificado.</summary>
      <param name="element">Elemento de Automatización de la interfaz de usuario del que se va a quitar el controlador de eventos.</param>
      <param name="eventHandler">Método del controlador que se pasó a <see cref="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)" /> para el elemento de Automatización de la interfaz de usuario especificado.</param>
    </member>
    <member name="T:System.Windows.Automation.AutomationElement">
      <summary>Representa un elemento de automatización de la interfaz de usuario en el árbol de automatización de la interfaz de usuario y contiene valores que las aplicaciones cliente de automatización de la interfaz de usuario usan como identificadores.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AccessKeyProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent">
      <summary>Identifica un evento provocado durante la carga de contenido asincrónica.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent">
      <summary>Identifica un evento que se genera cuando el foco cambia.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AutomationIdProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" />, que se usa para identificar los elementos.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent">
      <summary>Identifica un evento cambiado por propiedad.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ClassNameProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ClickablePointProperty">
      <summary>Identifica la propiedad del punto seleccionable.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ControlTypeProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.CultureProperty">
      <summary>Identifica la propiedad de referencia cultural.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.FrameworkIdProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.HelpTextProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsContentElementProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsControlElementProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.DockPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsEnabledProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />, que especifica si está habilitado el elemento de interfaz de usuario (UI) al que <see cref="T:System.Windows.Automation.AutomationElement" /> hace referencia.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.GridItemPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.GridPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.InvokePattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.ItemContainerPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.MultipleViewPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsOffscreenProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" />, que indica si el elemento de la interfaz de usuario (UI) se ve en la pantalla.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsPasswordProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.RangeValuePattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.ScrollItemPattern" /> está disponible para el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.ScrollPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.SelectionItemPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.SelectionPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.TableItemPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.TablePattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.TextPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.TogglePattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.TransformPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.ValuePattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.VirtualizedItemPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty">
      <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.WindowPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ItemStatusProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" />, que especifica el estado de la representación visual de un elemento complejo.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ItemTypeProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.LabeledByProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" />, que identifica la etiqueta asociada a un control.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent">
      <summary>Identifica el evento que se provoca cuando se invalida el diseño.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" /> en el idioma de la configuración regional.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.MenuClosedEvent">
      <summary>Identifica el evento que se provoca cuando se cierra un menú.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.MenuOpenedEvent">
      <summary>Identifica el evento que se provoca cuando se abre un menú.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.NameProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.NotSupported">
      <summary>Indica que no se admite una propiedad.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.OrientationProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.PositionInSetProperty">
      <summary>Describe la posición ordinal de un elemento de automatización dentro de un conjunto de elementos que se consideran elementos del mismo nivel.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ProcessIdProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty">
      <summary>Identifica la propiedad que contiene el identificador en tiempo de ejecución del elemento.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.SizeOfSetProperty">
      <summary>Describe el número de elementos de automatización de un grupo o un conjunto que se consideran elementos del mismo nivel.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.StructureChangedEvent">
      <summary>Identifica el evento que se provoca cuando se cambia la estructura de árbol de Automatización de la interfaz de usuario.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ToolTipClosedEvent">
      <summary>Identifica el evento que se provoca cuando se cierra una información sobre herramientas.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ToolTipOpenedEvent">
      <summary>Identifica el evento que se provoca cuando se abre una información sobre herramientas.</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Windows.Automation.AutomationElement" /> especificado tiene el mismo valor que este objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <param name="obj">Objeto <see cref="T:System.Windows.Automation.AutomationElement" /> que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Windows.Automation.AutomationElement" /> especificado es igual que este objeto <see cref="T:System.Windows.Automation.AutomationElement" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.Finalize">
      <summary>Permite que un objeto intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)">
      <summary>Devuelve todos los objetos <see cref="T:System.Windows.Automation.AutomationElement" /> que satisfacen la condición especificada.</summary>
      <param name="scope">Combinación bit a bit de valores que especifica el ámbito de la búsqueda.</param>
      <param name="condition">Objeto que contiene los criterios que deben coincidir.</param>
      <returns>Colección de objetos que satisface la condición especificada. Si no existe ninguna coincidencia, se devuelve una colección vacía.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)">
      <summary>Devuelve el primer elemento secundario o el elemento descendiente que coincide con la condición especificada.</summary>
      <param name="scope">Combinación bit a bit de valores que especifica el ámbito de la búsqueda.</param>
      <param name="condition">Objeto que contiene los criterios que deben coincidir.</param>
      <returns>Primer elemento que satisface la condición o <see langword="null" /> si no se busca ninguna coincidencia.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)">
      <summary>Recupera un nuevo objeto <see cref="T:System.Windows.Automation.AutomationElement" /> para el elemento de interfaz de usuario (UI) al que hace referencia el identificador de ventana especificado.</summary>
      <param name="hwnd">Identificador del elemento de UI.</param>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" /> para el elemento de UI identificado por <paramref name="hwnd" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>Recupera un nuevo objeto <see cref="T:System.Windows.Automation.AutomationElement" /> de una implementación <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> local.</summary>
      <param name="localImpl">Objeto del proveedor.</param>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" /> que representa el elemento proporcionado por el objeto del proveedor.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)">
      <summary>Recupera un nuevo objeto <see cref="T:System.Windows.Automation.AutomationElement" /> para el elemento de interfaz de usuario (UI) en el punto especificado en el escritorio.</summary>
      <param name="pt">Coordenadas físicas de la pantalla en el escritorio en las que se debe buscar el elemento de UI.</param>
      <returns>Elemento de UI en el punto especificado.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)">
      <summary>Recupera el patrón especificado de la caché de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <param name="pattern">Identificador del patrón que se debe recuperar.</param>
      <exception cref="T:System.InvalidOperationException">El patrón solicitado no está en la caché o no es compatible con el elemento.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      <returns>Objeto que representa el patrón especificado. Si no existen patrones coincidentes, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)">
      <summary>Recupera el valor de la propiedad especificada de la caché de <see cref="T:System.Windows.Automation.AutomationElement" />. Se devuelve un valor predeterminado adecuado de tipo de propiedad para las propiedades no admitidas explícitamente por el elemento de interfaz de usuario (UI) de destino.</summary>
      <param name="property">Identificador de la propiedad que se debe recuperar.</param>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">interfaz de usuario (UI) para el objeto <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      <returns>Objeto que contiene el valor de la propiedad especificada.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)">
      <summary>Recupera el valor de la propiedad especificada de la caché de <see cref="T:System.Windows.Automation.AutomationElement" />; opcionalmente, se puede omitir cualquier propiedad predeterminada.</summary>
      <param name="property">Identificador de la propiedad que se debe recuperar.</param>
      <param name="ignoreDefaultValue">Valor que especifica si se debería omitir un valor predeterminado cuando no se admita la propiedad especificada.</param>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      <returns>Objeto que contiene el valor de la propiedad especificada o <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> si el elemento no proporciona un valor e <paramref name="ignoreDefaultValue" /> es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetClickablePoint">
      <summary>Recupera un punto en <see cref="T:System.Windows.Automation.AutomationElement" /> en el que se puede hacer clic.</summary>
      <exception cref="T:System.Windows.Automation.NoClickablePointException">No hay ningún punto interactivo.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      <returns>Las coordenadas físicas de la pantalla de un punto que un cliente puede usar para hacer clic en este elemento.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)">
      <summary>Recupera el objeto del patrón especificado en <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <param name="pattern">Identificador del patrón que se debe recuperar.</param>
      <exception cref="T:System.InvalidOperationException">El elemento no admite el patrón.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      <returns>Objeto del patrón, si <see cref="T:System.Windows.Automation.AutomationElement" /> admite actualmente el patrón especificado.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)">
      <summary>Recupera el valor de la propiedad especificada en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />. Se devuelve un valor predeterminado adecuado de tipo de propiedad para las propiedades no admitidas explícitamente por el elemento de interfaz de usuario (UI) de destino.</summary>
      <param name="property">Identificador de propiedad de Automatización de la interfaz de usuario que especifica la propiedad que se debe recuperar.</param>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      <returns>Objeto que contiene el valor de la propiedad especificada.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)">
      <summary>Recupera el valor de la propiedad especificada en <see cref="T:System.Windows.Automation.AutomationElement" />; opcionalmente, se puede omitir cualquier propiedad predeterminada.</summary>
      <param name="property">Identificador de propiedad de Automatización de la interfaz de usuario que especifica la propiedad que se debe recuperar.</param>
      <param name="ignoreDefaultValue">Valor que especifica si se debería omitir un valor predeterminado cuando no se admita la propiedad especificada.</param>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      <returns>Objeto que contiene el valor de la propiedad especificada o <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> si el elemento no proporciona un valor e <paramref name="ignoreDefaultValue" /> es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetHashCode">
      <summary>Devuelve el código hash de este objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <returns>Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetRuntimeId">
      <summary>Recupera el identificador único asignado al elemento de interfaz de usuario (UI).</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      <returns>Matriz de enteros que representa el identificador en tiempo de ejecución.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetSupportedPatterns">
      <summary>Recupera los patrones de control que admite este objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <returns>Matriz de objetos <see cref="T:System.Windows.Automation.AutomationPattern" /> que representa los patrones de control admitidos.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetSupportedProperties">
      <summary>Recupera los identificadores de propiedades admitidos por el elemento.</summary>
      <returns>Matriz de identificadores de propiedad admitidos.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)">
      <summary>Recupera un nuevo objeto <see cref="T:System.Windows.Automation.AutomationElement" /> con una caché actualizada.</summary>
      <param name="request">Patrones y propiedades que se deben incluir en la caché actualizada.</param>
      <returns>Nuevo objeto <see cref="T:System.Windows.Automation.AutomationElement" /> con la memoria caché actualizada.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
      <summary>Devuelve un valor que indica si los objetos <see cref="T:System.Windows.Automation.AutomationElement" /> especificados hacen referencia al mismo elemento de interfaz de usuario (UI).</summary>
      <param name="left">Primer objeto <see cref="T:System.Windows.Automation.AutomationElement" /> que se va a comparar.</param>
      <param name="right">Segundo objeto <see cref="T:System.Windows.Automation.AutomationElement" /> que se va a comparar.</param>
      <returns>
        <see langword="true" /> si los dos objetos <see cref="T:System.Windows.Automation.AutomationElement" /> hacen referencia al mismo elemento de UI; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
      <summary>Devuelve un valor que indica si los objetos <see cref="T:System.Windows.Automation.AutomationElement" /> especificados hacen referencia a elementos de interfaz de usuario (UI) diferentes.</summary>
      <param name="left">Primer objeto <see cref="T:System.Windows.Automation.AutomationElement" /> que se va a comparar.</param>
      <param name="right">Segundo objeto <see cref="T:System.Windows.Automation.AutomationElement" /> que se va a comparar.</param>
      <returns>
        <see langword="true" /> si los dos objetos hacen referencia a elementos de UI diferentes; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.SetFocus">
      <summary>Establece el foco en <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)">
      <summary>Recupera un patrón de control de la caché.</summary>
      <param name="pattern">Identificador del patrón de control que se va a recuperar.</param>
      <param name="patternObject">Al devolverse, contiene el patrón si está en la caché; de lo contrario, <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si el patrón está en la caché; <see langword="false" /> si no está en la caché o no se admite.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)">
      <summary>Recupera un punto dentro del elemento en el que se puede hacer clic.</summary>
      <param name="pt">El resultado de este método contiene las coordenadas físicas de la pantalla de un punto seleccionable.</param>
      <returns>
        <see langword="true" /> si hay un punto que es seleccionable; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)">
      <summary>Recupera un objeto que implementa un patrón de control.</summary>
      <param name="pattern">Identificador del patrón de control que se va a recuperar.</param>
      <param name="patternObject">Se devuelve el patrón de control si se admite; de lo contrario, se devuelve <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si se admite el patrón; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.Cached">
      <summary>Obtiene los valores de propiedad de Automatización de la interfaz de usuario almacenados en memoria caché para este objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <exception cref="T:System.InvalidOperationException">No hay ninguna propiedad almacenada en memoria caché.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      <returns>Estructura que contiene los valores de propiedades almacenados en caché para <see cref="T:System.Windows.Automation.AutomationElement" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.CachedChildren">
      <summary>Obtiene los elementos secundarios almacenados en memoria caché de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      <exception cref="T:System.InvalidOperationException">No se realizó ninguna solicitud de almacenar los elementos secundarios de este elemento en memoria caché.</exception>
      <returns>Colección de elementos secundarios. Esta colección puede estar vacía si el elemento no tiene ningún elemento secundario.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.CachedParent">
      <summary>Obtiene el elemento primario almacenado en memoria caché de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <exception cref="T:System.InvalidOperationException">No hay ningún elemento primario almacenado en memoria caché.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      <returns>Elemento primario. El valor devuelto puede ser <see langword="null" /> si el elemento especificado no tiene ningún elemento primario; por ejemplo, si este elemento es el nodo raíz.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.Current">
      <summary>Obtiene los valores de propiedad actuales de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      <returns>Estructura que contiene los valores de propiedad actuales.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.FocusedElement">
      <summary>Obtiene el objeto <see cref="T:System.Windows.Automation.AutomationElement" /> que actualmente tiene el foco.</summary>
      <returns>Elemento UI que tiene el foco.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.RootElement">
      <summary>Obtiene el objeto <see cref="T:System.Windows.Automation.AutomationElement" /> raíz del escritorio actual.</summary>
      <returns>Elemento raíz.</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationElement.AutomationElementInformation">
      <summary>Contiene los descriptores de acceso de propiedad que las propiedades <see cref="P:System.Windows.Automation.AutomationElement.Cached" /> o <see cref="P:System.Windows.Automation.AutomationElement.Current" /> utilizan.</summary>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey">
      <summary>Obtiene una cadena que contiene las combinaciones de teclas de aceleración para el elemento.</summary>
      <returns>Secuencia de combinaciones de teclas que invocan una acción asociada al elemento.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey">
      <summary>Obtiene una cadena que contiene el carácter de la tecla de acceso para el elemento.</summary>
      <returns>Carácter, asociado con un elemento, que se utiliza para activar ese elemento.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId">
      <summary>Obtiene una cadena que contiene el Automatización de la interfaz de usuario de identificador (id.) del elemento.</summary>
      <returns>IDENTIFICADOR de un elemento que es único entre elementos del mismo nivel dentro de su contenedor.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle">
      <summary>Obtiene las coordenadas del rectángulo que envuelve completamente el elemento.</summary>
      <returns>Coordenadas del punto del rectángulo envolvente.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName">
      <summary>Obtiene una cadena que contiene el nombre de clase del elemento tal como lo asignó el desarrollador del control.</summary>
      <returns>Nombre de clase asignado por el desarrollador del control.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType">
      <summary>Obtiene <see cref="T:System.Windows.Automation.ControlType" /> del elemento.</summary>
      <returns>Modelo de interacción para este elemento. El valor predeterminado es <see cref="F:System.Windows.Automation.ControlType.Custom" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId">
      <summary>Obtiene el nombre del marco de la interfaz de usuario subyacente.</summary>
      <returns>Nombre del marco de la interfaz de usuario, como "Win32", "WinForm" o "DirectUI". El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus">
      <summary>Obtiene un valor que indica si el elemento tiene el foco de teclado.</summary>
      <returns>
        <see langword="true" /> si el elemento tiene el foco de teclado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText">
      <summary>Obtiene el texto de ayuda asociado al elemento.</summary>
      <returns>Texto de ayuda de la información sobre herramientas del elemento.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement">
      <summary>Obtiene un valor que especifica si se trata de un elemento de contenido.</summary>
      <returns>
        <see langword="true" /> si es un elemento de contenido; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement">
      <summary>Obtiene un valor que indica si el elemento se ve como un control.</summary>
      <returns>
        <see langword="true" /> si el elemento se ve como un control; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled">
      <summary>Obtiene un valor que indica si está habilitado el elemento de interfaz de usuario (UI) al que hace referencia el elemento de Automatización de la interfaz de usuario.</summary>
      <returns>Es <see langword="true" /> si el control está habilitado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable">
      <summary>Obtiene un valor que indica si el elemento de Automatización de la interfaz de usuario puede aceptar el foco de teclado.</summary>
      <returns>
        <see langword="true" /> si el control puede recibir el foco de teclado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen">
      <summary>Obtiene un valor que indica si el elemento de Automatización de la interfaz de usuario está visible en la pantalla.</summary>
      <returns>
        <see langword="true" /> si el control no es visible; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword">
      <summary>Obtiene un valor que indica si el elemento de Automatización de la interfaz de usuario incluye contenido protegido.</summary>
      <returns>
        <see langword="true" /> si el elemento incluye contenido protegido; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm">
      <summary>Obtiene un valor que indica si el elemento de Automatización de la interfaz de usuario tiene que rellenarse en un formulario.</summary>
      <returns>
        <see langword="true" /> si el elemento tiene que rellenarse; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus">
      <summary>Obtiene una descripción del estado de un elemento dentro de otro.</summary>
      <returns>Descripción del estado.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType">
      <summary>Obtiene una descripción del tipo de un elemento.</summary>
      <returns>Cadena adaptada que describe el elemento.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy">
      <summary>Obtiene el elemento que contiene la etiqueta de texto para este elemento.</summary>
      <returns>Elemento que es la etiqueta para este elemento.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType">
      <summary>Obtiene una descripción del tipo de control.</summary>
      <returns>Descripción localizada del tipo de control, como "botón".</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name">
      <summary>Obtiene el nombre del elemento.</summary>
      <returns>El nombre del elemento de interfaz de usuario (UI).</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle">
      <summary>Obtiene el identificador de la ventana del elemento.</summary>
      <returns>Identificador de la ventana, si existe; en caso contrario, 0.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation">
      <summary>Obtiene la orientación del control.</summary>
      <returns>Orientación.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId">
      <summary>Obtiene el identificador (id.) de proceso de este elemento.</summary>
      <returns>IDENTIFICADOR del proceso que hospeda el elemento. El valor predeterminado de la propiedad es 0.</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationElementCollection">
      <summary>Representa una colección de objetos <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationElementCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos de la colección en una matriz, empezando en el índice especificado de la matriz de destino.</summary>
      <param name="array">El destino de los elementos copiados de la colección.</param>
      <param name="index">Índice de base cero de la matriz de destino donde se comienza a copiar.</param>
    </member>
    <member name="M:System.Windows.Automation.AutomationElementCollection.CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)">
      <summary>Copia los elementos de la colección a una instancia de la matriz especializada, comenzando en el índice especificado de la matriz de destino.</summary>
      <param name="array">El destino de los elementos copiados de la colección.</param>
      <param name="index">Índice de base cero de la matriz de destino donde se comienza a copiar.</param>
      <exception cref="T:System.ArgumentException">La matriz de destino no es lo suficientemente grande o <paramref name="index" /> está fuera de los límites de la matriz.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationElementCollection.GetEnumerator">
      <summary>Devuelve un enumerador que se puede utilizar para procesar un recorrido en iteración en la colección de elementos.</summary>
      <returns>Un enumerador que se puede utilizar para recorrer en iteración la colección <see cref="T:System.Windows.Automation.AutomationElementCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElementCollection.Count">
      <summary>Obtiene el número de elementos de esta colección.</summary>
      <returns>Número de elementos.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElementCollection.IsSynchronized">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Windows.Automation.AutomationElementCollection" /> está sincronizado (es seguro para la ejecución de subprocesos).</summary>
      <returns>Siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElementCollection.Item(System.Int32)">
      <summary>Obtiene el objeto <see cref="T:System.Windows.Automation.AutomationElement" /> en el índice especificado.</summary>
      <param name="index">Índice de base cero del elemento de la colección.</param>
      <exception cref="T:System.IndexOutOfRangeException">Se ha especificado un entero negativo para <paramref name="index" />o <paramref name="index" /> es mayor o igual que <see cref="P:System.Windows.Automation.AutomationElementCollection.Count" />.</exception>
      <returns>Objeto <see cref="T:System.Windows.Automation.AutomationElement" /> en el índice especificado.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElementCollection.SyncRoot">
      <summary>Obtiene un objeto que se puede usar para sincronizar el acceso a la colección <see cref="T:System.Windows.Automation.AutomationElementCollection" />.</summary>
      <returns>Objeto que se puede usar para sincronizar el acceso a la colección.</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationElementMode">
      <summary>Contiene valores que especifican el tipo de referencia que se usa al devolver elementos de automatización de la interfaz de usuario. Estos valores se utilizan en la propiedad <see cref="P:System.Windows.Automation.CacheRequest.AutomationElementMode" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementMode.Full">
      <summary>Especifica que los elementos devueltos tienen una referencia completa a la UI subyacente.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementMode.None">
      <summary>Especifica que los elementos devueltos no tienen ninguna referencia a la UI subyacente y sólo contienen información almacenada en memoria caché. Por ejemplo, este modo podría utilizarse para recuperar los nombres de elementos en un cuadro de lista sin obtener referencias a los propios elementos.</summary>
    </member>
    <member name="T:System.Windows.Automation.AutomationFocusChangedEventArgs">
      <summary>Proporciona datos para un evento de cambio de foco.</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationFocusChangedEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Automation.AutomationFocusChangedEventArgs" />.</summary>
      <param name="idObject">identificador (id.) del objeto que recibió el foco.</param>
      <param name="idChild">Identificador secundario del objeto que recibió el foco.</param>
    </member>
    <member name="P:System.Windows.Automation.AutomationFocusChangedEventArgs.ChildId">
      <summary>Obtiene el identificador de Microsoft Active Accessibility secundario del objeto que recibe el foco.</summary>
      <returns>El identificador.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationFocusChangedEventArgs.ObjectId">
      <summary>Obtiene el identificador (id.) del objeto Microsoft Active Accessibility que generó el evento.</summary>
      <returns>IDENTIFICADOR del interfaz de usuario (UI) elemento que recibe el foco. Para ver los valores posibles, vea identificadores de objetos.</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationFocusChangedEventHandler">
      <summary>Representa el método implementado por la aplicación cliente de Automatización de la interfaz de usuario para controlar el evento provocado por un proveedor de Automatización de la interfaz de usuario cuando ha cambiado el foco.</summary>
      <param name="sender">El objeto que ha generado el evento.</param>
      <param name="e">Información acerca del evento.</param>
    </member>
    <member name="T:System.Windows.Automation.BasePattern">
      <summary>Proporciona la implementación base para las clases de patrones de control.</summary>
    </member>
    <member name="M:System.Windows.Automation.BasePattern.Finalize">
      <summary>Libera recursos y realiza otras operaciones de limpieza antes de que la recolección de elementos no utilizados reclame el objeto.</summary>
    </member>
    <member name="T:System.Windows.Automation.CacheRequest">
      <summary>Especifica las propiedades y modelos que el marco de automatización de la interfaz de usuario almacena en caché cuando se obtiene un objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Automation.CacheRequest" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Activate">
      <summary>Establece <see cref="T:System.Windows.Automation.CacheRequest" /> como especificación activa para los elementos devueltos cuando se solicita <see cref="T:System.Windows.Automation.AutomationElement" /> en el mismo subproceso.</summary>
      <returns>Objeto que puede utilizarse para eliminar <see cref="T:System.Windows.Automation.CacheRequest" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
      <summary>Agrega el identificador de <see cref="T:System.Windows.Automation.AutomationPattern" /> especificado a <see cref="T:System.Windows.Automation.CacheRequest" />.</summary>
      <param name="pattern">Identificador que especifica un modelo para almacenar en memoria caché.</param>
      <exception cref="T:System.InvalidOperationException">El objeto <see cref="T:System.Windows.Automation.CacheRequest" /> está activo.</exception>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
      <summary>Agrega el identificador de <see cref="T:System.Windows.Automation.AutomationProperty" /> especificado a <see cref="T:System.Windows.Automation.CacheRequest" />.</summary>
      <param name="property">Identificador que especifica un valor de propiedad para almacenar en memoria caché.</param>
      <exception cref="T:System.InvalidOperationException">El objeto <see cref="T:System.Windows.Automation.CacheRequest" /> está activo.</exception>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Clone">
      <summary>Crea una copia de <see cref="T:System.Windows.Automation.CacheRequest" />.</summary>
      <returns>Copia modificable del objeto actual.</returns>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Pop">
      <summary>Quita el objeto <see cref="T:System.Windows.Automation.CacheRequest" /> activo de la pila interna para el subproceso actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se realizó un intento de quitar una solicitud de caché que no era la última insertada en la pila.</exception>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Push">
      <summary>Coloca <see cref="T:System.Windows.Automation.CacheRequest" /> en la pila de estado interna, que lo convierte en la solicitud activa en el subproceso actual.</summary>
    </member>
    <member name="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
      <summary>Obtiene o establece un valor que especifica si los elementos devueltos deben contener referencias completas a la interfaz de usuario (UI) subyacente o sólo información almacenada en caché.</summary>
      <returns>
        <see cref="F:System.Windows.Automation.AutomationElementMode.Full" /> si los elementos devueltos tienen una referencia completa a la interfaz de usuario (UI) subyacente; en caso contrario, <see cref="F:System.Windows.Automation.AutomationElementMode.None" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.CacheRequest.Current">
      <summary>Obtiene el objeto <see cref="T:System.Windows.Automation.CacheRequest" /> activo en el subproceso actual.</summary>
      <returns>Objeto <see cref="T:System.Windows.Automation.CacheRequest" /> activo.</returns>
    </member>
    <member name="P:System.Windows.Automation.CacheRequest.TreeFilter">
      <summary>Obtiene o establece un valor que especifica la vista del árbol de elementos de Automatización de la interfaz de usuario que se usará al almacenar en caché.</summary>
      <returns>Vista del árbol de elementos de Automatización de la interfaz de usuario. La vista predeterminada es <see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.CacheRequest.TreeScope">
      <summary>Obtiene o establece un valor que especifica si el almacenamiento en caché sólo se realiza para la raíz del subárbol o también para sus elementos secundarios o descendientes.</summary>
      <exception cref="T:System.ArgumentException">Se ha intentado establecer la propiedad en <see cref="F:System.Windows.Automation.TreeScope.Parent" /> o <see cref="F:System.Windows.Automation.TreeScope.Ancestors" />.</exception>
      <returns>Uno o varios de los miembros siguientes: <see cref="F:System.Windows.Automation.TreeScope.Element" />, <see cref="F:System.Windows.Automation.TreeScope.Children" />, <see cref="F:System.Windows.Automation.TreeScope.Descendants" /> o <see cref="F:System.Windows.Automation.TreeScope.Subtree" />. El valor predeterminado es <see cref="F:System.Windows.Automation.TreeScope.Element" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.ClientSettings">
      <summary>Contiene métodos que hacen que los proveedores de cliente estén disponibles para el cliente.</summary>
    </member>
    <member name="M:System.Windows.Automation.ClientSettings.RegisterClientSideProviderAssembly(System.Reflection.AssemblyName)">
      <summary>Registra un ensamblado que contiene proveedores del lado cliente.</summary>
      <param name="assemblyName">Nombre del ensamblado.</param>
      <exception cref="T:System.Windows.Automation.ProxyAssemblyNotLoadedException">No se pudo cargar el ensamblado.</exception>
    </member>
    <member name="M:System.Windows.Automation.ClientSettings.RegisterClientSideProviders(System.Windows.Automation.ClientSideProviderDescription[])">
      <summary>Registra los proveedores de cliente.</summary>
      <param name="clientSideProviderDescription">Matriz de descripciones del proveedor.</param>
      <exception cref="T:System.Windows.Automation.ProxyAssemblyNotLoadedException">No se pudo cargar el ensamblado.</exception>
    </member>
    <member name="T:System.Windows.Automation.ClientSideProviderDescription">
      <summary>Describe el ámbito de un proveedor de Automatización de la interfaz de usuario en el cliente para que se pueda registrar con la aplicación cliente Automatización de la interfaz de usuario.</summary>
    </member>
    <member name="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Automation.ClientSideProviderDescription" />.</summary>
      <param name="clientSideProviderFactoryCallback">Método que crea el proveedor de cliente para una ventana.</param>
      <param name="className">Nombre de clase de las ventanas para las que se utiliza el proveedor.</param>
    </member>
    <member name="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String,System.String,System.Windows.Automation.ClientSideProviderMatchIndicator)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Automation.ClientSideProviderDescription" />.</summary>
      <param name="clientSideProviderFactoryCallback">Método que crea el proveedor de cliente para una ventana.</param>
      <param name="className">Nombre de clase de la ventana para la que se utiliza el proveedor.</param>
      <param name="imageName">Nombre de la aplicación ejecutable o DLL para el proceso en el que reside la ventana.</param>
      <param name="flags">Marcadores que especifican el comportamiento al comparar nombres de clase de ventana.</param>
    </member>
    <member name="P:System.Windows.Automation.ClientSideProviderDescription.ClassName">
      <summary>Obtiene el nombre de clase de las ventanas para las que se utiliza el proveedor.</summary>
      <returns>Nombre de clase de la ventana.</returns>
    </member>
    <member name="P:System.Windows.Automation.ClientSideProviderDescription.ClientSideProviderFactoryCallback">
      <summary>Obtiene el método que crea el proveedor de cliente.</summary>
      <returns>Método de devolución de llamada.</returns>
    </member>
    <member name="P:System.Windows.Automation.ClientSideProviderDescription.Flags">
      <summary>Obtiene los marcadores que especifican el comportamiento al comparar nombres de clase de ventana.</summary>
      <returns>Combinación bit a bit de valores.</returns>
    </member>
    <member name="P:System.Windows.Automation.ClientSideProviderDescription.ImageName">
      <summary>Obtiene el nombre del archivo ejecutable o biblioteca de vínculos dinámicos (DLL) para el proceso en el que la ventana reside.</summary>
      <returns>El nombre de la imagen.</returns>
    </member>
    <member name="T:System.Windows.Automation.ClientSideProviderFactoryCallback">
      <summary>Representa el método que crea un proveedor de automatización de la interfaz de usuario en el cliente para una ventana.</summary>
      <param name="hwnd">Ventana para la que se crea el proveedor.</param>
      <param name="idChild">Identificador secundario del objeto.</param>
      <param name="idObject">Id. del objeto.</param>
    </member>
    <member name="T:System.Windows.Automation.ClientSideProviderMatchIndicator">
      <summary>Contiene valores que especifican el comportamiento cuando se comparan nombres de clase en <see cref="T:System.Windows.Automation.ClientSideProviderDescription" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.ClientSideProviderMatchIndicator.AllowSubstringMatch">
      <summary>Especifica que la comparación de subcadenas se utiliza para comparar los nombres de clase.</summary>
    </member>
    <member name="F:System.Windows.Automation.ClientSideProviderMatchIndicator.DisallowBaseClassNameMatch">
      <summary>Especifica que no se utiliza la clase base del objeto cuando se comparan nombres de clase de ventanas.</summary>
    </member>
    <member name="F:System.Windows.Automation.ClientSideProviderMatchIndicator.None">
      <summary>Sin marcadores especiales.</summary>
    </member>
    <member name="T:System.Windows.Automation.Condition">
      <summary>Tipo base de las condiciones usadas para el filtrado cuando se buscan elementos en el árbol de automatización de la interfaz de usuario.</summary>
    </member>
    <member name="F:System.Windows.Automation.Condition.FalseCondition">
      <summary>Representa un objeto <see cref="T:System.Windows.Automation.Condition" /> que siempre se evalúa como <see langword="false" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.Condition.TrueCondition">
      <summary>Representa un objeto <see cref="T:System.Windows.Automation.Condition" /> que siempre se evalúa como <see langword="true" />.</summary>
    </member>
    <member name="T:System.Windows.Automation.DockPattern">
      <summary>Representa controles que exponen sus propiedades de acoplamiento dentro de un contenedor de acoplamiento.</summary>
    </member>
    <member name="F:System.Windows.Automation.DockPattern.DockPositionProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.DockPattern.DockPatternInformation.DockPosition" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.DockPattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.DockPattern" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.DockPattern.SetDockPosition(System.Windows.Automation.DockPosition)">
      <summary>Acopla <see cref="T:System.Windows.Automation.AutomationElement" /> en el <see cref="T:System.Windows.Automation.DockPosition" /> solicitado dentro de un contenedor de acoplamiento.</summary>
      <param name="dockPosition">La posición de acoplamiento con respecto a los límites del contenedor de acoplamiento y otros elementos dentro del contenedor.</param>
      <exception cref="T:System.InvalidOperationException">Cuando un control no puede ejecutar el estilo de acoplamiento solicitado.</exception>
    </member>
    <member name="P:System.Windows.Automation.DockPattern.Cached">
      <summary>Obtiene los valores de la propiedad Automatización de la interfaz de usuario almacenados en caché para esta clase <see cref="T:System.Windows.Automation.DockPattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Estructura que contiene los valores de propiedades de Automatización de la interfaz de usuario almacenados en caché para el patrón de control.</returns>
    </member>
    <member name="P:System.Windows.Automation.DockPattern.Current">
      <summary>Obtiene los valores de propiedad Automatización de la interfaz de usuario actuales para este <see cref="T:System.Windows.Automation.DockPattern" />.</summary>
      <returns>Estructura que contiene los valores actuales de la propiedad Automatización de la interfaz de usuario para el patrón de control.</returns>
    </member>
    <member name="T:System.Windows.Automation.DockPattern.DockPatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.DockPattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.DockPattern.Current" /> o <see cref="P:System.Windows.Automation.DockPattern.Cached" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.DockPattern.DockPatternInformation.DockPosition">
      <summary>Recupera la enumeración <see cref="T:System.Windows.Automation.DockPosition" /> de <see cref="T:System.Windows.Automation.AutomationElement" /> dentro de un contenedor de acoplamiento.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.DockPosition" /> del elemento, respecto a los límites del contenedor de acoplamiento y otros elementos del contenedor.</returns>
    </member>
    <member name="T:System.Windows.Automation.ExpandCollapsePattern">
      <summary>Representa los controles que se expanden visualmente para mostrar contenido y se contraen para ocultarlo.</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapseStateProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation.ExpandCollapseState" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapsePattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.ExpandCollapsePattern" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.ExpandCollapsePattern.Collapse">
      <summary>Oculta todos los nodos descendientes, los controles o el contenido de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llama a <see cref="M:System.Windows.Automation.ExpandCollapsePattern.Collapse" /> cuando <see cref="T:System.Windows.Automation.ExpandCollapseState" /> = <see cref="F:System.Windows.Automation.ExpandCollapseState.LeafNode" />.</exception>
    </member>
    <member name="M:System.Windows.Automation.ExpandCollapsePattern.Expand">
      <summary>Presenta todos los nodos secundarios, controles o contenido de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llama a <see cref="M:System.Windows.Automation.ExpandCollapsePattern.Expand" /> cuando <see cref="T:System.Windows.Automation.ExpandCollapseState" /> = <see cref="F:System.Windows.Automation.ExpandCollapseState.LeafNode" />.</exception>
    </member>
    <member name="P:System.Windows.Automation.ExpandCollapsePattern.Cached">
      <summary>Obtiene los valores de la propiedad Automatización de la interfaz de usuario almacenados en caché para esta clase <see cref="T:System.Windows.Automation.ExpandCollapsePattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Estructura que contiene los valores de propiedades de Automatización de la interfaz de usuario almacenados en caché para el patrón de control.</returns>
    </member>
    <member name="P:System.Windows.Automation.ExpandCollapsePattern.Current">
      <summary>Obtiene los valores de propiedad Automatización de la interfaz de usuario actuales para este <see cref="T:System.Windows.Automation.ExpandCollapsePattern" />.</summary>
      <returns>Estructura que contiene los valores actuales de la propiedad Automatización de la interfaz de usuario para el patrón de control.</returns>
    </member>
    <member name="T:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.ExpandCollapsePattern.Current" /> o <see cref="P:System.Windows.Automation.ExpandCollapsePattern.Cached" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation.ExpandCollapseState">
      <summary>Obtiene <see cref="T:System.Windows.Automation.ExpandCollapseState" /> de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.ExpandCollapseState" /> de <see cref="T:System.Windows.Automation.AutomationElement" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.GridItemPattern">
      <summary>Representa los controles secundarios de los contenedores que admiten <see cref="T:System.Windows.Automation.GridPattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.ColumnProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.Column" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.ColumnSpanProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.ColumnSpan" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.ContainingGridProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.ContainingGrid" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.GridItemPattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.RowProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.Row" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.RowSpanProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.RowSpan" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.Cached">
      <summary>Obtiene los valores de propiedad almacenados en caché para <see cref="T:System.Windows.Automation.GridItemPattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Los valores de propiedad almacenados en caché.</returns>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.Current">
      <summary>Obtiene los valores de propiedades actuales para <see cref="T:System.Windows.Automation.GridItemPattern" />.</summary>
      <returns>Los valores de propiedad actuales.</returns>
    </member>
    <member name="T:System.Windows.Automation.GridItemPattern.GridItemPatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.GridItemPattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.GridItemPattern.Current" /> o <see cref="P:System.Windows.Automation.GridItemPattern.Cached" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.Column">
      <summary>Obtiene el número ordinal de la columna que contiene la celda o elemento.</summary>
      <returns>Número ordinal de base cero que identifica la columna que contiene la celda o elemento. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.ColumnSpan">
      <summary>Obtiene el número de columnas que abarca una celda o elemento.</summary>
      <returns>Número de columnas abarcado. El valor predeterminado es 1.</returns>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.ContainingGrid">
      <summary>Obtiene un elemento de Automatización de la interfaz de usuario que admite <see cref="T:System.Windows.Automation.GridPattern" /> y representa el contenedor de la celda o elemento.</summary>
      <returns>Un elemento de Automatización de la interfaz de usuario que admite el GridPattern y representa el contenedor de la celda o elemento. El valor predeterminado es una referencia nula ( <see langword="Nothing" /> en Microsoft Visual Basic .net).</returns>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.Row">
      <summary>Obtiene el número ordinal de la fila que contiene la celda o elemento.</summary>
      <returns>Número ordinal de base cero que identifica la fila que contiene el elemento o la celda de tabla. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.RowSpan">
      <summary>Obtiene el número de filas que abarca una celda o elemento.</summary>
      <returns>Número de filas abarcado. El valor predeterminado es 1.</returns>
    </member>
    <member name="T:System.Windows.Automation.GridPattern">
      <summary>Representa controles que actúan como contenedores para una colección de elementos secundarios. Los elementos secundarios de este control admiten <see cref="T:System.Windows.Automation.GridItemPattern" /> se organizan en un sistema de coordenadas lógico bidimensional que se puede atravesar por filas y columnas.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridPattern.ColumnCountProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridPattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.GridPattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridPattern.RowCountProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.GridPattern.GetItem(System.Int32,System.Int32)">
      <summary>Recupera un <see cref="T:System.Windows.Automation.AutomationElement" /> que representa la celda especificada.</summary>
      <param name="row">Número ordinal de la fila de interés.</param>
      <param name="column">Número ordinal de la columna de interés.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La coordenada de fila o columna solicitada es menor que cero.

o bien

La coordenada de la fila solicitada es mayor que <see cref="P:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount" /> o la coordenada de la columna es mayor que <see cref="P:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount" />.</exception>
      <returns>Un <see cref="T:System.Windows.Automation.AutomationElement" /> que representa la celda recuperada.</returns>
    </member>
    <member name="P:System.Windows.Automation.GridPattern.Cached">
      <summary>Obtiene los valores de la propiedad Automatización de la interfaz de usuario almacenados en caché para esta clase <see cref="T:System.Windows.Automation.GridPattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Estructura que contiene los valores de propiedades de Automatización de la interfaz de usuario almacenados en caché para el patrón de control.</returns>
    </member>
    <member name="P:System.Windows.Automation.GridPattern.Current">
      <summary>Obtiene los valores de propiedad Automatización de la interfaz de usuario actuales para este <see cref="T:System.Windows.Automation.GridPattern" />.</summary>
      <returns>Estructura que contiene los valores actuales de la propiedad Automatización de la interfaz de usuario para el patrón de control.</returns>
    </member>
    <member name="T:System.Windows.Automation.GridPattern.GridPatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.GridPattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.GridPattern.Current" /> o <see cref="P:System.Windows.Automation.GridPattern.Cached" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount">
      <summary>Obtiene el número de columnas de una cuadrícula.</summary>
      <returns>Número total de columnas de una cuadrícula.</returns>
    </member>
    <member name="P:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount">
      <summary>Obtiene el número total de filas de una cuadrícula.</summary>
      <returns>Número total de filas de una cuadrícula.</returns>
    </member>
    <member name="T:System.Windows.Automation.InvokePattern">
      <summary>Representa los controles que inician o realizan una única acción inequívoca y que no mantienen el estado cuando se activan.</summary>
    </member>
    <member name="F:System.Windows.Automation.InvokePattern.InvokedEvent">
      <summary>Identifica el evento que se genera cuando se invoca o activa un control.</summary>
    </member>
    <member name="F:System.Windows.Automation.InvokePattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.InvokePattern" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.InvokePattern.Invoke">
      <summary>Envía una solicitud para activar un control e iniciar su acción única e inequívoca.</summary>
      <exception cref="T:System.InvalidOperationException">El elemento no admite el patrón de control <see cref="T:System.Windows.Automation.InvokePattern" />, o está oculto o bloqueado.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">El elemento no está habilitado. Se puede generar si un proveedor de UI Automation implementó su propio control de la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />.</exception>
    </member>
    <member name="T:System.Windows.Automation.ItemContainerPattern">
      <summary>Representa un objeto que administra elementos y admite la recuperación de un elemento mediante el valor de propiedad.</summary>
    </member>
    <member name="F:System.Windows.Automation.ItemContainerPattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.ItemContainerPattern" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.ItemContainerPattern.FindItemByProperty(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationProperty,System.Object)">
      <summary>Recupera un elemento por el valor de propiedad especificado.</summary>
      <param name="startAfter">Elemento del contenedor después del cual se inicia la búsqueda.</param>
      <param name="property">Propiedad que contiene el valor que se va a recuperar.</param>
      <param name="value">Valor que se va a recuperar.</param>
      <returns>Devuelve el primer elemento que coincide con el criterio de búsqueda; si no se encuentran coincidencias, devuelve <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.MultipleViewPattern">
      <summary>Representa controles que proporcionan varias representaciones del mismo conjunto de información o controles secundarios y pueden cambiar entre ellas.</summary>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPattern.CurrentViewProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation.CurrentView" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.MultipleViewPattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPattern.SupportedViewsProperty">
      <summary>Identifica la propiedad que obtiene la colección de vistas específica del control.</summary>
    </member>
    <member name="M:System.Windows.Automation.MultipleViewPattern.GetViewName(System.Int32)">
      <summary>Recupera el nombre de una vista específica del control.</summary>
      <param name="viewId">Identificador de la vista específica del control.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" /> no es un miembro de la colección de vistas admitidas.</exception>
      <returns>Cadena adaptada que representa el nombre de la vista específica del control.</returns>
    </member>
    <member name="M:System.Windows.Automation.MultipleViewPattern.SetCurrentView(System.Int32)">
      <summary>Establece la vista específica del control actual.</summary>
      <param name="viewId">Identificador de la vista específica del control.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" /> no es un miembro de la colección de vistas admitidas.</exception>
    </member>
    <member name="P:System.Windows.Automation.MultipleViewPattern.Cached">
      <summary>Obtiene los valores de la propiedad Automatización de la interfaz de usuario almacenados en caché para esta clase <see cref="T:System.Windows.Automation.MultipleViewPattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Estructura que contiene los valores de propiedades de Automatización de la interfaz de usuario almacenados en caché para el patrón de control.</returns>
    </member>
    <member name="P:System.Windows.Automation.MultipleViewPattern.Current">
      <summary>Obtiene los valores de propiedad Automatización de la interfaz de usuario actuales para este <see cref="T:System.Windows.Automation.MultipleViewPattern" />.</summary>
      <returns>Estructura que contiene los valores actuales de la propiedad Automatización de la interfaz de usuario para el patrón de control.</returns>
    </member>
    <member name="T:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.MultipleViewPattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.MultipleViewPattern.Current" /> o <see cref="P:System.Windows.Automation.MultipleViewPattern.Cached" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation.GetSupportedViews">
      <summary>Recupera una colección de identificadores de vista específicos del control.</summary>
      <returns>Una colección de valores enteros que identifica las vistas disponibles para un <see cref="T:System.Windows.Automation.AutomationElement" />. El valor predeterminado es una matriz de enteros.</returns>
    </member>
    <member name="P:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation.CurrentView">
      <summary>Recupera la vista específica del control actual.</summary>
      <returns>El valor entero para la vista actual del <see cref="T:System.Windows.Automation.AutomationElement" />. El valor predeterminado es 0.</returns>
    </member>
    <member name="T:System.Windows.Automation.NotCondition">
      <summary>Representa una clase <see cref="T:System.Windows.Automation.Condition" /> que es el negativo de una clase <see cref="T:System.Windows.Automation.Condition" />especificada.</summary>
    </member>
    <member name="M:System.Windows.Automation.NotCondition.#ctor(System.Windows.Automation.Condition)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Automation.NotCondition" />.</summary>
      <param name="condition">Condición que se debe negar.</param>
    </member>
    <member name="P:System.Windows.Automation.NotCondition.Condition">
      <summary>Obtiene la clase <see cref="T:System.Windows.Automation.Condition" /> que <see cref="T:System.Windows.Automation.NotCondition" /> niega.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Condition" /> que <see cref="T:System.Windows.Automation.NotCondition" /> niega.</returns>
    </member>
    <member name="T:System.Windows.Automation.OrCondition">
      <summary>Representa una combinación de dos o más condiciones donde existe una coincidencia si cualquiera de las condiciones es verdadera.</summary>
    </member>
    <member name="M:System.Windows.Automation.OrCondition.#ctor(System.Windows.Automation.Condition[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Automation.OrCondition" />.</summary>
      <param name="conditions">Dos o más condiciones, cualquiera de las cuales puede cumplirse en una coincidencia.</param>
    </member>
    <member name="M:System.Windows.Automation.OrCondition.GetConditions">
      <summary>Recupera las condiciones que se combinan en esta condición.</summary>
      <returns>Condiciones combinadas en esta condición.</returns>
    </member>
    <member name="T:System.Windows.Automation.PropertyCondition">
      <summary>Representa una clase <see cref="T:System.Windows.Automation.Condition" /> que prueba si una propiedad tiene un valor especificado.</summary>
    </member>
    <member name="M:System.Windows.Automation.PropertyCondition.#ctor(System.Windows.Automation.AutomationProperty,System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Automation.PropertyCondition" />.</summary>
      <param name="property">Propiedad que se debe probar.</param>
      <param name="value">Valor que se va probar para la propiedad.</param>
    </member>
    <member name="M:System.Windows.Automation.PropertyCondition.#ctor(System.Windows.Automation.AutomationProperty,System.Object,System.Windows.Automation.PropertyConditionFlags)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Automation.PropertyCondition" /> con marcadores.</summary>
      <param name="property">Propiedad que se debe probar.</param>
      <param name="value">Valor que se va probar para la propiedad.</param>
      <param name="flags">Marcadores que afectan a la comparación.</param>
    </member>
    <member name="P:System.Windows.Automation.PropertyCondition.Flags">
      <summary>Obtiene los marcadores utilizados para probar el valor de propiedad.</summary>
    </member>
    <member name="P:System.Windows.Automation.PropertyCondition.Property">
      <summary>Obtiene la propiedad que esta condición va a probar.</summary>
    </member>
    <member name="P:System.Windows.Automation.PropertyCondition.Value">
      <summary>Obtiene el valor de propiedad que esta condición va a probar.</summary>
    </member>
    <member name="T:System.Windows.Automation.PropertyConditionFlags">
      <summary>Contiene valores que especifican cómo se prueba el valor de una propiedad en <see cref="T:System.Windows.Automation.PropertyCondition" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.PropertyConditionFlags.IgnoreCase">
      <summary>Especifica que la comparación con un valor de propiedad de la cadena no distingue entre mayúsculas y minúsculas.</summary>
    </member>
    <member name="F:System.Windows.Automation.PropertyConditionFlags.None">
      <summary>Especifica que el valor de propiedad se prueba utilizando el comportamiento predeterminado (comparación de cadenas con distinción entre mayúsculas y minúsculas).</summary>
    </member>
    <member name="T:System.Windows.Automation.RangeValuePattern">
      <summary>Representa un control que puede estar establecido en un valor dentro de un intervalo.</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.IsReadOnlyProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.IsReadOnly" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.LargeChangeProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.MaximumProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.MinimumProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.RangeValuePattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.SmallChangeProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.ValueProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.RangeValuePattern.SetValue(System.Double)">
      <summary>Establece el valor asociado al elemento Automatización de la interfaz de usuario.</summary>
      <param name="value">Nuevo valor del elemento.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> es menor que el mínimo o mayor que el valor máximo del elemento.</exception>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.Cached">
      <summary>Obtiene los valores de propiedad almacenados en caché para <see cref="T:System.Windows.Automation.RangeValuePattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Los valores de propiedad almacenados en caché.</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.Current">
      <summary>Obtiene los valores de propiedades actuales para <see cref="T:System.Windows.Automation.RangeValuePattern" />.</summary>
      <returns>Los valores de propiedad actuales.</returns>
    </member>
    <member name="T:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.RangeValuePattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.TransformPattern.Current" /> o <see cref="P:System.Windows.Automation.TransformPattern.Cached" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.IsReadOnly">
      <summary>Obtiene un valor que especifica si el valor de un elemento Automatización de la interfaz de usuario es de solo lectura.</summary>
      <returns>
        <see langword="true" /> si el valor es de solo lectura; <see langword="false" /> si se puede modificar. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange">
      <summary>Obtiene el valor de cambio grande específico del control que se suma a la propiedad <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> o se resta de ella.</summary>
      <returns>Valor de cambio grande o <see langword="null" /> si el elemento no admite <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange" />. El valor predeterminado es 0.0.</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum">
      <summary>Obtiene el valor máximo del intervalo que el elemento Automatización de la interfaz de usuario admite.</summary>
      <returns>Valor máximo admitido por el Automatización de la interfaz de usuario elemento o <see langword="null" /> si el elemento no admite <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum" /> . El valor predeterminado es 0.0.</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum">
      <summary>Obtiene el valor mínimo del intervalo que el elemento Automatización de la interfaz de usuario admite.</summary>
      <returns>Valor mínimo admitido por el Automatización de la interfaz de usuario elemento o <see langword="null" /> si el elemento no admite <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum" /> . El valor predeterminado es 0.0.</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange">
      <summary>Obtiene el valor de cambio pequeño, único para el elemento de Automatización de la interfaz de usuario, que se suma a la propiedad <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" /> de los elementos o se resta de ella.</summary>
      <returns>Valor de cambio pequeño único del Automatización de la interfaz de usuario elemento o <see langword="null" /> si el elemento no admite <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange" /> . El valor predeterminado es 0.0.</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value">
      <summary>Obtiene el valor actual del elemento de Automatización de la interfaz de usuario.</summary>
      <returns>Valor actual del Automatización de la interfaz de usuario elemento o <see langword="null" /> si el elemento no admite <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" /> . El valor predeterminado es 0.0.</returns>
    </member>
    <member name="T:System.Windows.Automation.ScrollItemPattern">
      <summary>Representa los controles secundarios de los contenedores que admiten el patrón de control <see cref="T:System.Windows.Automation.ScrollPattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollItemPattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.ScrollItemPattern" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.ScrollItemPattern.ScrollIntoView">
      <summary>Desplaza el área de contenido de un objeto contenedor para presentar el objeto <see cref="T:System.Windows.Automation.AutomationElement" /> dentro del área visible (ventanilla) del contenedor.</summary>
      <exception cref="T:System.InvalidOperationException">El elemento no se pudo desplazar en la vista.</exception>
    </member>
    <member name="T:System.Windows.Automation.ScrollPattern">
      <summary>Representa controles que actúan como contenedores desplazables para una colección de elementos secundarios. Los elementos secundarios de este elemento admiten <see cref="T:System.Windows.Automation.ScrollItemPattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.HorizontallyScrollableProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontallyScrollable" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.HorizontalScrollPercentProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalScrollPercent" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.HorizontalViewSizeProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalViewSize" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.NoScroll">
      <summary>Especifica que el desplazamiento no debe realizarse.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.ScrollPattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.VerticallyScrollableProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticallyScrollable" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.VerticalScrollPercentProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalScrollPercent" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.VerticalViewSizeProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalViewSize" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.ScrollPattern.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>Desplaza la región visible del área de contenido horizontal y verticalmente.</summary>
      <param name="horizontalAmount">Incremento horizontal específico del control. <see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" /> se debe pasar si el control no puede desplazarse en esta dirección.</param>
      <param name="verticalAmount">Incremento vertical específico del control. <see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" /> se debe pasar si el control no puede desplazarse en esta dirección.</param>
      <exception cref="T:System.ArgumentException">Un control admite valores <see cref="F:System.Windows.Automation.ScrollAmount.SmallIncrement" /> exclusivamente para el desplazamiento horizontal o vertical, pero se pasa un valor <see cref="F:System.Windows.Automation.ScrollAmount.LargeIncrement" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se realiza un intento para desplazarse en una dirección no admitida.</exception>
    </member>
    <member name="M:System.Windows.Automation.ScrollPattern.ScrollHorizontal(System.Windows.Automation.ScrollAmount)">
      <summary>Desplaza de forma horizontal la región actualmente visible del área de contenido, según el valor especificado de <see cref="T:System.Windows.Automation.ScrollAmount" />.</summary>
      <param name="amount">El incremento <see cref="T:System.Windows.Automation.ScrollAmount" /> horizontal concreto del control.</param>
      <exception cref="T:System.ArgumentException">Si un control admite valores <see cref="F:System.Windows.Automation.ScrollAmount.SmallIncrement" /> exclusivamente para el desplazamiento horizontal o vertical, pero se pasa un valor <see cref="F:System.Windows.Automation.ScrollAmount.LargeIncrement" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se realiza un intento para desplazarse en una dirección no admitida.</exception>
    </member>
    <member name="M:System.Windows.Automation.ScrollPattern.ScrollVertical(System.Windows.Automation.ScrollAmount)">
      <summary>Desplaza de forma vertical la región actualmente visible del área de contenido, según el valor especificado de <see cref="T:System.Windows.Automation.ScrollAmount" />.</summary>
      <param name="amount">El incremento <see cref="T:System.Windows.Automation.ScrollAmount" /> vertical concreto del control.</param>
      <exception cref="T:System.ArgumentException">Si un control admite valores <see cref="F:System.Windows.Automation.ScrollAmount.SmallIncrement" /> exclusivamente para el desplazamiento horizontal o vertical, pero se pasa un valor <see cref="F:System.Windows.Automation.ScrollAmount.LargeIncrement" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se realiza un intento para desplazarse en una dirección no admitida.</exception>
    </member>
    <member name="M:System.Windows.Automation.ScrollPattern.SetScrollPercent(System.Double,System.Double)">
      <summary>Establece la posición de desplazamiento horizontal y/o vertical como un porcentaje del área de contenido total en el <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <param name="horizontalPercent">Porcentaje del área de contenido horizontal total. <see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" /> se debe pasar si el control no puede desplazarse en esta dirección.</param>
      <param name="verticalPercent">Porcentaje del área de contenido vertical total. <see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" /> se debe pasar si el control no puede desplazarse en esta dirección.</param>
      <exception cref="T:System.ArgumentException">Se pasó un valor que no se puede convertir en un doble.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Se pasó un valor mayor que 100 o menor que 0 (excepto -1, que equivale a <see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" />). Los valores de <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalScrollPercent" /> y <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalScrollPercent" /> se normalizan al 0% o al 100%.</exception>
      <exception cref="T:System.InvalidOperationException">Se realiza un intento para desplazarse en una dirección no admitida.</exception>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.Cached">
      <summary>Obtiene los valores de la propiedad Automatización de la interfaz de usuario almacenados en caché para esta clase <see cref="T:System.Windows.Automation.ScrollPattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Estructura que contiene los valores de propiedades de Automatización de la interfaz de usuario almacenados en caché para el patrón de control.</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.Current">
      <summary>Obtiene los valores de propiedad Automatización de la interfaz de usuario actuales para este <see cref="T:System.Windows.Automation.ScrollPattern" />.</summary>
      <returns>Estructura que contiene los valores actuales de la propiedad Automatización de la interfaz de usuario para el patrón de control.</returns>
    </member>
    <member name="T:System.Windows.Automation.ScrollPattern.ScrollPatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.ScrollPattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.ScrollPattern.Current" /> o <see cref="P:System.Windows.Automation.ScrollPattern.Cached" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontallyScrollable">
      <summary>Recupera un valor que indica si el elemento de automatización de la interfaz de usuario se puede desplazar verticalmente.</summary>
      <returns>
        <see langword="true" /> si el elemento de automatización de la interfaz de usuario se puede desplazar horizontalmente; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalScrollPercent">
      <summary>Obtiene la posición de desplazamiento horizontal actual.</summary>
      <returns>Posición de desplazamiento horizontal como porcentaje del área total de contenido del elemento de automatización de la interfaz de usuario. El valor predeterminado es 0.0.</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalViewSize">
      <summary>Obtiene el tamaño de la vista horizontal actual.</summary>
      <returns>Tamaño horizontal de la región visible como porcentaje del área total de contenido del elemento de Automatización de la interfaz de usuario. El valor predeterminado es 100,0.</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticallyScrollable">
      <summary>Recupera un valor que indica si el elemento de UI Automation se puede desplazar verticalmente.</summary>
      <returns>
        <see langword="true" /> si el elemento de automatización de la interfaz de usuario se puede desplazar horizontalmente; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalScrollPercent">
      <summary>Obtiene la posición de desplazamiento vertical actual.</summary>
      <returns>Posición de desplazamiento vertical como porcentaje del área total de contenido del elemento de UI Automation. El valor predeterminado es 0.0.</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalViewSize">
      <summary>Obtiene el tamaño de la vista vertical actual.</summary>
      <returns>Tamaño vertical de la región visible como porcentaje del área total de contenido del elemento de UI Automation. El valor predeterminado es 100,0.</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionItemPattern">
      <summary>Representa los elementos secundarios seleccionables de los controles de contenedor que admiten <see cref="T:System.Windows.Automation.SelectionPattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.ElementAddedToSelectionEvent">
      <summary>Identifica el evento que se desencadena cuando se agrega un elemento a una colección de elementos seleccionados.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.ElementRemovedFromSelectionEvent">
      <summary>Identifica el evento que se desencadena cuando se quita un elemento de una colección de elementos seleccionados.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.ElementSelectedEvent">
      <summary>Identifica el evento que se desencadena cuando una llamada a <see cref="M:System.Windows.Automation.SelectionItemPattern.Select" />, <see cref="M:System.Windows.Automation.SelectionItemPattern.AddToSelection" /> o <see cref="M:System.Windows.Automation.SelectionItemPattern.RemoveFromSelection" /> da como resultado un único elemento seleccionado.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.IsSelectedProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation.IsSelected" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.SelectionItemPattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.SelectionContainerProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation.SelectionContainer" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.SelectionItemPattern.AddToSelection">
      <summary>Agrega el elemento actual a la colección de elementos seleccionados.</summary>
      <exception cref="T:System.InvalidOperationException">Se realiza un intento de agregar una selección a un contenedor de selección única en el que ya hay otro elemento seleccionado y <see cref="F:System.Windows.Automation.SelectionPattern.CanSelectMultipleProperty" /> = <see langword="false" />.</exception>
    </member>
    <member name="M:System.Windows.Automation.SelectionItemPattern.RemoveFromSelection">
      <summary>Quita el elemento actual de la colección de elementos seleccionados.</summary>
      <exception cref="T:System.InvalidOperationException">Se realiza un intento de quitar una selección de un contenedor de selección en el que hay un elemento seleccionado y <see cref="F:System.Windows.Automation.SelectionPattern.IsSelectionRequiredProperty" /> = <see langword="true" />.</exception>
    </member>
    <member name="M:System.Windows.Automation.SelectionItemPattern.Select">
      <summary>Anula la selección de los elementos seleccionados y, después, selecciona el elemento actual.</summary>
    </member>
    <member name="P:System.Windows.Automation.SelectionItemPattern.Cached">
      <summary>Obtiene los valores de propiedad almacenados en caché para <see cref="T:System.Windows.Automation.SelectionItemPattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Los valores de propiedad almacenados en caché.</returns>
    </member>
    <member name="P:System.Windows.Automation.SelectionItemPattern.Current">
      <summary>Obtiene los valores de propiedades actuales para <see cref="T:System.Windows.Automation.SelectionItemPattern" />.</summary>
      <returns>Los valores de propiedad actuales.</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.SelectionItemPattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.SelectionItemPattern.Current" /> o <see cref="P:System.Windows.Automation.SelectionItemPattern.Cached" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation.IsSelected">
      <summary>Obtiene un valor que indica si un elemento está seleccionado.</summary>
      <returns>
        <see langword="true" /> si el elemento está seleccionado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation.SelectionContainer">
      <summary>Obtiene el <see cref="T:System.Windows.Automation.AutomationElement" /> que admite el patrón de control <see cref="T:System.Windows.Automation.SelectionPattern" /> y actúa como contenedor para el objeto que realiza la llamada.</summary>
      <returns>Objeto contenedor. El valor predeterminado es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionPattern">
      <summary>Representa un control que actúa como contenedor para una colección de elementos secundarios seleccionables. Los elementos secundarios de este elemento admiten el <see cref="T:System.Windows.Automation.SelectionItemPattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.CanSelectMultipleProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.CanSelectMultiple" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.InvalidatedEvent">
      <summary>Identifica el evento que se genera cuando una selección de un contenedor ha cambiado de manera considerable y requiere el envío de más eventos de adición y eliminación de lo que permite la constante <see cref="F:System.Windows.Automation.Provider.AutomationInteropProvider.InvalidateLimit" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.IsSelectionRequiredProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.IsSelectionRequired" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.SelectionPattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.SelectionProperty">
      <summary>Identifica la propiedad que obtiene los elementos seleccionados en un contenedor.</summary>
    </member>
    <member name="P:System.Windows.Automation.SelectionPattern.Cached">
      <summary>Obtiene los valores de la propiedad Automatización de la interfaz de usuario almacenados en caché para esta clase <see cref="T:System.Windows.Automation.SelectionPattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Estructura que contiene los valores de propiedades de Automatización de la interfaz de usuario almacenados en caché para el patrón de control.</returns>
    </member>
    <member name="P:System.Windows.Automation.SelectionPattern.Current">
      <summary>Obtiene los valores de propiedad Automatización de la interfaz de usuario actuales para este <see cref="T:System.Windows.Automation.SelectionPattern" />.</summary>
      <returns>Estructura que contiene los valores actuales de la propiedad Automatización de la interfaz de usuario para el patrón de control.</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionPattern.SelectionPatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.SelectionPattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.SelectionPattern.Current" /> o <see cref="P:System.Windows.Automation.SelectionPattern.Cached" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.GetSelection">
      <summary>Recupera todos los elementos seleccionados en el contenedor de selección.</summary>
      <returns>Colección de elementos seleccionados. El valor predeterminado es una matriz vacía.</returns>
    </member>
    <member name="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.CanSelectMultiple">
      <summary>Obtiene un valor que especifica si el contenedor permite la selección de más de un elemento secundario simultáneamente.</summary>
      <returns>Es <see langword="true" /> si el control admite la selección múltiple; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.IsSelectionRequired">
      <summary>Obtiene un valor que especifica si el contenedor requiere que se seleccione al menos un elemento secundario.</summary>
      <returns>
        <see langword="true" /> si el control requiere que se seleccione al menos un elemento; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.SynchronizedInputPattern">
      <summary>Representa objetos que admiten eventos de entrada sincronizados.</summary>
    </member>
    <member name="F:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent">
      <summary>Identifica el evento generado cuando WPF descarta la entrada.</summary>
    </member>
    <member name="F:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent">
      <summary>Identifica el evento que se generó cuando la entrada la recibió un elemento distinto del que escucha actualmente la entrada.</summary>
    </member>
    <member name="F:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent">
      <summary>Identifica el evento que se generó cuando la entrada la recibió el elemento que escucha actualmente la entrada.</summary>
    </member>
    <member name="F:System.Windows.Automation.SynchronizedInputPattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.SynchronizedInputPattern" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.SynchronizedInputPattern.Cancel">
      <summary>Detiene la escucha de entradas.</summary>
    </member>
    <member name="M:System.Windows.Automation.SynchronizedInputPattern.StartListening(System.Windows.Automation.SynchronizedInputType)">
      <summary>Designa que el proveedor comienza a escuchar entradas del tipo especificado.</summary>
      <param name="inputType">Tipo de entrada que se va a escuchar.</param>
    </member>
    <member name="T:System.Windows.Automation.TableItemPattern">
      <summary>Representa los controles secundarios de los contenedores que admiten <see cref="T:System.Windows.Automation.TablePattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.TableItemPattern.ColumnHeaderItemsProperty">
      <summary>Identifica la propiedad que recupera todos los encabezados de columna asociados a un elemento o una celda de la tabla.</summary>
    </member>
    <member name="F:System.Windows.Automation.TableItemPattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.TableItemPattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.TableItemPattern.RowHeaderItemsProperty">
      <summary>Identifica la propiedad que recupera todos los encabezados de fila asociados a un elemento o una celda de la tabla.</summary>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.Cached">
      <summary>Obtiene los valores de propiedad almacenados en caché para <see cref="T:System.Windows.Automation.TableItemPattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Los valores de propiedad almacenados en caché.</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.Current">
      <summary>Obtiene los valores de propiedades actuales para <see cref="T:System.Windows.Automation.TableItemPattern" />.</summary>
      <returns>Los valores de propiedad actuales.</returns>
    </member>
    <member name="T:System.Windows.Automation.TableItemPattern.TableItemPatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.TableItemPattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.TableItemPattern.Current" /> o <see cref="P:System.Windows.Automation.TableItemPattern.Cached" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.GetColumnHeaderItems">
      <summary>Recupera todos los encabezados de columna asociados a un elemento o celda de tabla.</summary>
      <returns>Una colección de elementos de encabezado de columna. El valor predeterminado es una matriz vacía.</returns>
    </member>
    <member name="M:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.GetRowHeaderItems">
      <summary>Recupera todos los encabezados de fila asociados a un elemento o celda de tabla.</summary>
      <returns>Una colección de elementos de encabezado de fila. El valor predeterminado es una matriz vacía.</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.Column">
      <summary>Obtiene el número ordinal de la columna que contiene el elemento o celda de tabla.</summary>
      <returns>Un número ordinal de base cero que representa la columna que contiene el elemento o celda de tabla.</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.ColumnSpan">
      <summary>Obtiene el número de columnas abarcado por un elemento o celda de tabla.</summary>
      <returns>Número de columnas abarcado. El valor predeterminado es 1.</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.ContainingGrid">
      <summary>Obtiene un elemento Automatización de la interfaz de usuario que admite el patrón de control GridPattern y representa el contenedor de elementos o la celda de la tabla.</summary>
      <returns>Elemento Automatización de la interfaz de usuario que admite el patrón de control GridPattern y representa el contenedor de elementos o la celda de la tabla.</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.Row">
      <summary>Obtiene el número ordinal de la fila que contiene el elemento o celda de tabla.</summary>
      <returns>Un número ordinal de base cero que representa la columna que contiene el elemento o celda de tabla.</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.RowSpan">
      <summary>Obtiene el número de filas abarcado por un elemento o celda de tabla.</summary>
      <returns>Número de columnas abarcado. El valor predeterminado es 1.</returns>
    </member>
    <member name="T:System.Windows.Automation.TablePattern">
      <summary>Representa controles que actúan como contenedores para una colección de elementos secundarios. Los elementos secundarios de este elemento admiten <see cref="T:System.Windows.Automation.TableItemPattern" /> se organizan en un sistema de coordenadas lógico bidimensional que se puede atravesar por filas y columnas.</summary>
    </member>
    <member name="F:System.Windows.Automation.TablePattern.ColumnHeadersProperty">
      <summary>Identifica la propiedad que obtiene la colección de encabezados de columna para una tabla.</summary>
    </member>
    <member name="F:System.Windows.Automation.TablePattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.TablePattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.TablePattern.RowHeadersProperty">
      <summary>Identifica la propiedad que obtiene la colección de encabezados de fila para una tabla.</summary>
    </member>
    <member name="F:System.Windows.Automation.TablePattern.RowOrColumnMajorProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.TablePattern.TablePatternInformation.RowOrColumnMajor" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.Cached">
      <summary>Obtiene los valores de la propiedad Automatización de la interfaz de usuario almacenados en caché para esta clase <see cref="T:System.Windows.Automation.TablePattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Estructura que contiene los valores de propiedades de Automatización de la interfaz de usuario almacenados en caché para el patrón de control.</returns>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.Current">
      <summary>Obtiene los valores de propiedad Automatización de la interfaz de usuario actuales para este <see cref="T:System.Windows.Automation.TablePattern" />.</summary>
    </member>
    <member name="T:System.Windows.Automation.TablePattern.TablePatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.TablePattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.TablePattern.Current" /> o <see cref="P:System.Windows.Automation.TablePattern.Cached" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.TablePattern.TablePatternInformation.GetColumnHeaders">
      <summary>Recupera una colección de objetos <see cref="T:System.Windows.Automation.AutomationElement" /> que representa todos los encabezados de columna de una tabla.</summary>
      <returns>Una colección de <see cref="T:System.Windows.Automation.AutomationElement" />. El valor predeterminado es una matriz vacía.</returns>
    </member>
    <member name="M:System.Windows.Automation.TablePattern.TablePatternInformation.GetRowHeaders">
      <summary>Recupera una colección de objetos <see cref="T:System.Windows.Automation.AutomationElement" /> que representa todos los encabezados de fila de una tabla.</summary>
      <returns>Una colección de <see cref="T:System.Windows.Automation.AutomationElement" />. El valor predeterminado es una matriz vacía.</returns>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.TablePatternInformation.ColumnCount">
      <summary>Obtiene el número total de columnas de una tabla.</summary>
      <returns>El número total de columnas de una tabla. El valor predeterminado es cero.</returns>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.TablePatternInformation.RowCount">
      <summary>Obtiene el número total de filas de una tabla.</summary>
      <returns>El número total de filas de una tabla. El valor predeterminado es cero.</returns>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.TablePatternInformation.RowOrColumnMajor">
      <summary>Recupera la dirección principal de exploración transversal (<see cref="F:System.Windows.Automation.RowOrColumnMajor.ColumnMajor" />, <see cref="F:System.Windows.Automation.RowOrColumnMajor.RowMajor" />, <see cref="F:System.Windows.Automation.RowOrColumnMajor.Indeterminate" />) para la tabla.</summary>
      <returns>Dirección primaria de exploración transversal. De manera predeterminada, es <see cref="F:System.Windows.Automation.RowOrColumnMajor.Indeterminate" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Text.TextPatternRange">
      <summary>Representa un tramo de texto continuo en un contenedor <see cref="T:System.Windows.Automation.TextPattern" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.AddToSelection">
      <summary>Agrega a la colección de texto resaltado en un contenedor de texto que admite varias selecciones discontinuas.</summary>
      <exception cref="T:System.InvalidOperationException">Si el proveedor de texto no admite varias selecciones discontinuas (por ejemplo, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> tiene un valor de <see langword="Multiple" />).</exception>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.Clone">
      <summary>Recupera una <see cref="T:System.Windows.Automation.Text.TextPatternRange" /> nueva idéntica a la <see cref="T:System.Windows.Automation.Text.TextPatternRange" /> original y hereda todas sus propiedades.</summary>
      <returns>Intervalo de texto nuevo. Nunca se devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.Compare(System.Windows.Automation.Text.TextPatternRange)">
      <summary>Devuelve un valor <see cref="T:System.Boolean" /> que indica si el tramo (del extremo <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> al extremo <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" />) de un intervalo de texto es igual que otro intervalo de texto.</summary>
      <param name="range">Intervalo de texto que se debe comparar.</param>
      <exception cref="T:System.ArgumentException">Si el intervalo que se compara no proviene del mismo proveedor de texto.</exception>
      <returns>
        <see langword="true" /> si el tramo de ambos intervalos de texto es idéntico; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>Devuelve un <see cref="T:System.Int32" /> que indica si dos intervalos de texto tienen los extremos idénticos.</summary>
      <param name="endpoint">punto de conexión <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> o <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> del llamador.</param>
      <param name="targetRange">Intervalo de destino para la comparación.</param>
      <param name="targetEndpoint">Extremo <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> o <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> del destino.</param>
      <exception cref="T:System.ArgumentNullException">Si el rango es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Si el intervalo es de otro contenedor.</exception>
      <returns>Devuelve un valor negativo si el punto de conexión del llamador se produce en el texto antes que en el punto de conexión de destino.  
  
 Devuelve cero si el punto de conexión del llamador está en la misma ubicación que el punto de conexión de destino.  
  
 Devuelve un valor positivo si el punto de conexión del llamador se produce en el texto después que en el punto de conexión de destino.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
      <summary>Expande el intervalo de texto a la <see cref="T:System.Windows.Automation.Text.TextUnit" /> especificada.</summary>
      <param name="unit">Unidad textual.</param>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.FindAttribute(System.Windows.Automation.AutomationTextAttribute,System.Object,System.Boolean)">
      <summary>Devuelve un subconjunto del intervalo de texto que tiene el valor de atributo especificado.</summary>
      <param name="attribute">Atributo que se debe buscar.</param>
      <param name="value">Valor del atributo que se debe buscar. Este valor debe coincidir con el tipo especificado para el atributo.</param>
      <param name="backward">
        <see langword="true" /> si debe devolverse el último intervalo de texto en lugar del primero; en caso contrario, <see langword="false" />.</param>
      <returns>Intervalo de texto que tiene un atributo y un valor de atributo correspondiente; en caso contrario, null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.FindText(System.String,System.Boolean,System.Boolean)">
      <summary>Devuelve un subconjunto del intervalo de texto que contiene el texto especificado.</summary>
      <param name="text">Cadena de texto que se debe buscar.</param>
      <param name="backward">
        <see langword="true" /> si debe devolverse el último intervalo de texto en lugar del primero; en caso contrario, <see langword="false" />.</param>
      <param name="ignoreCase">
        <see langword="true" /> si no se debe distinguir entre mayúsculas y minúsculas; en caso contrario, <see langword="false" />.</param>
      <returns>Intervalo de texto que coincide con el texto especificado; en caso contrario, null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetAttributeValue(System.Windows.Automation.AutomationTextAttribute)">
      <summary>Devuelve el valor del atributo especificado en todo el intervalo de texto.</summary>
      <param name="attribute">Atributo de texto.</param>
      <exception cref="T:System.ArgumentException">Si el atributo especificado no es válido.</exception>
      <returns>Devuelve el valor del atributo especificado. Por ejemplo, GetAttributeValue (TextPattern.FontNameAttribute) devolvería una cadena que representa el nombre de la fuente, si es único, del intervalo de texto, mientras que GetAttributeValue (TextPattern.IsItalicAttribute) devolvería un valor booleano.  
  
Devuelve <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> si el valor del atributo especificado varía respecto al intervalo de texto.  
  
Devuelve <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> si el proveedor o el control no admiten el atributo especificado.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetBoundingRectangles">
      <summary>Recupera una colección de rectángulos delimitadores para cada línea de texto total o parcialmente visible en un intervalo de texto.</summary>
      <returns>Matriz de rectángulos delimitadores para cada línea de texto completa o parcial en un intervalo de texto.  
  
 Matriz vacía para un intervalo de texto degenerado.  
  
 Matriz vacía para un intervalo de texto cuyas coordenadas de pantalla lo colocan completamente fuera de la pantalla, lo desplazan fuera de la vista o lo ocultan con una ventana superpuesta.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetChildren">
      <summary>Recupera una colección de todos los objetos incrustados que se encuentran en el intervalo de texto.</summary>
      <returns>Colección de todos los objetos secundarios que se encuentran dentro del intervalo. Los elementos secundarios superpuestos en el intervalo que este no enmarca completamente también se incluyen en la colección.  
  
 Devuelve una colección vacía si no hay ningún objeto secundario.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement">
      <summary>Devuelve el <see cref="T:System.Windows.Automation.AutomationElement" /> más interno que enmarca el intervalo de texto.</summary>
      <returns>Elemento más interno que enmarca el llamador.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetText(System.Int32)">
      <summary>Devuelve el texto sin formato del intervalo de texto.</summary>
      <param name="maxLength">Longitud máxima de la cadena que se debe devolver. Use <c>-1</c> si no se requiere ningún límite.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Si <paramref name="maxLength" /> es menor que 1.</exception>
      <returns>Texto sin formato del intervalo de texto, posiblemente truncado según el <paramref name="maxLength" /> especificado.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>Mueve el intervalo de texto el número especificado de unidades de texto.</summary>
      <param name="unit">Límite de la unidad de texto.</param>
      <param name="count">Número de unidades de texto que se deben mover. Un valor positivo mueve el intervalo de texto hacia adelante, un valor negativo mueve el intervalo de texto hacia atrás y 0 no tiene ningún efecto.</param>
      <returns>Número de unidades que se movieron realmente. Puede ser menor que el número solicitado si cualquiera de los nuevos extremos del intervalo de texto es mayor o menor que los extremos de <see cref="P:System.Windows.Automation.TextPattern.DocumentRange" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>Mueve un punto de conexión de un intervalo de texto al punto de conexión especificado de un segundo intervalo de texto.</summary>
      <param name="endpoint">punto de conexión que se debe mover.</param>
      <param name="targetRange">Otro intervalo del mismo proveedor de texto.</param>
      <param name="targetEndpoint">Extremo en el otro intervalo.</param>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>Mueve un punto de conexión del intervalo de texto el número especificado de <see cref="T:System.Windows.Automation.Text.TextUnit" /> dentro del intervalo del documento.</summary>
      <param name="endpoint">punto de conexión que se debe mover.</param>
      <param name="unit">Unidad textual que se debe mover.</param>
      <param name="count">Número de unidades para mover. Un recuento positivo mueve el punto de conexión hacia delante. Un recuento negativo lo mueve hacia atrás. Un recuento de 0 no tiene ningún efecto.</param>
      <returns>Número de unidades que realmente se mueven. Puede ser menor que el número solicitado si al mover el punto de conexión se pasa por el principio o el final del documento.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection">
      <summary>Quita una sección resaltada de texto, que corresponde a los puntos de conexión <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> y <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> del intervalo de texto que realiza la llamada, de una colección de texto resaltado existente en un contenedor de texto que admite varias selecciones discontinuas.</summary>
      <exception cref="T:System.InvalidOperationException">Si el proveedor de texto no admite varias selecciones discontinuas (por ejemplo, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> tiene un valor de <see langword="Multiple" />).</exception>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.ScrollIntoView(System.Boolean)">
      <summary>Hace que el control de texto se desplace verticalmente hasta que el intervalo de texto esté visible en la ventanilla.</summary>
      <param name="alignToTop">
        <see langword="true" /> si el control de texto se debe desplazar de forma que el intervalo de texto quede alineado con la parte superior de la ventanilla; <see langword="false" /> si debe alinearse con la parte inferior de la ventanilla.</param>
      <exception cref="T:System.InvalidOperationException">Si el control no admite el desplazamiento.</exception>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.Select">
      <summary>Resalta el texto en el control de texto que corresponde a los extremos <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> y <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> del intervalo de texto.</summary>
      <exception cref="T:System.InvalidOperationException">Se produce cuando la selección de texto no es compatible con el control de texto.</exception>
    </member>
    <member name="P:System.Windows.Automation.Text.TextPatternRange.TextPattern">
      <summary>Obtiene el objeto <see cref="T:System.Windows.Automation.TextPattern" /> asociado al intervalo de texto.</summary>
      <returns>Proveedor del texto.</returns>
    </member>
    <member name="T:System.Windows.Automation.TextPattern">
      <summary>Representa controles que contienen texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.AnimationStyleAttribute">
      <summary>Identifica el atributo <see cref="T:System.Windows.Automation.Text.AnimationStyle" /> de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.BackgroundColorAttribute">
      <summary>Identifica el atributo BackgroundColor de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.BulletStyleAttribute">
      <summary>Identifica el atributo <see cref="T:System.Windows.Automation.Text.BulletStyle" /> de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.CapStyleAttribute">
      <summary>Identifica el atributo <see cref="T:System.Windows.Automation.Text.CapStyle" /> de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.CultureAttribute">
      <summary>Identifica el atributo <see langword="Culture" /> (<see cref="T:System.Globalization.CultureInfo" />) de un intervalo de texto hasta el nivel de subidioma; por ejemplo, francés-Suiza (fr-CH) en lugar de francés (fr).</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.FontNameAttribute">
      <summary>Identifica el atributo <see langword="FontName" /> de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.FontSizeAttribute">
      <summary>Identifica el atributo <see langword="FontSize" /> de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.FontWeightAttribute">
      <summary>Identifica el atributo <see langword="FontWeight" /> de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.ForegroundColorAttribute">
      <summary>Identifica el atributo <see langword="ForegroundColor" /> (COLORREF) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.HorizontalTextAlignmentAttribute">
      <summary>Identifica el atributo <see cref="T:System.Windows.Automation.Text.HorizontalTextAlignment" /> de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IndentationFirstLineAttribute">
      <summary>Identifica el atributo <see langword="IndentationFirstLine" /> (<see cref="P:System.Windows.Documents.Paragraph.TextIndent" />) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IndentationLeadingAttribute">
      <summary>Identifica el atributo <see langword="IndentationLeading" />(<see cref="P:System.Windows.Documents.Paragraph.TextIndent" />) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IndentationTrailingAttribute">
      <summary>Identifica el atributo <see langword="IndentationTrailing" />(<see cref="P:System.Windows.Documents.Paragraph.TextIndent" />) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsHiddenAttribute">
      <summary>Identifica el atributo <see langword="IsHidden" /> de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsItalicAttribute">
      <summary>Identifica el atributo <see langword="IsItalic" /> (<see cref="T:System.Windows.FontStyle" />) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsReadOnlyAttribute">
      <summary>Identifica el atributo <see langword="IsReadOnly" /> de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsSubscriptAttribute">
      <summary>Identifica el atributo <see langword="IsSubscript" /> (<see cref="T:System.Windows.FontVariants" />) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsSuperscriptAttribute">
      <summary>Identifica el atributo <see langword="IsSuperscript" /> (<see cref="T:System.Windows.FontVariants" />) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MarginBottomAttribute">
      <summary>Identifica el atributo <see langword="MarginBottom" /> (<see cref="T:System.Drawing.Printing.PageSettings" />) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MarginLeadingAttribute">
      <summary>Identifica el atributo <see langword="MarginLeading" /> (<see cref="T:System.Drawing.Printing.PageSettings" />) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MarginTopAttribute">
      <summary>Identifica el atributo <see langword="MarginTop" /> (<see cref="T:System.Drawing.Printing.PageSettings" />) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MarginTrailingAttribute">
      <summary>Identifica el atributo <see langword="MarginTrailing" /> (<see cref="T:System.Drawing.Printing.PageSettings" />) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MixedAttributeValue">
      <summary>Identifica si el valor de un atributo determinado varía en un intervalo de texto de un control Rich Edit.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.OutlineStylesAttribute">
      <summary>Identifica el atributo <see langword="OutlineStyles" /> (<see cref="T:System.Windows.Automation.Text.OutlineStyles" />) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.OverlineColorAttribute">
      <summary>Identifica el atributo <see langword="OverlineColor" /> de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.OverlineStyleAttribute">
      <summary>Identifica el atributo <see langword="OverlineStyle" /> (<see cref="T:System.Windows.Automation.Text.TextDecorationLineStyle" />) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.Pattern">
      <summary>Identifica el patrón <see cref="T:System.Windows.Automation.TextPattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.StrikethroughColorAttribute">
      <summary>Identifica el atributo <see langword="StrikethroughColor" /> de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.StrikethroughStyleAttribute">
      <summary>Identifica el atributo <see langword="StrikethroughStyle" /> (<see cref="T:System.Windows.Automation.Text.TextDecorationLineStyle" />) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.TabsAttribute">
      <summary>Identifica el atributo <see langword="Tabs" /> de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.TextChangedEvent">
      <summary>Identifica el evento que se provoca siempre que se modifica el contenido textual.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.TextFlowDirectionsAttribute">
      <summary>Identifica el atributo <see langword="TextFlowDirections" /> (<see cref="T:System.Windows.Automation.Text.FlowDirections" />) de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.TextSelectionChangedEvent">
      <summary>Identifica el evento que se provoca cuando se modifica la selección del texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.UnderlineColorAttribute">
      <summary>Identifica el atributo <see langword="UnderlineColor" /> de un intervalo de texto.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.UnderlineStyleAttribute">
      <summary>Identifica el atributo <see langword="UnderlineStyle" /> (<see cref="T:System.Windows.Automation.Text.TextDecorationLineStyle" />) de un intervalo de texto.</summary>
    </member>
    <member name="M:System.Windows.Automation.TextPattern.GetSelection">
      <summary>Recupera una colección de intervalos de texto no contiguos asociados a la selección o selecciones de texto actuales.</summary>
      <exception cref="T:System.InvalidOperationException">El contenedor de texto no admite la selección de texto.</exception>
      <returns>Una colección de intervalos de texto no contiguos.</returns>
    </member>
    <member name="M:System.Windows.Automation.TextPattern.GetVisibleRanges">
      <summary>Recupera una matriz de intervalos de texto no contiguos de un contenedor de texto donde cada intervalo comienza con la primera línea parcialmente visible y continúa hasta el final de la última línea parcialmente visible.</summary>
      <returns>La colección de intervalos de texto visibles en el contenedor o una matriz vacía. Nunca se devuelve <see langword="Null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.TextPattern.RangeFromChild(System.Windows.Automation.AutomationElement)">
      <summary>Recupera un intervalo de texto que incluye un elemento secundario, como una imagen, un hipervínculo, una hoja de cálculo de Microsoft Excel u otro objeto incrustado.</summary>
      <param name="childElement">Objeto incluido.</param>
      <exception cref="T:System.ArgumentNullException">El elemento secundario es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El elemento no es un elemento secundario del contenedor de texto.</exception>
      <returns>Un intervalo que abarca el elemento secundario.</returns>
    </member>
    <member name="M:System.Windows.Automation.TextPattern.RangeFromPoint(System.Windows.Point)">
      <summary>Devuelve el intervalo de texto degenerado (vacío) más cercano a las coordenadas de la pantalla especificadas.</summary>
      <param name="screenLocation">Ubicación en las coordenadas de la pantalla.</param>
      <exception cref="T:System.ArgumentException">Un punto determinado está fuera de <see cref="T:System.Windows.Automation.AutomationElement" /> que se asocia con el modelo del texto.</exception>
      <returns>Intervalo degenerado más próximo a la ubicación especificada. Nunca se devuelve <see langword="Null" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.TextPattern.DocumentRange">
      <summary>Obtiene un intervalo de texto que agrega el texto principal de un documento.</summary>
    </member>
    <member name="P:System.Windows.Automation.TextPattern.SupportedTextSelection">
      <summary>Obtiene un valor que especifica si un proveedor de texto admite la selección y, en ese caso, el tipo de selección admitida.</summary>
      <returns>Uno de los valores de <see cref="T:System.Windows.Automation.SupportedTextSelection" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.TogglePattern">
      <summary>Representa un control que puede pasar por diferentes estados y mantener un estado una vez establecido.</summary>
    </member>
    <member name="F:System.Windows.Automation.TogglePattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.TogglePattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.TogglePattern.ToggleStateProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.TogglePattern.TogglePatternInformation.ToggleState" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.TogglePattern.Toggle">
      <summary>Recorre los estados de alternancia de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.TogglePattern.Cached">
      <summary>Obtiene los valores de la propiedad Automatización de la interfaz de usuario almacenados en caché para esta clase <see cref="T:System.Windows.Automation.TogglePattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Estructura que contiene los valores de propiedades de Automatización de la interfaz de usuario almacenados en caché para el patrón de control.</returns>
    </member>
    <member name="P:System.Windows.Automation.TogglePattern.Current">
      <summary>Obtiene los valores de propiedad Automatización de la interfaz de usuario actuales para este <see cref="T:System.Windows.Automation.TogglePattern" />.</summary>
      <returns>Estructura que contiene los valores actuales de la propiedad Automatización de la interfaz de usuario para el patrón de control.</returns>
    </member>
    <member name="T:System.Windows.Automation.TogglePattern.TogglePatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.TogglePattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.TogglePattern.Current" /> o <see cref="P:System.Windows.Automation.TogglePattern.Cached" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.TogglePattern.TogglePatternInformation.ToggleState">
      <summary>Recupera el estado de alternancia de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.ToggleState" /> del objeto <see cref="T:System.Windows.Automation.AutomationElement" />. El valor predeterminado es <see cref="F:System.Windows.Automation.ToggleState.Indeterminate" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.TransformPattern">
      <summary>Representa un control que se puede mover, cambiar de tamaño o girar dentro de un espacio bidimensional.</summary>
    </member>
    <member name="F:System.Windows.Automation.TransformPattern.CanMoveProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.TransformPattern.CanResizeProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.TransformPattern.CanRotateProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.TransformPattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.TransformPattern" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)">
      <summary>Mueve el control.</summary>
      <param name="x">Coordenadas de pantalla absolutas del lado izquierdo del control.</param>
      <param name="y">Coordenadas de pantalla absolutas del lado superior del control.</param>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" /> es false.</exception>
    </member>
    <member name="M:System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)">
      <summary>Cambia el tamaño del control.</summary>
      <param name="width">Nuevo ancho de la ventana, en píxeles.</param>
      <param name="height">Nuevo alto de la ventana, en píxeles.</param>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" /> es false.</exception>
    </member>
    <member name="M:System.Windows.Automation.TransformPattern.Rotate(System.Double)">
      <summary>Gira el control.</summary>
      <param name="degrees">Número de grados que se va a girar el elemento. Un número positivo realiza la rotación en el sentido de las agujas del reloj; un número negativo la realiza en sentido contrario.</param>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" /> es false.</exception>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.Cached">
      <summary>Obtiene los valores de la propiedad Automatización de la interfaz de usuario almacenados en caché para esta clase <see cref="T:System.Windows.Automation.TransformPattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Estructura que contiene los valores de propiedades de Automatización de la interfaz de usuario almacenados en caché para el patrón de control.</returns>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.Current">
      <summary>Obtiene los valores de propiedad Automatización de la interfaz de usuario actuales para este <see cref="T:System.Windows.Automation.TransformPattern" />.</summary>
      <returns>Estructura que contiene los valores actuales de la propiedad Automatización de la interfaz de usuario para el patrón de control.</returns>
    </member>
    <member name="T:System.Windows.Automation.TransformPattern.TransformPatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.TransformPattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.TransformPattern.Current" /> o <see cref="P:System.Windows.Automation.TransformPattern.Cached" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove">
      <summary>Obtiene un valor que especifica si el elemento Automatización de la interfaz de usuario se puede mover.</summary>
      <returns>
        <see langword="true" /> si se puede mover el elemento; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize">
      <summary>Obtiene un valor que especifica si se puede cambiar el tamaño del elemento de Automatización de la interfaz de usuario.</summary>
      <returns>
        <see langword="true" /> si se puede cambiar el tamaño del elemento; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate">
      <summary>Obtiene un valor que especifica si el elemento Automatización de la interfaz de usuario se puede girar.</summary>
      <returns>
        <see langword="true" /> si se puede girar el elemento; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.TreeWalker">
      <summary>Proporciona métodos y propiedades que se usan para navegar por el árbol de automatización de la interfaz de usuario.</summary>
    </member>
    <member name="F:System.Windows.Automation.TreeWalker.ContentViewWalker">
      <summary>Representa una clase <see cref="T:System.Windows.Automation.TreeWalker" /> predefinida que contiene una vista de elementos del árbol marcados como controles de contenido.</summary>
    </member>
    <member name="F:System.Windows.Automation.TreeWalker.ControlViewWalker">
      <summary>Representa una clase <see cref="T:System.Windows.Automation.TreeWalker" /> predefinida que contiene una vista de elementos del árbol marcados como controles.</summary>
    </member>
    <member name="F:System.Windows.Automation.TreeWalker.RawViewWalker">
      <summary>Representa una clase <see cref="T:System.Windows.Automation.TreeWalker" /> predefinida que contiene una vista de todos los elementos en el árbol.</summary>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.#ctor(System.Windows.Automation.Condition)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Automation.TreeWalker" />.</summary>
      <param name="condition">Vista del árbol de elementos de Automatización de la interfaz de usuario al que <see cref="T:System.Windows.Automation.TreeWalker" /> va a navegar.</param>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetFirstChild(System.Windows.Automation.AutomationElement)">
      <summary>Recupera el primer elemento secundario del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> especificado.</summary>
      <param name="element">Elemento del que debe recuperarse el primer elemento secundario.</param>
      <returns>Primer elemento secundario o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no hay ese tipo de elemento.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetFirstChild(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>Recupera el primer elemento secundario del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> especificado y almacena en memoria caché propiedades y modelos.</summary>
      <param name="element">Elemento del que debe recuperarse el primer elemento secundario.</param>
      <param name="request">Objeto de solicitud de caché que especifica las propiedades y modelos del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> devuelto para almacenar en memoria caché.</param>
      <returns>Primer elemento secundario o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no hay ese tipo de elemento.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetLastChild(System.Windows.Automation.AutomationElement)">
      <summary>Recupera el último elemento secundario del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> especificado.</summary>
      <param name="element">Elemento del que debe recuperarse el último elemento secundario.</param>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" /> que es el último elemento secundario o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no hay ese tipo de elemento.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetLastChild(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>Recupera el último elemento secundario del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> especificado y almacena en memoria caché propiedades y modelos.</summary>
      <param name="element">Elemento del que debe recuperarse el último elemento secundario.</param>
      <param name="request">Objeto de solicitud de caché que especifica las propiedades y modelos del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> devuelto para almacenar en memoria caché.</param>
      <returns>El último elemento o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no hay ese tipo de elemento.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetNextSibling(System.Windows.Automation.AutomationElement)">
      <summary>Recupera el siguiente elemento del mismo nivel del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> especificado.</summary>
      <param name="element">
        <see cref="T:System.Windows.Automation.AutomationElement" /> del que se va a recuperar el siguiente elemento del mismo nivel.</param>
      <returns>El siguiente elemento del mismo nivel o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no hay ese tipo de elemento.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetNextSibling(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>Recupera el siguiente elemento del siguiente nivel del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> especificado y almacena en memoria caché propiedades y modelos.</summary>
      <param name="element">Elemento del que se va a recuperar el siguiente elemento del mismo nivel.</param>
      <param name="request">Objeto de solicitud de caché que especifica las propiedades y modelos del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> devuelto para almacenar en memoria caché.</param>
      <returns>El siguiente elemento del mismo nivel o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no hay ese tipo de elemento.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetParent(System.Windows.Automation.AutomationElement)">
      <summary>Recupera el elemento primario del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> especificado.</summary>
      <param name="element">Elemento cuyo elemento primario se debe devolver.</param>
      <returns>Elemento primario o una referencia nula (<see langword="Nothing" /> en Visual Basic) si el elemento especificado es el elemento raíz en el árbol o si el elemento primario no está visible en la vista actual.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetParent(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>Recupera el elemento primario del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> especificado y almacena en memoria caché propiedades y modelos.</summary>
      <param name="element">Elemento cuyo elemento primario se debe devolver.</param>
      <param name="request">Objeto de solicitud de caché que especifica los miembros del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> devuelto para almacenar en memoria caché.</param>
      <returns>Elemento primario o una referencia nula (<see langword="Nothing" /> en Visual Basic) si el elemento especificado es el elemento raíz en el árbol o si el elemento principal no está visible en esta vista.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetPreviousSibling(System.Windows.Automation.AutomationElement)">
      <summary>Recupera al elemento anterior del mismo nivel del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> especificado.</summary>
      <param name="element">Elemento del que se va a recuperar el elemento anterior del mismo nivel.</param>
      <returns>El elemento anterior del mismo nivel o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no hay ese tipo de elemento.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetPreviousSibling(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>Recupera el elemento anterior del mismo nivel del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> especificado y almacena en memoria caché propiedades y modelos.</summary>
      <param name="element">Elemento del que se va a recuperar el elemento anterior del mismo nivel.</param>
      <param name="request">Objeto de solicitud de caché que especifica las propiedades y modelos del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> devuelto para almacenar en memoria caché.</param>
      <returns>El elemento anterior del mismo nivel o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no hay ese tipo de elemento.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.Normalize(System.Windows.Automation.AutomationElement)">
      <summary>Recupera el propio nodo si satisface <see cref="P:System.Windows.Automation.TreeWalker.Condition" /> o el elemento primario o nodo antecesor más cercano que satisfaga <see cref="P:System.Windows.Automation.TreeWalker.Condition" />.</summary>
      <param name="element">Elemento a partir del que debe iniciarse la normalización.</param>
      <returns>Objeto <see cref="T:System.Windows.Automation.AutomationElement" /> más cercano en la vista actual. Si la navegación a la cadena del antecesor alcanza el elemento raíz, se devuelve el elemento raíz.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.Normalize(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>Recupera el propio nodo si satisface <see cref="P:System.Windows.Automation.TreeWalker.Condition" /> o el elemento primario o nodo antecesor más cercano que satisface <see cref="P:System.Windows.Automation.TreeWalker.Condition" />, y almacena en memoria caché propiedades y modelos.</summary>
      <param name="element">Elemento a partir del que debe iniciarse la normalización.</param>
      <param name="request">Objeto de solicitud de caché que especifica las propiedades y modelos del objeto <see cref="T:System.Windows.Automation.AutomationElement" /> devuelto para almacenar en memoria caché.</param>
      <returns>Objeto <see cref="T:System.Windows.Automation.AutomationElement" /> más cercano en la vista actual. Si la navegación a la cadena del antecesor alcanza el elemento raíz, se devuelve el elemento raíz.</returns>
    </member>
    <member name="P:System.Windows.Automation.TreeWalker.Condition">
      <summary>Obtiene el objeto que define la vista para el objeto <see cref="T:System.Windows.Automation.TreeWalker" />.</summary>
      <returns>Condición que define la vista. Éste es el valor que se pasó al constructor.</returns>
    </member>
    <member name="T:System.Windows.Automation.ValuePattern">
      <summary>Representa un control que tiene un valor intrínseco que no abarca un intervalo y se puede representar como una cadena. Esta cadena puede ser o no modificable dependiendo del control y su configuración.</summary>
    </member>
    <member name="F:System.Windows.Automation.ValuePattern.IsReadOnlyProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.IsReadOnly" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.ValuePattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.ValuePattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.ValuePattern.ValueProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.Value" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.ValuePattern.SetValue(System.String)">
      <summary>Establece el valor del control.</summary>
      <param name="value">Valor que se va a establecer. El proveedor de automatización de la interfaz de usuario es responsable de convertir el valor al tipo de datos adecuado.</param>
      <exception cref="T:System.InvalidOperationException">El control es de solo lectura.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">El control no está habilitado.</exception>
    </member>
    <member name="P:System.Windows.Automation.ValuePattern.Cached">
      <summary>Obtiene los valores de la propiedad Automatización de la interfaz de usuario almacenados en caché para esta clase <see cref="T:System.Windows.Automation.ValuePattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Los valores de propiedad almacenados en caché.</returns>
    </member>
    <member name="P:System.Windows.Automation.ValuePattern.Current">
      <summary>Obtiene los valores de propiedad Automatización de la interfaz de usuario actuales para este <see cref="T:System.Windows.Automation.ValuePattern" />.</summary>
      <returns>Los valores de propiedad actuales.</returns>
    </member>
    <member name="T:System.Windows.Automation.ValuePattern.ValuePatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.ValuePattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.ValuePattern.Current" /> o <see cref="P:System.Windows.Automation.ValuePattern.Cached" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.IsReadOnly">
      <summary>Obtiene un valor que especifica si el valor de un elemento Automatización de la interfaz de usuario es de solo lectura.</summary>
      <returns>
        <see langword="true" /> si el valor es de solo lectura; <see langword="false" /> si se puede modificar.</returns>
    </member>
    <member name="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.Value">
      <summary>Obtiene el valor del elemento Automatización de la interfaz de usuario.</summary>
      <returns>Valor del Automatización de la interfaz de usuario elemento como una cadena. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="T:System.Windows.Automation.VirtualizedItemPattern">
      <summary>Representa elementos de contenedores que están virtualizados y necesitan ser totalmente accesibles como elementos de automatización de la interfaz de usuario.</summary>
    </member>
    <member name="F:System.Windows.Automation.VirtualizedItemPattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.VirtualizedItemPattern" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.VirtualizedItemPattern.Realize">
      <summary>Hace que el elemento virtual sea totalmente accesible como elemento de automatización de la interfaz de usuario.</summary>
    </member>
    <member name="T:System.Windows.Automation.WindowPattern">
      <summary>Representa un control que proporciona la funcionalidad fundamental basada en la ventana dentro de una interfaz gráfica de usuario (GUI) tradicional.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.CanMaximizeProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMaximize" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.CanMinimizeProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMinimize" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.IsModalProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsModal" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.IsTopmostProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsTopmost" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.Pattern">
      <summary>Identifica el patrón de control <see cref="T:System.Windows.Automation.WindowPattern" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.WindowClosedEvent">
      <summary>Identifica el evento que se genera al cerrar una ventana.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.WindowInteractionStateProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowInteractionState" />.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.WindowOpenedEvent">
      <summary>Identifica el evento que se genera al abrir una ventana.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.WindowVisualStateProperty">
      <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowVisualState" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.WindowPattern.Close">
      <summary>Intenta cerrar la ventana actual.</summary>
      <exception cref="T:System.InvalidOperationException">El control no puede realizar la acción solicitada.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Cuando el control ya no está disponible.</exception>
    </member>
    <member name="M:System.Windows.Automation.WindowPattern.SetWindowVisualState(System.Windows.Automation.WindowVisualState)">
      <summary>Cambia el valor de <see cref="T:System.Windows.Automation.WindowVisualState" /> de la ventana.</summary>
      <param name="state">Enumeración <see cref="T:System.Windows.Automation.WindowVisualState" /> solicitada de la ventana.</param>
      <exception cref="T:System.InvalidOperationException">Un control no admite un comportamiento solicitado.</exception>
    </member>
    <member name="M:System.Windows.Automation.WindowPattern.WaitForInputIdle(System.Int32)">
      <summary>Hace que el código de llamada se bloquee durante el tiempo especificado o hasta que el proceso asociado entre en un estado de inactividad, lo que ocurra primero.</summary>
      <param name="milliseconds">Cantidad de tiempo, en milisegundos, que se esperará hasta que el proceso asociado entre a un estado de inactividad. El máximo es <see cref="F:System.Int32.MaxValue" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro pasado no es un número válido.</exception>
      <returns>Es <see langword="true" /> si la ventana ha entrado en el estado de inactividad; es <see langword="false" /> si se agotó el tiempo de espera.</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.Cached">
      <summary>Obtiene los valores de la propiedad Automatización de la interfaz de usuario almacenados en caché para esta clase <see cref="T:System.Windows.Automation.WindowPattern" />.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
      <returns>Estructura que contiene los valores de propiedades de Automatización de la interfaz de usuario almacenados en caché para el patrón de control.</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.Current">
      <summary>Obtiene los valores de propiedad Automatización de la interfaz de usuario actuales para este <see cref="T:System.Windows.Automation.WindowPattern" />.</summary>
      <returns>Estructura que contiene los valores actuales de la propiedad Automatización de la interfaz de usuario para el patrón de control.</returns>
    </member>
    <member name="T:System.Windows.Automation.WindowPattern.WindowPatternInformation">
      <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.WindowPattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.WindowPattern.Current" /> o <see cref="P:System.Windows.Automation.WindowPattern.Cached" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMaximize">
      <summary>Obtiene un valor que especifica si el <see cref="T:System.Windows.Automation.AutomationElement" /> se puede maximizar.</summary>
      <returns>
        <see langword="true" /> si el <see cref="T:System.Windows.Automation.AutomationElement" /> se puede minimizar; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMinimize">
      <summary>Obtiene un valor que especifica si el <see cref="T:System.Windows.Automation.AutomationElement" /> actual se puede minimizar.</summary>
      <returns>
        <see langword="true" /> si el <see cref="T:System.Windows.Automation.AutomationElement" /> se puede minimizar; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsModal">
      <summary>Obtiene un valor que especifica si la clase <see cref="T:System.Windows.Automation.AutomationElement" /> es modal.</summary>
      <returns>Es <see langword="true" /> si <see cref="T:System.Windows.Automation.AutomationElement" /> es modal; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsTopmost">
      <summary>Obtiene un valor que especifica si <see cref="T:System.Windows.Automation.AutomationElement" /> es el elemento superior del orden z.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Windows.Automation.AutomationElement" /> es de nivel superior; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowInteractionState">
      <summary>Obtiene <see cref="T:System.Windows.Automation.WindowInteractionState" /> de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.WindowInteractionState" /> del objeto <see cref="T:System.Windows.Automation.AutomationElement" />. El valor predeterminado es <see cref="F:System.Windows.Automation.WindowInteractionState.Running" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowVisualState">
      <summary>Obtiene <see cref="T:System.Windows.Automation.WindowVisualState" /> de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.WindowVisualState" /> del objeto <see cref="T:System.Windows.Automation.AutomationElement" />. El valor predeterminado es <see cref="F:System.Windows.Automation.WindowVisualState.Normal" />.</returns>
    </member>
  </members>
</doc>