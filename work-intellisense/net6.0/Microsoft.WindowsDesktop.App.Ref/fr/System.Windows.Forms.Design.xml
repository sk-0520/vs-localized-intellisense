<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Forms.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />.</summary>
      <param name="oldSurface">Aire de conception qui perd l'activation.</param>
      <param name="newSurface">Aire de conception activée.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface">
      <summary>Obtient l'aire de conception activée.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> qui est activé.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface">
      <summary>Obtient l'aire de conception qui perd l'activation.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> qui perd l'activation.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> d'un <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />. Cette classe ne peut pas être héritée.</summary>
      <param name="sender">La source de l'événement, le <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary>Fournit une interface utilisateur qui permet de modifier des tableaux au moment du design.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ArrayEditor" /> avec le type de données spécifié du tableau.</summary>
      <param name="type">Type de données des éléments du tableau.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary>Obtient le type des données que cette collection est destinée à contenir par son design.</summary>
      <returns>
        <see cref="T:System.Type" /> qui indique le type des données que la collection est destinée à contenir par son design.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary>Obtient les éléments contenus dans le tableau.</summary>
      <param name="editValue">Tableau à partir duquel récupérer les éléments.</param>
      <returns>Tableau constitué des éléments contenus dans le tableau spécifié. Si l'objet spécifié dans le paramètre <paramref name="editValue" /> n'est pas un tableau, un nouvel objet vide est retourné.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary>Définit les éléments du tableau.</summary>
      <param name="editValue">Tableau pour lequel définir les éléments.</param>
      <param name="value">Tableau d'objets à définir comme éléments du tableau.</param>
      <returns>Instance du nouveau tableau. Si l'objet spécifié par le paramètre <paramref name="editValue" /> n'est pas un tableau, l'objet spécifié par le paramètre <paramref name="editValue" /> est retourné.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.BinaryEditor">
      <summary>Fournit une interface utilisateur qui permet de modifier des données binaires.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.BinaryEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié à l'aide du fournisseur de services et du contexte spécifiés.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value">Objet dont la valeur doit être modifiée.</param>
      <returns>Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas été modifiée, cette méthode retourne le même objet qui lui a été passé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient le style de l'éditeur utilisé par la méthode <see cref="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>Valeur <see langword="enum" /> indiquant le style de modification fourni.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ByteViewer">
      <summary>Affiche les tableaux d'octets aux formats hexadécimal, ANSI et Unicode.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ByteViewer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetBytes">
      <summary>Obtient les octets contenus dans la mémoire tampon.</summary>
      <returns>Référence non signée du tableau d'octets.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode">
      <summary>Obtient le mode d'affichage pour le contrôle.</summary>
      <returns>Mode d'affichage que ce contrôle utilise. La valeur retournée est définie dans <see cref="T:System.ComponentModel.Design.DisplayMode" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Windows.Forms.Control.KeyDown" />.</summary>
      <param name="e">
        <see cref="T:System.Windows.Forms.KeyEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Windows.Forms.Control.Layout" />.</summary>
      <param name="e">
        <see cref="T:System.Windows.Forms.LayoutEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Windows.Forms.Control.Paint" />.</summary>
      <param name="e">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)">
      <summary>Écrit dans un fichier les données brutes de la mémoire tampon des données.</summary>
      <param name="path">Chemin d'accès du fichier dans lequel effectuer l'enregistrement.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> est une chaîne vide (""), contient seulement un espace blanc ou contient un ou plusieurs caractères non valides.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin spécifié n’est pas valide, par exemple si l’emplacement est un lecteur non mappé.</exception>
      <exception cref="T:System.IO.IOException">L'écriture dans le fichier a échoué.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'accès demandé n'est pas autorisé par le système d'exploitation pour le <paramref name="path" /> spécifié, comme lorsque l'accès est <see langword="Write" /> ou <see langword="ReadWrite" /> et que le fichier ou le répertoire est défini pour l'accès en lecture seule.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)">
      <summary>Gère l'événement <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> sur <see cref="T:System.ComponentModel.Design.ByteViewer" /> du contrôle <see cref="T:System.Windows.Forms.ScrollBar" />.</summary>
      <param name="source">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])">
      <summary>Définit le tableau d'octets à afficher dans la visionneuse.</summary>
      <param name="bytes">Tableau d'octets à afficher.</param>
      <exception cref="T:System.ArgumentNullException">Le tableau d'octets spécifié est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
      <summary>Définit le mode d'affichage actuel.</summary>
      <param name="mode">Mode d'affichage à définir.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Le mode d'affichage spécifié ne provient pas de l'énumération <see cref="T:System.ComponentModel.Design.DisplayMode" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)">
      <summary>Définit le fichier à afficher dans la visionneuse.</summary>
      <param name="path">Chemin d'accès du fichier à partir duquel effectuer le chargement.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> est une chaîne vide (""), contient seulement un espace blanc ou contient un ou plusieurs caractères non valides.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin spécifié n’est pas valide, par exemple si l’emplacement est un lecteur non mappé.</exception>
      <exception cref="T:System.IO.IOException">Le chargement du fichier a échoué.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'accès demandé n'est pas autorisé par le système d'exploitation pour le <paramref name="path" /> spécifié, comme lorsque l'accès est <see langword="Write" /> ou <see langword="ReadWrite" /> et que le fichier ou le répertoire est défini pour l'accès en lecture seule.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)">
      <summary>Définit la ligne active pour la vue <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" />.</summary>
      <param name="line">Ligne active à partir de laquelle commencer l'affichage.</param>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary>Fournit une interface utilisateur qui peut modifier la plupart des types de collection au moment du design.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.CollectionEditor" /> à l'aide du type de collection spécifié.</summary>
      <param name="type">Type de la collection à modifier au moyen de cet éditeur.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary>Annule les modifications effectuées dans la collection.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary>Indique si les membres d'origine de la collection peuvent être supprimés.</summary>
      <param name="value">Valeur à supprimer.</param>
      <returns>
        <see langword="true" /> s'il est permis de supprimer cette valeur de la collection ; sinon, <see langword="false" />. L'implémentation par défaut retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary>Indique si plusieurs éléments de la collection peuvent être sélectionnés simultanément.</summary>
      <returns>
        <see langword="true" /> si plusieurs membres de la collection peuvent être sélectionnés simultanément ; sinon, <see langword="false" />. Retourne <see langword="true" /> par défaut.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary>Crée un nouveau formulaire pour afficher et modifier la collection en cours.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> à proposer comme interface utilisateur pour la modification de la collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary>Obtient le type des données contenues dans cette collection.</summary>
      <returns>Type de données des éléments de la collection ou <see cref="T:System.Object" /> si aucune propriété <see langword="Item" /> n'est détectée dans la collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary>Crée une nouvelle instance du type d'élément de la collection spécifié.</summary>
      <param name="itemType">Type de l'élément à créer.</param>
      <returns>Nouvelle instance de l'objet spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary>Obtient les types de données que cet éditeur de collections peut contenir.</summary>
      <returns>Tableau des types de données que cette collection peut contenir.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary>Détruit l'instance spécifiée de l'objet.</summary>
      <param name="instance">Objet à détruire.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié à l'aide du fournisseur de services et du contexte spécifiés.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value">Objet dont la valeur doit être modifiée.</param>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">Une tentative d'extraction d'un fichier archivé dans un programme de gestion de code source a échoué.</exception>
      <returns>Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas changé, l'objet retourné doit être le même que celui qui a été passé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary>Récupère le texte affiché pour l'élément de liste donné.</summary>
      <param name="value">Élément de liste pour lequel le texte affiché doit être récupéré.</param>
      <returns>Texte affiché pour <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient le style de modification utilisé par la méthode <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>Valeur d'énumération <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification fourni. Si la méthode n'est pas prise en charge dans le contexte spécifié, elle retourne l'identificateur <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary>Obtient un tableau d'objets contenant la collection spécifiée.</summary>
      <param name="editValue">Collection à modifier.</param>
      <returns>Tableau contenant les objets de collection ou tableau d'objets vide si la collection spécifiée n'hérite pas de <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary>Retourne une liste contenant l’objet donné.</summary>
      <param name="instance">
        <see cref="T:System.Collections.ArrayList" /> retourné en tant qu'objet.</param>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> qui contient les objets individuels à créer.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary>Obtient le service demandé, s'il est disponible.</summary>
      <param name="serviceType">Type de service à récupérer.</param>
      <returns>Instance du service ou <see langword="null" /> si le service est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary>Définit le contenu du tableau spécifié comme éléments de la collection.</summary>
      <param name="editValue">Collection à modifier.</param>
      <param name="value">Tableau d'objets à définir comme éléments de la collection.</param>
      <returns>Objet de collection récemment créé ou, sinon, collection indiquée par le paramètre <paramref name="editValue" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary>Affiche la rubrique d'aide par défaut de l'éditeur de collections.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary>Obtient le type de données de chaque élément contenu dans la collection.</summary>
      <returns>Type de données des éléments de la collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary>Obtient le type de données de l'objet de collection.</summary>
      <returns>Type de données de l'objet de collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary>Obtient un descripteur de type qui indique le contexte en cours.</summary>
      <returns>
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> indiquant le contexte en cours d'utilisation ou <see langword="null" /> si aucun contexte n'est disponible.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary>Obtient le mot clé d'aide pour lequel afficher la rubrique ou la liste des rubriques d'aide lorsque vous cliquez sur le bouton Aide de la boîte de dialogue de l'éditeur ou que vous appuyez sur la touche F1.</summary>
      <returns>Mot clé d'aide pour lequel afficher la rubrique ou la liste des rubriques d'aide lorsque vous demandez de l'aide à partir de l'éditeur.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary>Obtient les types d'éléments disponibles qui peuvent être créés pour cette collection.</summary>
      <returns>Types d'éléments pouvant être créés.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary>Fournit une boîte de dialogue modale pour la modification du contenu d'une collection à l'aide de <see cref="T:System.Drawing.Design.UITypeEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />.</summary>
      <param name="editor">
        <see cref="T:System.ComponentModel.Design.CollectionEditor" /> à utiliser pour la modification de la collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary>Indique si vous pouvez supprimer les membres d'origine de la collection.</summary>
      <param name="value">Valeur à supprimer.</param>
      <returns>
        <see langword="true" /> s'il est permis de supprimer cette valeur de la collection ; sinon, <see langword="false" />. Par défaut, cette méthode retourne la valeur à partir de <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> du <see cref="T:System.ComponentModel.Design.CollectionEditor" /> pour ce formulaire.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary>Indique si plusieurs éléments de la collection peuvent être sélectionnés simultanément.</summary>
      <returns>
        <see langword="true" /> si plusieurs membres de la collection peuvent être sélectionnés simultanément ; sinon, <see langword="false" />. Par défaut, cette méthode retourne la valeur à partir de <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> du <see cref="T:System.ComponentModel.Design.CollectionEditor" /> pour ce formulaire.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary>Crée une nouvelle instance du type d'élément de la collection spécifié.</summary>
      <param name="itemType">Type de l'élément à créer.</param>
      <returns>Nouvelle instance de l'objet spécifié ou <see langword="null" /> si l'utilisateur a choisi d'annuler la création de cette instance.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary>Détruit l'instance spécifiée de l'objet.</summary>
      <param name="instance">Objet à détruire.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary>Affiche l'exception spécifiée pour l'utilisateur.</summary>
      <param name="e">Exception à afficher.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary>Obtient le service demandé, s'il est disponible.</summary>
      <param name="serviceType">Type de service à récupérer.</param>
      <returns>Instance du service ou <see langword="null" /> si le service est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary>Offre une possibilité d'effectuer le traitement lorsqu'une valeur de collection a été modifiée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary>Affiche la boîte de dialogue de l'éditeur de collections avec l'objet <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> spécifié.</summary>
      <param name="edSvc">
        <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> pouvant être utilisé pour afficher la boîte de dialogue.</param>
      <returns>
        <see cref="T:System.Windows.Forms.DialogResult" /> indiquant le code obtenu et retourné par la boîte de dialogue.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary>Obtient le type de données de chaque élément contenu dans la collection.</summary>
      <returns>Type de données des éléments de la collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary>Obtient le type de données de l'objet de collection.</summary>
      <returns>Type de données de l'objet de collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary>Obtient un descripteur de type qui indique le contexte en cours.</summary>
      <returns>
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> indiquant le contexte en cours d'utilisation ou <see langword="null" /> si aucun contexte n'est disponible.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary>Obtient ou définit l'objet de la collection à modifier.</summary>
      <returns>Objet de collection à modifier.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary>Obtient ou définit le tableau des éléments à afficher par ce formulaire.</summary>
      <returns>Tableau des objets à afficher par le formulaire.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary>Obtient les types d'éléments disponibles qui peuvent être créés pour cette collection.</summary>
      <returns>Types d'éléments pouvant être créés.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary>Étend le comportement en mode design d’un composant.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary>Crée une signature de méthode dans le fichier de code source de l'événement par défaut du composant et déplace le curseur de l'utilisateur jusqu'à cet emplacement.</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">Une tentative d'extraction d'un fichier archivé dans un programme de gestion de code source a échoué.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary>Tente de récupérer le type spécifié de service du composant du concepteur du site en mode Design.</summary>
      <param name="serviceType">Type de service à demander.</param>
      <returns>Objet implémentant le service demandé, ou <see langword="null" /> si le service ne peut pas être résolu.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prépare le concepteur à afficher, à modifier et à créer le composant spécifié.</summary>
      <param name="component">Composant pour ce concepteur.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>Réinitialise un composant existant.</summary>
      <param name="defaultValues">Dictionnaire de noms/valeurs de valeurs par défaut à appliquer aux propriétés. Peut avoir la valeur <see langword="null" /> si aucune valeur par défaut n’est spécifiée.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Initialise un composant nouvellement créé.</summary>
      <param name="defaultValues">Dictionnaire de noms/valeurs de valeurs par défaut à appliquer aux propriétés. Peut avoir la valeur <see langword="null" /> si aucune valeur par défaut n’est spécifiée.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary>Initialise les paramètres d'un composant importé qui est déjà initialisé pour utiliser des paramètres autres que ceux par défaut.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary>Obtient le <see cref="T:System.ComponentModel.InheritanceAttribute" /> du <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> spécifié.</summary>
      <param name="toInvoke">
        <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> duquel récupérer l'attribut d'héritage.</param>
      <returns>Obtient le <see cref="T:System.ComponentModel.InheritanceAttribute" /> du concepteur spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary>Définit les propriétés par défaut du composant.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>Permet à un concepteur de modifier ou de supprimer des éléments de l'ensemble d'attributs qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes">Attributs de la classe du composant.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>Permet à un concepteur de modifier ou de supprimer des éléments de l'ensemble d'événements à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events">Événements de la classe du composant.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>Permet à un concepteur de modifier ou de supprimer des éléments de l'ensemble de propriétés qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">Propriétés de la classe de composant.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>Permet à un concepteur d'ajouter des éléments à l'ensemble d'attributs qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes">Attributs de la classe du composant.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>Permet à un concepteur d'ajouter des éléments à l'ensemble d'événements qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events">Événements de la classe du composant.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Permet à un concepteur d'ajouter des éléments à l'ensemble de propriétés qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">Propriétés de la classe de composant.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>Avertit le <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> que ce composant a été modifié.</summary>
      <param name="member">
        <see cref="T:System.ComponentModel.MemberDescriptor" /> indiquant le membre modifié.</param>
      <param name="oldValue">Ancienne valeur du membre.</param>
      <param name="newValue">Nouvelle valeur du membre.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary>Avertit le <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> que ce composant est sur le point d'être modifié.</summary>
      <param name="member">
        <see cref="T:System.ComponentModel.MemberDescriptor" /> indiquant le membre sur le point d'être modifié.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes">Objets <see cref="T:System.Attribute" /> de la classe du composant. Les clés du dictionnaire d'attributs sont les valeurs <see cref="P:System.Attribute.TypeId" /> des attributs.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events">Objets <see cref="T:System.ComponentModel.EventDescriptor" /> représentant les événements de la classe du composant. Les clés du dictionnaire d'événements sont des noms d'événements.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties">Objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> représentant les propriétés de la classe du composant. Les clés du dictionnaire de propriétés sont des noms de propriétés.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes">Objets <see cref="T:System.Attribute" /> de la classe du composant. Les clés du dictionnaire d'attributs sont les valeurs <see cref="P:System.Attribute.TypeId" /> des attributs.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events">Objets <see cref="T:System.ComponentModel.EventDescriptor" /> représentant les événements de la classe du composant. Les clés du dictionnaire d'événements sont des noms d'événements.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties">Objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> représentant les propriétés de la classe du composant. Les clés du dictionnaire de propriétés sont des noms de propriétés.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary>Obtient les listes d'actions au moment du design prises en charge par le composant associé au concepteur.</summary>
      <returns>Listes d'actions au moment du design prises en charge par le composant associé au concepteur.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary>Obtient la collection de composants associés au composant géré par le concepteur.</summary>
      <returns>Composants associés au composant géré par le concepteur.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary>Obtient le composant qui est créé par ce concepteur.</summary>
      <returns>Composant géré par le concepteur.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary>Obtient un attribut qui indique le type d'héritage du composant associé.</summary>
      <returns>
        <see cref="T:System.ComponentModel.InheritanceAttribute" /> pour le composant associé.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary>Obtient une valeur indiquant si ce composant est hérité.</summary>
      <returns>
        <see langword="true" /> si le composant est hérité ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary>Obtient le composant parent de ce concepteur.</summary>
      <returns>Composant parent de ce concepteur ou <see langword="null" /> si ce concepteur est le composant racine.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary>Obtient une collection de valeurs de propriétés qui substituent les paramètres utilisateur.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> indiquant les propriétés d'ombrage du document de design.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary>Pour obtenir une description de ce membre, consultez la propriété<see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" />.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> qui contient la collection de concepteurs <see cref="T:System.ComponentModel.Design.IDesigner" /> contenue dans le concepteur parent actuel.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary>Pour obtenir une description de ce membre, consultez la propriété<see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" />.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.IDesigner" /> représentant le concepteur parent ou <see langword="null" /> s'il n'existe aucun parent.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary>Obtient les verbes de design pris en charge par le composant associé au concepteur.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> d'objets <see cref="T:System.ComponentModel.Design.DesignerVerb" />, ou <see langword="null" /> si aucun verbe du concepteur n'est disponible. Cette implémentation par défaut retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary>Représente une collection de propriétés d'ombrage qui doivent substituer les valeurs par défaut héritées ou les valeurs assignées à des propriétés particulières. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary>Indique si une propriété correspondant au nom spécifié existe dans la collection.</summary>
      <param name="propertyName">Nom de la propriété à rechercher dans la collection.</param>
      <returns>
        <see langword="true" /> si la propriété existe dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary>Obtient ou définit l'objet à l'index spécifié.</summary>
      <param name="propertyName">Nom de la propriété à laquelle accéder dans la collection.</param>
      <returns>Valeur de la propriété spécifiée, si elle existe dans la collection. Sinon, la valeur est récupérée de la valeur actuelle de la propriété non occultée.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DateTimeEditor">
      <summary>Cet éditeur de date et d'heure est un <see cref="T:System.Drawing.Design.UITypeEditor" /> convenable pour modifier les objets <see cref="T:System.DateTime" /> visuellement.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DateTimeEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié avec le style de l'éditeur fourni par GetEditorStyle. Un fournisseur de services est prévu pour que tous les services d"édition requis puissent être obtenus.</summary>
      <param name="context">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <param name="provider">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value">Instance de la valeur en cours de modification.</param>
      <returns>Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas été modifiée, cette méthode retourne le même objet qui lui a été passé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Récupère le style de modification de la méthode <see cref="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue" />. Si la méthode n'est pas prise en charge, la valeur None est retournée.</summary>
      <param name="context">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <returns>Valeur <see langword="enum" /> indiquant le style de modification fourni.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary>Représente un élément d'en-tête statique sur un panneau des balises actives. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> à l'aide de la chaîne de nom fournie.</summary>
      <param name="displayName">Texte à afficher dans l'en-tête.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> à l'aide des chaînes de nom et de catégorie fournies.</summary>
      <param name="displayName">Texte à afficher dans l'en-tête.</param>
      <param name="category">
        <see cref="T:System.String" /> respectant la casse qui définit les groupements d'entrées de panneau.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary>Fournit la classe de base des types qui représentent un élément de panneau sur un panneau des balises actives.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</summary>
      <param name="displayName">Texte du panneau pour cet élément.</param>
      <param name="category">
        <see cref="T:System.String" /> respectant la casse qui définit les groupements d'entrées de panneau.</param>
      <param name="description">Texte supplémentaire pour cet élément, éventuellement utilisé dans les info-bulles ou la barre d'état.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary>Obtient ou définit une valeur qui indique s'il faut autoriser cet élément à être placé dans un groupe d'éléments ayant la même valeur de propriété <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" />.</summary>
      <returns>
        <see langword="true" /> si l'élément peut être placé dans un groupe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary>Obtient le nom de groupe d'un élément.</summary>
      <returns>Chaîne qui représente le groupe dont l'élément est membre.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary>Obtient le texte supplémentaire de l'élément.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le texte de description de l'élément.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary>Obtient le texte pour cet élément.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le texte d'affichage de l'élément.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary>Obtient une référence à une collection qui peut être utilisée pour stocker des paires clé/valeur définies par le programmeur.</summary>
      <returns>Collection qui implémente <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary>Obtient ou définit une valeur qui indique si cet élément s'affiche dans la vue de code source.</summary>
      <returns>
        <see langword="true" /> si cet élément apparaît dans l'affichage du code source ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary>Représente une collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Ajoute le <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> fourni à la collection actuelle.</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> à ajouter.</param>
      <returns>Index <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> auquel la valeur a été ajoutée.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Détermine si <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contient un élément spécifique.</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> à rechercher dans <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
      <returns>
        <see langword="true" /> si l'élément <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contient la valeur spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary>Copie les éléments de la collection actuelle dans le tableau fourni, à partir de l'index de tableau spécifié.</summary>
      <param name="array">Tableau <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> unidimensionnel qui constitue la destination des éléments copiés à partir de la collection actuelle. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Détermine l'index d'un élément spécifique de la collection.</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> à rechercher dans la collection.</param>
      <returns>Index de base zéro de la première occurrence de <paramref name="value" /> dans l'ensemble du <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />, s'il existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary>Insère un élément dans la classe <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</param>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> à insérer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Supprime la première occurrence d’un objet spécifique de <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> à supprimer de <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary>Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l’élément.</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary>Fournit la classe de base pour les types qui définissent une liste d'éléments utilisés pour créer un panneau des balises actives.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <param name="component">Composant lié à <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary>Retourne un objet qui représente un service fourni par le composant associé à <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <param name="serviceType">Service fourni par <see cref="T:System.ComponentModel.Component" />.</param>
      <returns>
        <see cref="T:System.Object" /> qui représente un service fourni par <see cref="T:System.ComponentModel.Component" />. Cette valeur est <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> ne fournit pas le service spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary>Retourne la collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> contenus dans la liste.</summary>
      <returns>Tableau <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> qui contient les éléments de cette liste.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary>Obtient ou définit une valeur qui indique si le panneau des balises actives doit être affiché automatiquement lorsqu'il est créé.</summary>
      <returns>
        <see langword="true" /> si le panneau doit être affiché lorsque le composant propriétaire est créé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary>Obtient le composant lié à <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns>Composant lié à <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary>Représente une collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> avec les paramètres par défaut.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> avec les éléments de panneau spécifiés.</summary>
      <param name="value">Tableau d'objets <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à ajouter dans la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary>Ajoute le <see cref="T:System.ComponentModel.Design.DesignerActionList" /> fourni à la collection actuelle.</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à ajouter.</param>
      <returns>Emplacement dans lequel le nouvel élément est inséré dans la liste interne de la collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary>Ajoute les éléments du tableau <see cref="T:System.ComponentModel.Design.DesignerActionList" /> fourni à la fin de la collection actuelle.</summary>
      <param name="value">Tableau d'objets <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Ajoute les éléments du <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> fourni à la fin de la collection actuelle.</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary>Indique si la collection contient une valeur spécifique.</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à rechercher.</param>
      <returns>
        <see langword="true" /> si la collection contient la valeur spécifiée ; <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary>Copie les éléments de la collection actuelle dans le tableau fourni, à partir de l'index de tableau spécifié.</summary>
      <param name="array">Tableau unidimensionnel de type <see cref="T:System.ComponentModel.Design.DesignerActionList" />, qui constitue la destination des éléments copiés à partir de la collection actuelle. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.  
  
- ou - 
Le nombre d'éléments de la collection actuelle est supérieur à la quantité d'espace disponible entre <paramref name="index" /> et la fin du tableau de destination.</exception>
      <exception cref="T:System.InvalidCastException">Un problème s'est produit lors du cast des éléments de la collection actuelle dans le type du tableau de destination, peut-être suite à l'échec d'un cast aval.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary>Détermine l'index d'un élément spécifique de la collection.</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à rechercher dans la collection.</param>
      <returns>Index de <paramref name="value" /> s'il figure dans la liste interne ; sinon -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary>Insère dans la collection le <see cref="T:System.ComponentModel.Design.DesignerActionList" /> fourni à l'emplacement spécifié.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</param>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à insérer dans la collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à 0 ou supérieur au nombre d'éléments de la collection actuelle.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary>Exécute des processus personnalisés supplémentaires lors de la validation d'une valeur.</summary>
      <param name="value">Objet à valider.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>Supprime la première occurrence d'un <see cref="T:System.ComponentModel.Design.DesignerActionList" /> spécifique de la collection.</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à supprimer de la collection actuelle.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary>Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l’élément.</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />.</summary>
      <param name="relatedObject">Objet associé à la collection.</param>
      <param name="changeType">Valeur qui spécifie si <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a été ajouté dans la collection ou en a été supprimé.</param>
      <param name="actionLists">Collection d'éléments de liste après l'application de l'action.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary>Obtient la collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionList" /> associés à cet événement.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> représentant l'état actuel de la collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary>Obtient un indicateur qui signale si un élément a été ajouté dans la collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionList" /> ou en a été supprimé.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" /> qui indique le type de modification.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary>Obtient l’objet associé à la collection d’objets <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns>
        <see cref="T:System.Object" /> associé au <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> managé.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> d'un <see cref="T:System.ComponentModel.Design.DesignerActionService" />. Cette classe ne peut pas être héritée.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary>Spécifie le type de modification qui se produit dans une collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary>Un ou plusieurs objets <see cref="T:System.ComponentModel.Design.DesignerActionList" /> ont été ajoutés à la collection.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary>Un ou plusieurs objets <see cref="T:System.ComponentModel.Design.DesignerActionList" /> ont été supprimés de la collection.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary>Représente un élément de panneau des balises actives associé à une méthode dans une classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, avec la méthode et les noms complets spécifiés.</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> qui contient la méthode à laquelle cet élément est associé.</param>
      <param name="memberName">Nom respectant la casse de la méthode de la classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à appeler via l'élément du panneau.</param>
      <param name="displayName">Texte du panneau pour cet élément.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, avec la méthode et les noms complets spécifiés, ainsi qu'un indicateur signalant si l'élément doit apparaître dans d'autres contextes d'interface utilisateur.</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> qui contient la méthode à laquelle cet élément est associé.</param>
      <param name="memberName">Nom respectant la casse de la méthode de la classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à appeler via l'élément du panneau.</param>
      <param name="displayName">Texte du panneau pour cet élément.</param>
      <param name="includeAsDesignerVerb">Indicateur qui spécifie si la méthode associée en tant que verbe du concepteur doit également être traitée.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, avec la méthode, les noms complets et les noms de catégories spécifiés.</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> qui contient la méthode à laquelle cet élément est associé.</param>
      <param name="memberName">Nom respectant la casse de la méthode de la classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à appeler via l'élément du panneau.</param>
      <param name="displayName">Texte du panneau pour cet élément.</param>
      <param name="category">
        <see cref="T:System.String" /> respectant la casse, utilisé pour regrouper des éléments similaires sur le panneau.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, avec la méthode, les noms complets et les noms de catégories spécifiés, ainsi qu'un indicateur signalant si l'élément doit apparaître dans d'autres contextes d'interface utilisateur.</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> qui contient la méthode à laquelle cet élément est associé.</param>
      <param name="memberName">Nom respectant la casse de la méthode de la classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à appeler via l'élément du panneau.</param>
      <param name="displayName">Texte du panneau pour cet élément.</param>
      <param name="category">
        <see cref="T:System.String" /> respectant la casse, utilisé pour regrouper des éléments similaires sur le panneau.</param>
      <param name="includeAsDesignerVerb">Indicateur qui spécifie si la méthode associée en tant que verbe du concepteur pour le composant associé doit également être traitée.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, avec la méthode et les noms des catégories spécifiés, ainsi que le texte d'affichage et de description.</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> qui contient la méthode à laquelle cet élément est associé.</param>
      <param name="memberName">Nom respectant la casse de la méthode de la classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à appeler via l'élément du panneau.</param>
      <param name="displayName">Texte du panneau pour cet élément.</param>
      <param name="category">
        <see cref="T:System.String" /> respectant la casse, utilisé pour regrouper des éléments similaires sur le panneau.</param>
      <param name="description">Texte supplémentaire pour cet élément, utilisé dans les info-bulles ou la barre d'état.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, avec la méthode, les noms de catégories spécifiés, le texte d'affichage et de description, ainsi qu'un indicateur signalant si l'élément doit apparaître dans d'autres contextes d'interface utilisateur.</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> qui contient la méthode à laquelle cet élément est associé.</param>
      <param name="memberName">Nom respectant la casse de la méthode de la classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à appeler via l'élément du panneau.</param>
      <param name="displayName">Texte du panneau pour cet élément.</param>
      <param name="category">
        <see cref="T:System.String" /> respectant la casse, utilisé pour regrouper des éléments similaires sur le panneau.</param>
      <param name="description">Texte supplémentaire pour cet élément, utilisé dans les info-bulles ou la barre d'état.</param>
      <param name="includeAsDesignerVerb">Indicateur qui spécifie si la méthode associée en tant que verbe du concepteur pour le composant associé doit également être traitée.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary>Exécute par programme la méthode associée à <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />.</summary>
      <exception cref="T:System.InvalidOperationException">La méthode, nommée dans <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />, est introuvable.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary>Obtient une valeur qui indique que <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> doit apparaître dans d'autres contextes d'interface utilisateur.</summary>
      <returns>
        <see langword="true" /> si l'élément doit être utilisé dans les menus contextuels ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary>Obtient le nom de la méthode à laquelle ce <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> est associé.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le nom de la méthode associée.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary>Obtient ou définit un composant qui fournit ses objets <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> au panneau actuel.</summary>
      <returns>Composant contributeur, qui doit avoir un concepteur associé qui fournit des éléments.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary>Représente un élément de panneau associé à une propriété dans une classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />, avec la propriété et les noms complets spécifiés.</summary>
      <param name="memberName">Nom qui respecte la casse de la propriété associée à cet élément de panneau.</param>
      <param name="displayName">Texte du panneau pour cet élément.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />, avec la propriété et les noms des catégories spécifiés, ainsi que le texte d'affichage.</summary>
      <param name="memberName">Nom qui respecte la casse de la propriété associée à cet élément de panneau.</param>
      <param name="displayName">Texte du panneau pour cet élément.</param>
      <param name="category">
        <see cref="T:System.String" /> respectant la casse, utilisé pour regrouper des éléments similaires sur le panneau.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />, avec la propriété et les noms des catégories spécifiés, ainsi que le texte d'affichage et de description.</summary>
      <param name="memberName">Nom qui respecte la casse de la propriété associée à cet élément de panneau.</param>
      <param name="displayName">Texte du panneau pour cet élément.</param>
      <param name="category">
        <see cref="T:System.String" /> respectant la casse, utilisé pour regrouper des éléments similaires sur le panneau.</param>
      <param name="description">Texte supplémentaire pour cet élément, utilisé dans les info-bulles ou la barre d'état.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary>Obtient le nom de la propriété à laquelle cet élément est associé.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le nom de la propriété associée.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary>Obtient ou définit un composant qui fournit ses éléments au panneau actuel.</summary>
      <returns>Composant contributeur, qui doit avoir un concepteur associé qui fournit des objets <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary>Établit un service au moment du design qui gère la collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> pour les composants.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary>Se produit lorsque <see cref="T:System.ComponentModel.Design.DesignerActionList" /> est supprimé ou ajouté pour n'importe quel composant.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
      <param name="serviceProvider">Fournisseur de services pour l'environnement au moment du design actuel.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>Ajoute <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à la collection actuelle de balises actives managées.</summary>
      <param name="comp">
        <see cref="T:System.ComponentModel.IComponent" /> auquel associer les balises actives.</param>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> qui contient les nouveaux éléments de balises actives à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">Au moins l’un des deux paramètres a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Ajoute <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> à la collection actuelle de balises actives managées.</summary>
      <param name="comp">
        <see cref="T:System.ComponentModel.IComponent" /> auquel associer les balises actives.</param>
      <param name="designerActionListCollection">
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> qui contient les nouveaux éléments de balises actives à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">Au moins l’un des deux paramètres a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary>Libère tous les composants de la gestion et efface toutes les listes de balises actives de modèle push.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary>Détermine si le service de balises actives actuel gère les listes d'actions pour le composant spécifié.</summary>
      <param name="comp">
        <see cref="T:System.ComponentModel.IComponent" /> à rechercher.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si le composant est géré par le service actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary>Libère toutes les ressources utilisées par la classe <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Design.DesignerActionService" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary>Retourne la collection de listes d'éléments de balises actives associée à un composant.</summary>
      <param name="component">Composant auquel les balises actives sont associées.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> a la valeur <see langword="null" />.</exception>
      <returns>Collection de balises actives du composant spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.Windows.Forms.Design.ComponentActionsType)">
      <summary>Retourne la collection de listes d’éléments d’action de concepteur du type spécifié associé à un composant.</summary>
      <param name="component">Composant auquel les DesignerActions sont associés.</param>
      <param name="type">
        <see cref="T:System.ComponentModel.Design.ComponentActionsType" />À utiliser pour filtrer les actions de concepteur associées.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> a la valeur <see langword="null" />.</exception>
      <returns>Collection d’actions de concepteur du type spécifié pour le composant spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Récupère les balises actives de modèle d'extraction associées à un composant.</summary>
      <param name="component">Composant auquel les balises actives sont associées.</param>
      <param name="actionLists">Collection à laquelle ajouter les balises actives associées.</param>
      <exception cref="T:System.ArgumentNullException">Au moins l’un des deux paramètres a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Récupère les balises actives de modèle push associées à un composant.</summary>
      <param name="component">Composant auquel les balises actives sont associées.</param>
      <param name="actionLists">Collection à laquelle ajouter les balises actives associées.</param>
      <exception cref="T:System.ArgumentNullException">Au moins l’un des deux paramètres a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>Supprime la liste de balises actives spécifiée de tous les composants gérés par le service actuel.</summary>
      <param name="actionList">Liste de balises actives à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actionList" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary>Supprime toutes les listes de balises actives associées au composant spécifié.</summary>
      <param name="comp">Composant à dissocier des balises actives.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>Supprime la liste de balises actives spécifiée du composant spécifié.</summary>
      <param name="comp">Composant à dissocier des balises actives.</param>
      <param name="actionList">Liste de balises actives à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">Au moins l’un des deux paramètres a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary>Représente un élément de texte statique sur un panneau des balises actives.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" />.</summary>
      <param name="displayName">Texte du panneau pour cet élément.</param>
      <param name="category">Catégorie utilisée pour regrouper des éléments similaires sur le panneau.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary>Gère l'interface utilisateur pour un panneau des balises actives. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary>Se produit lorsqu'une demande est faite pour afficher ou masquer un panneau des balises actives.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary>Libère toutes les ressources utilisées par la classe <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary>Masque le panneau des balises actives d'un composant.</summary>
      <param name="component">Composant dont le panneau des balises actives doit être masqué.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary>Met à jour le panneau des balises actives.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> à actualiser.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary>Indique si le panneau des balises actives doit être affiché automatiquement.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> à afficher automatiquement.</param>
      <returns>
        <see langword="true" /> pour afficher automatiquement le panneau des balises actives ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary>Affiche le panneau des balises actives d'un composant.</summary>
      <param name="component">Composant dont le panneau des balises actives doit être affiché.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" />.</summary>
      <param name="relatedObject">Objet associé au panneau.</param>
      <param name="changeType">Valeur qui spécifie si le panneau est affiché ou masqué.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary>Obtient un indicateur signalant si le panneau des balises actives est affiché ou masqué.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" /> qui indique l'état du panneau.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary>Obtient l'objet associé au panneau des balises actives.</summary>
      <returns>
        <see cref="T:System.Object" /> associé au panneau des balises actives.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> d'un <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
      <param name="sender">
        <see cref="T:System.Object" /> qui a déclenché l'événement.</param>
      <param name="e">Informations spécifiques à l'événement.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary>Spécifie l'état d'affichage d'un panneau des balises actives.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary>Le panneau des balises actives est masqué.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary>Le panneau des balises actives est actualisé.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary>Le panneau des balises actives est affiché.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary>Représente une classe de base pour des outils au moment du design, ne dérivant pas de <see cref="T:System.ComponentModel.Design.ComponentDesigner" />, qui offrent des fonctionnalités de balises actives ou de verbe de concepteur.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary>Initialise une instance de la classe <see cref="T:System.ComponentModel.Design.DesignerCommandSet" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary>Retourne une collection d'objets de commande.</summary>
      <param name="name">Type de collection à retourner, indiquant soit un <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />, soit un <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />.</param>
      <returns>Collection qui contient le type spécifié (<see cref="T:System.ComponentModel.Design.DesignerActionList" /> ou <see cref="T:System.ComponentModel.Design.DesignerVerb" />) d’objets de commande. L'implémentation de base retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary>Obtient la collection de toutes les balises actives associées au composant conçu.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> qui contient les balises actives du composant conçu associé.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary>Obtient la collection de tous les verbes de concepteur associés au composant conçu.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> qui contient les verbes de concepteur pour le composant conçu associé.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary>Présente une interface utilisateur pour concevoir des composants.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary>Se produit lorsque l'aire de conception est supprimée.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary>Se produit lorsque la méthode <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> de <see cref="T:System.ComponentModel.Design.DesignSurface" /> est appelée.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary>Se produit lorsque le chargement du concepteur est terminé.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary>Se produit lorsque le concepteur est sur le point d'être chargé.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary>Se produit lorsqu'un concepteur a terminé un déchargement.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary>Se produit lorsqu'un concepteur est sur le point de décharger.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary>Se produit lorsque la méthode <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> a été appelée sur <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="parentProvider">Fournisseur de services parent ou valeur <see langword="null" /> si aucun parent n'est utilisé pour résoudre des services.</param>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="parentProvider">Fournisseur de services parent ou valeur <see langword="null" /> si aucun parent n'est utilisé pour résoudre des services.</param>
      <param name="rootComponentType">Type du composant racine à créer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="rootComponentType">Type du composant racine à créer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary>Commence le processus de chargement par le chargeur de concepteur donné.</summary>
      <param name="loader">Chargeur de concepteur à utiliser pour le chargement du concepteur.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loader" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary>Commence le processus de chargement.</summary>
      <param name="rootComponentType">Type de composant à créer en mode design.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponentType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary>Crée une instance d'un composant.</summary>
      <param name="componentType">Type du composant à créer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns>Nouveau composant qui vient d'être créé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary>Crée un concepteur lorsqu'un composant est ajouté au conteneur.</summary>
      <param name="component">Composant pour lequel le concepteur doit être créé.</param>
      <param name="rootDesigner">
        <see langword="true" /> pour créer un concepteur racine ; <see langword="false" /> pour créer un concepteur normal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns>Instance du concepteur demandé ou <see langword="null" /> si un concepteur correspondant est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary>Crée une instance du type donné.</summary>
      <param name="type">Type à créer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns>Objet nouvellement créé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary>Crée un conteneur approprié à l'imbrication de contrôles ou de composants.</summary>
      <param name="owningComponent">Composant qui gère le conteneur imbriqué.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns>Conteneur imbriqué.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary>Crée un conteneur approprié à l'imbrication de contrôles ou de composants.</summary>
      <param name="owningComponent">Composant qui gère le conteneur imbriqué.</param>
      <param name="containerName">Nom supplémentaire pour le conteneur imbriqué.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns>Conteneur imbriqué.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary>Libère les ressources utilisées par le <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary>Libère les ressources utilisées par le <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary>Sérialise des modifications dans l'aire de conception.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary>Obtient un service du conteneur de services.</summary>
      <param name="serviceType">Type de service à récupérer.</param>
      <returns>Objet qui implémente <paramref name="serviceType" /> ou en est une classe dérivée ou <see langword="null" /> si le service n'existe pas dans le conteneur de services.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" />.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" />.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" />.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary>Obtient l'implémentation de <see cref="T:System.ComponentModel.IContainer" /> dans l'aire de conception.</summary>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns>Implémentation de <see cref="T:System.ComponentModel.IContainer" /> dans l'aire de conception.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary>Obtient une valeur indiquant si la **Liste d’erreurs au moment du design** se charge.</summary>
      <returns>
        <see langword="true" /> Si le **liste d’erreurs au moment du design est en** cours de chargement ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary>Obtient une valeur indiquant si l'aire de conception est actuellement chargée.</summary>
      <returns>
        <see langword="true" /> si l'aire de conception est actuellement chargée ; <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary>Retourne une collection d'erreurs de chargement ou une collection vide.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> d'erreurs de chargement.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary>Obtient le conteneur de services.</summary>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns>Conteneur de services qui fournit tous les services aux concepteurs contenus dans l'aire de conception.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary>Obtient l'affichage du concepteur racine.</summary>
      <exception cref="T:System.InvalidOperationException">L'aire de conception ne se charge pas, le chargeur du concepteur n'a pas encore créé de concepteur racine ou l'aire de conception a fini le chargement, mais ne l'a pas réussi. Plus d'informations sont disponibles dans <see cref="P:System.Exception.InnerException" />.</exception>
      <exception cref="T:System.NotSupportedException">Le concepteur est chargé mais n'offre aucune vue compatible avec cette aire de conception.</exception>
      <exception cref="T:System.ObjectDisposedException">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns>Affichage du concepteur racine.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceCollection">
      <summary>Contient une collection d’aires de conception. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)">
      <summary>Copie les membres de la collection vers le tableau <see cref="T:System.ComponentModel.Design.DesignSurface" /> spécifié, en commençant à l'index de destination déterminé.</summary>
      <param name="array">Tableau dans lequel copier les membres de la collection.</param>
      <param name="index">Index de destination à partir duquel commencer la copie.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator">
      <summary>Retourne un énumérateur qui peut itérer au sein de l'instance <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour l'instance du <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui est la destination des valeurs copiées à partir de la <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</param>
      <param name="index">L'index dans <paramref name="array" /> où commence la copie.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour l'instance du <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Count">
      <summary>Obtient le nombre total d'aires de conception dans <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</summary>
      <returns>Nombre total d'éléments dans la collection <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)">
      <summary>Obtient l'aire de conception à l'index spécifié.</summary>
      <param name="index">Index de l'aire de conception à retourner.</param>
      <exception cref="T:System.NotSupportedException">L'aire de conception spécifiée par <paramref name="index" /> n'est pas prise en charge.</exception>
      <returns>Aire de conception à l'index spécifié.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count">
      <summary>Pour obtenir une description de ce membre, consultez la propriété<see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>Nombre d'éléments contenus dans <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Pour obtenir une description de ce membre, consultez la propriété<see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="true" /> si l'accès à <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot">
      <summary>Pour obtenir une description de ce membre, consultez la propriété<see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />.</summary>
      <param name="surface">Aire de conception en cours de création.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="surface" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface">
      <summary>Obtient l'aire de conception en cours de création.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> en cours de création.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventHandler">
      <summary>Représente la méthode destinée à gérer l’événement <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> d’une classe <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />. Cette classe ne peut pas être héritée.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceManager">
      <summary>Gère une collection d’objets <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
      <summary>Se produit lorsque le concepteur actuellement actif change.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
      <summary>Se produit lors de la création d'un concepteur.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
      <summary>Se produit lors de la suppression d'un concepteur.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
      <summary>Se produit lors du changement de la sélection globale.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
      <param name="parentProvider">Fournisseur de services parent. Les demandes de services sont envoyées à ce fournisseur si elles ne peuvent pas être résolues par le gestionnaire d'aire de conception.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <summary>Crée une instance d'une aire de conception.</summary>
      <returns>Nouvelle instance d'aire de conception.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
      <summary>Crée une instance d'une aire de conception.</summary>
      <param name="parentProvider">Fournisseur de services parent. Un nouveau fournisseur de services fusionné sera créé ; il demandera d'abord un service à ce fournisseur, puis déléguera toute défaillance à l'objet du gestionnaire d'aire de conception. Ce fournisseur fusionné sera passé dans la méthode <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentProvider" /> a la valeur <see langword="null" />.</exception>
      <returns>Nouvelle instance d'aire de conception.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
      <summary>Implémentation qui crée l'aire de conception.</summary>
      <param name="parentProvider">Fournisseur de services à passer à l'aire de conception. Il s'agit soit d'une instance de <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> ou d'un objet qui implémente <see cref="T:System.IServiceProvider" /> et constitue une fusion entre le fournisseur de services de la classe <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> et un fournisseur passé extérieurement.</param>
      <returns>Nouvelle instance d'aire de conception.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <summary>Libère les ressources utilisées par le <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
      <summary>Obtient un service dans le conteneur de services du gestionnaire d’aire de conception.</summary>
      <param name="serviceType">Type de service à récupérer.</param>
      <returns>Objet qui implémente le type de service donné ou qui est une classe dérivée de ce type de service ; <see langword="null" /> si le service n'existe pas dans le conteneur de services.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
      <summary>Obtient ou définit le concepteur actif.</summary>
      <returns>Concepteur actif.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
      <summary>Obtient une collection d'aires de conception.</summary>
      <returns>Collection d'aires de conception actuellement hébergées par le gestionnaire d'aire de conception.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
      <summary>Obtient le <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> du gestionnaire d'aire de conception.</summary>
      <returns>
        <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> du gestionnaire d'aire de conception.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DisplayMode">
      <summary>Définit des identificateurs qui indiquent les modes d'affichage utilisés par <see cref="T:System.ComponentModel.Design.ByteViewer" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Ansi">
      <summary>Affichage au format ANSI.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Auto">
      <summary>Mode d'affichage qui sélectionne automatiquement un mode d'affichage. Dans ce mode, les octets sont examinés afin de déterminer s'ils sont au format hexadécimal ou imprimable. Si les octets sont au format hexadécimal, le mode <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> est sélectionné. Si les caractères correspondent à un jeu de caractères imprimables, un test s'exécute pour sélectionner automatiquement le mode d'affichage <see cref="F:System.ComponentModel.Design.DisplayMode.Ansi" /> ou <see cref="F:System.ComponentModel.Design.DisplayMode.Unicode" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Hexdump">
      <summary>Affichage au format hexadécimal.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Unicode">
      <summary>Affichage au format Unicode.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.EventBindingService">
      <summary>Implémentation par défaut de l'interface <see cref="T:System.ComponentModel.Design.IEventBindingService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.EventBindingService" />.</summary>
      <param name="provider">Fournisseur de services à partir duquel <see cref="T:System.ComponentModel.Design.EventBindingService" /> interrogera les services.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Crée un nom de méthode unique.</summary>
      <param name="component">Composant pour lequel le nom de méthode sera créé.</param>
      <param name="e">Événement pour lequel créer un nom.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ou <paramref name="e" /> est <see langword="null" />.</exception>
      <returns>Nom de méthode unique.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Fournit une notification indiquant qu'une méthode particulière n'est plus utilisée par un gestionnaire d'événements.</summary>
      <param name="component">Composant auquel la méthode est liée.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.EventDescriptor" /> pour le gestionnaire d'événements.</param>
      <param name="methodName">Nom de la méthode à libérer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>Retourne une collection de noms de méthodes compatibles.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.EventDescriptor" /> qui contient le délégué compatible.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <returns>Collection de chaînes représentant des noms de méthodes compatibles.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)">
      <summary>Obtient le service demandé de la part du fournisseur de services.</summary>
      <param name="serviceType">Type de service à récupérer.</param>
      <returns>Référence au service spécifié par <paramref name="serviceType" /> ou <see langword="null" /> si le service demandé n'est pas disponible.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode">
      <summary>Affiche le code utilisateur.</summary>
      <returns>
        <see langword="true" /> s'il est possible d'afficher le code ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Affiche le code utilisateur de la méthode spécifiée.</summary>
      <param name="component">Composant auquel la méthode est liée.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.EventDescriptor" /> pour le gestionnaire d'événements.</param>
      <param name="methodName">Nom de la méthode pour laquelle afficher du code.</param>
      <returns>
        <see langword="true" /> s'il est possible d'afficher le code ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)">
      <summary>Affiche le code utilisateur au numéro de ligne donné.</summary>
      <param name="lineNumber">Numéro de ligne à afficher.</param>
      <returns>
        <see langword="true" /> s'il est possible d'afficher le code ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Crée un nom unique pour une méthode de gestionnaire d'événements pour le composant et l'événement spécifiés.</summary>
      <param name="component">Instance du composant à laquelle l'événement est connecté.</param>
      <param name="e">Événement pour lequel créer un nom.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ou <paramref name="e" /> est <see langword="null" />.</exception>
      <returns>Nom recommandé pour la méthode de gestionnaire d'événements de cet événement.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>Obtient une collection de méthodes de gestionnaire d'événements possédant une signature de méthode compatible avec l'événement spécifié.</summary>
      <param name="e">Événement pour lequel obtenir les méthodes de gestionnaire d'événements compatibles.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <returns>Collection de chaînes représentant des noms de méthodes compatibles.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary>Obtient <see cref="T:System.ComponentModel.EventDescriptor" /> pour l'événement représenté par le descripteur de propriété spécifié, s'il représente un événement.</summary>
      <param name="property">Propriété qui représente un événement.</param>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptor" /> pour l'événement représenté par la propriété, ou <see langword="null" /> si la propriété ne représente pas un événement.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary>Convertit un ensemble de descripteurs d'événement en un ensemble de descripteurs de propriété.</summary>
      <param name="events">Événements à convertir en propriétés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> a la valeur <see langword="null" />.</exception>
      <returns>Tableau d'objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui décrivent l'ensemble d'événements.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary>Convertit un descripteur d'événement unique en un descripteur de propriété.</summary>
      <param name="e">Événement à convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui décrit l'événement.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <summary>Affiche le code utilisateur du concepteur.</summary>
      <returns>
        <see langword="true" /> si le code est affiché ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Affiche le code utilisateur de l'événement spécifié.</summary>
      <param name="component">Composant auquel l'événement est connecté.</param>
      <param name="e">Événement à afficher.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si le code est affiché ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
      <summary>Affiche le code utilisateur du concepteur à la ligne spécifiée.</summary>
      <param name="lineNumber">Numéro de la ligne sur laquelle placer le signe insertion.</param>
      <returns>
        <see langword="true" /> si le code est affiché ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Fournit une notification indiquant qu'une méthode particulière est utilisée par un gestionnaire d'événements.</summary>
      <param name="component">Composant auquel la méthode est liée.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.EventDescriptor" /> pour le gestionnaire d'événements.</param>
      <param name="methodName">Nom de la méthode.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)">
      <summary>Vérifie que le nom de méthode fourni est correct pour le langage ou le script utilisé.</summary>
      <param name="methodName">Nom de méthode à valider.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary>Représente la collection d'exceptions.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="exceptions">Tableau de type <see cref="T:System.Exception" />, contenant les objets à ajouter à la collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="context">Destination (consultez <see cref="T:System.Runtime.Serialization.StreamingContext" />) de cette sérialisation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary>Obtient le tableau d'objets <see cref="T:System.Exception" /> qui représentent la collection d'exceptions.</summary>
      <returns>Tableau <see cref="T:System.Exception" /> représentant la collection d'exceptions.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary>Définit les services de résolution de nom de type multi-cibles dans un environnement au moment du design.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary>Résout un type de la version cible de .NET Framework en un nom qualifié d'assembly.</summary>
      <param name="type">Type à résoudre.</param>
      <returns>
        <see cref="P:System.Type.AssemblyQualifiedName" /> pour <paramref name="type" /> dans la version cible de .NET Framework.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary>Fournit un jeu de méthodes pour identifier des composants hérités.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>Ajoute les composants hérités par le composant spécifié à <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="component">Composant dans lequel les composants hérités à ajouter au conteneur spécifié doivent être recherchés.</param>
      <param name="container">Conteneur dans lequel les composants hérités doivent être ajoutés.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>Ajoute les composants du type spécifié qui sont hérités par le composant spécifié à <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="type">Type de base à rechercher.</param>
      <param name="component">Composant dans lequel les composants hérités à ajouter au conteneur spécifié doivent être recherchés.</param>
      <param name="container">Conteneur dans lequel les composants hérités doivent être ajoutés.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Design.InheritanceService" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary>Obtient l'attribut d'héritage du composant spécifié.</summary>
      <param name="component">Composant pour lequel l'attribut d'héritage doit être récupéré.</param>
      <returns>
        <see cref="T:System.ComponentModel.InheritanceAttribute" /> qui décrit le niveau d'héritage d'où provient ce composant.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary>Indique s'il faut ignorer le membre spécifié.</summary>
      <param name="member">Membre à vérifier. Ce membre est soit <see cref="T:System.Reflection.FieldInfo" />, soit <see cref="T:System.Reflection.MethodInfo" />.</param>
      <param name="component">Instance du composant à laquelle ce membre est lié.</param>
      <returns>
        <see langword="true" /> si le membre spécifié doit être inclus dans le jeu de composants hérités ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />.</summary>
      <param name="succeeded">
        <see langword="true" /> pour indiquer que le chargement du concepteur a été correctement effectué ; sinon <see langword="false" />.</param>
      <param name="errors">Collection des erreurs qui se sont produites pendant le chargement du concepteur.</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary>Obtient une collection des erreurs qui se sont produites pendant le chargement du concepteur.</summary>
      <returns>Collection des erreurs qui se sont produites pendant le chargement du concepteur.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary>Obtient une valeur qui indique si le chargement du concepteur a été correctement effectué.</summary>
      <returns>
        <see langword="true" /> si le chargement du concepteur a été correctement effectué ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary>Représente la méthode qui gère l’événement <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> de la classe <see cref="T:System.ComponentModel.Design.DesignSurface" />. Cette classe ne peut pas être héritée.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />.</summary>
      <param name="changeType">Type de modification.</param>
      <param name="command">Commande de menu.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType">
      <summary>Obtient le type de modification qui a levé <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.MenuCommandsChangedType" /> qui a levé <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command">
      <summary>Obtient la commande qui a été ajoutée, supprimée ou modifiée.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> ayant été ajouté, supprimé ou modifié.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> d'un <see cref="T:System.ComponentModel.Design.MenuCommandService" />. Cette classe ne peut pas être héritée.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedType">
      <summary>Spécifie le type d'action qui s'est produite sur la collection <see cref="T:System.Windows.Forms.Design.MenuCommands" /> de l'objet connexe.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded">
      <summary>Spécifie qu'un ou plusieurs objets de commande ont été ajoutés.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged">
      <summary>Spécifie qu'une ou plusieurs commandes ont modifié leur état.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved">
      <summary>Spécifie qu'une ou plusieurs commandes ont été supprimées.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandService">
      <summary>Implémente l'interface <see cref="T:System.ComponentModel.Design.IMenuCommandService" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
      <summary>Se produit lorsque l'état d'une commande de menu a changé.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="serviceProvider">Fournisseur de services que ce service utilise pour obtenir d'autres services.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>Ajoute un gestionnaire de commandes au service de commande de menu.</summary>
      <param name="command">
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un gestionnaire de commandes <paramref name="command" /> existe déjà.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>Ajoute un verbe à la table de verbes de <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="verb">
        <see cref="T:System.ComponentModel.Design.DesignerVerb" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="verb" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
      <summary>Garantit que la liste de verbes a été créée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>Recherches du <see cref="T:System.ComponentModel.Design.MenuCommand" /> associé à l'ID de commande donné.</summary>
      <param name="commandID">
        <see cref="T:System.ComponentModel.Design.CommandID" /> à rechercher.</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> associé à la commande donnée ; sinon, <see langword="null" /> si la commande est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
      <summary>Recherches du <see cref="T:System.ComponentModel.Design.MenuCommand" /> associé à la commande donnée.</summary>
      <param name="guid">GUID de la commande.</param>
      <param name="id">ID de la commande.</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> associé à la commande donnée ; sinon, <see langword="null" /> si la commande est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
      <summary>Reçoit la liste des commandes pour un GUID donné.</summary>
      <param name="guid">GUID de la liste de commandes.</param>
      <returns>
        <see cref="T:System.Collections.ICollection" /> de commandes.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
      <summary>Obtient une référence au service demandé.</summary>
      <param name="serviceType">
        <see cref="T:System.Type" /> du service à récupérer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> a la valeur <see langword="null" />.</exception>
      <returns>Référence au <paramref name="serviceType" /> ; sinon, <see langword="null" /> si le service est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary>Appelle la commande donnée dans le formulaire local ou l'environnement global.</summary>
      <param name="commandID">Commande à appeler.</param>
      <returns>
        <see langword="true" />, si la commande a été trouvée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <summary>Appelle la commande donnée avec le paramètre donné dans le formulaire local ou l'environnement global.</summary>
      <param name="commandId">Commande à appeler.</param>
      <param name="arg">Paramètre pour l'appel.</param>
      <returns>
        <see langword="true" />, si la commande a été trouvée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>Supprime la commande de menu donnée du document.</summary>
      <param name="command">Commande à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>Supprime le verbe donné du document.</summary>
      <param name="verb">Verbe à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="verb" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary>Affiche le menu contextuel avec l'ID de commande donné à l'endroit indiqué.</summary>
      <param name="menuID">Menu contextuel à afficher.</param>
      <param name="x">Coordonnée x de l'emplacement du menu contextuel.</param>
      <param name="y">Coordonnée y de l'emplacement du menu contextuel.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandService.Verbs">
      <summary>Obtient une collection des verbes du concepteur actuellement disponibles.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> des verbes du concepteur actuellement disponibles.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary>Affiche une boîte de dialogue permettant de modifier des chaînes multilignes en mode Design.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.MultilineStringEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié avec le style de l'éditeur fourni par <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value">Instance de la valeur en cours de modification.</param>
      <returns>Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas été modifiée, cette méthode devrait retourner le même objet que celui qui a été passé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient le style de modification de la méthode <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>Valeur d'énumération <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> qui indique le style de modification pris en charge.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient une valeur indiquant si cet éditeur permet de peindre une représentation de la valeur d'un objet.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>
        <see langword="false" /> indique que ce <see cref="T:System.Drawing.Design.UITypeEditor" /> n'affiche pas de représentation visuelle dans la fenêtre Propriétés.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary>Implémente les fonctionnalités de base qui peuvent être utilisées pour concevoir des éditeurs de valeurs. Ces éditeurs peuvent, à leur tour, fournir une interface utilisateur pour représenter et modifier les valeurs d'objets des types de données pris en charge.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary>Représente la valeur actuelle de <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary>Représente la valeur précédente de <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary>Contrôle si les nœuds de la collection hiérarchique d'éléments étiquetés sont accessibles ou pas.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
      <param name="subObjectSelector">Valeur du sélecteur de sous-objet spécifié.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.ApplyTreeViewThemeStyles(System.Windows.Forms.TreeView)">
      <summary>Modifiez un <see cref="T:System.Windows.Forms.TreeView" /> contrôle Windows Forms pour utiliser le  nouveau thème de style Explorateur.</summary>
      <param name="treeView">Contrôle d'arborescence à modifier.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié à l'aide du style d'éditeur indiqué par <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> pouvant être utilisé par cet éditeur pour obtenir des services.</param>
      <param name="value">Objet à modifier.</param>
      <returns>Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas été modifiée, la méthode doit retourner le même objet que celui qui a été passé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Object" /> actuel.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à comparer avec l'objet <see cref="T:System.Object" /> actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal au <see cref="T:System.Object" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary>Remplit une collection hiérarchique d'éléments étiquetés, dont chacun est représenté par <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <param name="selector">Collection hiérarchique d'éléments étiquetés.</param>
      <param name="context">Informations de contexte d'un composant.</param>
      <param name="provider">Méthode <see cref="M:System.IServiceProvider.GetService(System.Type)" /> de cette interface qui obtient l'objet qui fournit le service.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient le style de l'éditeur utilisé par la méthode <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>Valeur <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> qui indique le style de l'éditeur utilisé par <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary>Affecte la valeur spécifiée au <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> actuel.</summary>
      <param name="value">Valeur spécifiée.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary>Affiche une collection hiérarchique d'éléments étiquetés, dont chacun est représenté par un objet <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary>Ce champ est exclusivement destiné à un usage interne.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />.</summary>
      <param name="editor">L’<see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />opérateur</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary>Ajoute un nouveau nœud d'arbre à la collection.</summary>
      <param name="label">Étiquette du nœud.</param>
      <param name="value">
        <see cref="T:System.Object" /> qui représente la valeur du nœud.</param>
      <param name="parent">Parent du nœud.</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> ajouté à la collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary>Supprime tous les nœuds d'arbre de la collection.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary>Se produit après la sélection du nœud d'arbre.</summary>
      <param name="sender">Source d'un événement.</param>
      <param name="e">
        <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Se produit lorsqu'une touche est enfoncée alors que le contrôle a le focus.</summary>
      <param name="e">Fournit des données pour l'événement <see cref="E:System.Windows.Forms.Control.KeyDown" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Se produit lorsqu'une touche est enfoncée alors que le contrôle a le focus.</summary>
      <param name="e">Fournit des données pour l'événement <see cref="E:System.Windows.Forms.Control.KeyPress" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary>Se produit lorsque le pointeur de la souris se trouve sur le contrôle et qu'un bouton de la souris est enfoncé.</summary>
      <param name="e">Fournit les données des événements <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" /> et <see cref="E:System.Windows.Forms.Control.MouseMove" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary>Affecte une valeur spécifique aux nœuds de la collection.</summary>
      <param name="value">Valeur à définir.</param>
      <param name="nodes">Collection de nœuds.</param>
      <returns>
        <see langword="true" /> si les nœuds de la collection ont été définis ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary>Initialise le service d'éditeur.</summary>
      <param name="edSvc">Service d'éditeur.</param>
      <param name="value">Valeur à définir.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary>Supprime le service d'éditeur.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <summary>Traite les messages Windows.</summary>
      <param name="m">
        <see cref="T:System.Windows.Forms.Message" /> Windows à traiter.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary>Représente un nœud de <see cref="T:System.Windows.Forms.TreeView" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary>Représente la valeur du nœud.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />.</summary>
      <param name="label">Étiquette du nœud.</param>
      <param name="value">
        <see cref="T:System.Object" /> qui représente la valeur du nœud.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary>Spécifie la version cible de .Net Framework pour un projet.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" />.</summary>
      <param name="targetFrameworkMoniker">Version cible de .Net Framework pour le projet.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary>Obtient la version cible de .Net Framework pour le projet.</summary>
      <returns>Version cible de .Net Framework pour le projet.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader">
      <summary>Fournit une implémentation de l’interface <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary>Démarre le processus de chargement.</summary>
      <param name="host">Hôte du chargeur de concepteur à charger.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le concepteur est déjà chargé ou <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> a été appelé avec un hôte de chargeur de concepteur différent.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <paramref name="host" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose">
      <summary>Libère les ressources utilisées par le <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)">
      <summary>Active ou désactive la notification de composant avec <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</summary>
      <param name="enable">
        <see langword="true" /> pour activer la notification de composant par <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> ; <see langword="false" /> pour désactiver la notification de composant par <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</param>
      <returns>
        <see langword="true" /> si la notification de composant a été activée avant cet appel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush">
      <summary>Vide les modifications en attente apportées au chargeur de concepteur.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)">
      <summary>Obtient le service demandé.</summary>
      <param name="serviceType">
        <see cref="T:System.Type" /> du service.</param>
      <returns>Service demandé ou <see langword="null" /> si le service demandé est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize">
      <summary>Initialise des services.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> n'a pas été initialisé.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded">
      <summary>Indique si le concepteur doit être rechargé.</summary>
      <returns>
        <see langword="true" /> si le concepteur doit être rechargé ; sinon, <see langword="false" />. L'implémentation par défaut retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad">
      <summary>Indique au chargeur de concepteur que le chargement est sur le point de commencer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload">
      <summary>Indique au chargeur de concepteur que le déchargement est sur le point de commencer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>Indique au chargeur de concepteur que le chargement est terminé.</summary>
      <param name="successful">
        <see langword="true" /> si le chargement s'est correctement effectué ; sinon, <see langword="false" />.</param>
      <param name="errors">
        <see cref="T:System.Collections.ICollection" /> contenant des objets (généralement des exceptions) qui ont été signalés comme des erreurs.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> n'a pas été initialisé.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying">
      <summary>Prévient le chargeur de concepteur que l'état du document est sur le point d'être modifié.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Vide toutes les modifications apportées au concepteur.</summary>
      <param name="serializationManager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour rendre persistant l'état des concepteurs chargés.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Charge un concepteur à partir de données persistantes.</summary>
      <param name="serializationManager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour charger l'état des concepteurs.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)">
      <summary>Met un rechargement du concepteur en file d'attente.</summary>
      <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)">
      <summary>Signale des erreurs qui se sont produites en vidant des modifications.</summary>
      <param name="errors">
        <see cref="T:System.Collections.ICollection" /> qui contient des objets d'erreur, habituellement des exceptions.</param>
      <exception cref="T:System.InvalidOperationException">Une ou plusieurs erreurs se sont produites en vidant des modifications.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)">
      <summary>Définit le nom de la classe complet du composant de base.</summary>
      <param name="name">Chaîne qui représente le nom complet du composant à créer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency">
      <summary>Inscrit un composant externe comme appartenant au processus de chargement managé par <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> n'a pas été initialisé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary>Signale qu'un chargement dépendant est terminé.</summary>
      <param name="successful">
        <see langword="true" /> si le chargement est un succès ; sinon, <see langword="false" />.</param>
      <param name="errorCollection">
        <see cref="T:System.Collections.ICollection" /> qui contient des erreurs qui se sont produites pendant le chargement.</param>
      <exception cref="T:System.InvalidOperationException">Aucune dépendance de charge n'a été ajoutée par <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" /> ou <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> n'a pas été initialisé.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload">
      <summary>Recharge le document de design.</summary>
      <returns>
        <see langword="true" /> si la demande de rechargement est acceptée ; <see langword="false" /> si le chargeur ne permet pas le rechargement.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost">
      <summary>Obtient l'hôte du chargeur.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> n'a pas été initialisé.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> a été supprimé.</exception>
      <returns>
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> qui a été passé à la méthode <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading">
      <summary>Obtient une valeur qui indique si le chargeur du concepteur charge l'aire de conception.</summary>
      <returns>
        <see langword="true" /> si le chargeur du concepteur charge actuellement l'aire de conception ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified">
      <summary>Obtient ou définit une valeur indiquant si le concepteur a été modifié.</summary>
      <returns>
        <see langword="true" /> si le concepteur a été modifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider">
      <summary>Obtient ou définit le fournisseur de propriétés pour le gestionnaire de sérialisation utilisé par le chargeur.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> n'a pas été initialisé.</exception>
      <returns>Objet dont les propriétés doivent être fournies au gestionnaire de sérialisation.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending">
      <summary>Obtient une valeur indiquant si un rechargement a été mis en file d'attente.</summary>
      <returns>
        <see langword="true" />, si un appel à <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> a mis une demande de rechargement en file d'attente ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions">
      <summary>Définit le comportement de la méthode <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />. Ces indicateurs peuvent être associés à l'aide de l'opérateur de bits <see langword="OR" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Default">
      <summary>Le chargeur de concepteur vide les modifications avant de recharger, mais il n'impose pas de rechargement et il n'affecte pas non plus <see langword="true" /> à la propriété <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> si des erreurs de chargement se produisent.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Force">
      <summary>Le chargeur de concepteur impose le rechargement. Normalement, un rechargement ne se produit que si la méthode <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" /> retourne <see langword="true" />. Cet indicateur ignore l'appel à cette méthode et exécute toujours le rechargement.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.ModifyOnError">
      <summary>Le chargeur de concepteur affecte la valeur <see langword="true" /> à la propriété <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> si des erreurs de chargement se produisent. Cet indicateur est utile si vous souhaitez que le chargeur soit vidé pour annuler un état persistant comportant des erreurs.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.NoFlush">
      <summary>Le chargeur de concepteur abandonne toute modification avant de recharger.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary>Sérialise un jeu de composants dans un magasin de sérialisation.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> à l'aide du fournisseur de services donné pour résoudre des services.</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> à utiliser pour résoudre des services.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary>Crée un <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <returns>Nouveau magasin de sérialisations.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary>Désérialise le magasin donné pour produire une collection d'objets.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> à partir duquel les objets seront désérialisés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> n’est pas un type de magasin de sérialisation pris en charge. Utilisez un magasin retourné par <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
      <returns>Collection de composants désérialisés.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>Désérialise le magasin donné et remplit le <see cref="T:System.ComponentModel.IContainer" /> donné avec des objets <see cref="T:System.ComponentModel.IComponent" /> désérialisés.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> à partir duquel les objets seront désérialisés.</param>
      <param name="container">Conteneur auquel des objets <see cref="T:System.ComponentModel.IComponent" /> seront ajoutés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> ou <paramref name="container" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> n’est pas un type de magasin de sérialisation pris en charge. Utilisez un magasin retourné par <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
      <returns>Collection de composants désérialisés.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary>Désérialise le <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> spécifié dans le conteneur donné, en appliquant éventuellement des valeurs de propriété par défaut.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> à partir duquel les objets seront désérialisés.</param>
      <param name="container">Conteneur d'objets auquel des données seront appliquées.</param>
      <param name="validateRecycledTypes">
        <see langword="true" /> pour valider le type recyclé ; sinon, <see langword="false" />.</param>
      <param name="applyDefaults">
        <see langword="true" /> pour appliquer des valeurs de propriété par défaut ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> ou <paramref name="container" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> n’est pas un type de magasin de sérialisation pris en charge. Utilisez un magasin retourné par <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary>Charge <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> à partir du flux donné.</summary>
      <param name="stream">Flux à partir duquel <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> doit être chargé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="stream" /> prend en charge la recherche, mais sa longueur est nulle.</exception>
      <returns>
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> chargé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Sérialise l'objet donné dans le <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> donné.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> dans lequel <paramref name="value" /> sera sérialisé.</param>
      <param name="value">L'objet à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> est fermé ou <paramref name="store" /> n’est pas un type de magasin de sérialisation pris en charge. Utilisez un magasin retourné par <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Sérialise l'objet donné en prenant en compte les valeurs de propriétés par défaut.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> dans lequel <paramref name="value" /> sera sérialisé.</param>
      <param name="value">L'objet à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> est fermé ou <paramref name="store" /> n’est pas un type de magasin de sérialisation pris en charge. Utilisez un magasin retourné par <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Sérialise le membre donné sur l’objet donné.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> dans lequel <paramref name="member" /> sera sérialisé.</param>
      <param name="owningObject">Objet qui possède le <paramref name="member" />.</param>
      <param name="member">Membre donné.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />, <paramref name="owningObject" /> ou <paramref name="member" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> est fermé ou <paramref name="store" /> n’est pas un type de magasin de sérialisation pris en charge. Utilisez un magasin retourné par <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Sérialise le membre donné sur l’objet donné, mais sérialise également le membre s’il contient la valeur de propriété par défaut.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> dans lequel <paramref name="member" /> sera sérialisé.</param>
      <param name="owningObject">Objet qui possède le <paramref name="member" />.</param>
      <param name="member">Membre donné.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />, <paramref name="owningObject" /> ou <paramref name="member" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> est fermé ou <paramref name="store" /> n’est pas un type de magasin de sérialisation pris en charge. Utilisez un magasin retourné par <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
      <summary>Fournit la classe de base pour implémenter un chargeur de concepteur CodeDOM.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose">
      <summary>Libère les ressources utilisées par la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize">
      <summary>Initialise des services.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> n'a pas été initialisé ou le chargeur de concepteur n'a pas fourni de service de résolution de type, requis pour la sérialisation CodeDom.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded">
      <summary>Retourne une valeur qui indique si un rechargement est requis.</summary>
      <exception cref="T:System.NotSupportedException">Le langage n'a pas fourni d'analyseur de code pour ce fichier ; il se peut que ce type de fichier ne prenne pas en charge de concepteur.</exception>
      <exception cref="T:System.InvalidOperationException">La classe peut être conçue, mais il ne s'agit pas de la première classe dans le fichier, ou le concepteur n'a pas pu être indiqué pour ce fichier car aucune des classes qu'il contient ne peut être conçue.</exception>
      <returns>
        <see langword="true" /> si <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> décide qu'un rechargement est requis ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad">
      <summary>Indique au chargeur de concepteur que le chargement est sur le point de commencer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload">
      <summary>Indique au chargeur de concepteur que le déchargement est sur le point de commencer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)">
      <summary>Déclenche l’événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</summary>
      <param name="component">Composant à renommer.</param>
      <param name="oldName">Nom d'origine du composant.</param>
      <param name="newName">Nouveau nom du composant.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>Indique au chargeur de concepteur que le chargement est terminé.</summary>
      <param name="successful">
        <see langword="true" /> pour indiquer que le chargement a été correctement effectué ; sinon <see langword="false" />.</param>
      <param name="errors">
        <see cref="T:System.Collections.ICollection" /> d'objets (généralement des exceptions) qui ont été signalés comme des erreurs.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse">
      <summary>Analyse le texte ou tout autre stockage persistant et retourne <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeCompileUnit" /> qui résulte d'une opération d'analyse.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Demande la sérialisation du composant racine du concepteur.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à partir duquel le sérialiseur doit être demandé.</param>
      <exception cref="T:System.NotSupportedException">Le langage n'a pas fourni d'analyseur de code pour ce fichier ; il se peut que ce type de fichier ne prenne pas en charge de concepteur.</exception>
      <exception cref="T:System.InvalidOperationException">La classe peut être conçue, mais il ne s'agit pas de la première classe dans le fichier, ou le concepteur n'a pas pu être indiqué pour ce fichier car aucune des classes qu'il contient ne peut être conçue.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Analyse le code d'un fournisseur CodeDOM.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à partir duquel le sérialiseur doit être demandé.</param>
      <exception cref="T:System.NotSupportedException">Le langage n'a pas fourni d'analyseur de code pour ce fichier ; il se peut que ce type de fichier ne prenne pas en charge de concepteur.</exception>
      <exception cref="T:System.InvalidOperationException">La classe peut être conçue, mais il ne s'agit pas de la première classe dans le fichier, ou le concepteur n'a pas pu être indiqué pour ce fichier car aucune des classes qu'il contient ne peut être conçue.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)">
      <summary>Désérialise l'objet de données de sérialisation spécifié et retourne une collection d'objets représentés par ces données.</summary>
      <param name="serializationData">Objet constitué de données sérialisées.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="serializationData" /> n’est pas un <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</exception>
      <returns>Collection d'objets représentée par <paramref name="serializationData" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)">
      <summary>Sérialise la collection d'objets spécifiée et les stocke dans un objet de données de sérialisation.</summary>
      <param name="objects">Collection d'objets à sérialiser.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> est introuvable.</exception>
      <returns>Objet qui contient l'état sérialisé de la collection d'objets spécifiée.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary>Crée un nouveau nom spécifique à tous les composants du conteneur spécifié.</summary>
      <param name="container">Conteneur dans lequel le nouvel objet est ajouté.</param>
      <param name="dataType">Type de données de l'objet auquel le nom est attribué.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataType" /> a la valeur <see langword="null" />.</exception>
      <returns>Nom unique pour le type de données.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)">
      <summary>Obtient une valeur indiquant si le nom spécifié est valide.</summary>
      <param name="name">Nom à valider.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si le nom est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)">
      <summary>Obtient une valeur indiquant si le nom spécifié est valide.</summary>
      <param name="name">Nom à valider.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> n'est pas un identificateur valide ou il existe déjà un composant avec le même nom.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)">
      <summary>Écrit des modifications d'unité de compilation dans un stockage persistant.</summary>
      <param name="unit">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> à rendre persistant.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider">
      <summary>Obtient le <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> que ce chargeur de concepteur utilisera.</summary>
      <returns>
        <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> que ce chargeur de concepteur utilisera.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService">
      <summary>Obtient le service de résolution de type à utiliser avec ce chargeur de concepteur.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> que les sérialiseurs CodeDOM utiliseront pour résoudre des types.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel">
      <summary>Détermine le modèle de localisation devant être utilisé par l'adaptateur de ressources CodeDom.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None">
      <summary>Le fournisseur de localisation doit ignorer les propriétés localisées. Il écrira toujours les ressources pour les objets sérialisables qui ne prennent pas en charge la génération du code.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyAssignment">
      <summary>Le fournisseur de localisation écrit les propriétés localisées en affectant une ressource à chaque propriété. Ce modèle est performant avec un nombre de propriétés restreint, mais il met de plus en plus difficilement à l'échelle à mesure que le nombre de propriétés contenant des valeurs par défaut augmente.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyReflection">
      <summary>Le fournisseur de localisation écrit les valeurs de propriété localisées dans un fichier de ressources et utilise la classe <see cref="T:System.ComponentModel.ComponentResourceManager" /> pour appliquer la réflexion sur les propriétés par leur nom afin de les remplir pendant l'exécution. Ce modèle utilise la réflexion pendant l'exécution ce qui peut ralentir le processus, mais il facilite la mise à l'échelle avec un nombre important de propriétés comportant des valeurs par défaut.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider">
      <summary>Fournit des services de sérialisation de ressources CodeDOM. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> utilisé par le fournisseur de localisation pour ajouter ses propriétés d'extendeur.</param>
      <param name="model">Valeur de <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> indiquant le modèle de localisation à utiliser par l'adaptateur de ressources CodeDom.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel,System.Globalization.CultureInfo[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> utilisé par le fournisseur de localisation pour ajouter ses propriétés d'extendeur.</param>
      <param name="model">Valeur de <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> indiquant le modèle de localisation à utiliser par l'adaptateur de ressources CodeDom.</param>
      <param name="supportedCultures">Tableau des cultures que cet adaptateur de ressources doit prendre en charge.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />.</summary>
      <param name="manager">Gestionnaire de sérialisation qui demande le sérialiseur.</param>
      <param name="currentSerializer">Instance du sérialiseur en cours du type spécifié. Cela peut être <see langword="null" /> s'il n'existe aucun sérialiseur du type spécifié.</param>
      <param name="objectType">Type des données de l'objet à sérialiser.</param>
      <param name="serializerType">Type des données du sérialiseur à créer.</param>
      <returns>Instance d'un sérialiseur du type demandé, ou <see langword="null" /> si la demande ne peut pas être satisfaite.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary>Sérialise un graphique d'objet en une série d'instructions CodeDOM. Cette classe fournit une classe de base abstraite pour un sérialiseur.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Désérialise en un objet l'objet CodeDOM sérialisé spécifié.</summary>
      <param name="manager">Interface du gestionnaire de sérialisation utilisée pendant le processus de désérialisation.</param>
      <param name="codeObject">Objet CodeDOM sérialisé à désérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="codeObject" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="codeObject" /> est un élément de code non pris en charge.</exception>
      <returns>Objet CodeDOM désérialisé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>Désérialise une instruction seule.</summary>
      <param name="manager">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="statement">Instruction à désérialiser.</param>
      <returns>Instance d'objet qui résulte de la désérialisation de <paramref name="statement" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary>Détermine à quel groupe d'instructions l'instruction donnée doit appartenir.</summary>
      <param name="statement">
        <see cref="T:System.CodeDom.CodeStatement" /> pour lequel déterminer le groupe.</param>
      <param name="expression">
        <see cref="T:System.CodeDom.CodeExpression" /> auquel <paramref name="statement" /> a été réduit.</param>
      <param name="targetType">
        <see cref="T:System.Type" /> de <paramref name="statement" />.</param>
      <returns>Nom du composant avec lequel <paramref name="statement" /> doit être groupé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Sérialise l’objet spécifié en un objet CodeDOM.</summary>
      <param name="manager">Gestionnaire de sérialisation à utiliser pendant la sérialisation.</param>
      <param name="value">L'objet à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns>Objet CodeDOM représentant l'objet qui a été sérialisé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Sérialise l'objet donné en prenant en compte les valeurs par défaut.</summary>
      <param name="manager">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="value">L'objet à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns>Objet CodeDom représentant <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Sérialise le membre donné sur l’objet donné.</summary>
      <param name="manager">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="owningObject">Objet auquel <paramref name="member" /> est attaché.</param>
      <param name="member">Membre à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="owningObject" /> ou <paramref name="member" /> est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> n’est pas un type sérialisable.</exception>
      <returns>
        <see cref="T:System.CodeDom.CodeStatementCollection" /> qui représente l’état sérialisé de <paramref name="member" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Sérialise le membre donné en tenant compte des valeurs par défaut.</summary>
      <param name="manager">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="owningObject">Objet auquel <paramref name="member" /> est attaché.</param>
      <param name="member">Membre à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="owningObject" /> ou <paramref name="member" /> est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> n’est pas un type sérialisable.</exception>
      <returns>Objet CodeDom représentant <paramref name="member" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Sérialise la valeur spécifiée en une expression CodeDOM.</summary>
      <param name="manager">Gestionnaire de sérialisation à utiliser pendant la sérialisation.</param>
      <param name="value">L'objet à sérialiser.</param>
      <returns>Valeur sérialisée. Cela retourne <see langword="null" /> si aucune expression de référence ne peut être obtenue pour la valeur spécifiée ou si la valeur ne peut pas être sérialisée.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary>Fournit une classe de base pour les classes <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary>Désérialise l'expression donnée dans un objet en mémoire.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="name">Nom de l'objet qui résulte de l'expression. Peut être <see langword="null" /> s'il n'est pas nécessaire de nommer l'objet.</param>
      <param name="expression">
        <see cref="T:System.CodeDom.CodeExpression" /> à interpréter.</param>
      <returns>Objet qui résulte de l'interprétation de <paramref name="expression" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary>Retourne une instance du type donné.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="type">
        <see cref="T:System.Type" /> de l'instance à retourner.</param>
      <param name="parameters">Paramètres à passer au constructeur pour <paramref name="type" />.</param>
      <param name="name">Nom de l'objet désérialisé.</param>
      <param name="addToContainer">
        <see langword="true" /> pour ajouter cet objet au conteneur de design ; sinon, <see langword="false" />. L'objet doit implémenter <see cref="T:System.ComponentModel.IComponent" /> pour qu'il entre en vigueur.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="type" /> est <see langword="null" />.</exception>
      <returns>Instance de <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Désérialise les propriétés sur l’objet donné à partir du bundle de ressources de la culture invariante.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value">Objet dont les propriétés doivent être désérialisées.</param>
      <param name="filter">Tableau <see cref="T:System.Attribute" /> qui filtre les propriétés à désérialiser.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>Désérialise une instruction en interprétant et en exécutant une instruction CodeDOM.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="statement">
        <see cref="T:System.CodeDom.CodeStatement" /> à désérialiser.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Obtient une collection d'attributs définis dans la version cible du projet du .NET Framework.</summary>
      <param name="manager">Gestionnaire de sérialisation.</param>
      <param name="type">Type cible.</param>
      <returns>Collection d'attributs définis dans la version cible du projet du .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Obtient une collection d'attributs définis dans la version cible du projet du .NET Framework.</summary>
      <param name="manager">Gestionnaire de sérialisation.</param>
      <param name="instance">Objet du type cible.</param>
      <returns>Collection d'attributs définis dans la version cible du projet du .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Obtient une collection d'événements définis dans la version cible du projet du .NET Framework.</summary>
      <param name="manager">Gestionnaire de sérialisation.</param>
      <param name="instance">Objet du type cible.</param>
      <param name="attributes">Tableau d'attributs à passer à la version cible du .NET Framework.</param>
      <returns>Collection d'événements définis dans la version cible du projet du .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Retourne une expression pour l'objet donné.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value">Objet pour lequel une expression doit être obtenue.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> représentant <paramref name="value" /> ou <see langword="null" /> s’il n’existe pas d’expression pour <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Obtient une collection de propriétés définies dans la version cible du projet du .NET Framework.</summary>
      <param name="manager">Gestionnaire de sérialisation.</param>
      <param name="instance">Objet du type cible.</param>
      <param name="attributes">Tableau d'attributs à passer à la version cible du .NET Framework.</param>
      <returns>Collection de propriétés définies dans la version cible du projet du .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Obtient un type de réflexion généré à partir de métadonnées de type.</summary>
      <param name="manager">Gestionnaire de sérialisation.</param>
      <param name="type">Type à partir duquel utiliser des métadonnées.</param>
      <returns>Type de réflexion généré à partir des métadonnées de <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Obtient un type de réflexion généré à partir de métadonnées d'objets.</summary>
      <param name="manager">Gestionnaire de sérialisation.</param>
      <param name="instance">Objet à partir duquel utiliser des métadonnées.</param>
      <returns>Type de réflexion généré à partir des métadonnées de <paramref name="object" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Recherche un sérialiseur pour la valeur d'objet donnée.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value">Objet spécifiant le sérialiseur à récupérer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> approprié pour <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Recherche un sérialiseur pour le type donné.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="valueType">
        <see cref="T:System.Type" /> spécifiant le sérialiseur à récupérer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="valueType" /> est <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> approprié pour <paramref name="valueType" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary>Obtient un <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> qui connaît la version cible du .NET Framework, à utiliser dans le filtrage de types.</summary>
      <param name="provider">Service de fournisseur de description de type.</param>
      <param name="instance">Objet duquel le service de fournisseur de description de type peut être dérivé, si <paramref name="provider" /> est <see langword="null" />.</param>
      <returns>Fournisseur de description de type connaissant .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Retourne un nom unique pour l'objet donné.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value">Objet pour lequel le nom doit être récupéré.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns>Nom unique pour <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Retourne une valeur qui indique si l'objet donné a été sérialisé.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value">Objet dont la sérialisation précédente doit être testée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si <paramref name="value" /> a été sérialisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>Retourne une valeur qui indique si l'objet donné a été sérialisé, en tenant éventuellement compte des expressions prédéfinies.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value">Objet dont la sérialisation précédente doit être testée.</param>
      <param name="honorPreset">
        <see langword="true" /> pour inclure des expressions prédéfinies ; sinon <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si <paramref name="value" /> a été sérialisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary>Retourne une expression qui représente la création de l'objet donné.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value">L'objet à sérialiser.</param>
      <param name="isComplete">
        <see langword="true" /> si <paramref name="value" /> a été entièrement sérialisé ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns>Expression qui représente la création de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary>Sérialise l’événement donné dans la collection d’instructions donnée.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="statements">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> dans lequel l’événement est sérialisé.</param>
      <param name="value">Objet auquel <paramref name="descriptor" /> est lié.</param>
      <param name="descriptor">
        <see cref="T:System.ComponentModel.EventDescriptor" /> qui spécifie l’événement à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> ou <paramref name="descriptor" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> n’est pas disponible.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Sérialise les événements spécifiés dans la collection d’instructions donnée.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="statements">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> dans lequel l’événement est sérialisé.</param>
      <param name="value">Objet sur lequel les événements doivent être sérialisés.</param>
      <param name="filter">Tableau de <see cref="T:System.Attribute" /> qui filtre les événements à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" /> ou <paramref name="statements" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Sérialise les propriétés sur l’objet donné dans la collection d’instructions donnée.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="statements">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> dans lequel les propriétés doivent être sérialisées.</param>
      <param name="value">Objet dans lequel les propriétés doivent être sérialisées.</param>
      <param name="filter">Tableau de <see cref="T:System.Attribute" /> qui filtre les propriétés à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" /> ou <paramref name="statements" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Sérialise les propriétés sur l’objet donné dans le bundle de ressources de la culture invariante.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="statements">Non utilisé.</param>
      <param name="value">Objet dont les propriétés seront sérialisées.</param>
      <param name="filter">Tableau de <see cref="T:System.Attribute" /> qui filtre les propriétés à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" /> ou <paramref name="statements" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary>Sérialise une propriété sur l’objet donné.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="statements">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> dans lequel la propriété est sérialisée.</param>
      <param name="value">Objet sur lequel la propriété est sérialisée.</param>
      <param name="propertyToSerialize">Propriété à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> ou <paramref name="propertyToSerialize" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>Sérialise l'objet donné dans un groupe de ressources à l'aide du nom de ressource donné.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="resourceName">Nom du groupe de ressources dans lequel <paramref name="value" /> sera sérialisé.</param>
      <param name="value">L'objet à sérialiser.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>Sérialise l'objet donné dans un groupe de ressources à l'aide du nom de ressource donné.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="resourceName">Nom du groupe de ressources dans lequel <paramref name="value" /> sera sérialisé.</param>
      <param name="value">L'objet à sérialiser.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Sérialise l'objet donné dans une expression.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value">L'objet à sérialiser. Peut être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> a la valeur <see langword="null" />.</exception>
      <returns>Objet <see cref="T:System.CodeDom.CodeExpression" /> si <paramref name="value" /> peut être sérialisé ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Sérialise l'objet donné dans une expression.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value">L'objet à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> qui contient <paramref name="value" /> comme expression sérialisée.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>Sérialise l'objet donné dans une expression appropriée pour la culture dite indifférente.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value">L'objet à sérialiser.</param>
      <param name="ensureInvariant">
        <see langword="true" /> pour sérialiser dans la culture dite indifférente ; sinon <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> qui contient <paramref name="value" /> comme expression sérialisée.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary>Associe un objet à une expression.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value">L'objet à sérialiser.</param>
      <param name="expression">
        <see cref="T:System.CodeDom.CodeExpression" /> auquel associer <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" /> ou <paramref name="expression" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary>Associe un objet à une expression, en spécifiant éventuellement une expression prédéfinie.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value">L'objet à sérialiser.</param>
      <param name="expression">
        <see cref="T:System.CodeDom.CodeExpression" /> auquel associer <paramref name="value" />.</param>
      <param name="isPreset">
        <see langword="true" /> pour spécifier une expression prédéfinie ; sinon, <see langword="false" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary>Exception levée si des informations sur le numéro de la ligne sont disponibles pour une erreur de sérialisation.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> avec l'exception et les informations sur la ligne spécifiées.</summary>
      <param name="ex">Exception à lever.</param>
      <param name="linePragma">
        <see cref="T:System.CodeDom.CodeLinePragma" /> indiquant l'endroit où l'erreur s'est produite.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />.</summary>
      <param name="ex">Exception à lever.</param>
      <param name="manager">Objet <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à partir duquel extraire le contexte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> avec le message et les informations sur la ligne spécifiées.</summary>
      <param name="message">Message décrivant l'exception.</param>
      <param name="linePragma">
        <see cref="T:System.CodeDom.CodeLinePragma" /> indiquant l'endroit où l'erreur s'est produite.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />.</summary>
      <param name="message">Message décrivant l'exception.</param>
      <param name="manager">Objet <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à partir duquel extraire le contexte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec le nom du paramètre et d'autres informations se rapportant à l'exception.</summary>
      <param name="info">Stocke les données utilisées pour sérialiser ou désérialiser l'objet que <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> sérialisait ou désérialisait.</param>
      <param name="context">Décrit la source et la destination du flux ayant généré l'exception, ainsi qu'un moyen pour la sérialisation de conserver ce contexte et un contexte supplémentaire défini par l'appelant.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary>Obtient ou définit les informations sur la ligne pour l'erreur associée à l'exception.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeLinePragma" /> indiquant les informations sur la ligne pour l'erreur.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary>Sérialise des collections.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary>Vérifie la prise en charge de la sérialisation par <paramref name="method" />.</summary>
      <param name="method">
        <see cref="T:System.Reflection.MethodInfo" /> dont les attributs de sérialisation doivent être vérifiés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si <paramref name="method" /> prend en charge la sérialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Sérialise la collection donnée dans un objet CodeDOM.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pendant la sérialisation.</param>
      <param name="value">L'objet à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns>Objet CodeDom qui représente <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Sérialise la collection donnée.</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pendant la sérialisation.</param>
      <param name="targetExpression">
        <see cref="T:System.CodeDom.CodeExpression" /> qui fait référence à la collection</param>
      <param name="targetType">
        <see cref="T:System.Type" /> de la collection.</param>
      <param name="originalCollection">Collection à sérialiser.</param>
      <param name="valuesToSerialize">Valeurs à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" /> ou <paramref name="valuesToSerialize" /> a la valeur <see langword="null" />.</exception>
      <returns>Collection sérialisée si le processus de sérialisation a réussi ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary>Fournit une implémentation de l’interface <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary>Se produit lors de la création d'une session.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary>Se produit lors de la suppression d'une session.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary>Se produit lorsque la méthode <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> ne parvient pas à trouver le nom spécifié dans la table de noms du gestionnaire de sérialisation.</summary>
      <exception cref="T:System.InvalidOperationException">Le gestionnaire de sérialisation ne dispose d'aucune session de sérialisation active.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary>Se produit lorsque la sérialisation est terminée.</summary>
      <exception cref="T:System.InvalidOperationException">Le gestionnaire de sérialisation ne dispose d'aucune session de sérialisation active.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> avec le fournisseur de services donné.</summary>
      <param name="provider">Élément <see cref="T:System.IServiceProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Crée une instance d'un type.</summary>
      <param name="type">Type dont une instance doit être créée.</param>
      <param name="arguments">Paramètres du constructeur du type. Il peut s’agir de <see langword="null" /> ou d’une collection vide pour appeler le constructeur sans paramètre.</param>
      <param name="name">Nom à attribuer à l'objet. Si la valeur est <see langword="null" />, aucun nom n'est attribué à l'objet, à moins que celui-ci soit ajouté à un conteneur et que le conteneur donne un nom à l'objet.</param>
      <param name="addToContainer">
        <see langword="true" /> pour ajouter l'objet au conteneur si l'objet implémente <see cref="T:System.ComponentModel.IComponent" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="type" /> n'a pas de constructeur qui prend des paramètres contenus dans <paramref name="arguments" />.</exception>
      <returns>Nouvelle instance du type spécifié par <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary>Crée une nouvelle session de sérialisation.</summary>
      <exception cref="T:System.InvalidOperationException">Le gestionnaire de sérialisation se trouve déjà dans une session. Cette version de <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> ne prend pas en charge des sessions simultanées.</exception>
      <returns>
        <see cref="T:System.IDisposable" /> qui représente une nouvelle session de sérialisation.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary>Obtient le type correspondant au nom de type spécifié.</summary>
      <param name="typeName">Nom du type à obtenir.</param>
      <returns>Type spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>Obtient le sérialiseur pour le type d'objet donné.</summary>
      <param name="objectType">Type d'objet pour lequel le sérialiseur doit être récupéré.</param>
      <param name="serializerType">Type de sérialiseur à récupérer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectType" /> ou <paramref name="serializerType" /> est <see langword="null" />.</exception>
      <returns>Sérialiseur de <paramref name="objectType" /> ou <see langword="null" />, s'il est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary>Obtient le service demandé.</summary>
      <param name="serviceType">Type de service à récupérer.</param>
      <returns>Service demandé ou <see langword="null" /> si le service ne peut pas être résolu.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary>Obtient le type demandé.</summary>
      <param name="typeName">Nom du type à récupérer.</param>
      <returns>Type demandé ou <see langword="null" /> si le type ne peut pas être résolu.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Ajoute un fournisseur de sérialisation personnalisé au gestionnaire de sérialisation.</summary>
      <param name="provider">Fournisseur de sérialisation à ajouter.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Implémente la méthode <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />.</summary>
      <param name="type">Type de données à créer.</param>
      <param name="arguments">Arguments à passer au constructeur de ce type.</param>
      <param name="name">Nom de l'objet. Ce nom peut être utilisé pour accéder ultérieurement à l'objet via <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />. Si <see langword="null" /> est passée, l'objet est toujours créé, mais n'est pas accessible par son nom.</param>
      <param name="addToContainer">
        <see langword="true" /> pour ajouter cet objet au conteneur de design. L'objet doit implémenter <see cref="T:System.ComponentModel.IComponent" /> pour qu'il entre en vigueur.</param>
      <returns>Instance de l'objet qui vient d'être créé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary>Récupère une instance d'un objet créé du nom spécifié.</summary>
      <param name="name">Le nom de l'objet à récupérer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">L'accès à cette propriété s'est effectué en dehors d'une session de sérialisation.</exception>
      <returns>Instance de l'objet portant le nom donné, ou <see langword="null" /> si aucun objet portant ce nom n'est détecté.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary>Récupère un nom pour l'objet spécifié.</summary>
      <param name="value">Objet pour lequel le nom doit être récupéré.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">L'accès à cette propriété s'est effectué en dehors d'une session de sérialisation.</exception>
      <returns>Nom de l'objet, ou <see langword="null" /> si l'objet est sans nom.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary>Obtient un sérialiseur du type demandé pour le type d'objet spécifié.</summary>
      <param name="objectType">Type de l'objet pour lequel le sérialiseur doit être obtenu.</param>
      <param name="serializerType">Type du sérialiseur à récupérer.</param>
      <returns>Instance du sérialiseur demandé, ou <see langword="null" /> si aucun sérialiseur approprié n'est détecté.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary>Obtient un type portant le nom spécifié.</summary>
      <param name="typeName">Nom qualifié complet du type à charger.</param>
      <exception cref="T:System.InvalidOperationException">L'accès à cette propriété s'est effectué en dehors d'une session de sérialisation.</exception>
      <returns>Instance du type, ou <see langword="null" /> si le type ne peut pas être chargé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Supprime un fournisseur de sérialisation précédemment ajouté.</summary>
      <param name="provider">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> à supprimer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary>Utilisé pour signaler une erreur récupérable dans une sérialisation.</summary>
      <param name="errorInformation">Objet qui contient les informations relatives à l'erreur, généralement de type <see cref="T:System.String" /> ou <see cref="T:System.Exception" />.</param>
      <exception cref="T:System.InvalidOperationException">L'accès à cette propriété s'est effectué en dehors d'une session de sérialisation.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary>Définit le nom de l'objet spécifié.</summary>
      <param name="instance">Objet dont le nom doit être défini.</param>
      <param name="name">
        <see cref="T:System.String" /> utilisé comme nom de l'objet.</param>
      <exception cref="T:System.ArgumentNullException">Au moins l’un des deux paramètres a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">L'objet spécifié par instance a déjà un nom ou <paramref name="name" /> est déjà utilisé par un autre objet nommé.</exception>
      <exception cref="T:System.InvalidOperationException">L'accès à cette propriété s'est effectué en dehors d'une session de sérialisation.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary>Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</summary>
      <param name="serviceType">Objet spécifiant le type d'objet service à obtenir.</param>
      <returns>Objet service de type <paramref name="serviceType" />.  
  
- ou - 
 <see langword="null" /> s’il n’existe aucun objet de service de type <paramref name="serviceType" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary>Obtient ou définit le conteneur pour ce gestionnaire de sérialisation.</summary>
      <exception cref="T:System.InvalidOperationException">Le gestionnaire de sérialisation dispose d'une session de sérialisation active.</exception>
      <returns>
        <see cref="T:System.ComponentModel.IContainer" /> auquel le gestionnaire de sérialisation ajoute des composants.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary>Obtient la liste d'erreurs qui se sont produites pendant une sérialisation ou une désérialisation.</summary>
      <exception cref="T:System.InvalidOperationException">L'accès à cette propriété s'est effectué en dehors d'une session de sérialisation.</exception>
      <returns>Liste d'erreurs qui se sont produites pendant une sérialisation ou une désérialisation.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary>Obtient ou définit une valeur qui indique si la méthode <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> doit vérifier la présence du nom donné dans le conteneur.</summary>
      <exception cref="T:System.InvalidOperationException">Cette propriété a été changée à partir d'une session de sérialisation.</exception>
      <returns>
        <see langword="true" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> passe le nom du composant donné ; <see langword="false" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> vérifie la présence du nom donné dans le conteneur. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary>Obtient l'objet qui doit être utilisé pour fournir des propriétés à la propriété <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> du gestionnaire de sérialisation.</summary>
      <returns>Objet qui doit être utilisé pour fournir des propriétés à la propriété <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> du gestionnaire de sérialisation.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary>Obtient ou définit une valeur qui indique si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> créera toujours une nouvelle instance d’un type.</summary>
      <exception cref="T:System.InvalidOperationException">Le gestionnaire de sérialisation dispose d'une session de sérialisation active.</exception>
      <returns>
        <see langword="true" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> retourne l'instance existante ; <see langword="false" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> crée une nouvelle instance d'un type. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary>Obtient la pile de contexte pour cette session de sérialisation.</summary>
      <exception cref="T:System.InvalidOperationException">L'accès à cette propriété s'est effectué en dehors d'une session de sérialisation.</exception>
      <returns>
        <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> qui stocke des données.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary>Implémente la propriété <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />.</summary>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui contient les propriétés à sérialiser.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary>Obtient ou définit une valeur qui indique si la méthode <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> vérifie que les noms correspondants font référence au même type.</summary>
      <exception cref="T:System.InvalidOperationException">Le gestionnaire de sérialisation dispose d'une session de sérialisation active.</exception>
      <returns>
        <see langword="true" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> vérifie les types ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary>Fournit un moyen de passer l'état de contexte à des sérialiseurs. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> avec l’expression et le propriétaire donnés.</summary>
      <param name="expression">Expression de code donnée.</param>
      <param name="expressionType">Type de l’expression de code donnée.</param>
      <param name="owner">Propriétaire de l’expression de code donnée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />, <paramref name="expressionType" /> ou <paramref name="owner" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> avec une valeur actuelle.</summary>
      <param name="expression">Expression de code donnée.</param>
      <param name="expressionType">Type de l’expression de code donnée.</param>
      <param name="owner">Propriétaire de l’expression de code donnée.</param>
      <param name="presetValue">Valeur prédéfinie de l’expression de code donnée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />, <paramref name="expressionType" /> ou <paramref name="owner" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary>Obtient l'expression que ce contexte représente.</summary>
      <returns>Expression que ce contexte représente.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary>Obtient le <see cref="T:System.Type" /> de l'expression.</summary>
      <returns>
        <see cref="T:System.Type" /> de l'expression.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary>Obtient l'objet propriétaire de cette expression.</summary>
      <returns>Objet propriétaire de cette expression.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary>Obtient la valeur prédéfinie d'une expression.</summary>
      <returns>Valeur prédéfinie de cette expression ou <see langword="null" /> si elle n'est pas assignée.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload">
      <summary>Fournit une interface pouvant être utilisée pour optimiser le rechargement d'un concepteur.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner(System.CodeDom.CodeCompileUnit)">
      <summary>Indique si le concepteur doit être rechargé de manière à importer correctement l'unité de compilation spécifiée.</summary>
      <param name="newTree">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> contenant le code du document du concepteur.</param>
      <returns>
        <see langword="true" /> si le concepteur doit être rechargé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary>Fournit la classe de base pour sérialiser une primitive de réflexion dans le graphique d'objets.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary>Sérialise le descripteur membre donné sur la valeur donnée vers une collection d'instructions.</summary>
      <param name="manager">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="value">Objet auquel le membre est lié.</param>
      <param name="descriptor">Descripteur du membre à sérialiser.</param>
      <param name="statements">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> dans lequel <paramref name="descriptor" /> est sérialisé.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Détermine si le membre donné doit être sérialisé.</summary>
      <param name="manager">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="value">Objet auquel le membre est lié.</param>
      <param name="descriptor">Descripteur du membre à sérialiser.</param>
      <returns>
        <see langword="true" />, si le membre décrit par <paramref name="descriptor" /> doit être sérialisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary>Contient une table d'instructions fournies par <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary>Détermine si la table contient le propriétaire d'instructions donné.</summary>
      <param name="statementOwner">Propriétaire de la collection d'instructions.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si <paramref name="statementOwner" /> se trouve dans la table ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary>Retourne un <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary>Remplit la table d'instructions avec une collection de propriétaires d'instructions.</summary>
      <param name="statementOwners">Collection de propriétaires d'instructions à ajouter à la table.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary>Remplit la table d'instructions avec un propriétaire d'instructions.</summary>
      <param name="owner">Propriétaire d'instructions à ajouter à la table.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer la collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary>Reçoit la collection d'instructions pour le propriétaire donné.</summary>
      <param name="statementOwner">Propriétaire de la collection d'instructions.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> a la valeur <see langword="null" />.</exception>
      <returns>Collection d'instructions pour <paramref name="statementOwner" /> ou <see langword="null" /> si <paramref name="statementOwner" /> n'est pas dans la table.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> ajoute un contexte racine pour fournir une définition de l'objet racine. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.RootContext" />.</summary>
      <param name="expression">Expression qui représente l'objet racine dans le graphique d'objets.</param>
      <param name="value">Objet racine du graphique d'objets.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary>Obtient l'expression qui représente l'objet racine dans le graphique d'objets.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> qui représente l'objet racine dans le graphique d'objets.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary>Obtient l'objet racine du graphique d'objets.</summary>
      <returns>Objet racine du graphique d'objets.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary>Indique que les sérialiseurs doivent gérer des valeurs par défaut. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> avec la possibilité d'établir un lien à un membre spécifique.</summary>
      <param name="member">Membre auquel ce contexte est lié. Peut être <see langword="null" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary>Obtient une valeur qui indique si le membre donné doit être sérialisé dans ce contexte.</summary>
      <param name="member">Membre à examiner pour la sérialisation.</param>
      <returns>
        <see langword="true" /> si le membre donné doit être sérialisé dans ce contexte ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary>Obtient le membre auquel ce contexte est lié.</summary>
      <returns>Membre auquel ce contexte est lié ou <see langword="null" /> si le contexte est lié à tous les membres d'un objet.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary>Fournit un emplacement dans lequel des instructions peuvent être sérialisées. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary>Obtient une collection d'instructions offerte par le contexte d'instruction.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" /> qui contient des instructions offertes par le contexte d'instruction.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary>Sérialise un objet vers un type nouveau.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>Désérialise la déclaration de type donnée.</summary>
      <param name="manager">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="declaration">Déclaration de type à utiliser pour une sérialisation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="typeDecl" /> est <see langword="null" />.</exception>
      <returns>Objet racine.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary>Retourne la méthode dans laquelle sont stockées les instructions utilisées pour sérialiser un membre.</summary>
      <param name="manager">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="declaration">Déclaration de type à utiliser pour la sérialisation.</param>
      <param name="value">Valeur à utiliser pour la sérialisation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="typeDecl" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns>Méthode utilisée pour émettre tout le code d’initialisation pour le membre donné.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>Retourne un tableau de méthodes à interpréter pendant une désérialisation.</summary>
      <param name="manager">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="declaration">Déclaration de type à utiliser pour la sérialisation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="typeDecl" /> est <see langword="null" />.</exception>
      <returns>Tableau de méthodes <see cref="T:System.CodeDom.CodeMemberMethod" /> à interpréter pendant une désérialisation.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary>Sérialise la racine de l'objet en créant une nouvelle déclaration de type qui définit la racine.</summary>
      <param name="manager">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="root">L'objet à sérialiser.</param>
      <param name="members">Collection facultative de membres. Peut être <see langword="null" /> ou vide.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="root" /> est <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeDeclaration" /> qui définit l'objet racine.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary>Spécifie la fonctionnalité générique Annuler/Refaire au moment du design.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary>Se produit immédiatement avant l'exécution d'une opération d'annulation.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary>Se produit immédiatement après l'exécution d'une opération d'annulation.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <param name="provider">Fournisseur de services apparentés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Un service requis est introuvable. Consultez <see cref="T:System.ComponentModel.Design.UndoEngine" /> pour les services requis. Si vous avez supprimé ce service, assurez-vous d'en fournir un en remplacement.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>Ajoute <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> à la pile d'annulation.</summary>
      <param name="unit">Unité d'annulation à ajouter.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary>Crée un <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="name">Nom de l'unité à créer.</param>
      <param name="primary">
        <see langword="true" /> pour créer la première unité d'une série d'unités imbriquées ; <see langword="false" /> pour créer les unités imbriquées suivantes.</param>
      <returns>Nouveau <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> avec un nom spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>Élimine <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="unit">Unité à éliminer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Design.UndoEngine" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary>Obtient le service demandé.</summary>
      <param name="serviceType">Type de service à récupérer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="serviceType" /> est requis, mais est introuvable. Si vous avez supprimé ce service, assurez-vous d'en fournir un en remplacement.</exception>
      <returns>Le service demandé, s'il existe.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary>Obtient le service demandé.</summary>
      <param name="serviceType">Type de service à récupérer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> a la valeur <see langword="null" />.</exception>
      <returns>Service demandé ou <see langword="null" /> si le service demandé est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" />.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" />.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary>Active ou désactive <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.ComponentModel.Design.UndoEngine" /> est activé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary>Indique si une opération d'annulation est en cours.</summary>
      <returns>
        <see langword="true" /> si une opération d'annulation est en cours ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary>Encapsule une unité de travail qu'un utilisateur peut annuler.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="engine">Moteur d'annulation à qui cette unité d'annulation appartient.</param>
      <param name="name">Nom de cette unité d'annulation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="engine" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary>Reçoit un appel du moteur d'annulation pour fermer cette unité.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Reçoit un appel de <see cref="T:System.ComponentModel.Design.UndoEngine" /> en réponse à un événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Reçoit un appel de <see cref="T:System.ComponentModel.Design.UndoEngine" /> en réponse à un événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Reçoit un appel de <see cref="T:System.ComponentModel.Design.UndoEngine" /> en réponse à un événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>Reçoit un appel de <see cref="T:System.ComponentModel.Design.UndoEngine" /> en réponse à un événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Reçoit un appel de <see cref="T:System.ComponentModel.Design.UndoEngine" /> en réponse à un événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Reçoit un appel de <see cref="T:System.ComponentModel.Design.UndoEngine" /> en réponse à un événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary>Reçoit un appel de <see cref="T:System.ComponentModel.Design.UndoEngine" /> en réponse à un événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary>Obtient une instance du service demandé.</summary>
      <param name="serviceType">Type de service à récupérer.</param>
      <returns>Instance du service donné ou <see langword="null" /> si le service ne peut pas être résolu.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary>Retourne <see cref="T:System.String" /> qui représente le nom actuel de l'unité.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente le nom actuel de l'unité.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary>Exécute une action d'annulation ou de répétition.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary>Appelé par <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> pour exécuter une opération d'annulation.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary>Obtient une valeur indiquant si <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> ne contient pas d'événement.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> ne contient pas d'événement ; <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary>Obtient le nom du <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <returns>Nom de l'objet <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary>Obtient le <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> parent.</summary>
      <returns>
        <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> auquel <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> est attaché.</returns>
    </member>
    <member name="T:System.Drawing.Design.BitmapEditor">
      <summary>Fournit une interface utilisateur qui permet de sélectionner des fichiers bitmap dans un Explorateur de propriétés.</summary>
    </member>
    <member name="F:System.Drawing.Design.BitmapEditor.BitmapExtensions">
      <summary>Fournit la liste des extensions de fichier par défaut utilisées pour le filtrage de la liste de fichiers.</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.BitmapEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetExtensions">
      <summary>Obtient les extensions du filtre de liste de fichiers que l'éditeur de bitmaps utilise initialement pour filtrer la liste de fichiers.</summary>
      <returns>Jeu d'extensions de fichier par défaut utilisé pour le filtrage de la liste de fichiers.</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetFileDialogDescription">
      <summary>Obtient la description du filtre de liste de fichiers par défaut fourni par cet éditeur.</summary>
      <returns>Description du type de fichier par défaut sur lequel la liste doit être filtrée.</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.LoadFromStream(System.IO.Stream)">
      <summary>Charge une image à partir du flux spécifié.</summary>
      <param name="stream">Flux à partir duquel l'image doit être chargée.</param>
      <returns>
        <see cref="T:System.Drawing.Image" /> chargé à partir du flux.</returns>
    </member>
    <member name="T:System.Drawing.Design.ColorEditor">
      <summary>Fournit <see cref="T:System.Drawing.Design.UITypeEditor" /> pour sélectionner visuellement une couleur.</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ColorEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié à l'aide du style de l'éditeur fourni par la méthode <see cref="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value">Instance de la valeur en cours de modification.</param>
      <returns>Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas changé, l'objet retourné doit être le même que celui qui a été passé.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient le style de modification de la méthode Edit. Si la méthode n'est pas prise en charge, <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> sera retourné.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>Valeur enum indiquant le style de modification fourni.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient une valeur indiquant si cet éditeur permet de peindre une représentation de la valeur d'un objet.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>
        <see langword="true" /> si <see cref="Overload:System.Drawing.Design.ColorEditor.PaintValue" /> est implémenté ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Peint une valeur représentative de l'objet donné sur la toile fournie.</summary>
      <param name="e">Indique l'élément à peindre et l'emplacement où il doit être peint.</param>
    </member>
    <member name="T:System.Drawing.Design.ContentAlignmentEditor">
      <summary>Fournit un <see cref="T:System.Drawing.Design.UITypeEditor" /> pour modifier visuellement l'alignement du contenu.</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ContentAlignmentEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié à l'aide du style de l'éditeur fourni par la méthode <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value">Instance de la valeur en cours de modification.</param>
      <returns>Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas changé, l'objet retourné doit être le même que celui qui a été passé.</returns>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient le style de modification de la méthode <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.EditValue" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>Valeur <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification fourni. Si la méthode de récupération du style de modification n'est pas prise en charge, <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> sera retourné.</returns>
    </member>
    <member name="T:System.Drawing.Design.CursorEditor">
      <summary>Fournit un <see cref="T:System.Drawing.Design.UITypeEditor" /> pouvant effectuer une recherche de fichier par défaut pour les fichiers curseur (.cur).</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.CursorEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié à l'aide du style de l'éditeur fourni par la méthode <see cref="Overload:System.Drawing.Design.CursorEditor.GetEditStyle" />.</summary>
      <param name="context">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <param name="provider">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value">Instance de la valeur en cours de modification.</param>
      <returns>Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas changé, l'objet retourné doit être le même que celui qui a été passé.</returns>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Récupère le style de modification de la méthode <see cref="Overload:System.Drawing.Design.CursorEditor.EditValue" />.</summary>
      <param name="context">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <returns>Valeur enum indiquant le style de modification fourni. Si la méthode n'est pas prise en charge, <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> sera retourné.</returns>
    </member>
    <member name="P:System.Drawing.Design.CursorEditor.IsDropDownResizable">
      <summary>Obtient une valeur indiquant si les éditeurs déroulants doivent être redimensionnables par l’utilisateur.</summary>
      <returns>
        <see langword="true" /> si les éditeurs déroulants sont redimensionnables ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.FontEditor">
      <summary>Fournit une interface utilisateur qui permet de sélectionner et de configurer un objet <see cref="T:System.Drawing.Font" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.FontEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié à l'aide du style d'éditeur indiqué par <see cref="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> pouvant être utilisé par cet éditeur pour obtenir des services.</param>
      <param name="value">Objet à modifier.</param>
      <returns>Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas changé, l'objet retourné devrait être le même que celui qui lui a été passé.</returns>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient le style de l'éditeur utilisé par la méthode <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>Valeur <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> qui indique le style de l'éditeur utilisé par <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.FontNameEditor">
      <summary>Fournit un <see cref="T:System.Drawing.Design.UITypeEditor" /> qui peint un glyphe pour le nom de police.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.FontNameEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Détermine si cet éditeur permet de peindre une représentation de la valeur d'un objet.</summary>
      <param name="context">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <returns>
        <see langword="true" /> si <see cref="Overload:System.Drawing.Design.FontNameEditor.PaintValue" /> est implémenté ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Peint une valeur représentative de l'objet donné sur la toile fournie. La peinture doit être effectuée dans les limites du rectangle fourni.</summary>
      <param name="e">Indique l'élément à peindre et l'emplacement où il doit être peint.</param>
    </member>
    <member name="T:System.Drawing.Design.IconEditor">
      <summary>Fournit <see cref="T:System.Drawing.Design.UITypeEditor" /> pour choisir visuellement une icône.</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.IconEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)">
      <summary>Crée une chaîne qui représente les extensions de fichier valides pour les icônes.</summary>
      <param name="extensions">Tableau de chaînes contenant des extensions de fichier valides.</param>
      <param name="sep">Chaîne qui spécifie le caractère de séparation.</param>
      <returns>Chaîne qui contient les extensions de fichiers icône ou <see langword="null" /> si <paramref name="extensions" /> est <see langword="null" /> ou vide.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateFilterEntry(System.Drawing.Design.IconEditor)">
      <summary>Crée une chaîne de filtrage pour la boîte de dialogue Fichier.</summary>
      <param name="editor">
        <see cref="T:System.Drawing.Design.IconEditor" /> pour lequel la chaîne de filtrage sera créée.</param>
      <returns>Chaîne de filtrage, créée à partir de la chaîne retournée par <see cref="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié à l'aide du style de l'éditeur fourni par la méthode <see cref="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <param name="provider">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value">Instance de la valeur en cours de modification.</param>
      <returns>Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas changé, l'objet retourné doit être le même que celui qui a été passé.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Récupère le style de modification de la méthode <see cref="Overload:System.Drawing.Design.IconEditor.EditValue" />.</summary>
      <param name="context">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <returns>Une des valeurs <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification fourni.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetExtensions">
      <summary>Récupère un tableau d'extensions de fichier valides pour les icônes.</summary>
      <returns>Tableau d'extensions de fichier valides pour les icônes.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetFileDialogDescription">
      <summary>Obtient la description du filtre de liste de fichiers par défaut fourni par cet éditeur.</summary>
      <returns>Description du type de fichier par défaut sur lequel la liste doit être filtrée.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Détermine si cet éditeur permet de peindre une représentation de la valeur d'un objet.</summary>
      <param name="context">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <returns>
        <see langword="true" /> si <see cref="Overload:System.Drawing.Design.UITypeEditor.PaintValue" /> est implémenté ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.LoadFromStream(System.IO.Stream)">
      <summary>Crée un nouveau <see cref="T:System.Drawing.Icon" /> à partir du flux donné.</summary>
      <param name="stream">Flux source à partir duquel l'icône sera créée.</param>
      <returns>Objet <see cref="T:System.Drawing.Icon" /> nouvellement créé.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Peint une valeur représentative de l'objet donné sur la toile fournie.</summary>
      <param name="e">Indique l'élément à peindre et l'emplacement où il doit être peint.</param>
    </member>
    <member name="T:System.Drawing.Design.ImageEditor">
      <summary>Fournit une interface utilisateur qui permet de sélectionner une image pour une propriété dans une grille de propriétés.</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ImageEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateExtensionsString(System.String[],System.String)">
      <summary>Crée une chaîne d'extensions de nom de fichier à l'aide du tableau d'extensions de fichier et du séparateur spécifiés.</summary>
      <param name="extensions">Extensions sur lesquelles les fichiers sont filtrés.</param>
      <param name="sep">Séparateur à utiliser.</param>
      <returns>Chaîne contenant les extensions de nom de fichier spécifiées, séparées à l'aide du séparateur spécifié.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateFilterEntry(System.Drawing.Design.ImageEditor)">
      <summary>Crée une entrée de filtre pour la liste de fichiers d'une boîte de dialogue Fichier.</summary>
      <param name="e">
        <see cref="T:System.Drawing.Design.ImageEditor" /> à partir duquel obtenir l'entrée de filtre.</param>
      <returns>Nouvelle chaîne d'entrée de filtre.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié à l'aide du style d'édition fourni par la méthode <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value">
        <see cref="T:System.Object" /> en cours de modification.</param>
      <returns>
        <see cref="T:System.Object" /> représentant la nouvelle valeur. Si la valeur de l'objet n'a pas changé, <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> retourne l'objet qui lui a été passé.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient le style de modification de la méthode <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>Une des valeurs <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification pris en charge.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetExtensions">
      <summary>Obtient les extensions du filtre de liste de fichiers que l’éditeur utilise initialement pour filtrer la liste de fichiers.</summary>
      <returns>Ensemble d’extensions de fichier utilisées pour filtrer la liste de fichiers.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetFileDialogDescription">
      <summary>Obtient la description du filtre de liste de fichiers par défaut fourni par cet éditeur.</summary>
      <returns>Description du filtre de liste de fichiers par défaut.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetImageExtenders">
      <summary>Obtient un tableau de types d'images pris en charge.</summary>
      <returns>Tableau de <see cref="T:System.Type" /> représentant les types d'images pris en charge.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient une valeur indiquant si cet éditeur permet de peindre une représentation de la valeur d'un objet.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>
        <see langword="true" /> si <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> est implémenté ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.LoadFromStream(System.IO.Stream)">
      <summary>Charge une image à partir du flux spécifié.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> qui contient l’image à charger.</param>
      <returns>Le <see cref="T:System.Drawing.Image" /> qui a été chargé.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Peint une valeur indiquée par le <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> spécifié.</summary>
      <param name="e">
        <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> qui indique l'élément à peindre et l'emplacement où il doit être peint.</param>
    </member>
    <member name="T:System.Drawing.Design.IToolboxItemProvider">
      <summary>Expose une collection d'éléments de boîte à outils.</summary>
    </member>
    <member name="P:System.Drawing.Design.IToolboxItemProvider.Items">
      <summary>Obtient une collection d'objets <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>Collection d'objets <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary>Fournit des méthodes et des propriétés permettant de gérer et d'interroger la boîte à outils dans l'environnement de développement.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary>Ajoute un nouveau créateur d'élément de boîte à outils pour un format de données spécifié.</summary>
      <param name="creator">
        <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> pouvant créer un composant lorsque l'élément de boîte à outils est appelé.</param>
      <param name="format">Format de données géré par le créateur.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Ajoute un nouveau créateur d'élément de boîte à outils pour un format de données et un hôte du concepteur spécifiés.</summary>
      <param name="creator">
        <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> pouvant créer un composant lorsque l'élément de boîte à outils est appelé.</param>
      <param name="format">Format de données géré par le créateur.</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> représentant l'hôte du concepteur à associer au créateur.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary>Ajoute l'élément de boîte à outils lié à un projet spécifié à la boîte à outils.</summary>
      <param name="toolboxItem">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> lié à ajouter à la boîte à outils.</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> pour le document de design en cours.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Ajoute l'élément de boîte à outils lié à un projet spécifié à la boîte à outils, dans la catégorie spécifiée.</summary>
      <param name="toolboxItem">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> lié à ajouter à la boîte à outils.</param>
      <param name="category">Catégorie d'éléments de boîte à outils à laquelle ajouter cet élément de boîte à outils.</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> pour le document de design en cours.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Ajoute l'élément de boîte à outils spécifié à la boîte à outils.</summary>
      <param name="toolboxItem">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à ajouter à la boîte à outils.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>Ajoute l'élément de boîte à outils spécifié à la boîte à outils, dans la catégorie spécifiée.</summary>
      <param name="toolboxItem">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à ajouter à la boîte à outils.</param>
      <param name="category">Catégorie d'éléments de boîte à outils à laquelle ajouter <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary>Obtient un élément de boîte à outils à partir de l'objet spécifié représentant un élément de boîte à outils dans un formulaire sérialisé.</summary>
      <param name="serializedObject">Objet contenant le <see cref="T:System.Drawing.Design.ToolboxItem" /> à récupérer.</param>
      <returns>
        <see cref="T:System.Drawing.Design.ToolboxItem" /> créé à partir de l'objet sérialisé.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Obtient un élément de boîte à outils à partir de l'objet spécifié représentant un élément de boîte à outils dans un formulaire sérialisé, à l'aide de l'hôte concepteur spécifié.</summary>
      <param name="serializedObject">Objet contenant le <see cref="T:System.Drawing.Design.ToolboxItem" /> à récupérer.</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> à associer à cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns>
        <see cref="T:System.Drawing.Design.ToolboxItem" /> créé à partir de la désérialisation.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary>Obtient l'élément de boîte à outils actuellement sélectionné.</summary>
      <returns>Le <see cref="T:System.Drawing.Design.ToolboxItem" /> actuellement sélectionné ou <see langword="null" /> si aucun élément de boîte à outils n'a été sélectionné.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary>Obtient l'élément de boîte à outils actuellement sélectionné s'il est accessible à tous les concepteurs, ou s'il prend en charge le concepteur spécifié.</summary>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> auquel l'outil sélectionné doit être associé pour être retourné.</param>
      <returns>Le <see cref="T:System.Drawing.Design.ToolboxItem" /> actuellement sélectionné ou <see langword="null" /> si aucun élément de boîte à outils n'est actuellement sélectionné.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary>Obtient toute la collection d'éléments de boîte à outils à partir de la boîte à outils.</summary>
      <returns>
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> contenant les éléments de boîte à outils en cours.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary>Obtient la collection d'éléments de boîte à outils associés à l'hôte concepteur spécifié à partir de la boîte à outils.</summary>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> associé aux éléments de boîte à outils à récupérer.</param>
      <returns>
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> contenant les éléments de boîte à outils en cours qui sont associés à l'hôte concepteur spécifié.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary>Obtient une collection d'éléments de boîte à outils correspondant à la catégorie spécifiée à partir de la boîte à outils.</summary>
      <param name="category">Catégorie d'éléments de boîte à outils à partir de laquelle récupérer les éléments de boîte à outils.</param>
      <returns>
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> contenant les éléments de boîte à outils en cours associés à la catégorie spécifiée.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Obtient la collection d'éléments de boîte à outils associés à l'hôte concepteur et à la catégorie spécifiés à partir de la boîte à outils.</summary>
      <param name="category">Catégorie d'éléments de boîte à outils à partir de laquelle récupérer les éléments de boîte à outils.</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> associé aux éléments de boîte à outils à récupérer.</param>
      <returns>
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> contenant les éléments de boîte à outils en cours qui sont associés à la catégorie et à l'hôte concepteur spécifiés.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.Collections.ICollection)">
      <summary>Obtient une valeur indiquant si l'objet spécifié qui représente un élément de boîte à outils sérialisé correspond aux attributs spécifiés.</summary>
      <param name="serializedObject">Objet contenant le <see cref="T:System.Drawing.Design.ToolboxItem" /> à récupérer.</param>
      <param name="filterAttributes">
        <see cref="T:System.Collections.ICollection" /> contenant les attributs à vérifier dans l'objet sérialisé.</param>
      <returns>
        <see langword="true" /> si l'objet correspond aux attributs spécifiés ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Obtient une valeur indiquant si l'objet spécifié qui représente un élément de boîte à outils sérialisé peut être utilisé par l'hôte concepteur spécifié.</summary>
      <param name="serializedObject">Objet contenant le <see cref="T:System.Drawing.Design.ToolboxItem" /> à récupérer.</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> dont la compatibilité avec <see cref="T:System.Drawing.Design.ToolboxItem" /> doit être vérifiée.</param>
      <returns>
        <see langword="true" /> si l'objet spécifié est compatible avec l'hôte concepteur spécifié ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary>Obtient une valeur indiquant si l'objet spécifié est un élément de boîte à outils sérialisé.</summary>
      <param name="serializedObject">Objet à inspecter.</param>
      <returns>
        <see langword="true" /> si l'objet contient un élément de boîte à outils ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Obtient une valeur indiquant si l'objet spécifié est un élément de boîte à outils sérialisé, à l'aide de l'hôte concepteur spécifié.</summary>
      <param name="serializedObject">Objet à inspecter.</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> qui est l'auteur de cette demande.</param>
      <returns>
        <see langword="true" /> si l'objet contient un élément de boîte à outils ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary>Actualise l'état des éléments de boîte à outils.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary>Supprime un créateur d'élément de boîte à outils du format de données spécifié ajouté au préalable.</summary>
      <param name="format">Format de données du créateur à supprimer.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Supprime un créateur de boîte à outils ajouté au préalable qui est associé au format de données et à l'hôte du concepteur spécifiés.</summary>
      <param name="format">Format de données du créateur à supprimer.</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> associé au créateur à supprimer.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Supprime l'élément de boîte à outils spécifié de la boîte à outils.</summary>
      <param name="toolboxItem">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à supprimer de la boîte à outils.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>Supprime l'élément de boîte à outils spécifié de la boîte à outils.</summary>
      <param name="toolboxItem">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à supprimer de la boîte à outils.</param>
      <param name="category">Catégorie d'éléments de boîte à outils de laquelle <see cref="T:System.Drawing.Design.ToolboxItem" /> doit être supprimé.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary>Informe le service boîte à outils que l'outil sélectionné a été utilisé.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Obtient un objet sérialisable représentant l'élément de boîte à outils spécifié.</summary>
      <param name="toolboxItem">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à sérialiser.</param>
      <returns>Objet représentant le <see cref="T:System.Drawing.Design.ToolboxItem" /> spécifié.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetCursor">
      <summary>Assigne un curseur représentant l'outil actuellement sélectionné au curseur de l'application en cours.</summary>
      <returns>
        <see langword="true" /> si l'outil actuellement sélectionné est affecté au curseur, <see langword="false" /> si aucun outil n'est sélectionné et si le curseur correspond au curseur Windows standard.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Sélectionne l'élément de boîte à outils spécifié.</summary>
      <param name="toolboxItem">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à sélectionner.</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary>Obtient le nom de toutes les catégories d'outils figurant dans la boîte à outils actuellement.</summary>
      <returns>
        <see cref="T:System.Drawing.Design.CategoryNameCollection" /> contenant les catégories d'outils.</returns>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary>Obtient ou définit le nom de la catégorie d'outils actuellement sélectionnée dans la boîte à outils.</summary>
      <returns>Nom de la catégorie actuellement sélectionnée.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary>Définit une interface permettant de déterminer l'élément de boîte à outils actuellement sélectionné et d'indiquer si un concepteur prend en charge un élément de boîte à outils particulier.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Obtient une valeur indiquant si l'outil spécifié est pris en charge par le concepteur actuel.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> dont la prise en charge de la boîte à outils est à vérifier.</param>
      <returns>
        <see langword="true" /> si l'outil est pris en charge par la boîte à outils et s'il peut être activé ; <see langword="false" /> si le Concepteur de documents n'est pas capable d'utiliser l'outil.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Sélectionne l'outil spécifié.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à sélectionner.</param>
    </member>
    <member name="T:System.Drawing.Design.MetafileEditor">
      <summary>Fournit un <see cref="T:System.Drawing.Design.UITypeEditor" /> pouvant effectuer une recherche de fichier par défaut pour les métafichiers (.emf).</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.MetafileEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetExtensions">
      <summary>Obtient les extensions du filtre de liste de fichiers que l’éditeur utilise initialement pour filtrer la liste de fichiers.</summary>
      <returns>Ensemble d’extensions de fichier utilisées pour filtrer la liste de fichiers.</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetFileDialogDescription">
      <summary>Obtient la description du filtre de liste de fichiers par défaut fourni par cet éditeur.</summary>
      <returns>Description du filtre de liste de fichiers par défaut.</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.LoadFromStream(System.IO.Stream)">
      <summary>Charge une image à partir du flux spécifié.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> qui contient l’image à charger.</param>
      <returns>Le <see cref="T:System.Drawing.Image" /> qui a été chargé.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> déclenché lorsque des composants sont ajoutés à la boîte à outils.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.#ctor(System.ComponentModel.IComponent[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />.</summary>
      <param name="components">Composants à inclure dans la boîte à outils.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary>Obtient ou définit un tableau contenant les composants à ajouter à la boîte à outils.</summary>
      <returns>Tableau de type <see cref="T:System.ComponentModel.IComponent" /> qui indique les composants à ajouter à la boîte à outils.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary>Représente la méthode qui gère l’événement <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> déclenché lorsque des composants sont ajoutés à la boîte à outils.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />.</summary>
      <param name="host">Hôte concepteur adressant la demande.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.DesignerHost">
      <summary>Obtient ou définit une instance du <see cref="T:System.ComponentModel.Design.IDesignerHost" /> qui a demandé la création de composants pour la boîte à outils.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> ayant adressé la demande de création de composants pour la boîte à outils ou <see langword="null" /> si aucun hôte concepteur n'a été fourni à l'élément de boîte à outils.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary>Représente la méthode qui gère l’événement <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary>Fournit une implémentation de base d'un élément de boîte à outils.</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary>Se produit dès que les composants ont été créés.</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary>Se produit quand des composants sont sur le point d'être créés.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ToolboxItem" /> qui crée le type de composant spécifié.</summary>
      <param name="toolType">Type de <see cref="T:System.ComponentModel.IComponent" /> que crée l'élément de boîte à outils.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> est verrouillé.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary>Lève une exception si l'élément de boîte à outils est actuellement verrouillé.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> est verrouillé.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary>Crée les composants que l'élément de boîte à outils est configuré pour créer.</summary>
      <returns>Tableau d'objets <see cref="T:System.ComponentModel.IComponent" /> créés.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary>Crée les composants que l'élément de boîte à outils est configuré pour créer, à l'aide de l'hôte du concepteur spécifié.</summary>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> à utiliser lors de la création des composants.</param>
      <returns>Tableau d'objets <see cref="T:System.ComponentModel.IComponent" /> créés.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary>Crée les composants que l'élément de boîte à outils est configuré pour créer, à l'aide de l'hôte du concepteur spécifié et des valeurs par défaut.</summary>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> à utiliser lors de la création des composants.</param>
      <param name="defaultValues">Dictionnaire de paires nom/valeur de propriété des valeurs par défaut avec lequel initialiser le composant.</param>
      <returns>Tableau d'objets <see cref="T:System.ComponentModel.IComponent" /> créés.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>Crée un composant ou un tableau de composants quand l'élément de boîte à outils est appelé.</summary>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> qui doit héberger l'élément de boîte à outils.</param>
      <returns>Tableau d'objets <see cref="T:System.ComponentModel.IComponent" /> créés.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary>Crée un tableau de composants quand l'élément de boîte à outils est appelé.</summary>
      <param name="host">Hôte du concepteur à utiliser pendant la création de composants.</param>
      <param name="defaultValues">Dictionnaire de paires nom/valeur de propriété des valeurs par défaut avec lequel initialiser le composant.</param>
      <returns>Tableau d'objets <see cref="T:System.ComponentModel.IComponent" /> créés.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Charge l'état de l'élément de boîte à outils à partir de l'objet des informations de sérialisation spécifiées.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à partir duquel l'état est chargé.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui indique les caractéristiques du flux.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Equals(System.Object)">
      <summary>Détermine si deux instances <see cref="T:System.Drawing.Design.ToolboxItem" /> sont égales.</summary>
      <param name="obj">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à comparer avec l'objet <see cref="T:System.Drawing.Design.ToolboxItem" /> actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Drawing.Design.ToolboxItem" /> spécifié est égal au <see cref="T:System.Drawing.Design.ToolboxItem" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.FilterPropertyValue(System.String,System.Object)">
      <summary>Filtre une valeur de propriété avant de la retourner.</summary>
      <param name="propertyName">Nom de la propriété à filtrer.</param>
      <param name="value">Valeur sur laquelle filtrer la propriété.</param>
      <returns>Valeur de propriété filtrée.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage du <see cref="T:System.Drawing.Design.ToolboxItem" /> actuel.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost)">
      <summary>Permet l'accès au type associé à l'élément de boîte à outils.</summary>
      <param name="host">Hôte du concepteur à interroger pour obtenir <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />.</param>
      <returns>Type associé à l'élément de boîte à outils.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary>Crée une instance du type spécifié, en utilisant éventuellement un hôte du concepteur et un nom d'assembly spécifiés.</summary>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> pour le document actif. Il peut s’agir de <see langword="null" />.</param>
      <param name="assemblyName">
        <see cref="T:System.Reflection.AssemblyName" /> indiquant l'assembly contenant le type à charger. Il peut s’agir de <see langword="null" />.</param>
      <param name="typeName">Nom du type dont une instance sera créée.</param>
      <param name="reference">Valeur indiquant s'il faut ou non ajouter une référence à l'assembly qui contient le type spécifié à l'ensemble de références de l'hôte concepteur.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> n'est pas spécifié.</exception>
      <returns>Instance du type spécifié, si elle peut être localisée.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary>Initialise l'élément de boîte à outils actuel avec le type spécifié à créer.</summary>
      <param name="type">
        <see cref="T:System.Type" /> que crée l'élément de boîte à outils.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> est verrouillé.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary>Verrouille l'élément de boîte à outils et empêche toute modification de ses propriétés.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />.</summary>
      <param name="args">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />.</summary>
      <param name="args">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Enregistre l'état de l'élément de boîte à outils dans l'objet des informations de sérialisation spécifiées.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> où effectuer l'enregistrement.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui indique les caractéristiques du flux.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="context">Destination (consultez <see cref="T:System.Runtime.Serialization.StreamingContext" />) de cette sérialisation.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary>Retourne une valeur <see cref="T:System.String" /> qui représente le <see cref="T:System.Drawing.Design.ToolboxItem" /> actuel.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente le <see cref="T:System.Drawing.Design.ToolboxItem" /> actuel.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyType(System.String,System.Object,System.Type,System.Boolean)">
      <summary>Vérifie qu'un objet est d'un type donné.</summary>
      <param name="propertyName">Nom de la propriété à valider.</param>
      <param name="value">Valeur facultative à utiliser pour la validation.</param>
      <param name="expectedType">Type attendu de la propriété.</param>
      <param name="allowNull">
        <see langword="true" /> pour autoriser <see langword="null" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" /> et <paramref name="allowNull" /> a la valeur <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> n'est pas le type spécifié par <paramref name="expectedType" />.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyValue(System.String,System.Object)">
      <summary>Valide une propriété avant qu'elle ne soit assignée au dictionnaire de propriétés.</summary>
      <param name="propertyName">Nom de la propriété à valider.</param>
      <param name="value">Valeur à utiliser pour la validation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> est <see langword="null" /> et <paramref name="propertyName" /> est « IsTransient ».</exception>
      <returns>Valeur utilisée pour effectuer la validation.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary>Obtient ou définit le nom de l'assembly contenant les types créés par l'élément de boîte à outils.</summary>
      <returns>
        <see cref="T:System.Reflection.AssemblyName" /> qui indique l'assembly contenant les types à créer.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary>Obtient ou définit une bitmap pour représenter l'élément de boîte à outils dans la boîte à outils.</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> représentant l'élément de boîte à outils dans la boîte à outils.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Company">
      <summary>Obtient ou définit le nom de la société pour <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>
        <see cref="T:System.String" /> qui spécifie la société pour cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.ComponentType">
      <summary>Obtient le type de composant pour cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>
        <see cref="T:System.String" /> qui spécifie le type de composant pour cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DependentAssemblies">
      <summary>Obtient ou définit <see cref="T:System.Reflection.AssemblyName" /> pour l'élément de boîte à outils.</summary>
      <returns>Tableau d'objets <see cref="T:System.Reflection.AssemblyName" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Description">
      <summary>Obtient ou définit la description de cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>
        <see cref="T:System.String" /> qui spécifie la description de cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary>Obtient ou définit le nom complet de l'élément de boîte à outils.</summary>
      <returns>Nom complet de l'élément de boîte à outils.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary>Obtient ou définit le filtre qui détermine si l'élément de boîte à outils peut être utilisé sur un composant de destination.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> d'objets <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.IsTransient">
      <summary>Obtient une valeur qui indique si l'élément de boîte à outils est transitoire.</summary>
      <returns>
        <see langword="true" />, si cet élément de boîte à outils ne doit pas être stocké dans une base de données de boîte à outils lorsqu'une application qui fournit une boîte à outils se ferme ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Drawing.Design.ToolboxItem" /> est actuellement verrouillé.</summary>
      <returns>
        <see langword="true" /> si l'élément de boîte à outils est verrouillé ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.OriginalBitmap">
      <summary>Obtient ou définit l'image bitmap d'origine qui sera utilisée dans la boîte à outils pour cet élément.</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> représentant l'élément de boîte à outils dans la boîte à outils.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Properties">
      <summary>Obtient un dictionnaire de propriétés.</summary>
      <returns>Dictionnaire de paires nom/valeur (les noms sont les noms de propriétés et les valeurs sont des valeurs de propriétés).</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary>Obtient ou définit le nom qualifié complet du type de <see cref="T:System.ComponentModel.IComponent" /> que l'élément de boîte à outils crée lorsqu'il est appelé.</summary>
      <returns>Nom de type qualifié complet du type de composant que cet élément de boîte à outils crée.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Version">
      <summary>Obtient la version de cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>
        <see cref="T:System.String" /> qui spécifie la version de cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary>Représente une collection d'éléments de boîte à outils.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> à l'aide du tableau spécifié d'éléments de boîte à outils.</summary>
      <param name="value">Tableau de type <see cref="T:System.Drawing.Design.ToolboxItem" /> contenant les éléments de boîte à outils à utiliser pour remplir la collection.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> à l'aide de la collection spécifiée.</summary>
      <param name="value">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> à utiliser pour remplir la nouvelle collection.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary>Indique si la collection contient l’<see cref="T:System.Drawing.Design.ToolboxItem" /> spécifié.</summary>
      <param name="value">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à rechercher dans la collection.</param>
      <returns>
        <see langword="true" /> si la collection contient l'objet spécifié ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary>Copie la collection vers le tableau spécifié, en commençant à l'index de destination spécifié.</summary>
      <param name="array">Tableau dans lequel effectuer la copie.</param>
      <param name="index">Index à partir duquel commencer la copie.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary>Obtient l'index du <see cref="T:System.Drawing.Design.ToolboxItem" /> spécifié, s'il existe dans la collection.</summary>
      <param name="value">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> dont l'index doit être obtenu dans la collection.</param>
      <returns>Index du <see cref="T:System.Drawing.Design.ToolboxItem" /> spécifié.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary>Obtient l'objet <see cref="T:System.Drawing.Design.ToolboxItem" /> à l'index spécifié.</summary>
      <param name="index">Index de l'objet à obtenir ou à définir.</param>
      <returns>
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à chaque index valide dans la collection.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary>Fournit un mécanisme de rappel qui peut créer un <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <param name="serializedObject">Objet contenant les données pour lesquelles créer un <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <param name="format">Nom du format de données du Presse-papiers pour lequel créer un <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns>Objet <see cref="T:System.Drawing.Design.ToolboxItem" /> désérialisé spécifié par <paramref name="serializedObject" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UCOMITypeLib">
      <summary>Utilisez plutôt <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>Récupère la chaîne de documentation de la bibliothèque, le nom et le chemin complets du fichier d’aide, et l’ID de contexte de la rubrique d’aide de la bibliothèque dans le fichier d’aide.</summary>
      <param name="index">Index de la description de type dont la documentation doit être retournée.</param>
      <param name="strName">Retourne une chaîne qui contient le nom de l’élément spécifié.</param>
      <param name="strDocString">Retourne une chaîne qui contient la chaîne de documentation pour l’élément spécifié.</param>
      <param name="dwHelpContext">Retourne l’ID de contexte d’aide associé à l’élément spécifié.</param>
      <param name="strHelpFile">Retourne une chaîne qui contient le nom complet du fichier d’aide.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)">
      <summary>Récupère la structure qui contient les attributs de la bibliothèque.</summary>
      <param name="ppTLibAttr">Lors d’un retour correct, structure qui contient les attributs de la bibliothèque.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoCount">
      <summary>Retourne le nombre de descriptions de types de la bibliothèque de types.</summary>
      <returns>Nombre de descriptions de types de la bibliothèque de types.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary>Récupère le type d’une description de type.</summary>
      <param name="index">Index de la description de type dans la bibliothèque de types</param>
      <param name="pTKind">Référence à l’énumération <see langword="TYPEKIND" /> pour la description de type.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.IsName(System.String,System.Int32)">
      <summary>Indique si une chaîne passée contient le nom d’un type ou d’un membre décrit dans la bibliothèque.</summary>
      <param name="szNameBuf">Chaîne à tester.</param>
      <param name="lHashVal">Valeur de hachage de <paramref name="szNameBuf" />.</param>
      <returns>
        <see langword="true" /> si <paramref name="szNameBuf" /> a été trouvé dans la bibliothèque de types ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary>Libère le <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> obtenu à l’origine auprès de <see cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr">
        <see langword="TLIBATTR" /> à libérer.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AnchorEditor">
      <summary>Fournit une interface utilisateur pour configurer une propriété <see cref="P:System.Windows.Forms.Control.Anchor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.AnchorEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié à l'aide du fournisseur de services et du contexte spécifiés.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value">Instance de la valeur en cours de modification.</param>
      <returns>Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas été modifiée, cette méthode retourne le même objet qui lui a été passé.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient le style de l'éditeur utilisé par la méthode <see cref="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>Une des valeurs <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification fourni. Si la méthode n'est pas prise en charge, elle retourne <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary>Importe des contrôles ActiveX et génère un wrapper auquel un concepteur peut accéder.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.AxImporter" />.</summary>
      <param name="options">
        <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> indiquant les options que l'importateur de contrôles ActiveX doit utiliser.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary>Fournit des méthodes pour résoudre des références à des bibliothèques ActiveX, bibliothèques de types ou assemblys COM, ou assemblys managés.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>Résout une référence à une bibliothèque de types spécifiée qui contient un contrôle ActiveX.</summary>
      <param name="typeLib">
        <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> responsable de la résolution d'une référence.</param>
      <returns>Chemin d'accès qualifié complet à un assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary>Résout une référence à un assembly spécifié qui contient un composant COM.</summary>
      <param name="name">
        <see cref="T:System.Reflection.AssemblyName" /> indiquant l'assembly responsable de la résolution d'une référence.</param>
      <returns>Chemin d'accès qualifié complet à un assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>Résout une référence à une bibliothèque de types spécifiée qui contient un composant COM.</summary>
      <param name="typeLib">
        <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> responsable de la résolution d'une référence.</param>
      <returns>Chemin d'accès qualifié complet à un assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary>Résout une référence à un assembly spécifié.</summary>
      <param name="assemName">Nom de l'assembly responsable de la résolution d'une référence.</param>
      <returns>Chemin d'accès qualifié complet à un assembly.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary>Représente un jeu d'options pour <see cref="T:System.Windows.Forms.Design.AxImporter" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary>Spécifie si l'assembly généré porte un nom fort et sera signé ultérieurement.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary>Spécifie si les sources pour le wrapper de bibliothèque de types doivent être générées.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary>Spécifie s'il faut uniquement utiliser des entrées de la ligne de commande, plutôt que de compter sur une version inscrite.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary>Spécifie le chemin d'accès du fichier qui contient le conteneur de clé de nom fort pour les assemblys générés.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary>Spécifie le chemin d'accès du fichier qui contient la clé de nom fort pour les assemblys générés.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary>Spécifie le nom fort utilisé pour les assemblys générés.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary>Spécifie si des erreurs sont affichées en sortie dans le format Microsoft Build Engine (MSBuild).</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary>Indique si l'importateur de contrôles ActiveX doit être affiché quand le contrôle est importé.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary>Spécifie le chemin d'accès d'un répertoire dans lequel les assemblys générés seront créés.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary>Spécifie le nom de fichier utilisé pour générer le wrapper de contrôle ActiveX.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary>Spécifie si les fichiers existants doivent être remplacés lors de la génération d'assemblys.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary>Spécifie la clé publique utilisée pour signer les assemblys générés.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary>Spécifie le <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" /> à utiliser pour résoudre les types et références lors de la génération d'assemblys.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary>Spécifie si la compilation doit être effectuée en mode silencieux, qui affiche moins d'informations au moment de la compilation.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary>Spécifie si la compilation doit être effectuée en mode documenté, qui affiche plus d'informations au moment de la compilation.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary>Gère une collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> liés à une interface utilisateur. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary>Force le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> à actualiser sa fenêtre de dispositif d'ornement.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary>Force le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> à actualiser sa fenêtre de dispositif d'ornement dans le <see cref="T:System.Drawing.Rectangle" /> donné.</summary>
      <param name="rectangle">Zone à invalider.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary>Force le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> à actualiser sa fenêtre de dispositif d'ornement dans le <see cref="T:System.Drawing.Region" /> donné.</summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" /> à invalider.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary>Obtient ou définit le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> associé à <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
      <returns>Objet <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> associé au <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary>Obtient ou définit une valeur indiquant si le <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> est activé.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> est activé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary>Obtient la collection <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>Collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary>Représente les objets <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> managés par un <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> avec le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> donné.</summary>
      <param name="callParentBehavior">
        <see langword="true" /> si le comportement parent doit être appelé dès lors qu'il existe ; sinon, <see langword="false" />.</param>
      <param name="behaviorService">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> à utiliser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callParentBehavior" /> a la valeur <see langword="true" /> et <paramref name="behaviorService" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>Intercepte des commandes.</summary>
      <param name="commandId">Objet <see cref="T:System.ComponentModel.Design.CommandID" />.</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.MenuCommand" />
        <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> retourne <see langword="null" /> par défaut.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Autorise un comportement de glisser-déplacer personnalisé.</summary>
      <param name="g">Objet <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sur lequel appeler un comportement de glisser-déplacer.</param>
      <param name="e">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Autorise un comportement glisser-valider personnalisé.</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sur lequel appeler le comportement glisser-valider.</param>
      <param name="e">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>Autorise un comportement glisser-lâcher personnalisé.</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sur lequel appeler le comportement glisser-lâcher.</param>
      <param name="e">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Autorise un comportement glisser-survoler personnalisé.</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sur lequel appeler le comportement glisser-survoler.</param>
      <param name="e">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Autorise un comportement de commentaire de glisser-déplacer personnalisé.</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sur lequel appeler un comportement de glisser-déplacer.</param>
      <param name="e">
        <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>Appelé par la fenêtre de dispositif d'ornement lorsqu'il perd la capture de la souris.</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sur lequel appeler un comportement de glisser-déplacer.</param>
      <param name="e">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Appelé lorsqu'un message de double-clic entre dans la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="button">Valeur <see cref="T:System.Windows.Forms.MouseButtons" /> qui indique le bouton qui a fait l'objet d'un clic.</param>
      <param name="mouseLoc">L'emplacement auquel le clic s'est produit.</param>
      <returns>
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Appelé lorsqu'un message de trajet de souris descendant entre dans la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="button">Valeur <see cref="T:System.Windows.Forms.MouseButtons" /> qui indique le bouton qui a fait l'objet d'un clic.</param>
      <param name="mouseLoc">L'emplacement auquel le clic s'est produit.</param>
      <returns>
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Appelé lorsqu'un message de validation à la souris entre dans la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <returns>
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary>Appelé lorsqu'un message de pointage à la souris entre dans la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="mouseLoc">L'emplacement auquel le pointage s'est produit.</param>
      <returns>
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Appelé lorsqu'un message d'éloignement à la souris entre dans la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <returns>
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Appelé lorsqu'un message de déplacement à la souris entre dans la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="button">Valeur <see cref="T:System.Windows.Forms.MouseButtons" /> qui indique le bouton qui a fait l'objet d'un clic.</param>
      <param name="mouseLoc">L'emplacement auquel le déplacement s'est produit.</param>
      <returns>
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary>Appelé lorsqu'un message de trajet de souris montant entre dans la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="button">Valeur <see cref="T:System.Windows.Forms.MouseButtons" /> qui indique le bouton qui a fait l'objet d'un clic.</param>
      <returns>
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>Envoie cet événement glisser-déplacer de la fenêtre de dispositif d'ornement au <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> approprié ou au <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> ayant fait l'objet d'un test d'accès réussi.</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="e">
        <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary>Obtient le curseur qui doit être affiché pour ce comportement.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Cursor" /> qui représente le curseur qui doit s'afficher pour ce comportement.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary>Obtient une valeur indiquant si les objets <see cref="T:System.ComponentModel.Design.MenuCommand" /> doivent être désactivés.</summary>
      <returns>
        <see langword="true" /> Si tous <see cref="T:System.ComponentModel.Design.MenuCommand" /> les objets que le concepteur reçoit doivent avoir des États définis sur <c>activé = false</c> quand ce <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> est actif ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary>Fournit des données pour les événements <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> et <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />.</summary>
      <param name="dragComponents">Le <see cref="T:System.Collections.ICollection" /> des objets <see cref="T:System.ComponentModel.IComponent" /> fait actuellement l'objet d'un glissé.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary>Obtient la liste d'objets <see cref="T:System.ComponentModel.IComponent" /> qui font actuellement l'objet d'une opération de glissement.</summary>
      <returns>Le <see cref="T:System.Collections.ICollection" /> des objets <see cref="T:System.ComponentModel.IComponent" /> fait actuellement l'objet d'un glissé.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary>Représente les méthodes qui géreront les événements <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> et <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />. Cette classe ne peut pas être héritée.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary>Gère l'interface utilisateur dans le concepteur. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary>Se produit lorsque le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> initie une opération de glisser-déplacer.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary>Se produit lorsque le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> termine une opération de glisser.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary>Se produit lorsque la sélection actuelle doit être actualisée.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary>Convertit un <see cref="T:System.Drawing.Point" /> dans la fenêtre de dispositif d'ornement en coordonnées d'écran.</summary>
      <param name="p">Valeur <see cref="T:System.Drawing.Point" /> à transformer.</param>
      <returns>Valeur <see cref="T:System.Drawing.Point" /> transformée, en coordonnées d'écran.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary>Obtient l'emplacement de la fenêtre de dispositif d'ornement en coordonnées d'écran.</summary>
      <returns>Emplacement à partir du coin supérieur gauche de la fenêtre de dispositif d'ornement, en coordonnées d'écran.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary>Retourne le <see cref="T:System.Drawing.Rectangle" /> englobant d'un <see cref="T:System.Windows.Forms.Control" />.</summary>
      <param name="c">
        <see cref="T:System.Windows.Forms.Control" /> à convertir.</param>
      <returns>
        <see cref="T:System.Drawing.Rectangle" /> englobant d'un <see cref="T:System.Windows.Forms.Control" /> converti en coordonnées de fenêtre de dispositif d'ornement.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary>Retourne l'emplacement d'un <see cref="T:System.Windows.Forms.Control" /> converti en coordonnées de fenêtre de dispositif d'ornement.</summary>
      <param name="c">
        <see cref="T:System.Windows.Forms.Control" /> à convertir.</param>
      <returns>Valeur <see cref="T:System.Drawing.Point" /> qui indique l'emplacement de <paramref name="c" /> en coordonnées de fenêtre de dispositif d'ornement.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Retourne immédiatement le <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> après le <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> donné dans la pile de comportements.</summary>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> qui précède le <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> à retourner.</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> placé immédiatement après le <paramref name="behavior" /> dans la pile de comportement, ou <see langword="null" /> s'il n'y a aucun comportement à la suite.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary>Invalide la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary>Invalide, dans la fenêtre de dispositif d'ornement, la zone spécifiée du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="rect">Zone rectangulaire à invalider.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary>Invalide, dans la fenêtre de dispositif d'ornement, la zone spécifiée du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="r">Zone à invalider.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary>Convertit un point exprimé dans le système de coordonnées d'un handle en coordonnées de fenêtre de dispositif d'ornement.</summary>
      <param name="handle">Handle d'une fenêtre de dispositif d'ornement.</param>
      <param name="pt">
        <see cref="T:System.Drawing.Point" /> exprimé dans le système de coordonnées d'un handle.</param>
      <returns>
        <see cref="T:System.Drawing.Point" /> exprimé dans les coordonnées d'une fenêtre de dispositif d'ornement.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Supprime et retourne le <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> placé au sommet de la pile.</summary>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> à supprimer de la pile.</param>
      <exception cref="T:System.InvalidOperationException">La pile <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> est vide.</exception>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> qui a été supprimé de la pile.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Applique un push à un <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> sur la pile de comportements.</summary>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> auquel appliquer un push.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Applique un push à un <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> sur la pile de comportements et assigne une capture de souris au comportement.</summary>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> auquel appliquer un push.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary>Convertit un point exprimé en coordonnées d'écran en coordonnées de la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="p">Valeur <see cref="T:System.Drawing.Point" /> à transformer.</param>
      <returns>La valeur <see cref="T:System.Drawing.Point" /> transformée, en coordonnées d'une fenêtre de dispositif d'ornement.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary>Synchronise tous les glyphes de sélection.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary>Obtient <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>Collection d’ornements.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary>Obtient le <see cref="T:System.Drawing.Graphics" /> de la fenêtre de dispositif d'ornement.</summary>
      <returns>
        <see cref="T:System.Drawing.Graphics" /> de la fenêtre de dispositif d'ornement.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary>Obtient le <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> placé au sommet de la pile de comportements sans le supprimer.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> placé au sommet de la pile de comportements.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary>Stocke des objets <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> dans une collection fortement typée.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> avec le tableau donné.</summary>
      <param name="value">Tableau de type <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> destiné à remplir la collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> avec la référence <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> donnée.</summary>
      <param name="behaviorService">Une référence <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> à partir d'un <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> existant.</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> à partir duquel remplir la collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Ajoute un <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> ayant la valeur spécifiée à <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> à ajouter à la fin de la collection.</param>
      <returns>Index au niveau duquel le nouvel élément a été inséré.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>Copie les éléments d'un tableau à la fin de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">Tableau de type <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> à copier à la fin de la collection</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Ajoute le contenu d'une autre <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> à la fin de la collection.</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> à ajouter à la fin de la collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> contient le <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> spécifié.</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> à rechercher.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> est contenu dans la collection ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary>Copie les valeurs de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> vers une instance de <see cref="T:System.Array" /> unidimensionnelle, à l'index spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui est la destination des valeurs copiées à partir de la <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
      <param name="index">L'index dans <paramref name="array" /> où commence la copie.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.

- ou -

Le nombre d’éléments dans la <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> est supérieur à l’espace disponible entre <paramref name="index" /> et la fin de <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> est inférieur à la limite inférieure d’<paramref name="array" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary>Retourne un énumérateur qui peut itérer au sein de l'instance <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour l'instance du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Retourne l'index de <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> dans <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> à rechercher.</param>
      <returns>Index de <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> de <paramref name="value" /> dans <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, s'il existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Insère un objet <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> dans <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro au niveau où <paramref name="value" /> doit être insérée.</param>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> à insérer.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Supprime un <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> spécifique de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> à supprimer de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> est introuvable dans la collection.</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary>Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l’élément.</param>
      <returns>Élément <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> spécifié par <paramref name="index" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary>Prend en charge l’itération sur <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" />.</summary>
      <param name="mappings">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> pour lequel créer l'énumérateur.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary>Avance l'énumérateur à l'élément suivant du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>
        <see langword="true" /> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary>Rétablit l'énumérateur à sa position initiale, qui précède le premier élément de la collection.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary>Obtient l'élément en cours dans <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>Élément en cours de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>Pour obtenir une description de ce membre, consultez la propriété<see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> en cours dans la collection.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary>Associe un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à son composant.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="relatedComponent">Composant auquel est associé le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="relatedComponent">Composant auquel est associé le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> auquel le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est associé.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary>Indique si le <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> doit gérer un clic de souris à l'emplacement spécifié.</summary>
      <param name="p">Point auquel appliquer un test de positionnement.</param>
      <returns>
        <see cref="T:System.Windows.Forms.Cursor" /> si le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est associé au <paramref name="p" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>Fournit une logique de peinture.</summary>
      <param name="pe">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> contenant le <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" /> du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary>Obtient le composant associé au <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>
        <see cref="T:System.ComponentModel.IComponent" /> associé au <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary>Associe un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à son contrôle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="bounds">
        <see cref="T:System.Drawing.Rectangle" /> qui représente les limites du <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor">
        <see cref="T:System.Windows.Forms.Cursor" /> qui représente le curseur à afficher quand le pointeur de la souris se trouve sur le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent">Composant auquel est associé le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> auquel le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est associé.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="bounds">
        <see cref="T:System.Drawing.Rectangle" /> qui représente les limites du <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor">
        <see cref="T:System.Windows.Forms.Cursor" /> qui représente le curseur à afficher quand le pointeur de la souris se trouve sur le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent">Composant auquel est associé le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="designer">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> auquel le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est associé.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary>Indique si le <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> doit gérer un clic de souris à l'emplacement spécifié.</summary>
      <param name="p">Point auquel appliquer un test de positionnement.</param>
      <returns>
        <see cref="T:System.Windows.Forms.Cursor" /> si le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est associé au <paramref name="p" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary>Obtient les limites du <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>
        <see cref="T:System.Drawing.Rectangle" /> représentant les limites du <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary>Représente une seule entité d'interface utilisateur gérée par <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior">Objet <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associé au <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. Peut être <see langword="null" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary>Fournit la logique de tests de positionnement.</summary>
      <param name="p">Point auquel appliquer un test de positionnement.</param>
      <returns>
        <see cref="T:System.Windows.Forms.Cursor" /> si le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est associé au <paramref name="p" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>Fournit une logique de peinture.</summary>
      <param name="pe">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Change le <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associé au <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> à associer au <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary>Obtient l'objet <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associé à l'objet <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associé au <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, sinon <see langword="null" /> s'il n'y a aucun comportement.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary>Obtient les limites du <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>
        <see cref="T:System.Drawing.Rectangle" /> représentant les limites du <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary>Stocke des objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> dans une collection fortement typée.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> avec le tableau <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> donné.</summary>
      <param name="value">Tableau de type <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> destiné à remplir la collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> basée sur un autre <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> destiné à remplir la collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Ajoute un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> ayant la valeur spécifiée au <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à ajouter à la fin de la collection.</param>
      <returns>Index au niveau duquel le nouvel élément a été inséré.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>Copie les éléments d'un tableau à la fin de <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">Tableau de type <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à copier à la fin de la collection</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>Ajoute le contenu d'une autre <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> à la fin de la collection.</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> à ajouter à la fin de la collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> contient le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> spécifié.</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à rechercher.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est contenu dans la collection ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary>Copie les valeurs de <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> vers une instance de <see cref="T:System.Array" /> unidimensionnelle, à l'index spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui est la destination des valeurs copiées à partir de la <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
      <param name="index">L'index dans <paramref name="array" /> où commence la copie.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Retourne l'index de <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> dans <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à rechercher.</param>
      <returns>Index de <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> de <paramref name="value" /> dans <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />, s'il existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Insère un élément <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> dans <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro au niveau où <paramref name="value" /> doit être insérée.</param>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à insérer.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Supprime un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> spécifique de <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à supprimer de <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary>Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l’élément.</param>
      <returns>Élément <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à l'index spécifié.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary>Décrit l'état de sélection du concepteur d'un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> n'est pas sélectionné.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est sélectionné.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary>Le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> constitue la sélection principale.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary>Représente les segments de ligne horizontaux et verticaux créés dynamiquement dans l’interface utilisateur pour faciliter la disposition des contrôles dans un conteneur au moment du design. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> en utilisant le type et l'offset de ligne d'alignement (SnapLine) spécifiés.</summary>
      <param name="type">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> à créer. Décrit la position et l'orientation relatives de la ligne d'alignement (SnapLine).</param>
      <param name="offset">Position de la ligne d'alignement (SnapLine), en pixels, par rapport à l'origine supérieure gauche du contrôle propriétaire.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> en utilisant le type, l'offset et le nom de filtre de ligne d'alignement (SnapLine) spécifiés.</summary>
      <param name="type">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> à créer. Décrit la position et l'orientation relatives de la ligne d'alignement (SnapLine).</param>
      <param name="offset">Position de la ligne d'alignement (SnapLine), en pixels, par rapport à l'origine supérieure gauche du contrôle propriétaire.</param>
      <param name="filter">
        <see cref="T:System.String" /> utilisé pour spécifier une catégorie de lignes d'alignement (SnapLines) définie par le programmeur.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> en utilisant le type, l'offset, le nom de filtre et la priorité de ligne d'alignement (SnapLine) spécifiés.</summary>
      <param name="type">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> à créer. Décrit la position et l'orientation relatives de la ligne d'alignement (SnapLine).</param>
      <param name="offset">Position de la ligne d'alignement (SnapLine), en pixels, par rapport à l'origine supérieure gauche du contrôle propriétaire.</param>
      <param name="filter">
        <see cref="T:System.String" /> utilisé pour spécifier une catégorie de lignes d'alignement (SnapLines) définie par le programmeur.</param>
      <param name="priority">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> de la ligne d'alignement (SnapLine).</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> en utilisant le type, l'offset et la priorité de ligne d'alignement (SnapLine) spécifiés.</summary>
      <param name="type">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> à créer. Décrit la position et l'orientation relatives de la ligne d'alignement (SnapLine).</param>
      <param name="offset">Position de la ligne d'alignement (SnapLine), en pixels, par rapport à l'origine supérieure gauche du contrôle propriétaire.</param>
      <param name="priority">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> de la ligne d'alignement (SnapLine).</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary>Ajuste la propriété <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> de la ligne d'alignement (SnapLine).</summary>
      <param name="adjustment">Nombre de pixels correspondant à la modification de l'offset de ligne d'alignement (SnapLine).</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary>Retourne une valeur qui indique si le <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> spécifié doit s'aligner sur un autre <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</summary>
      <param name="line1">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> spécifié.</param>
      <param name="line2">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> sur lequel le <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> spécifié est censé s'aligner.</param>
      <returns>
        <see langword="true" /> si <paramref name="line1" /> doit s'aligner sur <paramref name="line2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary>Retourne une représentation de type chaîne de la ligne d'alignement (SnapLine) actuelle.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente le <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> actuel.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary>Obtient la catégorie de filtres définie par le programmeur associée à cette ligne d'alignement (SnapLine).</summary>
      <returns>
        <see cref="T:System.String" /> qui définit la catégorie de filtre. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary>Obtient une valeur qui indique si la ligne d'alignement (SnapLine) présente une orientation horizontale.</summary>
      <returns>
        <see langword="true" /> si la ligne d'alignement (SnapLine) est horizontale ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary>Obtient une valeur qui indique si la ligne d'alignement (SnapLine) présente une orientation verticale.</summary>
      <returns>
        <see langword="true" /> si la ligne d'alignement (SnapLine) est verticale ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary>Obtient le nombre des pixels qui constitue l'offset de la ligne d'alignement (SnapLine) par rapport au point d'origine du contrôle associé.</summary>
      <returns>Offset de la ligne d'alignement (SnapLine) en pixels.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary>Obtient une valeur qui indique l'importance relative de la ligne d'alignement.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> qui représente la catégorie de priorité d'une ligne d'alignement (SnapLine).</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary>Obtient le type d'une ligne d'alignement (SnapLine) qui indique l'emplacement et l'orientation généraux.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> qui représente l'orientation et l'emplacement généraux d'une ligne d'alignement (SnapLine), en fonction des bords d'un contrôle.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary>Spécifie l'importance relative d'une ligne d'alignement (SnapLine).</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary>Catégorie de priorité équivalente à la priorité la plus élevée de toutes les lignes d'alignement (SnapLines) actuelles. Indique que cette catégorie de lignes d'alignement (SnapLines) doit toujours être active.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary>Catégorie de priorité la plus élevée.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary>Catégorie de priorité la plus basse.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary>Catégorie de priorité moyenne.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary>Spécifie l'orientation et l'emplacement relatif d'une ligne d'alignement (SnapLine).</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary>Une ligne d'alignement (SnapLine) horizontale est généralement associée à une fonctionnalité interne principale d'un contrôle ; par exemple, la base de la chaîne de texte dans un contrôle <see cref="T:System.Windows.Forms.Label" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary>Une ligne d'alignement (SnapLine) horizontale est généralement alignée sur le bord inférieur d'un contrôle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary>Une ligne d'alignement (SnapLine) horizontale n'est généralement pas associée au bord d'un contrôle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary>Une ligne d'alignement (SnapLine) verticale est généralement alignée sur le bord gauche d'un contrôle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary>Une ligne d'alignement (SnapLine) verticale est généralement alignée sur le bord droit d'un contrôle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary>Une ligne d'alignement (SnapLine) horizontale est généralement alignée sur le bord supérieur d'un contrôle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary>Une ligne d'alignement (SnapLine) verticale n'est généralement pas associée au bord d'un contrôle.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.BorderSidesEditor">
      <summary>Fournit un éditeur pour définir la propriété <see cref="P:System.Windows.Forms.ToolStripStatusLabel.BorderSides" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.BorderSidesEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet donné à l'aide du style d'éditeur fourni par <see cref="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit des informations à propos du contrôle ou du composant.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> qui fournit une assistance personnalisée pour d'autres objets.</param>
      <param name="value">Valeur de l'objet à modifier.</param>
      <returns>Objet modifié.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Récupère le style de modification de la méthode <see langword="EditValue" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit des informations à propos du contrôle ou du composant.</param>
      <returns>Une des valeurs de l'objet <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />. Si la méthode n'est pas prise en charge, elle retourne <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentActionsType">
      <summary>Éléments d’action du concepteur qui peuvent être associés à un composant.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.All">
      <summary>Représente les actions du concepteur de types de composants et de services.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Component">
      <summary>Représente les actions du concepteur de modèle d’extraction.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Service">
      <summary>Représente les actions du concepteur de modèles d’envoi (push).</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary>Classe de concepteur de base permettant d’étendre le comportement en mode design d’un document de design racine qui prend en charge les composants imbriqués.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Obtient une valeur indiquant si l'outil spécifié est pris en charge par le concepteur.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> dont la prise en charge pour la boîte à outils est à vérifier.</param>
      <returns>
        <see langword="true" /> si l'outil doit être activé dans la boîte à outils ; <see langword="false" /> si le Concepteur de documents n'est pas capable d'utiliser l'outil.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initialise le concepteur avec le composant spécifié.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> à associer au concepteur.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Ajuste le jeu de propriétés exposées par le composant à l'aide de <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> qui contient les propriétés de la classe du composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology">
        <see cref="T:System.ComponentModel.Design.ViewTechnology" /> indiquant une technologie d'affichage particulière.</param>
      <returns>Objet représentant l'affichage de ce concepteur.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component">Composant dont les attributs doivent être filtrés.</param>
      <param name="attributes">Dictionnaire d'attributs pouvant être modifiés.</param>
      <returns>
        <see langword="true" /> si l'ensemble d'attributs filtrés doit être mis en cache ; <see langword="false" /> si le service de filtre doit interroger à nouveau.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component">Composant dont les événements doivent être filtrés.</param>
      <param name="events">Dictionnaire d'événements pouvant être modifiés.</param>
      <returns>
        <see langword="true" /> si l'ensemble d'événements filtrés doit être mis en cache ; <see langword="false" /> si le service de filtre doit interroger à nouveau.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component">Composant dont les propriétés doivent être filtrées.</param>
      <param name="properties">Dictionnaire de propriétés pouvant être modifiées.</param>
      <returns>
        <see langword="true" /> si l'ensemble de propriétés filtrées doit être mis en cache ; <see langword="false" /> si le service de filtre doit interroger à nouveau.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> dont la prise en charge de la boîte à outils est à vérifier.</param>
      <returns>
        <see langword="true" /> si l'outil est pris en charge par la boîte à outils et s'il peut être activé ; <see langword="false" /> si le Concepteur de documents n'est pas capable d'utiliser l'outil.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à sélectionner.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary>Obtient le contrôle pour le concepteur.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Control" /> en cours de modification par le concepteur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns>Tableau des valeurs <see cref="T:System.ComponentModel.Design.ViewTechnology" /> prises en charge.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary>Obtient ou définit une valeur indiquant si la barre d'état des composants du concepteur est en mode de réorganisation automatique.</summary>
      <returns>
        <see langword="true" /> si la barre d'état des composants du concepteur est en mode de réorganisation automatique ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary>Obtient ou définit une valeur indiquant si la barre d'état des composants du concepteur est en mode grande icône.</summary>
      <returns>
        <see langword="true" /> si la barre d'état des composants du concepteur est en mode grande icône ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary>Fournit le comportement pour la barre d'état des composants d'un concepteur.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ComponentTray" /> avec le concepteur et le fournisseur de services spécifiés.</summary>
      <param name="mainDesigner">
        <see cref="T:System.ComponentModel.Design.IDesigner" /> qui est le concepteur principal ou le Concepteur de documents pour le projet en cours.</param>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" /> qui peut être utilisé pour obtenir des services de design.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary>Ajoute un composant à la barre d'état.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> à ajouter à la barre d'état.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>Obtient une valeur indiquant si l'outil spécifié peut être utilisé pour créer un nouveau composant.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à tester.</param>
      <returns>
        <see langword="true" /> si l'outil spécifié peut être utilisé pour créer un composant ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary>Obtient une valeur indiquant si le composant spécifié peut être affiché.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> à tester.</param>
      <returns>
        <see langword="true" /> si le composant peut être affiché ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>Crée un composant à partir de l'élément de boîte à outils spécifié, ajoute le composant au document actif, et affiche une représentation pour le composant dans la barre d'état des composants.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à partir duquel créer un composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary>Affiche un message d'erreur pour l'utilisateur comprenant des informations sur l'exception spécifiée.</summary>
      <param name="e">Exception sur laquelle afficher des informations.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Windows.Forms.Design.ComponentTray" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary>Obtient l'emplacement du composant spécifié, par rapport au coin supérieur gauche de la barre d'état des composants.</summary>
      <param name="receiver">
        <see cref="T:System.ComponentModel.IComponent" /> dont l'emplacement doit être récupéré.</param>
      <returns>
        <see cref="T:System.Drawing.Point" /> indiquant les coordonnées du composant spécifié, ou un <see cref="T:System.Drawing.Point" /> vide si le composant spécifié est introuvable dans la barre d'état des composants. Un <see cref="T:System.Drawing.Point" /> vide a une propriété <see cref="P:System.Drawing.Point.IsEmpty" /> égale à <see langword="true" /> et a généralement des propriétés <see cref="P:System.Drawing.Point.X" /> et <see cref="P:System.Drawing.Point.Y" /> qui sont toutes deux égales à zéro.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary>Semblable à <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />, cette méthode retourne le composant suivant dans la barre d'état, par rapport à un composant de départ.</summary>
      <param name="component">Composant à partir duquel commencer l'énumération.</param>
      <param name="forward">
        <see langword="true" /> pour énumérer la liste vers l'avant ; sinon, <see langword="false" /> pour énumérer vers l'arrière.</param>
      <returns>Le composant suivant dans la barre d'état des composants, ou <see langword="null" />, à la fin de la liste (ou au début, si <paramref name="forward" /> est <see langword="false" />).</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary>Obtient le type du service demandé.</summary>
      <param name="serviceType">Type de service à récupérer.</param>
      <returns>Instance du service demandé, ou <see langword="null" /> si le service est introuvable.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary>Obtient la valeur de la propriété extendeur <see langword="Location" />.</summary>
      <param name="receiver">
        <see cref="T:System.ComponentModel.IComponent" /> qui reçoit la propriété extendeur d'emplacement.</param>
      <returns>
        <see cref="T:System.Drawing.Point" /> représentant l'emplacement de <paramref name="receiver" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary>Teste un composant pour vérifier sa présence dans la barre d'état des composants.</summary>
      <param name="comp">Composant à tester pour vérifier sa présence dans la barre d'état des composants.</param>
      <returns>
        <see langword="true" /> si <paramref name="comp" /> est affiché dans la barre d'état  ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Appelé lorsqu'un objet qui a été glissé est déplacé sur la barre d'état des composants.</summary>
      <param name="de">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Appelé lorsqu'un objet est glissé sur et pénètre dans la zone de la barre d'état des composants.</summary>
      <param name="de">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary>Appelé lorsqu'un objet est glissé hors de la zone de la barre d'état des composants.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Appelé lorsqu'un objet est glissé sur la barre d'état des composants.</summary>
      <param name="de">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Appelé pendant une opération glisser-déplacer OLE pour permettre à la barre d'état des composants de transmettre des commentaires à l'utilisateur sur les résultats du déplacement de l'objet à un point spécifié.</summary>
      <param name="gfevent">
        <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Windows.Forms.Control.Layout" />.</summary>
      <param name="levent">
        <see cref="T:System.Windows.Forms.LayoutEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary>Appelé lorsqu'une opération glisser avec la souris est annulée.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>Appelé lorsque l'utilisateur double-clique sur la barre d'état des composants.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Appelé lors de l'appui sur le bouton droit de la souris.</summary>
      <param name="e">
        <see cref="T:System.Windows.Forms.MouseEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Appelé lorsque la position du curseur de souris a changé.</summary>
      <param name="e">
        <see cref="T:System.Windows.Forms.MouseEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Appelé lorsque le bouton de souris a été relâché.</summary>
      <param name="e">
        <see cref="T:System.Windows.Forms.MouseEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Appelé lorsque l'affichage de la barre d'état des composants doit être actualisé.</summary>
      <param name="pe">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary>Appelé pour définir le curseur de souris.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary>Supprime le composant spécifié de la barre d'état.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> à supprimer de la barre d'état.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>Définit l'emplacement du composant spécifié à l'emplacement spécifié.</summary>
      <param name="receiver">
        <see cref="T:System.ComponentModel.IComponent" /> dont l'emplacement doit être défini.</param>
      <param name="location">
        <see cref="T:System.Drawing.Point" /> indiquant le nouvel emplacement du composant spécifié.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>Obtient la valeur de la propriété extendeur <see langword="Location" />.</summary>
      <param name="receiver">
        <see cref="T:System.ComponentModel.IComponent" /> qui reçoit la propriété extendeur d'emplacement.</param>
      <param name="location">
        <see cref="T:System.Drawing.Point" /> représentant l'emplacement de <paramref name="receiver" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />.</summary>
      <param name="extendee">Objet qui doit recevoir les propriétés extendeur.</param>
      <returns>
        <see langword="true" /> si cet objet peut fournir des propriétés extendeur à l'objet spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary>Traite les messages Windows.</summary>
      <param name="m">
        <see cref="T:System.Windows.Forms.Message" /> à traiter.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary>Obtient ou définit une valeur indiquant si les éléments de la barre d'état des composants sont automatiquement alignés.</summary>
      <returns>
        <see langword="true" /> si les éléments de la barre d'état sont automatiquement agencés ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary>Obtient le nombre de composants contenus dans la barre d'état.</summary>
      <returns>Nombre de composants dans la barre d'état.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary>Obtient ou définit une valeur indiquant si la barre d'état des composants affiche une grande icône pour représenter chaque composant dans la barre d'état.</summary>
      <returns>
        <see langword="true" /> si des grandes icônes sont affichées ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary>Étend le comportement en mode design de <see cref="T:System.Windows.Forms.Control" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary>Spécifie l'objet d'accessibilité pour le concepteur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary>Définit un objet <see cref="T:System.Drawing.Point" /> local qui représente les valeurs d'un objet <see cref="T:System.Drawing.Point" /> non valide.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary>Traite les messages Windows.</summary>
      <param name="m">
        <see cref="T:System.Windows.Forms.Message" /> à traiter.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary>Indique si le contrôle de ce concepteur peut être apparenté au contrôle du concepteur spécifié.</summary>
      <param name="parentDesigner">
        <see cref="T:System.ComponentModel.Design.IDesigner" /> qui gère le contrôle à vérifier.</param>
      <returns>
        <see langword="true" /> si le contrôle géré par le concepteur spécifié peut être apparenté au contrôle géré par ce concepteur, sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary>Fournit le traitement par défaut pour les messages Windows.</summary>
      <param name="m">
        <see cref="T:System.Windows.Forms.Message" /> à traiter.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary>Affiche des informations sur l'exception spécifiée pour l'utilisateur.</summary>
      <param name="e">
        <see cref="T:System.Exception" /> à afficher.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary>Active les fonctionnalités de design pour un contrôle enfant.</summary>
      <param name="child">Le contrôle enfant pour lequel le mode Design sera activé.</param>
      <param name="name">Le nom de <paramref name="child" /> tel qu'il est exposé à l'utilisateur final.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> ou <paramref name="name" /> est <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si le contrôle enfant a pu être activé pour le design ; <see langword="false" /> si l'infrastructure d'hébergement ne le prend pas en charge.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary>Active ou désactive la prise en charge de la fonctionnalité glisser-déplacer pour le contrôle en cours de création.</summary>
      <param name="value">
        <see langword="true" /> pour activer la prise en charge de la fonctionnalité glisser-déplacer pour le contrôle ; <see langword="false" /> si le contrôle ne doit pas prendre en charge la fonctionnalité glisser-déplacer. La valeur par défaut est <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Retourne un <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> représentant les limites de ce contrôle.</summary>
      <param name="selectionType">Valeur <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> qui spécifie l'état de sélection.</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> représentant les limites de ce contrôle.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Obtient une collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> qui représentent les bordures de sélection et les poignées de manipulation d'un contrôle standard.</summary>
      <param name="selectionType">Valeur <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> qui spécifie l'état de sélection.</param>
      <returns>Collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>Indique si le contrôle doit gérer un clic de souris à un emplacement spécifié.</summary>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> qui indique l'emplacement où un clic de souris a été effectué, en coordonnées d'écran.</param>
      <returns>
        <see langword="true" /> si le contrôle doit gérer un clic à un emplacement spécifié ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary>Achemine les messages à partir des contrôles enfants du contrôle spécifié vers le concepteur.</summary>
      <param name="firstChild">Premier <see cref="T:System.Windows.Forms.Control" /> enfant à traiter. Cette méthode peut s'appeler elle-même de manière récursive pour les enfants du contrôle.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initialise le concepteur avec le composant spécifié.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> à associer au concepteur. Ce composant doit toujours être une instance de <see cref="T:System.Windows.Forms.Control" />, ou en dériver.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>Réinitialise un composant existant.</summary>
      <param name="defaultValues">Dictionnaire de noms/valeurs de valeurs par défaut à appliquer aux propriétés. Peut avoir la valeur <see langword="null" /> si aucune valeur par défaut n’est spécifiée.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Initialise un composant nouvellement créé.</summary>
      <param name="defaultValues">Dictionnaire de noms/valeurs de valeurs par défaut à appliquer aux propriétés. Peut avoir la valeur <see langword="null" /> si aucune valeur par défaut n’est spécifiée.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary>Retourne le Concepteur de contrôles internes avec l'index spécifié dans <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <param name="internalControlIndex">Index spécifié pour sélectionner le Concepteur de contrôles internes. Cet index est en base zéro.</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> à l'index spécifié.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary>Retourne le nombre de Concepteurs de contrôles internes dans <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns>Nombre de Concepteurs de contrôles internes dans <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>Affiche le menu contextuel et fournit une possibilité de traitement supplémentaire lorsque le menu contextuel est sur le point d'être affiché.</summary>
      <param name="x">Coordonnée x à laquelle le menu contextuel doit être affiché.</param>
      <param name="y">Coordonnée y à laquelle le menu contextuel doit être affiché.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary>Fournit une possibilité de traitement supplémentaire immédiatement après la création du handle du contrôle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>Reçoit un appel pour nettoyer une opération glisser-déplacer.</summary>
      <param name="de">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Reçoit un appel lorsqu'un objet glissé est déplacé sur la vue de Concepteur de contrôles.</summary>
      <param name="de">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Reçoit un appel lorsqu'une opération glisser-déplacer entre dans la vue de Concepteur de contrôles.</summary>
      <param name="de">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>Reçoit un appel lorsqu'une opération glisser-déplacer quitte la vue de Concepteur de contrôles.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Reçoit un appel lorsqu'un objet glissé est déplacé au-dessus de la vue de Concepteur de contrôles.</summary>
      <param name="de">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Reçoit un appel durant une opération glisser-déplacer pour fournir des indications visuelles en fonction de la position du curseur de la souris tandis que l'opération glisser est en cours.</summary>
      <param name="e">
        <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>Reçoit un appel lorsque le bouton gauche de la souris est maintenu enfoncé au-dessus du composant.</summary>
      <param name="x">Coordonnée x, en coordonnées d'écran, du pointeur de la souris.</param>
      <param name="y">Coordonnée y, en coordonnées d'écran, du pointeur de la souris.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>Reçoit un appel à la fin d'une opération glisser-déplacer pour terminer ou annuler l'opération.</summary>
      <param name="cancel">
        <see langword="true" /> pour annuler l'opération glisser ; <see langword="false" /> pour la valider.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>Reçoit un appel pour chaque mouvement de la souris pendant une opération glisser-déplacer.</summary>
      <param name="x">Coordonnée x, en coordonnées d'écran, du pointeur de la souris.</param>
      <param name="y">Coordonnée y, en coordonnées d'écran, du pointeur de la souris.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary>Reçoit un appel lorsque la souris entre initialement dans le contrôle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary>Reçoit un appel après que la souris pointe sur le contrôle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary>Reçoit un appel lorsque la souris entre initialement dans le contrôle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>Reçoit un appel lorsque le contrôle que le concepteur manage a peint sa surface de sorte que le concepteur puisse peindre d'autres motifs par-dessus le contrôle.</summary>
      <param name="pe">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> que le concepteur peut utiliser pour dessiner sur le contrôle.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary>Appelée quand le concepteur est initialisé.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary>Reçoit un appel chaque fois que le curseur doit être défini.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Ajuste le jeu de propriétés exposées par le composant à l'aide de <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> contenant les propriétés de la classe de composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary>Achemine les messages pour les enfants du contrôle spécifié vers chaque contrôle plutôt que vers un concepteur parent.</summary>
      <param name="firstChild">Premier <see cref="T:System.Windows.Forms.Control" /> enfant à traiter. Cette méthode peut s'appeler elle-même de manière récursive pour les enfants du contrôle.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Traite les messages Windows et les achemine éventuellement vers le contrôle.</summary>
      <param name="m">
        <see cref="T:System.Windows.Forms.Message" /> à traiter.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary>Obtient le <see cref="T:System.Windows.Forms.AccessibleObject" /> assigné au contrôle.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" /> assigné au contrôle.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary>Obtient la collection de composants associés au composant géré par le concepteur.</summary>
      <returns>Composants associés au composant géré par le concepteur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary>Obtient ou définit une valeur indiquant si l'allocation de poignée de redimensionnement dépend de la valeur de la propriété <see cref="P:System.Windows.Forms.Control.AutoSize" />.</summary>
      <returns>
        <see langword="true" /> si l'allocation de poignée de redimensionnement dépend de la valeur des propriétés <see cref="P:System.Windows.Forms.Control.AutoSize" /> et <see langword="AutoSizeMode" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary>Obtient le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> de l'environnement de design.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> ou <see langword="null" /> si le service n'est pas disponible.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary>Obtient le contrôle qui est créé par le concepteur.</summary>
      <returns>Contrôle qui est créé par le concepteur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary>Obtient une valeur indiquant si des rectangles de déplacement peuvent être dessinés sur ce composant de concepteur.</summary>
      <returns>
        <see langword="true" /> si des rectangles de déplacement peuvent être dessinés sur le composant de concepteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary>Obtient le <see cref="T:System.ComponentModel.InheritanceAttribute" /> du concepteur.</summary>
      <returns>
        <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> si le concepteur est un concepteur racine ; sinon, la valeur de la propriété <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> du concepteur parent.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary>Obtient le composant parent de <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns>Composant parent de <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> ; sinon, <see langword="null" /> s'il n'y a aucun composant parent.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary>Obtient une valeur indiquant si le <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> doit autoriser l'alignement sur les lignes d'alignement (SnapLines) pendant une opération glisser.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> doit autoriser l'alignement sur les lignes d'alignement (SnapLines) pendant une opération glisser lorsque le contrôle de glissement principal se trouve sur ce concepteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary>Obtient les règles de sélection qui indiquent les possibilités de mouvement d'un composant.</summary>
      <returns>Combinaison de bits de valeurs <see cref="T:System.Windows.Forms.Design.SelectionRules" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary>Obtient une liste d'objets <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> qui représentent des points d'alignement significatifs pour ce contrôle.</summary>
      <returns>Liste d'objets <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> qui représentent des points d'alignement significatifs pour ce contrôle.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary>Fournit <see cref="T:System.Windows.Forms.AccessibleObject" /> pour <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> en utilisant le concepteur et le contrôle spécifiés.</summary>
      <param name="designer">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> pour l'objet accessible.</param>
      <param name="control">
        <see cref="T:System.Windows.Forms.Control" /> pour l'objet accessible.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary>Récupère l’enfant accessible correspondant à l’index spécifié.</summary>
      <param name="index">Index de base zéro de l’enfant accessible.</param>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" /> qui représente l'enfant accessible correspondant à l'index spécifié.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary>Récupère le nombre d’enfants qui appartiennent à un objet accessible.</summary>
      <returns>Nombre d’enfants qui appartiennent à un objet accessible.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary>Récupère l'objet qui a le focus clavier.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" /> qui spécifie l'enfant ayant actuellement le focus. Cette méthode retourne l'objet appelant si l'objet lui-même a le focus. Retourne <see langword="null" /> si aucun objet n'a le focus.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary>Récupère l'enfant actuellement sélectionné.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" /> qui représente l'enfant actuellement sélectionné. Cette méthode retourne l'objet appelant si l'objet lui-même est sélectionné. Retourne <see langword="null" /> si aucun enfant n'est actuellement sélectionné et que l'objet lui-même n'a pas le focus.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary>Récupère l'objet enfant qui est situé aux coordonnées d'écran spécifiées.</summary>
      <param name="x">Coordonnée d'écran horizontale.</param>
      <param name="y">Coordonnée d'écran verticale.</param>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" /> qui représente l’objet enfant situé aux coordonnées d’écran spécifiées. Cette méthode retourne l'objet appelant si l'objet lui-même est à l'emplacement spécifié. Retourne <see langword="null" /> si aucun objet ne se trouve à l’emplacement testé.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary>Obtient les points qui définissent les limites de l'objet accessible pour le concepteur.</summary>
      <returns>
        <see cref="T:System.Drawing.Rectangle" /> indiquant les limites de l'objet accessible pour le concepteur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary>Obtient une chaîne qui décrit l'action par défaut de l'objet spécifié.</summary>
      <returns>Description de l'action par défaut d'un objet spécifié.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary>Obtient une chaîne qui décrit l'apparence visuelle de l'objet spécifié.</summary>
      <returns>Description de l'apparence visuelle de l'objet pour l'utilisateur, ou <see langword="null" /> si l'objet n'a pas de description.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary>Obtient ou définit le nom de l'objet.</summary>
      <returns>Nom de l'objet, ou <see langword="null" /> si la propriété n'a pas été définie.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary>Obtient le parent d'un objet accessible.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" /> qui représente le parent d’un objet accessible, ou <see langword="null" /> s’il n’existe pas d’objet parent.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary>Obtient le rôle de l'objet accessible.</summary>
      <returns>Une des valeurs <see cref="T:System.Windows.Forms.AccessibleRole" />, ou <see cref="F:System.Windows.Forms.AccessibleRole.None" /> si aucun rôle n'a été spécifié.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary>Obtient l'état de l'objet accessible.</summary>
      <returns>Une des valeurs <see cref="T:System.Windows.Forms.AccessibleStates" />, ou <see cref="F:System.Windows.Forms.AccessibleStates.None" /> si aucun état n'a été défini.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary>Obtient ou définit la valeur d'un objet accessible.</summary>
      <returns>Valeur d’un objet accessible, ou <see langword="null" /> si aucune valeur n’est définie pour l’objet.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary>Permet d'obtenir et de définir les valeurs des options d'un concepteur.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.DesignerOptions" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary>Obtient ou définit une valeur qui active ou désactive l'édition sur place pour les contrôles <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
      <returns>
        <see langword="true" /> si l'édition sur place pour les contrôles <see cref="T:System.Windows.Forms.ToolStrip" /> est activée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary>Obtient ou définit une valeur <see cref="T:System.Drawing.Size" /> représentant les dimensions d'une unité de grille.</summary>
      <returns>
        <see cref="T:System.Drawing.Size" /> représentant les dimensions d'une unité de grille.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary>Obtient ou définit une valeur qui spécifie si un concepteur affiche automatiquement le panneau des balises actives d'un composant au moment de sa création.</summary>
      <returns>
        <see langword="true" /> pour permettre au panneau des balises actives d'un composant de s'ouvrir automatiquement au moment de la création ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary>Obtient ou définit une valeur qui active ou désactive la grille dans le concepteur.</summary>
      <returns>
        <see langword="true" /> si la grille est activée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary>Obtient ou définit une valeur qui active ou désactive si les contrôles sont placés automatiquement à des coordonnées de grille.</summary>
      <returns>
        <see langword="true" /> si l'alignement est activé ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary>Obtient ou définit une valeur qui active ou désactive le cache du composant.</summary>
      <returns>
        <see langword="true" /> si le cache du composant est activé ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary>Obtient ou définit une valeur qui active ou désactive les balises actives dans le concepteur.</summary>
      <returns>
        <see langword="true" /> si les balises actives du concepteur sont activées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary>Obtient ou définit une valeur qui active ou désactive les lignes d’alignement dans le concepteur.</summary>
      <returns>
        <see langword="true" /> si les lignes d’alignement dans le concepteur sont activées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DockEditor">
      <summary>Fournit une interface utilisateur permettant de spécifier une propriété <see cref="P:System.Windows.Forms.Control.Dock" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.DockEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié avec le style de l'éditeur fourni par GetEditorStyle. Un fournisseur de services est prévu pour que tous les services d"édition requis puissent être obtenus.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value">Instance de la valeur en cours de modification.</param>
      <returns>Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas été modifiée, cette méthode retourne le même objet qui lui a été passé.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Récupère le style de modification de la méthode EditValue. Si la méthode n'est pas prise en charge, la valeur None est retournée.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>Valeur enum indiquant le style de modification fourni.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary>Classe de concepteur de base pour étendre le comportement en mode design et fournir une vue en mode design de niveau racine d’un <see cref="T:System.Windows.Forms.Control" /> que prend en charge des contrôles imbriqués et doit recevoir des messages de défilement.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.DocumentDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>Vérifie l'existence d'un service d'éditeur de menus et en crée un s'il n'existe pas déjà.</summary>
      <param name="c">
        <see cref="T:System.ComponentModel.IComponent" /> pour lequel vérifier l'existence d'un service de menu contextuel.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Obtient un <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> qui représente les objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="selectionType">Valeur <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> qui spécifie l'état de sélection.</param>
      <returns>Collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Indique si l'outil spécifié est pris en charge par le concepteur.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> dont la prise en charge pour la boîte à outils est à vérifier.</param>
      <returns>
        <see langword="true" /> si l'outil doit être activé dans la boîte à outils ; <see langword="false" /> si le Concepteur de documents n'est pas capable d'utiliser l'outil.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initialise le concepteur avec le composant spécifié.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> à associer au concepteur.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>Appelé quand le menu contextuel doit être affiché.</summary>
      <param name="x">Coordonnée d'écran horizontale à laquelle le menu contextuel doit être affiché.</param>
      <param name="y">Coordonnée d'écran verticale à laquelle le menu contextuel doit être affiché.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary>Appelé immédiatement après que le handle du concepteur a été créé.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Ajuste le jeu de propriétés exposées par le composant à l'aide de <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> qui contient les propriétés de la classe du composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology">
        <see cref="T:System.ComponentModel.Design.ViewTechnology" /> indiquant une technologie d'affichage particulière.</param>
      <returns>Objet représentant l'affichage de ce concepteur.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> dont la prise en charge de la boîte à outils est à vérifier.</param>
      <returns>
        <see langword="true" /> si l'outil est pris en charge par la boîte à outils et s'il peut être activé ; <see langword="false" /> si le Concepteur de documents n'est pas capable d'utiliser l'outil.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à sélectionner.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Sélectionne l'outil spécifié.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> pour lequel créer un composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Traite les messages Windows.</summary>
      <param name="m">
        <see cref="T:System.Windows.Forms.Message" /> à traiter.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary>Obtient le <see cref="T:System.Windows.Forms.Design.SelectionRules" /> pour le concepteur.</summary>
      <returns>Combinaison de bits de valeurs <see cref="T:System.Windows.Forms.Design.SelectionRules" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns>Tableau des valeurs <see cref="T:System.ComponentModel.Design.ViewTechnology" /> prises en charge.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary>Fournit un moyen systématique de gérer les gestionnaires d'événements pour le document en cours.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary>Déclenche un événement OnEventHandlerChanged.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.EventHandlerService" />.</summary>
      <param name="focusWnd">
        <see cref="T:System.Windows.Forms.Control" /> en cours de conception.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary>Obtient le gestionnaire d'événements actuellement actif du type spécifié.</summary>
      <param name="handlerType">Type de gestionnaire à obtenir.</param>
      <returns>Instance du gestionnaire ou <see langword="null" /> s'il n'existe aucun gestionnaire du type demandé.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary>Dépile le gestionnaire donné.</summary>
      <param name="handler">Gestionnaire à supprimer de la pile.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary>Exécute un push d'un nouveau gestionnaire d'événements dans la pile.</summary>
      <param name="handler">Gestionnaire à ajouter dans la pile.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary>Obtient le contrôle auquel les gestionnaires d'événements sont joints.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Control" /> qui a été joint via le constructeur.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FileNameEditor">
      <summary>Fournit une interface utilisateur pour sélectionner un fichier.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.FileNameEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie l'objet spécifié à l'aide du style d'éditeur fourni par la méthode <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value">Instance de la valeur en cours de modification.</param>
      <returns>Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas été modifiée, cette méthode retourne le même objet qui lui a été passé.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient le style de modification utilisé par la méthode <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>Une des valeurs <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification fourni.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
      <summary>Initialise la boîte de dialogue d'ouverture de fichier lors de sa création.</summary>
      <param name="openFileDialog">
        <see cref="T:System.Windows.Forms.OpenFileDialog" /> à utiliser pour sélectionner un fichier.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor">
      <summary>Fournit une interface utilisateur permettant de choisir un dossier dans le système de fichiers.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.FolderNameEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie l'objet spécifié avec le style de l'éditeur fourni par <see cref="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider">Fournisseur d'objets de service.</param>
      <param name="value">Valeur à définir.</param>
      <returns>La nouvelle valeur de l'objet ou l'ancienne valeur, si l'objet n'a pas pu être mis à jour.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient le style de modification utilisé par la méthode <see cref="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>Valeur d'énumération <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification fourni.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser)">
      <summary>Initialise la boîte de dialogue de recherche de dossiers.</summary>
      <param name="folderBrowser">
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> pour choisir un dossier.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser">
      <summary>Représente une boîte de dialogue qui permet à l'utilisateur de choisir un dossier. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog">
      <summary>Affiche la boîte de dialogue de recherche des dossiers.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.DialogResult" /> issu du formulaire.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary>Affiche la boîte de dialogue de recherche des dossiers avec le propriétaire spécifié.</summary>
      <param name="owner">Fenêtre de niveau supérieur à laquelle appartiendra la boîte de dialogue modale (par exemple : System.Windows.Forms.Form).</param>
      <returns>
        <see cref="T:System.Windows.Forms.DialogResult" /> issu du formulaire.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Description">
      <summary>Obtient ou définit une description à afficher au-dessus des dossiers.</summary>
      <returns>Description à afficher au-dessus des dossiers.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.DirectoryPath">
      <summary>Obtient le chemin d'accès à l'objet choisi par l'utilisateur.</summary>
      <returns>Chemin d'accès à l'objet choisi par l'utilisateur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.StartLocation">
      <summary>Obtient ou définit l'emplacement de début du nœud racine.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder" /> qui indique l'emplacement où la recherche des dossiers doit s'effectuer initialement.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Style">
      <summary>Styles que la recherche des dossiers utilisera en parcourant les dossiers. Ce doit être une combinaison d'indicateurs issus de l'énumération <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" />.</summary>
      <returns>Membre de l'énumération <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> qui indique le comportement pour le <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> à utiliser.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder">
      <summary>Définit les identificateurs utilisés pour indiquer le dossier racine qu'un explorateur de dossiers doit consulter initialement.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Desktop">
      <summary>Bureau de l'utilisateur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Favorites">
      <summary>Liste des Favoris de l'utilisateur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyComputer">
      <summary>Contenu de l'icône Poste de travail.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyDocuments">
      <summary>Dossier Mes documents de l'utilisateur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyPictures">
      <summary>Emplacement dans lequel l'utilisateur stocke les images.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetAndDialUpConnections">
      <summary>Réseau et connexions d'accès à distance.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetworkNeighborhood">
      <summary>Voisinage réseau.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Printers">
      <summary>Dossier contenant les imprimantes installées.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Recent">
      <summary>Dossier contenant des raccourcis vers les fichiers ouverts récemment.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.SendTo">
      <summary>Dossier contenant des raccourcis vers des applications auxquelles vous pouvez envoyer des documents.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.StartMenu">
      <summary>Menu Démarrer de l'utilisateur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Templates">
      <summary>Modèles de fichiers de l'utilisateur.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles">
      <summary>Définit les identificateurs utilisés pour spécifier le comportement de <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForComputer">
      <summary>L'explorateur de dossiers ne peut retourner que des ordinateurs. Si l'utilisateur sélectionne autre chose qu'un ordinateur, le bouton OK est grisé.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForEverything">
      <summary>L'explorateur de dossiers peut retourner tout objet qu'il est capable de retourner.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForPrinter">
      <summary>L'explorateur de dossiers ne peut retourner que des imprimantes. Si l'utilisateur sélectionne autre chose qu'une imprimante, le bouton OK est grisé.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToDomain">
      <summary>L'explorateur de dossiers n'inclura pas de dossiers réseau situés au-dessous du niveau du domaine dans le contrôle Treeview de la boîte de dialogue ou autorisera la navigation vers les emplacements réseau situés en dehors de domaine.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToFilesystem">
      <summary>L'explorateur de dossiers ne retournera que des répertoires du système de fichiers local. Si l'utilisateur sélectionne des dossiers qui ne font pas partie du système de fichiers local, le bouton OK est grisé.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToSubfolders">
      <summary>L’explorateur de dossiers retournera uniquement des objets du système de fichiers local contenus dans le dossier racine ou dans un sous-dossier de ce dernier. Si l'utilisateur sélectionne un sous-dossier du dossier racine qui ne fait pas partie du système de fichiers local, le bouton OK est grisé.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.ShowTextBox">
      <summary>L'explorateur de dossiers comprend un contrôle <see cref="T:System.Windows.Forms.TextBox" /> dans la boîte de dialogue Sélection qui permet à l'utilisateur de taper le nom d'un élément.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary>Définit une méthode pour obtenir des informations sur la façon dont les barres de défilement des fenêtres doivent être à thème une fois affichées dans le concepteur Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary>Obtient une énumération d'objets <see cref="T:System.Windows.Forms.Design.ThemedScrollbarWindow" /> qui représentent des fenêtres et la façon dont les barres de défilement doivent être à thème une fois affichées dans le concepteur Visual Studio.</summary>
      <returns>Une énumération d'objets qui représentent des fenêtres et la façon dont les barres de défilement doivent être à thème une fois affichées dans le concepteur Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary>Sérialise les chaînes des dictionnaires.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Désérialise en un objet l'objet CodeDOM (Code Document Object Model) sérialisé spécifié.</summary>
      <param name="manager">Interface du gestionnaire de sérialisation utilisée pendant le processus de désérialisation.</param>
      <param name="codeObject">Objet CodeDOM sérialisé à désérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="codeObject" /> est <see langword="null" />.</exception>
      <returns>Objet CodeDOM désérialisé.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Sérialise l'objet spécifié en un objet CodeDOM (Code Document Object Model).</summary>
      <param name="manager">Gestionnaire de sérialisation à utiliser pendant la sérialisation.</param>
      <param name="value">L'objet à sérialiser.</param>
      <returns>Objet CodeDOM représentant l'objet qui a été sérialisé.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListImageEditor">
      <summary>Fournit un éditeur pouvant effectuer une recherche de fichier par défaut pour les fichiers bitmap (.bmp).</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ImageListImageEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié à l'aide du style d'édition fourni par la méthode <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value">
        <see cref="T:System.Object" /> en cours de modification.</param>
      <returns>
        <see cref="T:System.Object" /> représentant la nouvelle valeur. Si la valeur de l'objet n'a pas changé, la méthode <see cref="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> retourne l'objet qui lui a été passé.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetFileDialogDescription">
      <summary>Obtient la description du filtre de liste de fichiers par défaut fourni par cet éditeur.</summary>
      <returns>Description du filtre de liste de fichiers par défaut.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetImageExtenders">
      <summary>Obtient un tableau de types d'images pris en charge.</summary>
      <returns>Tableau de <see cref="T:System.Type" /> représentant les types d'images pris en charge.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient une valeur indiquant si cet éditeur permet de peindre une représentation de la valeur d'un objet.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>
        <see langword="true" /> si <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> est implémenté ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Peint une valeur indiquée par le <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> spécifié.</summary>
      <param name="e">
        <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> qui indique l'élément à peindre et l'emplacement où il doit être peint.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.MaskDescriptor">
      <summary>Définit un jeu de membres pour que les classes dérivées fournissent des options pour l'éditeur de types muni d'une interface utilisateur de zone de texte masqué.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> spécifié est égal à l'objet <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> actuel.</summary>
      <param name="maskDescriptor">
        <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> à comparer avec l'objet <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> spécifié est égal au <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.GetHashCode">
      <summary>Sert de fonction de hachage pour un type particulier.</summary>
      <returns>Code de hachage du <see cref="T:System.Object" /> actuel.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor)">
      <summary>Retourne une valeur qui indique si le descripteur de masque spécifié est valide et peut être ajouté à la liste de masques.</summary>
      <param name="maskDescriptor">Descripteur de masque dont la validité doit être testée.</param>
      <returns>
        <see langword="true" /> si <paramref name="maskDescriptor" /> est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor,System.String@)">
      <summary>Retourne une valeur qui indique si le descripteur de masque spécifié est valide, et fournit une description d'erreur s'il n'est pas valide.</summary>
      <param name="maskDescriptor">Descripteur de masque dont la validité doit être testée.</param>
      <param name="validationErrorDescription">Chaîne représentant une erreur de validation. Si aucune erreur de validation ne s'est produite, <paramref name="validationErrorDescription" /> a la valeur <see cref="F:System.String.Empty" />.</param>
      <returns>
        <see langword="true" /> si <paramref name="maskDescriptor" /> est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.ToString">
      <summary>Retourne une chaîne qui représente l'objet actuel.</summary>
      <returns>Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Culture">
      <summary>Obtient le <see cref="T:System.Globalization.CultureInfo" /> qui représente les paramètres régionaux pour lesquels le masque est créé.</summary>
      <returns>
        <see cref="T:System.Globalization.CultureInfo" /> qui représente les paramètres régionaux pour lesquels le masque est créé.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Mask">
      <summary>Obtient le masque en cours de définition.</summary>
      <returns>
        <see cref="T:System.String" /> contenant le masque en cours de définition.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Name">
      <summary>Obtient le nom convivial du masque.</summary>
      <returns>
        <see cref="T:System.String" /> contenant le nom ou la brève description de <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Sample">
      <summary>Obtient un exemple de chaîne mise en forme pour le masque.</summary>
      <returns>
        <see cref="T:System.String" /> contenant le texte qui est mis en forme à l'aide de <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType">
      <summary>Obtient le type fournissant la validation associée au masque.</summary>
      <returns>
        <see cref="T:System.Type" /> par rapport auquel la chaîne mise en forme est validée.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary>Définit un ensemble de champs <see cref="T:System.ComponentModel.Design.CommandID" /> dont chacun correspond à une fonction fournie par l'environnement hôte.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au menu de la barre d'état des composants.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au menu du conteneur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder à la page de propriétés du concepteur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de modification des étiquettes.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche d'annulation.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche par défaut.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche Fin.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche Début.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire d'appels de balises actives.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de déplacement vers le bas.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de déplacement vers la gauche.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de déplacement vers la droite.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de déplacement vers le haut.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement vers le bas.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement en diminuant la hauteur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement en augmentant la hauteur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement vers la gauche.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement vers la droite.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement vers le haut.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement en diminuant la largeur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement en augmentant la largeur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche d'annulation de l'inversion.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche suivant.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche précédent.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche MAJ-FIN.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche MAJ-DÉBUT.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de réduction de la hauteur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche d'augmentation de la hauteur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de réduction de la largeur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche d'augmentation de la largeur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de sélection de l'ordre de tabulation.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au menu Sélection.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour définir le rectangle d'état.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour définir le texte du rectangle d'état.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au menu de sélection de la barre d'état.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.MenuCommands" />.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary>Étend le comportement en mode design d’un <see cref="T:System.Windows.Forms.Control" /> qui prend en charge les contrôles imbriqués.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary>Ajoute des lignes d'alignement (SnapLines) de marge intérieure.</summary>
      <param name="snapLines">
        <see cref="T:System.Collections.ArrayList" /> qui contient les objets <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary>Appelé lorsqu'un composant est ajouté au conteneur parent.</summary>
      <param name="component">Composant à tester pour la présence d'erreurs.</param>
      <returns>
        <see langword="true" /> si <paramref name="component" /> peut être ajouté ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary>Indique si le contrôle spécifié peut être un enfant du contrôle managé par ce concepteur.</summary>
      <param name="control">
        <see cref="T:System.Windows.Forms.Control" /> à tester.</param>
      <returns>
        <see langword="true" /> si le contrôle spécifié peut être un enfant du contrôle managé par ce concepteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary>Indique si le contrôle managé par le concepteur spécifié peut être un enfant du contrôle managé par ce concepteur.</summary>
      <param name="controlDesigner">Concepteur du contrôle à tester.</param>
      <returns>
        <see langword="true" /> si le contrôle managé par le concepteur spécifié peut être un enfant du contrôle managé par ce concepteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary>Crée un composant ou un contrôle à partir de l'outil spécifié et l'ajoute au document de design en cours.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à partir duquel créer un composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary>Crée un composant ou un contrôle à partir de l'outil spécifié et l'ajoute au document de design en cours, à l'emplacement spécifié.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à partir duquel créer un composant.</param>
      <param name="location">
        <see cref="T:System.Drawing.Point" />, en coordonnées d'écran de la vue design, sur lequel centrer le composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary>Crée un composant ou un contrôle à partir de l'outil spécifié et l 'ajoute au document de design en cours, à l'intérieur du rectangle spécifié.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à partir duquel créer un composant.</param>
      <param name="bounds">
        <see cref="T:System.Drawing.Rectangle" /> indiquant l'emplacement est la taille du composant créé à partir de l'outil. Les valeurs <see cref="P:System.Drawing.Rectangle.X" /> et <see cref="P:System.Drawing.Rectangle.Y" /> du <see cref="T:System.Drawing.Rectangle" /> indiquent les coordonnées d'écran de la vue design du coin supérieur gauche du composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Fournit les fonctionnalités principales de toutes les méthodes <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à partir duquel créer un composant.</param>
      <param name="x">Position horizontale, en coordonnées de vue design, de l'emplacement du bord gauche de l'outil si une taille est spécifiée ; position horizontale du centre de l'outil si aucune taille n'est spécifiée.</param>
      <param name="y">Position verticale, en coordonnées de vue design, de l'emplacement du bord supérieur de l'outil si une taille est spécifiée ; position verticale du centre de l'outil si aucune taille n'est spécifiée.</param>
      <param name="width">Largeur de l'outil. Ce paramètre est ignoré si le paramètre <paramref name="hasSize" /> a la valeur <see langword="false" />.</param>
      <param name="height">Hauteur de l'outil. Ce paramètre est ignoré si le paramètre <paramref name="hasSize" /> a la valeur <see langword="false" />.</param>
      <param name="hasLocation">
        <see langword="true" /> si l'emplacement de l'outil est spécifié ; <see langword="false" /> si le composant doit être positionné au centre du contrôle actuellement sélectionné.</param>
      <param name="hasSize">
        <see langword="true" /> si une taille a été spécifiée pour le composant ; <see langword="false" /> si la hauteur et la largeur par défaut du composant doivent être utilisées.</param>
      <returns>Tableau de composants créés à partir de l'outil.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par le <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />, et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary>Obtient le contrôle à partir du concepteur du composant spécifié.</summary>
      <param name="component">Composant pour lequel le contrôle doit être récupéré.</param>
      <returns>
        <see cref="T:System.Windows.Forms.Control" /> auquel appartient le composant spécifié.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Obtient un glyphe de corps qui représente les limites du contrôle.</summary>
      <param name="selectionType">Valeur <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> qui spécifie l'état de sélection.</param>
      <returns>Glyphe de corps qui représente les limites du contrôle.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Obtient une collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> qui représentent les bordures de sélection et les poignées de manipulation d'un contrôle standard.</summary>
      <param name="selectionType">Valeur <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> qui spécifie l'état de sélection.</param>
      <returns>Collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary>Utilisée par les classes dérivées pour déterminer si elle retourne le contrôle en cours de conception ou un autre <see cref="T:System.ComponentModel.Container" /> en lui ajoutant un composant.</summary>
      <param name="component">Composant pour lequel récupérer le <see cref="T:System.Windows.Forms.Control" /> parent.</param>
      <returns>
        <see cref="T:System.Windows.Forms.Control" /> parent du composant.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary>Met à jour la position du rectangle spécifié, en ajustant son alignement par rapport à la grille lorsque le mode grille est activé.</summary>
      <param name="originalRect">
        <see cref="T:System.Drawing.Rectangle" /> indiquant la position initiale du composant en cours de mise à jour.</param>
      <param name="dragRect">
        <see cref="T:System.Drawing.Rectangle" /> indiquant la nouvelle position du composant.</param>
      <param name="updateSize">
        <see langword="true" /> pour mettre à jour la taille du rectangle en cas de modification ; sinon <see langword="false" />.</param>
      <returns>Rectangle indiquant la position du composant en coordonnées d'écran de la vue design. Si aucun changement n'a été effectué, cette méthode retourne le rectangle d'origine.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initialise le concepteur avec le composant spécifié.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> à associer au concepteur.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Initialise un composant nouvellement créé.</summary>
      <param name="defaultValues">Dictionnaire de noms/valeurs de valeurs par défaut à appliquer aux propriétés. Peut avoir la valeur <see langword="null" /> si aucune valeur par défaut n’est spécifiée.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary>Crée un outil à partir du <see cref="T:System.Drawing.Design.ToolboxItem" /> spécifié.</summary>
      <param name="toInvoke">
        <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> avec lequel l'outil doit être employé.</param>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à partir duquel créer un outil.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>Appelée dans le but de nettoyer une opération glisser-déplacer.</summary>
      <param name="de">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Appelée lorsqu'un objet glissé est déplacé sur la vue de Concepteur de contrôles.</summary>
      <param name="de">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Appelée lorsqu'une opération glisser-déplacer entre dans la vue de Concepteur de contrôles.</summary>
      <param name="de">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>Appelée lorsqu'une opération glisser-déplacer sort de la vue de Concepteur de contrôles.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Appelée lorsqu'un objet glissé-déplacé est glissé sur la vue de Concepteur de contrôles.</summary>
      <param name="de">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>Appelée lorsque le bouton gauche de la souris est maintenu enfoncé au-dessus du composant.</summary>
      <param name="x">Coordonnée x, en coordonnées d'écran, du pointeur de la souris.</param>
      <param name="y">Coordonnée y, en coordonnées d'écran, du pointeur de la souris.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>Appelée à la fin d'une opération glisser-déplacer pour terminer ou annuler l'opération.</summary>
      <param name="cancel">
        <see langword="true" /> pour annuler l'opération glisser ; <see langword="false" /> pour la confirmer.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>Appelée pour chaque mouvement de la souris pendant une opération glisser-déplacer.</summary>
      <param name="x">Coordonnée x, en coordonnées d'écran, du pointeur de la souris.</param>
      <param name="y">Coordonnée y, en coordonnées d'écran, du pointeur de la souris.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>Appelée lorsque le contrôle que le concepteur manage a peint sa surface de sorte que le concepteur puisse peindre d'autres motifs par-dessus le contrôle.</summary>
      <param name="pe">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary>Fournit une possibilité de modifier le curseur de la souris actuel.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Ajuste le jeu de propriétés exposées par le composant à l'aide de <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> qui contient les propriétés de la classe du composant.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary>Obtient une valeur indiquant si les contrôles sélectionnés seront à nouveau apparentés.</summary>
      <returns>
        <see langword="true" /> si les contrôles sélectionnés par un mécanisme de type « lasso » sur la surface du concepteur seront à nouveau apparentés à ce contrôle de concepteur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary>Obtient une valeur qui indique si une zone de glisser générique doit être dessinée lors du glisser-déplacer d'un élément de boîte à outils sur la surface du concepteur.</summary>
      <returns>
        <see langword="true" /> si une zone de glisser générique doit être dessinée lors du glisser-déplacer d'un élément de boîte à outils sur la surface du concepteur ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary>Obtient une valeur qui indique si l'ordre de plan des contrôles déplacés par glisser-déplacer doit être maintenu lorsque ceux-ci sont placés sur un <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
      <returns>
        <see langword="true" /> si l'ordre de plan des contrôles déplacés par glisser-déplacer doit être maintenu lorsque ceux-ci sont placés sur un <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary>Obtient l'emplacement par défaut d'un contrôle ajouté au concepteur.</summary>
      <returns>
        <see cref="T:System.Drawing.Point" /> indiquant l'emplacement par défaut d'un contrôle ajouté au concepteur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary>Obtient ou définit une valeur indiquant si la grille doit être dessinée sur le contrôle pour ce concepteur.</summary>
      <returns>
        <see langword="true" /> si une grille doit être dessinée sur le contrôle dans le concepteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary>Obtient une valeur indiquant si les rectangles de glissement sont dessinés par le concepteur.</summary>
      <returns>
        <see langword="true" /> si les rectangles de glissement sont dessinés ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary>Obtient ou définit la taille de chaque carré de la grille qui est dessinée lorsque le concepteur est en mode grille.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Size" /> est hors de la plage autorisée pour <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" />. La valeur minimale par défaut est 2 et la valeur maximale par défaut est 200.</exception>
      <returns>
        <see cref="T:System.Drawing.Size" /> représentant la taille de chaque carré de la grille dessinée dans un formulaire ou sur un contrôle utilisateur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary>Obtient une valeur qui indique si le concepteur possède un outil valide durant une opération glisser.</summary>
      <returns>Outil objet de l'opération glisser en cas de création d'un composant ou <see langword="null" /> si aucun outil n'est présent.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary>Obtient une liste d'objets <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> qui représentent des points d'alignement significatifs pour ce contrôle.</summary>
      <returns>Liste d'objets <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> qui représentent des points d'alignement significatifs pour ce contrôle.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary>Classe de concepteur de base pour l’extension du comportement en mode design d’un <see cref="T:System.Windows.Forms.Control" /> qui doit recevoir des messages de défilement.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>Indique si le contrôle doit gérer un clic de souris à un emplacement spécifié.</summary>
      <param name="pt">
        <see cref="T:System.Drawing.Point" /> qui indique l'emplacement où un clic de souris a été effectué, en coordonnées d'écran.</param>
      <returns>
        <see langword="true" /> si le contrôle doit gérer un clic à un emplacement spécifié ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Traite les messages Windows et passe les messages WM_HSCROLL et WM_VSCROLL au contrôle au moment du design.</summary>
      <param name="m">
        <see cref="T:System.Windows.Forms.Message" /> à traiter.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary>Définit des identifiants servant à indiquer les règles de sélection pour un composant.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary>Indique que le composant prend en charge le redimensionnement dans toutes les directions.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary>Indique que le composant prend en charge le redimensionnement à partir du bas.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary>Indique que le composant prend en charge le redimensionnement à partir de la gauche.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary>Indique que le composant est verrouillé à son conteneur. Substitue les indicateurs binaires <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" /> et <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> de cette énumération.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary>Indique que le composant prend en charge une propriété Location qui permet de le déplacer à l'écran.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary>Indique l'absence d'attributs de sélection spéciaux.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary>Indique que le composant prend en charge le redimensionnement à partir de la droite.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary>Indique que le composant prend en charge le redimensionnement à partir du haut.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary>Indique que le composant dispose d'une interface utilisateur visible autour de laquelle le service de sélection est occupé à dessiner une bordure de sélection. Si cette règle est définie pour un composant sélectionné, vous pouvez supposer que celui-ci implémente <see cref="T:System.ComponentModel.IComponent" /> et qu'il est associé à une instance de concepteur correspondante.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ShortcutKeysEditor">
      <summary>Fournit un éditeur pour choisir des touches de raccourci.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ShortcutKeysEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifie la valeur de l'objet spécifié à l'aide du style de l'éditeur fourni par la méthode <see cref="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> pouvant être utilisé par cet éditeur pour obtenir des services.</param>
      <param name="value">
        <see cref="T:System.Object" /> à modifier.</param>
      <returns>Nouvelle valeur de <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtient le style de l'éditeur utilisé par la méthode <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns>Valeur <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de l’éditeur utilisé par la méthode <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary>Une valeur qui indique si les barres de défilement d'une fenêtre et de ses enfants seront à thème une fois affichées dans le concepteur Visual Studio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary>La fenêtre et tous ses enfants auront des barres de défilement à thème.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary>La fenêtre et tous ses enfants ne seront pas à thème.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary>La fenêtre aura des barres de défilement à thème mais tous ses enfants ne seront pas à thème.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary>Représente une fenêtre et une valeur qui indique comment les barres de défilement doivent être à thème une fois affichées dans le concepteur Visual Studio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary>Handle de fenêtre.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary>Une valeur qui indique comment les barres de défilement de fenêtre doivent être à thème une fois affichées dans le concepteur Visual Studio.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary>Permet d'obtenir et de définir les valeurs des options d'un concepteur Windows Forms.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary>Remplit un <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</summary>
      <param name="options">Collection à remplir.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary>Obtient le <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> exposé par <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</summary>
      <returns>Le <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> exposé par <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</returns>
    </member>
  </members>
</doc>