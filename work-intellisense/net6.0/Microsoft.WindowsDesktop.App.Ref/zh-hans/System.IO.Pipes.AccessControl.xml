<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Pipes.AccessControl</name>
  </assembly>
  <members>
    <member name="T:System.IO.Pipes.AnonymousPipeServerStreamAcl" />
    <member name="M:System.IO.Pipes.AnonymousPipeServerStreamAcl.Create(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
      <summary>使用指定的管道方向、继承模式、缓冲区大小和管道安全性创建 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类的新实例。</summary>
      <param name="direction">确定管道方向的枚举值之一。 匿名管道是单向的，因此，方向不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</param>
      <param name="inheritability">确定基础句柄能否由子进程继承的枚举值之一。</param>
      <param name="bufferSize">缓冲区的大小。 此值必须大于等于 0。</param>
      <param name="pipeSecurity">一个对象，确定管道的访问控制和审核安全性。</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" /> 为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inheritability" /> 未设置为有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。

- 或 - 
<paramref name="bufferSize" /> 小于 0。</exception>
      <returns>新的匿名管道服务器流实例。</returns>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeServerStreamAcl" />
    <member name="M:System.IO.Pipes.NamedPipeServerStreamAcl.Create(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)">
      <summary>使用指定的管道名称、管道方向、最大数量的服务器实例、传输模式、管道选项、建议的输入输出缓冲区大小、管道安全性、继承模式和管道访问权限创建 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 类的新实例。</summary>
      <param name="pipeName">管道的名称。</param>
      <param name="direction">确定管道方向的枚举值之一。</param>
      <param name="maxNumberOfServerInstances">共享同一名称的服务器实例的最大数量。 可以为此值传递 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />。</param>
      <param name="transmissionMode">确定管道传输模式的枚举值之一。</param>
      <param name="options">确定如何打开或创建管道的枚举值之一。</param>
      <param name="inBufferSize">输入缓冲区大小。</param>
      <param name="outBufferSize">输出缓冲区大小。</param>
      <param name="pipeSecurity">一个对象，确定管道的访问控制和审核安全性。</param>
      <param name="inheritability">确定基础句柄能否由子进程继承的枚举值之一。</param>
      <param name="additionalAccessRights">枚举值之一，指定管道的访问权限。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 为空。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="options" /> 为 <see cref="F:System.IO.Pipes.PipeOptions.None" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> 包含无效标志。

- 或 -

<paramref name="inBufferSize" /> 或 <paramref name="outBufferSize" /> 小于零。

- 或 -

<paramref name="maxNumberOfServerInstances" /> 不是有效数字：应大于或等于 1 且小于或等于 254，否则应设置为 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> 的值。

- 或 -

<paramref name="inheritability" /> 包含无效的枚举值。

- 或 -

<paramref name="pipeName" /> 是保留的“匿名”。</exception>
      <returns>新的命名管道服务器流实例。</returns>
    </member>
    <member name="T:System.IO.Pipes.PipeAccessRights">
      <summary>定义要在创建访问和审核规则时使用的访问权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity">
      <summary>指定更改系统访问控制列表 (SACL) 的权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ChangePermissions">
      <summary>指定更改与管道关联的安全性和审核规则的权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.CreateNewInstance">
      <summary>指定创建新管道的权限。 设置此权限也将设置 <see cref="F:System.IO.Pipes.PipeAccessRights.Synchronize" /> 权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.Delete">
      <summary>指定删除管道的权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.FullControl">
      <summary>指定对某个管道进行完全控制并修改访问控制和审核规则的权限。 此值表示在此枚举中的所有权限的组合。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.Read">
      <summary>指定从管道读取的权限。 此权限包括 <see cref="F:System.IO.Pipes.PipeAccessRights.ReadAttributes" />、<see cref="F:System.IO.Pipes.PipeAccessRights.ReadData" />、<see cref="F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes" /> 和 <see cref="F:System.IO.Pipes.PipeAccessRights.ReadPermissions" /> 权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadAttributes">
      <summary>指定从管道读取文件系统属性的权限。 这不包括读取数据、扩展文件系统属性或访问和审核规则的权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadData">
      <summary>指定从管道读取数据的权限。 这不包括读取文件系统属性、扩展文件系统属性或访问和审核规则的权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes">
      <summary>指定从管道读取扩展文件系统属性的权限。 这不包括读取数据、文件系统属性或访问和审核规则的权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadPermissions">
      <summary>指定从管道读取访问和审核规则的权限。 这不包括读取数据、文件系统属性或扩展文件系统属性的权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadWrite">
      <summary>指定从管道进行读和写的权限。 此权限包括 <see cref="F:System.IO.Pipes.PipeAccessRights.ReadAttributes" />、<see cref="F:System.IO.Pipes.PipeAccessRights.ReadData" />、<see cref="F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes" />、<see cref="F:System.IO.Pipes.PipeAccessRights.ReadPermissions" />、<see cref="F:System.IO.Pipes.PipeAccessRights.WriteAttributes" />、<see cref="F:System.IO.Pipes.PipeAccessRights.WriteData" /> 和 <see cref="F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes" /> 权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.Synchronize">
      <summary>指定应用程序是否能够等待管道句柄，以便与 I/O 操作的完成保持同步。 允许访问管道时自动设置该值，拒绝访问管道时自动排除它。 需要此值才能创建管道。 请注意，如果在创建管道时未显式设置此值，则系统将自动为你设置它。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.TakeOwnership">
      <summary>指定更改管道的所有者的权限。 请注意：管道的所有者对该资源拥有完全访问权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.Write">
      <summary>指定写入管道的权限。 此权限包括 <see cref="F:System.IO.Pipes.PipeAccessRights.WriteAttributes" />、<see cref="F:System.IO.Pipes.PipeAccessRights.WriteData" /> 和 <see cref="F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes" /> 权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.WriteAttributes">
      <summary>指定向管道写入文件系统属性的权限。 这不包括写入数据或扩展文件系统属性的权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.WriteData">
      <summary>指定向管道写入数据的权限。 这不包括写入文件系统属性或扩展文件系统属性的权限。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes">
      <summary>指定向管道写入扩展文件系统属性的权限。 这不包括写入文件属性或数据的权限。</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeAccessRule">
      <summary>表示访问控制项 (ACE) 的抽象，该访问控制项定义了管道的访问规则。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)">
      <summary>使用指定的标识、管道访问权限和访问控制类型来初始化 <see cref="T:System.IO.Pipes.PipeAccessRule" /> 类的一个新实例。</summary>
      <param name="identity">封装对用户帐户的引用的 <see cref="T:System.Security.Principal.IdentityReference" /> 对象。</param>
      <param name="rights">
        <see cref="T:System.IO.Pipes.PipeAccessRights" /> 值之一，该值指定与访问规则关联的操作的类型。</param>
      <param name="type">
        <see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，该值指定是允许还是拒绝该操作。</param>
    </member>
    <member name="M:System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)">
      <summary>使用指定的标识、管道访问权限和访问控制类型来初始化 <see cref="T:System.IO.Pipes.PipeAccessRule" /> 类的一个新实例。</summary>
      <param name="identity">用户帐户的名称。</param>
      <param name="rights">
        <see cref="T:System.IO.Pipes.PipeAccessRights" /> 值之一，该值指定与访问规则关联的操作的类型。</param>
      <param name="type">
        <see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，该值指定是允许还是拒绝该操作。</param>
    </member>
    <member name="P:System.IO.Pipes.PipeAccessRule.PipeAccessRights">
      <summary>获取与当前 <see cref="T:System.IO.Pipes.PipeAccessRights" /> 对象关联的 <see cref="T:System.IO.Pipes.PipeAccessRule" /> 标志。</summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeAccessRights" /> 值的按位组合。</returns>
    </member>
    <member name="T:System.IO.Pipes.PipeAuditRule">
      <summary>表示访问控制项 (ACE) 的抽象，该访问控制项定义了管道的审核规则。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
      <summary>为 <see cref="T:System.IO.Pipes.PipeAuditRule" /> 对象中指定的用户帐户初始化 <see cref="T:System.Security.Principal.IdentityReference" /> 类的一个新实例。</summary>
      <param name="identity">封装对用户帐户的引用的 <see cref="T:System.Security.Principal.IdentityReference" /> 对象。</param>
      <param name="rights">
        <see cref="T:System.IO.Pipes.PipeAccessRights" /> 值之一，该值指定与访问规则关联的操作的类型。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值之一，该值指定何时执行审核。</param>
    </member>
    <member name="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
      <summary>为命名的用户帐户初始化 <see cref="T:System.IO.Pipes.PipeAuditRule" /> 类的一个新实例。</summary>
      <param name="identity">用户帐户的名称。</param>
      <param name="rights">
        <see cref="T:System.IO.Pipes.PipeAccessRights" /> 值之一，该值指定与访问规则关联的操作的类型。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值之一，该值指定何时执行审核。</param>
    </member>
    <member name="P:System.IO.Pipes.PipeAuditRule.PipeAccessRights">
      <summary>获取与当前 <see cref="T:System.IO.Pipes.PipeAccessRights" /> 对象关联的 <see cref="T:System.IO.Pipes.PipeAuditRule" /> 标志。</summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeAccessRights" /> 值的按位组合。</returns>
    </member>
    <member name="T:System.IO.Pipes.PipesAclExtensions">
      <summary>提供特定于 Windows 的静态扩展方法用来操作管道流的访问控制列表 (ACL) 安全属性。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)">
      <summary>返回管道流的安全信息。</summary>
      <param name="stream">要从中获取安全信息的现有管道流。</param>
      <returns>管道流的所有访问控制部分的安全描述符。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)">
      <summary>更改现有管道流的安全属性。</summary>
      <param name="stream">现有管道流。</param>
      <param name="pipeSecurity">应用于管道流的安全信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeSecurity" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="stream" /> 是一个已断开连接的 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 实例。</exception>
    </member>
    <member name="T:System.IO.Pipes.PipeSecurity">
      <summary>表示管道的访问控制和审核安全。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.#ctor">
      <summary>初始化 <see cref="T:System.IO.Pipes.PipeSecurity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>用指定的值初始化 <see cref="T:System.Security.AccessControl.AccessRule" /> 类的新实例。</summary>
      <param name="identityReference">应用访问规则的标识。 它必须是可以转换为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 对象的对象。</param>
      <param name="accessMask">此规则的访问掩码。 访问掩码是 32 位的匿名位集合，其含义由单个集成者定义</param>
      <param name="isInherited">如果此规则继承自父容器，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="inheritanceFlags">
        <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 值之一，指定访问规则的继承属性。</param>
      <param name="propagationFlags">
        <see cref="T:System.Security.AccessControl.PropagationFlags" /> 值之一，指定是否自动传播继承的访问规则。 如果将 <paramref name="inheritanceFlags" /> 设置为 <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />，则忽略传播标志。</param>
      <param name="type">指定有效的访问控制类型。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="type" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="accessMask" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 既不属于 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，也不属于可以转换为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型的类型（如 <see cref="T:System.Security.Principal.NTAccount" />）。</exception>
      <returns>此方法创建的 <see cref="T:System.Security.AccessControl.AccessRule" /> 对象。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)">
      <summary>将访问规则添加到与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的自定义访问控制列表 (DACL)。</summary>
      <param name="rule">要添加的访问规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
      <summary>将审核规则添加到与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的系统访问控制列表 (SACL)。</summary>
      <param name="rule">要添加的审核规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>用指定的值初始化 <see cref="T:System.Security.AccessControl.AuditRule" /> 类的新实例。</summary>
      <param name="identityReference">应用访问规则的标识。 它必须是可以转换为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 对象的对象。</param>
      <param name="accessMask">此规则的访问掩码。 访问掩码是 32 位的匿名位集合，其含义由单个集成者定义</param>
      <param name="isInherited">如果此规则是从父级容器继承，则为 <see langword="true" />；否则为 false。</param>
      <param name="inheritanceFlags">
        <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 值之一，指定访问规则的继承属性。</param>
      <param name="propagationFlags">
        <see cref="T:System.Security.AccessControl.PropagationFlags" /> 值之一，指定是否自动传播继承的访问规则。 如果将 <paramref name="inheritanceFlags" /> 设置为 <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />，则忽略传播标志。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值之一，指定有效的访问控制类型。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="flags" /> 属性指定了无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 属性为 <see langword="null" />。  
  
- 或 - 
<paramref name="accessMask" /> 属性为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 属性既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，也不是可转换为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型的类型，如 <see cref="T:System.Security.Principal.NTAccount" />。</exception>
      <returns>此方法创建的 <see cref="T:System.Security.AccessControl.AuditRule" /> 对象。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)">
      <summary>将与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的安全描述符的指定部分保存到永久性存储器。</summary>
      <param name="handle">与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的可保护对象的句柄。</param>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.Persist(System.String)">
      <summary>将与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的安全描述符的指定部分保存到永久性存储器。</summary>
      <param name="name">与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的可保护对象的名称。</param>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
      <summary>将访问规则从与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的自定义访问控制列表 (DACL) 中移除。</summary>
      <param name="rule">要移除的访问规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 参数为 <see langword="null" />。</exception>
      <returns>如果操作成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
      <summary>将指定的访问规则从与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的自定义访问控制列表 (DACL) 中移除。</summary>
      <param name="rule">要移除的访问规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
      <summary>将审核规则从与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的系统访问控制列表 (SACL) 中移除。</summary>
      <param name="rule">要移除的审核规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 参数为 <see langword="null" />。</exception>
      <returns>如果审核规则已移除，则为 <see langword="true" />；否则为 <see langword="false" /></returns>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
      <summary>将与指定的审核规则具有相同安全标识符的所有审核规则从与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的系统访问控制列表 (SACL) 中移除。</summary>
      <param name="rule">要移除的审核规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
      <summary>将指定的审核规则从与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的系统访问控制列表 (SACL) 中移除。</summary>
      <param name="rule">要移除的审核规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
      <summary>将所有访问规则从与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的自定义访问控制列表 (DACL) 中移除，然后添加指定的访问规则。</summary>
      <param name="rule">要添加的访问规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
      <summary>在与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的自定义访问控制列表 (DACL) 中设置访问规则。</summary>
      <param name="rule">要设置的规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
      <summary>在与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的系统访问控制列表 (SACL) 中设置审核规则。</summary>
      <param name="rule">要设置的规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeSecurity.AccessRightType">
      <summary>获取与当前 <see cref="T:System.Type" /> 对象关联的可保护对象的 <see cref="T:System.IO.Pipes.PipeSecurity" />。</summary>
      <returns>与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的可保护对象的类型。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeSecurity.AccessRuleType">
      <summary>获取与当前 <see cref="T:System.Type" /> 对象的访问规则关联的对象的 <see cref="T:System.IO.Pipes.PipeSecurity" />。</summary>
      <returns>与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象的访问规则关联的对象的类型。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeSecurity.AuditRuleType">
      <summary>获取与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象的审核规则关联的 <see cref="T:System.Type" /> 对象。</summary>
      <returns>与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象的审核规则关联的对象的类型。</returns>
    </member>
  </members>
</doc>