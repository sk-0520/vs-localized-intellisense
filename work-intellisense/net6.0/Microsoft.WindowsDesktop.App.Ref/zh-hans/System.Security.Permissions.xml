<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Security.Permissions</name>
  </assembly>
  <members>
    <member name="T:System.ApplicationIdentity">
      <summary vsli:raw="Provides the ability to uniquely identify a manifest-activated application. This class cannot be inherited.">提供唯一标识清单激活的应用程序的能力。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ApplicationIdentity.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ApplicationIdentity&quot; /&gt; class.">初始化 <see cref="T:System.ApplicationIdentity" /> 类的新实例。</summary>
      <param name="applicationIdentityFullName" vsli:raw="The full name of the application.">应用程序的全名。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;applicationIdentityFullName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="applicationIdentityFullName" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data needed to serialize the target object.">使用序列化目标对象所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) structure for the serialization.">序列化的 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构。</param>
    </member>
    <member name="M:System.ApplicationIdentity.ToString">
      <summary vsli:raw="Returns the full name of the manifest-activated application.">返回清单激活的应用程序的全名。</summary>
      <returns vsli:raw="The full name of the manifest-activated application.">清单激活的应用程序的全名。</returns>
    </member>
    <member name="P:System.ApplicationIdentity.CodeBase">
      <summary vsli:raw="Gets the location of the deployment manifest as a URL.">获取作为 URL 的部署清单的位置。</summary>
      <returns vsli:raw="The URL of the deployment manifest.">部署清单的 URL。</returns>
    </member>
    <member name="P:System.ApplicationIdentity.FullName">
      <summary vsli:raw="Gets the full name of the application.">获取应用程序的全名。</summary>
      <returns vsli:raw="The full name of the application, also known as the display name.">应用程序的全名，也称为显示名称。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPermission">
      <summary vsli:raw="Provides a permission structure that allows methods or classes to access configuration files.">提供允许方法或类访问配置文件的权限结构。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="The permission level to grant.">要授予的权限级别。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of &lt;paramref name=&quot;state&quot; /&gt; is neither &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt; nor &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.None&quot; /&gt;.">
        <paramref name="state" /> 的值不是 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />，也不是 <see cref="F:System.Security.Permissions.PermissionState.None" />。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Copy">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt; object with the same permission level.">返回具有相同权限级别的新的 <see cref="T:System.Configuration.ConfigurationPermission" /> 对象。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt; with the same permission level.">具有相同权限级别的新的 <see cref="T:System.Configuration.ConfigurationPermission" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reads the value of the permission state from XML.">从 XML 读取权限状态值。</summary>
      <param name="securityElement" vsli:raw="The configuration element from which the permission state is read.">从中读取权限状态的配置元素。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="securityElement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see langword=&quot;unrestricted&quot; /&gt; attribute for the given &lt;paramref name=&quot;securityElement&quot; /&gt; is neither &lt;see langword=&quot;true&quot; /&gt; nor &lt;see langword=&quot;false&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;The &lt;see cref=&quot;P:System.Security.SecurityElement.Tag&quot; /&gt; for the given &lt;paramref name=&quot;securityElement&quot; /&gt; does not equal &quot;IPermission&quot;.&#xA;&#xA;-or-&#xA;&#xA;The &lt;see langword=&quot;class&quot; /&gt; attribute of the given &lt;paramref name=&quot;securityElement &quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not the type name for &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;The &lt;see langword=&quot;version&quot; /&gt; attribute for the given &lt;paramref name=&quot;securityElement&quot; /&gt; does not equal 1.">给定 <paramref name="securityElement" /> 的 <see langword="unrestricted" /> 特性既不是 <see langword="true" />，也不是 <see langword="false" />。

- 或 -

给定 <paramref name="securityElement" /> 的 <see cref="P:System.Security.SecurityElement.Tag" /> 不等于“IPermission”。

- 或 -

给定 <paramref name="securityElement " /> 的 <see langword="class" /> 特性是 <see langword="null" /> 或不是 <see cref="T:System.Configuration.ConfigurationPermission" /> 的类型名称。

- 或 -

给定 <paramref name="securityElement" /> 的 <see langword="version" /> 特性不等于 1。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Returns the logical intersection between the &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt; object and a given object that implements the &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; interface.">返回 <see cref="T:System.Configuration.ConfigurationPermission" /> 对象与实现 <see cref="T:System.Security.IPermission" /> 接口的给定对象的逻辑交集。</summary>
      <param name="target" vsli:raw="The object containing the permissions to perform the intersection with.">包含用于执行交集的权限的对象。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not typed as &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt;.">
        <paramref name="target" /> 的类型不是 <see cref="T:System.Configuration.ConfigurationPermission" />。</exception>
      <returns vsli:raw="The logical intersection between the &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt; and a given object that implements &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationPermission" /> 与实现 <see cref="T:System.Security.IPermission" /> 的给定对象的逻辑交集。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Compares the &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt; object with an object implementing the &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; interface.">将 <see cref="T:System.Configuration.ConfigurationPermission" /> 对象与实现 <see cref="T:System.Security.IPermission" /> 接口的对象进行比较。</summary>
      <param name="target" vsli:raw="The object to compare to.">要比较的对象。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not typed as &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt;.">
        <paramref name="target" /> 的类型不是 <see cref="T:System.Configuration.ConfigurationPermission" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the permission state is equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果权限状态相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsUnrestricted">
      <summary vsli:raw="Indicates whether the permission state for the &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt; object is the &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt; value of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; enumeration.">指示 <see cref="T:System.Configuration.ConfigurationPermission" /> 对象的权限状态是否为 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 枚举的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the permission state for the &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt; is the &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt; value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.ConfigurationPermission" /> 的权限状态是 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 的 <see cref="T:System.Security.Permissions.PermissionState" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.ToXml">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; object with attribute values based on the current &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt; object.">返回一个 <see cref="T:System.Security.SecurityElement" /> 对象，其特性值取决于当前 <see cref="T:System.Configuration.ConfigurationPermission" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; with attribute values based on the current &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt;.">
        <see cref="T:System.Security.SecurityElement" />，其特性值取决于当前 <see cref="T:System.Configuration.ConfigurationPermission" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Returns the logical union of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt; object and an object that implements the &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; interface.">返回 <see cref="T:System.Configuration.ConfigurationPermission" /> 对象与实现 <see cref="T:System.Security.IPermission" /> 接口的对象的逻辑并集。</summary>
      <param name="target" vsli:raw="The object to perform the union with.">用于执行该并集的对象。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not typed as &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt;.">
        <paramref name="target" /> 的类型不是 <see cref="T:System.Configuration.ConfigurationPermission" />。</exception>
      <returns vsli:raw="The logical union of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt; and an object that implements &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationPermission" /> 与实现 <see cref="T:System.Security.IPermission" /> 的对象的逻辑并集。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPermissionAttribute">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Configuration.ConfigurationPermission&quot; /&gt; object that either grants or denies the marked target permission to access sections of configuration files.">创建一个 <see cref="T:System.Configuration.ConfigurationPermission" /> 对象，该对象授予或拒绝访问配置文件节的标记了的目标权限。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPermissionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="The security action represented by an enumeration member of &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;. Determines the permission state of the attribute.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 的枚举成员表示的安全操作。 确定特性的权限状态。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns an object that implements the &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; interface.">创建和返回实现 <see cref="T:System.Security.IPermission" /> 接口的对象。</summary>
      <returns vsli:raw="An object that implements &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt;.">一个实现 <see cref="T:System.Security.IPermission" /> 的对象。</returns>
    </member>
    <member name="T:System.Data.Common.DBDataPermission">
      <summary vsli:raw="Enables a .NET data provider to help ensure that a user has a security level adequate for accessing data.">启用一个 .NET Framework 数据提供程序，以帮助确保用户具有足够的安全级别来访问数据。</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DBDataPermission&quot; /&gt; class.">初始化 <see langword="DBDataPermission" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DBDataPermission&quot; /&gt; class using an existing &lt;see langword=&quot;DBDataPermission&quot; /&gt;.">使用现有的 <see langword="DBDataPermission" /> 初始化 <see langword="DBDataPermission" /> 类的新实例。</summary>
      <param name="permission" vsli:raw="An existing &lt;see langword=&quot;DBDataPermission&quot; /&gt; used to create a new &lt;see langword=&quot;DBDataPermission&quot; /&gt;.">用于创建新 <see langword="DBDataPermission" /> 的现有 <see langword="DBDataPermission" />。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DBDataPermission&quot; /&gt; class with the specified &lt;see langword=&quot;DBDataPermissionAttribute&quot; /&gt;.">用指定的 <see langword="DBDataPermission" /> 初始化 <see langword="DBDataPermissionAttribute" /> 类的新实例。</summary>
      <param name="permissionAttribute" vsli:raw="A security action associated with a custom security attribute.">与自定义安全特性相关的安全操作。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DBDataPermission&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; value.">使用指定的 <see cref="T:System.Security.Permissions.PermissionState" /> 值初始化 <see langword="DBDataPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DBDataPermission&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; value, and a value indicating whether a blank password is allowed.">用指定的 <see cref="T:System.Security.Permissions.PermissionState" /> 值和指示是否允许空白密码的值初始化 <see langword="DBDataPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <param name="allowBlankPassword" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a blank password is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示允许使用空白密码；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary vsli:raw="Adds access for the specified connection string to the existing state of the &lt;see langword=&quot;DBDataPermission&quot; /&gt;.">将指定连接字符串的访问权限添加到 <see langword="DBDataPermission" /> 的现有状态。</summary>
      <param name="connectionString" vsli:raw="A permitted connection string.">允许的连接字符串。</param>
      <param name="restrictions" vsli:raw="String that identifies connection string parameters that are allowed or disallowed.">标识允许使用或禁用的连接字符串参数的字符串。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.KeyRestrictionBehavior&quot; /&gt; properties.">
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 属性之一。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Clear">
      <summary vsli:raw="Removes all permissions that were previously added using the &lt;see cref=&quot;M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)&quot; /&gt; method.">移除以前使用 <see cref="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" /> 方法添加的所有权限。</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission object.">创建并返回与当前权限对象相同的副本。</summary>
      <returns vsli:raw="A copy of the current permission object.">当前权限对象的副本。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.CreateInstance">
      <summary vsli:raw="Creates a new instance of the &lt;see langword=&quot;DBDataPermission&quot; /&gt; class.">创建 <see langword="DBDataPermission" /> 类的新实例。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;DBDataPermission&quot; /&gt; object.">一个新 <see langword="DBDataPermission" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="securityElement" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Returns a new permission object representing the intersection of the current permission object and the specified permission object.">返回表示当前权限对象和指定权限对象的交集的新权限对象。</summary>
      <param name="target" vsli:raw="A permission object to intersect with the current permission object. It must be of the same type as the current permission object.">与当前的权限对象相交的权限对象。 它必须与当前权限对象的类型相同。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) and is not an instance of the same class as the current permission object.">
        <paramref name="target" /> 参数不是 null 引用（在 Visual Basic 中为 <see langword="Nothing" />），并且不是与当前权限对象相同的类的实例。</exception>
      <returns vsli:raw="A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if the intersection is empty.">表示当前权限对象和指定权限对象的交集的新权限对象。 如果交集为空，则此新权限对象是一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Returns a value indicating whether the current permission object is a subset of the specified permission object.">返回一个值，该值指示当前的权限对象是否为指定权限对象的一个子集。</summary>
      <param name="target" vsli:raw="A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.">将用于测试子集关系的权限对象。 该对象必须与当前权限对象的类型相同。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is an object that is not of the same type as the current permission object.">
        <paramref name="target" /> 参数是一个与当前权限对象的类型不同的对象。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission object is a subset of the specified permission object, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限对象是指定权限对象的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.">返回一个值，该值指示在不了解权限语义的情况下是否可以将权限表示为无限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the permission can be represented as unrestricted.">如果可以将权限表示为无限制，则为 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Returns a new permission object that is the union of the current and specified permission objects.">返回一个新的权限对象，它是当前权限对象和指定权限对象的并集。</summary>
      <param name="target" vsli:raw="A permission object to combine with the current permission object. It must be of the same type as the current permission object.">要与当前的权限对象合并的权限对象。 它必须与当前权限对象的类型相同。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; object is not the same type as the current permission object.">
        <paramref name="target" /> 对象与当前权限对象不属于同一类型。</exception>
      <returns vsli:raw="A new permission object that represents the union of the current permission object and the specified permission object.">新权限对象，它表示当前权限对象和指定权限对象的并集。</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermission.AllowBlankPassword">
      <summary vsli:raw="Gets a value indicating whether a blank password is allowed.">获取一个值，该值指示是否允许使用空白密码。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a blank password is allowed, otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许使用空白密码，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.Common.DBDataPermissionAttribute">
      <summary vsli:raw="Associates a security action with a custom security attribute.">将某安全操作与自定义安全特性相关联。</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DBDataPermissionAttribute&quot; /&gt;.">初始化 <see cref="T:System.Data.Common.DBDataPermissionAttribute" /> 的新实例。</summary>
      <param name="action" vsli:raw="One of the security action values representing an action that can be performed by declarative security.">安全操作值之一，它表示可以由声明性安全执行的操作。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString">
      <summary vsli:raw="Identifies whether the attribute should serialize the connection string.">标识特性是否应序列化连接字符串。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute should serialize the connection string; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果特性应序列化连接字符串，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary vsli:raw="Identifies whether the attribute should serialize the set of key restrictions.">标识特性是否应序列化键限制集合。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute should serialize the set of key restrictions; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果特性应序列化键限制集合，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword">
      <summary vsli:raw="Gets or sets a value indicating whether a blank password is allowed.">获取或设置一个值，该值指示是否允许使用空白密码。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a blank password is allowed; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果允许使用空白密码，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.ConnectionString">
      <summary vsli:raw="Gets or sets a permitted connection string.">获取或设置允许的连接字符串。</summary>
      <returns vsli:raw="A permitted connection string.">允许的连接字符串。</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior">
      <summary vsli:raw="Identifies whether the list of connection string parameters identified by the &lt;see cref=&quot;P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions&quot; /&gt; property are the only connection string parameters allowed.">标识由 <see cref="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions" /> 属性标识的连接字符串参数列表是否为所唯一允许的连接字符串参数。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.KeyRestrictionBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 值之一。</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions">
      <summary vsli:raw="Gets or sets connection string parameters that are allowed or disallowed.">获取或设置允许或不允许的连接字符串参数。</summary>
      <returns vsli:raw="One or more connection string parameters that are allowed or disallowed.">允许或不允许的一个和多个连接字符串参数。</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermission">
      <summary vsli:raw="Enables the .NET Framework Data Provider for ODBC to help make sure that a user has a security level sufficient to access an ODBC data source. This class cannot be inherited.">启用用于 ODBC 的 .NET Framework 数据提供程序，以帮助确保用户具有足够的安全级别来访问 ODBC 数据源。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Odbc.OdbcPermission&quot; /&gt; class.">初始化 <see cref="T:System.Data.Odbc.OdbcPermission" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Odbc.OdbcPermission&quot; /&gt; class with one of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">使用其中一个 <see cref="T:System.Security.Permissions.PermissionState" /> 值初始化 <see cref="T:System.Data.Odbc.OdbcPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Odbc.OdbcPermission&quot; /&gt; class.">初始化 <see cref="T:System.Data.Odbc.OdbcPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see langword=&quot;System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see langword="System.Security.Permissions.PermissionState" /> 值之一。</param>
      <param name="allowBlankPassword" vsli:raw="Indicates whether a blank password is allowed.">指示是否允许空白密码。</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary vsli:raw="Adds access for the specified connection string to the existing state of the permission.">将指定连接字符串的访问权限添加到现有权限状态。</summary>
      <param name="connectionString" vsli:raw="A permitted connection string.">允许的连接字符串。</param>
      <param name="restrictions" vsli:raw="String that identifies connection string parameters that are allowed or disallowed.">标识允许使用或禁用的连接字符串参数的字符串。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.KeyRestrictionBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 值之一。</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Copy">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.Odbc.OdbcPermission&quot; /&gt; as an &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt;.">以 <see cref="T:System.Data.Odbc.OdbcPermission" /> 形式返回 <see cref="T:System.Security.IPermission" />。</summary>
      <returns vsli:raw="A copy of the current permission object.">当前权限对象的副本。</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermissionAttribute">
      <summary vsli:raw="Associates a security action with a custom security attribute.">将某安全操作与自定义安全特性相关联。</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Odbc.OdbcPermissionAttribute&quot; /&gt; class with one of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">使用其中一个 <see cref="T:System.Security.Permissions.SecurityAction" /> 值初始化 <see cref="T:System.Data.Odbc.OdbcPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values representing an action that can be performed by using declarative security.">一个 <see cref="T:System.Security.Permissions.SecurityAction" /> 值，其表示可使用声明性安全执行的操作。</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.CreatePermission">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Data.Odbc.OdbcPermission&quot; /&gt; object that is configured according to the attribute properties.">返回一个根据特性属性配置的 <see cref="T:System.Data.Odbc.OdbcPermission" /> 对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.Odbc.OdbcPermission&quot; /&gt; object.">一个 <see cref="T:System.Data.Odbc.OdbcPermission" /> 对象。</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermission">
      <summary vsli:raw="Enables the .NET Framework Data Provider for OLE DB to help make sure that a user has a security level sufficient to access an OLE DB data source.">启用用于 OLE DB 的 .NET Framework 数据提供程序，以帮助确保用户具有足够的安全级别来访问 OLE DB 数据源。</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.OleDb.OleDbPermission&quot; /&gt; class.">初始化 <see cref="T:System.Data.OleDb.OleDbPermission" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.OleDb.OleDbPermission&quot; /&gt; class.">初始化 <see cref="T:System.Data.OleDb.OleDbPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.OleDb.OleDbPermission&quot; /&gt; class.">初始化 <see cref="T:System.Data.OleDb.OleDbPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <param name="allowBlankPassword" vsli:raw="Indicates whether a blank password is allowed.">指示是否允许空白密码。</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.Copy">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.OleDb.OleDbPermission&quot; /&gt; as an &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt;.">以 <see cref="T:System.Data.OleDb.OleDbPermission" /> 形式返回 <see cref="T:System.Security.IPermission" />。</summary>
      <returns vsli:raw="A copy of the current permission object.">当前权限对象的副本。</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermission.Provider">
      <summary vsli:raw="This property has been marked as obsolete. Setting this property will have no effect.">此属性已被标记为过时。 设置此属性将不会产生任何作用。</summary>
      <returns vsli:raw="This property has been marked as obsolete. Setting this property will have no effect.">此属性已被标记为过时。 设置此属性将不会产生任何作用。</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermissionAttribute">
      <summary vsli:raw="Associates a security action with a custom security attribute.">将某安全操作与自定义安全特性相关联。</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.OleDb.OleDbPermissionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Data.OleDb.OleDbPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values representing an action that can be performed by using declarative security.">一个 <see cref="T:System.Security.Permissions.SecurityAction" /> 值，其表示可使用声明性安全执行的操作。</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.CreatePermission">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Data.OleDb.OleDbPermission&quot; /&gt; object that is configured according to the attribute properties.">返回一个根据特性属性配置的 <see cref="T:System.Data.OleDb.OleDbPermission" /> 对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OleDb.OleDbPermission&quot; /&gt; object.">一个 <see cref="T:System.Data.OleDb.OleDbPermission" /> 对象。</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermissionAttribute.Provider">
      <summary vsli:raw="Gets or sets a comma-delimited string that contains a list of supported providers.">获取或设置包含受支持的提供程序的列表的逗号分隔字符串。</summary>
      <returns vsli:raw="A comma-delimited list of providers allowed by the security policy.">该安全策略所允许的提供程序的逗号分隔列表。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermission">
      <summary vsli:raw="Enables the .NET Framework Data Provider for Oracle to help ensure that a user has a security level adequate to access an Oracle database.">启用用于 Oracle 的 .NET Framework 数据提供程序，以帮助确保用户具有足够的安全级别来访问 Oracle 数据库。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.OracleClient.OraclePermission&quot; /&gt; class with one of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">使用其中一个 <see cref="T:System.Security.Permissions.PermissionState" /> 值初始化 <see cref="T:System.Data.OracleClient.OraclePermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary vsli:raw="Creates a new set of permissions.">创建一组新的权限。</summary>
      <param name="connectionString" vsli:raw="The connection string.">连接字符串。</param>
      <param name="restrictions" vsli:raw="The key restrictions.">关键限制。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.KeyRestrictionBehavior&quot; /&gt; enumerations.">
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 枚举之一。</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Copy">
      <summary vsli:raw="When implemented by a derived class, creates and returns an identical copy of the current permission object.">由派生类实现时，创建并返回当前权限对象的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission object.">当前权限对象的副本。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.">当在派生类中替代时，用 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="securityElement" vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; expression.">
        <see cref="T:System.Security.SecurityElement" /> 表达式。</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.">通过派生类实现时，创建和返回是当前权限和指定权限的交集的权限。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="When implemented by a derived class, determines whether the current permission is a subset of the specified permission.">通过派生类实现时，确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.">返回一个值，该值指示在不了解权限语义的情况下是否可以将权限表示为无限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the permission can be represented as unrestricted.">如果可以将权限表示为无限制，则为 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermission.AllowBlankPassword">
      <summary vsli:raw="Gets a value indicating whether a blank password is allowed.">获取一个值，该值指示是否允许使用空白密码。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a blank password is allowed, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果允许使用空白密码，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermissionAttribute">
      <summary vsli:raw="Associates a security action with a custom security attribute.">将某安全操作与自定义安全特性相关联。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.OracleClient.OraclePermissionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Data.OracleClient.OraclePermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values representing an action that can be performed using declarative security.">一个表示可以使用声明性安全执行的操作的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.CreatePermission">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Data.OracleClient.OraclePermission&quot; /&gt; object that is configured according to the attribute properties.">返回一个根据特性属性配置的 <see cref="T:System.Data.OracleClient.OraclePermission" /> 对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OracleClient.OraclePermission&quot; /&gt; object.">一个 <see cref="T:System.Data.OracleClient.OraclePermission" /> 对象。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeConnectionString">
      <summary vsli:raw="Identifies whether the attribute should serialize the connection string.">标识特性是否应序列化连接字符串。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute should serialize the connection string; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果特性应序列化连接字符串，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary vsli:raw="Identifies whether the attribute should serialize the set of key restrictions.">标识特性是否应序列化键限制集合。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute should serialize the set of key restrictions, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果特性应序列化键限制集合，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.AllowBlankPassword">
      <summary vsli:raw="Gets or sets a value indicating whether a blank password is allowed.">获取或设置一个值，该值指示是否允许使用空白密码。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a blank password is allowed, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果允许使用空白密码，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.ConnectionString">
      <summary vsli:raw="Gets or sets a permitted connection string.">获取或设置允许的连接字符串。</summary>
      <returns vsli:raw="A permitted connection string.">允许的连接字符串。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior">
      <summary vsli:raw="Identifies whether the list of connection string parameters identified by the &lt;see cref=&quot;P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions&quot; /&gt; property are the only connection string parameters allowed.">标识由 <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions" /> 属性标识的连接字符串参数列表是否为所唯一允许的连接字符串参数。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior&quot; /&gt; values.">
        <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior" /> 值之一。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions">
      <summary vsli:raw="Gets or sets connection string parameters that are allowed or disallowed.">获取或设置允许或不允许的连接字符串参数。</summary>
      <returns vsli:raw="One or more connection string parameters that are allowed or disallowed.">允许或不允许的一个和多个连接字符串参数。</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermission">
      <summary vsli:raw="Enables the .NET Framework Data Provider for SQL Server to help make sure that a user has a security level sufficient to access a data source.">启用用于 SQL Server 的 .NET Framework 数据提供程序，帮助确保用户具有足够的安全级别来访问数据源。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlClient.SqlClientPermission&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlClient.SqlClientPermission&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlClient.SqlClientPermission&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <param name="allowBlankPassword" vsli:raw="Indicates whether a blank password is allowed.">指示是否允许空白密码。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary vsli:raw="Adds a new connection string and a set of restricted keywords to the &lt;see cref=&quot;T:System.Data.SqlClient.SqlClientPermission&quot; /&gt; object.">向 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 对象添加新的连接字符串和一组限制性关键字。</summary>
      <param name="connectionString" vsli:raw="The connection string.">连接字符串。</param>
      <param name="restrictions" vsli:raw="The key restrictions.">关键限制。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.KeyRestrictionBehavior&quot; /&gt; enumerations.">
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 枚举之一。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Copy">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.SqlClient.SqlClientPermission&quot; /&gt; as an &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt;.">以 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 形式返回 <see cref="T:System.Security.IPermission" />。</summary>
      <returns vsli:raw="A copy of the current permission object.">当前权限对象的副本。</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermissionAttribute">
      <summary vsli:raw="Associates a security action with a custom security attribute.">将某安全操作与自定义安全特性相关联。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlClient.SqlClientPermissionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlClient.SqlClientPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values representing an action that can be performed by using declarative security.">一个 <see cref="T:System.Security.Permissions.SecurityAction" /> 值，其表示可使用声明性安全执行的操作。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.CreatePermission">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.SqlClient.SqlClientPermission&quot; /&gt; object that is configured according to the attribute properties.">返回一个 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 对象，该对象是根据特性属性配置的。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlClient.SqlClientPermission&quot; /&gt; object.">
        <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 对象。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermission">
      <summary vsli:raw="Controls code access permissions for event logging.">控制事件日志的代码访问权限。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLogPermission&quot; /&gt; class.">初始化 <see cref="T:System.Diagnostics.EventLogPermission" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLogPermission&quot; /&gt; class with the specified access levels and the name of the computer to use.">用指定的访问级别和要使用的计算机的名称，初始化 <see cref="T:System.Diagnostics.EventLogPermission" /> 类的新实例。</summary>
      <param name="permissionAccess" vsli:raw="One of the enumeration values that specifies an access level.">用于指定访问级别的枚举值之一。</param>
      <param name="machineName" vsli:raw="The name of the computer on which to read or write events.">在其上读取或写入事件的计算机的名称。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLogPermission&quot; /&gt; class with the specified permission entries.">用指定的权限项初始化 <see cref="T:System.Diagnostics.EventLogPermission" /> 类的新实例。</summary>
      <param name="permissionAccessEntries" vsli:raw="An array of  objects that represent permission entries. The &lt;see cref=&quot;P:System.Diagnostics.EventLogPermission.PermissionEntries&quot; /&gt; property is set to this value.">表示权限项对象的数组。 <see cref="P:System.Diagnostics.EventLogPermission.PermissionEntries" /> 属性被设置为该值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;permissionAccessEntries&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="permissionAccessEntries" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLogPermission&quot; /&gt; class with the specified permission state.">初始化具有指定权限状态的 <see cref="T:System.Diagnostics.EventLogPermission" /> 类的一个新实例。</summary>
      <param name="state" vsli:raw="One of the enumeration values that specifies the permission state (full access or no access to resources).">枚举值之一，指定权限状态（对资源完全访问或无权访问）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermission.PermissionEntries">
      <summary vsli:raw="Gets the collection of permission entries for this permissions request.">获取此权限请求的权限项集合。</summary>
      <returns vsli:raw="A collection that contains the permission entries for this permissions request.">一个集合，它包含此权限请求的权限项。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionAccess">
      <summary vsli:raw="Defines access levels used by &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; permission classes.">定义 <see cref="T:System.Diagnostics.EventLog" /> 权限类使用的访问级别。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Administer">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; can create an event source, read existing logs, delete event sources or logs, respond to entries, clear an event log, listen to events, and access a collection of all event logs.">
        <see cref="T:System.Diagnostics.EventLog" /> 可以创建事件源、读取现有的日志、删除事件源或日志、对项作出响应、清除事件日志、侦听事件和访问所有事件日志的集合。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Audit">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; can read existing logs, delete event sources or logs, respond to entries, clear an event log, listen to events, and access a collection of all event logs. &lt;see langword=&quot;Note&quot; /&gt; This member is now obsolete, use &lt;see cref=&quot;F:System.Diagnostics.EventLogPermissionAccess.Administer&quot; /&gt; instead.">
        <see cref="T:System.Diagnostics.EventLog" /> 可以读取现有的日志、删除事件源或日志、对项作出响应、清除事件日志、侦听事件和访问所有事件日志的集合。 <see langword="Note" />此成员现在已过时，请使用 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /> 代替。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Browse">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; can read existing logs. &lt;see langword=&quot;Note&quot; /&gt; This member is now obsolete, use &lt;see cref=&quot;F:System.Diagnostics.EventLogPermissionAccess.Administer&quot; /&gt; instead.">
        <see cref="T:System.Diagnostics.EventLog" /> 可以读取现有的日志。 <see langword="Note" />此成员现在已过时，请使用 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /> 代替。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Instrument">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; can read or write to existing logs, and create event sources and logs. &lt;see langword=&quot;Note&quot; /&gt; This member is now obsolete, use &lt;see cref=&quot;F:System.Diagnostics.EventLogPermissionAccess.Write&quot; /&gt; instead.">
        <see cref="T:System.Diagnostics.EventLog" /> 可以读取或写入到现有的日志，还可以创建事件源和日志。 <see langword="Note" />此成员现在已过时，请使用 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /> 代替。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.None">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has no permissions.">
        <see cref="T:System.Diagnostics.EventLog" /> 没有权限。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Write">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; can write to existing logs, and create event sources and logs.">
        <see cref="T:System.Diagnostics.EventLog" /> 可以写入到现有的日志，还可以创建事件源和日志。</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionAttribute">
      <summary vsli:raw="Allows declarative permission checks for event logging.">允许对事件日志进行声明性权限检查。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Diagnostics.EventLogPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates the permission based on the &lt;see cref=&quot;P:System.Diagnostics.EventLogPermissionAttribute.MachineName&quot; /&gt; property and the requested access levels that are set through the &lt;see cref=&quot;P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess&quot; /&gt; property on the attribute.">基于 <see cref="P:System.Diagnostics.EventLogPermissionAttribute.MachineName" /> 属性和请求的访问级别（通过特性上的 <see cref="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess" /> 属性设置）创建权限。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; that represents the created permission.">一个 <see cref="T:System.Security.IPermission" />，它表示创建的权限。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionAttribute.MachineName">
      <summary vsli:raw="Gets or sets the name of the computer on which events might be read.">获取或设置在其上可以读取事件的计算机的名称。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The computer name is invalid.">计算机名称无效。</exception>
      <returns vsli:raw="The name of the computer on which events might be read. The default is &quot;.&quot;.">在其上可以读取事件的计算机的名称。 默认值是“.”。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess">
      <summary vsli:raw="Gets or sets the access levels used in the permissions request.">获取或设置权限请求中使用的访问级别。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionAccess&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Diagnostics.EventLogPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> 值的按位组合。 默认值为 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionEntry">
      <summary vsli:raw="Defines the smallest unit of a code access security permission that is set for an &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt;.">定义为 <see cref="T:System.Diagnostics.EventLog" /> 设置的代码访问安全性权限的最小单位。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntry.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionEntry&quot; /&gt; class.">初始化 <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 类的新实例。</summary>
      <param name="permissionAccess" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionAccess&quot; /&gt; values. The &lt;see cref=&quot;P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess&quot; /&gt; property is set to this value.">
        <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> 值的按位组合。 <see cref="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess" /> 属性被设置为该值。</param>
      <param name="machineName" vsli:raw="The name of the computer on which to read or write events. The &lt;see cref=&quot;P:System.Diagnostics.EventLogPermissionEntry.MachineName&quot; /&gt; property is set to this value.">在其上读取或写入事件的计算机的名称。 <see cref="P:System.Diagnostics.EventLogPermissionEntry.MachineName" /> 属性被设置为该值。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The computer name is invalid.">计算机名称无效。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntry.MachineName">
      <summary vsli:raw="Gets the name of the computer on which to read or write events.">获取在其上读取或写入事件的计算机的名称。</summary>
      <returns vsli:raw="The name of the computer on which to read or write events.">在其上读取或写入事件的计算机的名称。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess">
      <summary vsli:raw="Gets the permission access levels used in the permissions request.">获取在权限请求中使用的权限访问级别。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> 值的按位组合。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionEntryCollection">
      <summary vsli:raw="Contains a strongly typed collection of &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionEntry&quot; /&gt; objects.">包含 <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 对象的强类型集合。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)">
      <summary vsli:raw="Adds a specified &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionEntry&quot; /&gt; to this collection.">向此集合添加指定的 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionEntry&quot; /&gt; to add.">要添加的 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />。</param>
      <returns vsli:raw="The zero-based index of the added &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionEntry&quot; /&gt;.">所添加的 <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 的从零开始的索引。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])">
      <summary vsli:raw="Appends a set of specified permission entries to this collection.">向此集合中追加一组指定的权限项。</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionEntry&quot; /&gt; objects that contains the permission entries to add.">
        <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 类型对象的数组，它包含要添加的权限项。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)">
      <summary vsli:raw="Appends a set of specified permission entries to this collection.">向此集合中追加一组指定的权限项。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionEntryCollection&quot; /&gt; that contains the permission entries to add.">一个 <see cref="T:System.Diagnostics.EventLogPermissionEntryCollection" />，它包含要添加的权限项。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)">
      <summary vsli:raw="Determines whether this collection contains a specified &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionEntry&quot; /&gt;.">确定该集合是否包含指定的 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionEntry&quot; /&gt; to find.">要查找的 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionEntry&quot; /&gt; belongs to this collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 属于该集合，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)">
      <summary vsli:raw="Copies the permission entries from this collection to an array, starting at a particular index of the array.">将权限项从此集合复制到数组中（从数组中特定的索引开始复制）。</summary>
      <param name="array" vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionEntry&quot; /&gt; that receives this collection's permission entries.">接收该集合权限项的 <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 类型的数组。</param>
      <param name="index" vsli:raw="The zero-based index at which to begin copying the permission entries.">从零开始的索引，将从此索引位置开始复制权限项。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)">
      <summary vsli:raw="Determines the index of a specified permission entry in this collection.">确定指定权限项在此集合中的索引。</summary>
      <param name="value" vsli:raw="The permission entry to search for.">要搜索的权限项。</param>
      <returns vsli:raw="The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.">指定权限项的从零开始的索引；或者，如果集合中未找到该权限项，则为 -1。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)">
      <summary vsli:raw="Inserts a permission entry into this collection at a specified index.">将权限项插入此集合中指定的索引位置。</summary>
      <param name="index" vsli:raw="The zero-based index of the collection at which to insert the permission entry.">集合的从零开始的索引，将在此索引位置插入权限项。</param>
      <param name="value" vsli:raw="The permission entry to insert into this collection.">将插入此集合中的权限项。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnClear">
      <summary vsli:raw="Performs additional custom processes after clearing the contents of the collection.">在清除此集合内容之后执行其他自定义进程。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before a new permission entry is inserted into the collection.">在将一个新的权限项插入此集合之前执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">从零开始的索引，在该处插入 <paramref name="value" />。</param>
      <param name="value" vsli:raw="The new value of the permission entry at &lt;paramref name=&quot;index&quot; /&gt;.">在 <paramref name="index" /> 处的权限项的新值。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing a new permission entry from the collection.">当从此集合中移除一个新的权限项时执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">从零开始的索引，可在该位置找到 <paramref name="value" />。</param>
      <param name="value" vsli:raw="The permission entry to remove from &lt;paramref name=&quot;index&quot; /&gt;.">要从 <paramref name="index" /> 处移除的权限项。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the collection.">当在此集合中设置值之前执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">从零开始的索引，可在该位置找到 <paramref name="oldValue" />。</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">要用 <paramref name="newValue" /> 替换的值。</param>
      <param name="newValue" vsli:raw="The new value of the permission entry at &lt;paramref name=&quot;index&quot; /&gt;.">在 <paramref name="index" /> 处的权限项的新值。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)">
      <summary vsli:raw="Removes a specified permission entry from this collection.">从此集合中移除指定的权限项。</summary>
      <param name="value" vsli:raw="The permission entry to remove.">要移除的权限项。</param>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the object at a specified index.">获取或设置指定索引位置的对象。</summary>
      <param name="index" vsli:raw="The zero-based index into the collection.">集合中从零开始的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.EventLogPermissionEntry&quot; /&gt; that exists at the specified index.">位于指定索引位置的 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermission">
      <summary vsli:raw="Allows control of code access permissions for &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt;.">允许控制 <see cref="T:System.Diagnostics.PerformanceCounter" /> 的代码访问权限。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermission&quot; /&gt; class.">初始化 <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermission&quot; /&gt; class with the specified access levels, the name of the computer to use, and the category associated with the performance counter.">使用指定的访问级别、要使用的计算机的名称以及与性能计数器关联的类别来初始化 <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> 类的新实例。</summary>
      <param name="permissionAccess" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 值之一。</param>
      <param name="machineName" vsli:raw="The server on which the performance counter and its associate category reside.">性能计数器及其关联类别所驻留的服务器。</param>
      <param name="categoryName" vsli:raw="The name of the performance counter category (performance object) with which the performance counter is associated.">此性能计数器关联的性能计数器类别（性能对象）的名称。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermission&quot; /&gt; class with the specified permission access level entries.">使用指定的权限访问级别项初始化 <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> 类的新实例。</summary>
      <param name="permissionAccessEntries" vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionEntry&quot; /&gt; objects. The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries&quot; /&gt; property is set to this value.">一个 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 对象数组。 <see cref="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries" /> 属性被设置为该值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;permissionAccessEntries&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="permissionAccessEntries" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermission&quot; /&gt; class with the specified permission state.">初始化具有指定权限状态的 <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> 类的一个新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries">
      <summary vsli:raw="Gets the collection of permission entries for this permissions request.">获取此权限请求的权限项集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionEntryCollection&quot; /&gt; that contains the permission entries for this permissions request.">一个 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" />，它包含此权限请求的权限项。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionAccess">
      <summary vsli:raw="Defines access levels used by &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; permission classes.">定义 <see cref="T:System.Diagnostics.PerformanceCounter" /> 权限类使用的访问级别。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; can read, write, and create categories.">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 可以读取、写入和创建类别。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Browse">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; can read categories.">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 可以读取类别。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Instrument">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; can read and write categories.">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 可以读取和写入类别。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.None">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; has no permissions.">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 没有权限。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; can read categories.">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 可以读取类别。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; can write categories.">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 可以写入类别。</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionAttribute">
      <summary vsli:raw="Allows declarative performance counter permission checks.">允许声明性性能计数器权限检查。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Diagnostics.PerformanceCounterPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates the permission based on the requested access levels that are set through the &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess&quot; /&gt; property on the attribute.">根据请求的访问级别创建权限，这些访问级别是通过特性上的 <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess" /> 属性设置的。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; that represents the created permission.">一个 <see cref="T:System.Security.IPermission" />，它表示创建的权限。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.CategoryName">
      <summary vsli:raw="Gets or sets the name of the performance counter category.">获取或设置性能计数器类别的名称。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value is &lt;see langword=&quot;null&quot; /&gt;.">该值为 <see langword="null" />。</exception>
      <returns vsli:raw="The name of the performance counter category (performance object).">性能计数器类别（性能对象）的名称。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName">
      <summary vsli:raw="Gets or sets the computer name for the performance counter.">获取或设置性能计数器的计算机名称。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName&quot; /&gt; format is invalid.">
        <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName" /> 格式无效。</exception>
      <returns vsli:raw="The server on which the category of the performance counter resides.">性能计数器类别驻留的服务器。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess">
      <summary vsli:raw="Gets or sets the access levels used in the permissions request.">获取或设置权限请求中使用的访问级别。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionAccess&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Diagnostics.EventLogPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 值的按位组合。 默认值为 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionEntry">
      <summary vsli:raw="Defines the smallest unit of a code access security permission that is set for a &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt;.">定义为 <see cref="T:System.Diagnostics.PerformanceCounter" /> 设置的代码访问安全性权限的最小单位。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntry.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionEntry&quot; /&gt; class.">初始化 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 类的新实例。</summary>
      <param name="permissionAccess" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionAccess&quot; /&gt; values. The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess&quot; /&gt; property is set to this value.">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 值的按位组合。 <see cref="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess" /> 属性被设置为该值。</param>
      <param name="machineName" vsli:raw="The server on which the category of the performance counter resides.">性能计数器类别驻留的服务器。</param>
      <param name="categoryName" vsli:raw="The name of the performance counter category (performance object) with which this performance counter is associated.">此性能计数器关联的性能计数器类别（性能对象）的名称。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;categoryName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;machineName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="machineName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;permissionAccess&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionAccess&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;machineName&quot; /&gt; is not a valid computer name.">
        <paramref name="permissionAccess" /> 不是有效的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 值。  
  
- 或 - 
 <paramref name="machineName" /> 不是有效的计算机名称。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.CategoryName">
      <summary vsli:raw="Gets the name of the performance counter category (performance object).">获取性能计数器类别（性能对象）的名称。</summary>
      <returns vsli:raw="The name of the performance counter category (performance object).">性能计数器类别（性能对象）的名称。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.MachineName">
      <summary vsli:raw="Gets the name of the server on which the category of the performance counter resides.">获取性能计数器的类别所驻留的服务器的名称。</summary>
      <returns vsli:raw="The name of the server on which the category resides.">类别所驻留的服务器的名称。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess">
      <summary vsli:raw="Gets the permission access level of the entry.">获取该项的权限访问级别。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 值的按位组合。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection">
      <summary vsli:raw="Contains a strongly typed collection of &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionEntry&quot; /&gt; objects.">包含 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 对象的强类型集合。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Add(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary vsli:raw="Adds a specified &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionEntry&quot; /&gt; to this collection.">向此集合添加指定的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionEntry&quot; /&gt; object to add.">要添加的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 对象。</param>
      <returns vsli:raw="The zero-based index of the added &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionEntry&quot; /&gt; object.">所添加的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 对象的从零开始的索引。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <summary vsli:raw="Appends a set of specified permission entries to this collection.">向此集合中追加一组指定的权限项。</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionEntry&quot; /&gt; objects that contains the permission entries to add.">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 类型对象的数组，它包含要添加的权限项。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntryCollection)">
      <summary vsli:raw="Appends a set of specified permission entries to this collection.">向此集合中追加一组指定的权限项。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionEntryCollection&quot; /&gt; that contains the permission entries to add.">一个 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" />，它包含要添加的权限项。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Contains(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary vsli:raw="Determines whether this collection contains a specified &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionEntry&quot; /&gt; object.">确定此集合是否包含指定的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 对象。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionEntry&quot; /&gt; object to find.">要查找的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionEntry&quot; /&gt; object belongs to this collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 对象属于此集合，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.CopyTo(System.Diagnostics.PerformanceCounterPermissionEntry[],System.Int32)">
      <summary vsli:raw="Copies the permission entries from this collection to an array, starting at a particular index of the array.">将权限项从此集合复制到数组中（从数组中特定的索引开始复制）。</summary>
      <param name="array" vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionEntry&quot; /&gt; that receives this collection's permission entries.">接收该集合权限项的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 类型的数组。</param>
      <param name="index" vsli:raw="The zero-based index at which to begin copying the permission entries.">从零开始的索引，将从此索引位置开始复制权限项。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.IndexOf(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary vsli:raw="Determines the index of a specified permission entry in this collection.">确定指定权限项在此集合中的索引。</summary>
      <param name="value" vsli:raw="The permission entry for which to search.">要搜索的权限项。</param>
      <returns vsli:raw="The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.">指定权限项的从零开始的索引；或者，如果集合中未找到该权限项，则为 -1。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary vsli:raw="Inserts a permission entry into this collection at a specified index.">将权限项插入此集合中指定的索引位置。</summary>
      <param name="index" vsli:raw="The zero-based index of the collection at which to insert the permission entry.">集合的从零开始的索引，将在此索引位置插入权限项。</param>
      <param name="value" vsli:raw="The permission entry to insert into this collection.">将插入此集合中的权限项。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnClear">
      <summary vsli:raw="Performs additional custom processes after clearing the contents of the collection.">在清除此集合内容之后执行其他自定义进程。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before a new permission entry is inserted into the collection.">在将一个新的权限项插入此集合之前执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">从零开始的索引，在该处插入 <paramref name="value" />。</param>
      <param name="value" vsli:raw="The new value of the permission entry at &lt;paramref name=&quot;index&quot; /&gt;.">在 <paramref name="index" /> 处的权限项的新值。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing a new permission entry from the collection.">当从此集合中移除一个新的权限项时执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">从零开始的索引，可在该位置找到 <paramref name="value" />。</param>
      <param name="value" vsli:raw="The permission entry to remove from &lt;paramref name=&quot;index&quot; /&gt;.">要从 <paramref name="index" /> 处移除的权限项。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the collection.">当在此集合中设置值之前执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">从零开始的索引，可在该位置找到 <paramref name="oldValue" />。</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">要用 <paramref name="newValue" /> 替换的值。</param>
      <param name="newValue" vsli:raw="The new value of the permission entry at &lt;paramref name=&quot;index&quot; /&gt;.">在 <paramref name="index" /> 处的权限项的新值。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Remove(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary vsli:raw="Removes a specified permission entry from this collection.">从此集合中移除指定的权限项。</summary>
      <param name="value" vsli:raw="The permission entry to remove.">要移除的权限项。</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the object at a specified index.">获取或设置指定索引位置的对象。</summary>
      <param name="index" vsli:raw="The zero-based index into the collection.">集合中从零开始的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterPermissionEntry&quot; /&gt; object that exists at the specified index.">位于指定索引位置的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 对象。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermission">
      <summary vsli:raw="Controls access to printers. This class cannot be inherited.">控制对打印机的访问。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Printing.PrintingPermission&quot; /&gt; class with the level of printing access specified.">使用指定的打印访问级别初始化 <see cref="T:System.Drawing.Printing.PrintingPermission" /> 类的新实例。</summary>
      <param name="printingLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Drawing.Printing.PrintingPermissionLevel&quot; /&gt; values.">
        <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 值之一。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Printing.PrintingPermission&quot; /&gt; class with either fully restricted or unrestricted access, as specified.">根据指定，使用完全限制或不受限制的访问初始化 <see cref="T:System.Drawing.Printing.PrintingPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 不是有效的 <see cref="T:System.Security.Permissions.PermissionState" />。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission object.">创建并返回与当前权限对象相同的副本。</summary>
      <returns vsli:raw="A copy of the current permission object.">当前权限对象的副本。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="element" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission object and a target permission object.">创建并返回当前权限对象和目标权限对象的交集权限。</summary>
      <param name="target" vsli:raw="A permission object of the same type as the current permission object.">与当前权限对象类型相同的权限对象。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is an object that is not of the same type as the current permission object.">
        <paramref name="target" /> 是与当前权限对象不属于同一类型的对象。</exception>
      <returns vsli:raw="A new permission object that represents the intersection of the current object and the specified target. This object is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前对象和指定目标交集的新权限对象。 如果交集为空，则此对象为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission object is a subset of the specified permission.">确定当前权限对象是否是指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.">将用于测试子集关系的权限对象。 该对象必须与当前权限对象的类型相同。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is an object that is not of the same type as the current permission object.">
        <paramref name="target" /> 是与当前权限对象不属于同一类型的对象。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission object is a subset of &lt;paramref name=&quot;target&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限对象是 <paramref name="target" /> 的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsUnrestricted">
      <summary vsli:raw="Gets a value indicating whether the permission is unrestricted.">获取一个值，该值指示该权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果权限不受限制，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that combines the permission object and the target permission object.">创建一个将权限对象和目标权限对象组合在一起的权限。</summary>
      <param name="target" vsli:raw="A permission object of the same type as the current permission object.">与当前权限对象类型相同的权限对象。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is an object that is not of the same type as the current permission object.">
        <paramref name="target" /> 是与当前权限对象不属于同一类型的对象。</exception>
      <returns vsli:raw="A new permission object that represents the union of the current permission object and the specified permission object.">新权限对象，它表示当前权限对象和指定权限对象的并集。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermission.Level">
      <summary vsli:raw="Gets or sets the code's level of printing access.">获取或设置代码的打印访问级别。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Drawing.Printing.PrintingPermissionLevel&quot; /&gt; values.">
        <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 值之一。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionAttribute">
      <summary vsli:raw="Allows declarative printing permission checks.">允许进行声明打印权限检查。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Printing.PrintingPermissionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Drawing.Printing.PrintingPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates the permission based on the requested access levels, which are set through the &lt;see cref=&quot;P:System.Drawing.Printing.PrintingPermissionAttribute.Level&quot; /&gt; property on the attribute.">根据请求的访问级别创建权限，这些访问级别是通过特性上的 <see cref="P:System.Drawing.Printing.PrintingPermissionAttribute.Level" /> 属性设置的。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; that represents the created permission.">一个 <see cref="T:System.Security.IPermission" />，它表示创建的权限。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermissionAttribute.Level">
      <summary vsli:raw="Gets or sets the type of printing allowed.">设置或获取允许的打印类型。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value is not one of the &lt;see cref=&quot;T:System.Drawing.Printing.PrintingPermissionLevel&quot; /&gt; values.">该值不是 <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 值之一。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Drawing.Printing.PrintingPermissionLevel&quot; /&gt; values.">
        <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 值之一。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionLevel">
      <summary vsli:raw="Specifies the type of printing that code is allowed to do.">指定允许代码进行的打印类型。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting">
      <summary vsli:raw="Provides full access to all printers.">提供对所有打印机的完全访问。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting">
      <summary vsli:raw="Provides printing programmatically to the default printer, along with safe printing through semirestricted dialog box. &lt;see cref=&quot;F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting&quot; /&gt; is a subset of &lt;see cref=&quot;F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting&quot; /&gt;.">提供到默认打印机的编程打印，以及通过一个半限制对话框进行的安全打印。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /> 是 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /> 的子集。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting">
      <summary vsli:raw="Prevents access to printers. &lt;see cref=&quot;F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting&quot; /&gt; is a subset of &lt;see cref=&quot;F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting&quot; /&gt;.">禁止对打印机的访问。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting" /> 是 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /> 的子集。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting">
      <summary vsli:raw="Provides printing only from a restricted dialog box. &lt;see cref=&quot;F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting&quot; /&gt; is a subset of &lt;see cref=&quot;F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting&quot; /&gt;.">仅允许从受限制的对话框中提供打印。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /> 是 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /> 的子集。</summary>
    </member>
    <member name="T:System.Net.DnsPermission">
      <summary vsli:raw="Controls rights to access Domain Name System (DNS) servers on the network.">控制对网络上域名系统 (DNS) 服务器的访问权限。</summary>
    </member>
    <member name="M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; class that either allows unrestricted DNS access or disallows DNS access.">创建 <see cref="T:System.Net.DnsPermission" /> 类的新实例，该类或者允许无限制的 DNS 访问，或者不允许 DNS 访问。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; value.">
        <paramref name="state" /> 不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Net.DnsPermission.Copy">
      <summary vsli:raw="Creates an identical copy of the current permission instance.">创建当前权限实例的相同副本。</summary>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; class that is an identical copy of the current instance.">
        <see cref="T:System.Net.DnsPermission" /> 类的新实例，是当前实例的相同副本。</returns>
    </member>
    <member name="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance from an XML encoding.">以 XML 编码重新构造 <see cref="T:System.Net.DnsPermission" /> 实例。</summary>
      <param name="securityElement" vsli:raw="The XML encoding to use to reconstruct the &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance.">用于重新构造 <see cref="T:System.Net.DnsPermission" /> 实例的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="securityElement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is not a &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; element.">
        <paramref name="securityElement" /> 不是一个 <see cref="T:System.Net.DnsPermission" /> 元素。</exception>
    </member>
    <member name="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission instance that is the intersection of the current permission instance and the specified permission instance.">创建一个是当前权限实例与指定权限实例的交集的权限实例。</summary>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance to intersect with the current instance.">要与当前实例求交的 <see cref="T:System.Net.DnsPermission" /> 实例。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is neither a &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; nor &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="target" /> 既不是 <see cref="T:System.Net.DnsPermission" />，也不是 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance that represents the intersection of the current &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance with the specified &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance, or &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty. If both the current instance and &lt;paramref name=&quot;target&quot; /&gt; are unrestricted, this method returns a new &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance that is unrestricted; otherwise, it returns &lt;see langword=&quot;null&quot; /&gt;.">一个 <see cref="T:System.Net.DnsPermission" /> 实例，表示当前 <see cref="T:System.Net.DnsPermission" /> 实例与指定 <see cref="T:System.Net.DnsPermission" /> 实例的交集；如果交集为空，则为 <see langword="null" />。 如果当前实例和 <paramref name="target" /> 都是不受限制的，则该方法将返回一个不受限制的、新的 <see cref="T:System.Net.DnsPermission" /> 实例；否则返回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission instance is a subset of the specified permission instance.">确定当前权限实例是否是指定权限实例的子集。</summary>
      <param name="target" vsli:raw="The second &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance to be tested for the subset relationship.">第二个需测试子集关系的 <see cref="T:System.Net.DnsPermission" /> 实例。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is neither a &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; nor &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="target" /> 既不是 <see cref="T:System.Net.DnsPermission" />，也不是 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if the current instance is unrestricted and &lt;paramref name=&quot;target&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or unrestricted; otherwise, &lt;see langword=&quot;true&quot; /&gt;.">如果当前实例是不受限制的，并且 <paramref name="target" /> 或者为 <see langword="false" /> 或者是不受限制的，则为 <see langword="null" />；否则，为 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Net.DnsPermission.IsUnrestricted">
      <summary vsli:raw="Checks the overall permission state of the object.">检查对象的整体权限状态。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance was created with &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Net.DnsPermission" /> 实例是使用 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 创建的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.DnsPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of a &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance and its current state.">创建 <see cref="T:System.Net.DnsPermission" /> 实例及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; instance that contains an XML-encoded representation of the security object, including state information.">
        <see cref="T:System.Security.SecurityElement" /> 实例，包含安全对象的 XML 编码表示形式，包括状态信息。</returns>
    </member>
    <member name="M:System.Net.DnsPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission instance that is the union of the current permission instance and the specified permission instance.">创建一个是当前权限实例与指定权限实例的并集的权限实例。</summary>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance to combine with the current instance.">要与当前实例组合的 <see cref="T:System.Net.DnsPermission" /> 实例。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is neither a &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; nor &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="target" /> 既不是 <see cref="T:System.Net.DnsPermission" />，也不是 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance that represents the union of the current &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance with the specified &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance. If &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, this method returns a copy of the current instance. If the current instance or &lt;paramref name=&quot;target&quot; /&gt; is unrestricted, this method returns a &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance that is unrestricted; otherwise, it returns a &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; instance that is restricted.">一个 <see cref="T:System.Net.DnsPermission" /> 实例，表示当前 <see cref="T:System.Net.DnsPermission" /> 实例与指定 <see cref="T:System.Net.DnsPermission" /> 实例的并集。 如果 <paramref name="target" /> 为 <see langword="null" />，则该方法将返回当前实例的一个副本。 如果当前实例或 <paramref name="target" /> 是不受限制的，则此方法返回不受限制的 <see cref="T:System.Net.DnsPermission" /> 实例；否则，返回受限制的 <see cref="T:System.Net.DnsPermission" /> 实例。</returns>
    </member>
    <member name="T:System.Net.DnsPermissionAttribute">
      <summary vsli:raw="Specifies permission to request information from Domain Name Servers.">指定从域名服务器中请求信息的权限。</summary>
    </member>
    <member name="M:System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.DnsPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; value.">使用指定的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值初始化 <see cref="T:System.Net.DnsPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;action&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">
        <paramref name="action" /> 参数不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" />。</exception>
    </member>
    <member name="M:System.Net.DnsPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new instance of the &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; class.">创建并返回 <see cref="T:System.Net.DnsPermission" /> 类的新实例。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; that corresponds to the security declaration.">与安全性声明相对应的 <see cref="T:System.Net.DnsPermission" />。</returns>
    </member>
    <member name="T:System.Net.EndpointPermission">
      <summary vsli:raw="Defines an endpoint that is authorized by a &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instance.">定义由 <see cref="T:System.Net.SocketPermission" /> 实例授权的终结点。</summary>
    </member>
    <member name="M:System.Net.EndpointPermission.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see langword=&quot;Object&quot; /&gt; is equal to the current &lt;see langword=&quot;Object&quot; /&gt;.">确定指定的 <see langword="Object" /> 是否等同于当前的 <see langword="Object" />。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see langword=&quot;Object&quot; /&gt;.">要与当前的 <see cref="T:System.Object" /> 进行比较的 <see langword="Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see langword=&quot;Object&quot; /&gt; is equal to the current &lt;see langword=&quot;Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see langword="true" /> 等于当前的 <see langword="Object" />，则为 <see langword="Object" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.EndpointPermission.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a particular type.">用作特定类型的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">当前 <see cref="T:System.Object" /> 的哈希代码。</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Hostname">
      <summary vsli:raw="Gets the DNS host name or IP address of the server that is associated with this endpoint.">获取与此终结点关联的服务器的 DNS 主机名或 IP 地址。</summary>
      <returns vsli:raw="A string that contains the DNS host name or IP address of the server.">包含服务器的 DNS 主机名或 IP 地址的字符串。</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Port">
      <summary vsli:raw="Gets the network port number that is associated with this endpoint.">获取与此终结点关联的网络端口号。</summary>
      <returns vsli:raw="The network port number that is associated with this request, or &lt;see cref=&quot;F:System.Net.SocketPermission.AllPorts&quot; /&gt;.">与此请求关联的网络端口号，或 <see cref="F:System.Net.SocketPermission.AllPorts" />。</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Transport">
      <summary vsli:raw="Gets the transport type that is associated with this endpoint.">获取与此终结点关联的传输类型。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.TransportType&quot; /&gt; values.">
        <see cref="T:System.Net.TransportType" /> 值之一。</returns>
    </member>
    <member name="T:System.Net.Mail.SmtpAccess">
      <summary vsli:raw="Specifies the level of access allowed to a Simple Mail Transport Protocol (SMTP) server.">指定允许的简单邮件传输协议 (SMTP) 服务器访问级别。</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.Connect">
      <summary vsli:raw="Connection to an SMTP host on the default port (port 25).">连接到默认端口（端口 25）上的 SMTP 主机。</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort">
      <summary vsli:raw="Connection to an SMTP host on any port.">连接到任何端口上的 SMTP 主机。</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.None">
      <summary vsli:raw="No access to an SMTP host.">不能访问 SMTP 主机。</summary>
    </member>
    <member name="T:System.Net.Mail.SmtpPermission">
      <summary vsli:raw="Controls access to Simple Mail Transport Protocol (SMTP) servers.">控制对简单邮件传输协议 (SMTP) 服务器的访问。</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Mail.SmtpPermission&quot; /&gt; class with the specified state.">使用指定的状态初始化 <see cref="T:System.Net.Mail.SmtpPermission" /> 类的新实例。</summary>
      <param name="unrestricted" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the new permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果新权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Net.Mail.SmtpAccess)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Mail.SmtpPermission&quot; /&gt; class using the specified access level.">使用指定的访问级别初始化 <see cref="T:System.Net.Mail.SmtpPermission" /> 类的新实例。</summary>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Mail.SmtpAccess&quot; /&gt; values.">
        <see cref="T:System.Net.Mail.SmtpAccess" /> 值之一。</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Mail.SmtpPermission&quot; /&gt; class using the specified permission state value.">使用指定的权限状态值初始化 <see cref="T:System.Net.Mail.SmtpPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.AddPermission(System.Net.Mail.SmtpAccess)">
      <summary vsli:raw="Adds the specified access level value to the permission.">将指定的访问级别值添加到权限。</summary>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Mail.SmtpAccess&quot; /&gt; values.">
        <see cref="T:System.Net.Mail.SmtpAccess" /> 值之一。</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Mail.SmtpPermission&quot; /&gt; that is identical to the current permission.">
        <see cref="T:System.Net.Mail.SmtpPermission" />，与当前权限相同。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Sets the state of the permission using the specified XML encoding.">使用指定的 XML 编码设置权限的状态。</summary>
      <param name="securityElement" vsli:raw="The XML encoding to use to set the state of the current permission.">用于设置当前权限的状态的 XML 编码。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; does not describe an &lt;see cref=&quot;T:System.Net.Mail.SmtpPermission&quot; /&gt; object.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;securityElement&quot; /&gt; does not contain the required state information to reconstruct the permission.">
        <paramref name="securityElement" /> 不描述 <see cref="T:System.Net.Mail.SmtpPermission" /> 对象。  
  
- 或 - 
 <paramref name="securityElement" /> 不包含重建权限所需的状态信息。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="securityElement" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="An &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; to intersect with the current permission. It must be of the same type as the current permission.">与当前权限相交的 <see cref="T:System.Security.IPermission" />。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not an &lt;see cref=&quot;T:System.Net.Mail.SmtpPermission&quot; /&gt;.">
        <paramref name="target" /> 不是 <see cref="T:System.Net.Mail.SmtpPermission" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Mail.SmtpPermission&quot; /&gt; that represents the intersection of the current permission and the specified permission. Returns &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty or &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.Mail.SmtpPermission" />，表示当前权限与指定权限的交集。 如果交集为空或 <paramref name="target" /> 为 <see langword="null" />，则返回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Returns a value indicating whether the current permission is a subset of the specified permission.">返回一个值，该值指示当前权限是否为指定权限的一个子集。</summary>
      <param name="target" vsli:raw="An &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">
        <see cref="T:System.Security.IPermission" />，将对其进行测试以确定子集关系。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not an &lt;see cref=&quot;T:System.Net.Mail.SmtpPermission&quot; /&gt;.">
        <paramref name="target" /> 不是 <see cref="T:System.Net.Mail.SmtpPermission" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the state of the permission.">创建权限状态的 XML 编码。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains an XML encoding of the current permission.">
        <see cref="T:System.Security.SecurityElement" />，包含当前权限的 XML 编码。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="An &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; to combine with the current permission.">与当前权限合并的 <see cref="T:System.Security.IPermission" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not an &lt;see cref=&quot;T:System.Net.Mail.SmtpPermission&quot; /&gt;.">
        <paramref name="target" /> 不是 <see cref="T:System.Net.Mail.SmtpPermission" />。</exception>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Net.Mail.SmtpPermission&quot; /&gt; permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新 <see cref="T:System.Net.Mail.SmtpPermission" /> 权限。</returns>
    </member>
    <member name="P:System.Net.Mail.SmtpPermission.Access">
      <summary vsli:raw="Gets the level of access to SMTP servers controlled by the permission.">获取由权限控制的 SMTP 服务器的访问级别。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Mail.SmtpAccess&quot; /&gt; values.">
        <see cref="T:System.Net.Mail.SmtpAccess" /> 值之一。</returns>
    </member>
    <member name="T:System.Net.Mail.SmtpPermissionAttribute">
      <summary vsli:raw="Controls access to Simple Mail Transport Protocol (SMTP) servers.">控制对简单邮件传输协议 (SMTP) 服务器的访问。</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Mail.SmtpPermissionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Net.Mail.SmtpPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values that specifies the permission behavior.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一，用于指定权限行为。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;action&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">
        <paramref name="action" /> 不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" />。</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates a permission object that can be stored with the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; in an assembly's metadata.">创建可以与 <see cref="T:System.Security.Permissions.SecurityAction" /> 一起存储在程序集的元数据中的权限对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Mail.SmtpPermission&quot; /&gt; instance.">一个 <see cref="T:System.Net.Mail.SmtpPermission" /> 实例。</returns>
    </member>
    <member name="P:System.Net.Mail.SmtpPermissionAttribute.Access">
      <summary vsli:raw="Gets or sets the level of access to SMTP servers controlled by the attribute.">获取或设置由该特性控制的对 SMTP 服务器的访问级别。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value. Valid values are &quot;Connect&quot; and &quot;None&quot;.">一个 <see cref="T:System.String" /> 值。 有效值是“连接”和“无”。</returns>
    </member>
    <member name="T:System.Net.NetworkAccess">
      <summary vsli:raw="Specifies network access permissions.">指定网络访问权限。</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Accept">
      <summary vsli:raw="Indicates that the application is allowed to accept connections from the Internet on a local resource. Notice that this is a protection for the local host that uses Accept to grant access to a local resource (address/port). At the time a socket tries to bind to this local resource a permission check is performed to see if an Accept exists on that resource.">指示允许应用程序在本地资源上接受来自 Internet 的连接。 请注意，这是对本地主机的保护，这种保护使用 Accept 为本地资源（地址/端口）授予访问权限。 当套接字尝试绑定到此本地资源时，将执行权限检查以确定资源上是否存在 Accept。</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Connect">
      <summary vsli:raw="Indicates that the application is allowed to connect to specific Internet resources. Notice that, in the case of remote host resource, no check is performed to see that Connect permissions exist. This is because the port of a connecting remote host is unknown and not suitable permissions can be built in advance. It is the application responsibility to check the permissions of the remote host trying to connect to a listening socket.">指示允许应用程序连接到特定的 Internet 资源。 请注意，对于远程主机资源，不执行任何确定 Connect 权限是否存在的检查。 这是因为连接远程主机的端口是未知的，而且无法预先生成合适的权限。 应用程序负责检查尝试连接到侦听套接字的远程主机的权限。</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationAccess">
      <summary vsli:raw="Specifies permission to access information about network interfaces and traffic statistics.">指定访问网络接口信息和通信统计数据的权限。</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.None">
      <summary vsli:raw="No access to network information.">不能访问网络信息。</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping">
      <summary vsli:raw="Ping access to network information.">对网络信息的 Ping 访问。</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Read">
      <summary vsli:raw="Read access to network information.">可以读取网络信息。</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermission">
      <summary vsli:raw="Controls access to network information and traffic statistics for the local computer. This class cannot be inherited.">控制对本地计算机的网络信息和通信统计信息的访问。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationPermission&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationAccess&quot; /&gt; value.">使用指定的 <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 值初始化 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 类的新实例。</summary>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationAccess&quot; /&gt; values.">
        <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 值之一。</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationPermission&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">使用指定的 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary vsli:raw="Adds the specified value to this permission.">将指定的值添加到此权限中。</summary>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationAccess&quot; /&gt; values.">
        <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 值之一。</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of this permission.">创建并返回此权限的完全相同副本。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationPermission&quot; /&gt; that is identical to the current permission.">与当前权限完全相同的 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Sets the state of this permission using the specified XML encoding.">使用指定的 XML 编码设置此权限的状态。</summary>
      <param name="securityElement" vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains the XML encoding to use to set the state of the current permission.">
        <see cref="T:System.Security.SecurityElement" />，包含用于设置当前权限状态的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="securityElement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is not a permission encoding.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;securityElement&quot; /&gt; is not an encoding of a &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationPermission&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;securityElement&quot; /&gt; has invalid &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationAccess&quot; /&gt; values.">
        <paramref name="securityElement" /> 不是权限编码。  
  
- 或 - 
 <paramref name="securityElement" /> 不是 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 的编码。  
  
- 或 - 
 <paramref name="securityElement" /> 有无效的 <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 值。</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="An &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; to intersect with the current permission. It must be of the same type as the current permission.">与当前权限相交的 <see cref="T:System.Security.IPermission" />。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not a &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationPermission&quot; /&gt;.">
        <paramref name="target" /> 不是 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationPermission&quot; /&gt; that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty or &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />，表示当前权限与指定权限的交集。 如果交集为空或 <paramref name="target" /> 为 <see langword="null" />，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="An &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">
        <see cref="T:System.Security.IPermission" />，将对其进行测试以确定子集关系。 此权限必须与当前权限属于同一类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the state of this permission.">创建此权限状态的 XML 编码。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains the XML encoding of the current permission.">包含当前权限的 XML 编码的 <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of this permission and the specified permission.">创建一个权限，该权限是此权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationPermission&quot; /&gt; permission to combine with the current permission.">要与当前权限合并的 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 权限。</param>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermission.Access">
      <summary vsli:raw="Gets the level of access to network information controlled by this permission.">获取对此权限控制的网络信息的访问级别。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationAccess&quot; /&gt; values.">
        <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 值之一。</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationPermission&quot; /&gt; to be applied to code using declarative security.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 执行安全操作。</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; value that specifies the permission behavior.">指定权限行为的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationPermission&quot; /&gt; object.">创建并返回一个新的 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInformationPermission&quot; /&gt; that corresponds to this attribute.">与此属性对应的 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />。</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.Access">
      <summary vsli:raw="Gets or sets the network information access level.">获取或设置网络信息访问级别。</summary>
      <returns vsli:raw="A string that specifies the access level.">指定访问级别的字符串。</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
      <summary vsli:raw="Specifies the values that define or are used in &lt;see cref=&quot;N:System.Net.PeerToPeer.Collaboration&quot; /&gt; object permissions.">指定用于定义 <see cref="N:System.Net.PeerToPeer.Collaboration" /> 对象权限或在这些权限中使用的值。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot; /&gt;. The initial &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; for this instance is passed when the constructor is called.">初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 的新实例。 调用构造函数时，将传递此实例的初始 <see cref="T:System.Security.Permissions.PermissionState" />。</summary>
      <param name="state" vsli:raw="One of the values in the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; enumeration.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 枚举中的值之一。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy">
      <summary vsli:raw="Creates and returns a copy of the current &lt;see cref=&quot;T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot; /&gt;.">创建并返回当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 的一个副本。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains a copy of the current instance of &lt;see cref=&quot;T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot; /&gt;.">一个 <see cref="T:System.Object" />，其中包含当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 实例的一个副本。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Represents the XML object model for encoding security objects.">表示用于对安全对象进行编码的 XML 对象模型。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is not a valid permission element.&#xA;&#xA;-or-&#xA;&#xA;The parameter does not contain a valid type or class.&#xA;&#xA;-or-&#xA;&#xA;The parameter's version number is not supported.">该参数为无效权限元素。

- 或 -

该参数不包含有效类型或类。

- 或 -

不支持该参数的版本号。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter is a &lt;see langword=&quot;null&quot; /&gt; reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">该参数为 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current &lt;see cref=&quot;T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot; /&gt; and the specified &lt;paramref name=&quot;target&quot; /&gt; permission.">创建并返回一个权限，该权限是当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 与指定 <paramref name="target" /> 权限的交集。</summary>
      <param name="target" vsli:raw="Permission to &lt;see cref=&quot;M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)&quot; /&gt; with the current permission. It must be of the same type as the current permission.">要与当前权限求 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" /> 的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The target parameter is not a &lt;see langword=&quot;null&quot; /&gt; reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) and is not an instance of the same class as the current permission.">目标参数不是一个 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />），并且不是与当前权限相同的类的实例。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current &lt;see cref=&quot;T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot; /&gt; and the specified &lt;paramref name=&quot;target&quot; /&gt; permission. This new permission is a &lt;see langword=&quot;null&quot; /&gt; reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if the intersection is empty.">一个新权限，表示当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 与指定 <paramref name="target" /> 权限的交集。 如果交集为空，则此新权限是一个 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot; /&gt; is a subset of the specified &lt;paramref name=&quot;target&quot; /&gt; permission.">确定当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 是否为指定 <paramref name="target" /> 权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is a &lt;see langword=&quot;null&quot; /&gt; reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">该参数为 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current &lt;see cref=&quot;T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot; /&gt; is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value specifying whether the current &lt;see cref=&quot;T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot; /&gt; is unrestricted.">返回一个值，指定当前的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the &lt;see cref=&quot;T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot; /&gt; and its current state.">创建 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current &lt;see cref=&quot;T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot; /&gt; and the specified &lt;paramref name=&quot;target&quot; /&gt; permission.">创建一个权限，该权限是当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 与指定 <paramref name="target" /> 权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is a &lt;see langword=&quot;null&quot; /&gt; reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">该参数为 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      <returns vsli:raw="A new permission that represents the &lt;see cref=&quot;M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)&quot; /&gt; of the current &lt;see cref=&quot;T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot; /&gt; and the specified permission.">一个新权限，表示当前 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" /> 与指定权限的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />。</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="Specifies a &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; value.">指定一个 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.IPermission" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; object.">一个新 <see cref="T:System.Security.IPermission" /> 对象。</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermission">
      <summary vsli:raw="Specifies the values that are used in &lt;see cref=&quot;N:System.Net.PeerToPeer&quot; /&gt; object permissions.">指定在 <see cref="N:System.Net.PeerToPeer" /> 对象权限中使用的值。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermission&quot; /&gt; class with the supplied initial permission state.">初始化具有所提供的初始权限状态的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the values in the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; enumeration.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 枚举中的值之一。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermission&quot; /&gt;.">创建并返回当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 的一个相同副本。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is not a valid &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermission&quot; /&gt; element.&#xA;&#xA;-or-&#xA;&#xA;The parameter's version number is not supported.">参数不是有效的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 元素。

- 或 -

不支持该参数的版本号。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter is a &lt;see langword=&quot;null&quot; /&gt; reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">该参数为 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      <returns vsli:raw="An object with an IPermission interface, whose instance contains a copy of the current instance of &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermission&quot; /&gt;.">具有 IPermission 接口的对象，其实例包含 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 的当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is not a valid &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermission&quot; /&gt; element.&#xA;&#xA;-or-&#xA;&#xA;The parameter's version number is not supported.">参数不是有效的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 元素。

- 或 -

不支持该参数的版本号。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter is a &lt;see langword=&quot;null&quot; /&gt; reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">该参数为 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermission&quot; /&gt; and the specified permission.">创建并返回一个权限，该权限是当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to &lt;see cref=&quot;M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)&quot; /&gt; with the current permission. It must be of the same type as the current permission.">与当前权限 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> 的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The target parameter is not a &lt;see langword=&quot;null&quot; /&gt; reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) and is not an instance of the same class as the current permission.">目标参数不是一个 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />），并且不是与当前权限相同的类的实例。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermission&quot; /&gt; and the specified permission. This new permission is a &lt;see langword=&quot;null&quot; /&gt; reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if the intersection is empty.">一个新权限，它表示当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 与指定权限的交集。 如果交集为空，则此新权限是一个 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermission&quot; /&gt; is a subset of the specified permission.">确定当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The target parameter is not a &lt;see langword=&quot;null&quot; /&gt; reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) and is not an instance of the same class as the current permission.">目标参数不是一个 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />），并且不是与当前权限相同的类的实例。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermission&quot; /&gt; is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value specifying whether the current &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermission&quot; /&gt; is unrestricted.">返回一个值，指定当前的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermission&quot; /&gt; and its current state.">创建 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; object that contains an XML encoding of the permission, including any state information.">一个 <see cref="T:System.Security.SecurityElement" /> 对象，该对象包含权限的 XML 编码（包括任何状态信息）。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermission&quot; /&gt; and the specified permission.">创建一个权限，该权限是当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; parameter is invalid.">
        <paramref name="target" /> 参数无效。</exception>
      <returns vsli:raw="A new permission that represents the &lt;see cref=&quot;M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)&quot; /&gt; of the current &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermission&quot; /&gt; and the specified permission.">一个新权限，表示当前 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> 与指定权限的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />。</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermission&quot; /&gt; to be applied to code using declarative security.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 执行安全操作。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.PeerToPeer.PnrpPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.IPermission" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; object.">一个新 <see cref="T:System.Security.IPermission" /> 对象。</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpScope">
      <summary vsli:raw="Specifies the different scopes of a PNRP cloud.">指定 PNRP 群的不同范围。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.All">
      <summary vsli:raw="All IP addresses are allowed to register with the PNRP &lt;see cref=&quot;T:System.Net.PeerToPeer.Cloud&quot; /&gt;. There is no difference between any scope and all scopes.">允许所有 IP 地址向 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> 进行注册。 任一范围和所有范围之间没有任何区别。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.Global">
      <summary vsli:raw="The scope is global; all valid IP addresses are allowed to register with the PNRP &lt;see cref=&quot;T:System.Net.PeerToPeer.Cloud&quot; /&gt;.">该范围是全局范围；允许所有有效的 IP 地址向 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> 进行注册。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.LinkLocal">
      <summary vsli:raw="The scope is link-local; only IP addresses defined for the local area subnet are allowed to register with the PNRP &lt;see cref=&quot;T:System.Net.PeerToPeer.Cloud&quot; /&gt;.">该范围是链接本地范围；只有为本地局域子网定义的 IP 地址才能向 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> 进行注册。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.SiteLocal">
      <summary vsli:raw="The scope is site-local; only IP addresses defined for the site are allowed to register with the PNRP.">该范围是站点本地范围；只有为站点定义的 IP 地址才能向 PNRP 进行注册。</summary>
    </member>
    <member name="T:System.Net.SocketPermission">
      <summary vsli:raw="Controls rights to make or accept connections on a transport address.">控制在传输地址上建立或接受连接的权利。</summary>
    </member>
    <member name="F:System.Net.SocketPermission.AllPorts">
      <summary vsli:raw="Defines a constant that represents all ports.">定义表示所有端口的常数。</summary>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; class for the given transport address with the specified permission.">用指定的权限初始化给定传输地址的 <see cref="T:System.Net.SocketPermission" /> 类的新实例。</summary>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.NetworkAccess&quot; /&gt; values.">
        <see cref="T:System.Net.NetworkAccess" /> 值之一。</param>
      <param name="transport" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.TransportType&quot; /&gt; values.">
        <see cref="T:System.Net.TransportType" /> 值之一。</param>
      <param name="hostName" vsli:raw="The host name for the transport address.">该传输地址的主机名。</param>
      <param name="portNumber" vsli:raw="The port number for the transport address.">该传输地址的端口号。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;hostName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="hostName" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; class that allows unrestricted access to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; or disallows access to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">初始化 <see cref="T:System.Net.SocketPermission" /> 类的新实例，该类允许对 <see cref="T:System.Net.Sockets.Socket" /> 的无限制访问或不允许对 <see cref="T:System.Net.Sockets.Socket" /> 的访问。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
    </member>
    <member name="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary vsli:raw="Adds a permission to the set of permissions for a transport address.">向传输地址的权限集添加权限。</summary>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.NetworkAccess&quot; /&gt; values.">
        <see cref="T:System.Net.NetworkAccess" /> 值之一。</param>
      <param name="transport" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.TransportType&quot; /&gt; values.">
        <see cref="T:System.Net.TransportType" /> 值之一。</param>
      <param name="hostName" vsli:raw="The host name for the transport address.">该传输地址的主机名。</param>
      <param name="portNumber" vsli:raw="The port number for the transport address.">该传输地址的端口号。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;hostName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="hostName" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.SocketPermission.Copy">
      <summary vsli:raw="Creates a copy of a &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instance.">创建 <see cref="T:System.Net.SocketPermission" /> 实例的副本。</summary>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; class that is a copy of the current instance.">
        <see cref="T:System.Net.SocketPermission" /> 类的新实例，是当前实例的副本。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instance for an XML encoding.">重新构造一个 <see cref="T:System.Net.SocketPermission" /> 实例用于 XML 编码。</summary>
      <param name="securityElement" vsli:raw="The XML encoding used to reconstruct the &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instance.">用来重新构造 <see cref="T:System.Net.SocketPermission" /> 实例的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;securityElement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="securityElement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;securityElement&quot; /&gt; is not a permission element for this type.">
        <paramref name="securityElement" /> 不是此类型的权限元素。</exception>
    </member>
    <member name="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Returns the logical intersection between two &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instances.">返回两个 <see cref="T:System.Net.SocketPermission" /> 实例的逻辑交集。</summary>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instance to intersect with the current instance.">要与当前实例求交的 <see cref="T:System.Net.SocketPermission" /> 实例。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not a &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt;.">
        <paramref name="target" /> 参数不是 <see cref="T:System.Net.SocketPermission" />。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; is not granted to the method caller.">没有向方法调用方授予 <see cref="T:System.Net.DnsPermission" />。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instance that represents the intersection of two &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instances. If the intersection is empty, the method returns &lt;see langword=&quot;null&quot; /&gt;. If the &lt;paramref name=&quot;target&quot; /&gt; parameter is a null reference, the method returns &lt;see langword=&quot;null&quot; /&gt;.">表示两个 <see cref="T:System.Net.SocketPermission" /> 实例的交集的 <see cref="T:System.Net.SocketPermission" /> 实例。 如果该交集为空，则该方法返回 <see langword="null" />。 如果 <paramref name="target" /> 参数为空引用，则该方法返回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines if the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; that is to be tested for the subset relationship.">
        <see cref="T:System.Net.SocketPermission" />，将对其进行测试以确定子集关系。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not a &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt;.">
        <paramref name="target" /> 不是 <see cref="T:System.Net.Sockets.SocketException" />。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Net.DnsPermission&quot; /&gt; is not granted to the method caller.">没有向方法调用方授予 <see cref="T:System.Net.DnsPermission" />。</exception>
      <returns vsli:raw="If &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the current instance defines no permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the current instance defines a subset of &lt;paramref name=&quot;target&quot; /&gt; permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="target" /> 为 <see langword="null" />，而且当前实例没有定义权限，则此方法返回 <see langword="true" />；否则返回 <see langword="false" />。 如果 <paramref name="target" /> 不为 <see langword="null" />，而且当前实例定义了 <paramref name="target" /> 权限的子集，则该方法返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.IsUnrestricted">
      <summary vsli:raw="Checks the overall permission state of the object.">检查对象的整体权限状态。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instance is created with the &lt;see langword=&quot;Unrestricted&quot; /&gt; value from &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Net.SocketPermission" /> 实例是用来自 <see cref="T:System.Security.Permissions.PermissionState" /> 的 <see langword="true" /> 值创建的，则为 <see langword="Unrestricted" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of a &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instance and its current state.">创建 <see cref="T:System.Net.SocketPermission" /> 实例及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; instance that contains an XML-encoded representation of the &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instance, including state information.">
        <see cref="T:System.Security.SecurityElement" /> 实例，包含 <see cref="T:System.Net.SocketPermission" /> 实例的 XML 编码表示形式（包括状态信息）。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Returns the logical union between two &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instances.">返回两个 <see cref="T:System.Net.SocketPermission" /> 实例的逻辑并集。</summary>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instance to combine with the current instance.">要与当前实例组合的 <see cref="T:System.Net.SocketPermission" /> 实例。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not a &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt;.">
        <paramref name="target" /> 不是 <see cref="T:System.Net.SocketPermission" />。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instance that represents the union of two &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; instances. If &lt;paramref name=&quot;target&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;, it returns a copy of the current instance.">表示两个 <see cref="T:System.Net.SocketPermission" /> 实例的并集的 <see cref="T:System.Net.SocketPermission" /> 实例。 如果 <paramref name="target" /> 参数为 <see langword="null" />，则返回当前实例的副本。</returns>
    </member>
    <member name="P:System.Net.SocketPermission.AcceptList">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Net.EndpointPermission&quot; /&gt; instances that identifies the endpoints that can be accepted under this permission instance.">获取标识在此权限实例下可以接受的终结点的 <see cref="T:System.Net.EndpointPermission" /> 实例列表。</summary>
      <returns vsli:raw="An instance that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface that contains &lt;see cref=&quot;T:System.Net.EndpointPermission&quot; /&gt; instances.">一个实例，它实现包含 <see cref="T:System.Collections.IEnumerator" /> 实例的 <see cref="T:System.Net.EndpointPermission" /> 接口。</returns>
    </member>
    <member name="P:System.Net.SocketPermission.ConnectList">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Net.EndpointPermission&quot; /&gt; instances that identifies the endpoints that can be connected to under this permission instance.">获取标识在此权限实例下可以连接到的终结点的 <see cref="T:System.Net.EndpointPermission" /> 实例列表。</summary>
      <returns vsli:raw="An instance that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface that contains &lt;see cref=&quot;T:System.Net.EndpointPermission&quot; /&gt; instances.">一个实例，它实现包含 <see cref="T:System.Collections.IEnumerator" /> 实例的 <see cref="T:System.Net.EndpointPermission" /> 接口。</returns>
    </member>
    <member name="T:System.Net.SocketPermissionAttribute">
      <summary vsli:raw="Specifies security actions to control &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; connections. This class cannot be inherited.">指定安全操作以控制 <see cref="T:System.Net.Sockets.Socket" /> 连接。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.SocketPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; value.">使用指定的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值初始化 <see cref="T:System.Net.SocketPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;action&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; value.">
        <paramref name="action" /> 不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</exception>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new instance of the &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; class.">创建并返回 <see cref="T:System.Net.SocketPermission" /> 类的新实例。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="One or more of the current instance's &lt;see cref=&quot;P:System.Net.SocketPermissionAttribute.Access&quot; /&gt;, &lt;see cref=&quot;P:System.Net.SocketPermissionAttribute.Host&quot; /&gt;, &lt;see cref=&quot;P:System.Net.SocketPermissionAttribute.Transport&quot; /&gt;, or &lt;see cref=&quot;P:System.Net.SocketPermissionAttribute.Port&quot; /&gt; properties is &lt;see langword=&quot;null&quot; /&gt;.">一个或多个当前实例的 <see cref="P:System.Net.SocketPermissionAttribute.Access" />、<see cref="P:System.Net.SocketPermissionAttribute.Host" />、<see cref="P:System.Net.SocketPermissionAttribute.Transport" /> 或 <see cref="P:System.Net.SocketPermissionAttribute.Port" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; class that corresponds to the security declaration.">与安全声明对应的 <see cref="T:System.Net.SocketPermission" /> 类的实例。</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Access">
      <summary vsli:raw="Gets or sets the network access method that is allowed by this &lt;see cref=&quot;T:System.Net.SocketPermissionAttribute&quot; /&gt;.">获取或设置该 <see cref="T:System.Net.SocketPermissionAttribute" /> 允许的网络访问方法。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Net.SocketPermissionAttribute.Access&quot; /&gt; property is not &lt;see langword=&quot;null&quot; /&gt; when you attempt to set the value. To specify more than one Access method, use an additional attribute declaration statement.">当尝试设置该值时，<see cref="P:System.Net.SocketPermissionAttribute.Access" /> 属性不为 <see langword="null" />。 若要指定多个 Access 方法，请额外使用一个特性声明语句。</exception>
      <returns vsli:raw="A string that contains the network access method that is allowed by this instance of &lt;see cref=&quot;T:System.Net.SocketPermissionAttribute&quot; /&gt;. Valid values are &quot;Accept&quot; and &quot;Connect.&quot;">一个字符串，包含 <see cref="T:System.Net.SocketPermissionAttribute" /> 的该实例允许的网络访问方法。 有效值是“Accept”和“Connect”。</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Host">
      <summary vsli:raw="Gets or sets the DNS host name or IP address that is specified by this &lt;see cref=&quot;T:System.Net.SocketPermissionAttribute&quot; /&gt;.">获取或设置此 <see cref="T:System.Net.SocketPermissionAttribute" /> 指定的 DNS 主机名或 IP 地址。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Net.SocketPermissionAttribute.Host&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; when you attempt to set the value. To specify more than one host, use an additional attribute declaration statement.">当尝试设置该值时，<see cref="P:System.Net.SocketPermissionAttribute.Host" /> 不为 <see langword="null" />。 若要指定多个主机，请使用一个额外的特性声明语句。</exception>
      <returns vsli:raw="A string that contains the DNS host name or IP address that is associated with this instance of &lt;see cref=&quot;T:System.Net.SocketPermissionAttribute&quot; /&gt;.">一个字符串，包含与 <see cref="T:System.Net.SocketPermissionAttribute" /> 的该实例关联的 DNS 主机名或 IP 地址。</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Port">
      <summary vsli:raw="Gets or sets the port number that is associated with this &lt;see cref=&quot;T:System.Net.SocketPermissionAttribute&quot; /&gt;.">获取或设置与此 <see cref="T:System.Net.SocketPermissionAttribute" /> 关联的端口号。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Net.SocketPermissionAttribute.Port&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt; when you attempt to set the value. To specify more than one port, use an additional attribute declaration statement.">尝试设置该值时，<see cref="P:System.Net.SocketPermissionAttribute.Port" /> 属性为 <see langword="null" />。 若要指定多个端口，请使用一个额外的特性声明语句。</exception>
      <returns vsli:raw="A string that contains the port number that is associated with this instance of &lt;see cref=&quot;T:System.Net.SocketPermissionAttribute&quot; /&gt;.">一个字符串，包含与 <see cref="T:System.Net.SocketPermissionAttribute" /> 的该实例关联的端口号。</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Transport">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Net.TransportType&quot; /&gt; that is specified by this &lt;see cref=&quot;T:System.Net.SocketPermissionAttribute&quot; /&gt;.">获取或设置此 <see cref="T:System.Net.TransportType" /> 指定的 <see cref="T:System.Net.SocketPermissionAttribute" />。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Net.SocketPermissionAttribute.Transport&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; when you attempt to set the value. To specify more than one transport type, use an additional attribute declaration statement.">当尝试设置该值时，<see cref="P:System.Net.SocketPermissionAttribute.Transport" /> 不为 <see langword="null" />。 若要指定多个传输类型，请使用一个额外的特性声明语句。</exception>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;T:System.Net.TransportType&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Net.SocketPermissionAttribute&quot; /&gt;.">一个字符串，包含与此 <see cref="T:System.Net.TransportType" /> 关联的 <see cref="T:System.Net.SocketPermissionAttribute" />。</returns>
    </member>
    <member name="T:System.Net.TransportType">
      <summary vsli:raw="Defines transport types for the &lt;see cref=&quot;T:System.Net.SocketPermission&quot; /&gt; and &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; classes.">为 <see cref="T:System.Net.SocketPermission" /> 和 <see cref="T:System.Net.Sockets.Socket" /> 类定义传输类型。</summary>
    </member>
    <member name="F:System.Net.TransportType.All">
      <summary vsli:raw="All transport types.">所有传输类型。</summary>
    </member>
    <member name="F:System.Net.TransportType.Connectionless">
      <summary vsli:raw="The transport type is connectionless, such as UDP. Specifying this value has the same effect as specifying &lt;see cref=&quot;F:System.Net.TransportType.Udp&quot; /&gt;.">传输类型是无连接的，如 UDP。 指定该值的效果与指定 <see cref="F:System.Net.TransportType.Udp" /> 相同。</summary>
    </member>
    <member name="F:System.Net.TransportType.ConnectionOriented">
      <summary vsli:raw="The transport is connection oriented, such as TCP. Specifying this value has the same effect as specifying &lt;see cref=&quot;F:System.Net.TransportType.Tcp&quot; /&gt;.">传输是面向连接的，如 TCP。 指定该值的效果与指定 <see cref="F:System.Net.TransportType.Tcp" /> 相同。</summary>
    </member>
    <member name="F:System.Net.TransportType.Tcp">
      <summary vsli:raw="TCP transport.">TCP 传输。</summary>
    </member>
    <member name="F:System.Net.TransportType.Udp">
      <summary vsli:raw="UDP transport.">UDP 传输。</summary>
    </member>
    <member name="T:System.Net.WebPermission">
      <summary vsli:raw="Controls rights to access HTTP Internet resources.">控制访问 HTTP Internet 资源的权限。</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; class.">创建 <see cref="T:System.Net.WebPermission" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; class with the specified access rights for the specified URI.">使用指定 URI 的指定访问权限初始化 <see cref="T:System.Net.WebPermission" /> 类的新实例。</summary>
      <param name="access" vsli:raw="A NetworkAccess value that indicates what kind of access to grant to the specified URI. &lt;see cref=&quot;F:System.Net.NetworkAccess.Accept&quot; /&gt; indicates that the application is allowed to accept connections from the Internet on a local resource. &lt;see cref=&quot;F:System.Net.NetworkAccess.Connect&quot; /&gt; indicates that the application is allowed to connect to specific Internet resources.">一个 NetworkAccess 值，指示向指定的 URI 授予哪种访问权限。 <see cref="F:System.Net.NetworkAccess.Accept" /> 指示允许应用程序在本地资源上接受来自 Internet 的连接。 <see cref="F:System.Net.NetworkAccess.Connect" /> 指示允许应用程序连接到特定的 Internet 资源。</param>
      <param name="uriString" vsli:raw="A URI string to which access rights are granted.">向其授予访问权限的 URI 字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uriString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriString" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; class with the specified access rights for the specified URI regular expression.">使用指定 URI 正则表达式的指定访问权限初始化 <see cref="T:System.Net.WebPermission" /> 类的新实例。</summary>
      <param name="access" vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkAccess&quot; /&gt; value that indicates what kind of access to grant to the specified URI. &lt;see cref=&quot;F:System.Net.NetworkAccess.Accept&quot; /&gt; indicates that the application is allowed to accept connections from the Internet on a local resource. &lt;see cref=&quot;F:System.Net.NetworkAccess.Connect&quot; /&gt; indicates that the application is allowed to connect to specific Internet resources.">一个 <see cref="T:System.Net.NetworkAccess" /> 值，指示向指定的 URI 授予哪种访问权限。 <see cref="F:System.Net.NetworkAccess.Accept" /> 指示允许应用程序在本地资源上接受来自 Internet 的连接。 <see cref="F:System.Net.NetworkAccess.Connect" /> 指示允许应用程序连接到特定的 Internet 资源。</param>
      <param name="uriRegex" vsli:raw="A regular expression that describes the URI to which access is to be granted.">一个正则表达式，描述要对其授予访问权限的 URI。</param>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; class that passes all demands or fails all demands.">创建 <see cref="T:System.Net.WebPermission" /> 类的新实例，该实例允许所有命令或禁止所有命令。</summary>
      <param name="state" vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; value.">一个 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
      <summary vsli:raw="Adds the specified URI string with the specified access rights to the current &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt;.">将具有指定访问权限的指定 URI 字符串添加到当前 <see cref="T:System.Net.WebPermission" />。</summary>
      <param name="access" vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkAccess&quot; /&gt; that specifies the access rights that are granted to the URI.">指定授予 URI 的访问权限的 <see cref="T:System.Net.NetworkAccess" />。</param>
      <param name="uriString" vsli:raw="A string that describes the URI to which access rights are granted.">一个字符串，描述向其授予访问权限的 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uriString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriString" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary vsli:raw="Adds the specified URI with the specified access rights to the current &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt;.">将具有指定访问权限的指定 URI 添加到当前 <see cref="T:System.Net.WebPermission" />。</summary>
      <param name="access" vsli:raw="A NetworkAccess that specifies the access rights that are granted to the URI.">一个 NetworkAccess，指定授予 URI 的访问权限。</param>
      <param name="uriRegex" vsli:raw="A regular expression that describes the set of URIs to which access rights are granted.">一个正则表达式，描述向其授予访问权限的 URI 集。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;uriRegex&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriRegex" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.WebPermission.Copy">
      <summary vsli:raw="Creates a copy of a &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt;.">创建 <see cref="T:System.Net.WebPermission" /> 的副本。</summary>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; class that has the same values as the original.">
        <see cref="T:System.Net.WebPermission" /> 类的新实例，该实例与原始对象具有相同的值。</returns>
    </member>
    <member name="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; from an XML encoding.">通过 XML 编码重新构造 <see cref="T:System.Net.WebPermission" />。</summary>
      <param name="securityElement" vsli:raw="The XML encoding from which to reconstruct the &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt;.">通过其重新构造 <see cref="T:System.Net.WebPermission" /> 的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;securityElement&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="securityElement" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is not a permission element for this type.">
        <paramref name="securityElement" /> 不是此类型的权限元素。</exception>
    </member>
    <member name="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Returns the logical intersection of two &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; instances.">返回两个 <see cref="T:System.Net.WebPermission" /> 实例的逻辑交集。</summary>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; to compare with the current instance.">与当前实例进行比较的 <see cref="T:System.Net.WebPermission" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; or of type &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt;">
        <paramref name="target" /> 不为 <see langword="null" />，或者不是 <see cref="T:System.Net.WebPermission" /> 类型</exception>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; that represents the intersection of the current instance and the &lt;paramref name=&quot;target&quot; /&gt; parameter. If the intersection is empty, the method returns &lt;see langword=&quot;null&quot; /&gt;.">一个新的 <see cref="T:System.Net.WebPermission" />，表示当前实例和 <paramref name="target" /> 参数的交集。 如果该交集为空，则该方法返回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; is a subset of the specified object.">确定当前 <see cref="T:System.Net.WebPermission" /> 是否是指定对象的子集。</summary>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt;.">要与当前 <see cref="T:System.Net.WebPermission" /> 进行比较的 <see cref="T:System.Net.WebPermission" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The target parameter is not an instance of &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt;.">目标参数不是 <see cref="T:System.Net.WebPermission" /> 的实例。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The current instance contains a Regex-encoded right and there is not exactly the same right found in the target instance.">当前实例包含 Regex 编码的权限，并且目标实例中未找到完全相同的权限。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance is a subset of the &lt;paramref name=&quot;target&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If the target is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;true&quot; /&gt; for an empty current permission that is not unrestricted and &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果当前实例是 <paramref name="target" /> 参数的子集，则为 <see langword="true" />；否则为 <see langword="false" />。 如果目标为 <see langword="null" />，则对于受限制的、空的当前权限，该方法返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.WebPermission.IsUnrestricted">
      <summary vsli:raw="Checks the overall permission state of the &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt;.">检查 <see cref="T:System.Net.WebPermission" /> 的整体权限状态。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; was created with the &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt;&lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Net.WebPermission" /> 是使用 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /><see cref="T:System.Security.Permissions.PermissionState" /> 创建的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.WebPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of a &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; and its current state.">创建 <see cref="T:System.Net.WebPermission" /> 及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains an XML-encoded representation of the &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt;, including state information.">一个 <see cref="T:System.Security.SecurityElement" />，包含 <see cref="T:System.Net.WebPermission" />（包括状态信息）的 XML 编码表示形式。</returns>
    </member>
    <member name="M:System.Net.WebPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Returns the logical union between two instances of the &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; class.">返回 <see cref="T:System.Net.WebPermission" /> 类的两个实例之间的逻辑并集。</summary>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; to combine with the current &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt;.">与当前 <see cref="T:System.Net.WebPermission" /> 进行合并的 <see cref="T:System.Net.WebPermission" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="target is not &lt;see langword=&quot;null&quot; /&gt; or of type &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt;.">目标不为 <see langword="null" />，也不是 <see cref="T:System.Net.WebPermission" /> 类型。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; that represents the union of the current instance and the &lt;paramref name=&quot;target&quot; /&gt; parameter. If either &lt;see langword=&quot;WebPermission&quot; /&gt; is &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt;, the method returns a &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; that is &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt;. If the target is &lt;see langword=&quot;null&quot; /&gt;, the method returns a copy of the current &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt;.">表示当前实例和 <paramref name="target" /> 参数的并集的 <see cref="T:System.Net.WebPermission" />。 如果其中任何一个 <see langword="WebPermission" /> 是 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />，则该方法返回一个为 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 的 <see cref="T:System.Net.WebPermission" />。 如果目标为 <see langword="null" />，则该方法将返回当前 <see cref="T:System.Net.WebPermission" /> 的副本。</returns>
    </member>
    <member name="P:System.Net.WebPermission.AcceptList">
      <summary vsli:raw="This property returns an enumeration of a single accept permissions held by this &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt;. The possible objects types contained in the returned enumeration are &lt;see cref=&quot;T:System.String&quot; /&gt; and &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt;.">此属性返回该 <see cref="T:System.Net.WebPermission" /> 持有的单个接受权限的枚举。 返回枚举中包含的可能对象类型是 <see cref="T:System.String" /> 和 <see cref="T:System.Text.RegularExpressions.Regex" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface that contains accept permissions.">包含接受权限的 <see cref="T:System.Collections.IEnumerator" /> 接口。</returns>
    </member>
    <member name="P:System.Net.WebPermission.ConnectList">
      <summary vsli:raw="This property returns an enumeration of a single connect permissions held by this &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt;. The possible objects types contained in the returned enumeration are &lt;see cref=&quot;T:System.String&quot; /&gt; and &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt;.">此属性返回该 <see cref="T:System.Net.WebPermission" /> 持有的单个连接权限的枚举。 返回枚举中包含的可能对象类型是 <see cref="T:System.String" /> 和 <see cref="T:System.Text.RegularExpressions.Regex" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface that contains connect permissions.">包含连接权限的 <see cref="T:System.Collections.IEnumerator" /> 接口。</returns>
    </member>
    <member name="T:System.Net.WebPermissionAttribute">
      <summary vsli:raw="Specifies permission to access Internet resources. This class cannot be inherited.">指定权限以访问 Internet 资源。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.WebPermissionAttribute&quot; /&gt; class with a value that specifies the security actions that can be performed on this class.">用指定可在此类上执行的安全操作的值初始化 <see cref="T:System.Net.WebPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;action&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; value.">
        <paramref name="action" /> 不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</exception>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new instance of the &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; class.">创建并返回 <see cref="T:System.Net.WebPermission" /> 类的新实例。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebPermission&quot; /&gt; corresponding to the security declaration.">与安全声明相对应的 <see cref="T:System.Net.WebPermission" />。</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Accept">
      <summary vsli:raw="Gets or sets the URI string accepted by the current &lt;see cref=&quot;T:System.Net.WebPermissionAttribute&quot; /&gt;.">获取或设置当前 <see cref="T:System.Net.WebPermissionAttribute" /> 接受的 URI 字符串。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Net.WebPermissionAttribute.Accept&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; when you attempt to set the value. If you wish to specify more than one Accept URI, use an additional attribute declaration statement.">当尝试设置该值时，<see cref="P:System.Net.WebPermissionAttribute.Accept" /> 不为 <see langword="null" />。 如果希望指定多个 Accept URI，请使用附加的特性声明语句。</exception>
      <returns vsli:raw="A string containing the URI accepted by the current &lt;see cref=&quot;T:System.Net.WebPermissionAttribute&quot; /&gt;.">一个字符串，包含当前 <see cref="T:System.Net.WebPermissionAttribute" /> 接受的 URI。</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.AcceptPattern">
      <summary vsli:raw="Gets or sets a regular expression pattern that describes the URI accepted by the current &lt;see cref=&quot;T:System.Net.WebPermissionAttribute&quot; /&gt;.">获取或设置正则表达式模式，该正则表达式模式描述当前 <see cref="T:System.Net.WebPermissionAttribute" /> 接受的 URI。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Net.WebPermissionAttribute.AcceptPattern&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; when you attempt to set the value. If you wish to specify more than one Accept URI, use an additional attribute declaration statement.">当尝试设置该值时，<see cref="P:System.Net.WebPermissionAttribute.AcceptPattern" /> 不为 <see langword="null" />。 如果希望指定多个 Accept URI，请使用附加的特性声明语句。</exception>
      <returns vsli:raw="A string containing a regular expression pattern that describes the URI accepted by the current &lt;see cref=&quot;T:System.Net.WebPermissionAttribute&quot; /&gt;. This string must be escaped according to the rules for encoding a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor string.">一个字符串，包含描述当前 <see cref="T:System.Net.WebPermissionAttribute" /> 接受的 URI 的正则表达式模式。 必须根据对 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数字符串编码的规则对该字符串进行转义。</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Connect">
      <summary vsli:raw="Gets or sets the URI connection string controlled by the current &lt;see cref=&quot;T:System.Net.WebPermissionAttribute&quot; /&gt;.">获取或设置当前 <see cref="T:System.Net.WebPermissionAttribute" /> 控制的 URI 连接字符串。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Net.WebPermissionAttribute.Connect&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; when you attempt to set the value. If you wish to specify more than one Connect URI, use an additional attribute declaration statement.">当尝试设置该值时，<see cref="P:System.Net.WebPermissionAttribute.Connect" /> 不为 <see langword="null" />。 如果希望指定多个 Connect URI，请使用附加的特性声明语句。</exception>
      <returns vsli:raw="A string containing the URI connection controlled by the current &lt;see cref=&quot;T:System.Net.WebPermissionAttribute&quot; /&gt;.">一个字符串，包含当前 <see cref="T:System.Net.WebPermissionAttribute" /> 控制的 URI 连接。</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.ConnectPattern">
      <summary vsli:raw="Gets or sets a regular expression pattern that describes the URI connection controlled by the current &lt;see cref=&quot;T:System.Net.WebPermissionAttribute&quot; /&gt;.">获取或设置描述当前 <see cref="T:System.Net.WebPermissionAttribute" /> 控制的 URI 连接的正则表达式模式。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Net.WebPermissionAttribute.ConnectPattern&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; when you attempt to set the value. If you wish to specify more than one connect URI, use an additional attribute declaration statement.">当尝试设置该值时，<see cref="P:System.Net.WebPermissionAttribute.ConnectPattern" /> 不为 <see langword="null" />。 如果希望指定多个 Connect URI，请使用附加的特性声明语句。</exception>
      <returns vsli:raw="A string containing a regular expression pattern that describes the URI connection controlled by this &lt;see cref=&quot;T:System.Net.WebPermissionAttribute&quot; /&gt;.">一个字符串，包含描述该 <see cref="T:System.Net.WebPermissionAttribute" /> 控制的 URI 连接的正则表达式模式。</returns>
    </member>
    <member name="T:System.Security.CodeAccessPermission">
      <summary vsli:raw="Defines the underlying structure of all code access permissions.">定义所有代码访问权限的基础结构。</summary>
    </member>
    <member name="M:System.Security.CodeAccessPermission.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.CodeAccessPermission&quot; /&gt; class.">初始化 <see cref="T:System.Security.CodeAccessPermission" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Assert">
      <summary vsli:raw="Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource. Using &lt;see cref=&quot;M:System.Security.CodeAccessPermission.Assert&quot; /&gt; can create security issues.">声明调用代码能够通过调用此方法的代码，访问受权限请求保护的资源，即使未对堆栈中处于较高位置的调用方授予访问该资源的权限。 使用 <see cref="M:System.Security.CodeAccessPermission.Assert" /> 会引起安全问题。</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The calling code does not have &lt;see cref=&quot;F:System.Security.Permissions.SecurityPermissionFlag.Assertion&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; There is already an active &lt;see cref=&quot;M:System.Security.CodeAccessPermission.Assert&quot; /&gt; for the current frame.">调用代码没有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />。  
  
或 
已存在一个用于当前帧的活动的 <see cref="M:System.Security.CodeAccessPermission.Assert" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Copy">
      <summary vsli:raw="When implemented by a derived class, creates and returns an identical copy of the current permission object.">由派生类实现时，创建并返回当前权限对象的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission object.">当前权限对象的副本。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Demand">
      <summary vsli:raw="Forces a &lt;see cref=&quot;T:System.Security.SecurityException&quot; /&gt; at run time if all callers higher in the call stack have not been granted the permission specified by the current instance.">如果未对调用堆栈中处于较高位置的所有调用方授予当前实例所指定的权限，则在运行时强制 <see cref="T:System.Security.SecurityException" />。</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have the permission specified by the current instance.  &#xA;  &#xA; -or-  &#xA;  &#xA; A caller higher in the call stack has called &lt;see cref=&quot;M:System.Security.CodeAccessPermission.Deny&quot; /&gt; on the current permission object.">调用堆栈中处于较高位置的调用方不具有当前实例所指定的权限。  
  
或 
调用堆栈中处于较高位置的调用方已经对当前权限对象调用了 <see cref="M:System.Security.CodeAccessPermission.Deny" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Deny">
      <summary vsli:raw="Prevents callers higher in the call stack from using the code that calls this method to access the resource specified by the current instance.">防止处于调用堆栈较高位置的调用函数使用可以调用此方法来访问当前实例指定资源的代码。</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="There is already an active &lt;see cref=&quot;M:System.Security.CodeAccessPermission.Deny&quot; /&gt; for the current frame.">已存在一个用于当前帧的活动的 <see cref="M:System.Security.CodeAccessPermission.Deny" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Security.CodeAccessPermission&quot; /&gt; object is equal to the current &lt;see cref=&quot;T:System.Security.CodeAccessPermission&quot; /&gt;.">确定指定的 <see cref="T:System.Security.CodeAccessPermission" /> 对象是否等于当前的 <see cref="T:System.Security.CodeAccessPermission" />。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Security.CodeAccessPermission&quot; /&gt; object to compare with the current &lt;see cref=&quot;T:System.Security.CodeAccessPermission&quot; /&gt;.">要与当前的 <see cref="T:System.Security.CodeAccessPermission" /> 比较的 <see cref="T:System.Security.CodeAccessPermission" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Security.CodeAccessPermission&quot; /&gt; object is equal to the current &lt;see cref=&quot;T:System.Security.CodeAccessPermission&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Security.CodeAccessPermission" /> 对象等于当前的 <see cref="T:System.Security.CodeAccessPermission" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.">当在派生类中替代时，用 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="elem" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;elem&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="elem" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;elem&quot; /&gt; parameter does not contain the XML encoding for an instance of the same type as the current instance.  &#xA;  &#xA; -or-  &#xA;  &#xA; The version number of the &lt;paramref name=&quot;elem&quot; /&gt; parameter is not supported.">
        <paramref name="elem" /> 参数不包含与当前实例类型相同的实例的 XML 编码。  
  
或 
不支持 <paramref name="elem" /> 参数的版本号。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.GetHashCode">
      <summary vsli:raw="Gets a hash code for the &lt;see cref=&quot;T:System.Security.CodeAccessPermission&quot; /&gt; object that is suitable for use in hashing algorithms and data structures such as a hash table.">获取 <see cref="T:System.Security.CodeAccessPermission" /> 对象的哈希代码，此代码适合在哈希算法和数据结构（例如哈希表）中使用。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Security.CodeAccessPermission&quot; /&gt; object.">当前 <see cref="T:System.Security.CodeAccessPermission" /> 对象的哈希代码。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.">通过派生类实现时，创建和返回是当前权限和指定权限的交集的权限。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not an instance of the same class as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且是与当前权限不属于同一类的实例。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="When implemented by a derived class, determines whether the current permission is a subset of the specified permission.">通过派生类实现时，确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.PermitOnly">
      <summary vsli:raw="Prevents callers higher in the call stack from using the code that calls this method to access all resources except for the resource specified by the current instance.">防止处于调用堆栈较高位置的调用函数使用此代码，此代码将调用此方法来访问除当前实例指定的资源以外的所有资源。</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="There is already an active &lt;see cref=&quot;M:System.Security.CodeAccessPermission.PermitOnly&quot; /&gt; for the current frame.">已存在一个用于当前帧的活动的 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertAll">
      <summary vsli:raw="Causes all previous overrides for the current frame to be removed and no longer in effect.">导致当前帧以前所有的重写被删除且不再有效。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no previous &lt;see cref=&quot;M:System.Security.CodeAccessPermission.Assert&quot; /&gt;, &lt;see cref=&quot;M:System.Security.CodeAccessPermission.Deny&quot; /&gt;, or &lt;see cref=&quot;M:System.Security.CodeAccessPermission.PermitOnly&quot; /&gt; for the current frame.">此当前帧没有以前的 <see cref="M:System.Security.CodeAccessPermission.Assert" />、<see cref="M:System.Security.CodeAccessPermission.Deny" /> 或 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertAssert">
      <summary vsli:raw="Causes any previous &lt;see cref=&quot;M:System.Security.CodeAccessPermission.Assert&quot; /&gt; for the current frame to be removed and no longer in effect.">导致当前帧以前所有的 <see cref="M:System.Security.CodeAccessPermission.Assert" /> 被删除且不再有效。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no previous &lt;see cref=&quot;M:System.Security.CodeAccessPermission.Assert&quot; /&gt; for the current frame.">当前帧不再具有以前的 <see cref="M:System.Security.CodeAccessPermission.Assert" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertDeny">
      <summary vsli:raw="Causes any previous &lt;see cref=&quot;M:System.Security.CodeAccessPermission.Deny&quot; /&gt; for the current frame to be removed and no longer in effect.">导致当前帧以前所有的 <see cref="M:System.Security.CodeAccessPermission.Deny" /> 被删除且不再有效。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no previous &lt;see cref=&quot;M:System.Security.CodeAccessPermission.Deny&quot; /&gt; for the current frame.">当前帧不再具有以前的 <see cref="M:System.Security.CodeAccessPermission.Deny" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertPermitOnly">
      <summary vsli:raw="Causes any previous &lt;see cref=&quot;M:System.Security.CodeAccessPermission.PermitOnly&quot; /&gt; for the current frame to be removed and no longer in effect.">导致当前帧以前所有的 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> 被删除且不再有效。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no previous &lt;see cref=&quot;M:System.Security.CodeAccessPermission.PermitOnly&quot; /&gt; for the current frame.">当前帧不再具有以前的 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.ToString">
      <summary vsli:raw="Creates and returns a string representation of the current permission object.">创建并返回当前权限对象的字符串表示形式。</summary>
      <returns vsli:raw="A string representation of the current permission object.">当前权限对象的字符串表示形式。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.ToXml">
      <summary vsli:raw="When overridden in a derived class, creates an XML encoding of the security object and its current state.">当在派生类中重写时，创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.">当在派生类中重写时，则创建属于当前权限与指定权限的并集的权限。</summary>
      <param name="other" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;. This method is only supported at this level when passed &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> 参数不是 <see langword="null" />。 当传递 <see langword="null" /> 时，此方法仅在此级别受支持。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="T:System.Security.HostProtectionException">
      <summary vsli:raw="The exception that is thrown when a denied host resource is detected.">检测到被拒绝的主机资源时引发的异常。</summary>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.HostProtectionException&quot; /&gt; class with default values.">使用默认值初始化 <see cref="T:System.Security.HostProtectionException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.HostProtectionException&quot; /&gt; class using the provided serialization information and streaming context.">使用提供的序列化信息和流上下文初始化 <see cref="T:System.Security.HostProtectionException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">承载序列化对象数据的对象。</param>
      <param name="context" vsli:raw="Contextual information about the source or destination.">有关源或目标的上下文信息。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.HostProtectionException&quot; /&gt; class with a specified error message.">用指定的错误消息初始化 <see cref="T:System.Security.HostProtectionException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The message that describes the error.">描述错误的消息。</param>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.HostProtectionException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Security.HostProtectionException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">导致当前异常的异常。 如果 <c>innerException</c> 参数不为 <see langword="null" />，则当前异常会在处理内部异常的 <see langword="catch" /> 块中引发。</param>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Security.Permissions.HostProtectionResource,System.Security.Permissions.HostProtectionResource)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.HostProtectionException&quot; /&gt; class with a specified error message, the protected host resources, and the host resources that caused the exception to be thrown.">用指定的错误消息、受保护的主机资源和导致引发异常的主机资源初始化 <see cref="T:System.Security.HostProtectionException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="protectedResources" vsli:raw="A bitwise combination of the enumeration values that specify the host resources that are inaccessible to partially trusted code.">枚举值的按位组合，这些值指定部分受信任的代码不可访问的主机资源。</param>
      <param name="demandedResources" vsli:raw="A bitwise combination of the enumeration values that specify the demanded host resources.">枚举值的按位组合，这些值指定所需的主机资源。</param>
    </member>
    <member name="M:System.Security.HostProtectionException.ToString">
      <summary vsli:raw="Returns a string representation of the current host protection exception.">返回当前主机保护异常的字符串表示形式。</summary>
      <returns vsli:raw="A string representation of the current &lt;see cref=&quot;T:System.Security.HostProtectionException&quot; /&gt;.">当前 <see cref="T:System.Security.HostProtectionException" /> 的字符串表示形式。</returns>
    </member>
    <member name="P:System.Security.HostProtectionException.DemandedResources">
      <summary vsli:raw="Gets or sets the demanded host protection resources that caused the exception to be thrown.">获取或设置导致引发异常的要求的主机保护资源。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.HostProtectionResource&quot; /&gt; values identifying the protection resources causing the exception to be thrown. The default is &lt;see cref=&quot;F:System.Security.Permissions.HostProtectionResource.None&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.HostProtectionResource" /> 值的按位组合，用于标识导致引发异常的保护资源。 默认值为 <see cref="F:System.Security.Permissions.HostProtectionResource.None" />。</returns>
    </member>
    <member name="P:System.Security.HostProtectionException.ProtectedResources">
      <summary vsli:raw="Gets or sets the host protection resources that are inaccessible to partially trusted code.">获取或设置部分受信任的代码不可访问的主机保护资源。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.HostProtectionResource&quot; /&gt; values identifying the inaccessible host protection categories. The default is &lt;see cref=&quot;F:System.Security.Permissions.HostProtectionResource.None&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.HostProtectionResource" /> 值的按位组合，用于标识不可访问的主机保护类别。 默认值为 <see cref="F:System.Security.Permissions.HostProtectionResource.None" />。</returns>
    </member>
    <member name="T:System.Security.HostSecurityManager">
      <summary vsli:raw="Allows the control and customization of security behavior for application domains.">允许控制和自定义应用程序域的安全行为。</summary>
    </member>
    <member name="M:System.Security.HostSecurityManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.HostSecurityManager&quot; /&gt; class.">初始化 <see cref="T:System.Security.HostSecurityManager" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
      <summary vsli:raw="Determines whether an application should be executed.">决定是否应执行应用程序。</summary>
      <param name="applicationEvidence" vsli:raw="The evidence for the application to be activated.">要激活的应用程序的证据。</param>
      <param name="activatorEvidence" vsli:raw="Optionally, the evidence for the activating application domain.">也可以是正在激活的应用程序域的证据。</param>
      <param name="context" vsli:raw="The trust context.">信任上下文。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;applicationEvidence&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="applicationEvidence" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Hosting.ActivationArguments&quot; /&gt; object could not be found in the application evidence.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Runtime.Hosting.ActivationArguments.ActivationContext&quot; /&gt; property in the activation arguments is &lt;see langword=&quot;null&quot; /&gt;.">未能在应用程序证据中找到 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> 对象。  
  
- 或 - 
激活参数中的 <see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /> 属性为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; grant set does not contain the minimum request set specified by the &lt;see cref=&quot;T:System.ActivationContext&quot; /&gt;.">
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 授予集不包含由 <see cref="T:System.ActivationContext" /> 指定的最小请求集。</exception>
      <returns vsli:raw="An object that contains trust information about the application.">一个对象，包含有关应用程序的信任信息。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
      <summary vsli:raw="Requests a specific evidence type for the application domain.">请求应用程序域的特定证据类型。</summary>
      <param name="evidenceType" vsli:raw="The evidence type.">证据类型。</param>
      <returns vsli:raw="The requested application domain evidence.">请求的应用程序域证据。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
      <summary vsli:raw="Requests a specific evidence type for the assembly.">请求程序集的特定证据类型。</summary>
      <param name="evidenceType" vsli:raw="The evidence type.">证据类型。</param>
      <param name="assembly" vsli:raw="The target assembly.">目标程序集。</param>
      <returns vsli:raw="The requested assembly evidence.">请求的程序集证据。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
      <summary vsli:raw="Determines which evidence types the host can supply for the application domain, if requested.">确定主机可以为应用程序域提供哪些证据类型（如果请求了证据类型）。</summary>
      <returns vsli:raw="An array of evidence types.">证据类型的数组。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
      <summary vsli:raw="Determines which evidence types the host can supply for the assembly, if requested.">确定主机可以为程序集提供哪些证据类型（如果请求了证据类型）。</summary>
      <param name="assembly" vsli:raw="The target assembly.">目标程序集。</param>
      <returns vsli:raw="An array of evidence types.">证据类型的数组。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
      <summary vsli:raw="Provides the application domain evidence for an assembly being loaded.">为正在加载的程序集提供应用程序域证据。</summary>
      <param name="inputEvidence" vsli:raw="Additional evidence to add to the &lt;see cref=&quot;T:System.AppDomain&quot; /&gt; evidence.">要添加到 <see cref="T:System.AppDomain" /> 证据中的附加证据。</param>
      <returns vsli:raw="The evidence to be used for the &lt;see cref=&quot;T:System.AppDomain&quot; /&gt;.">要用于 <see cref="T:System.AppDomain" /> 的证据。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
      <summary vsli:raw="Provides the assembly evidence for an assembly being loaded.">为正在加载的程序集提供程序集证据。</summary>
      <param name="loadedAssembly" vsli:raw="The loaded assembly.">加载的程序集。</param>
      <param name="inputEvidence" vsli:raw="Additional evidence to add to the assembly evidence.">要添加到程序集证据中的附加证据。</param>
      <returns vsli:raw="The evidence to be used for the assembly.">要用于程序集的证据。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary vsli:raw="Determines what permissions to grant to code based on the specified evidence.">根据指定的证据确定向代码授予什么权限。</summary>
      <param name="evidence" vsli:raw="The evidence set used to evaluate policy.">用于评估策略的证据集。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;evidence&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="evidence" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="The permission set that can be granted by the security system.">可由安全系统授予的权限集。</returns>
    </member>
    <member name="P:System.Security.HostSecurityManager.DomainPolicy">
      <summary vsli:raw="When overridden in a derived class, gets the security policy for the current application domain.">在派生类中重写时，获取当前应用程序域的安全策略。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &amp;lt;legacyCasPolicy&amp;gt; element.">此方法使用代码访问安全性 (CAS) 策略，该策略在 .NET Framework 4 中已过时。 若要使 CAS 策略与早期版本的 .NET Framework 兼容，请使用 &lt;legacyCasPolicy&gt; 元素。</exception>
      <returns vsli:raw="The security policy for the current application domain. The default is &lt;see langword=&quot;null&quot; /&gt;.">当前应用程序域的安全策略。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Security.HostSecurityManager.Flags">
      <summary vsli:raw="Gets the flag representing the security policy components of concern to the host.">获取表示与主机相关的安全策略组件的标志。</summary>
      <returns vsli:raw="One of the enumeration values that specifies security policy components. The default is &lt;see cref=&quot;F:System.Security.HostSecurityManagerOptions.AllFlags&quot; /&gt;.">用于指定安全策略组件的枚举值之一。 默认值为 <see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" />。</returns>
    </member>
    <member name="T:System.Security.HostSecurityManagerOptions">
      <summary vsli:raw="Specifies the security policy components to be used by the host security manager.">指定将由宿主安全管理器使用的安全策略组件。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.AllFlags">
      <summary vsli:raw="Use all security policy components.">使用所有安全策略组件。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence">
      <summary vsli:raw="Use the application domain evidence.">使用应用程序域证据。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence">
      <summary vsli:raw="Use the assembly evidence.">使用程序集证据。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostDetermineApplicationTrust">
      <summary vsli:raw="Route calls to the &lt;see cref=&quot;M:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)&quot; /&gt; method to the &lt;see cref=&quot;M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)&quot; /&gt; method first.">将对 <see cref="M:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)" /> 方法的调用首先传送到 <see cref="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)" /> 方法。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostPolicyLevel">
      <summary vsli:raw="Use the policy level specified in the &lt;see cref=&quot;P:System.Security.HostSecurityManager.DomainPolicy&quot; /&gt; property.">使用在 <see cref="P:System.Security.HostSecurityManager.DomainPolicy" /> 属性中指定的策略级别。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostResolvePolicy">
      <summary vsli:raw="Use the &lt;see cref=&quot;M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)&quot; /&gt; method to resolve the application evidence.">使用 <see cref="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)" /> 方法来解析应用程序证据。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.None">
      <summary vsli:raw="Use none of the security policy components.">不使用其中任何一个安全策略组件。</summary>
    </member>
    <member name="T:System.Security.IEvidenceFactory">
      <summary vsli:raw="Gets an object's &lt;see cref=&quot;T:System.Security.Policy.Evidence&quot; /&gt;.">获取对象的 <see cref="T:System.Security.Policy.Evidence" />。</summary>
    </member>
    <member name="P:System.Security.IEvidenceFactory.Evidence">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.Security.Policy.Evidence&quot; /&gt; that verifies the current object's identity.">获取验证当前对象标识的 <see cref="T:System.Security.Policy.Evidence" />。</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Security.Policy.Evidence&quot; /&gt; of the current object's identity.">当前对象标识的 <see cref="T:System.Security.Policy.Evidence" />。</returns>
    </member>
    <member name="T:System.Security.ISecurityPolicyEncodable">
      <summary vsli:raw="Supports the methods that convert permission object state to and from an XML element representation.">支持使权限对象状态与 XML 元素表示形式进行相互转换的方法。</summary>
    </member>
    <member name="M:System.Security.ISecurityPolicyEncodable.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <param name="level" vsli:raw="The policy-level context to resolve named permission set references.">解析命名权限集引用的策略级上下文。</param>
    </member>
    <member name="M:System.Security.ISecurityPolicyEncodable.ToXml(System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <param name="level" vsli:raw="The policy-level context to resolve named permission set references.">解析命名权限集引用的策略级上下文。</param>
      <returns vsli:raw="The root element of the XML representation of the policy object.">策略对象的 XML 表示形式的根元素。</returns>
    </member>
    <member name="T:System.Security.NamedPermissionSet">
      <summary vsli:raw="Defines a permission set that has a name and description associated with it. This class cannot be inherited.">定义具有名称以及相关说明的权限集。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; class from another named permission set.">从另一个命名的权限集初始化 <see cref="T:System.Security.NamedPermissionSet" /> 类的新实例。</summary>
      <param name="permSet" vsli:raw="The named permission set from which to create the new instance.">从中创建新实例的命名的权限集。</param>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String)">
      <summary vsli:raw="Initializes a new, empty instance of the &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; class with the specified name.">用指定的名称初始化 <see cref="T:System.Security.NamedPermissionSet" /> 类的新的空实例。</summary>
      <param name="name" vsli:raw="The name for the new named permission set.">新命名的权限集名。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or is an empty string (&quot;&quot;).">
        <paramref name="name" /> 参数为 <see langword="null" /> 或者是空字符串 ("")。</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; class with the specified name in either an unrestricted or a fully restricted state.">在无限制状态或完全受限状态，用指定名称初始化 <see cref="T:System.Security.NamedPermissionSet" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name for the new named permission set.">新命名的权限集名。</param>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or is an empty string (&quot;&quot;).">
        <paramref name="name" /> 参数为 <see langword="null" /> 或者是空字符串 ("")。</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; class with the specified name from a permission set.">用来自权限集的指定名称初始化 <see cref="T:System.Security.NamedPermissionSet" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name for the named permission set.">命名的权限集的名称。</param>
      <param name="permSet" vsli:raw="The permission set from which to take the value of the new named permission set.">从中取得新命名的权限集的值的权限集。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or is an empty string (&quot;&quot;).">
        <paramref name="name" /> 参数为 <see langword="null" /> 或者是空字符串 ("")。</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Copy">
      <summary vsli:raw="Creates a permission set copy from a named permission set.">从命名的权限集创建权限集副本。</summary>
      <returns vsli:raw="A permission set that is a copy of the permissions in the named permission set.">作为命名的权限集内权限副本的权限集。</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Copy(System.String)">
      <summary vsli:raw="Creates a copy of the named permission set with a different name but the same permissions.">用不同的名称但相同的权限创建一个命名的权限集副本。</summary>
      <param name="name" vsli:raw="The name for the new named permission set.">新命名的权限集名。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or is an empty string (&quot;&quot;).">
        <paramref name="name" /> 参数为 <see langword="null" /> 或者是空字符串 ("")。</exception>
      <returns vsli:raw="A copy of the named permission set with the new name.">具有新名称的命名的权限集副本。</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; object is equal to the current &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt;.">确定指定的 <see cref="T:System.Security.NamedPermissionSet" /> 对象是否等于当前的 <see cref="T:System.Security.NamedPermissionSet" />。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; object to compare with the current &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt;.">要与当前的 <see cref="T:System.Security.NamedPermissionSet" /> 比较的 <see cref="T:System.Security.NamedPermissionSet" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Security.NamedPermissionSet" /> 等于当前的 <see cref="T:System.Security.NamedPermissionSet" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a named permission set with a specified state from an XML encoding.">通过 XML 编码用指定的状态重新构造命名的权限集。</summary>
      <param name="et" vsli:raw="A security element containing the XML representation of the named permission set.">包含命名的权限集 XML 表示形式的安全元素。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;et&quot; /&gt; parameter is not a valid representation of a named permission set.">
        <paramref name="et" /> 参数不是命名的权限集的有效表示形式。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;et&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="et" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.GetHashCode">
      <summary vsli:raw="Gets a hash code for the &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; object that is suitable for use in hashing algorithms and data structures such as a hash table.">获取 <see cref="T:System.Security.NamedPermissionSet" /> 对象的哈希代码，此代码适合在哈希算法和数据结构（例如哈希表）中使用。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; object.">当前 <see cref="T:System.Security.NamedPermissionSet" /> 对象的哈希代码。</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.ToXml">
      <summary vsli:raw="Creates an XML element description of the named permission set.">创建命名权限集的 XML 元素说明。</summary>
      <returns vsli:raw="The XML representation of the named permission set.">命名的权限集的 XML 表示形式。</returns>
    </member>
    <member name="P:System.Security.NamedPermissionSet.Description">
      <summary vsli:raw="Gets or sets the text description of the current named permission set.">获取或设置当前命名的权限集的文本说明。</summary>
      <returns vsli:raw="A text description of the named permission set.">命名的权限集的文本说明。</returns>
    </member>
    <member name="P:System.Security.NamedPermissionSet.Name">
      <summary vsli:raw="Gets or sets the name of the current named permission set.">获取或设置当前命名的权限集的名称。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The name is &lt;see langword=&quot;null&quot; /&gt; or is an empty string (&quot;&quot;).">名称为 <see langword="null" /> 或者是一个空字符串（“”）。</exception>
      <returns vsli:raw="The name of the named permission set.">命名的权限集的名称。</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermission">
      <summary vsli:raw="Controls the ability to access encrypted data and memory. This class cannot be inherited.">控制访问加密数据和内存的权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.DataProtectionPermission&quot; /&gt; class with the specified permission flags.">初始化具有指定权限标志的 <see cref="T:System.Security.Permissions.DataProtectionPermission" /> 类的新实例。</summary>
      <param name="flag" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.DataProtectionPermissionFlags&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flag&quot; /&gt; is not a valid combination of the &lt;see cref=&quot;T:System.Security.Permissions.DataProtectionPermissionFlags&quot; /&gt; values.">
        <paramref name="flag" /> 不是有效的 <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值组合。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.DataProtectionPermission&quot; /&gt; class with the specified permission state.">初始化具有指定权限状态的 <see cref="T:System.Security.Permissions.DataProtectionPermission" /> 类的一个新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; value.">
        <paramref name="state" /> 不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specific state from an XML encoding.">从 XML 编码重新构造具有特定状态的权限。</summary>
      <param name="securityElement" vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains the XML encoding used to reconstruct the permission.">一个 <see cref="T:System.Security.SecurityElement" />，其中包含用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="securityElement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The version number of &lt;paramref name=&quot;securityElement&quot; /&gt; is not supported.">
        <paramref name="securityElement" /> 不是有效的权限元素。  
  
- 或 - 
不支持 <paramref name="securityElement" /> 的版本号。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and does not specify a permission of the same type as the current permission.">
        <paramref name="target" /> 不是 <see langword="null" />，并且未指定同一类型的权限为当前权限。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission to test for the subset relationship. This permission must be the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and does not specify a permission of the same type as the current permission.">
        <paramref name="target" /> 不是 <see langword="null" />，并且未指定同一类型的权限为当前权限。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including state information.">权限及状态信息的 XML 编码。</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and does not specify a permission of the same type as the current permission.">
        <paramref name="target" /> 不是 <see langword="null" />，并且未指定同一类型的权限为当前权限。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermission.Flags">
      <summary vsli:raw="Gets or sets the data and memory protection flags.">获取或设置数据和内存保护标志。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified value is not a valid combination of the &lt;see cref=&quot;T:System.Security.Permissions.DataProtectionPermissionFlags&quot; /&gt; values.">指定的值不是有效的 <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值组合。</exception>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.DataProtectionPermissionFlags&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值的按位组合。</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.DataProtectionPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.DataProtectionPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.DataProtectionPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.DataProtectionPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.DataProtectionPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.DataProtectionPermission" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.DataProtectionPermission&quot; /&gt; that corresponds to the attribute.">与此特性对应的 <see cref="T:System.Security.Permissions.DataProtectionPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.Flags">
      <summary vsli:raw="Gets or sets the data protection permissions.">获取或设置数据保护权限。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.DataProtectionPermissionFlags&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值的按位组合。 默认值为 <see cref="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData">
      <summary vsli:raw="Gets or sets a value indicating whether data can be encrypted using the &lt;see cref=&quot;T:System.Security.Cryptography.ProtectedData&quot; /&gt; class.">获取或设置一个值，该值指示是否可使用 <see cref="T:System.Security.Cryptography.ProtectedData" /> 类来加密数据。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if data can be encrypted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以加密数据，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory">
      <summary vsli:raw="Gets or sets a value indicating whether memory can be encrypted using the &lt;see cref=&quot;T:System.Security.Cryptography.ProtectedMemory&quot; /&gt; class.">获取或设置一个值，该值指示是否可使用 <see cref="T:System.Security.Cryptography.ProtectedMemory" /> 类来加密内存。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if memory can be encrypted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以加密内存，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData">
      <summary vsli:raw="Gets or sets a value indicating whether data can be unencrypted using the &lt;see cref=&quot;T:System.Security.Cryptography.ProtectedData&quot; /&gt; class.">获取或设置一个值，该值指示是否可使用 <see cref="T:System.Security.Cryptography.ProtectedData" /> 类解密数据。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if data can be unencrypted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果数据可以解密，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory">
      <summary vsli:raw="Gets or sets a value indicating whether memory can be unencrypted using the &lt;see cref=&quot;T:System.Security.Cryptography.ProtectedMemory&quot; /&gt; class.">获取或设置一个值，该值指示是否可使用 <see cref="T:System.Security.Cryptography.ProtectedMemory" /> 类解密内存。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if memory can be unencrypted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果内存可以解密，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionFlags">
      <summary vsli:raw="Specifies the access permissions for encrypting data and memory.">指定加密数据和内存的访问权限。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.AllFlags">
      <summary vsli:raw="The ability to encrypt data, encrypt memory, unencrypt data, and unencrypt memory.">加密数据、加密内存、解密数据以及解密内存的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags">
      <summary vsli:raw="No protection abilities.">没有保护能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectData">
      <summary vsli:raw="The ability to encrypt data.">加密数据的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectMemory">
      <summary vsli:raw="The ability to encrypt memory.">加密内存的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectData">
      <summary vsli:raw="The ability to unencrypt data.">解密数据的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectMemory">
      <summary vsli:raw="The ability to unencrypt memory.">解密内存的能力。</summary>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermission">
      <summary vsli:raw="Controls access to system and user environment variables. This class cannot be inherited.">控件访问系统和用户环境变量。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermission&quot; /&gt; class with the specified access to the specified environment variables.">初始化对指定环境变量具有指定访问权限的 <see cref="T:System.Security.Permissions.EnvironmentPermission" /> 类的新实例。</summary>
      <param name="flag" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值之一。</param>
      <param name="pathList" vsli:raw="A list of environment variables (semicolon-separated) to which access is granted.">向其授予访问权限的环境变量的列表（用分号分隔）。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;pathList&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pathList" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;flag&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermissionAccess&quot; /&gt;.">
        <paramref name="flag" /> 参数不是 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermission&quot; /&gt; class with either restricted or unrestricted permission as specified.">根据指定，使用受限制或不受限制的权限初始化 <see cref="T:System.Security.Permissions.EnvironmentPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary vsli:raw="Adds access for the specified environment variables to the existing state of the permission.">将指定的环境变量的访问权限添加到现有的权限状态中。</summary>
      <param name="flag" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值之一。</param>
      <param name="pathList" vsli:raw="A list of environment variables (semicolon-separated).">环境变量列表（用分号分隔）。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;pathList&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pathList" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;flag&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermissionAccess&quot; /&gt;.">
        <paramref name="flag" /> 参数不是 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="esd" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="esd" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;esd&quot; /&gt; parameter's version number is not valid.">
        <paramref name="esd" /> 参数不是有效的权限元素。  
  
- 或 - 
<paramref name="esd" /> 参数的版本号无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)">
      <summary vsli:raw="Gets all environment variables with the specified &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermissionAccess&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 获取所有环境变量。</summary>
      <param name="flag" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermissionAccess&quot; /&gt; values that represents a single type of environment variable access.">其中一个 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值，表示环境变量访问的单一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flag&quot; /&gt; is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;flag&quot; /&gt; is &lt;see cref=&quot;F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess&quot; /&gt;, which represents more than one type of environment variable access, or &lt;see cref=&quot;F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess&quot; /&gt;, which does not represent any type of environment variable access.">
        <paramref name="flag" /> 不是 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 的一个有效值。  
  
- 或 - 
 <paramref name="flag" /> 是 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" />，表示环境变量访问的多个类型，或 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" />，它不表示任何类型的环境变量的访问。</exception>
      <returns vsli:raw="A list of environment variables (semicolon-separated) for the selected flag.">针对所选标识的环境变量（以分号分隔）列表。</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary vsli:raw="Sets the specified access to the specified environment variables to the existing state of the permission.">将指定的环境变量的指定访问权限设置为该权限的现有状态。</summary>
      <param name="flag" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值之一。</param>
      <param name="pathList" vsli:raw="A list of environment variables (semicolon-separated).">环境变量列表（用分号分隔）。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;pathList&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pathList" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;flag&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermissionAccess&quot; /&gt;.">
        <paramref name="flag" /> 参数不是 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="other" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="other" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermissionAccess">
      <summary vsli:raw="Specifies access to environment variables.">指定可访问环境变量。</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess">
      <summary vsli:raw="&lt;see cref=&quot;F:System.Security.Permissions.EnvironmentPermissionAccess.Read&quot; /&gt; and &lt;see cref=&quot;F:System.Security.Permissions.EnvironmentPermissionAccess.Write&quot; /&gt; access to environment variables. &lt;see cref=&quot;F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess&quot; /&gt; represents multiple &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermissionAccess&quot; /&gt; values and causes an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; when used as the &lt;paramref name=&quot;flag&quot; /&gt; parameter for the &lt;see cref=&quot;M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)&quot; /&gt; method, which expects a single value.">对环境变量的 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /> 和 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Write" /> 访问权限。 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /> 表示多个 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值，如果将它用作 <see cref="T:System.ArgumentException" /> 方法的 <paramref name="flag" /> 参数（它需要单一值），则引发 <see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />。</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess">
      <summary vsli:raw="No access to environment variables. &lt;see cref=&quot;F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess&quot; /&gt; represents no valid &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermissionAccess&quot; /&gt; values and causes an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; when used as the parameter for &lt;see cref=&quot;M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)&quot; /&gt;, which expects a single value.">没有对环境变量的访问权限。 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" /> 不表示有效的 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值，如果将它用作 <see cref="T:System.ArgumentException" /> 的参数（它需要单一值），则引发 <see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />。</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Read">
      <summary vsli:raw="Only read access to environment variables is specified. Changing, deleting and creating environment variables is not included in this access level.">只指定了环境变量的读访问权限。 此访问级别不包含环境变量的更改、删除和创建。</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Write">
      <summary vsli:raw="Only write access to environment variables is specified. Write access includes creating and deleting environment variables as well as changing existing values. Reading environment variables is not included in this access level.">只指定了环境变量的写访问权限。 写访问权限包括创建和删除环境变量，也包括更改它们的现有值。 此访问级别不包括读取环境变量。</summary>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.EnvironmentPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.EnvironmentPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;action&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">
        <paramref name="action" /> 参数不是 <see cref="T:System.Security.Permissions.SecurityAction" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.EnvironmentPermission" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Permissions.EnvironmentPermission&quot; /&gt; that corresponds to this attribute.">与此特性对应的 <see cref="T:System.Security.Permissions.EnvironmentPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.All">
      <summary vsli:raw="Sets full access for the environment variables specified by the string value.">为该字符串值所指定的环境变量设置完全访问权限。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The get method is not supported for this property.">此属性不支持 get 方法。</exception>
      <returns vsli:raw="A list of environment variables for full access.">可以完全访问的环境变量列表。</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Read">
      <summary vsli:raw="Gets or sets read access for the environment variables specified by the string value.">获取或设置该字符串值所指定环境变量的读访问权限。</summary>
      <returns vsli:raw="A list of environment variables for read access.">可以读访问的环境变量列表。</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Write">
      <summary vsli:raw="Gets or sets write access for the environment variables specified by the string value.">获取或设置该字符串值所指定环境变量的写访问权限。</summary>
      <returns vsli:raw="A list of environment variables for write access.">可以写访问的环境变量列表。</returns>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermission">
      <summary vsli:raw="Controls the ability to access files or folders through a File dialog box. This class cannot be inherited.">控制通过“文件”对话框访问文件或文件夹的能力****。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.FileDialogPermission&quot; /&gt; class with the specified access.">使用指定的访问权限初始化 <see cref="T:System.Security.Permissions.FileDialogPermission" /> 类的新实例。</summary>
      <param name="access" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.FileDialogPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid combination of the &lt;see cref=&quot;T:System.Security.Permissions.FileDialogPermissionAccess&quot; /&gt; values.">
        <paramref name="access" /> 参数不是有效的 <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> 值组合。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.FileDialogPermission&quot; /&gt; class with either restricted or unrestricted permission, as specified.">根据指定，使用受限制或不受限制的权限初始化 <see cref="T:System.Security.Permissions.FileDialogPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values (&lt;see langword=&quot;Unrestricted&quot; /&gt; or &lt;see langword=&quot;None&quot; /&gt;).">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一（<see langword="Unrestricted" /> 或 <see langword="None" />）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="esd" vsli:raw="The XML encoding used to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="esd" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The version number of the &lt;paramref name=&quot;esd&quot; /&gt; parameter is not supported.">
        <paramref name="esd" /> 参数不是有效的权限元素。  
  
- 或 - 
不支持 <paramref name="esd" /> 参数的版本号。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including state information.">权限及状态信息的 XML 编码。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermission.Access">
      <summary vsli:raw="Gets or sets the permitted access to files.">获取或设置对文件的允许访问权限。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="An attempt is made to set the &lt;paramref name=&quot;access&quot; /&gt; parameter to a value that is not a valid combination of the &lt;see cref=&quot;T:System.Security.Permissions.FileDialogPermissionAccess&quot; /&gt; values.">试图将 <paramref name="access" /> 参数设置为 <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> 值的非有效组合的值。</exception>
      <returns vsli:raw="The permitted access to files.">对文件的允许访问权限。</returns>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermissionAccess">
      <summary vsli:raw="Specifies the type of access to files allowed through the File dialog boxes.">指定允许通过“文件”对话框访问文件的类型****。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.None">
      <summary vsli:raw="No access to files through the File dialog boxes.">没有通过“文件”对话框访问文件的权限****。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Open">
      <summary vsli:raw="Ability to open files through the File dialog boxes.">可以通过“文件”对话框打开文件****。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.OpenSave">
      <summary vsli:raw="Ability to open and save files through the File dialog boxes.">可以通过“文件”对话框打开并保存文件****。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Save">
      <summary vsli:raw="Ability to save files through the File dialog boxes.">可以通过“文件”对话框保存文件****。</summary>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.FileDialogPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.FileDialogPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.FileDialogPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.FileDialogPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.FileDialogPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.FileDialogPermission" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.FileDialogPermission&quot; /&gt; that corresponds to this attribute.">与此属性对应的 <see cref="T:System.Security.Permissions.FileDialogPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Open">
      <summary vsli:raw="Gets or sets a value indicating whether permission to open files through the file dialog is declared.">获取或设置一个值，该值指示是否声明了通过文件对话框打开文件的权限。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if permission to open files through the file dialog is declared; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果声明了通过文件对话框打开文件的权限，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Save">
      <summary vsli:raw="Gets or sets a value indicating whether permission to save files through the file dialog is declared.">获取或设置一个值，该值指示是否声明了通过文件对话框保存文件的权限。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if permission to save files through the file dialog is declared; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果声明了通过文件对话框保存文件的权限，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermission">
      <summary vsli:raw="Controls the ability to access files and folders. This class cannot be inherited.">控制文件和文件夹的访问权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; class with the specified access to the designated file or directory and the specified access rights to file control information.">使用对指定文件或目录的指定访问权限和对文件控制信息的指定访问权限初始化 <see cref="T:System.Security.Permissions.FileIOPermission" /> 类的新实例。</summary>
      <param name="access" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt; enumeration values.">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 枚举值的按位组合。</param>
      <param name="actions" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlActions&quot; /&gt; enumeration values.">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> 枚举值的按位组合。</param>
      <param name="path" vsli:raw="The absolute path of the file or directory.">文件或目录的绝对路径。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;path&quot; /&gt; parameter is not a valid string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;path&quot; /&gt; parameter does not specify the absolute path to the file or directory.">
        <paramref name="access" /> 参数不是 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 的有效值。  
  
- 或 - 
<paramref name="path" /> 参数不是有效的字符串。  
  
- 或 - 
<paramref name="path" /> 参数未指定文件或目录的绝对路径。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; class with the specified access to the designated files and directories and the specified access rights to file control information.">使用对指定文件和目录的指定访问权限和对文件控制信息的指定访问权限初始化 <see cref="T:System.Security.Permissions.FileIOPermission" /> 类的新实例。</summary>
      <param name="access" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt; enumeration values.">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 枚举值的按位组合。</param>
      <param name="actions" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlActions&quot; /&gt; enumeration values.">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> 枚举值的按位组合。</param>
      <param name="pathList" vsli:raw="An array containing the absolute paths of the files and directories.">包含文件和目录的绝对路径的数组。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; An entry in the &lt;paramref name=&quot;pathList&quot; /&gt; array is not a valid string.">
        <paramref name="access" /> 参数不是 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 的有效值。  
  
- 或 - 
<paramref name="pathList" /> 数组中的条目不是有效的字符串。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; class with the specified access to the designated file or directory.">初始化对指定文件或目录具有指定访问权限的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 类的新实例。</summary>
      <param name="access" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt; enumeration values.">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 枚举值的按位组合。</param>
      <param name="path" vsli:raw="The absolute path of the file or directory.">文件或目录的绝对路径。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;path&quot; /&gt; parameter is not a valid string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;path&quot; /&gt; parameter does not specify the absolute path to the file or directory.">
        <paramref name="access" /> 参数不是 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 的有效值。  
  
- 或 - 
<paramref name="path" /> 参数不是有效的字符串。  
  
- 或 - 
<paramref name="path" /> 参数未指定文件或目录的绝对路径。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; class with the specified access to the designated files and directories.">初始化对指定文件和目录具有指定访问权限的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 类的新实例。</summary>
      <param name="access" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt; enumeration values.">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 枚举值的按位组合。</param>
      <param name="pathList" vsli:raw="An array containing the absolute paths of the files and directories.">包含文件和目录的绝对路径的数组。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; An entry in the &lt;paramref name=&quot;pathList&quot; /&gt; array is not a valid string.">
        <paramref name="access" /> 参数不是 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 的有效值。  
  
- 或 - 
<paramref name="pathList" /> 数组中的条目不是有效的字符串。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; class with fully restricted or unrestricted permission as specified.">根据指定，使用完全受限制或不受限制的权限初始化 <see cref="T:System.Security.Permissions.FileIOPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; enumeration values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 枚举值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary vsli:raw="Adds access for the specified file or directory to the existing state of the permission.">将指定文件或目录的访问权限添加到现有的权限状态。</summary>
      <param name="access" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值的按位组合。</param>
      <param name="path" vsli:raw="The absolute path of a file or directory.">文件或目录的绝对路径。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;path&quot; /&gt; parameter is not a valid string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;path&quot; /&gt; parameter did not specify the absolute path to the file or directory.">
        <paramref name="access" /> 参数不是 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 的有效值。  
  
- 或 - 
<paramref name="path" /> 参数不是有效的字符串。  
  
- 或 - 
<paramref name="path" /> 参数未指定文件或目录的绝对路径。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;path&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;paramref name=&quot;path&quot; /&gt; parameter has an invalid format.">
        <paramref name="path" /> 参数的格式无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary vsli:raw="Adds access for the specified files and directories to the existing state of the permission.">将指定文件和目录的访问权限添加到现有的权限状态中。</summary>
      <param name="access" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值的按位组合。</param>
      <param name="pathList" vsli:raw="An array containing the absolute paths of the files and directories.">包含文件和目录的绝对路径的数组。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; An entry in the &lt;paramref name=&quot;pathList&quot; /&gt; array is not valid.">
        <paramref name="access" /> 参数不是 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 的有效值。  
  
- 或 - 
<paramref name="pathList" /> 数组中的条目无效。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="An entry in the &lt;paramref name=&quot;pathList&quot; /&gt; array has an invalid format.">
        <paramref name="pathList" /> 数组中的条目具有无效的格式。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;pathList&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pathList" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; object is equal to the current &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt;.">确定指定的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 对象是否等于当前的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; object to compare with the current &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt;.">要与当前的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 比较的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 等于当前的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="esd" vsli:raw="The XML encoding used to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="esd" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;esd&quot; /&gt; parameter's version number is not compatible.">
        <paramref name="esd" /> 参数不是有效的权限元素。  
  
- 或 - 
<paramref name="esd" /> 参数的版本号不兼容。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.GetHashCode">
      <summary vsli:raw="Gets a hash code for the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; object that is suitable for use in hashing algorithms and data structures such as a hash table.">获取 <see cref="T:System.Security.Permissions.FileIOPermission" /> 对象的哈希代码，此代码适合在哈希算法和数据结构（例如哈希表）中使用。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; object.">当前 <see cref="T:System.Security.Permissions.FileIOPermission" /> 对象的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)">
      <summary vsli:raw="Gets all files and directories with the specified &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 权限获取所有文件和目录。</summary>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt; values that represents a single type of file access.">表示文件的单一类型访问的一个 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 的值。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;access&quot; /&gt; is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.AllAccess&quot; /&gt;, which represents more than one type of file access, or &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.NoAccess&quot; /&gt;, which does not represent any type of file access.">
        <paramref name="access" /> 不是 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 的一个有效值。  
  
- 或 - 
 <paramref name="access" /> 的值是 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> ，表示多种文件访问类型，或为 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />，表示任何文件访问类型。</exception>
      <returns vsli:raw="An array containing the paths of the files and directories to which access specified by the &lt;paramref name=&quot;access&quot; /&gt; parameter is granted.">一个数组，此数组包含了一组文件和文件夹的路径，所赋予的对这些文件和文件夹的访问权限由 <paramref name="access" /> 参数指定。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary vsli:raw="Sets the specified access to the specified file or directory, replacing the existing state of the permission.">设置指定文件或目录的特定访问权限，以替换现有的权限状态。</summary>
      <param name="access" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值的按位组合。</param>
      <param name="path" vsli:raw="The absolute path of the file or directory.">文件或目录的绝对路径。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;path&quot; /&gt; parameter is not a valid string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;path&quot; /&gt; parameter did not specify the absolute path to the file or directory.">
        <paramref name="access" /> 参数不是 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 的有效值。  
  
- 或 - 
<paramref name="path" /> 参数不是有效的字符串。  
  
- 或 - 
<paramref name="path" /> 参数未指定文件或目录的绝对路径。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary vsli:raw="Sets the specified access to the specified files and directories, replacing the current state for the specified access with the new set of paths.">设置对指定文件和目录的指定访问权限，同时用一组新路径替换指定访问权限的当前状态。</summary>
      <param name="access" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值的按位组合。</param>
      <param name="pathList" vsli:raw="An array containing the absolute paths of the files and directories.">包含文件和目录的绝对路径的数组。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; An entry in the &lt;paramref name=&quot;pathList&quot; /&gt; parameter is not a valid string.">
        <paramref name="access" /> 参数不是 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 的有效值。  
  
- 或 - 
<paramref name="pathList" /> 参数中的某一项不是有效的字符串。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="other" vsli:raw="A permission to combine with the current permission. It must be the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="other" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermission.AllFiles">
      <summary vsli:raw="Gets or sets the permitted access to all files.">获取或设置对所有文件的允许访问权限。</summary>
      <returns vsli:raw="The set of file I/O flags for all files.">所有文件的文件 I/O 标志集合。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermission.AllLocalFiles">
      <summary vsli:raw="Gets or sets the permitted access to all local files.">获取或设置对所有本地文件的允许访问权限。</summary>
      <returns vsli:raw="The set of file I/O flags for all local files.">所有本地文件的文件 I/O 标志集合。</returns>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermissionAccess">
      <summary vsli:raw="Specifies the type of file access requested.">指定所请求的文件访问权限的类型。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess">
      <summary vsli:raw="&lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Append&quot; /&gt;, &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;, &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;, and &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery&quot; /&gt; access to a file or directory. &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.AllAccess&quot; /&gt; represents multiple &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt; values and causes an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; when used as the &lt;paramref name=&quot;access&quot; /&gt; parameter for the &lt;see cref=&quot;M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)&quot; /&gt; method, which expects a single value.">对一个文件或目录的 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 访问权限。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> 表示多个 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值，如果将它用作 <see cref="T:System.ArgumentException" /> 方法的 <paramref name="access" /> 参数（它需要单一值），则引发 <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Append">
      <summary vsli:raw="Access to append material to a file or directory. &lt;see langword=&quot;FileIOPermissionAccess.Append&quot; /&gt; access includes the ability to create a new file or directory. To create files, code must also be granted both&lt;see langword=&quot;Append&quot; /&gt; and either &lt;see langword=&quot;Write&quot; /&gt; or &lt;see langword=&quot;Read&quot; /&gt; access.">向文件或目录追加内容的访问权限。 <see langword="FileIOPermissionAccess.Append" /> 访问权限包括创建新的文件和目录的能力。 要创建文件，还必须同时向代码授予 <see langword="Append" /> 权限和 <see langword="Write" /> 或 <see langword="Read" /> 权限。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess">
      <summary vsli:raw="No access to a file or directory. &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.NoAccess&quot; /&gt; represents no valid &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt; values and causes an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; when used as the parameter for &lt;see cref=&quot;M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)&quot; /&gt;, which expects a single value.">没有对文件和目录的访问权限。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> 不表示有效的 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值，如果将它用作 <see cref="T:System.ArgumentException" /> 的参数（它需要单一值），则引发 <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery">
      <summary vsli:raw="&lt;para&gt;Access to the information in the path itself. This helps protect sensitive information in the path, such as user names, as well as information about the directory structure revealed in the path. This value does not grant access to files or folders represented by the path.&lt;/para&gt;&lt;para&gt;For performance reasons, &lt;see langword=&quot;PathDiscovery&quot; /&gt; should only be granted to directories, not to files. For example, &lt;see langword=&quot;PathDiscovery&quot; /&gt; permission should be granted to paths such as C:\test and C:\test\, not C:\test\example.txt.&lt;/para&gt;">
        <para>对路径本身中的信息的访问权限。 这可以保护路径中的敏感信息（如用户名）以及有关路径中显示的目录结构的信息。 此值不授予对路径所指代的文件或文件夹的访问权限。</para>
        <para>出于性能原因，应仅向目录授予 <see langword="PathDiscovery" />，而不向文件授予该权限。 例如，应向诸如 C:\test 和 C:\test\ 等路径授予 <see langword="PathDiscovery" /> 权限，而不向 C:\test\example.txt 授予该权限。</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Read">
      <summary vsli:raw="Access to read from a file or directory.">从文件或目录中读取的访问权限。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Write">
      <summary vsli:raw="Access to write to or delete a file or directory. &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt; access includes deleting and overwriting files or directories.">写入或删除文件或目录的访问权限。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 访问权限包括对文件和目录的删除和覆盖。</summary>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.FileIOPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;action&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">
        <paramref name="action" /> 参数不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The path information for a file or directory for which access is to be secured contains invalid characters or wildcard specifiers.">要保护访问安全的文件或目录的路径信息包含无效的字符或通配说明符。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; that corresponds to this attribute.">与此属性对应的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.All">
      <summary vsli:raw="Gets or sets full access for the file or directory that is specified by the string value.">获取或设置对字符串值所指定的文件或目录的完全访问权限。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The get method is not supported for this property.">此属性不支持 get 方法。</exception>
      <returns vsli:raw="The absolute path of the file or directory for full access.">用于完全访问的文件或目录的绝对路径。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllFiles">
      <summary vsli:raw="Gets or sets the permitted access to all files.">获取或设置对所有文件的允许访问权限。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt; values that represents the permissions for all files. The default is &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.NoAccess&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值的按位组合，表示所有文件的权限。 默认值为 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles">
      <summary vsli:raw="Gets or sets the permitted access to all local files.">获取或设置对所有本地文件的允许访问权限。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt; values that represents the permissions for all local files. The default is &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.NoAccess&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值的按位组合，它表示所有本地文件的权限。 默认值为 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Append">
      <summary vsli:raw="Gets or sets append access for the file or directory that is specified by the string value.">获取或设置对字符串值所指定的文件或目录的追加访问权限。</summary>
      <returns vsli:raw="The absolute path of the file or directory for append access.">用于追加访问的文件或目录的绝对路径。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl">
      <summary vsli:raw="Gets or sets the file or directory in which access control information can be changed.">获取或设置可在其中更改访问控制信息的文件或目录。</summary>
      <returns vsli:raw="The absolute path of the file or directory in which access control information can be changed.">可在其中更改访问控制信息的文件或目录的绝对路径。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery">
      <summary vsli:raw="Gets or sets the file or directory to which to grant path discovery.">获取或设置针对其授予路径发现权限的文件或目录。</summary>
      <returns vsli:raw="The absolute path of the file or directory.">文件或目录的绝对路径。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Read">
      <summary vsli:raw="Gets or sets read access for the file or directory specified by the string value.">获取或设置对字符串值所指定的文件或目录的读访问权限。</summary>
      <returns vsli:raw="The absolute path of the file or directory for read access.">用于读访问的文件或目录的绝对路径。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl">
      <summary vsli:raw="Gets or sets the file or directory in which access control information can be viewed.">获取或设置可在其中查看访问控制信息的文件或目录。</summary>
      <returns vsli:raw="The absolute path of the file or directory in which access control information can be viewed.">可在其中查看访问控制信息的文件或目录的绝对路径。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify">
      <summary vsli:raw="Gets or sets the file or directory in which file data can be viewed and modified.">获取或设置可在其中查看并修改文件数据的文件或目录。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see langword=&quot;get&quot; /&gt; accessor is called. The accessor is provided only for C# compiler compatibility.">
        <see langword="get" /> 访问器被调用。 提供访问器是为了与 C# 编译器兼容。</exception>
      <returns vsli:raw="The absolute path of the file or directory in which file data can be viewed and modified.">可在其中查看并修改文件数据的文件或目录的绝对路径。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Write">
      <summary vsli:raw="Gets or sets write access for the file or directory specified by the string value.">获取或设置对字符串值所指定的文件或目录的写访问权限。</summary>
      <returns vsli:raw="The absolute path of the file or directory for write access.">用于写访问的文件或目录的绝对路径。</returns>
    </member>
    <member name="T:System.Security.Permissions.GacIdentityPermission">
      <summary vsli:raw="Defines the identity permission for files originating in the global assembly cache. This class cannot be inherited.">定义从全局程序集缓存中产生的文件的标识权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.GacIdentityPermission&quot; /&gt; class.">初始化 <see cref="T:System.Security.Permissions.GacIdentityPermission" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.GacIdentityPermission&quot; /&gt; class with fully restricted &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">用完全受限制的 <see cref="T:System.Security.Permissions.GacIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; value.">
        <paramref name="state" /> 不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Creates a permission from an XML encoding.">通过 XML 编码创建权限。</summary>
      <param name="securityElement" vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains the XML encoding to use to create the permission.">
        <see cref="T:System.Security.SecurityElement" />，包含用于创建权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="securityElement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The version number of &lt;paramref name=&quot;securityElement&quot; /&gt; is not valid.">
        <paramref name="securityElement" /> 不是有效的权限元素。  
  
- 或 - 
<paramref name="securityElement" /> 的版本号无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. The new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Indicates whether the current permission is a subset of the specified permission.">指示当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission object to test for the subset relationship. The permission must be of the same type as the current permission.">要测试子集关系的权限对象。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that represents the XML encoding of the permission, including any state information.">
        <see cref="T:System.Security.SecurityElement" />，表示权限的 XML 编码（包括任何状态信息）。</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the union of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限和指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="T:System.Security.Permissions.GacIdentityPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.GacIdentityPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.GacIdentityPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.GacIdentityPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; value.">使用指定的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值初始化 <see cref="T:System.Security.Permissions.GacIdentityPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;action&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; value.">
        <paramref name="action" /> 参数不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Security.Permissions.GacIdentityPermission&quot; /&gt; object.">创建一个新的 <see cref="T:System.Security.Permissions.GacIdentityPermission" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.GacIdentityPermission&quot; /&gt; that corresponds to this attribute.">与此属性对应的 <see cref="T:System.Security.Permissions.GacIdentityPermission" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.HostProtectionAttribute">
      <summary vsli:raw="Allows the use of declarative security actions to determine host protection requirements. This class cannot be inherited.">允许使用声明性安全操作来确定宿主保护要求。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.HostProtectionAttribute&quot; /&gt; class with default values.">使用默认值初始化 <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.HostProtectionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; value.">使用指定的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值初始化 <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;action&quot; /&gt; is not &lt;see cref=&quot;F:System.Security.Permissions.SecurityAction.LinkDemand&quot; /&gt;.">
        <paramref name="action" /> 不是 <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new host protection permission.">创建并返回一个新的宿主保护权限。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; that corresponds to the current attribute.">与当前特性对应的 <see cref="T:System.Security.IPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt">
      <summary vsli:raw="Gets or sets a value indicating whether external process management is exposed.">获取或设置一个值，该值指示是否公开外部进程管理。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if external process management is exposed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果公开外部进程管理，则为 <see langword="true" />，否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalThreading">
      <summary vsli:raw="Gets or sets a value indicating whether external threading is exposed.">获取或设置一个值，该值指示是否公开外部线程处理。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if external threading is exposed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果公开外部线程处理，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort">
      <summary vsli:raw="Gets or sets a value indicating whether resources might leak memory if the operation is terminated.">获取或设置一个值，该值指示当操作被终止时资源是否可能泄漏内存。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resources might leak memory on termination; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果操作终止时资源可能泄漏内存，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.Resources">
      <summary vsli:raw="Gets or sets flags specifying categories of functionality that are potentially harmful to the host.">获取或设置标志，这些标志指定可能对宿主有害的功能类别。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.HostProtectionResource&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Security.Permissions.HostProtectionResource.None&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.HostProtectionResource" /> 值的按位组合。 默认值为 <see cref="F:System.Security.Permissions.HostProtectionResource.None" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure">
      <summary vsli:raw="Gets or sets a value indicating whether the security infrastructure is exposed.">获取或设置一个值，该值指示是否公开安全基础结构。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the security infrastructure is exposed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果公开安全基础结构，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt">
      <summary vsli:raw="Gets or sets a value indicating whether self-affecting process management is exposed.">获取或设置一个值，该值指示是否公开自影响的进程管理。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if self-affecting process management is exposed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果公开自影响的进程管理，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading">
      <summary vsli:raw="Gets or sets a value indicating whether self-affecting threading is exposed.">获取或设置一个值，该值指示是否公开自影响的线程处理。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if self-affecting threading is exposed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果公开自影响的线程处理，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SharedState">
      <summary vsli:raw="Gets or sets a value indicating whether shared state is exposed.">获取或设置一个值，该值指示是否公开共享状态。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if shared state is exposed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果公开共享状态，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.Synchronization">
      <summary vsli:raw="Gets or sets a value indicating whether synchronization is exposed.">获取或设置一个值，该值指示是否公开同步。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if synchronization is exposed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果公开同步，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.UI">
      <summary vsli:raw="Gets or sets a value indicating whether the user interface is exposed.">获取或设置一个值，该值指示是否公开用户界面。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the user interface is exposed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果公开用户界面，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.HostProtectionResource">
      <summary vsli:raw="Specifies categories of functionality potentially harmful to the host if invoked by a method or class.">指定若由方法或类调用，可能对宿主有害的功能的类别。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.All">
      <summary vsli:raw="Exposes all host resources.">公开所有宿主资源。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.ExternalProcessMgmt">
      <summary vsli:raw="Might create or destroy other processes.">可以创建或销毁其他进程。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.ExternalThreading">
      <summary vsli:raw="Creates or manipulates threads other than its own, which might be harmful to the host.">创建或操作除本身以外的其他线程可能对宿主有害。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.MayLeakOnAbort">
      <summary vsli:raw="Might cause a resource leak on termination, if not protected by a safe handle or some other means of ensuring the release of resources.">如果没有安全句柄的保护，或者没有其他方法来确保资源的释放，也许将在终止时导致资源泄漏。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.None">
      <summary vsli:raw="Exposes no host resources.">不公开宿主资源。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SecurityInfrastructure">
      <summary vsli:raw="Exposes the security infrastructure.">公开安全性基础结构。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingProcessMgmt">
      <summary vsli:raw="Might exit the current process, terminating the server.">可以退出当前进程，终止服务器。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingThreading">
      <summary vsli:raw="Manipulates threads in a way that only affects user code.">以只影响用户代码的方式操作线程。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SharedState">
      <summary vsli:raw="Exposes state that might be shared between threads.">公开可能在线程间共享的状态。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.Synchronization">
      <summary vsli:raw="Exposes synchronization.">公开同步。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.UI">
      <summary vsli:raw="Exposes the user interface.">公开用户界面。</summary>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageContainment">
      <summary vsli:raw="Specifies the permitted use of isolated storage.">指定独立存储区所允许的用途。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser">
      <summary vsli:raw="Unlimited administration ability for the user store. Allows browsing and deletion of the entire user store, but not read access other than the user's own domain/assembly identity.">对用户存储区的无限制的管理能力。 允许浏览和删除整个用户存储区，但除用户自己的域/程序集标识外，不允许进行读访问。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByMachine">
      <summary vsli:raw="Storage is isolated first by computer and then by application. This provides a data store for the application that is accessible in any domain context. The per-application data compartment requires additional trust because it potentially provides a &quot;tunnel&quot; between applications that could compromise the data isolation of applications in particular Web sites.">存储首先按计算机隔离，然后按应用程序隔离。 这为在任何域上下文中均可访问的应用程序提供了数据存储区。 基于应用程序的数据隔离舱需要额外的信任，原因是数据隔离舱可能会在应用程序之间提供“隧道”，从而危及特定网站中应用程序的数据隔离。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByRoamingUser">
      <summary vsli:raw="Storage is isolated first by user and then by application evidence. Storage will roam if Windows user data roaming is enabled. This provides a data store for the application that is accessible in any domain context. The per-application data compartment requires additional trust because it potentially provides a &quot;tunnel&quot; between applications that could compromise the data isolation of applications in particular Web sites.">存储首先按用户隔离，然后按应用程序证据隔离。 当启用 Windows 用户数据漫游时，存储将漫游。 这为在任何域上下文中均可访问的应用程序提供了数据存储区。 基于应用程序的数据隔离舱需要额外的信任，原因是数据隔离舱可能会在应用程序之间提供“隧道”，从而危及特定网站中应用程序的数据隔离。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByUser">
      <summary vsli:raw="Storage is isolated first by user and then by application. Storage is also isolated by computer. This provides a data store for the application that is accessible in any domain context. The per-application data compartment requires additional trust because it potentially provides a &quot;tunnel&quot; between applications that could compromise the data isolation of applications in particular Web sites.">存储首先按用户隔离，然后按应用程序隔离。 存储也被计算机隔离。 这为在任何域上下文中均可访问的应用程序提供了数据存储区。 基于应用程序的数据隔离舱需要额外的信任，原因是数据隔离舱可能会在应用程序之间提供“隧道”，从而危及特定网站中应用程序的数据隔离。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByMachine">
      <summary vsli:raw="Storage is isolated first by computer and then by code assembly. This provides a data store for the assembly that is accessible in any domain context. The per-assembly data compartment requires additional trust because it potentially provides a &quot;tunnel&quot; between applications that could compromise the data isolation of applications in particular Web sites.">存储首先按计算机隔离，然后按代码程序集隔离。 这为在任何域上下文中都可访问的程序集提供了数据存储区。 基于程序集的数据室需要额外的信任，因为它可能在应用程序之间提供“隧道”，该隧道会危及特定网站中应用程序的数据隔离。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByRoamingUser">
      <summary vsli:raw="Storage is isolated first by user and then by assembly evidence. Storage will roam if Windows user data roaming is enabled. This provides a data store for the assembly that is accessible in any domain context. The per-assembly data compartment requires additional trust because it potentially provides a &quot;tunnel&quot; between applications that could compromise the data isolation of applications in particular Web sites.">存储首先按用户隔离，然后按程序集证据隔离。 当启用 Windows 用户数据漫游时，存储将漫游。 这为在任何域上下文中都可访问的程序集提供了数据存储区。 基于程序集的数据室需要额外的信任，因为它可能在应用程序之间提供“隧道”，该隧道会危及特定网站中应用程序的数据隔离。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser">
      <summary vsli:raw="Storage is isolated first by user and then by code assembly. Storage is also isolated by computer. This provides a data store for the assembly that is accessible in any domain context. The per-assembly data compartment requires additional trust because it potentially provides a &quot;tunnel&quot; between applications that could compromise the data isolation of applications in particular Web sites.">存储首先按用户隔离，然后按代码程序集隔离。 存储也被计算机隔离。 这为在任何域上下文中都可访问的程序集提供了数据存储区。 基于程序集的数据室需要额外的信任，因为它可能在应用程序之间提供“隧道”，该隧道会危及特定网站中应用程序的数据隔离。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByMachine">
      <summary vsli:raw="Storage is isolated first by computer and then by domain and assembly. Data can only be accessed within the context of the same application and only when run on the same computer. This is helpful when a third-party assembly wants to keep a private data store.">存储首先按计算机隔离，然后按域和程序集隔离。 只有在相同应用程序的上下文内并且仅在相同的计算机上运行时，才可访问数据。 这在第三方程序集想要保留私有数据存储区时很有用。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByRoamingUser">
      <summary vsli:raw="Storage is isolated first by user and then by domain and assembly. Storage will roam if Windows user data roaming is enabled. Data can only be accessed within the context of the same application and only when run by the same user. This is helpful when a third-party assembly wants to keep a private data store.">存储首先按用户隔离，然后按域和程序集隔离。 当启用 Windows 用户数据漫游时，存储将漫游。 只有在相同应用程序的上下文内并且仅由相同用户运行时，才可访问数据。 这在第三方程序集想要保留私有数据存储区时很有用。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser">
      <summary vsli:raw="Storage is isolated first by user and then by domain and assembly. Storage is also isolated by computer. Data can only be accessed within the context of the same application and only when run by the same user. This is helpful when a third-party assembly wants to keep a private data store.">存储首先按用户隔离，然后按域和程序集隔离。 存储也被计算机隔离。 只有在相同应用程序的上下文内并且仅由相同用户运行时，才可访问数据。 这在第三方程序集想要保留私有数据存储区时很有用。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.None">
      <summary vsli:raw="Use of isolated storage is not allowed.">不允许使用独立存储。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.UnrestrictedIsolatedStorage">
      <summary vsli:raw="Use of isolated storage is allowed without restriction. Code has full access to any part of the user store, regardless of the identity of the domain or assembly. This use of isolated storage includes the ability to enumerate the contents of the isolated storage data store.">允许在没有任何限制的情况下使用独立存储。 代码对用户存储区的任何部分均有完全访问权限，而不管域或程序集的标识如何。 独立存储的这种使用允许对独立存储数据存储区中的内容进行枚举。</summary>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageFilePermission">
      <summary vsli:raw="Specifies the allowed usage of a private virtual file system. This class cannot be inherited.">指定私有虚拟文件系统的允许的用法。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.IsolatedStorageFilePermission&quot; /&gt; class with either fully restricted or unrestricted permission as specified.">根据指定，使用完全受限制或不受限制的权限初始化 <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission object. It must be of the same type as the current permission.">要与当前权限对象相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.IsolatedStorageFilePermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.IsolatedStorageFilePermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Permissions.IsolatedStorageFilePermission&quot; /&gt; that corresponds to this attribute.">与此特性对应的 <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStoragePermission">
      <summary vsli:raw="Represents access to generic isolated storage capabilities.">表示对一般独立存储功能的访问权限。</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.IsolatedStoragePermission&quot; /&gt; class with either restricted or unrestricted permission as specified.">根据指定，使用受限制或不受限制的权限初始化 <see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="esd" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="esd" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;esd&quot; /&gt; parameter's version number is not valid.">
        <paramref name="esd" /> 参数不是有效的权限元素。  
  
- 或 - 
<paramref name="esd" /> 参数的版本号无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermission.UsageAllowed">
      <summary vsli:raw="Gets or sets the type of isolated storage containment allowed.">获取或设置允许的独立存储包含的类型。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.IsolatedStorageContainment&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.IsolatedStorageContainment" /> 值之一。</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermission.UserQuota">
      <summary vsli:raw="Gets or sets the quota on the overall size of each user's total store.">获取或设置每位用户的总存储在总大小中的配额。</summary>
      <returns vsli:raw="The size, in bytes, of the resource allocated to the user.">给用户分配的资源的大小（以字节为单位）。</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStoragePermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.IsolatedStoragePermission&quot; /&gt; to be applied to code using declarative security.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> 执行安全操作。</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.IsolatedStoragePermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.IsolatedStoragePermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UsageAllowed">
      <summary vsli:raw="Gets or sets the level of isolated storage that should be declared.">获取或设置声明的独立存储级别。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.IsolatedStorageContainment&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.IsolatedStorageContainment" /> 值之一。</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UserQuota">
      <summary vsli:raw="Gets or sets the maximum user storage quota size.">获取或设置最大的用户存储配额大小。</summary>
      <returns vsli:raw="The maximum user storage quota size in bytes.">最大的用户存储配额大小（以字节为单位）。</returns>
    </member>
    <member name="T:System.Security.Permissions.IUnrestrictedPermission">
      <summary vsli:raw="Allows a permission to expose an unrestricted state.">允许一种权限公开其为无限制状态。</summary>
    </member>
    <member name="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether unrestricted access to the resource protected by the permission is allowed.">返回一个值，该值指示是否允许不受限制的访问权限所保护的资源。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if unrestricted use of the resource protected by the permission is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许不受限制的使用权限所保护的资源，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermission">
      <summary vsli:raw="Controls the ability to access key containers. This class cannot be inherited.">控制访问密钥容器的权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermission&quot; /&gt; class with the specified access.">使用指定的访问权限初始化 <see cref="T:System.Security.Permissions.KeyContainerPermission" /> 类的新实例。</summary>
      <param name="flags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionFlags&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flags&quot; /&gt; is not a valid combination of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionFlags&quot; /&gt; values.">
        <paramref name="flags" /> 不是有效的 <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值组合。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermission&quot; /&gt; class with the specified global access and specific key container access rights.">使用指定的全局访问权限和特定密钥容器访问权限初始化 <see cref="T:System.Security.Permissions.KeyContainerPermission" /> 类的新实例。</summary>
      <param name="flags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionFlags&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的按位组合。</param>
      <param name="accessList" vsli:raw="An array of &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; objects identifying specific key container access rights.">标识特定密钥容器访问权限的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象数组。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flags&quot; /&gt; is not a valid combination of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionFlags&quot; /&gt; values.">
        <paramref name="flags" /> 不是有效的 <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值组合。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;accessList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="accessList" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermission&quot; /&gt; class with either restricted or unrestricted permission.">使用受限制或不受限制的权限初始化 <see cref="T:System.Security.Permissions.KeyContainerPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; value.">
        <paramref name="state" /> 不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="securityElement" vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains the XML encoding used to reconstruct the permission.">一个 <see cref="T:System.Security.SecurityElement" />，其中包含用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="securityElement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The version number of &lt;paramref name=&quot;securityElement&quot; /&gt; is not supported.">
        <paramref name="securityElement" /> 不是有效的权限元素。  
  
- 或 - 
不支持 <paramref name="securityElement" /> 的版本号。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and does not specify a permission of the same type as the current permission.">
        <paramref name="target" /> 不是 <see langword="null" />，并且未指定同一类型的权限为当前权限。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission to test for the subset relationship. This permission must be the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and does not specify a permission of the same type as the current permission.">
        <paramref name="target" /> 不是 <see langword="null" />，并且未指定同一类型的权限为当前权限。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.IsUnrestricted">
      <summary vsli:raw="Determines whether the current permission is unrestricted.">确定当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains an XML encoding of the permission, including state information.">包含权限及其状态信息的 XML 编码的 <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and does not specify a permission of the same type as the current permission.">
        <paramref name="target" /> 不是 <see langword="null" />，并且未指定同一类型的权限为当前权限。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermission.AccessEntries">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; objects associated with the current permission.">获取与当前权限相关联的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; objects for this &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermission&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />，它包含此 <see cref="T:System.Security.Permissions.KeyContainerPermission" /> 的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermission.Flags">
      <summary vsli:raw="Gets the key container permission flags that apply to all key containers associated with the permission.">获取适用于与权限相关联的所有密钥容器的密钥容器权限标志。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionFlags&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的按位组合。</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntry">
      <summary vsli:raw="Specifies access rights for specific key containers. This class cannot be inherited.">为特定密钥容器指定访问权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; class, using the specified cryptographic service provider (CSP) parameters and access permissions.">使用指定的加密服务提供程序 (CSP) 参数和访问权限初始化 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 类的新实例。</summary>
      <param name="parameters" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.CspParameters&quot; /&gt; object that contains the cryptographic service provider (CSP) parameters.">
        <see cref="T:System.Security.Cryptography.CspParameters" /> 对象，包含加密服务提供程序 (CSP) 参数。</param>
      <param name="flags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionFlags&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The resulting entry would have unrestricted access.">对结果项的访问将不受限制。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; class, using the specified key container name and access permissions.">使用指定的密钥容器名称和访问权限初始化 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 类的新实例。</summary>
      <param name="keyContainerName" vsli:raw="The name of the key container.">密钥容器的名称。</param>
      <param name="flags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionFlags&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The resulting entry would have unrestricted access.">对结果项的访问将不受限制。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; class with the specified property values.">使用指定的属性值初始化 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 类的新实例。</summary>
      <param name="keyStore" vsli:raw="The name of the key store.">密钥存储区的名称。</param>
      <param name="providerName" vsli:raw="The name of the provider.">提供程序的名称。</param>
      <param name="providerType" vsli:raw="The type code for the provider. See the &lt;see cref=&quot;P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType&quot; /&gt; property for values.">提供程序的类型代码。 请参见 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType" /> 属性获取相关的值。</param>
      <param name="keyContainerName" vsli:raw="The name of the key container.">密钥容器的名称。</param>
      <param name="keySpec" vsli:raw="The key specification. See the &lt;see cref=&quot;P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec&quot; /&gt; property for values.">密钥规范。 请参见 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec" /> 属性获取相关的值。</param>
      <param name="flags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionFlags&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The resulting entry would have unrestricted access.">对结果项的访问将不受限制。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; object is equal to the current instance.">确定指定的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象是否等于当前实例。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; object to compare with the current instance.">要与当前实例进行比较的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 等于当前的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode">
      <summary vsli:raw="Gets a hash code for the current instance that is suitable for use in hashing algorithms and data structures such as a hash table.">获取适合在哈希算法和类似哈希表的数据结构中使用的当前实例的哈希代码。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; object.">当前 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象的哈希代码。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags">
      <summary vsli:raw="Gets or sets the key container permissions.">获取或设置密钥容器权限。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionFlags&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的按位组合。 默认值为 <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName">
      <summary vsli:raw="Gets or sets the key container name.">获取或设置密钥容器名称。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The resulting entry would have unrestricted access.">对结果项的访问将不受限制。</exception>
      <returns vsli:raw="The name of the key container.">密钥容器的名称。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec">
      <summary vsli:raw="Gets or sets the key specification.">获取或设置密钥规范。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The resulting entry would have unrestricted access.">对结果项的访问将不受限制。</exception>
      <returns vsli:raw="One of the AT_ values defined in the Wincrypt.h header file.">Wincrypt.h 头文件中定义的 AT_ 值之一。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore">
      <summary vsli:raw="Gets or sets the name of the key store.">获取或设置密钥存储区的名称。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The resulting entry would have unrestricted access.">对结果项的访问将不受限制。</exception>
      <returns vsli:raw="The name of the key store.">密钥存储区的名称。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName">
      <summary vsli:raw="Gets or sets the provider name.">获取或设置提供程序名称。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The resulting entry would have unrestricted access.">对结果项的访问将不受限制。</exception>
      <returns vsli:raw="The name of the provider.">提供程序的名称。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType">
      <summary vsli:raw="Gets or sets the provider type.">获取或设置提供程序类型。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The resulting entry would have unrestricted access.">对结果项的访问将不受限制。</exception>
      <returns vsli:raw="One of the PROV_ values defined in the Wincrypt.h header file.">Wincrypt.h 头文件中定义的 PROV_ 值之一。</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; objects. This class cannot be inherited.">表示 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.#ctor" />
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; object to the collection.">将 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象添加到集合中。</summary>
      <param name="accessEntry" vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; object to add.">要添加的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;accessEntry&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="accessEntry" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="The index at which the new element was inserted.">新元素位置处插入的索引。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear">
      <summary vsli:raw="Removes all the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; objects from the collection.">从集合中移除所有 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">从特定的 <see cref="T:System.Collections.ICollection" /> 索引开始，将 <see cref="T:System.Array" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。</summary>
      <param name="array" vsli:raw="The one-dimensional array as the destination for the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The array must have zero-based indexing.">一维数组，用作从 <see cref="T:System.Collections.ICollection" /> 复制的元素的目标位置。 该数组的索引必须从零开始。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to a compatible one-dimensional array, starting at the specified index of the target array.">将集合中的元素复制到一个兼容的一维数组（从目标数组的指定索引处开始）。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; array that is the destination of the elements copied from the current collection.">一维 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 数组，它是从当前集合复制的元素的目标位置。</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 内的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than the lower bound of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="index" /> 小于 <paramref name="array" /> 的下限。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the collection is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> 是多维的。  
  
- 或 - 
集合中的元素数目大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot; /&gt; object that can be used to iterate through the objects in the collection.">返回 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> 对象，该对象可用于循环访问集合中的对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot; /&gt; object that can be used to iterate through the collection.">可用于循环访问集合的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary vsli:raw="Gets the index in the collection of the specified &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; object, if it exists in the collection.">获取指定的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象在该集合中的索引（如果它在该集合中存在）。</summary>
      <param name="accessEntry" vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; object to locate.">要定位的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象。</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; object in the collection, or -1 if no match is found.">该集合中指定的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象的索引，或者如果未找到匹配项则为 -1。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; object from the collection.">从集合中移除指定的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象。</summary>
      <param name="accessEntry" vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; object to remove.">要移除的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;accessEntry&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="accessEntry" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot; /&gt; object that can be used to iterate through the objects in the collection.">返回 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> 对象，该对象可用于循环访问集合中的对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot; /&gt; object that can be used to iterate through the collection.">可用于循环访问集合的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count">
      <summary vsli:raw="Gets the number of items in the collection.">获取集合中的项数。</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; objects in the collection.">集合中 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象的数目。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether the collection is synchronized (thread safe).">获取一个值，该值指示集合是否是同步的（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">在所有情况下均为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the item at the specified index in the collection.">获取集合中指定索引处的项。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to access.">要访问的元素从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the collection count.">
        <paramref name="index" /> 大于或等于集合计数。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is negative.">
        <paramref name="index" /> 为负数。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; object at the specified index in the collection.">集合中指定索引处的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">获取可用于同步对集合的访问的对象。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection.">用于同步对集合的访问的对象。</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
      <summary vsli:raw="Represents the enumerator for &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; objects in a &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection&quot; /&gt;.">表示 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /> 中的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象的枚举器。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor" />
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
      <summary vsli:raw="Moves to the next element in the collection.">移至集合中的下一元素。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
      <summary vsli:raw="Resets the enumerator to the beginning of the collection.">将枚举数重置到集合的开头。</summary>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
      <summary vsli:raw="Gets the current entry in the collection.">获取集合中的当前项。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current&quot; /&gt; property is accessed before first calling the &lt;see cref=&quot;M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext&quot; /&gt; method. The cursor is located before the first object in the collection.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current&quot; /&gt; property is accessed after a call to the &lt;see cref=&quot;M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext&quot; /&gt; method returns &lt;see langword=&quot;false&quot; /&gt;, which indicates that the cursor is located after the last object in the collection.">在第一次调用 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> 方法之前会访问 <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> 属性。 光标位于集合中的第一个对象之前。  
  
- 或 - 
在调用 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> 方法返回 <see langword="false" />（这表明光标位于集合的最后一个对象之后）后会访问 <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> 属性。</exception>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAccessEntry&quot; /&gt; object in the collection.">集合中的当前 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the current object in the collection.">获取集合中的当前对象。</summary>
      <returns vsli:raw="The current object in the collection.">集合中的当前对象。</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.KeyContainerPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionAttribute&quot; /&gt; class with the specified security action.">使用指定的安全操作初始化 <see cref="T:System.Security.Permissions.KeyContainerPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.KeyContainerPermission" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermission&quot; /&gt; that corresponds to the attribute.">与此特性对应的 <see cref="T:System.Security.Permissions.KeyContainerPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.Flags">
      <summary vsli:raw="Gets or sets the key container permissions.">获取或设置密钥容器权限。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.KeyContainerPermissionFlags&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的按位组合。 默认值为 <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName">
      <summary vsli:raw="Gets or sets the name of the key container.">获取或设置密钥容器的名称。</summary>
      <returns vsli:raw="The name of the key container.">密钥容器的名称。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec">
      <summary vsli:raw="Gets or sets the key specification.">获取或设置密钥规范。</summary>
      <returns vsli:raw="One of the AT_ values defined in the Wincrypt.h header file.">Wincrypt.h 头文件中定义的 AT_ 值之一。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore">
      <summary vsli:raw="Gets or sets the name of the key store.">获取或设置密钥存储区的名称。</summary>
      <returns vsli:raw="The name of the key store. The default is &quot;*&quot;.">密钥存储区的名称。 默认为“*”。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName">
      <summary vsli:raw="Gets or sets the provider name.">获取或设置提供程序名称。</summary>
      <returns vsli:raw="The name of the provider.">提供程序的名称。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType">
      <summary vsli:raw="Gets or sets the provider type.">获取或设置提供程序类型。</summary>
      <returns vsli:raw="One of the PROV_ values defined in the Wincrypt.h header file.">Wincrypt.h 头文件中定义的 PROV_ 值之一。</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionFlags">
      <summary vsli:raw="Specifies the type of key container access allowed.">指定允许的密钥容器访问类型。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags">
      <summary vsli:raw="Create, decrypt, delete, and open a key container; export and import a key; sign files using a key; and view and change the access control list for a key container.">创建、解密、删除、打开密钥容器；导出、导入密钥；使用密钥给文件签名；查看并更改密钥容器的访问控制列表。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl">
      <summary vsli:raw="Change the access control list (ACL) for a key container.">更改密钥容器的访问控制列表 (ACL)。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Create">
      <summary vsli:raw="&lt;para&gt;Create a key container.&lt;/para&gt;&lt;para&gt;Creating a key container also creates a file on disk. It is very important that any key container that is created is removed when it is no longer in use.&lt;/para&gt;">
        <para>创建密钥容器。</para>
        <para>创建密钥容器时还会在磁盘上创建一个文件。 请务必注意，创建的任何密钥容器都将在不再使用时删除，这一点非常重要。</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt">
      <summary vsli:raw="&lt;para&gt;Decrypt a key container.&lt;/para&gt;&lt;para&gt;Decryption is a privileged operation because it uses the private key.&lt;/para&gt;">
        <para>解密密钥容器。</para>
        <para>解密是一项特权操作，因为需要使用私钥。</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete">
      <summary vsli:raw="&lt;para&gt;Delete a key container.&lt;/para&gt;&lt;para&gt;Deleting a key container can constitute a denial of service attack because it prevents the use of files encrypted or signed with the key. Therefore, deletion is a privileged operation.&lt;/para&gt;">
        <para>删除密钥容器。</para>
        <para>删除密钥容器可能导致拒绝服务攻击，因为删除密钥容器会阻止使用经密钥加密或签名的文件。 因此，删除是一项特权操作。</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Export">
      <summary vsli:raw="&lt;para&gt;Export a key from a key container.&lt;/para&gt;&lt;para&gt;The ability to export a key is potentially harmful because it removes the exclusivity of the key.&lt;/para&gt;">
        <para>从密钥容器导出密钥。</para>
        <para>导出密钥的功能可能是有害的，因为它会破坏该密钥的唯一性。</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Import">
      <summary vsli:raw="&lt;para&gt;Import a key into a key container.&lt;/para&gt;The ability to import a key can be as harmful as the ability to delete a container because importing a key into a named key container replaces the existing key.&lt;para&gt;&lt;/para&gt;">
        <para>将密钥导入密钥容器。</para>类似于删除容器的功能，导入密钥的功能同样可能有害，因为向已命名的密钥容器导入密钥会替换已有的密钥。<para></para></summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags">
      <summary vsli:raw="No access to a key container.">不能访问密钥容器。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Open">
      <summary vsli:raw="&lt;para&gt;Open a key container and use the public key.&lt;/para&gt;&lt;para&gt;&lt;see langword=&quot;Open&quot; /&gt; does not give permission to sign or decrypt files using the private key, but it does allow a user to verify file signatures and to encrypt files. Only the owner of the key is able to decrypt these files using the private key.&lt;/para&gt;">
        <para>打开一个密钥容器并使用公钥。</para>
        <para>
          <see langword="Open" /> 不授予使用私钥对文件进行签名或解密的权限，但允许用户验证文件签名和加密文件。 只有密钥所有者可以使用私钥对这些文件进行解密。</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign">
      <summary vsli:raw="&lt;para&gt;Sign a file using a key.&lt;/para&gt;&lt;para&gt;The ability to sign a file is potentially harmful because it can allow a user to sign a file using another user's key.&lt;/para&gt;">
        <para>使用密钥给文件签名。</para>
        <para>对文件进行签名的功能可能是有害的，因为该功能可以让用户使用其他用户的密钥对文件进行签名。</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl">
      <summary vsli:raw="View the access control list (ACL) for a key container.">查看密钥容器的访问控制列表 (ACL)。</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.MediaPermission&quot; /&gt; describes a set of security permissions that controls the ability for audio, image, and video media to work in a partial-trust Windows Presentation Foundation (WPF) application.">
        <see cref="T:System.Security.Permissions.MediaPermission" /> 描述一组安全权限，该权限用于控制音频、图像和视频媒体在不完全可信的 Windows Presentation Foundation (WPF) 应用程序中的运行能力。</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.MediaPermission&quot; /&gt; class.">初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.MediaPermission&quot; /&gt; class by specifying the audio permission level.">通过指定音频权限级别，初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 类的新实例。</summary>
      <param name="permissionAudio" vsli:raw="An enumerated value of &lt;see cref=&quot;T:System.Security.Permissions.MediaPermissionAudio&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" /> 的枚举值。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.MediaPermission&quot; /&gt; class by specifying the audio, video, and image permission levels.">通过指定音频、视频和图像权限级别，初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 类的新实例。</summary>
      <param name="permissionAudio" vsli:raw="An enumerated value of &lt;see cref=&quot;T:System.Security.Permissions.MediaPermissionAudio&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" /> 的枚举值。</param>
      <param name="permissionVideo" vsli:raw="An enumerated value of &lt;see cref=&quot;T:System.Security.Permissions.MediaPermissionVideo&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" /> 的枚举值。</param>
      <param name="permissionImage" vsli:raw="An enumerated value of &lt;see cref=&quot;T:System.Security.Permissions.MediaPermissionImage&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.MediaPermissionImage" /> 的枚举值。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.MediaPermission&quot; /&gt; class by specifying the image permission level.">通过指定一个图像权限级别，初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 类的一个新实例。</summary>
      <param name="permissionImage" vsli:raw="An enumerated value of &lt;see cref=&quot;T:System.Security.Permissions.MediaPermissionImage&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.MediaPermissionImage" /> 的枚举值。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.MediaPermission&quot; /&gt; class by specifying the video permission level.">通过指定视频权限级别，初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 类的一个新实例。</summary>
      <param name="permissionVideo" vsli:raw="An enumerated value of &lt;see cref=&quot;T:System.Security.Permissions.MediaPermissionVideo&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" /> 的枚举值。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.MediaPermission&quot; /&gt; class by specifying a permission state.">通过指定一个权限状态，初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 类的一个新实例。</summary>
      <param name="state" vsli:raw="An enumerated value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 的枚举值。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="securityElement" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <returns vsli:raw="The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.">两个权限的交集是描述两者共同描述的状态的权限。 只有传递两个原始权限的请求对相交的权限有效。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the audio, image, and video permissions are all unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果音频、图像和视频权限均不受限制，则为<see langword="true" /> ；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary vsli:raw="Gets the current value of the audio permission level.">获取音频权限级别的当前值。</summary>
      <returns vsli:raw="The audio permission level.">音频权限级别。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary vsli:raw="Gets the current value of the image permission level.">获取图像权限级别的当前值。</summary>
      <returns vsli:raw="The image permission level.">图像权限级别。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary vsli:raw="Gets the current value of the video permission level.">获取视频权限级别的当前值。</summary>
      <returns vsli:raw="The media permission level.">媒体权限级别。</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.MediaPermission&quot; /&gt; to be applied to code using declarative security.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.MediaPermission" /> 执行安全操作。</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Security.Permissions.MediaPermissionAttribute&quot; /&gt;.">初始化 <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> 的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.MediaPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.MediaPermission" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.MediaPermission&quot; /&gt; that corresponds to this attribute.">与此属性对应的 <see cref="T:System.Security.Permissions.MediaPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary vsli:raw="Gets or sets the audio permission level for the &lt;see cref=&quot;T:System.Security.Permissions.MediaPermissionAttribute&quot; /&gt;.">获取或设置 <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> 的音频权限级别。</summary>
      <returns vsli:raw="The state of the &lt;see cref=&quot;T:System.Security.Permissions.MediaPermissionAudio&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" /> 的状态。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary vsli:raw="Gets or sets the image permission level for the &lt;see cref=&quot;T:System.Security.Permissions.MediaPermissionAttribute&quot; /&gt;.">获取或设置 <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> 的图像权限级别。</summary>
      <returns vsli:raw="The state of the &lt;see cref=&quot;T:System.Security.Permissions.MediaPermissionImage&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.MediaPermissionImage" /> 的状态。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary vsli:raw="Gets or sets the video permission level for the &lt;see cref=&quot;T:System.Security.Permissions.MediaPermissionAttribute&quot; /&gt;.">为 <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> 获取或设置视频权限级别。</summary>
      <returns vsli:raw="The state of the &lt;see cref=&quot;T:System.Security.Permissions.MediaPermissionVideo&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" /> 的状态。</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary vsli:raw="Specifies the permission level for audio.">指定音频的权限级别。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary vsli:raw="Permission that allows unrestricted audio playback.">允许播放不受限制音频的权限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary vsli:raw="Permission that denies all audio playback.">拒绝播放所有音频的权限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary vsli:raw="Permission that allows safe, limited audio playback, which includes denying stream access to the image file.">允许播放安全、有限制音频的权限，该权限包括拒绝对图像文件的流访问。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary vsli:raw="Permission that only allows audio playback of files that are located at the application's site of origin.">只允许对位于应用程序源站点的文件进行音频播放的权限。</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary vsli:raw="Specifies the permission level for images.">指定图像的权限级别。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary vsli:raw="Permission that allows unrestricted image display.">允许显示不受限制图像的权限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary vsli:raw="Permission that denies all images to be displayed.">拒绝显示所有图像的权限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary vsli:raw="Permission that allows safe, limited image display, which includes denying stream access to the image file.">允许显示安全、有限制图像的权限，该权限包括拒绝对图像文件的流访问。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary vsli:raw="Permission that only allows display of images that are located at the application's site of origin.">只允许显示位于应用程序源站点的图像的权限。</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary vsli:raw="Specifies the permission level for video.">指定视频的权限级别。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary vsli:raw="Permission that allows unrestricted video playback.">允许播放不受限制视频的权限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary vsli:raw="Permission that denies all video playback.">拒绝播放所有视频的权限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary vsli:raw="Permission that allows safe, limited video playback, which includes denying stream access to the image file.">允许播放安全、有限制视频的权限，该权限包括拒绝对图像文件的流访问。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary vsli:raw="Permission that only allows video playback of files that are located at the application's site of origin.">只允许对位于应用程序源站点的文件进行视频播放的权限。</summary>
    </member>
    <member name="T:System.Security.Permissions.PermissionSetAttribute">
      <summary vsli:raw="Allows security actions for a &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对使用声明安全性应用到代码中的 <see cref="T:System.Security.PermissionSet" /> 进行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionSetAttribute&quot; /&gt; class with the specified security action.">使用指定的安全操作初始化 <see cref="T:System.Security.Permissions.PermissionSetAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the enumeration values that specifies a security action.">指定安全操作的枚举值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermission">
      <summary vsli:raw="This method is not used.">未使用此方法。</summary>
      <returns vsli:raw="A null reference (&lt;see langword=&quot;nothing&quot; /&gt; in Visual Basic) in all cases.">在所有情况下均为 null 引用（在 Visual Basic 中为 <see langword="nothing" />）。</returns>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet">
      <summary vsli:raw="Creates and returns a new permission set based on this permission set attribute object.">创建并返回基于此权限集特性对象的新权限集。</summary>
      <returns vsli:raw="A new permission set.">新权限集。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.File">
      <summary vsli:raw="Gets or sets a file containing the XML representation of a custom permission set to be declared.">获取或设置一个文件，该文件包含要声明的自定义权限集的 XML 表示形式。</summary>
      <returns vsli:raw="The physical path to the file containing the XML representation of the permission set.">包含该权限集 XML 表示形式的文件的物理路径。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.Hex">
      <summary vsli:raw="Gets or sets the hexadecimal representation of the XML encoded permission set.">获取或设置 XML 编码的权限集的十六进制表示形式。</summary>
      <returns vsli:raw="The hexadecimal representation of the XML encoded permission set.">XML 编码的权限集的十六进制表示形式。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.Name">
      <summary vsli:raw="Gets or sets the name of the permission set.">获取或设置权限集的名称。</summary>
      <returns vsli:raw="The name of an immutable &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; (one of several permission sets that are contained in the default policy and cannot be altered).">不可更改的 <see cref="T:System.Security.NamedPermissionSet" /> 的名称（它是包含在默认策略中的多个权限集之一，而且不能更改）。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded">
      <summary vsli:raw="Gets or sets a value indicating whether the file specified by &lt;see cref=&quot;P:System.Security.Permissions.PermissionSetAttribute.File&quot; /&gt; is Unicode or ASCII encoded.">获取或设置一个值，该值指示 <see cref="P:System.Security.Permissions.PermissionSetAttribute.File" /> 所指定的文件是 Unicode 编码还是 ASCII 编码。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the file is Unicode encoded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果文件是 Unicode 编码，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.XML">
      <summary vsli:raw="Gets or sets the XML representation of a permission set.">获取或设置权限集的 XML 表示形式。</summary>
      <returns vsli:raw="The XML representation of a permission set.">权限集的 XML 表示形式。</returns>
    </member>
    <member name="T:System.Security.Permissions.PrincipalPermission">
      <summary vsli:raw="Allows checks against the active principal (see &lt;see cref=&quot;T:System.Security.Principal.IPrincipal&quot; /&gt;) using the language constructs defined for both declarative and imperative security actions. This class cannot be inherited.">允许使用为声明性和命令性安全操作定义的语言构造对活动主体执行检查（请参阅 <see cref="T:System.Security.Principal.IPrincipal" />）。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.PrincipalPermission&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是有效的 <see cref="T:System.Security.Permissions.PermissionState" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.PrincipalPermission&quot; /&gt; class for the specified &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;role&quot; /&gt;.">为指定的 <paramref name="name" /> 和 <paramref name="role" /> 初始化 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Security.Principal.IPrincipal&quot; /&gt; object's user.">
        <see cref="T:System.Security.Principal.IPrincipal" /> 对象的用户的名称。</param>
      <param name="role" vsli:raw="The role of the &lt;see cref=&quot;T:System.Security.Principal.IPrincipal&quot; /&gt; object's user (for example, Administrator).">
        <see cref="T:System.Security.Principal.IPrincipal" /> 对象的用户的角色（例如，管理员）。</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.PrincipalPermission&quot; /&gt; class for the specified &lt;paramref name=&quot;name&quot; /&gt;, &lt;paramref name=&quot;role&quot; /&gt;, and authentication status.">为指定的 <paramref name="name" />、<paramref name="role" /> 和身份验证状态初始化 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Security.Principal.IPrincipal&quot; /&gt; object's user.">
        <see cref="T:System.Security.Principal.IPrincipal" /> 对象的用户的名称。</param>
      <param name="role" vsli:raw="The role of the &lt;see cref=&quot;T:System.Security.Principal.IPrincipal&quot; /&gt; object's user (for example, Administrator).">
        <see cref="T:System.Security.Principal.IPrincipal" /> 对象的用户的角色（例如，管理员）。</param>
      <param name="isAuthenticated" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to signify that the user is authenticated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示用户已经过身份验证；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Demand">
      <summary vsli:raw="Determines at run time whether the current principal matches the principal specified by the current permission.">在运行时确定当前主体是否与当前权限指定的主体相匹配。</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The current principal does not pass the security check for the principal specified by the current permission.  &#xA;  &#xA; -or-  &#xA;  &#xA; The current &lt;see cref=&quot;T:System.Security.Principal.IPrincipal&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">当前主体未通过当前权限指定的主体的安全检查。  
  
- 或 - 
当前的 <see cref="T:System.Security.Principal.IPrincipal" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Security.Permissions.PrincipalPermission&quot; /&gt; object is equal to the current &lt;see cref=&quot;T:System.Security.Permissions.PrincipalPermission&quot; /&gt;.">确定指定的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 对象是否等于当前的 <see cref="T:System.Security.Permissions.PrincipalPermission" />。</summary>
      <param name="o">要与当前的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 比较的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Security.Permissions.PrincipalPermission&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Security.Permissions.PrincipalPermission&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 等于当前的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="elem" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;elem&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="elem" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;elem&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;elem&quot; /&gt; parameter's version number is not valid.">
        <paramref name="elem" /> 参数不是有效的权限元素。  
  
- 或 - 
<paramref name="elem" /> 参数的版本号无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.GetHashCode">
      <summary vsli:raw="Gets a hash code for the &lt;see cref=&quot;T:System.Security.Permissions.PrincipalPermission&quot; /&gt; object that is suitable for use in hashing algorithms and data structures such as a hash table.">获取 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 对象的哈希代码，此代码适合在哈希算法和数据结构（例如哈希表）中使用。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Security.Permissions.PrincipalPermission&quot; /&gt; object.">当前 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 对象的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not an instance of the same class as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且是与当前权限不属于同一类的实例。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission will be &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限将为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is an object that is not of the same type as the current permission.">
        <paramref name="target" /> 参数是一个对象，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.ToString">
      <summary vsli:raw="Creates and returns a string representing the current permission.">创建并返回表示当前权限的字符串。</summary>
      <returns vsli:raw="A representation of the current permission.">当前权限的表示形式。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="other" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is an object that is not of the same type as the current permission.">
        <paramref name="other" /> 参数是一个对象，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="T:System.Security.Permissions.PrincipalPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.PrincipalPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.PrincipalPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.PrincipalPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.PrincipalPermission" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.PrincipalPermission&quot; /&gt; that corresponds to this attribute.">与此属性对应的 <see cref="T:System.Security.Permissions.PrincipalPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated">
      <summary vsli:raw="Gets or sets a value indicating whether the current principal has been authenticated by the underlying role-based security provider.">获取或设置一个值，该值指示是否通过基于角色的基础安全提供程序已对当前主体执行身份验证。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current principal has been authenticated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已对当前主体执行身份验证，则为<see langword="true" /> ；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Name">
      <summary vsli:raw="Gets or sets the name of the identity associated with the current principal.">获取或设置与当前主体相关联的标识名称。</summary>
      <returns vsli:raw="A name to match against that provided by the underlying role-based security provider.">要与基于角色的基础安全提供程序提供的名称相匹配的名称。</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Role">
      <summary vsli:raw="Gets or sets membership in a specified security role.">获取或设置指定安全角色的成员条件。</summary>
      <returns vsli:raw="The name of a role from the underlying role-based security provider.">基于角色的基础安全提供程序中的角色名称。</returns>
    </member>
    <member name="T:System.Security.Permissions.PublisherIdentityPermission">
      <summary vsli:raw="Represents the identity of a software publisher. This class cannot be inherited.">表示软件发布者的标识。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.PublisherIdentityPermission&quot; /&gt; class with the specified Authenticode X.509v3 certificate.">使用指定的验证码 X.509v3 证书初始化 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> 类的新实例。</summary>
      <param name="certificate" vsli:raw="An X.509 certificate representing the software publisher's identity.">表示软件发布者的身份的 X.509 证书。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is not a valid certificate.">
        <paramref name="certificate" /> 参数不是有效的证书。</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.PublisherIdentityPermission&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="esd" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="esd" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;esd&quot; /&gt; parameter's version number is not valid.">
        <paramref name="esd" /> 参数不是有效的权限元素。  
  
- 或 - 
<paramref name="esd" /> 参数的版本号无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.  &#xA;  &#xA; -or-  &#xA;  &#xA; The two permissions are not equal.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。  
  
- 或 - 
这两个权限不相等。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermission.Certificate">
      <summary vsli:raw="Gets or sets an Authenticode X.509v3 certificate that represents the identity of the software publisher.">获取或设置表示软件发行者的身份的 Authenticode X.509v3 证书。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Permissions.PublisherIdentityPermission.Certificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Permissions.PublisherIdentityPermission.Certificate&quot; /&gt; is not a valid certificate.">
        <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" /> 不是有效的证书。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property cannot be set because the identity is ambiguous.">不能设置该属性，因为其标识不明确。</exception>
      <returns vsli:raw="An X.509 certificate representing the identity of the software publisher.">表示软件发布者的身份的 X.509 证书。</returns>
    </member>
    <member name="T:System.Security.Permissions.PublisherIdentityPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.PublisherIdentityPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.PublisherIdentityPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.PublisherIdentityPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new instance of &lt;see cref=&quot;T:System.Security.Permissions.PublisherIdentityPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> 实例。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.PublisherIdentityPermission&quot; /&gt; that corresponds to this attribute.">与此属性对应的 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile">
      <summary vsli:raw="Gets or sets a certification file containing an Authenticode X.509v3 certificate.">获取或设置包含 Authenticode X.509v3 证书的证书文件。</summary>
      <returns vsli:raw="The file path of an X.509 certificate file (usually has the extension.cer).">X.509 证书文件（通常有 .cer 扩展名）的文件路径。</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile">
      <summary vsli:raw="Gets or sets a signed file from which to extract an Authenticode X.509v3 certificate.">获取或设置一个已签名的文件，将从该文件提取 Authenticode X.509v3 证书。</summary>
      <returns vsli:raw="The file path of a file signed with the Authenticode signature.">带有 Authenticode 签名的文件的文件路径。</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate">
      <summary vsli:raw="Gets or sets an Authenticode X.509v3 certificate that identifies the publisher of the calling code.">获取或设置标识调用代码发行者的 Authenticode X.509v3 证书。</summary>
      <returns vsli:raw="A hexadecimal representation of the X.509 certificate.">X.509 证书的十六进制表示形式。</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermission">
      <summary vsli:raw="Controls access to non-public types and members through the &lt;see cref=&quot;N:System.Reflection&quot; /&gt; APIs. Controls some features of the &lt;see cref=&quot;N:System.Reflection.Emit&quot; /&gt; APIs.">通过 <see cref="N:System.Reflection" /> API，控制对非公共类型和成员的访问。 控制 <see cref="N:System.Reflection.Emit" /> API 的一些功能。</summary>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.ReflectionPermission&quot; /&gt; class with either fully restricted or unrestricted permission as specified.">根据指定，使用完全受限制或不受限制的权限初始化 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.ReflectionPermissionFlag)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.ReflectionPermission&quot; /&gt; class with the specified access.">使用指定的访问权限初始化 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 类的新实例。</summary>
      <param name="flag" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.ReflectionPermissionFlag&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;flag&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.ReflectionPermissionFlag&quot; /&gt;.">
        <paramref name="flag" /> 参数不是 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="esd" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="esd" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;esd&quot; /&gt; parameter's version number is not valid.">
        <paramref name="esd" /> 参数不是有效的权限元素。  
  
- 或 - 
<paramref name="esd" /> 参数的版本号无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="other" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="other" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermission.Flags">
      <summary vsli:raw="Gets or sets the type of reflection allowed for the current permission.">获取或设置允许用于当前权限的反射类型。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="An attempt is made to set this property to an invalid value. See &lt;see cref=&quot;T:System.Security.Permissions.ReflectionPermissionFlag&quot; /&gt; for the valid values.">尝试将此属性设置为无效值。 有关有效值，请参阅 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />。</exception>
      <returns vsli:raw="The set flags for the current permission.">当前权限的设置标志。</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.ReflectionPermission&quot; /&gt; to be applied to code using declarative security.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 执行安全操作。</summary>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.ReflectionPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.ReflectionPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.ReflectionPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.ReflectionPermission" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.ReflectionPermission&quot; /&gt; that corresponds to this attribute.">与此属性对应的 <see cref="T:System.Security.Permissions.ReflectionPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
      <summary vsli:raw="Gets or sets the current allowed uses of reflection.">获取或设置当前允许使用的反射。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="An attempt is made to set this property to an invalid value. See &lt;see cref=&quot;T:System.Security.Permissions.ReflectionPermissionFlag&quot; /&gt; for the valid values.">尝试将此属性设置为无效值。 有关有效值，请参阅 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />。</exception>
      <returns vsli:raw="One or more of the &lt;see cref=&quot;T:System.Security.Permissions.ReflectionPermissionFlag&quot; /&gt; values combined using a bitwise OR.">使用按位“或”运算结合的一个或多个 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess">
      <summary vsli:raw="Gets or sets a value that indicates whether invocation of operations on non-public members is allowed.">获取或设置一个值，指示是否允许在非公共成员上调用操作。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if invocation of operations on non-public members is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许在非公共成员上调用操作，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
      <summary vsli:raw="Gets or sets a value that indicates whether use of certain features in &lt;see cref=&quot;N:System.Reflection.Emit&quot; /&gt;, such as emitting debug symbols, is allowed.">获取或设置一个值，指示是否允许在 <see cref="N:System.Reflection.Emit" /> 中使用某些功能（例如发出调试符号）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if use of the affected features is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许使用受影响的功能，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
      <summary vsli:raw="Gets or sets a value that indicates whether restricted invocation of non-public members is allowed. Restricted invocation means that the grant set of the assembly that contains the non-public member that is being invoked must be equal to, or a subset of, the grant set of the invoking assembly.">获取或设置一个值，指示是否允许非公共成员的受限制调用。 受限制调用意味着程序集的授予集（包含被调用的非公共成员）必须与调用程序集的授予集相同，或者前者是后者的子集。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if restricted invocation of non-public members is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许非公共成员的受限制调用，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
      <summary vsli:raw="Gets or sets a value that indicates whether reflection on members that are not visible is allowed.">获取或设置一个值，指示是否允许在不可见的成员上反射。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if reflection on members that are not visible is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许在不可见的成员上反射，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermissionFlag">
      <summary vsli:raw="Specifies the permitted use of the &lt;see cref=&quot;N:System.Reflection&quot; /&gt; and &lt;see cref=&quot;N:System.Reflection.Emit&quot; /&gt; namespaces.">指定 <see cref="N:System.Reflection" /> 和 <see cref="N:System.Reflection.Emit" /> 命名空间的允许用法。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
      <summary vsli:raw="&lt;see langword=&quot;TypeInformation&quot; /&gt; , &lt;see langword=&quot;MemberAccess&quot; /&gt;, and &lt;see langword=&quot;ReflectionEmit&quot; /&gt; are set. &lt;see cref=&quot;F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags&quot; /&gt; does not include &lt;see cref=&quot;F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&quot; /&gt;.">对 <see langword="TypeInformation" />、<see langword="MemberAccess" /> 和 <see langword="ReflectionEmit" /> 进行了设置。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> 不包括 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
      <summary vsli:raw="Invocation operations on all members are allowed, regardless of grant set. If this flag is not set, invocation operations are allowed only on visible members.">无论授予集是什么，都允许在所有成员上进行调用操作。 如果未设置此标志，则只允许在可见成员上进行调用操作。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
      <summary vsli:raw="Enumeration of types and members is allowed. Invocation operations are allowed on visible types and members.">允许对类型和成员进行枚举。 允许在可见类型和成员上进行调用操作。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
      <summary vsli:raw="Emitting debug symbols is allowed. Beginning with the .NET Framework 2.0 Service Pack 1, this flag is no longer required to emit code.">允许发出调试符号。 从 .NET Framework 2.0 Service Pack 1 开始，发出代码时不再需要此标志。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
      <summary vsli:raw="Restricted member access is provided for partially trusted code. Partially trusted code can access nonpublic types and members, but only if the grant set of the partially trusted code includes all permissions in the grant set of the assembly that contains the nonpublic types and members being accessed. This flag is new in the .NET Framework 2.0 SP1.">为部分受信任代码提供了受限成员访问。 部分受信任代码可以访问非公共类型和成员，但前提条件是部分受信任代码的授予集包括程序集（该程序集包含要访问的非公共类型和成员）的授予集内的所有权限。 此标志在 .NET Framework 2.0 SP1 中是新增标志。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
      <summary vsli:raw="This flag is obsolete. No flags are necessary to enumerate types and members and to examine their metadata. Use &lt;see cref=&quot;F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags&quot; /&gt; instead.">此标志已过时。 枚举类型和成员以及检验它们的元数据时不需要任何标志。 请改用 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />。</summary>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermission">
      <summary vsli:raw="Controls the ability to access registry variables. This class cannot be inherited.">控制访问注册表变量的能力。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermission&quot; /&gt; class with either fully restricted or unrestricted permission as specified.">根据指定，使用完全受限制或不受限制的权限初始化 <see cref="T:System.Security.Permissions.RegistryPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermission&quot; /&gt; class with the specified access to the specified registry variables and the specified access rights to registry control information.">使用对指定注册表变量的指定访问权限和对注册表控制信息的指定访问权限，初始化 <see cref="T:System.Security.Permissions.RegistryPermission" /> 类的新实例。</summary>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值之一。</param>
      <param name="control" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlActions&quot; /&gt; values.">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> 值的按位组合。</param>
      <param name="pathList" vsli:raw="A list of registry variables (semicolon-separated) to which access is granted.">向其授予了访问权限的注册表变量的列表（以分号分隔）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;pathList&quot; /&gt; parameter is not a valid string.">
        <paramref name="access" /> 参数不是 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 的有效值。  
  
- 或 - 
<paramref name="pathList" /> 参数不是有效的字符串。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermission&quot; /&gt; class with the specified access to the specified registry variables.">通过对指定注册表变量的指定访问权限初始化 <see cref="T:System.Security.Permissions.RegistryPermission" /> 类的新实例。</summary>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值之一。</param>
      <param name="pathList" vsli:raw="A list of registry variables (semicolon-separated) to which access is granted.">向其授予了访问权限的注册表变量的列表（以分号分隔）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;pathList&quot; /&gt; parameter is not a valid string.">
        <paramref name="access" /> 参数不是 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 的有效值。  
  
- 或 - 
<paramref name="pathList" /> 参数不是有效的字符串。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary vsli:raw="Adds access for the specified registry variables to the existing state of the permission, specifying registry permission access and access control actions.">将指定注册表变量的访问权限添加到现有的权限状态中，同时指定注册表权限访问和访问控制操作。</summary>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值之一。</param>
      <param name="actions" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlActions&quot; /&gt; values.">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> 值之一。</param>
      <param name="pathList" vsli:raw="A list of registry variables (separated by semicolons).">注册表变量列表（用分号分隔）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;pathList&quot; /&gt; parameter is not a valid string.">
        <paramref name="access" /> 参数不是 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 的有效值。  
  
- 或 - 
<paramref name="pathList" /> 参数不是有效的字符串。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary vsli:raw="Adds access for the specified registry variables to the existing state of the permission.">将指定的注册表变量的访问权限添加到现有的权限状态中。</summary>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值之一。</param>
      <param name="pathList" vsli:raw="A list of registry variables (semicolon-separated).">注册表变量列表（用分号分隔）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;pathList&quot; /&gt; parameter is not a valid string.">
        <paramref name="access" /> 参数不是 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 的有效值。  
  
- 或 - 
<paramref name="pathList" /> 参数不是有效的字符串。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="elem" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;elem&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="elem" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;elem&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;elem&quot; /&gt; parameter's version number is not valid.">
        <paramref name="elem" /> 参数不是有效的权限元素。  
  
- 或 - 
<paramref name="elem" /> 参数的版本号无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)">
      <summary vsli:raw="Gets paths for all registry variables with the specified &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt;.">获取具有指定 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 的所有注册表变量的路径。</summary>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt; values that represents a single type of registry variable access.">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值之一，表示注册表变量访问的单一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;access&quot; /&gt; is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is &lt;see cref=&quot;F:System.Security.Permissions.RegistryPermissionAccess.AllAccess&quot; /&gt;, which represents more than one type of registry variable access, or &lt;see cref=&quot;F:System.Security.Permissions.RegistryPermissionAccess.NoAccess&quot; /&gt;, which does not represent any type of registry variable access.">
        <paramref name="access" /> 不是 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 的一个有效值。  
  
- 或 - 
 <paramref name="access" /> 是 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" />，表示注册表变量访问的多个类型，或者是 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" />，它不表示注册表变量访问的任何类型。</exception>
      <returns vsli:raw="A list of the registry variables (semicolon-separated) with the specified &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt;.">具有指定 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 的注册表变量的列表（以分号分隔）。</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary vsli:raw="Sets new access for the specified registry variable names to the existing state of the permission.">将指定的注册表变量名称的新访问权限设置为现有的权限状态。</summary>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值之一。</param>
      <param name="pathList" vsli:raw="A list of registry variables (semicolon-separated).">注册表变量列表（用分号分隔）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;pathList&quot; /&gt; parameter is not a valid string.">
        <paramref name="access" /> 参数不是 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 的有效值。  
  
- 或 - 
<paramref name="pathList" /> 参数不是有效的字符串。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="other" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="other" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermissionAccess">
      <summary vsli:raw="Specifies the permitted access to registry keys and values.">指定允许的对注册表项和值的访问权。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess">
      <summary vsli:raw="&lt;see cref=&quot;F:System.Security.Permissions.RegistryPermissionAccess.Create&quot; /&gt;, &lt;see cref=&quot;F:System.Security.Permissions.RegistryPermissionAccess.Read&quot; /&gt;, and &lt;see cref=&quot;F:System.Security.Permissions.RegistryPermissionAccess.Write&quot; /&gt; access to registry variables. &lt;see cref=&quot;F:System.Security.Permissions.RegistryPermissionAccess.AllAccess&quot; /&gt; represents multiple &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt; values and causes an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; when used as the &lt;paramref name=&quot;access&quot; /&gt; parameter for the &lt;see cref=&quot;M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)&quot; /&gt; method, which expects a single value.">对注册表变量的 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" />、<see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /> 和 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /> 访问权限。 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" /> 表示多个 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值，如果将它用作 <see cref="T:System.ArgumentException" /> 方法的 <paramref name="access" /> 参数（它需要单一值），则引发 <see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Create">
      <summary vsli:raw="Create access to registry variables.">可以创建注册表变量。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess">
      <summary vsli:raw="No access to registry variables. &lt;see cref=&quot;F:System.Security.Permissions.RegistryPermissionAccess.NoAccess&quot; /&gt; represents no valid &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAccess&quot; /&gt; values and causes an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; when used as the parameter for &lt;see cref=&quot;M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)&quot; /&gt;, which expects a single value.">没有对注册表变量的访问权限。 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" /> 不表示有效的 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值，如果将它用作 <see cref="T:System.ArgumentException" /> 的参数（它需要单一值），则引发 <see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Read">
      <summary vsli:raw="Read access to registry variables.">可以读注册表变量。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Write">
      <summary vsli:raw="Write access to registry variables.">可以写注册表变量。</summary>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.RegistryPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.RegistryPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;action&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">
        <paramref name="action" /> 参数不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.RegistryPermission" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.RegistryPermission&quot; /&gt; that corresponds to this attribute.">与此属性对应的 <see cref="T:System.Security.Permissions.RegistryPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.All">
      <summary vsli:raw="Gets or sets full access for the specified registry keys.">获取或设置指定注册表项的完全访问权限。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The get accessor is called; it is only provided for C# compiler compatibility.">调用 get 访问器；提供它仅为了与 C# 编译器兼容。</exception>
      <returns vsli:raw="A semicolon-separated list of registry key paths, for full access.">一个由分号分隔的注册表项路径列表，用于提供完全访问权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl">
      <summary vsli:raw="Gets or sets change access control for the specified registry keys.">获取或设置指定注册表项的更改访问控制。</summary>
      <returns vsli:raw="A semicolon-separated list of registry key paths, for change access control. .">一个由分号分隔的注册表项路径列表，用于提供更改访问控制。 .</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Create">
      <summary vsli:raw="Gets or sets create-level access for the specified registry keys.">获取或设置指定注册表项的创建级别访问权限。</summary>
      <returns vsli:raw="A semicolon-separated list of registry key paths, for create-level access.">一个由分号分隔的注册表项路径列表，用于提供创建级别访问权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Read">
      <summary vsli:raw="Gets or sets read access for the specified registry keys.">获取或设置指定注册表项的读访问权限。</summary>
      <returns vsli:raw="A semicolon-separated list of registry key paths, for read access.">一个由分号分隔的注册表项路径列表，用于提供读取访问权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl">
      <summary vsli:raw="Gets or sets view access control for the specified registry keys.">获取或设置指定注册表项的查看访问控制。</summary>
      <returns vsli:raw="A semicolon-separated list of registry key paths, for view access control.">一个由分号分隔的注册表项路径列表，用于提供查看访问控制。</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify">
      <summary vsli:raw="Gets or sets a specified set of registry keys that can be viewed and modified.">获取或设置一组可以查看和修改的指定注册表项。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The get accessor is called; it is only provided for C# compiler compatibility.">调用 get 访问器；提供它仅为了与 C# 编译器兼容。</exception>
      <returns vsli:raw="A semicolon-separated list of registry key paths, for create, read, and write access.">一个由分号分隔的注册表项路径列表，用于提供创建、读取和写访问权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Write">
      <summary vsli:raw="Gets or sets write access for the specified registry keys.">获取或设置指定注册表项的写访问权限。</summary>
      <returns vsli:raw="A semicolon-separated list of registry key paths, for write access.">一个由分号分隔的注册表项路径列表，用于提供写访问权限。</returns>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBase">
      <summary vsli:raw="Allows control of code access security permissions.">允许控制代码访问安全权限。</summary>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Any">
      <summary vsli:raw="Specifies the character to be used to represent the any wildcard character.">指定要用来表示任何通配符的字符。</summary>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Local">
      <summary vsli:raw="Specifies the character to be used to represent a local reference.">指定要用来表示局部引用的字符。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.ResourcePermissionBase&quot; /&gt; class.">初始化 <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.ResourcePermissionBase&quot; /&gt; class with the specified level of access to resources at creation.">在创建过程中，用指定级别的资源访问权限初始化 <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary vsli:raw="Adds a permission entry to the permission.">将权限项添加到权限。</summary>
      <param name="entry" vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.ResourcePermissionBaseEntry&quot; /&gt; to add.">要添加的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The specified &lt;see cref=&quot;T:System.Security.Permissions.ResourcePermissionBaseEntry&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">指定的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The number of elements in the &lt;see cref=&quot;P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath&quot; /&gt; property is not equal to the number of elements in the &lt;see cref=&quot;P:System.Security.Permissions.ResourcePermissionBase.TagNames&quot; /&gt; property.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Security.Permissions.ResourcePermissionBaseEntry&quot; /&gt; is already included in the permission.">
        <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> 属性中的元素数目不等于 <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> 属性中的元素数目。  
  
- 或 - 
<see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 已经包含在权限中。</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Clear">
      <summary vsli:raw="Clears the permission of the added permission entries.">清除已添加的权限项的权限。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission object.">创建并返回与当前权限对象相同的副本。</summary>
      <returns vsli:raw="A copy of the current permission object.">当前权限对象的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="securityElement" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;securityElement&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The version number of the &lt;paramref name=&quot;securityElement&quot; /&gt; parameter is not supported.">
        <paramref name="securityElement" /> 参数不是有效的权限元素。  
  
- 或 - 
不支持 <paramref name="securityElement" /> 参数的版本号。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;securityElement&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="securityElement" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries">
      <summary vsli:raw="Returns an array of the &lt;see cref=&quot;T:System.Security.Permissions.ResourcePermissionBaseEntry&quot; /&gt; objects added to this permission.">返回已添加到此权限的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 对象的数组。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Security.Permissions.ResourcePermissionBaseEntry&quot; /&gt; objects that were added to this permission.">已添加到此权限的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 对象的数组。</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission object that is the intersection of the current permission object and a target permission object.">创建并返回作为当前权限对象和目标权限对象的交集的权限对象。</summary>
      <param name="target" vsli:raw="A permission object of the same type as the current permission object.">与当前权限对象类型相同的权限对象。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The target permission object is not of the same type as the current permission object.">目标权限对象与当前权限对象不属于同一类型。</exception>
      <returns vsli:raw="A new permission object that represents the intersection of the current object and the specified target. This object is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前对象和指定目标交集的新权限对象。 如果交集为空，则此对象为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission object is a subset of the specified permission.">确定当前权限对象是否是指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission object that is to be tested for the subset relationship.">将用于测试子集关系的权限对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission object is a subset of the specified permission object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限对象是指定权限对象的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted">
      <summary vsli:raw="Gets a value indicating whether the permission is unrestricted.">获取一个值，该值指示该权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果权限不受限制，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary vsli:raw="Removes a permission entry from the permission.">从该权限中移除权限项。</summary>
      <param name="entry" vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.ResourcePermissionBaseEntry&quot; /&gt; to remove.">要移除的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The specified &lt;see cref=&quot;T:System.Security.Permissions.ResourcePermissionBaseEntry&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">指定的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The number of elements in the &lt;see cref=&quot;P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath&quot; /&gt; property is not equal to the number of elements in the &lt;see cref=&quot;P:System.Security.Permissions.ResourcePermissionBase.TagNames&quot; /&gt; property.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Security.Permissions.ResourcePermissionBaseEntry&quot; /&gt; is not in the permission.">
        <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> 属性中的元素数目不等于 <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> 属性中的元素数目。  
  
- 或 - 
<see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 不在此权限中。</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.ToXml">
      <summary vsli:raw="Creates and returns an XML encoding of the security object and its current state.">创建并返回安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission object that combines the current permission object and the target permission object.">创建将当前权限对象与目标权限对象组合的权限对象。</summary>
      <param name="target" vsli:raw="A permission object to combine with the current permission object. It must be of the same type as the current permission object.">要与当前的权限对象合并的权限对象。 它必须与当前权限对象的类型相同。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; permission object is not of the same type as the current permission object.">
        <paramref name="target" /> 权限对象与当前权限对象不属于同一类型。</exception>
      <returns vsli:raw="A new permission object that represents the union of the current permission object and the specified permission object.">新权限对象，它表示当前权限对象和指定权限对象的并集。</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType">
      <summary vsli:raw="Gets or sets an enumeration value that describes the types of access that you are giving the resource.">获取或设置描述给予资源的访问权限类型的枚举值。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property value is &lt;see langword=&quot;null&quot; /&gt;.">属性值为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The property value is not an enumeration value.">属性值不是枚举值。</exception>
      <returns vsli:raw="An enumeration value that is derived from &lt;see cref=&quot;T:System.Type&quot; /&gt; and describes the types of access that you are giving the resource.">枚举值，它从 <see cref="T:System.Type" /> 派生并描述给予资源的访问权限的类型。</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.TagNames">
      <summary vsli:raw="Gets or sets an array of strings that identify the resource you are protecting.">获取或设置标识处于保护中的资源的字符串数组。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property value is &lt;see langword=&quot;null&quot; /&gt;.">属性值为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of the array is 0.">数组的长度为 0。</exception>
      <returns vsli:raw="An array of strings that identify the resource you are trying to protect.">标识处于保护中的资源的字符串数组。</returns>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBaseEntry">
      <summary vsli:raw="Defines the smallest unit of a code access security permission set.">定义代码访问安全权限集的最小单位。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.ResourcePermissionBaseEntry&quot; /&gt; class.">初始化 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor(System.Int32,System.String[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.ResourcePermissionBaseEntry&quot; /&gt; class with the specified permission access and permission access path.">用指定的权限访问和权限访问路径初始化 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 类的新实例。</summary>
      <param name="permissionAccess" vsli:raw="The integer representation of the permission access level enumeration value. The &lt;see cref=&quot;P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess&quot; /&gt; property is set to this value.">权限访问级别枚举值的整数表示形式。 <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess" /> 属性被设置为该值。</param>
      <param name="permissionAccessPath" vsli:raw="The array of strings that identify the resource you are protecting. The &lt;see cref=&quot;P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath&quot; /&gt; property is set to this value.">标识处于保护中的资源的字符串数组。 <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> 属性被设置为该值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The specified &lt;paramref name=&quot;permissionAccessPath&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">指定的 <paramref name="permissionAccessPath" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess">
      <summary vsli:raw="Gets an integer representation of the access level enumeration value.">获取访问级别枚举值的整数表示形式。</summary>
      <returns vsli:raw="The access level enumeration value.">访问级别枚举值。</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath">
      <summary vsli:raw="Gets an array of strings that identify the resource you are protecting.">获取标识处于保护中的资源的字符串数组。</summary>
      <returns vsli:raw="An array of strings that identify the resource you are protecting.">标识处于保护中的资源的字符串数组。</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermission">
      <summary vsli:raw="Describes a set of security permissions applied to code. This class cannot be inherited.">描述一组应用于代码的安全权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt; class with either restricted or unrestricted permission as specified.">根据指定，使用受限制或不受限制的权限初始化 <see cref="T:System.Security.Permissions.SecurityPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.SecurityPermissionFlag)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt; class with the specified initial set state of the flags.">初始化具有指定标志初始设置状态的 <see cref="T:System.Security.Permissions.SecurityPermission" /> 类的一个新实例。</summary>
      <param name="flag" vsli:raw="The initial state of the permission, represented by a bitwise OR combination of any permission bits defined by &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermissionFlag&quot; /&gt;.">权限的初始状态使用由 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> 定义的任何权限位的位 OR 组合来表示。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;flag&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermissionFlag&quot; /&gt;.">
        <paramref name="flag" /> 参数不是 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="esd" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="esd" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;esd&quot; /&gt; parameter's version number is not supported.">
        <paramref name="esd" /> 参数不是有效的权限元素。  
  
- 或 - 
不支持 <paramref name="esd" /> 参数的版本号。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission object that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的新权限对象。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermission.Flags">
      <summary vsli:raw="Gets or sets the security permission flags.">获取或设置安全权限标志。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="An attempt is made to set this property to an invalid value. See &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermissionFlag&quot; /&gt; for the valid values.">尝试将此属性设置为无效值。 有关有效值，请参阅 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />。</exception>
      <returns vsli:raw="The state of the current permission, represented by a bitwise OR combination of any permission bits defined by &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermissionFlag&quot; /&gt;.">当前权限的状态，使用由 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> 定义的任何权限位的按位 OR 组合来表示。</returns>
    </member>
    <member name="T:System.Security.Permissions.SiteIdentityPermission">
      <summary vsli:raw="Defines the identity permission for the Web site from which the code originates. This class cannot be inherited.">为代码所源自的网站定义标识权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.SiteIdentityPermission&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.SiteIdentityPermission&quot; /&gt; class to represent the specified site identity.">初始化 <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> 类的新实例，以表示指定的站点标识。</summary>
      <param name="site" vsli:raw="The site name or wildcard expression.">站点名称或通配符表达式。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;site&quot; /&gt; parameter is not a valid string, or does not match a valid wildcard site name.">
        <paramref name="site" /> 参数不是有效的字符串，或与有效的通配符站点名称不匹配。</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="esd" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="esd" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;esd&quot; /&gt; parameter's version number is not valid.">
        <paramref name="esd" /> 参数不是有效的权限元素。  
  
- 或 - 
<paramref name="esd" /> 参数的版本号无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.  &#xA;  &#xA; -or-  &#xA;  &#xA; The permissions are not equal and one is not a subset of the other.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。  
  
- 或 - 
权限不相等且其中一个不是另一个的子集。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.SiteIdentityPermission.Site">
      <summary vsli:raw="Gets or sets the current site.">获取或设置当前站点。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The site identity cannot be retrieved because it has an ambiguous identity.">无法检索站点标识，因为它的标识不明确。</exception>
      <returns vsli:raw="The current site.">当前站点。</returns>
    </member>
    <member name="T:System.Security.Permissions.SiteIdentityPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.SiteIdentityPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.SiteIdentityPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.SiteIdentityPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new instance of &lt;see cref=&quot;T:System.Security.Permissions.SiteIdentityPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> 实例。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.SiteIdentityPermission&quot; /&gt; that corresponds to this attribute.">与此属性对应的 <see cref="T:System.Security.Permissions.SiteIdentityPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.SiteIdentityPermissionAttribute.Site">
      <summary vsli:raw="Gets or sets the site name of the calling code.">获取或设置调用代码的站点名称。</summary>
      <returns vsli:raw="The site name to compare against the site name specified by the security provider.">要与安全提供程序所指定站点名称相比较的站点名称。</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermission">
      <summary vsli:raw="Controls access to stores containing X.509 certificates. This class cannot be inherited.">控制对包含 X.509 证书的存储区的访问权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.StorePermission&quot; /&gt; class with either fully restricted or unrestricted permission state.">使用完全受限制或不受限制权限的状态初始化 <see cref="T:System.Security.Permissions.StorePermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; value.">
        <paramref name="state" /> 不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.StorePermission&quot; /&gt; class with the specified access.">使用指定的访问权限初始化 <see cref="T:System.Security.Permissions.StorePermission" /> 类的新实例。</summary>
      <param name="flag" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.StorePermissionFlags&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flag&quot; /&gt; is not a valid combination of &lt;see cref=&quot;T:System.Security.Permissions.StorePermissionFlags&quot; /&gt; values.">
        <paramref name="flag" /> 不是有效的 <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 值组合。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="securityElement" vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains the XML encoding to use to reconstruct the permission.">包含用于重新构造权限的 XML 编码的 <see cref="T:System.Security.SecurityElement" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="securityElement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The version number in &lt;paramref name=&quot;securityElement&quot; /&gt; is not valid.">
        <paramref name="securityElement" /> 不是有效的权限元素。  
  
- 或 - 
<paramref name="securityElement" /> 中的版本号无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; s not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission to test for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains an XML encoding of the permission, including any state information.">包含权限及其任何状态信息的 XML 编码的 <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermission.Flags">
      <summary vsli:raw="Gets or sets the type of &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Store&quot; /&gt; access allowed by the current permission.">获取或设置当前权限允许的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> 访问的类型。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="An attempt is made to set this property to an invalid value. See &lt;see cref=&quot;T:System.Security.Permissions.StorePermissionFlags&quot; /&gt; for the valid values.">尝试将此属性设置为无效值。 有关有效值，请参阅 <see cref="T:System.Security.Permissions.StorePermissionFlags" />。</exception>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.StorePermissionFlags&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 值的按位组合。</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.StorePermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.StorePermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.StorePermissionAttribute&quot; /&gt; class with the specified security action.">使用指定的安全操作初始化 <see cref="T:System.Security.Permissions.StorePermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.StorePermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.StorePermission" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.StorePermission&quot; /&gt; that corresponds to the attribute.">与此特性对应的 <see cref="T:System.Security.Permissions.StorePermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.AddToStore">
      <summary vsli:raw="Gets or sets a value indicating whether the code is permitted to add to a store.">获取或设置一个值，该值指示是否允许代码向存储区添加。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the ability to add to a store is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许向存储区添加，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.CreateStore">
      <summary vsli:raw="Gets or sets a value indicating whether the code is permitted to create a store.">获取或设置一个值，该值指示是否允许代码创建存储区。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the ability to create a store is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许创建存储区，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.DeleteStore">
      <summary vsli:raw="Gets or sets a value indicating whether the code is permitted to delete a store.">获取或设置一个值，该值指示是否允许代码删除存储区。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the ability to delete a store is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许删除存储区，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates">
      <summary vsli:raw="Gets or sets a value indicating whether the code is permitted to enumerate the certificates in a store.">获取或设置一个值，该值指示是否允许代码枚举存储区中的证书。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the ability to enumerate certificates is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许枚举证书，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateStores">
      <summary vsli:raw="Gets or sets a value indicating whether the code is permitted to enumerate stores.">获取或设置一个值，该值指示是否允许代码枚举存储区。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the ability to enumerate stores is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许枚举存储区，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.Flags">
      <summary vsli:raw="Gets or sets the store permissions.">获取或设置存储区权限。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Permissions.StorePermissionFlags&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Security.Permissions.StorePermissionFlags.NoFlags&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 值的按位组合。 默认值为 <see cref="F:System.Security.Permissions.StorePermissionFlags.NoFlags" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.OpenStore">
      <summary vsli:raw="Gets or sets a value indicating whether the code is permitted to open a store.">获取或设置一个值，该值指示是否允许代码打开存储区。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the ability to open a store is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许打开存储区，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.RemoveFromStore">
      <summary vsli:raw="Gets or sets a value indicating whether the code is permitted to remove a certificate from a store.">获取或设置一个值，该值指示是否允许代码从存储区中移除证书。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the ability to remove a certificate from a store is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许从存储区中移除证书，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionFlags">
      <summary vsli:raw="Specifies the permitted access to X.509 certificate stores.">指定对 X.509 证书存储区的允许访问权限。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AddToStore">
      <summary vsli:raw="&lt;para&gt;The ability to add a certificate to a store.&lt;/para&gt;&lt;para&gt;For security reasons, this ability should be granted only to highly trusted code.&lt;/para&gt;">
        <para>将证书添加到存储区的能力。</para>
        <para>出于安全原因，应仅向高度受信任的代码授予此功能。</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AllFlags">
      <summary vsli:raw="The ability to perform all certificate and store operations.">执行所有证书和存储区操作的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.CreateStore">
      <summary vsli:raw="&lt;para&gt;The ability to create a new store.&lt;/para&gt;&lt;para&gt;New stores are created by calling the &lt;see cref=&quot;M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)&quot; /&gt; method.&lt;/para&gt;">
        <para>新建存储区的能力。</para>
        <para>新存储是通过调用 <see cref="M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)" /> 方法创建而成的。</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.DeleteStore">
      <summary vsli:raw="&lt;para&gt;The ability to delete a store.&lt;/para&gt;&lt;para&gt;This functionality is not exposed by the &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Store&quot; /&gt; class.&lt;/para&gt;">
        <para>删除存储区的能力。</para>
        <para>
          <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> 类没有公开此功能。</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateCertificates">
      <summary vsli:raw="&lt;para&gt;The ability to enumerate the certificates in a store.&lt;/para&gt;&lt;para&gt;For privacy reasons, this ability should be granted only to fully trusted code.&lt;/para&gt;">
        <para>枚举存储区中的证书的能力。</para>
        <para>出于隐私原因，应仅向高度受信任的代码授予此功能。</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateStores">
      <summary vsli:raw="&lt;para&gt;The ability to enumerate the stores on a computer.&lt;/para&gt;&lt;para&gt;This functionality is not exposed by the &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Store&quot; /&gt; class.&lt;/para&gt;">
        <para>枚举计算机上的存储区的能力。</para>
        <para>
          <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> 类没有公开此功能。</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.NoFlags">
      <summary vsli:raw="Permission is not given to perform any certificate or store operations.">未授予执行任何证书或存储区操作的权限。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.OpenStore">
      <summary vsli:raw="&lt;para&gt;The ability to open a store.&lt;/para&gt;&lt;para&gt;The ability to open a store does not include the ability to enumerate certificates (which raises privacy concerns) or to add or remove certificates (which raises security concerns).&lt;/para&gt;">
        <para>打开存储区的能力。</para>
        <para>打开存储的功能不包括枚举证书（导致隐私问题）以及添加或删除证书（导致安全问题）的功能。</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.RemoveFromStore">
      <summary vsli:raw="&lt;para&gt;The ability to remove a certificate from a store.&lt;/para&gt;&lt;para&gt;This ability should be granted only to highly trusted code because removing a certificate can result in a denial of service.&lt;/para&gt;">
        <para>从存储区中移除证书的能力。</para>
        <para>此功能应仅授予给高度受信任的代码，因为删除证书可能会导致拒绝服务。</para>
      </summary>
    </member>
    <member name="T:System.Security.Permissions.StrongNameIdentityPermission">
      <summary vsli:raw="Defines the identity permission for strong names. This class cannot be inherited.">定义强名称的标识权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt; class for the specified strong name identity.">为指定的强名称标识初始化 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 类的新实例。</summary>
      <param name="blob" vsli:raw="The public key defining the strong name identity namespace.">定义强名称标识命名空间的公共密钥。</param>
      <param name="name" vsli:raw="The simple name part of the strong name identity. This corresponds to the name of the assembly.">强名称标识的简单名称部分。 这对应于程序集的名称。</param>
      <param name="version" vsli:raw="The version number of the identity.">标识的版本号。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;blob&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="blob" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is an empty string (&quot;&quot;).">
        <paramref name="name" /> 参数为空字符串 ("")。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;e&quot; /&gt; parameter's version number is not valid.">
        <paramref name="e" /> 参数不是有效的权限元素。  
  
- 或 - 
<paramref name="e" /> 参数的版本号无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission, or &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">一个新权限，表示当前权限与指定权限的交集，或者若果交集为空，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.  &#xA;  &#xA; -or-  &#xA;  &#xA; The two permissions are not equal and one is a subset of the other.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。  
  
- 或 - 
这两个权限不相等，而且其中一个是另一个的子集。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Name">
      <summary vsli:raw="Gets or sets the simple name portion of the strong name identity.">获取或设置强名称标识的简单名称部分。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value is an empty string (&quot;&quot;).">值为空字符串 ("")。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property value cannot be retrieved because it contains an ambiguous identity.">无法检索此属性值，因为它包含的标识不明确。</exception>
      <returns vsli:raw="The simple name of the identity.">标识的简单名称。</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey">
      <summary vsli:raw="Gets or sets the public key blob that defines the strong name identity namespace.">获取或设置定义强名称标识命名空间的公钥 blob。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property value is set to &lt;see langword=&quot;null&quot; /&gt;.">将属性值设置为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property value cannot be retrieved because it contains an ambiguous identity.">无法检索此属性值，因为它包含的标识不明确。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.StrongNamePublicKeyBlob&quot; /&gt; that contains the public key of the identity, or &lt;see langword=&quot;null&quot; /&gt; if there is no key.">为包含标识的公钥的 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />，或者，如果没有任何密钥，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Version">
      <summary vsli:raw="Gets or sets the version number of the identity.">获取或设置标识的版本号。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property value cannot be retrieved because it contains an ambiguous identity.">无法检索此属性值，因为它包含的标识不明确。</exception>
      <returns vsli:raw="The version of the identity.">标识的版本。</returns>
    </member>
    <member name="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The method failed because the key is &lt;see langword=&quot;null&quot; /&gt;.">该方法失败，因为关键字为 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt; that corresponds to this attribute.">与此属性对应的 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Name">
      <summary vsli:raw="Gets or sets the name of the strong name identity.">获取或设置强名称标识的名称。</summary>
      <returns vsli:raw="A name to compare against the name specified by the security provider.">要与安全提供程序所指定名称相比较的名称。</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.PublicKey">
      <summary vsli:raw="Gets or sets the public key value of the strong name identity expressed as a hexadecimal string.">获取或设置用十六进制字符串表示的强名称标识的公钥值。</summary>
      <returns vsli:raw="The public key value of the strong name identity expressed as a hexadecimal string.">用十六进制字符串表示的强名称标识的公钥值。</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Version">
      <summary vsli:raw="Gets or sets the version of the strong name identity.">获取或设置强名称标识的版本。</summary>
      <returns vsli:raw="The version number of the strong name identity.">强名称标识的版本号。</returns>
    </member>
    <member name="T:System.Security.Permissions.StrongNamePublicKeyBlob">
      <summary vsli:raw="Represents the public key information (called a blob) for a strong name. This class cannot be inherited.">表示强名称的公钥信息（称为 Blob）。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.StrongNamePublicKeyBlob&quot; /&gt; class with raw bytes of the public key blob.">使用公钥 Blob 的原始字节初始化 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> 类的新实例。</summary>
      <param name="publicKey" vsli:raw="The array of bytes representing the raw public key data.">表示原始公钥数据的字节数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;publicKey&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="publicKey" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.Equals(System.Object)">
      <summary vsli:raw="Gets or sets a value indicating whether the current public key blob is equal to the specified public key blob.">获取或设置一个值，该值指示当前公钥 Blob 是否等于所指定的公钥 Blob。</summary>
      <param name="o" vsli:raw="An object containing a public key blob.">包含公钥 Blob 的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the public key blob of the current object is equal to the public key blob of the &lt;paramref name=&quot;o&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前对象的公钥 Blob 等于 <paramref name="o" /> 参数的公钥 Blob，则值为 <see langword="true" />，否则值为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.GetHashCode">
      <summary vsli:raw="Returns a hash code based on the public key.">返回一个基于公钥的哈希代码。</summary>
      <returns vsli:raw="The hash code based on the public key.">基于公钥的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.ToString">
      <summary vsli:raw="Creates and returns a string representation of the public key blob.">创建并返回公钥 Blob 的字符串表示形式。</summary>
      <returns vsli:raw="A hexadecimal version of the public key blob.">公钥 Blob 的十六进制版本。</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermission">
      <summary vsli:raw="Defines partial-trust access to the &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt; class.">定义对 <see cref="T:System.ComponentModel.TypeDescriptor" /> 类的部分信任访问。</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.TypeDescriptorPermission&quot; /&gt; class.">初始化 <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; to request. Only &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt; and &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.None&quot; /&gt; are valid.">要请求的 <see cref="T:System.Security.Permissions.PermissionState" />。 仅 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 和 <see cref="F:System.Security.Permissions.PermissionState.None" /> 有效。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid permission state. Only &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt; and &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.None&quot; /&gt; are valid.">
        <paramref name="state" /> 不是有效的权限状态。 仅 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 和 <see cref="F:System.Security.Permissions.PermissionState.None" /> 有效。</exception>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.TypeDescriptorPermission&quot; /&gt; class with the specified permission flags.">初始化具有指定权限标志的 <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> 类的新实例。</summary>
      <param name="flag" vsli:raw="The permission flags to request.">要请求的权限标志。</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Copy">
      <summary vsli:raw="When implemented by a derived class, creates and returns an identical copy of the current permission object.">由派生类实现时，创建并返回当前权限对象的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission object.">当前权限对象的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.">当在派生类中替代时，用 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="securityElement" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.">通过派生类实现时，创建和返回是当前权限和指定权限的交集的权限。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="When implemented by a derived class, determines whether the current permission is a subset of the specified permission.">通过派生类实现时，确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted">
      <summary vsli:raw="Gets a value that indicates whether the type descriptor may be called from partially trusted code.">获取一个值，该值指示是否可以从部分信任的代码调用类型描述符。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Security.Permissions.TypeDescriptorPermission.Flags&quot; /&gt; property is set to &lt;see cref=&quot;F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="P:System.Security.Permissions.TypeDescriptorPermission.Flags" /> 属性设置为 <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.ToXml">
      <summary vsli:raw="When overridden in a derived class, creates an XML encoding of the security object and its current state.">当在派生类中重写时，创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.">当在派生类中重写时，则创建属于当前权限与指定权限的并集的权限。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermission.Flags">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Security.Permissions.TypeDescriptorPermissionFlags&quot; /&gt; for the type descriptor.">获取或设置该类型描述符的 <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.TypeDescriptorPermissionFlags&quot; /&gt; for the type descriptor.">该类型描述符的 <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionAttribute">
      <summary vsli:raw="Determines the permission flags that apply to a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">确定应用于 <see cref="T:System.ComponentModel.TypeDescriptor" /> 的权限标志。</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.TypeDescriptorPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.TypeDescriptorPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission">
      <summary vsli:raw="When overridden in a derived class, creates a permission object that can then be serialized into binary form and persistently stored along with the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; in an assembly's metadata.">当在派生类中重写时，创建一个权限对象，随后可将其序列化为二进制形式并连同 <see cref="T:System.Security.Permissions.SecurityAction" /> 长久存储在程序集的元数据中。</summary>
      <returns vsli:raw="A serializable permission object.">可序列化的权限对象。</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Security.Permissions.TypeDescriptorPermissionFlags&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">获取或设置 <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> 的 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.TypeDescriptorPermissionFlags&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> 的 <see cref="T:System.ComponentModel.TypeDescriptor" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess">
      <summary vsli:raw="Gets or sets a value that indicates whether the type descriptor can be accessed from partial trust.">获取或设置一个值，该值指示是否可以在部分信任模式下访问类型描述符。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type descriptor can be accessed from partial trust; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可在部分信任模式下访问类型描述符，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionFlags">
      <summary vsli:raw="Defines permission settings for type descriptors.">定义类型描述符的权限设置。</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.NoFlags">
      <summary vsli:raw="No permission flags are set on the type descriptor.">未对类型描述符设置权限标志。</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess">
      <summary vsli:raw="The type descriptor may be called from partially trusted code.">可以从部分受信任的代码调用类型描述符。</summary>
    </member>
    <member name="T:System.Security.Permissions.UIPermission">
      <summary vsli:raw="Controls the permissions related to user interfaces and the Clipboard. This class cannot be inherited.">控制与用户界面和剪贴板相关的权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.UIPermission&quot; /&gt; class with either fully restricted or unrestricted access, as specified.">根据指定，使用完全限制或不受限制的访问初始化 <see cref="T:System.Security.Permissions.UIPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the enumeration values.">枚举值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是有效的 <see cref="T:System.Security.Permissions.PermissionState" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.UIPermission&quot; /&gt; class with the permissions for the Clipboard, and no access to windows.">初始化具有剪贴板权限且无法访问 windows 的 <see cref="T:System.Security.Permissions.UIPermission" /> 类的新实例。</summary>
      <param name="clipboardFlag" vsli:raw="One of the enumeration values.">枚举值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;clipboardFlag&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.Permissions.UIPermissionClipboard&quot; /&gt; value.">
        <paramref name="clipboardFlag" /> 参数不是有效的 <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.UIPermission&quot; /&gt; class with the permissions for windows, and no access to the Clipboard.">在具有使用窗口的权限，但没有对剪贴板的访问权限的情况下，初始化 <see cref="T:System.Security.Permissions.UIPermission" /> 类的新实例。</summary>
      <param name="windowFlag" vsli:raw="One of the enumeration values.">枚举值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;windowFlag&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.Permissions.UIPermissionWindow&quot; /&gt; value.">
        <paramref name="windowFlag" /> 参数不是有效的 <see cref="T:System.Security.Permissions.UIPermissionWindow" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.UIPermission&quot; /&gt; class with the specified permissions for windows and the Clipboard.">使用指定的窗口和剪贴板权限初始化 <see cref="T:System.Security.Permissions.UIPermission" /> 类的新实例。</summary>
      <param name="windowFlag" vsli:raw="One of the enumeration values.">枚举值之一。</param>
      <param name="clipboardFlag" vsli:raw="One of the enumeration values.">枚举值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;windowFlag&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.Permissions.UIPermissionWindow&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;clipboardFlag&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.Permissions.UIPermissionClipboard&quot; /&gt; value.">
        <paramref name="windowFlag" /> 参数不是有效的 <see cref="T:System.Security.Permissions.UIPermissionWindow" /> 值。  
  
- 或 - 
<paramref name="clipboardFlag" /> 参数不是有效的 <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="esd" vsli:raw="The XML encoding used to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="esd" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;esd&quot; /&gt; parameter's version number is not valid.">
        <paramref name="esd" /> 参数不是有效的权限元素。  
  
- 或 - 
<paramref name="esd" /> 参数的版本号无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission to test for the subset relationship. This permission must be the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is unrestricted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the permission and the specified permission.">创建一个权限，它是该权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermission.Clipboard">
      <summary vsli:raw="Gets or sets the Clipboard access represented by the permission.">获取或设置由该权限表示的剪贴板访问权限。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.UIPermissionClipboard&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> 值之一。</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermission.Window">
      <summary vsli:raw="Gets or sets the window access represented by the permission.">获取或设置由权限表示的窗口访问。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.UIPermissionWindow&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.UIPermissionWindow" /> 值之一。</returns>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.UIPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.UIPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.UIPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.UIPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.UIPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.UIPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.UIPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.UIPermission" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.UIPermission&quot; /&gt; that corresponds to this attribute.">与此属性对应的 <see cref="T:System.Security.Permissions.UIPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermissionAttribute.Clipboard">
      <summary vsli:raw="Gets or sets the type of access to the clipboard that is permitted.">获取或设置所允许的对剪贴板访问权限的类型。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.UIPermissionClipboard&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> 值之一。</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermissionAttribute.Window">
      <summary vsli:raw="Gets or sets the type of access to the window resources that is permitted.">获取或设置所允许的对窗口资源访问权限的类型。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.UIPermissionWindow&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.UIPermissionWindow" /> 值之一。</returns>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionClipboard">
      <summary vsli:raw="Specifies the type of clipboard access that is allowed to the calling code.">指定允许调用代码的剪贴板访问权限的类型。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      <summary vsli:raw="Clipboard can be used without restriction.">可以不受限制地使用剪贴板。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.NoClipboard">
      <summary vsli:raw="Clipboard cannot be used.">不能使用剪贴板。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard">
      <summary vsli:raw="The ability to put data on the clipboard (&lt;see langword=&quot;Copy&quot; /&gt;, &lt;see langword=&quot;Cut&quot; /&gt;) is unrestricted. Intrinsic controls that accept &lt;see langword=&quot;Paste&quot; /&gt;, such as text box, can accept the clipboard data, but user controls that must programmatically read the clipboard cannot.">在剪贴板上放置数据的能力 (<see langword="Copy" />、<see langword="Cut" />) 不受限制。 接受 <see langword="Paste" /> 的内部控件（例如文本框）可以接受剪贴板数据，但是必须以编程方式进行读取剪贴板的用户控件不能接受剪贴板数据。</summary>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionWindow">
      <summary vsli:raw="Specifies the type of windows that code is allowed to use.">指定允许使用代码的窗口的类型。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.AllWindows">
      <summary vsli:raw="Users can use all windows and user input events without restriction.">用户可以不受限制地使用所有窗口和用户输入事件。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.NoWindows">
      <summary vsli:raw="Users cannot use any windows or user interface events. No user interface can be used.">用户不能使用任何窗口或用户界面事件。 不能使用任何用户界面。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows">
      <summary vsli:raw="Users can only use &lt;see cref=&quot;F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows&quot; /&gt; for drawing, and can only use user input events for user interface within that subwindow. Examples of &lt;see cref=&quot;F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows&quot; /&gt; are a &lt;see cref=&quot;T:System.Windows.Forms.MessageBox&quot; /&gt;, common dialog controls, and a control displayed within a browser.">用户只能使用 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> 进行绘图，并且只能对该子窗口中的用户界面使用用户输入事件。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> 的示例包括 <see cref="T:System.Windows.Forms.MessageBox" />、通用对话框控件和在浏览器中显示的控件。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows">
      <summary vsli:raw="Users can only use &lt;see cref=&quot;F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&quot; /&gt; and &lt;see cref=&quot;F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows&quot; /&gt; for drawing, and can only use user input events for the user interface within those top-level windows and subwindows. See the Remarks section for more information.">用户只能使用 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /> 和 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> 进行绘图，并且只能对那些顶级窗口和子窗口中的用户界面使用用户输入事件。 有关详细信息，请参阅备注部分。</summary>
    </member>
    <member name="T:System.Security.Permissions.UrlIdentityPermission">
      <summary vsli:raw="Defines the identity permission for the URL from which the code originates. This class cannot be inherited.">为代码的来源 URL 定义标识权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.UrlIdentityPermission&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.UrlIdentityPermission&quot; /&gt; class to represent the URL identity described by &lt;paramref name=&quot;site&quot; /&gt;.">初始化 <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> 类的新实例，以表示 <paramref name="site" /> 所描述的 URL 标识。</summary>
      <param name="site" vsli:raw="A URL or wildcard expression.">URL 或通配符表达式。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;site&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="site" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.FormatException" vsli:raw="The length of the &lt;paramref name=&quot;site&quot; /&gt; parameter is zero.">
        <paramref name="site" /> 参数的长度为零。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The URL, directory, or site portion of the &lt;paramref name=&quot;site&quot; /&gt; parameter is not valid.">
        <paramref name="site" /> 参数的 URL、目录或的站点部分无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="esd" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="esd" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;esd&quot; /&gt; parameter's version number is not valid.">
        <paramref name="esd" /> 参数不是有效的权限元素。  
  
- 或 - 
<paramref name="esd" /> 参数的版本号无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.  &#xA;  &#xA; -or-  &#xA;  &#xA; The Url property is not a valid URL.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。  
  
- 或 - 
此 Url 属性不是有效的 URL。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.  &#xA;  &#xA; -or-  &#xA;  &#xA; The Url property is not a valid URL.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。  
  
- 或 - 
此 Url 属性不是有效的 URL。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Security.Permissions.UrlIdentityPermission.Url&quot; /&gt; property is not a valid URL.  &#xA;  &#xA; -or-  &#xA;  &#xA; The two permissions are not equal and one is not a subset of the other.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。  
  
- 或 - 
<see cref="P:System.Security.Permissions.UrlIdentityPermission.Url" /> 属性不是有效的 URL。  
  
- 或 - 
两个权限不相等，而且其中一个不是另一个的子集。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The operation is ambiguous because the permission represents multiple identities.">操作不明确，因为权限表示多个标识。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.UrlIdentityPermission.Url">
      <summary vsli:raw="Gets or sets a URL representing the identity of Internet code.">获取或设置表示 Internet 代码的标识的 URL。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The URL cannot be retrieved because it has an ambiguous identity.">无法检索 URL，因为它的标识不明确。</exception>
      <returns vsli:raw="A URL representing the identity of Internet code.">表示 Internet 代码的标识的 URL。</returns>
    </member>
    <member name="T:System.Security.Permissions.UrlIdentityPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.UrlIdentityPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.UrlIdentityPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.UrlIdentityPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.UrlIdentityPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.UrlIdentityPermission" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.UrlIdentityPermission&quot; /&gt; that corresponds to this attribute.">与此属性对应的 <see cref="T:System.Security.Permissions.UrlIdentityPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.UrlIdentityPermissionAttribute.Url">
      <summary vsli:raw="Gets or sets the full URL of the calling code.">获取或设置调用代码的完整 URL。</summary>
      <returns vsli:raw="The URL to match with the URL specified by the host.">要与主应用程序所指定 URL 匹配的 URL。</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.WebBrowserPermission&quot; /&gt; object controls the ability to create the WebBrowser control.">
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 对象控制创建 WebBrowser 控件的能力。</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.WebBrowserPermission&quot; /&gt; class.">初始化 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.WebBrowserPermission&quot; /&gt; class by specifying a permission state.">通过指定一个权限状态，初始化 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 类的一个新实例。</summary>
      <param name="state" vsli:raw="An enumerated value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 的枚举值。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.WebBrowserPermission&quot; /&gt; class by specifying the Web browser permission level.">通过指定 Web 浏览器的权限级别，初始化 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 类的一个新实例。</summary>
      <param name="webBrowserPermissionLevel" vsli:raw="An enumerated value of &lt;see cref=&quot;T:System.Security.Permissions.WebBrowserPermissionLevel&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" /> 的枚举值。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="securityElement" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <returns vsli:raw="The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.">两个权限的交集是描述两者共同描述的状态的权限。 只有传递两个原始权限的请求对相交的权限有效。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether the current permission is unrestricted.">返回一个值，该值指示当前权限是否不受限制。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Security.Permissions.WebBrowserPermission.Level&quot; /&gt; property is set to &lt;see cref=&quot;F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> 属性设置为 <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary vsli:raw="Gets or sets the current value of the Web browser permission level.">获取或设置 Web 浏览器权限级别的当前值。</summary>
      <returns vsli:raw="The current value of the Web browser permission level.">Web 浏览器权限级别的当前值。</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.WebBrowserPermission&quot; /&gt; to be applied to code using declarative security.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 执行安全操作。</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.WebBrowserPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.WebBrowserPermission&quot; /&gt; class.">创建并返回 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 类的新实例。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.WebBrowserPermission&quot; /&gt; corresponding to the security declaration.">与安全声明相对应的 <see cref="T:System.Security.Permissions.WebBrowserPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary vsli:raw="Gets or sets the current Web browser permission level for the &lt;see cref=&quot;T:System.Security.Permissions.WebBrowserPermissionAttribute&quot; /&gt;.">为 <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> 获取或设置当前 Web 浏览器权限级别。</summary>
      <returns vsli:raw="The state of the current Web browser permission level.">当前 Web 浏览器权限级别的状态。</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary vsli:raw="Specifies the permission level for a Web browser.">指定 Web 浏览器的权限级别。</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary vsli:raw="A Web browser that cannot navigate frames to HTML.">无法将框架定位到 HTML 的 Web 浏览器。</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary vsli:raw="A Web browser that can safely navigate frames to HTML but with several restrictions.">可以安全地将框架定位到 HTML（但需要满足若干个限制）的 Web 浏览器。</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary vsli:raw="A Web browser that can navigate without restrictions.">可以不受限制地进行定位的 Web 浏览器。</summary>
    </member>
    <member name="T:System.Security.Permissions.ZoneIdentityPermission">
      <summary vsli:raw="Defines the identity permission for the zone from which the code originates. This class cannot be inherited.">为代码的来源区域定义标识权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.ZoneIdentityPermission&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.ZoneIdentityPermission&quot; /&gt; class to represent the specified zone identity.">初始化 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 类的新实例，以表示指定的区域标识。</summary>
      <param name="zone" vsli:raw="The zone identifier.">区域标识符。</param>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="esd" vsli:raw="The XML encoding to use to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="esd" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;esd&quot; /&gt; parameter is not a valid permission element.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;esd&quot; /&gt; parameter's version number is not valid.">
        <paramref name="esd" /> 参数不是有效的权限元素。  
  
- 或 - 
<paramref name="esd" /> 参数的版本号无效。</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be of the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current permission is a subset of the specified permission.">确定当前权限是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, this permission does not represent the &lt;see cref=&quot;F:System.Security.SecurityZone.NoZone&quot; /&gt; security zone, and the specified permission is not equal to the current permission.">
        <paramref name="target" /> 参数不是 <see langword="null" />，此权限不表示 <see cref="F:System.Security.SecurityZone.NoZone" /> 安全区域，且指定的权限不等于当前的权限。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current permission is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission and its current state.">创建权限及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the permission, including any state information.">权限的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt; and is not of the same type as the current permission.  &#xA;  &#xA; -or-  &#xA;  &#xA; The two permissions are not equal and the current permission does not represent the &lt;see cref=&quot;F:System.Security.SecurityZone.NoZone&quot; /&gt; security zone.">
        <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。  
  
- 或 - 
两个权限不相等，并且当前权限不表示 <see cref="F:System.Security.SecurityZone.NoZone" /> 安全区域。</exception>
      <returns vsli:raw="A new permission that represents the union of the current permission and the specified permission.">表示同时兼具当前权限和指定权限的新权限。</returns>
    </member>
    <member name="P:System.Security.Permissions.ZoneIdentityPermission.SecurityZone">
      <summary vsli:raw="Gets or sets the zone represented by the current &lt;see cref=&quot;T:System.Security.Permissions.ZoneIdentityPermission&quot; /&gt;.">获取或设置由当前 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 表示的区域。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter value is not a valid value of &lt;see cref=&quot;T:System.Security.SecurityZone&quot; /&gt;.">参数值不是有效的 <see cref="T:System.Security.SecurityZone" /> 值。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Security.SecurityZone&quot; /&gt; values.">
        <see cref="T:System.Security.SecurityZone" /> 值之一。</returns>
    </member>
    <member name="T:System.Security.Permissions.ZoneIdentityPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Security.Permissions.ZoneIdentityPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Permissions.ZoneIdentityPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Permissions.ZoneIdentityPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Security.Permissions.ZoneIdentityPermission&quot; /&gt;.">创建并返回一个新的 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.ZoneIdentityPermission&quot; /&gt; that corresponds to this attribute.">与此属性对应的 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone">
      <summary vsli:raw="Gets or sets membership in the content zone specified by the property value.">获取或设置属性值指定的内容区域中的成员身份。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Security.SecurityZone&quot; /&gt; values.">
        <see cref="T:System.Security.SecurityZone" /> 值之一。</returns>
    </member>
    <member name="T:System.Security.Policy.AllMembershipCondition">
      <summary vsli:raw="Represents a membership condition that matches all code. This class cannot be inherited.">表示与所有代码匹配的成员条件。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.AllMembershipCondition&quot; /&gt; class.">初始化 <see cref="T:System.Security.Policy.AllMembershipCondition" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary vsli:raw="Determines whether the specified evidence satisfies the membership condition.">确定指定的证据是否能满足成员条件。</summary>
      <param name="evidence" vsli:raw="The evidence set against which to make the test.">证据集，将根据它进行测试。</param>
      <returns vsli:raw="Always &lt;see langword=&quot;true&quot; /&gt;.">总是为 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Copy">
      <summary vsli:raw="Creates an equivalent copy of the membership condition.">创建成员条件的等效副本。</summary>
      <returns vsli:raw="A new, identical copy of the current membership condition.">当前成员条件的完全相同的新副本。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified membership condition is an &lt;see cref=&quot;T:System.Security.Policy.AllMembershipCondition&quot; /&gt;.">确定指定的成员条件是否为 <see cref="T:System.Security.Policy.AllMembershipCondition" />。</summary>
      <param name="o" vsli:raw="The object to compare to &lt;see cref=&quot;T:System.Security.Policy.AllMembershipCondition&quot; /&gt;.">要与 <see cref="T:System.Security.Policy.AllMembershipCondition" /> 比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified membership condition is an &lt;see cref=&quot;T:System.Security.Policy.AllMembershipCondition&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的成员条件是 <see cref="T:System.Security.Policy.AllMembershipCondition" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <param name="level" vsli:raw="The policy level context used to resolve named permission set references.">用于解析命名的权限集引用的策略级别上下文。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is not a valid membership condition element.">
        <paramref name="e" /> 参数不是有效的成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.GetHashCode">
      <summary vsli:raw="Gets the hash code for the current membership condition.">获取当前成员条件的哈希代码。</summary>
      <returns vsli:raw="The hash code for the current membership condition.">当前成员条件的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToString">
      <summary vsli:raw="Creates and returns a string representation of the membership condition.">创建并返回成员条件的字符串表示形式。</summary>
      <returns vsli:raw="A representation of the membership condition.">成员条件的表示形式。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state with the specified &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" /> 创建安全对象及其当前状态的 XML 编码。</summary>
      <param name="level" vsli:raw="The policy level context for resolving named permission set references.">用于解析命名的权限集引用的策略级别上下文。</param>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationDirectory">
      <summary vsli:raw="Provides the application directory as evidence for policy evaluation. This class cannot be inherited.">提供应用程序目录作为策略评估的证据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationDirectory&quot; /&gt; class.">初始化 <see cref="T:System.Security.Policy.ApplicationDirectory" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The path of the application directory.">应用程序目录的路径。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.Copy">
      <summary vsli:raw="Creates a new copy of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationDirectory&quot; /&gt;.">创建 <see cref="T:System.Security.Policy.ApplicationDirectory" /> 的新副本。</summary>
      <returns vsli:raw="A new, identical copy of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationDirectory&quot; /&gt;.">
        <see cref="T:System.Security.Policy.ApplicationDirectory" /> 的相同的新副本。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.Equals(System.Object)">
      <summary vsli:raw="Determines whether instances of the same type of an evidence object are equivalent.">确定证据对象相同类型的实例是否是等效的。</summary>
      <param name="o" vsli:raw="An object of same type as the current evidence object.">与当前证据对象类型相同的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个实例等效，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.GetHashCode">
      <summary vsli:raw="Gets the hash code of the current application directory.">获取当前应用程序目录的哈希代码。</summary>
      <returns vsli:raw="The hash code of the current application directory.">当前应用程序目录的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.ToString">
      <summary vsli:raw="Gets a string representation of the state of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationDirectory&quot; /&gt; evidence object.">获取 <see cref="T:System.Security.Policy.ApplicationDirectory" /> 证据对象的状态的字符串表示形式。</summary>
      <returns vsli:raw="A representation of the state of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationDirectory&quot; /&gt; evidence object.">
        <see cref="T:System.Security.Policy.ApplicationDirectory" /> 证据对象的状态的字符串表示形式。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationDirectory.Directory">
      <summary vsli:raw="Gets the path of the application directory.">获取应用程序目录的路径。</summary>
      <returns vsli:raw="The path of the application directory.">应用程序目录的路径。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationDirectoryMembershipCondition">
      <summary vsli:raw="Determines whether an assembly belongs to a code group by testing its application directory. This class cannot be inherited.">通过测试程序集的应用程序目录确定该程序集是否属于代码组。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationDirectoryMembershipCondition&quot; /&gt; class.">初始化 <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary vsli:raw="Determines whether the membership condition is satisfied by the specified evidence.">确定指定的证据是否满足成员条件。</summary>
      <param name="evidence" vsli:raw="The evidence set against which to make the test.">证据集，将根据它进行测试。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified evidence satisfies the membership condition; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的证据满足成员条件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy">
      <summary vsli:raw="Creates an equivalent copy of the membership condition.">创建成员条件的等效副本。</summary>
      <returns vsli:raw="A new, identical copy of the current membership condition.">当前成员条件的完全相同的新副本。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified membership condition is an &lt;see cref=&quot;T:System.Security.Policy.ApplicationDirectoryMembershipCondition&quot; /&gt;.">确定指定的成员条件是否为 <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />。</summary>
      <param name="o" vsli:raw="The object to compare to &lt;see cref=&quot;T:System.Security.Policy.ApplicationDirectoryMembershipCondition&quot; /&gt;.">要与 <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" /> 比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified membership condition is an &lt;see cref=&quot;T:System.Security.Policy.ApplicationDirectoryMembershipCondition&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的成员条件是 <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is not a valid application directory membership condition element.">
        <paramref name="e" /> 参数不是有效的应用程序目录成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <param name="level" vsli:raw="The policy level context, used to resolve named permission set references.">策略级别上下文，用于解析命名的权限集引用。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is not a valid application directory membership condition element.">
        <paramref name="e" /> 参数不是有效的应用程序目录成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode">
      <summary vsli:raw="Gets the hash code for the current membership condition.">获取当前成员条件的哈希代码。</summary>
      <returns vsli:raw="The hash code for the current membership condition.">当前成员条件的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString">
      <summary vsli:raw="Creates and returns a string representation of the membership condition.">创建并返回成员条件的字符串表示形式。</summary>
      <returns vsli:raw="A string representation of the state of the membership condition.">成员条件状态的字符串表示形式。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state with the specified &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" /> 创建安全对象及其当前状态的 XML 编码。</summary>
      <param name="level" vsli:raw="The policy level context for resolving named permission set references.">用于解析命名的权限集引用的策略级别上下文。</param>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrust">
      <summary vsli:raw="Encapsulates security decisions about an application. This class cannot be inherited.">封装关于应用程序的安全决策。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; class.">初始化 <see cref="T:System.Security.Policy.ApplicationTrust" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; class with an &lt;see cref=&quot;T:System.ApplicationIdentity&quot; /&gt;.">使用 <see cref="T:System.Security.Policy.ApplicationTrust" /> 初始化 <see cref="T:System.ApplicationIdentity" /> 类的新实例。</summary>
      <param name="identity" vsli:raw="An &lt;see cref=&quot;T:System.ApplicationIdentity&quot; /&gt; that uniquely identifies an application.">唯一标识应用程序的 <see cref="T:System.ApplicationIdentity" />。</param>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; class using the provided grant set and collection of full-trust assemblies.">使用提供的授予集和完全信任程序集的集合，初始化 <see cref="T:System.Security.Policy.ApplicationTrust" /> 类的新实例。</summary>
      <param name="defaultGrantSet" vsli:raw="A default permission set that is granted to all assemblies that do not have specific grants.">一个默认权限集，被授予所有无特定权限的程序集。</param>
      <param name="fullTrustAssemblies" vsli:raw="An array of strong names that represent assemblies that should be considered fully trusted in an application domain.">一组强名称，表示在应用程序域中应被认为完全受信任的程序集。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fullTrustAssemblies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fullTrustAssemblies" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;fullTrustAssemblies&quot; /&gt; contains an assembly that does not have a &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">
        <paramref name="fullTrustAssemblies" /> 包含不具有 <see cref="T:System.Security.Policy.StrongName" /> 的程序集。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs an &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; object with a given state from an XML encoding.">从 XML 编码重新构造具有给定状态的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 对象。</summary>
      <param name="element" vsli:raw="The XML encoding to use to reconstruct the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; object.">用于重新构造 <see cref="T:System.Security.Policy.ApplicationTrust" /> 对象的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;element&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="element" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The XML encoding used for &lt;paramref name=&quot;element&quot; /&gt; is invalid.">用于 <paramref name="element" /> 的 XML 编码无效。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.ToXml">
      <summary vsli:raw="Creates an XML encoding of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; object and its current state.">创建 <see cref="T:System.Security.Policy.ApplicationTrust" /> 对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity">
      <summary vsli:raw="Gets or sets the application identity for the application trust object.">获取或设置应用程序信任对象的应用程序标识。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see cref=&quot;T:System.ApplicationIdentity&quot; /&gt; cannot be set because it has a value of &lt;see langword=&quot;null&quot; /&gt;.">无法设置 <see cref="T:System.ApplicationIdentity" />，因为它的值为 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ApplicationIdentity&quot; /&gt; for the application trust object.">应用程序信任对象的 <see cref="T:System.ApplicationIdentity" />。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.DefaultGrantSet">
      <summary vsli:raw="Gets or sets the policy statement defining the default grant set.">获取或设置定义默认授予集的策略声明。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt; describing the default grants.">描述默认授予的 <see cref="T:System.Security.Policy.PolicyStatement" />。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.ExtraInfo">
      <summary vsli:raw="Gets or sets extra security information about the application.">获取或设置有关应用程序的额外安全信息。</summary>
      <returns vsli:raw="An object containing additional security information about the application.">包含有关应用程序的附加安全信息的对象。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.FullTrustAssemblies">
      <summary vsli:raw="Gets the list of full-trust assemblies for this application trust.">获取此应用程序信任的完全信任程序集的列表。</summary>
      <returns vsli:raw="A list of full-trust assemblies.">一个完全信任程序集的列表。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun">
      <summary vsli:raw="Gets or sets a value indicating whether the application has the required permission grants and is trusted to run.">获取或设置一个值，该值指示应用程序是否具有所需的权限授予并且受信任可运行。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the application is trusted to run; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果应用程序受信任可以运行，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.Persist">
      <summary vsli:raw="Gets or sets a value indicating whether application trust information is persisted.">获取或设置一个值，该值指示是否保留应用程序信任信息。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if application trust information is persisted; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果保留应用程序信任信息，则为 <see langword="true" />，否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrustCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; objects. This class cannot be inherited.">表示 <see cref="T:System.Security.Policy.ApplicationTrust" /> 对象集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)">
      <summary vsli:raw="Adds an element to the collection.">将一个元素添加到集合中。</summary>
      <param name="trust" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; object to add.">要添加的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;trust&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="trust" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ApplicationTrust.ApplicationIdentity&quot; /&gt; property of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; specified in &lt;paramref name=&quot;trust&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="trust" /> 中指定的 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> 的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="The index at which the new element was inserted.">新元素位置处插入的索引。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; array to the end of the collection.">将指定的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 数组的元素复制到集合末尾。</summary>
      <param name="trusts" vsli:raw="An array of type &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; containing the objects to add to the collection.">
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 类型的数组，包含要添加到集合的对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;trusts&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="trusts" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ApplicationTrust.ApplicationIdentity&quot; /&gt; property of an &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; specified in &lt;paramref name=&quot;trust&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="trust" /> 中指定的 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> 的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 属性为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrustCollection&quot; /&gt; to the end of the collection.">将指定的 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 的元素复制到集合末尾。</summary>
      <param name="trusts" vsli:raw="A &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrustCollection&quot; /&gt; containing the objects to add to the collection.">
        <see cref="T:System.Security.Policy.ApplicationTrustCollection" />，包含要添加到集合的对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;trusts&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="trusts" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ApplicationTrust.ApplicationIdentity&quot; /&gt; property of an &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; specified in &lt;paramref name=&quot;trust&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="trust" /> 中指定的 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> 的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 属性为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Clear">
      <summary vsli:raw="Removes all the application trusts from the collection.">从集合中移除所有应用程序信任。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ApplicationTrust.ApplicationIdentity&quot; /&gt; property of an item in the collection is &lt;see langword=&quot;null&quot; /&gt;.">集合中某一项的 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> 属性为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.">将整个集合复制到从目标数组的指定索引处开始的一个兼容的一维数组。</summary>
      <param name="array" vsli:raw="The one-dimensional array of type &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; that is the destination of the elements copied from the current collection.">
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 类型的一维数组，它是从当前集合复制的元素的目标数组。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than the lower bound of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="index" /> 小于 <paramref name="array" /> 的下限。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrustCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> 是多维的。  
  
- 或 - 
该 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 中的元素数目大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
      <summary vsli:raw="Gets the application trusts in the collection that match the specified application identity.">获取集合中与指定应用程序标识匹配的应用程序信任。</summary>
      <param name="applicationIdentity" vsli:raw="An &lt;see cref=&quot;T:System.ApplicationIdentity&quot; /&gt; object describing the application to find.">描述要查找的应用程序的 <see cref="T:System.ApplicationIdentity" /> 对象。</param>
      <param name="versionMatch" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationVersionMatch&quot; /&gt; values.">
        <see cref="T:System.Security.Policy.ApplicationVersionMatch" /> 值之一。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrustCollection&quot; /&gt; containing all matching &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; objects.">包含所有匹配的 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 对象的 <see cref="T:System.Security.Policy.ApplicationTrust" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.GetEnumerator">
      <summary vsli:raw="Returns an object that can be used to iterate over the collection.">返回一个可用于循环访问该集合的对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrustEnumerator&quot; /&gt; that can be used to iterate over the collection.">可用于循环访问集合的 <see cref="T:System.Security.Policy.ApplicationTrustEnumerator" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
      <summary vsli:raw="Removes all application trust objects that match the specified criteria from the collection.">从集合中移除与指定条件匹配的所有应用程序信任对象。</summary>
      <param name="applicationIdentity" vsli:raw="The &lt;see cref=&quot;T:System.ApplicationIdentity&quot; /&gt; of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; object to be removed.">要移除的 <see cref="T:System.ApplicationIdentity" /> 对象的 <see cref="T:System.Security.Policy.ApplicationTrust" />。</param>
      <param name="versionMatch" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationVersionMatch&quot; /&gt; values.">
        <see cref="T:System.Security.Policy.ApplicationVersionMatch" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)">
      <summary vsli:raw="Removes the specified application trust from the collection.">从集合中移除指定的应用程序信任。</summary>
      <param name="trust" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; object to remove.">要移除的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;trust&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="trust" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ApplicationTrust.ApplicationIdentity&quot; /&gt; property of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; object specified by &lt;paramref name=&quot;trust&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">由 <paramref name="trust" /> 指定的 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> 对象的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 属性为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])">
      <summary vsli:raw="Removes the application trust objects in the specified array from the collection.">从集合中移除指定数组中的应用程序信任对象。</summary>
      <param name="trusts" vsli:raw="A one-dimensional array of type &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; that contains items to be removed from the current collection.">包含要从当前集合中移除的项的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 类型的一维数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;trusts&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="trusts" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)">
      <summary vsli:raw="Removes the application trust objects in the specified collection from the collection.">从集合中移除指定集合中的应用程序信任对象。</summary>
      <param name="trusts" vsli:raw="An &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrustCollection&quot; /&gt; that contains items to be removed from the current collection.">一个 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />，包含要从当前集合中移除的项。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;trusts&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="trusts" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">从特定的 <see cref="T:System.Collections.ICollection" /> 索引开始，将 <see cref="T:System.Array" /> 的元素复制到指定的 <see cref="T:System.Array" /> 中。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ICollection" /> 所复制的元素的目标位置。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> 是多维的。  
  
- 或 - 
源 <see cref="T:System.Collections.ICollection" /> 中的元素个数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">返回一个循环访问集合的枚举器。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Count">
      <summary vsli:raw="Gets the number of items contained in the collection.">获取集合中包含的项数。</summary>
      <returns vsli:raw="The number of items contained in the collection.">集合中包含的项数。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread safe).">获取一个值，该值指示对集合的访问是否为同步的（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">在所有情况下均为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; object located at the specified index in the collection.">获取集合中位于指定索引处的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 对象。</summary>
      <param name="index" vsli:raw="The zero-based index of the object within the collection.">对象在集合中的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the count of objects in the collection.">
        <paramref name="index" /> 大于或等于集合中的对象数。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is negative.">
        <paramref name="index" /> 为负数。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; object at the specified index in the collection.">集合中指定索引处的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; object for the specified application.">获取指定应用程序的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 对象。</summary>
      <param name="appFullName" vsli:raw="The full name of the application.">应用程序的全名。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; object for the specified application, or &lt;see langword=&quot;null&quot; /&gt; if the object cannot be found.">指定应用程序的 <see cref="T:System.Security.Policy.ApplicationTrust" />，如果无法找到该对象则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">获取可用于同步对集合的访问的对象。</summary>
      <returns vsli:raw="The object to use to synchronize access to the collection.">用于同步对集合的访问的对象。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrustEnumerator">
      <summary vsli:raw="Represents the enumerator for &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrustCollection&quot; /&gt; collection.">表示 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 集合中的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 对象的枚举数。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
      <summary vsli:raw="Moves to the next element in the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrustCollection&quot; /&gt; collection.">移动到 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 集合中的下一个元素。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustEnumerator.Reset">
      <summary vsli:raw="Resets the enumerator to the beginning of the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrustCollection&quot; /&gt; collection.">将枚举数重置到 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 集合的开头。</summary>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustEnumerator.Current">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrustCollection&quot; /&gt; collection.">获取 <see cref="T:System.Security.Policy.ApplicationTrust" /> 集合中的当前 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 对象。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrust&quot; /&gt; in the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrustCollection&quot; /&gt;.">
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 中的当前 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Object&quot; /&gt; in the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrustCollection&quot; /&gt; collection.">获取 <see cref="T:System.Object" /> 集合中的当前 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Object&quot; /&gt; in the &lt;see cref=&quot;T:System.Security.Policy.ApplicationTrustCollection&quot; /&gt;.">
        <see cref="T:System.Object" /> 中的当前 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationVersionMatch">
      <summary vsli:raw="Specifies how to match versions when locating application trusts in a collection.">指定在集合中查找应用程序信任时如何匹配版本。</summary>
    </member>
    <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchAllVersions">
      <summary vsli:raw="Match on all versions.">匹配所有版本。</summary>
    </member>
    <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchExactVersion">
      <summary vsli:raw="Match on the exact version.">匹配精确版本。</summary>
    </member>
    <member name="T:System.Security.Policy.CodeConnectAccess">
      <summary vsli:raw="Specifies the network resource access that is granted to code.">指定授予代码的网络资源访问权限。</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.AnyScheme">
      <summary vsli:raw="Contains the string value that represents the scheme wildcard.">包含表示方案通配符的字符串值。</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.DefaultPort">
      <summary vsli:raw="Contains the value used to represent the default port.">包含用于表示默认端口的值。</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.OriginPort">
      <summary vsli:raw="Contains the value used to represent the port value in the URI where code originated.">包含用于表示代码原始 URI 中的端口值的值。</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.OriginScheme">
      <summary vsli:raw="Contains the value used to represent the scheme in the URL where the code originated.">包含用于表示代码原始 URL 中的方案的值。</summary>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.CodeConnectAccess&quot; /&gt; class.">初始化 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 类的新实例。</summary>
      <param name="allowScheme" vsli:raw="The URI scheme represented by the current instance.">当前实例表示的 URI 方案。</param>
      <param name="allowPort" vsli:raw="The port represented by the current instance.">当前实例表示的端口。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;allowScheme&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;allowScheme&quot; /&gt; is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;allowScheme&quot; /&gt; contains characters that are not permitted in schemes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;allowPort&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;allowPort&quot; /&gt; is greater than 65,535.">
        <paramref name="allowScheme" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="allowScheme" /> 为空字符串 ("")。  
  
- 或 - 
 <paramref name="allowScheme" /> 包含方案中不允许的字符。  
  
- 或 - 
 <paramref name="allowPort" /> 小于 0。  
  
- 或 - 
 <paramref name="allowPort" /> 大于 65,535。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Security.Policy.CodeConnectAccess&quot; /&gt; instance that represents access to the specified port using any scheme.">返回一个 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 实例，该实例表示使用任何方案对指定端口的访问权限。</summary>
      <param name="allowPort" vsli:raw="The port represented by the returned instance.">返回的实例表示的端口。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;allowPort&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;allowPort&quot; /&gt; is greater than 65,535.">
        <paramref name="allowPort" /> 小于 0。  
  
- 或 - 
 <paramref name="allowPort" /> 大于 65,535。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Policy.CodeConnectAccess&quot; /&gt; instance for the specified port.">指定端口的 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 实例。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Security.Policy.CodeConnectAccess&quot; /&gt; instance that represents access to the specified port using the code's scheme of origin.">返回一个 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 实例，该实例表示使用代码的原始方案对指定端口的访问权限。</summary>
      <param name="allowPort" vsli:raw="The port represented by the returned instance.">返回的实例表示的端口。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;allowPort&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;allowPort&quot; /&gt; is greater than 65,535.">
        <paramref name="allowPort" /> 小于 0。  
  
- 或 - 
 <paramref name="allowPort" /> 大于 65,535。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Policy.CodeConnectAccess&quot; /&gt; instance for the specified port.">指定端口的 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 实例。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.Equals(System.Object)">
      <summary vsli:raw="Returns a value indicating whether two &lt;see cref=&quot;T:System.Security.Policy.CodeConnectAccess&quot; /&gt; objects represent the same scheme and port.">返回一个值，指示两个 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 对象是否表示相同的方案和端口。</summary>
      <param name="o" vsli:raw="The object to compare to the current &lt;see cref=&quot;T:System.Security.Policy.CodeConnectAccess&quot; /&gt; object.">要与当前 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two objects represent the same scheme and port; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个对象表示相同的方案和端口，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a particular type.">用作特定类型的哈希函数。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">当前 <see cref="T:System.Object" /> 的哈希代码。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeConnectAccess.Port">
      <summary vsli:raw="Gets the port represented by the current instance.">获取当前实例表示的端口。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that identifies a computer port used in conjunction with the &lt;see cref=&quot;P:System.Security.Policy.CodeConnectAccess.Scheme&quot; /&gt; property.">一个 <see cref="T:System.Int32" /> 值，标识与 <see cref="P:System.Security.Policy.CodeConnectAccess.Scheme" /> 属性一起使用的计算机端口。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeConnectAccess.Scheme">
      <summary vsli:raw="Gets the URI scheme represented by the current instance.">获取当前实例表示的 URI 方案。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies a URI scheme, converted to lowercase.">标识 URI 方案的 <see cref="T:System.String" />，已转换为小写。</returns>
    </member>
    <member name="T:System.Security.Policy.CodeGroup">
      <summary vsli:raw="Represents the abstract base class from which all implementations of code groups must derive.">表示抽象基类，必须从该基类中导出代码组的所有实现。</summary>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Security.Policy.CodeGroup&quot; /&gt;.">初始化 <see cref="T:System.Security.Policy.CodeGroup" /> 的新实例。</summary>
      <param name="membershipCondition" vsli:raw="A membership condition that tests evidence to determine whether this code group applies policy.">成员条件，它测试证据以确定此代码组是否应用策略。</param>
      <param name="policy" vsli:raw="The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.">形式为权限集和特性的代码组的策略声明，这些权限集和特性将被授予匹配成员条件的代码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;membershipCondition&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="membershipCondition" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The type of the &lt;paramref name=&quot;membershipCondition&quot; /&gt; parameter is not valid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the &lt;paramref name=&quot;policy&quot; /&gt; parameter is not valid.">
        <paramref name="membershipCondition" /> 参数的类型无效。  
  
- 或 - 
<paramref name="policy" /> 参数的类型无效。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)">
      <summary vsli:raw="Adds a child code group to the current code group.">将子代码组添加到当前代码组。</summary>
      <param name="group" vsli:raw="The code group to be added as a child. This new child code group is added to the end of the list.">要作为子级添加的代码组。 新的子代码组被添加到列表的末端。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;group&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="group" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;group&quot; /&gt; parameter is not a valid code group.">
        <paramref name="group" /> 参数不是有效的代码组。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Copy">
      <summary vsli:raw="When overridden in a derived class, makes a deep copy of the current code group.">当在派生类中被重写时，制作当前代码组的一个深层副本。</summary>
      <returns vsli:raw="An equivalent copy of the current code group, including its membership conditions and child code groups.">当前代码组（包括其成员条件和子代码组）的等效副本。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="When overridden in a derived class, serializes properties and internal state specific to a derived code group and adds the serialization to the specified &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt;.">当在派生类中被重写时，序列化导出的代码组所特有的属性和内部状态，并将序列化添加到指定的 <see cref="T:System.Security.SecurityElement" />。</summary>
      <param name="element" vsli:raw="The XML encoding to which to add the serialization.">向其中添加序列化的 XML 编码。</param>
      <param name="level" vsli:raw="The policy level within which the code group exists.">代码组所在的策略级别。</param>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified code group is equivalent to the current code group.">确定指定的代码组是否等效于当前代码组。</summary>
      <param name="o" vsli:raw="The code group to compare with the current code group.">要与当前代码组比较的代码组。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified code group is equivalent to the current code group; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的代码组等效于当前代码组，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)">
      <summary vsli:raw="Determines whether the specified code group is equivalent to the current code group, checking the child code groups as well, if specified.">确定指定的代码组是否等效于当前代码组，如果指定，还检查子代码组。</summary>
      <param name="cg" vsli:raw="The code group to compare with the current code group.">要与当前代码组比较的代码组。</param>
      <param name="compareChildren" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to compare child code groups, as well; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">为 <see langword="true" /> 则还比较子代码组；否则为 <see langword="false" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified code group is equivalent to the current code group; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的代码组等效于当前代码组，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a given state from an XML encoding.">从 XML 编码重新构造具有给定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Reconstructs a security object with a given state and policy level from an XML encoding.">从 XML 编码重新构造具有给定的状态和策略级别的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <param name="level" vsli:raw="The policy level within which the code group exists.">代码组所在的策略级别。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.GetHashCode">
      <summary vsli:raw="Gets the hash code of the current code group.">获取当前代码组的哈希代码。</summary>
      <returns vsli:raw="The hash code of the current code group.">当前代码组的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="When overridden in a derived class, reconstructs properties and internal state specific to a derived code group from the specified &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt;.">当在派生类中被重写时，从指定的 <see cref="T:System.Security.SecurityElement" /> 重新构造导出的代码组所特有的属性和内部状态。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <param name="level" vsli:raw="The policy level within which the code group exists.">代码组所在的策略级别。</param>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)">
      <summary vsli:raw="Removes the specified child code group.">移除指定的子代码组。</summary>
      <param name="group" vsli:raw="The code group to be removed as a child.">要作为子级移除的代码组。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;group&quot; /&gt; parameter is not an immediate child code group of the current code group.">
        <paramref name="group" /> 参数不是当前代码组的直接子代码组。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary vsli:raw="When overridden in a derived class, resolves policy for the code group and its descendants for a set of evidence.">当在派生类中被重写时，解析证据集的代码组及其子代的策略。</summary>
      <param name="evidence" vsli:raw="The evidence for the assembly.">程序集的证据。</param>
      <returns vsli:raw="A policy statement that consists of the permissions granted by the code group with optional attributes, or &lt;see langword=&quot;null&quot; /&gt; if the code group does not apply (the membership condition does not match the specified evidence).">由具有可选特性的代码组授予的权限组成的策略声明；或者，如果代码组不适用（成员条件与指定的证据不匹配），则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary vsli:raw="When overridden in a derived class, resolves matching code groups.">当在派生类中被重写时，解析匹配的代码组。</summary>
      <param name="evidence" vsli:raw="The evidence for the assembly.">程序集的证据。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Policy.CodeGroup&quot; /&gt; that is the root of the tree of matching code groups.">一个 <see cref="T:System.Security.Policy.CodeGroup" />，它是匹配代码组的树的根。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Creates an XML encoding of the security object, its current state, and the policy level within which the code exists.">创建安全对象、其当前状态以及代码所在策略级别的 XML 编码。</summary>
      <param name="level" vsli:raw="The policy level within which the code group exists.">代码组所在的策略级别。</param>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.AttributeString">
      <summary vsli:raw="Gets a string representation of the attributes of the policy statement for the code group.">获取代码组策略声明的特性的字符串表示形式。</summary>
      <returns vsli:raw="A string representation of the attributes of the policy statement for the code group.">代码组策略声明的特性的字符串表示形式。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Children">
      <summary vsli:raw="Gets or sets an ordered list of the child code groups of a code group.">获取或设置代码组的子代码组的排序列表。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="An attempt is made to set this property to &lt;see langword=&quot;null&quot; /&gt;.">尝试将该属性设置为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An attempt is made to set this property with a list of children that are not &lt;see cref=&quot;T:System.Security.Policy.CodeGroup&quot; /&gt; objects.">尝试使用非 <see cref="T:System.Security.Policy.CodeGroup" /> 对象的子级列表设置此属性。</exception>
      <returns vsli:raw="A list of child code groups.">子代码组的列表。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Description">
      <summary vsli:raw="Gets or sets the description of the code group.">获取或设置代码组的说明。</summary>
      <returns vsli:raw="The description of the code group.">代码组的说明。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.MembershipCondition">
      <summary vsli:raw="Gets or sets the code group's membership condition.">获取或设置代码组的成员条件。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="An attempt is made to set this parameter to &lt;see langword=&quot;null&quot; /&gt;.">尝试将该参数设置为 <see langword="null" />。</exception>
      <returns vsli:raw="The membership condition that determines to which evidence the code group is applicable.">成员条件，它确定该代码组适用于哪个证据。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.MergeLogic">
      <summary vsli:raw="When overridden in a derived class, gets the merge logic for the code group.">当在派生类中被重写时，获取该代码组的合并逻辑。</summary>
      <returns vsli:raw="A description of the merge logic for the code group.">该代码组合并逻辑的说明。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Name">
      <summary vsli:raw="Gets or sets the name of the code group.">获取或设置代码组的名称。</summary>
      <returns vsli:raw="The name of the code group.">代码组的名称。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.PermissionSetName">
      <summary vsli:raw="Gets the name of the named permission set for the code group.">获取代码组的命名的权限集的名称。</summary>
      <returns vsli:raw="The name of a named permission set of the policy level.">策略级别的命名的权限集的名称。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.PolicyStatement">
      <summary vsli:raw="Gets or sets the policy statement associated with the code group.">获取或设置与该代码组关联的策略声明。</summary>
      <returns vsli:raw="The policy statement for the code group.">该代码组的策略声明。</returns>
    </member>
    <member name="T:System.Security.Policy.Evidence">
      <summary>定义组成对安全策略决策的输入的一组信息。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor">
      <summary>初始化 <see cref="T:System.Security.Policy.Evidence" /> 类的新的空实例。</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])">
      <summary>依据多个主机和程序集证据集初始化 <see cref="T:System.Security.Policy.Evidence" /> 类的新实例。</summary>
      <param name="hostEvidence">创建新实例所依据的主机证据。</param>
      <param name="assemblyEvidence">创建新实例所依据的程序集证据。</param>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)">
      <summary>从现有证据的浅表副本初始化 <see cref="T:System.Security.Policy.Evidence" /> 类的新实例。</summary>
      <param name="evidence">从其创建新实例的 <see cref="T:System.Security.Policy.Evidence" /> 实例。 此实例不是深层复制的。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" /> 参数不是 <see cref="T:System.Security.Policy.Evidence" /> 的有效实例。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])">
      <summary>依据多个主机和程序集证据集初始化 <see cref="T:System.Security.Policy.Evidence" /> 类的新实例。</summary>
      <param name="hostEvidence">创建新实例所依据的主机证据。</param>
      <param name="assemblyEvidence">创建新实例所依据的程序集证据。</param>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddAssembly(System.Object)">
      <summary>将指定的程序集证据添加到证据集。</summary>
      <param name="id">任意证据对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> 不可序列化。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)">
      <summary>将指定类型的证据对象添加到程序集提供的证据列表。</summary>
      <param name="evidence">要添加的程序集证据。</param>
      <typeparam name="T">
        <paramref name="evidence" /> 中对象的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">类型 <paramref name="T" /> 的证据已在列表中。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" /> 不可序列化。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddHost(System.Object)">
      <summary>将主机提供的指定证据添加到证据集。</summary>
      <param name="id">任意证据对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> 不可序列化。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddHostEvidence``1(``0)">
      <summary>将指定类型的主机证据添加到主机证据集合。</summary>
      <param name="evidence">要添加的主机证据。</param>
      <typeparam name="T">
        <paramref name="evidence" /> 中对象的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">类型 <paramref name="T" /> 的证据已在列表中。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.Clear">
      <summary>从证据集中移除主机和程序集证据。</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.Clone">
      <summary>返回此证据对象的重复副本。</summary>
      <returns>此证据对象的重复副本。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)">
      <summary>将证据对象复制到 <see cref="T:System.Array" />。</summary>
      <param name="array">要向其复制证据对象的目标数组。</param>
      <param name="index">数组中从零开始的位置，从该位置开始向其复制证据对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 在目标数组的范围之外。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetAssemblyEnumerator">
      <summary>枚举程序集提供的证据。</summary>
      <returns>
        <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" /> 方法添加的证据的枚举数。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetAssemblyEvidence``1">
      <summary>从集合中获取指定类型的程序集证据。</summary>
      <typeparam name="T">要获取的证据的类型。</typeparam>
      <returns>程序集证据集合中 <paramref name="T" /> 类型的证据。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetEnumerator">
      <summary>枚举集合中的所有证据，包括由主机提供的证据和由程序集提供的证据。</summary>
      <returns>由 <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> 方法和 <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" /> 方法添加的证据的枚举数。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetHostEnumerator">
      <summary>枚举由主机提供的证据。</summary>
      <returns>
        <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> 方法添加的证据的枚举数。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetHostEvidence``1">
      <summary>从集合中获取指定类型的主机证据。</summary>
      <typeparam name="T">要获取的证据的类型。</typeparam>
      <returns>主机证据集合中 <paramref name="T" /> 类型的证据。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)">
      <summary>将指定的证据集合并到当前证据集。</summary>
      <param name="evidence">要合并到当前证据集的证据集。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" /> 参数不是 <see cref="T:System.Security.Policy.Evidence" /> 的有效实例。</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="P:System.Security.Policy.Evidence.Locked" /> 为 <see langword="true" />，调用该方法的代码不具有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />，并且 <paramref name="evidence" /> 参数具有一个不为空的主机列表。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.RemoveType(System.Type)">
      <summary>从主机和程序集枚举中移除给定类型的证据。</summary>
      <param name="t">要移除的证据的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="t" /> 为 null。</exception>
    </member>
    <member name="P:System.Security.Policy.Evidence.Count">
      <summary>获取证据集中证据对象的数目。</summary>
      <returns>证据集中证据对象的数目。</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.IsReadOnly">
      <summary>获取一个值，该值指示证据集是否为只读。</summary>
      <returns>因为不支持只读证据集，所以总是为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.IsSynchronized">
      <summary>获取一个值，该值指示证据集是否线程安全。</summary>
      <returns>因为不支持线程安全证据集，所以总是为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.Locked">
      <summary>获取或设置一个值，该值指示证据是否是锁定的。</summary>
      <returns>如果证据是锁定的，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.SyncRoot">
      <summary>获取同步根。</summary>
      <returns>因为不支持证据集的同步，所以总是为 <see langword="this" />（在 Visual Basic 中为 <see langword="Me" />）。</returns>
    </member>
    <member name="T:System.Security.Policy.EvidenceBase">
      <summary>提供一个基类，要用作证据的所有对象都必须派生自该类。</summary>
    </member>
    <member name="M:System.Security.Policy.EvidenceBase.#ctor">
      <summary>初始化 <see cref="T:System.Security.Policy.EvidenceBase" /> 类的新实例。</summary>
      <exception cref="T:System.InvalidOperationException">要用作证据的对象不可序列化。</exception>
    </member>
    <member name="M:System.Security.Policy.EvidenceBase.Clone">
      <summary>创建作为当前实例的完整副本的新对象。</summary>
      <returns>此证据对象的重复副本。</returns>
    </member>
    <member name="T:System.Security.Policy.FileCodeGroup">
      <summary vsli:raw="Grants permission to manipulate files located in the code assemblies to code assemblies that match the membership condition. This class cannot be inherited.">向符合成员条件的代码程序集授予权限以操作位于代码程序集中的文件。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.FileCodeGroup&quot; /&gt; class.">初始化 <see cref="T:System.Security.Policy.FileCodeGroup" /> 类的新实例。</summary>
      <param name="membershipCondition" vsli:raw="A membership condition that tests evidence to determine whether this code group applies policy.">成员条件，它测试证据以确定此代码组是否应用策略。</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermissionAccess&quot; /&gt; values. This value is used to construct the &lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; that is granted.">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值之一。 该值用于构造授予的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;membershipCondition&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="membershipCondition" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The type of the &lt;paramref name=&quot;membershipCondition&quot; /&gt; parameter is not valid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the &lt;paramref name=&quot;access&quot; /&gt; parameter is not valid.">
        <paramref name="membershipCondition" /> 参数的类型无效。  
  
- 或 - 
<paramref name="access" /> 参数的类型无效。</exception>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Copy">
      <summary vsli:raw="Makes a deep copy of the current code group.">生成当前代码组的深层副本。</summary>
      <returns vsli:raw="An equivalent copy of the current code group, including its membership conditions and child code groups.">当前代码组（包括其成员条件和子代码组）的等效副本。</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified code group is equivalent to the current code group.">确定指定的代码组是否等效于当前代码组。</summary>
      <param name="o" vsli:raw="The code group to compare with the current code group.">要与当前代码组比较的代码组。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified code group is equivalent to the current code group; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的代码组等效于当前代码组，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.GetHashCode">
      <summary vsli:raw="Gets the hash code of the current code group.">获取当前代码组的哈希代码。</summary>
      <returns vsli:raw="The hash code of the current code group.">当前代码组的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary vsli:raw="Resolves policy for the code group and its descendants for a set of evidence.">对一组证据解析代码组及其子代的策略。</summary>
      <param name="evidence" vsli:raw="The evidence for the assembly.">程序集的证据。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;evidence&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="evidence" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Policy.PolicyException" vsli:raw="The current policy is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; More than one code group (including the parent code group and all child code groups) is marked &lt;see cref=&quot;F:System.Security.Policy.PolicyStatementAttribute.Exclusive&quot; /&gt;.">当前策略是 <see langword="null" />。  
  
- 或 - 
将不止一个代码组（包括父代码组和所有子代码组）标记为 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />。</exception>
      <returns vsli:raw="A policy statement consisting of the permissions granted by the code group with optional attributes, or &lt;see langword=&quot;null&quot; /&gt; if the code group does not apply (the membership condition does not match the specified evidence).">由具有可选特性的代码组授予的权限组成的策略声明；或者，如果代码组不适用（成员条件与指定的证据不匹配），则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary vsli:raw="Resolves matching code groups.">解析匹配的代码组。</summary>
      <param name="evidence" vsli:raw="The evidence for the assembly.">程序集的证据。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;evidence&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="evidence" /> 参数为 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Policy.CodeGroup&quot; /&gt; that is the root of the tree of matching code groups.">一个 <see cref="T:System.Security.Policy.CodeGroup" />，它是匹配代码组的树的根。</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.AttributeString">
      <summary vsli:raw="Gets a string representation of the attributes of the policy statement for the code group.">获取代码组策略声明的特性的字符串表示形式。</summary>
      <returns vsli:raw="Always &lt;see langword=&quot;null&quot; /&gt;.">总是为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.MergeLogic">
      <summary vsli:raw="Gets the merge logic.">获取合并逻辑。</summary>
      <returns vsli:raw="The string &quot;Union&quot;.">字符串“Union”。</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.PermissionSetName">
      <summary vsli:raw="Gets the name of the named permission set for the code group.">获取代码组的命名的权限集的名称。</summary>
      <returns vsli:raw="The concatenation of the string &quot;Same directory FileIO - &quot; and the access type.">字符串 "FileIO-" 和访问类型的串联。</returns>
    </member>
    <member name="T:System.Security.Policy.FirstMatchCodeGroup">
      <summary vsli:raw="Allows security policy to be defined by the union of the policy statement of a code group and that of the first child code group that matches. This class cannot be inherited.">允许由代码组的策略声明和第一个匹配的子代码组的策略声明的联合来定义安全策略。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.FirstMatchCodeGroup&quot; /&gt; class.">初始化 <see cref="T:System.Security.Policy.FirstMatchCodeGroup" /> 类的新实例。</summary>
      <param name="membershipCondition" vsli:raw="A membership condition that tests evidence to determine whether this code group applies policy.">成员条件，它测试证据以确定此代码组是否应用策略。</param>
      <param name="policy" vsli:raw="The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.">形式为权限集和特性的代码组的策略声明，这些权限集和特性将被授予匹配成员条件的代码。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The type of the &lt;paramref name=&quot;membershipCondition&quot; /&gt; parameter is not valid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the &lt;paramref name=&quot;policy&quot; /&gt; parameter is not valid.">
        <paramref name="membershipCondition" /> 参数的类型无效。  
  
- 或 - 
<paramref name="policy" /> 参数的类型无效。</exception>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.Copy">
      <summary vsli:raw="Makes a deep copy of the code group.">生成代码组的深层副本。</summary>
      <returns vsli:raw="An equivalent copy of the code group, including its membership conditions and child code groups.">代码组（包括其成员条件和子代码组）的等效副本。</returns>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary vsli:raw="Resolves policy for the code group and its descendants for a set of evidence.">对一组证据解析代码组及其子代的策略。</summary>
      <param name="evidence" vsli:raw="The evidence for the assembly.">程序集的证据。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;evidence&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="evidence" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Policy.PolicyException" vsli:raw="More than one code group (including the parent code group and any child code groups) is marked &lt;see cref=&quot;F:System.Security.Policy.PolicyStatementAttribute.Exclusive&quot; /&gt;.">将不止一个代码组（包括父代码组和任何子代码组）标记为 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />。</exception>
      <returns vsli:raw="A policy statement consisting of the permissions granted by the code group with optional attributes, or &lt;see langword=&quot;null&quot; /&gt; if the code group does not apply (the membership condition does not match the specified evidence).">由具有可选特性的代码组授予的权限组成的策略声明；或者，如果代码组不适用（成员条件与指定的证据不匹配），则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary vsli:raw="Resolves matching code groups.">解析匹配的代码组。</summary>
      <param name="evidence" vsli:raw="The evidence for the assembly.">程序集的证据。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;evidence&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="evidence" /> 参数为 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Policy.CodeGroup&quot; /&gt; that is the root of the tree of matching code groups.">一个 <see cref="T:System.Security.Policy.CodeGroup" />，它是匹配代码组的树的根。</returns>
    </member>
    <member name="P:System.Security.Policy.FirstMatchCodeGroup.MergeLogic">
      <summary vsli:raw="Gets the merge logic.">获取合并逻辑。</summary>
      <returns vsli:raw="The string &quot;First Match&quot;.">字符串“First Match”。</returns>
    </member>
    <member name="T:System.Security.Policy.GacInstalled">
      <summary vsli:raw="Confirms that a code assembly originates in the global assembly cache (GAC) as evidence for policy evaluation. This class cannot be inherited.">确认一个代码程序集在全局程序集缓存 (GAC) 中以策略评估证据的形式产生。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.GacInstalled&quot; /&gt; class.">初始化 <see cref="T:System.Security.Policy.GacInstalled" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.Copy">
      <summary vsli:raw="Creates an equivalent copy of the current object.">创建当前对象的等效副本。</summary>
      <returns vsli:raw="An equivalent copy of &lt;see cref=&quot;T:System.Security.Policy.GacInstalled&quot; /&gt;.">
        <see cref="T:System.Security.Policy.GacInstalled" /> 的一个等效副本。</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary vsli:raw="Creates a new identity permission that corresponds to the current object.">创建与当前对象对应的新标识权限。</summary>
      <param name="evidence" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.Evidence&quot; /&gt; from which to construct the identity permission.">构造标识权限所依据的 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns vsli:raw="A new identity permission that corresponds to the current object.">与当前对象对应的新标识权限。</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equivalent to the specified object.">指示当前对象是否等效于指定的对象。</summary>
      <param name="o" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Security.Policy.GacInstalled&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="o" /> 是 <see cref="T:System.Security.Policy.GacInstalled" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current object.">返回当前对象的哈希代码。</summary>
      <returns vsli:raw="A hash code for the current object.">当前对象的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.ToString">
      <summary vsli:raw="Returns a string representation of the current  object.">返回当前对象的字符串表示形式。</summary>
      <returns vsli:raw="A string representation of the current object.">当前对象的字符串表示形式。</returns>
    </member>
    <member name="T:System.Security.Policy.GacMembershipCondition">
      <summary vsli:raw="Determines whether an assembly belongs to a code group by testing its global assembly cache membership. This class cannot be inherited.">通过测试程序集的全局程序集缓存成员资格，确定该程序集是否属于代码组。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.GacMembershipCondition&quot; /&gt; class.">初始化 <see cref="T:System.Security.Policy.GacMembershipCondition" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary vsli:raw="Indicates whether the specified evidence satisfies the membership condition.">指示指定的证据是否满足成员条件。</summary>
      <param name="evidence" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.Evidence&quot; /&gt; against which to make the test.">进行测试所依据的 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified evidence satisfies the membership condition; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的证据满足成员条件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Copy">
      <summary vsli:raw="Creates an equivalent copy of the membership condition.">创建成员条件的等效副本。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Security.Policy.GacMembershipCondition&quot; /&gt; object.">一个新 <see cref="T:System.Security.Policy.GacMembershipCondition" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equivalent to the specified object.">指示当前对象是否等效于指定的对象。</summary>
      <param name="o" vsli:raw="The object to compare with the current object.">要与当前对象进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Security.Policy.GacMembershipCondition&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="o" /> 为 <see cref="T:System.Security.Policy.GacMembershipCondition" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Uses the specified XML encoding to reconstruct a security object.">使用指定的 XML 编码重新构造安全对象。</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains the XML encoding to use to reconstruct the security object.">包含用于重新构造安全对象的 XML 编码的 <see cref="T:System.Security.SecurityElement" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is not a valid membership condition element.">
        <paramref name="e" /> 不是有效的成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Uses the specified XML encoding to reconstruct a security object, using the specified policy level context.">使用指定的 XML 编码，利用指定的策略级别上下文重新构造安全对象。</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains the XML encoding to use to reconstruct the security object.">包含用于重新构造安全对象的 XML 编码的 <see cref="T:System.Security.SecurityElement" />。</param>
      <param name="level" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; context for resolving &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; references.">用于解析 <see cref="T:System.Security.Policy.PolicyLevel" /> 引用的 <see cref="T:System.Security.NamedPermissionSet" /> 上下文。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is not a valid membership condition element.">
        <paramref name="e" /> 不是有效的成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.GetHashCode">
      <summary vsli:raw="Gets a hash code for the current membership condition.">获取当前成员资格条件的哈希代码。</summary>
      <returns vsli:raw="0 (zero).">0（零）。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToString">
      <summary vsli:raw="Returns a string representation of the membership condition.">返回成员条件的字符串表示形式。</summary>
      <returns vsli:raw="A string representation of the membership condition.">成员条件的字符串表示形式。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains the XML encoding of the security object, including any state information.">包含安全对象的 XML 编码（包括所有状态信息）的 <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state, using the specified policy level context.">使用指定的策略级别上下文创建安全对象的 XML 编码及其当前状态。</summary>
      <param name="level" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; context for resolving &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; references.">用于解析 <see cref="T:System.Security.Policy.PolicyLevel" /> 引用的 <see cref="T:System.Security.NamedPermissionSet" /> 上下文。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains the XML encoding of the security object, including any state information.">包含安全对象的 XML 编码（包括所有状态信息）的 <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="T:System.Security.Policy.Hash">
      <summary vsli:raw="Provides evidence about the hash value for an assembly. This class cannot be inherited.">提供有关程序集的哈希值的证据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.Hash.#ctor(System.Reflection.Assembly)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.Hash&quot; /&gt; class.">初始化 <see cref="T:System.Security.Policy.Hash" /> 类的新实例。</summary>
      <param name="assembly" vsli:raw="The assembly for which to compute the hash value.">计算其哈希值的程序集。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assembly&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is not a run-time &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; object.">
        <paramref name="assembly" /> 不是运行时 <see cref="T:System.Reflection.Assembly" /> 对象。</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateMD5(System.Byte[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Security.Policy.Hash&quot; /&gt; object that contains an &lt;see cref=&quot;T:System.Security.Cryptography.MD5&quot; /&gt; hash value.">创建一个包含 <see cref="T:System.Security.Policy.Hash" /> 哈希值的 <see cref="T:System.Security.Cryptography.MD5" /> 对象。</summary>
      <param name="md5" vsli:raw="A byte array that contains an &lt;see cref=&quot;T:System.Security.Cryptography.MD5&quot; /&gt; hash value.">一个包含 <see cref="T:System.Security.Cryptography.MD5" /> 哈希值的字节数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;md5&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="md5" /> 参数为 <see langword="null" />。</exception>
      <returns vsli:raw="An object that contains the hash value provided by the &lt;paramref name=&quot;md5&quot; /&gt; parameter.">一个对象，包含由 <paramref name="md5" /> 参数提供的哈希值。</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateSHA1(System.Byte[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Security.Policy.Hash&quot; /&gt; object that contains a &lt;see cref=&quot;T:System.Security.Cryptography.SHA1&quot; /&gt; hash value.">创建一个包含 <see cref="T:System.Security.Policy.Hash" /> 哈希值的 <see cref="T:System.Security.Cryptography.SHA1" /> 对象。</summary>
      <param name="sha1" vsli:raw="A byte array that contains a &lt;see cref=&quot;T:System.Security.Cryptography.SHA1&quot; /&gt; hash value.">一个包含 <see cref="T:System.Security.Cryptography.SHA1" /> 哈希值的字节数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;sha1&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="sha1" /> 参数为 <see langword="null" />。</exception>
      <returns vsli:raw="An object that contains the hash value provided by the &lt;paramref name=&quot;sha1&quot; /&gt; parameter.">一个对象，包含由 <paramref name="sha1" /> 参数提供的哈希值。</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateSHA256(System.Byte[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Security.Policy.Hash&quot; /&gt; object that contains a &lt;see cref=&quot;T:System.Security.Cryptography.SHA256&quot; /&gt; hash value.">创建一个包含 <see cref="T:System.Security.Policy.Hash" /> 哈希值的 <see cref="T:System.Security.Cryptography.SHA256" /> 对象。</summary>
      <param name="sha256" vsli:raw="A byte array that contains a &lt;see cref=&quot;T:System.Security.Cryptography.SHA256&quot; /&gt; hash value.">一个包含 <see cref="T:System.Security.Cryptography.SHA256" /> 哈希值的字节数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;sha256&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="sha256" /> 参数为 <see langword="null" />。</exception>
      <returns vsli:raw="A hash object that contains the hash value provided by the &lt;paramref name=&quot;sha256&quot; /&gt; parameter.">一个哈希对象，包含由 <paramref name="sha256" /> 参数提供的哈希值。</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.GenerateHash(System.Security.Cryptography.HashAlgorithm)">
      <summary vsli:raw="Computes the hash value for the assembly using the specified hash algorithm.">使用指定的哈希算法计算程序集的哈希值。</summary>
      <param name="hashAlg" vsli:raw="The hash algorithm to use to compute the hash value for the assembly.">将用于计算程序集的哈希值的哈希算法。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;hashAlg&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="hashAlg" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The hash value for the assembly cannot be generated.">无法生成程序集的哈希值。</exception>
      <returns vsli:raw="A byte array that represents the hash value for the assembly.">一个字节数组，它表示程序集的哈希值。</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the parameter name and additional exception information.">获取带有参数名和附加异常信息的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">承载序列化对象数据的对象。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">关于来源和目标的上下文信息</param>
    </member>
    <member name="M:System.Security.Policy.Hash.ToString">
      <summary vsli:raw="Returns a string representation of the current &lt;see cref=&quot;T:System.Security.Policy.Hash&quot; /&gt;.">返回当前 <see cref="T:System.Security.Policy.Hash" /> 的字符串表示形式。</summary>
      <returns vsli:raw="A representation of the current &lt;see cref=&quot;T:System.Security.Policy.Hash&quot; /&gt;.">当前 <see cref="T:System.Security.Policy.Hash" /> 的表示形式。</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.MD5">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.Cryptography.MD5&quot; /&gt; hash value for the assembly.">获取程序集的 <see cref="T:System.Security.Cryptography.MD5" /> 哈希值。</summary>
      <returns vsli:raw="A byte array that represents the &lt;see cref=&quot;T:System.Security.Cryptography.MD5&quot; /&gt; hash value for the assembly.">一个字节数组，表示程序集的 <see cref="T:System.Security.Cryptography.MD5" /> 哈希值。</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.SHA1">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.Cryptography.SHA1&quot; /&gt; hash value for the assembly.">获取程序集的 <see cref="T:System.Security.Cryptography.SHA1" /> 哈希值。</summary>
      <returns vsli:raw="A byte array that represents the &lt;see cref=&quot;T:System.Security.Cryptography.SHA1&quot; /&gt; hash value for the assembly.">一个字节数组，表示程序集的 <see cref="T:System.Security.Cryptography.SHA1" /> 哈希值。</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.SHA256">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.Cryptography.SHA256&quot; /&gt; hash value for the assembly.">获取程序集的 <see cref="T:System.Security.Cryptography.SHA256" /> 哈希值。</summary>
      <returns vsli:raw="A byte array that represents the &lt;see cref=&quot;T:System.Security.Cryptography.SHA256&quot; /&gt; hash value for the assembly.">一个字节数组，表示程序集的 <see cref="T:System.Security.Cryptography.SHA256" /> 哈希值。</returns>
    </member>
    <member name="T:System.Security.Policy.HashMembershipCondition">
      <summary vsli:raw="Determines whether an assembly belongs to a code group by testing its hash value. This class cannot be inherited.">通过测试程序集的哈希值确定该程序集是否属于代码组。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.#ctor(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.HashMembershipCondition&quot; /&gt; class with the hash algorithm and hash value that determine membership.">用确定成员身份的哈希算法和哈希值初始化 <see cref="T:System.Security.Policy.HashMembershipCondition" /> 类的新实例。</summary>
      <param name="hashAlg" vsli:raw="The hash algorithm to use to compute the hash value for the assembly.">将用于计算程序集的哈希值的哈希算法。</param>
      <param name="value" vsli:raw="The hash value for which to test.">要进行测试的哈希值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;hashAlg&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="hashAlg" /> 参数为 <see langword="null" />。  
  
- 或 - 
<paramref name="value" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;hashAlg&quot; /&gt; parameter is not a valid hash algorithm.">
        <paramref name="hashAlg" /> 参数不是有效的哈希算法。</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary vsli:raw="Determines whether the specified evidence satisfies the membership condition.">确定指定的证据是否能满足成员条件。</summary>
      <param name="evidence" vsli:raw="The evidence set against which to make the test.">证据集，将根据它进行测试。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified evidence satisfies the membership condition; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的证据满足成员条件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Copy">
      <summary vsli:raw="Creates an equivalent copy of the membership condition.">创建成员条件的等效副本。</summary>
      <returns vsli:raw="A new, identical copy of the current membership condition.">当前成员条件的完全相同的新副本。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Equals(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Security.Policy.HashMembershipCondition.HashValue&quot; /&gt; and the &lt;see cref=&quot;P:System.Security.Policy.HashMembershipCondition.HashAlgorithm&quot; /&gt; from the specified object are equivalent to the &lt;see cref=&quot;P:System.Security.Policy.HashMembershipCondition.HashValue&quot; /&gt; and &lt;see cref=&quot;P:System.Security.Policy.HashMembershipCondition.HashAlgorithm&quot; /&gt; contained in the current &lt;see cref=&quot;T:System.Security.Policy.HashMembershipCondition&quot; /&gt;.">确定指定对象中的 <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> 和 <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> 是否等效于包含在当前 <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> 中的 <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> 和 <see cref="T:System.Security.Policy.HashMembershipCondition" />。</summary>
      <param name="o" vsli:raw="The object to compare to the current &lt;see cref=&quot;T:System.Security.Policy.HashMembershipCondition&quot; /&gt;.">要与当前 <see cref="T:System.Security.Policy.HashMembershipCondition" /> 进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Security.Policy.HashMembershipCondition.HashValue&quot; /&gt; and &lt;see cref=&quot;P:System.Security.Policy.HashMembershipCondition.HashAlgorithm&quot; /&gt; from the specified object is equivalent to the &lt;see cref=&quot;P:System.Security.Policy.HashMembershipCondition.HashValue&quot; /&gt; and &lt;see cref=&quot;P:System.Security.Policy.HashMembershipCondition.HashAlgorithm&quot; /&gt; contained in the current &lt;see cref=&quot;T:System.Security.Policy.HashMembershipCondition&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定对象中的 <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> 和 <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> 等效于包含在当前 <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> 中的 <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> 和 <see cref="T:System.Security.Policy.HashMembershipCondition" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <param name="level" vsli:raw="The policy level context, used to resolve named permission set references.">策略级别上下文，用于解析命名的权限集引用。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is not a valid membership condition element.">
        <paramref name="e" /> 参数不是有效的成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.GetHashCode">
      <summary vsli:raw="Gets the hash code for the current membership condition.">获取当前成员条件的哈希代码。</summary>
      <returns vsli:raw="The hash code for the current membership condition.">当前成员条件的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary vsli:raw="Runs when the entire object graph has been deserialized.">在整个对象图形已经反序列化时运行。</summary>
      <param name="sender" vsli:raw="The object that initiated the callback. The functionality for this parameter is not currently implemented.">启动回调的对象。 当前未实现该参数的功能。</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the target object.">使用将目标对象序列化所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The destination &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; for this serialization.">此序列化的目标 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToString">
      <summary vsli:raw="Creates and returns a string representation of the membership condition.">创建并返回成员条件的字符串表示形式。</summary>
      <returns vsli:raw="A string representation of the state of the membership condition.">成员条件状态的字符串表示形式。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state with the specified &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" /> 创建安全对象及其当前状态的 XML 编码。</summary>
      <param name="level" vsli:raw="The policy level context for resolving named permission set references.">用于解析命名的权限集引用的策略级别上下文。</param>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm">
      <summary vsli:raw="Gets or sets the hash algorithm to use for the membership condition.">获取或设置用于成员条件的哈希算法。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="An attempt is made to set &lt;see cref=&quot;P:System.Security.Policy.HashMembershipCondition.HashAlgorithm&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">尝试将 <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> 设置为 <see langword="null" />。</exception>
      <returns vsli:raw="The hash algorithm to use for the membership condition.">用于成员条件的哈希算法。</returns>
    </member>
    <member name="P:System.Security.Policy.HashMembershipCondition.HashValue">
      <summary vsli:raw="Gets or sets the hash value for which the membership condition tests.">获取或设置要针对其测试成员条件的哈希值。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="An attempt is made to set &lt;see cref=&quot;P:System.Security.Policy.HashMembershipCondition.HashValue&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">尝试将 <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> 设置为 <see langword="null" />。</exception>
      <returns vsli:raw="The hash value for which the membership condition tests.">要针对其测试成员条件的哈希值。</returns>
    </member>
    <member name="T:System.Security.Policy.IIdentityPermissionFactory">
      <summary vsli:raw="Defines the method that creates a new identity permission.">定义创建新标识权限的方法。</summary>
    </member>
    <member name="M:System.Security.Policy.IIdentityPermissionFactory.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary vsli:raw="Creates a new identity permission for the specified evidence.">创建指定证据的新标识权限。</summary>
      <param name="evidence" vsli:raw="The evidence from which to create the new identity permission.">创建新标识权限所依据的证据。</param>
      <returns vsli:raw="The new identity permission.">新标识权限。</returns>
    </member>
    <member name="T:System.Security.Policy.IMembershipCondition">
      <summary vsli:raw="Defines the test to determine whether a code assembly is a member of a code group.">定义测试以确定代码程序集是否是代码组的成员。</summary>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary vsli:raw="Determines whether the specified evidence satisfies the membership condition.">确定指定的证据是否能满足成员条件。</summary>
      <param name="evidence" vsli:raw="The evidence set against which to make the test.">证据集，将根据它进行测试。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified evidence satisfies the membership condition; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的证据满足成员条件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Copy">
      <summary vsli:raw="Creates an equivalent copy of the membership condition.">创建成员条件的等效副本。</summary>
      <returns vsli:raw="A new, identical copy of the current membership condition.">当前成员条件的完全相同的新副本。</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">确定指定的 <see cref="T:System.Object" /> 是否等同于当前的 <see cref="T:System.Object" />。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">要与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see langword="true" /> 等于当前的 <see cref="T:System.Object" />，则为 <see cref="T:System.Object" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.ToString">
      <summary vsli:raw="Creates and returns a string representation of the membership condition.">创建并返回成员条件的字符串表示形式。</summary>
      <returns vsli:raw="A string representation of the state of the current membership condition.">当前成员条件状态的字符串表示形式。</returns>
    </member>
    <member name="T:System.Security.Policy.NetCodeGroup">
      <summary vsli:raw="Grants Web permission to the site from which the assembly was downloaded. This class cannot be inherited.">向从其下载程序集的站点授予 Web 权限。 此类不能被继承。</summary>
    </member>
    <member name="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme">
      <summary vsli:raw="Contains a value used to specify connection access for code with an unknown or unrecognized origin scheme.">包含一个值，该值用于为具有未知或未能识别的原始方案的代码指定连接访问权限。</summary>
    </member>
    <member name="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme">
      <summary vsli:raw="Contains a value used to specify any other unspecified origin scheme.">包含一个值，用于指定任何其他未指定的原始方案。</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.NetCodeGroup&quot; /&gt; class.">初始化 <see cref="T:System.Security.Policy.NetCodeGroup" /> 类的新实例。</summary>
      <param name="membershipCondition" vsli:raw="A membership condition that tests evidence to determine whether this code group applies code access security policy.">成员条件，它测试证据以确定此代码组是否应用代码访问安全策略。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;membershipCondition&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="membershipCondition" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The type of the &lt;paramref name=&quot;membershipCondition&quot; /&gt; parameter is not valid.">
        <paramref name="membershipCondition" /> 参数的类型无效。</exception>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)">
      <summary vsli:raw="Adds the specified connection access to the current code group.">将指定的连接访问权限添加到当前代码组。</summary>
      <param name="originScheme" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the scheme to match against the code's scheme.">一个 <see cref="T:System.String" />，包含要与代码的方案进行匹配的方案。</param>
      <param name="connectAccess" vsli:raw="A &lt;see cref=&quot;T:System.Security.Policy.CodeConnectAccess&quot; /&gt; that specifies the scheme and port code can use to connect back to its origin server.">一个 <see cref="T:System.Security.Policy.CodeConnectAccess" />，指定代码可用来连接回其原始服务器的方案和端口。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;originScheme&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="originScheme" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;originScheme&quot; /&gt; contains characters that are not permitted in schemes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;originScheme&quot; /&gt; = &lt;see cref=&quot;F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme&quot; /&gt; and &lt;paramref name=&quot;connectAccess&quot; /&gt; specifies &lt;see cref=&quot;F:System.Security.Policy.CodeConnectAccess.OriginScheme&quot; /&gt; as its scheme.">
        <paramref name="originScheme" /> 包含方案中不允许的字符。  
  
- 或 - 
 <paramref name="originScheme" /> = <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> 和 <paramref name="connectAccess" /> 指定 <see cref="F:System.Security.Policy.CodeConnectAccess.OriginScheme" /> 作为其方案。</exception>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Copy">
      <summary vsli:raw="Makes a deep copy of the current code group.">生成当前代码组的深层副本。</summary>
      <returns vsli:raw="An equivalent copy of the current code group, including its membership conditions and child code groups.">当前代码组（包括其成员条件和子代码组）的等效副本。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified code group is equivalent to the current code group.">确定指定的代码组是否等效于当前代码组。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.NetCodeGroup&quot; /&gt; object to compare with the current code group.">要与当前代码组进行比较的 <see cref="T:System.Security.Policy.NetCodeGroup" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified code group is equivalent to the current code group; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的代码组等效于当前代码组，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.GetConnectAccessRules">
      <summary vsli:raw="Gets the connection access information for the current code group.">获取当前代码组的连接访问权限信息。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.DictionaryEntry&quot; /&gt; array containing connection access information.">一个 <see cref="T:System.Collections.DictionaryEntry" /> 数组，包含连接访问权限信息。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.GetHashCode">
      <summary vsli:raw="Gets the hash code of the current code group.">获取当前代码组的哈希代码。</summary>
      <returns vsli:raw="The hash code of the current code group.">当前代码组的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.ResetConnectAccess">
      <summary vsli:raw="Removes all connection access information for the current code group.">移除当前代码组的所有连接访问权限信息。</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary vsli:raw="Resolves policy for the code group and its descendants for a set of evidence.">对一组证据解析代码组及其子代的策略。</summary>
      <param name="evidence" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.Evidence&quot; /&gt; for the assembly.">程序集的 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;evidence&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="evidence" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Policy.PolicyException" vsli:raw="More than one code group (including the parent code group and any child code groups) is marked &lt;see cref=&quot;F:System.Security.Policy.PolicyStatementAttribute.Exclusive&quot; /&gt;.">将不止一个代码组（包括父代码组和任何子代码组）标记为 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt; that consists of the permissions granted by the code group with optional attributes, or &lt;see langword=&quot;null&quot; /&gt; if the code group does not apply (the membership condition does not match the specified evidence).">由具有可选特性的代码组授予的权限组成的 <see cref="T:System.Security.Policy.PolicyStatement" />；或者，如果代码组不适用（成员条件与指定的证据不匹配），则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary vsli:raw="Resolves matching code groups.">解析匹配的代码组。</summary>
      <param name="evidence" vsli:raw="The evidence for the assembly.">程序集的证据。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;evidence&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="evidence" /> 参数为 <see langword="null" />。</exception>
      <returns vsli:raw="The complete set of code groups that were matched by the evidence.">证据匹配的完整代码组集。</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.AttributeString">
      <summary vsli:raw="Gets a string representation of the attributes of the policy statement for the code group.">获取代码组策略声明的特性的字符串表示形式。</summary>
      <returns vsli:raw="Always &lt;see langword=&quot;null&quot; /&gt;.">总是为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.MergeLogic">
      <summary vsli:raw="Gets the logic to use for merging groups.">获取用于合并组的逻辑。</summary>
      <returns vsli:raw="The string &quot;Union&quot;.">字符串“Union”。</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.PermissionSetName">
      <summary vsli:raw="Gets the name of the &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; for the code group.">获取该代码组的 <see cref="T:System.Security.NamedPermissionSet" /> 的名称。</summary>
      <returns vsli:raw="Always the string &quot;Same site Web.&quot;">始终为字符串“Same site Web”。</returns>
    </member>
    <member name="T:System.Security.Policy.PermissionRequestEvidence">
      <summary vsli:raw="Defines evidence that represents permission requests. This class cannot be inherited.">定义表示权限请求的证据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.#ctor(System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.PermissionRequestEvidence&quot; /&gt; class with the permission request of a code assembly.">用代码程序集的权限请求初始化 <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> 类的新实例。</summary>
      <param name="request" vsli:raw="The minimum permissions the code requires to run.">代码运行所需的最小权限。</param>
      <param name="optional" vsli:raw="The permissions the code can use if they are granted, but that are not required.">（如果授予）代码可以使用的（但不是必需的）权限。</param>
      <param name="denied" vsli:raw="The permissions the code explicitly asks not to be granted.">代码明确请求不要授予的权限。</param>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.Copy">
      <summary vsli:raw="Creates an equivalent copy of the current &lt;see cref=&quot;T:System.Security.Policy.PermissionRequestEvidence&quot; /&gt;.">创建当前 <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> 的等效副本。</summary>
      <returns vsli:raw="An equivalent copy of the current &lt;see cref=&quot;T:System.Security.Policy.PermissionRequestEvidence&quot; /&gt;.">当前 <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> 的等效副本。</returns>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.ToString">
      <summary vsli:raw="Gets a string representation of the state of the &lt;see cref=&quot;T:System.Security.Policy.PermissionRequestEvidence&quot; /&gt;.">获取 <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> 状态的字符串表示形式。</summary>
      <returns vsli:raw="A representation of the state of the &lt;see cref=&quot;T:System.Security.Policy.PermissionRequestEvidence&quot; /&gt;.">
        <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> 状态的字符串表示形式。</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.DeniedPermissions">
      <summary vsli:raw="Gets the permissions the code explicitly asks not to be granted.">获取代码明确请求不要授予的权限。</summary>
      <returns vsli:raw="The permissions the code explicitly asks not to be granted.">代码明确请求不要授予的权限。</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.OptionalPermissions">
      <summary vsli:raw="Gets the permissions the code can use if they are granted, but are not required.">获取（如果授予）代码可以使用的（但不是必需的）权限。</summary>
      <returns vsli:raw="The permissions the code can use if they are granted, but are not required.">（如果授予）代码可以使用的（但不是必需的）权限。</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.RequestedPermissions">
      <summary vsli:raw="Gets the minimum permissions the code requires to run.">获取代码运行所需的最小权限。</summary>
      <returns vsli:raw="The minimum permissions the code requires to run.">代码运行所需的最小权限。</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyException">
      <summary vsli:raw="The exception that is thrown when policy forbids code to run.">当策略禁止代码运行时引发的异常。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.PolicyException&quot; /&gt; class with default properties.">使用默认属性初始化 <see cref="T:System.Security.Policy.PolicyException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.PolicyException&quot; /&gt; class with serialized data.">用序列化数据初始化 <see cref="T:System.Security.Policy.PolicyException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">承载序列化对象数据的对象。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">关于来源和目标的上下文信息</param>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.PolicyException&quot; /&gt; class with a specified error message.">用指定的错误消息初始化 <see cref="T:System.Security.Policy.PolicyException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.PolicyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Security.Policy.PolicyException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="exception" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;exception&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">导致当前异常的异常。 如果 <paramref name="exception" /> 参数不为 <see langword="null" />，则当前异常将在处理内部异常的 <see langword="catch" /> 块中引发。</param>
    </member>
    <member name="T:System.Security.Policy.PolicyLevel">
      <summary vsli:raw="Represents the security policy levels for the common language runtime. This class cannot be inherited.">表示公共语言运行时的安全策略级别。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; corresponding to the specified &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; to the list of &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.">将与指定的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 对应的 <see cref="T:System.Security.Policy.StrongName" /> 添加到 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 对象列表中，这些对象用于确定程序集是否为不应评估的程序集组的成员。</summary>
      <param name="sn" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; used to create the &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; to add to the list of &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.">用于创建要添加到 <see cref="T:System.Security.Policy.StrongName" /> 对象（这些对象用于确定程序集是否为不应评估的程序集组的成员）列表的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;sn&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="sn" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; specified by the &lt;paramref name=&quot;sn&quot; /&gt; parameter already has full trust.">
        <paramref name="sn" /> 参数指定的 <see cref="T:System.Security.Policy.StrongName" /> 已获得完全信任。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; to the list of &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.">将指定的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 添加到 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 对象（这些对象用于确定程序集是否为不应评估的程序集组的成员）的列表中。</summary>
      <param name="snMC" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; to add to the list of &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.">要添加到 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 对象（这些对象用于确定程序集是否为不应评估的程序集组的成员）的列表中的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;snMC&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="snMC" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; specified by the &lt;paramref name=&quot;snMC&quot; /&gt; parameter already has full trust.">
        <paramref name="snMC" /> 参数指定的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 已获得完全信任。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; to the current policy level.">将 <see cref="T:System.Security.NamedPermissionSet" /> 添加到当前的策略级别中。</summary>
      <param name="permSet" vsli:raw="The &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; to add to the current policy level.">要添加到当前策略级别中的 <see cref="T:System.Security.NamedPermissionSet" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;permSet&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="permSet" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;permSet&quot; /&gt; parameter has the same name as an existing &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; in the &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt;.">
        <paramref name="permSet" /> 参数与 <see cref="T:System.Security.NamedPermissionSet" /> 中的现有 <see cref="T:System.Security.Policy.PolicyLevel" /> 具有相同的名称。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)">
      <summary vsli:raw="Replaces a &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; in the current policy level with the specified &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt;.">用指定的 <see cref="T:System.Security.NamedPermissionSet" /> 替换当前策略级别中的 <see cref="T:System.Security.PermissionSet" />。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; to replace.">要替换的 <see cref="T:System.Security.NamedPermissionSet" /> 的名称。</param>
      <param name="pSet" vsli:raw="The &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; that replaces the &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; specified by the &lt;paramref name=&quot;name&quot; /&gt; parameter.">用于替换 <paramref name="name" /> 参数所指定的 <see cref="T:System.Security.PermissionSet" /> 的 <see cref="T:System.Security.NamedPermissionSet" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;pSet&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 参数为 <see langword="null" />。  
  
- 或 - 
<paramref name="pSet" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is equal to the name of a reserved permission set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; specified by the &lt;paramref name=&quot;pSet&quot; /&gt; parameter cannot be found.">
        <paramref name="name" /> 参数等于保留权限集的名称。  
  
- 或 - 
找不到 <paramref name="pSet" /> 参数所指定的 <see cref="T:System.Security.PermissionSet" />。</exception>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; that was replaced.">已替换的 <see cref="T:System.Security.NamedPermissionSet" /> 的副本。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.CreateAppDomainLevel">
      <summary vsli:raw="Creates a new policy level for use at the application domain policy level.">创建供在应用程序域策略级别使用的新的策略级别。</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt;.">新创建的 <see cref="T:System.Security.Policy.PolicyLevel" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a given state from an XML encoding.">从 XML 编码重新构造具有给定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; specified by the &lt;paramref name=&quot;e&quot; /&gt; parameter is invalid.">
        <paramref name="e" /> 参数所指定的 <see cref="T:System.Security.SecurityElement" /> 无效。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; in the current policy level with the specified name.">返回具有指定名称的当前策略级别中的 <see cref="T:System.Security.NamedPermissionSet" />。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; to find.">要查找的 <see cref="T:System.Security.NamedPermissionSet" /> 的名称。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 参数为 <see langword="null" />。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; in the current policy level with the specified name, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果找到，则为具有指定名称的当前策略级别中的 <see cref="T:System.Security.NamedPermissionSet" />；否则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Recover">
      <summary vsli:raw="Replaces the configuration file for this &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; with the last backup (reflecting the state of policy prior to the last time it was saved) and returns it to the state of the last save.">用上一次的备份（反映上一次保存之前的策略状态）替换此 <see cref="T:System.Security.Policy.PolicyLevel" /> 的配置文件，并将它返回到上一次保存的状态。</summary>
      <exception cref="T:System.Security.Policy.PolicyException" vsli:raw="The policy level does not have a valid configuration file.">该策略级别没有有效的配置文件。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)">
      <summary vsli:raw="Removes an assembly with the specified &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; from the list of assemblies the policy level uses to evaluate policy.">将具有指定 <see cref="T:System.Security.Policy.StrongName" /> 的程序集从策略级别用来评估策略的程序集列表中移除。</summary>
      <param name="sn" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; of the assembly to remove from the list of assemblies used to evaluate policy.">要从用于评估策略的程序集列表中移除的程序集的 <see cref="T:System.Security.Policy.StrongName" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;sn&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="sn" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The assembly with the &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; specified by the &lt;paramref name=&quot;sn&quot; /&gt; parameter does not have full trust.">具有 <paramref name="sn" /> 参数所指定的 <see cref="T:System.Security.Policy.StrongName" /> 的程序集未获得完全信任。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
      <summary vsli:raw="Removes an assembly with the specified &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; from the list of assemblies the policy level uses to evaluate policy.">将具有指定 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的程序集从策略级别用来评估策略的程序集列表中移除。</summary>
      <param name="snMC" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; of the assembly to remove from the list of assemblies used to evaluate policy.">要从用于评估策略的程序集列表中移除的程序集的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;snMC&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="snMC" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; specified by the &lt;paramref name=&quot;snMC&quot; /&gt; parameter does not have full trust.">
        <paramref name="snMC" /> 参数所指定的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 未获得完全信任。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; from the current policy level.">从当前策略级别中移除指定的 <see cref="T:System.Security.NamedPermissionSet" />。</summary>
      <param name="permSet" vsli:raw="The &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; to remove from the current policy level.">要从当前策略级别中移除的 <see cref="T:System.Security.NamedPermissionSet" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; specified by the &lt;paramref name=&quot;permSet&quot; /&gt; parameter was not found.">未找到 <paramref name="permSet" /> 参数所指定的 <see cref="T:System.Security.NamedPermissionSet" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;permSet&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="permSet" /> 参数为 <see langword="null" />。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; that was removed.">已移除的 <see cref="T:System.Security.NamedPermissionSet" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; with the specified name from the current policy level.">从当前策略级别中移除具有指定名称的 <see cref="T:System.Security.NamedPermissionSet" />。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; to remove.">要删除的 <see cref="T:System.Security.NamedPermissionSet" /> 的名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is equal to the name of a reserved permission set.  &#xA;  &#xA; -or-  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; with the specified name cannot be found.">
        <paramref name="name" /> 参数等于保留权限集的名称。  
  
- 或 - 
找不到具有指定名称的 <see cref="T:System.Security.NamedPermissionSet" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 参数为 <see langword="null" />。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; that was removed.">已移除的 <see cref="T:System.Security.NamedPermissionSet" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Reset">
      <summary vsli:raw="Returns the current policy level to the default state.">将当前策略级别返回到默认状态。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)">
      <summary vsli:raw="Resolves policy based on evidence for the policy level, and returns the resulting &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt;.">根据策略级别的证据移除策略，并返回产生的 <see cref="T:System.Security.Policy.PolicyStatement" />。</summary>
      <param name="evidence" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.Evidence&quot; /&gt; used to resolve the &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt;.">用于解析 <see cref="T:System.Security.Policy.Evidence" /> 的 <see cref="T:System.Security.Policy.PolicyLevel" />。</param>
      <exception cref="T:System.Security.Policy.PolicyException" vsli:raw="The policy level contains multiple matching code groups marked as exclusive.">策略级别包含多个标记为独占的匹配代码组。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;evidence&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="evidence" /> 参数为 <see langword="null" />。</exception>
      <returns vsli:raw="The resulting &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt;.">生成的 <see cref="T:System.Security.Policy.PolicyStatement" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary vsli:raw="Resolves policy at the policy level and returns the root of a code group tree that matches the evidence.">解析策略级别的策略并返回与证据匹配的代码组树的根。</summary>
      <param name="evidence" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.Evidence&quot; /&gt; used to resolve policy.">用于解析策略的 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <exception cref="T:System.Security.Policy.PolicyException" vsli:raw="The policy level contains multiple matching code groups marked as exclusive.">策略级别包含多个标记为独占的匹配代码组。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;evidence&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="evidence" /> 参数为 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Policy.CodeGroup&quot; /&gt; representing the root of a tree of code groups matching the specified evidence.">
        <see cref="T:System.Security.Policy.CodeGroup" />，表示与指定证据匹配的代码组树的根。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.FullTrustAssemblies">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; objects used to determine whether an assembly is a member of the group of assemblies used to evaluate security policy.">获取 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 对象列表，这些对象用于确定程序集是否为用于评估安全策略的程序集组的成员。</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; objects used to determine whether an assembly is a member of the group of assemblies used to evaluate security policy. These assemblies are granted full trust during security policy evaluation of assemblies not in the list.">
        <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 对象列表，这些对象用于确定程序集是否为用于评估安全策略的程序集组的成员。 在对列表中没有的程序集进行安全策略评估的过程中，这些程序集被授予完全信任。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.Label">
      <summary vsli:raw="Gets a descriptive label for the policy level.">获取策略级别的描述性标签。</summary>
      <returns vsli:raw="The label associated with the policy level.">与该策略级别关联的标签。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.NamedPermissionSets">
      <summary vsli:raw="Gets a list of named permission sets defined for the policy level.">获取为策略级别定义的命名权限集的列表。</summary>
      <returns vsli:raw="A list of named permission sets defined for the policy level.">为策略级别定义的命名权限集的列表。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.RootCodeGroup">
      <summary vsli:raw="Gets or sets the root code group for the policy level.">获取或设置策略级别的根代码组。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for &lt;see cref=&quot;P:System.Security.Policy.PolicyLevel.RootCodeGroup&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.PolicyLevel.RootCodeGroup" /> 的值为 <see langword="null" />。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.CodeGroup&quot; /&gt; that is the root of the tree of policy level code groups.">
        <see cref="T:System.Security.Policy.CodeGroup" />，它是策略级别代码组的树的根。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.StoreLocation">
      <summary vsli:raw="Gets the path where the policy file is stored.">获取存储策略文件的路径。</summary>
      <returns vsli:raw="The path where the policy file is stored, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; does not have a storage location.">存储策略文件的路径，或者 <see langword="null" />（如果 <see cref="T:System.Security.Policy.PolicyLevel" /> 没有存储位置）。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.Type">
      <summary vsli:raw="Gets the type of the policy level.">获取策略级别的类型。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Security.PolicyLevelType&quot; /&gt; values.">
        <see cref="T:System.Security.PolicyLevelType" /> 值之一。</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyStatement">
      <summary vsli:raw="Represents the statement of a &lt;see cref=&quot;T:System.Security.Policy.CodeGroup&quot; /&gt; describing the permissions and other information that apply to code with a particular set of evidence. This class cannot be inherited.">表示描述权限和其他适用于具有特定证据集的代码的信息的 <see cref="T:System.Security.Policy.CodeGroup" /> 的语句。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Policy.PolicyStatement" /> 初始化 <see cref="T:System.Security.PermissionSet" /> 类的新实例。</summary>
      <param name="permSet" vsli:raw="The &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; with which to initialize the new instance.">用于初始化新实例的 <see cref="T:System.Security.PermissionSet" />。</param>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; and attributes.">使用指定的 <see cref="T:System.Security.Policy.PolicyStatement" /> 和特性初始化 <see cref="T:System.Security.PermissionSet" /> 类的新实例。</summary>
      <param name="permSet" vsli:raw="The &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; with which to initialize the new instance.">用于初始化新实例的 <see cref="T:System.Security.PermissionSet" />。</param>
      <param name="attributes" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Security.Policy.PolicyStatementAttribute&quot; /&gt; values.">
        <see cref="T:System.Security.Policy.PolicyStatementAttribute" /> 值的按位组合。</param>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.Copy">
      <summary vsli:raw="Creates an equivalent copy of the current policy statement.">创建当前策略语句的等效副本。</summary>
      <returns vsli:raw="A new copy of the &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt; with &lt;see cref=&quot;P:System.Security.Policy.PolicyStatement.PermissionSet&quot; /&gt; and &lt;see cref=&quot;P:System.Security.Policy.PolicyStatement.Attributes&quot; /&gt; identical to those of the current &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt;.">
        <see cref="T:System.Security.Policy.PolicyStatement" /> 的新副本，其 <see cref="P:System.Security.Policy.PolicyStatement.PermissionSet" /> 和 <see cref="P:System.Security.Policy.PolicyStatement.Attributes" /> 与当前 <see cref="T:System.Security.Policy.PolicyStatement" /> 的相同。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt; object is equal to the current &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt;.">确定指定的 <see cref="T:System.Security.Policy.PolicyStatement" /> 对象是否等于当前的 <see cref="T:System.Security.Policy.PolicyStatement" />。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt; object to compare with the current &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt;.">要与当前的 <see cref="T:System.Security.Policy.PolicyStatement" /> 比较的 <see cref="T:System.Security.Policy.PolicyStatement" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Security.Policy.PolicyStatement" /> 等于当前的 <see cref="T:System.Security.Policy.PolicyStatement" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a given state from an XML encoding.">从 XML 编码重新构造具有给定状态的安全对象。</summary>
      <param name="et" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;et&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="et" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;et&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt; encoding.">
        <paramref name="et" /> 参数不是有效的 <see cref="T:System.Security.Policy.PolicyStatement" /> 编码。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Reconstructs a security object with a given state from an XML encoding.">从 XML 编码重新构造具有给定状态的安全对象。</summary>
      <param name="et" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <param name="level" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; context for lookup of &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; values.">用于查找 <see cref="T:System.Security.Policy.PolicyLevel" /> 值的 <see cref="T:System.Security.NamedPermissionSet" /> 上下文。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;et&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="et" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;et&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt; encoding.">
        <paramref name="et" /> 参数不是有效的 <see cref="T:System.Security.Policy.PolicyStatement" /> 编码。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.GetHashCode">
      <summary vsli:raw="Gets a hash code for the &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt; object that is suitable for use in hashing algorithms and data structures such as a hash table.">获取 <see cref="T:System.Security.Policy.PolicyStatement" /> 对象的哈希代码，此代码适合在哈希算法和数据结构（例如哈希表）中使用。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Security.Policy.PolicyStatement&quot; /&gt; object.">当前 <see cref="T:System.Security.Policy.PolicyStatement" /> 对象的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <param name="level" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; context for lookup of &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; values.">用于查找 <see cref="T:System.Security.Policy.PolicyLevel" /> 值的 <see cref="T:System.Security.NamedPermissionSet" /> 上下文。</param>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.Attributes">
      <summary vsli:raw="Gets or sets the attributes of the policy statement.">获取或设置策略语句的特性。</summary>
      <returns vsli:raw="The attributes of the policy statement.">策略语句的特性。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.AttributeString">
      <summary vsli:raw="Gets a string representation of the attributes of the policy statement.">获取策略语句的特性的字符串表示形式。</summary>
      <returns vsli:raw="A text string representing the attributes of the policy statement.">表示策略语句的特性的文本字符串。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.PermissionSet">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; of the policy statement.">获取或设置策略语句的 <see cref="T:System.Security.PermissionSet" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; of the policy statement.">策略语句的 <see cref="T:System.Security.PermissionSet" />。</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyStatementAttribute">
      <summary vsli:raw="Defines special attribute flags for security policy on code groups.">为代码组上的安全策略定义特殊的特性标志。</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.All">
      <summary vsli:raw="All attribute flags are set.">设置所有的特性标志。</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.Exclusive">
      <summary vsli:raw="The exclusive code group flag. When a code group has this flag set, only the permissions associated with that code group are granted to code belonging to the code group. At most, one code group matching a given piece of code can be set as exclusive.">独占代码组标志。 当代码组设置此标志时，只将与该代码组关联的权限授予属于代码组的代码。 至多可以将一个与给定代码段匹配的代码组设置为独占性的。</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.LevelFinal">
      <summary vsli:raw="The flag representing a policy statement that causes lower policy levels to not be evaluated as part of the resolve operation, effectively allowing the policy level to override lower levels.">标志，表示导致较低策略级别不被作为解析操作的一部分进行评估的策略语句，它实际上允许策略级别重写较低的级别。</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.Nothing">
      <summary vsli:raw="No flags are set.">不设置任何标志。</summary>
    </member>
    <member name="T:System.Security.Policy.Publisher">
      <summary vsli:raw="Provides the Authenticode X.509v3 digital signature of a code assembly as evidence for policy evaluation. This class cannot be inherited.">提供代码程序集的 Authenticode X.509v3 数字签名作为策略评估的证据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.Publisher&quot; /&gt; class with the Authenticode X.509v3 certificate containing the publisher's public key.">用包含发行者公钥的 Authenticode X.509v3 证书初始化 <see cref="T:System.Security.Policy.Publisher" /> 类的新实例。</summary>
      <param name="cert" vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate&quot; /&gt; that contains the software publisher's public key.">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />，它包含软件发行者的公钥。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;cert&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cert" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.Publisher.Copy">
      <summary vsli:raw="Creates an equivalent copy of the &lt;see cref=&quot;T:System.Security.Policy.Publisher&quot; /&gt;.">创建 <see cref="T:System.Security.Policy.Publisher" /> 的等效副本。</summary>
      <returns vsli:raw="A new, identical copy of the &lt;see cref=&quot;T:System.Security.Policy.Publisher&quot; /&gt;.">
        <see cref="T:System.Security.Policy.Publisher" /> 的相同的新副本。</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary vsli:raw="Creates an identity permission that corresponds to the current instance of the &lt;see cref=&quot;T:System.Security.Policy.Publisher&quot; /&gt; class.">创建与 <see cref="T:System.Security.Policy.Publisher" /> 类的当前实例对应的标识权限。</summary>
      <param name="evidence" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.Evidence&quot; /&gt; from which to construct the identity permission.">构造标识权限所依据的 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.PublisherIdentityPermission&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Security.Policy.Publisher&quot; /&gt;.">指定 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> 的 <see cref="T:System.Security.Policy.Publisher" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.Equals(System.Object)">
      <summary vsli:raw="Compares the current &lt;see cref=&quot;T:System.Security.Policy.Publisher&quot; /&gt; to the specified object for equivalence.">将当前 <see cref="T:System.Security.Policy.Publisher" /> 与指定的对象比较以判断它们是否等同。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.Publisher&quot; /&gt; to test for equivalence with the current object.">将测试是否与当前对象等同的 <see cref="T:System.Security.Policy.Publisher" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter is not a &lt;see cref=&quot;T:System.Security.Policy.Publisher&quot; /&gt; object.">
        <paramref name="o" /> 参数不是 <see cref="T:System.Security.Policy.Publisher" /> 对象。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances of the &lt;see cref=&quot;T:System.Security.Policy.Publisher&quot; /&gt; class are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Security.Policy.Publisher" /> 类的两个实例相等，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.GetHashCode">
      <summary vsli:raw="Gets the hash code of the current &lt;see cref=&quot;P:System.Security.Policy.Publisher.Certificate&quot; /&gt;.">获取当前 <see cref="P:System.Security.Policy.Publisher.Certificate" /> 的哈希代码。</summary>
      <returns vsli:raw="The hash code of the current &lt;see cref=&quot;P:System.Security.Policy.Publisher.Certificate&quot; /&gt;.">当前 <see cref="P:System.Security.Policy.Publisher.Certificate" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.ToString">
      <summary vsli:raw="Returns a string representation of the current &lt;see cref=&quot;T:System.Security.Policy.Publisher&quot; /&gt;.">返回当前 <see cref="T:System.Security.Policy.Publisher" /> 的字符串表示形式。</summary>
      <returns vsli:raw="A representation of the current &lt;see cref=&quot;T:System.Security.Policy.Publisher&quot; /&gt;.">当前 <see cref="T:System.Security.Policy.Publisher" /> 的表示形式。</returns>
    </member>
    <member name="P:System.Security.Policy.Publisher.Certificate">
      <summary vsli:raw="Gets the publisher's Authenticode X.509v3 certificate.">获取发行者的 Authenticode X.509v3 证书。</summary>
      <returns vsli:raw="The publisher's &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate&quot; /&gt;.">发行者的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />。</returns>
    </member>
    <member name="T:System.Security.Policy.PublisherMembershipCondition">
      <summary vsli:raw="Determines whether an assembly belongs to a code group by testing its software publisher's Authenticode X.509v3 certificate. This class cannot be inherited.">通过测试程序集的软件发行者 Authenticode X.509v3 证书确定程序集是否属于代码组。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.PublisherMembershipCondition&quot; /&gt; class with the Authenticode X.509v3 certificate that determines membership.">使用确定成员身份的 Authenticode X.509v3 证书初始化 <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> 类的新实例。</summary>
      <param name="certificate" vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate&quot; /&gt; that contains the software publisher's public key.">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />，它包含软件发行者的公钥。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary vsli:raw="Determines whether the specified evidence satisfies the membership condition.">确定指定的证据是否能满足成员条件。</summary>
      <param name="evidence" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.Evidence&quot; /&gt; against which to make the test.">进行测试所依据的 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.PublisherMembershipCondition.Certificate&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified evidence satisfies the membership condition; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的证据满足成员条件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Copy">
      <summary vsli:raw="Creates an equivalent copy of the membership condition.">创建成员条件的等效副本。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.PublisherMembershipCondition.Certificate&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="A new, identical copy of the current membership condition.">当前成员条件的完全相同的新副本。</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Equals(System.Object)">
      <summary vsli:raw="Determines whether the publisher certificate from the specified object is equivalent to the publisher certificate contained in the current &lt;see cref=&quot;T:System.Security.Policy.PublisherMembershipCondition&quot; /&gt;.">确定指定对象中的发行者证书是否等效于包含在当前 <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> 中的发行者证书。</summary>
      <param name="o" vsli:raw="The object to compare to the current &lt;see cref=&quot;T:System.Security.Policy.PublisherMembershipCondition&quot; /&gt;.">要与当前 <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> 进行比较的对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.PublisherMembershipCondition.Certificate&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the publisher certificate from the specified object is equivalent to the publisher certificate contained in the current &lt;see cref=&quot;T:System.Security.Policy.PublisherMembershipCondition&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定对象中的发行者证书等效于包含在当前 <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> 中的发行者证书，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is not a valid membership condition element.">
        <paramref name="e" /> 参数不是有效的成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <param name="level" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; context, used to resolve &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; references.">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 上下文，它用于解析 <see cref="T:System.Security.NamedPermissionSet" /> 引用。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is not a valid membership condition element.">
        <paramref name="e" /> 参数不是有效的成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.GetHashCode">
      <summary vsli:raw="Gets the hash code for the current membership condition.">获取当前成员条件的哈希代码。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.PublisherMembershipCondition.Certificate&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="The hash code for the current membership condition.">当前成员条件的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToString">
      <summary vsli:raw="Creates and returns a string representation of the &lt;see cref=&quot;T:System.Security.Policy.PublisherMembershipCondition&quot; /&gt;.">创建并返回 <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> 的字符串表示形式。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.PublisherMembershipCondition.Certificate&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="A representation of the &lt;see cref=&quot;T:System.Security.Policy.PublisherMembershipCondition&quot; /&gt;.">
        <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> 的表示形式。</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.PublisherMembershipCondition.Certificate&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state with the specified &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" /> 创建安全对象及其当前状态的 XML 编码。</summary>
      <param name="level" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; context, which is used to resolve &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; references.">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 上下文，它用于解析 <see cref="T:System.Security.NamedPermissionSet" /> 引用。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.PublisherMembershipCondition.Certificate&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="P:System.Security.Policy.PublisherMembershipCondition.Certificate">
      <summary vsli:raw="Gets or sets the Authenticode X.509v3 certificate for which the membership condition tests.">获取或设置要针对其测试成员条件的 Authenticode X.509v3 证书。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property value is &lt;see langword=&quot;null&quot; /&gt;.">属性值为 <see langword="null" />。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate&quot; /&gt; for which the membership condition tests.">要针对其测试成员条件的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />。</returns>
    </member>
    <member name="T:System.Security.Policy.Site">
      <summary vsli:raw="Provides the Web site from which a code assembly originates as evidence for policy evaluation. This class cannot be inherited.">提供从其中产生代码程序集的网站作为策略评估的证据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.Site.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.Site&quot; /&gt; class with the website from which a code assembly originates.">用从其中产生代码程序集的网站初始化 <see cref="T:System.Security.Policy.Site" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The website of origin for the associated code assembly.">关联代码程序集源的网站。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.Site.Copy">
      <summary vsli:raw="Creates an equivalent copy of the &lt;see cref=&quot;T:System.Security.Policy.Site&quot; /&gt; object.">创建当前 <see cref="T:System.Security.Policy.Site" /> 对象的等效副本。</summary>
      <returns vsli:raw="A new object that is identical to the current &lt;see cref=&quot;T:System.Security.Policy.Site&quot; /&gt; object.">新对象与当前 <see cref="T:System.Security.Policy.Site" /> 对象相同。</returns>
    </member>
    <member name="M:System.Security.Policy.Site.CreateFromUrl(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Security.Policy.Site&quot; /&gt; object from the specified URL.">从指定的 URL 创建新的 <see cref="T:System.Security.Policy.Site" /> 对象。</summary>
      <param name="url" vsli:raw="The URL from which to create the new &lt;see cref=&quot;T:System.Security.Policy.Site&quot; /&gt; object.">用于创建新 <see cref="T:System.Security.Policy.Site" /> 对象的 URL 。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;url&quot; /&gt; parameter is not a valid URL.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;url&quot; /&gt; parameter is a file name.">
        <paramref name="url" /> 参数不是有效的 URL。  
  
- 或 - 
<paramref name="url" /> 参数是一个文件名。</exception>
      <returns vsli:raw="A new site object.">一个新的站点对象。</returns>
    </member>
    <member name="M:System.Security.Policy.Site.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary vsli:raw="Creates an identity permission that corresponds to the current &lt;see cref=&quot;T:System.Security.Policy.Site&quot; /&gt; object.">创建与当前 <see cref="T:System.Security.Policy.Site" /> 对象对应的标识权限。</summary>
      <param name="evidence" vsli:raw="The evidence from which to construct the identity permission.">用于构造标识权限的证据。</param>
      <returns vsli:raw="A site identity permission for the current &lt;see cref=&quot;T:System.Security.Policy.Site&quot; /&gt; object.">当前 <see cref="T:System.Security.Policy.Site" /> 对象的站点标识授予权限。</returns>
    </member>
    <member name="M:System.Security.Policy.Site.Equals(System.Object)">
      <summary vsli:raw="Compares the current &lt;see cref=&quot;T:System.Security.Policy.Site&quot; /&gt; to the specified object for equivalence.">将当前 <see cref="T:System.Security.Policy.Site" /> 与指定的对象比较以判断它们是否等同。</summary>
      <param name="o" vsli:raw="The object to test for equivalence with the current object.">与当前对象等同的要测试的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances of the &lt;see cref=&quot;T:System.Security.Policy.Site&quot; /&gt; class are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Security.Policy.Site" /> 类的两个实例相等，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Site.GetHashCode">
      <summary vsli:raw="Returns the hash code of the current website name.">返回当前网站名称的哈希代码。</summary>
      <returns vsli:raw="The hash code of the current website name.">当前网站名称的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.Site.ToString">
      <summary vsli:raw="Returns a string representation of the current &lt;see cref=&quot;T:System.Security.Policy.Site&quot; /&gt; object.">返回当前 <see cref="T:System.Security.Policy.Site" /> 对象的字符串表示形式。</summary>
      <returns vsli:raw="A representation of the current site.">当前站点的表示形式。</returns>
    </member>
    <member name="P:System.Security.Policy.Site.Name">
      <summary vsli:raw="Gets the website from which the code assembly originates.">获取或设置从其中产生代码程序集的网站。</summary>
      <returns vsli:raw="The name of the website from which the code assembly originates.">代码程序集出自的网站的名称。</returns>
    </member>
    <member name="T:System.Security.Policy.SiteMembershipCondition">
      <summary vsli:raw="Determines whether an assembly belongs to a code group by testing the site from which it originated. This class cannot be inherited.">通过测试从其中产生程序集的站点确定该程序集是否属于代码组。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.SiteMembershipCondition&quot; /&gt; class with name of the site that determines membership.">用确定成员身份的站点名称初始化 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 类的新实例。</summary>
      <param name="site" vsli:raw="The site name or wildcard expression.">站点名称或通配符表达式。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;site&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="site" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;site&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.Policy.Site&quot; /&gt;.">
        <paramref name="site" /> 参数不是有效的 <see cref="T:System.Security.Policy.Site" />。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary vsli:raw="Determines whether the specified evidence satisfies the membership condition.">确定指定的证据是否能满足成员条件。</summary>
      <param name="evidence" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.Evidence&quot; /&gt; against which to make the test.">进行测试所依据的 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.SiteMembershipCondition.Site&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified evidence satisfies the membership condition; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的证据满足成员条件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Copy">
      <summary vsli:raw="Creates an equivalent copy of the membership condition.">创建成员条件的等效副本。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.SiteMembershipCondition.Site&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="A new, identical copy of the current membership condition.">当前成员条件的完全相同的新副本。</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Equals(System.Object)">
      <summary vsli:raw="Determines whether the site from the specified &lt;see cref=&quot;T:System.Security.Policy.SiteMembershipCondition&quot; /&gt; object is equivalent to the site contained in the current &lt;see cref=&quot;T:System.Security.Policy.SiteMembershipCondition&quot; /&gt;.">确定指定 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 对象中的站点是否等效于包含在当前 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 中的站点。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.SiteMembershipCondition&quot; /&gt; object to compare to the current &lt;see cref=&quot;T:System.Security.Policy.SiteMembershipCondition&quot; /&gt;.">要与当前 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 进行比较的 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 对象。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.SiteMembershipCondition.Site&quot; /&gt; property for the current object or the specified object is &lt;see langword=&quot;null&quot; /&gt;.">当前对象或指定对象的 <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the site from the specified &lt;see cref=&quot;T:System.Security.Policy.SiteMembershipCondition&quot; /&gt; object is equivalent to the site contained in the current &lt;see cref=&quot;T:System.Security.Policy.SiteMembershipCondition&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 对象中的站点等效于包含在当前 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 中的站点，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is not a valid membership condition element.">
        <paramref name="e" /> 参数不是有效的成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <param name="level" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; context, used to resolve &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; references.">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 上下文，它用于解析 <see cref="T:System.Security.NamedPermissionSet" /> 引用。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is not a valid membership condition element.">
        <paramref name="e" /> 参数不是有效的成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.GetHashCode">
      <summary vsli:raw="Gets the hash code for the current membership condition.">获取当前成员条件的哈希代码。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.SiteMembershipCondition.Site&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="The hash code for the current membership condition.">当前成员条件的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToString">
      <summary vsli:raw="Creates and returns a string representation of the membership condition.">创建并返回成员条件的字符串表示形式。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.SiteMembershipCondition.Site&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="A string representation of the membership condition.">成员条件的字符串表示形式。</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.SiteMembershipCondition.Site&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state with the specified &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" /> 创建安全对象及其当前状态的 XML 编码。</summary>
      <param name="level" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; context, used to resolve &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; references.">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 上下文，它用于解析 <see cref="T:System.Security.NamedPermissionSet" /> 引用。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.SiteMembershipCondition.Site&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="P:System.Security.Policy.SiteMembershipCondition.Site">
      <summary vsli:raw="Gets or sets the site for which the membership condition tests.">获取或设置要针对其测试成员条件的站点。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="An attempt is made to set &lt;see cref=&quot;P:System.Security.Policy.SiteMembershipCondition.Site&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">尝试将 <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 设置为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An attempt is made to set &lt;see cref=&quot;P:System.Security.Policy.SiteMembershipCondition.Site&quot; /&gt; to an invalid &lt;see cref=&quot;T:System.Security.Policy.Site&quot; /&gt;.">尝试将 <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 设置为无效的 <see cref="T:System.Security.Policy.Site" />。</exception>
      <returns vsli:raw="The site for which the membership condition tests.">要针对其测试成员条件的站点。</returns>
    </member>
    <member name="T:System.Security.Policy.StrongName">
      <summary vsli:raw="Provides the strong name of a code assembly as evidence for policy evaluation. This class cannot be inherited.">提供代码程序集的强名称作为策略评估的证据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; class with the strong name public key blob, name, and version.">用强名称公钥 Blob、名称和版本初始化 <see cref="T:System.Security.Policy.StrongName" /> 类的新实例。</summary>
      <param name="blob" vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.StrongNamePublicKeyBlob&quot; /&gt; of the software publisher.">软件发行者的 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />。</param>
      <param name="name" vsli:raw="The simple name section of the strong name.">强名称中的简单名称部分。</param>
      <param name="version" vsli:raw="The &lt;see cref=&quot;T:System.Version&quot; /&gt; of the strong name.">强名称的 <see cref="T:System.Version" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;blob&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;version&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="blob" /> 参数为 <see langword="null" />。  
  
- 或 - 
<paramref name="name" /> 参数为 <see langword="null" />。  
  
- 或 - 
<paramref name="version" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is an empty string (&quot;&quot;).">
        <paramref name="name" /> 参数为空字符串 ("")。</exception>
    </member>
    <member name="M:System.Security.Policy.StrongName.Copy">
      <summary vsli:raw="Creates an equivalent copy of the current &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">创建当前 <see cref="T:System.Security.Policy.StrongName" /> 的等效副本。</summary>
      <returns vsli:raw="A new, identical copy of the current &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">当前 <see cref="T:System.Security.Policy.StrongName" /> 的相同的新副本。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt; that corresponds to the current &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">创建与当前 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 对应的 <see cref="T:System.Security.Policy.StrongName" />。</summary>
      <param name="evidence" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.Evidence&quot; /&gt; from which to construct the &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt;.">构造 <see cref="T:System.Security.Policy.Evidence" /> 所依据的 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">指定 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified strong name is equal to the current strong name.">确定指定的强名称是否等于当前强名称。</summary>
      <param name="o" vsli:raw="The strong name to compare against the current strong name.">与当前强名称进行比较的强名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified strong name is equal to the current strong name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的强名称等于当前强名称，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.GetHashCode">
      <summary vsli:raw="Gets the hash code of the current &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">获取当前 <see cref="T:System.Security.Policy.StrongName" /> 的哈希代码。</summary>
      <returns vsli:raw="The hash code of the current &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">当前 <see cref="T:System.Security.Policy.StrongName" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.ToString">
      <summary vsli:raw="Creates a string representation of the current &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">创建当前 <see cref="T:System.Security.Policy.StrongName" /> 的字符串表示形式。</summary>
      <returns vsli:raw="A representation of the current &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">当前 <see cref="T:System.Security.Policy.StrongName" /> 的表示形式。</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.Name">
      <summary vsli:raw="Gets the simple name of the current &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">获取当前 <see cref="T:System.Security.Policy.StrongName" /> 的简单名称。</summary>
      <returns vsli:raw="The simple name part of the &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">
        <see cref="T:System.Security.Policy.StrongName" /> 的简单名称部分。</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.PublicKey">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.Permissions.StrongNamePublicKeyBlob&quot; /&gt; of the current &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">获取当前 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.StrongNamePublicKeyBlob&quot; /&gt; of the current &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">当前 <see cref="T:System.Security.Policy.StrongName" /> 的 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />。</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.Version">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Version&quot; /&gt; of the current &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">获取当前 <see cref="T:System.Version" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Version&quot; /&gt; of the current &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt;.">当前 <see cref="T:System.Security.Policy.StrongName" /> 的 <see cref="T:System.Version" />。</returns>
    </member>
    <member name="T:System.Security.Policy.StrongNameMembershipCondition">
      <summary vsli:raw="Determines whether an assembly belongs to a code group by testing its strong name. This class cannot be inherited.">通过测试程序集的强名称确定该程序集是否属于代码组。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt; class with the strong name public key blob, name, and version number that determine membership.">用确定成员身份的强名称公钥 Blob、名称和版本号初始化 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 类的新实例。</summary>
      <param name="blob" vsli:raw="The strong name public key blob of the software publisher.">软件发行者的强名称公钥 Blob。</param>
      <param name="name" vsli:raw="The simple name section of the strong name.">强名称中的简单名称部分。</param>
      <param name="version" vsli:raw="The version number of the strong name.">强名称的版本号。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;blob&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="blob" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is an empty string (&quot;&quot;).">
        <paramref name="name" /> 参数为 <see langword="null" />。  
  
- 或 - 
<paramref name="name" /> 参数为空字符串 ("")。</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary vsli:raw="Determines whether the specified evidence satisfies the membership condition.">确定指定的证据是否能满足成员条件。</summary>
      <param name="evidence" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.Evidence&quot; /&gt; against which to make the test.">进行测试所依据的 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified evidence satisfies the membership condition; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的证据满足成员条件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Copy">
      <summary vsli:raw="Creates an equivalent copy of the current &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt;.">创建当前 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的等效副本。</summary>
      <returns vsli:raw="A new, identical copy of the current &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt;.">当前 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的相同的新副本。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Equals(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; from the specified object is equivalent to the &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; contained in the current &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt;.">确定指定对象中的 <see cref="T:System.Security.Policy.StrongName" /> 是否等效于包含在当前 <see cref="T:System.Security.Policy.StrongName" /> 中的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />。</summary>
      <param name="o" vsli:raw="The object to compare to the current &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt;.">要与当前 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 进行比较的对象。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.StrongNameMembershipCondition.PublicKey&quot; /&gt; property of the current object or the specified object is &lt;see langword=&quot;null&quot; /&gt;.">当前对象或指定对象的 <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> 属性是 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; from the specified object is equivalent to the &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; contained in the current &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定对象中的 <see cref="T:System.Security.Policy.StrongName" /> 等效于包含在当前 <see cref="T:System.Security.Policy.StrongName" /> 中的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <param name="level" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; context, used to resolve &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; references.">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 上下文，它用于解析 <see cref="T:System.Security.NamedPermissionSet" /> 引用。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is not a valid membership condition element.">
        <paramref name="e" /> 参数不是有效的成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt;.">返回当前 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的哈希代码。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.StrongNameMembershipCondition.PublicKey&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="The hash code for the current &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt;.">当前 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToString">
      <summary vsli:raw="Creates and returns a string representation of the current &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt;.">创建并返回当前 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的字符串表示形式。</summary>
      <returns vsli:raw="A representation of the current &lt;see cref=&quot;T:System.Security.Policy.StrongNameMembershipCondition&quot; /&gt;.">当前 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的表示形式。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state with the specified &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" /> 创建安全对象及其当前状态的 XML 编码。</summary>
      <param name="level" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; context, which is used to resolve &lt;see cref=&quot;T:System.Security.NamedPermissionSet&quot; /&gt; references.">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 上下文，它用于解析 <see cref="T:System.Security.NamedPermissionSet" /> 引用。</param>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.Name">
      <summary vsli:raw="Gets or sets the simple name of the &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; for which the membership condition tests.">获取或设置要针对其测试成员条件的 <see cref="T:System.Security.Policy.StrongName" /> 的简单名称。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The value is an empty string (&quot;&quot;).">该值为 <see langword="null" />。  
  
- 或 - 
值为空字符串 ("")。</exception>
      <returns vsli:raw="The simple name of the &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; for which the membership condition tests.">要针对其测试成员条件的 <see cref="T:System.Security.Policy.StrongName" /> 的简单名称。</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Security.Permissions.StrongNamePublicKeyBlob&quot; /&gt; of the &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; for which the membership condition tests.">获取或设置要针对其测试成员条件的 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="An attempt is made to set the &lt;see cref=&quot;P:System.Security.Policy.StrongNameMembershipCondition.PublicKey&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">尝试将 <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> 设置为 <see langword="null" />。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Permissions.StrongNamePublicKeyBlob&quot; /&gt; of the &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; for which the membership condition tests.">要针对其测试成员条件的 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.Version">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Version&quot; /&gt; of the &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; for which the membership condition tests.">获取或设置要针对其测试成员条件的 <see cref="T:System.Version" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Version&quot; /&gt; of the &lt;see cref=&quot;T:System.Security.Policy.StrongName&quot; /&gt; for which the membership condition tests.">要针对其测试成员条件的 <see cref="T:System.Version" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</returns>
    </member>
    <member name="T:System.Security.Policy.TrustManagerContext">
      <summary vsli:raw="Represents the context for the trust manager to consider when making the decision to run an application, and when setting up the security on a new &lt;see cref=&quot;T:System.AppDomain&quot; /&gt; in which to run an application.">表示作出决定以运行应用程序时和为新的 <see cref="T:System.AppDomain" />（要在其中运行应用程序）建立安全时，信任关系管理器要考虑的上下文。</summary>
    </member>
    <member name="M:System.Security.Policy.TrustManagerContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.TrustManagerContext&quot; /&gt; class.">初始化 <see cref="T:System.Security.Policy.TrustManagerContext" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.TrustManagerContext&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Security.Policy.TrustManagerUIContext&quot; /&gt; object.">使用指定的 <see cref="T:System.Security.Policy.TrustManagerUIContext" /> 对象初始化 <see cref="T:System.Security.Policy.TrustManagerContext" /> 类的新实例。</summary>
      <param name="uiContext" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Policy.TrustManagerUIContext&quot; /&gt; values that specifies the type of trust manager user interface to use.">
        <see cref="T:System.Security.Policy.TrustManagerUIContext" /> 值之一，该值指定要使用的信任关系管理器用户界面的类型。</param>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision">
      <summary vsli:raw="Gets or sets a value indicating whether the application security manager should ignore any persisted decisions and call the trust manager.">获取或设置一个值，该值指示应用程序安全管理器是否应忽略任何保留的决定并调用信任关系管理器。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to call the trust manager; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果调用信任关系管理器，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.KeepAlive">
      <summary vsli:raw="Gets or sets a value indicating whether the trust manager should cache state for this application, to facilitate future requests to determine application trust.">获取或设置一个值，该值指示信任关系管理器是否应为此应用程序缓存状态，以便于将来的请求确定应用程序信任。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cache state data; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果缓存状态数据，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.NoPrompt">
      <summary vsli:raw="Gets or sets a value indicating whether the trust manager should prompt the user for trust decisions.">获取或设置一个值，该值指示信任关系管理器是否应提示用户以获取信任决定。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to not prompt the user; &lt;see langword=&quot;false&quot; /&gt; to prompt the user. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果不提示用户，则为 <see langword="true" />；如果提示用户，则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.Persist">
      <summary vsli:raw="Gets or sets a value indicating whether the user's response to the consent dialog should be persisted.">获取或设置一个值，该值指示是否应保留用户对同意对话框的响应。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cache state data; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果缓存状态数据，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity">
      <summary vsli:raw="Gets or sets the identity of the previous application identity.">获取或设置上一个应用程序标识的标识。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ApplicationIdentity&quot; /&gt; object representing the previous &lt;see cref=&quot;T:System.ApplicationIdentity&quot; /&gt;.">表示上一个 <see cref="T:System.ApplicationIdentity" /> 的 <see cref="T:System.ApplicationIdentity" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.UIContext">
      <summary vsli:raw="Gets or sets the type of user interface the trust manager should display.">获取或设置信任关系管理器应显示的用户界面类型。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Policy.TrustManagerUIContext&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Security.Policy.TrustManagerUIContext.Run&quot; /&gt;.">
        <see cref="T:System.Security.Policy.TrustManagerUIContext" /> 值之一。 默认值为 <see cref="F:System.Security.Policy.TrustManagerUIContext.Run" />。</returns>
    </member>
    <member name="T:System.Security.Policy.TrustManagerUIContext">
      <summary vsli:raw="Specifies the type of user interface (UI) the trust manager should use for trust decisions.">指定信任关系管理器应该用于作出信任决定的用户界面 (UI) 类型。</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Install">
      <summary vsli:raw="An Install UI.">安装 UI。</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Run">
      <summary vsli:raw="A Run UI.">运行 UI。</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Upgrade">
      <summary vsli:raw="An Upgrade UI.">升级 UI。</summary>
    </member>
    <member name="T:System.Security.Policy.UnionCodeGroup">
      <summary vsli:raw="Represents a code group whose policy statement is the union of the current code group's policy statement and the policy statement of all its matching child code groups. This class cannot be inherited.">表示一个代码组，该代码组的策略声明是当前代码组的策略声明和所有其匹配的子代码组策略声明的联合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.UnionCodeGroup&quot; /&gt; class.">初始化 <see cref="T:System.Security.Policy.UnionCodeGroup" /> 类的新实例。</summary>
      <param name="membershipCondition" vsli:raw="A membership condition that tests evidence to determine whether this code group applies policy.">成员条件，它测试证据以确定此代码组是否应用策略。</param>
      <param name="policy" vsli:raw="The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.">形式为权限集和特性的代码组的策略声明，这些权限集和特性将被授予匹配成员条件的代码。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The type of the &lt;paramref name=&quot;membershipCondition&quot; /&gt; parameter is not valid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the &lt;paramref name=&quot;policy&quot; /&gt; parameter is not valid.">
        <paramref name="membershipCondition" /> 参数的类型无效。  
  
- 或 - 
<paramref name="policy" /> 参数的类型无效。</exception>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.Copy">
      <summary vsli:raw="Makes a deep copy of the current code group.">生成当前代码组的深层副本。</summary>
      <returns vsli:raw="An equivalent copy of the current code group, including its membership conditions and child code groups.">当前代码组（包括其成员条件和子代码组）的等效副本。</returns>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary vsli:raw="Resolves policy for the code group and its descendants for a set of evidence.">对一组证据解析代码组及其子代的策略。</summary>
      <param name="evidence" vsli:raw="The evidence for the assembly.">程序集的证据。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;evidence&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="evidence" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Policy.PolicyException" vsli:raw="More than one code group (including the parent code group and any child code groups) is marked &lt;see cref=&quot;F:System.Security.Policy.PolicyStatementAttribute.Exclusive&quot; /&gt;.">将不止一个代码组（包括父代码组和任何子代码组）标记为 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />。</exception>
      <returns vsli:raw="A policy statement consisting of the permissions granted by the code group with optional attributes, or &lt;see langword=&quot;null&quot; /&gt; if the code group does not apply (the membership condition does not match the specified evidence).">由具有可选特性的代码组授予的权限组成的策略声明；或者，如果代码组不适用（成员条件与指定的证据不匹配），则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary vsli:raw="Resolves matching code groups.">解析匹配的代码组。</summary>
      <param name="evidence" vsli:raw="The evidence for the assembly.">程序集的证据。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;evidence&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="evidence" /> 参数为 <see langword="null" />。</exception>
      <returns vsli:raw="The complete set of code groups that were matched by the evidence.">证据匹配的完整代码组集。</returns>
    </member>
    <member name="P:System.Security.Policy.UnionCodeGroup.MergeLogic">
      <summary vsli:raw="Gets the merge logic.">获取合并逻辑。</summary>
      <returns vsli:raw="Always the string &quot;Union&quot;.">总是为字符串“Union”。</returns>
    </member>
    <member name="T:System.Security.Policy.Url">
      <summary vsli:raw="Provides the URL from which a code assembly originates as evidence for policy evaluation. This class cannot be inherited.">提供从其中产生代码程序集的 URL 作为策略评估的证据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.Url.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.Url&quot; /&gt; class with the URL from which a code assembly originates.">用从其中产生代码程序集的 URL 初始化 <see cref="T:System.Security.Policy.Url" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The URL of origin for the associated code assembly.">关联代码程序集源的 URL。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.Url.Copy">
      <summary vsli:raw="Creates a new copy of the evidence object.">创建证据对象的新副本。</summary>
      <returns vsli:raw="A new, identical copy of the evidence object.">证据对象的完全相同的新副本。</returns>
    </member>
    <member name="M:System.Security.Policy.Url.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary vsli:raw="Creates an identity permission corresponding to the current instance of the &lt;see cref=&quot;T:System.Security.Policy.Url&quot; /&gt; evidence class.">创建与 <see cref="T:System.Security.Policy.Url" /> 证据类的当前实例对应的标识权限。</summary>
      <param name="evidence" vsli:raw="The evidence set from which to construct the identity permission.">构造标识权限所依据的证据集。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.UrlIdentityPermission&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Security.Policy.Url&quot; /&gt; evidence.">指定的 <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> 证据的 <see cref="T:System.Security.Policy.Url" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Url.Equals(System.Object)">
      <summary vsli:raw="Compares the current &lt;see cref=&quot;T:System.Security.Policy.Url&quot; /&gt; evidence object to the specified object for equivalence.">将当前 <see cref="T:System.Security.Policy.Url" /> 证据对象与指定对象比较以判断它们是否等同。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.Url&quot; /&gt; evidence object to test for equivalence with the current object.">
        <see cref="T:System.Security.Policy.Url" /> 证据对象，将测试其是否与当前对象等同。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Security.Policy.Url&quot; /&gt; objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个 <see cref="T:System.Security.Policy.Url" /> 对象相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Url.GetHashCode">
      <summary vsli:raw="Gets the hash code of the current URL.">获取当前 URL 的哈希代码。</summary>
      <returns vsli:raw="The hash code of the current URL.">当前 URL 的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.Url.ToString">
      <summary vsli:raw="Returns a string representation of the current &lt;see cref=&quot;T:System.Security.Policy.Url&quot; /&gt;.">返回当前 <see cref="T:System.Security.Policy.Url" /> 的字符串表示形式。</summary>
      <returns vsli:raw="A representation of the current &lt;see cref=&quot;T:System.Security.Policy.Url&quot; /&gt;.">当前 <see cref="T:System.Security.Policy.Url" /> 的表示形式。</returns>
    </member>
    <member name="P:System.Security.Policy.Url.Value">
      <summary vsli:raw="Gets the URL from which the code assembly originates.">获取从其中产生代码程序集的 URL。</summary>
      <returns vsli:raw="The URL from which the code assembly originates.">从其中产生代码程序集的 URL。</returns>
    </member>
    <member name="T:System.Security.Policy.UrlMembershipCondition">
      <summary vsli:raw="Determines whether an assembly belongs to a code group by testing its URL. This class cannot be inherited.">通过测试程序集的 URL 确定该程序集是否属于代码组。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.UrlMembershipCondition&quot; /&gt; class with the URL that determines membership.">用确定成员身份的 URL 初始化 <see cref="T:System.Security.Policy.UrlMembershipCondition" /> 类的新实例。</summary>
      <param name="url" vsli:raw="The URL for which to test.">要对其进行测试的 URL。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;url&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="url" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;url&quot; /&gt; must be an absolute URL.">
        <paramref name="url" /> 必须为绝对 URL。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary vsli:raw="Determines whether the specified evidence satisfies the membership condition.">确定指定的证据是否能满足成员条件。</summary>
      <param name="evidence" vsli:raw="The evidence set against which to make the test.">证据集，将根据它进行测试。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.UrlMembershipCondition.Url&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified evidence satisfies the membership condition; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的证据满足成员条件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Copy">
      <summary vsli:raw="Creates an equivalent copy of the membership condition.">创建成员条件的等效副本。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.UrlMembershipCondition.Url&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="A new, identical copy of the current membership condition.">当前成员条件的完全相同的新副本。</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Equals(System.Object)">
      <summary vsli:raw="Determines whether the URL from the specified object is equivalent to the URL contained in the current &lt;see cref=&quot;T:System.Security.Policy.UrlMembershipCondition&quot; /&gt;.">确定指定对象中的 URL 是否等效于包含在当前 <see cref="T:System.Security.Policy.UrlMembershipCondition" /> 中的 URL。</summary>
      <param name="o">要与当前 <see cref="T:System.Security.Policy.UrlMembershipCondition" /> 进行比较的对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.UrlMembershipCondition.Url&quot; /&gt; property of the current object or the specified object is &lt;see langword=&quot;null&quot; /&gt;.">当前对象或指定对象的 <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 属性是 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the URL from the specified object is equivalent to the URL contained in the current &lt;see cref=&quot;T:System.Security.Policy.UrlMembershipCondition&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定对象中的 URL 等效于包含在当前 <see cref="T:System.Security.Policy.UrlMembershipCondition" /> 中的 URL，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is not a valid membership condition element.">
        <paramref name="e" /> 参数不是有效的成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <param name="level" vsli:raw="The policy level context, used to resolve named permission set references.">策略级别上下文，用于解析命名的权限集引用。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is not a valid membership condition element.">
        <paramref name="e" /> 参数不是有效的成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.GetHashCode">
      <summary vsli:raw="Gets the hash code for the current membership condition.">获取当前成员条件的哈希代码。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.UrlMembershipCondition.Url&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="The hash code for the current membership condition.">当前成员条件的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToString">
      <summary vsli:raw="Creates and returns a string representation of the membership condition.">创建并返回成员条件的字符串表示形式。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.UrlMembershipCondition.Url&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="A string representation of the state of the membership condition.">成员条件状态的字符串表示形式。</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state with the specified &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" /> 创建安全对象及其当前状态的 XML 编码。</summary>
      <param name="level" vsli:raw="The policy level context for resolving named permission set references.">用于解析命名的权限集引用的策略级别上下文。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.UrlMembershipCondition.Url&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 属性为 <see langword="null" />。</exception>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="P:System.Security.Policy.UrlMembershipCondition.Url">
      <summary vsli:raw="Gets or sets the URL for which the membership condition tests.">获取或设置要针对其测试成员条件的 URL。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="An attempt is made to set &lt;see cref=&quot;P:System.Security.Policy.UrlMembershipCondition.Url&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">尝试将 <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 设置为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Value is not an absolute URL.">值不是绝对 URL。</exception>
      <returns vsli:raw="The URL for which the membership condition tests.">要针对其测试成员条件的 URL。</returns>
    </member>
    <member name="T:System.Security.Policy.Zone">
      <summary vsli:raw="Provides the security zone of a code assembly as evidence for policy evaluation. This class cannot be inherited.">提供代码程序集的安全区域作为策略评估的证据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.Zone.#ctor(System.Security.SecurityZone)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.Zone&quot; /&gt; class with the zone from which a code assembly originates.">用从其中产生代码程序集的区域初始化 <see cref="T:System.Security.Policy.Zone" /> 类的新实例。</summary>
      <param name="zone" vsli:raw="The zone of origin for the associated code assembly.">关联代码程序集源的区域。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;zone&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.SecurityZone&quot; /&gt;.">
        <paramref name="zone" /> 参数不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
    </member>
    <member name="M:System.Security.Policy.Zone.Copy">
      <summary vsli:raw="Creates an equivalent copy of the evidence object.">创建证据对象的等效副本。</summary>
      <returns vsli:raw="A new, identical copy of the evidence object.">证据对象的完全相同的新副本。</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.CreateFromUrl(System.String)">
      <summary vsli:raw="Creates a new zone with the specified URL.">创建具有指定 URL 的新区域。</summary>
      <param name="url" vsli:raw="The URL from which to create the zone.">在其中创建区域的 URL。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;url&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="url" /> 参数为 <see langword="null" />。</exception>
      <returns vsli:raw="A new zone with the specified URL.">具有指定 URL 的新区域。</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary vsli:raw="Creates an identity permission that corresponds to the current instance of the &lt;see cref=&quot;T:System.Security.Policy.Zone&quot; /&gt; evidence class.">创建与 <see cref="T:System.Security.Policy.Zone" /> 证据类的当前实例对应的标识权限。</summary>
      <param name="evidence" vsli:raw="The evidence set from which to construct the identity permission.">构造标识权限所依据的证据集。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.ZoneIdentityPermission&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Security.Policy.Zone&quot; /&gt; evidence.">指定的 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 证据的 <see cref="T:System.Security.Policy.Zone" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.Equals(System.Object)">
      <summary vsli:raw="Compares the current &lt;see cref=&quot;T:System.Security.Policy.Zone&quot; /&gt; evidence object to the specified object for equivalence.">将当前 <see cref="T:System.Security.Policy.Zone" /> 证据对象与指定对象比较以判断它们是否等同。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Security.Policy.Zone&quot; /&gt; evidence object to test for equivalence with the current object.">
        <see cref="T:System.Security.Policy.Zone" /> 证据对象，将测试其是否与当前对象等同。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;o&quot; /&gt; parameter is not a &lt;see cref=&quot;T:System.Security.Policy.Zone&quot; /&gt; object.">
        <paramref name="o" /> 参数不是 <see cref="T:System.Security.Policy.Zone" /> 对象。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Security.Policy.Zone&quot; /&gt; objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个 <see cref="T:System.Security.Policy.Zone" /> 对象相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.GetHashCode">
      <summary vsli:raw="Gets the hash code of the current zone.">获取当前区域的哈希代码。</summary>
      <returns vsli:raw="The hash code of the current zone.">当前区域的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.ToString">
      <summary vsli:raw="Returns a string representation of the current &lt;see cref=&quot;T:System.Security.Policy.Zone&quot; /&gt;.">返回当前 <see cref="T:System.Security.Policy.Zone" /> 的字符串表示形式。</summary>
      <returns vsli:raw="A representation of the current &lt;see cref=&quot;T:System.Security.Policy.Zone&quot; /&gt;.">当前 <see cref="T:System.Security.Policy.Zone" /> 的表示形式。</returns>
    </member>
    <member name="P:System.Security.Policy.Zone.SecurityZone">
      <summary vsli:raw="Gets the zone from which the code assembly originates.">获取从其中产生代码程序集的区域。</summary>
      <returns vsli:raw="The zone from which the code assembly originates.">从其中产生代码程序集的区域。</returns>
    </member>
    <member name="T:System.Security.Policy.ZoneMembershipCondition">
      <summary vsli:raw="Determines whether an assembly belongs to a code group by testing its zone of origin. This class cannot be inherited.">通过测试程序集的原始区域确定该程序集是否属于代码组。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.#ctor(System.Security.SecurityZone)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Policy.ZoneMembershipCondition&quot; /&gt; class with the zone that determines membership.">用确定成员身份的区域初始化 <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> 类的新实例。</summary>
      <param name="zone" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecurityZone&quot; /&gt; for which to test.">要对其进行测试的 <see cref="T:System.Security.SecurityZone" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;zone&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.Security.SecurityZone&quot; /&gt;.">
        <paramref name="zone" /> 参数不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary vsli:raw="Determines whether the specified evidence satisfies the membership condition.">确定指定的证据是否能满足成员条件。</summary>
      <param name="evidence" vsli:raw="The evidence set against which to make the test.">证据集，将根据它进行测试。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 属性为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; property is not a valid &lt;see cref=&quot;T:System.Security.SecurityZone&quot; /&gt;.">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 属性不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified evidence satisfies the membership condition; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的证据满足成员条件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Copy">
      <summary vsli:raw="Creates an equivalent copy of the membership condition.">创建成员条件的等效副本。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 属性为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; property is not a valid &lt;see cref=&quot;T:System.Security.SecurityZone&quot; /&gt;.">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 属性不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
      <returns vsli:raw="A new, identical copy of the current membership condition.">当前成员条件的完全相同的新副本。</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Equals(System.Object)">
      <summary vsli:raw="Determines whether the zone from the specified object is equivalent to the zone contained in the current &lt;see cref=&quot;T:System.Security.Policy.ZoneMembershipCondition&quot; /&gt;.">确定指定对象中的区域是否等效于包含在当前 <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> 中的区域。</summary>
      <param name="o" vsli:raw="The object to compare to the current &lt;see cref=&quot;T:System.Security.Policy.ZoneMembershipCondition&quot; /&gt;.">要与当前 <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> 进行比较的对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; property for the current object or the specified object is &lt;see langword=&quot;null&quot; /&gt;.">当前对象或指定对象的 <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 属性为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; property for the current object or the specified object is not a valid &lt;see cref=&quot;T:System.Security.SecurityZone&quot; /&gt;.">当前对象或指定对象的 <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 属性不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the zone from the specified object is equivalent to the zone contained in the current &lt;see cref=&quot;T:System.Security.Policy.ZoneMembershipCondition&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定对象中的区域等效于包含在当前 <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> 中的区域，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is not a valid membership condition element.">
        <paramref name="e" /> 参数不是有效的成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <param name="level" vsli:raw="The policy level context used to resolve named permission set references.">用于解析命名的权限集引用的策略级别上下文。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter is not a valid membership condition element.">
        <paramref name="e" /> 参数不是有效的成员条件元素。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.GetHashCode">
      <summary vsli:raw="Gets the hash code for the current membership condition.">获取当前成员条件的哈希代码。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 属性为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; property is not a valid &lt;see cref=&quot;T:System.Security.SecurityZone&quot; /&gt;.">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 属性不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
      <returns vsli:raw="The hash code for the current membership condition.">当前成员条件的哈希代码。</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToString">
      <summary vsli:raw="Creates and returns a string representation of the membership condition.">创建并返回成员条件的字符串表示形式。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 属性为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; property is not a valid &lt;see cref=&quot;T:System.Security.SecurityZone&quot; /&gt;.">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 属性不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
      <returns vsli:raw="A string representation of the state of the membership condition.">成员条件状态的字符串表示形式。</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 属性为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; property is not a valid &lt;see cref=&quot;T:System.Security.SecurityZone&quot; /&gt;.">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 属性不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state with the specified &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt;.">使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" /> 创建安全对象及其当前状态的 XML 编码。</summary>
      <param name="level" vsli:raw="The policy level context for resolving named permission set references.">用于解析命名的权限集引用的策略级别上下文。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 属性为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; property is not a valid &lt;see cref=&quot;T:System.Security.SecurityZone&quot; /&gt;.">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 属性不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
      <returns vsli:raw="An XML encoding of the security object, including any state information.">安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone">
      <summary vsli:raw="Gets or sets the zone for which the membership condition tests.">获取或设置要针对其测试成员条件的区域。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value is &lt;see langword=&quot;null&quot; /&gt;.">该值为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An attempt is made to set &lt;see cref=&quot;P:System.Security.Policy.ZoneMembershipCondition.SecurityZone&quot; /&gt; to an invalid &lt;see cref=&quot;T:System.Security.SecurityZone&quot; /&gt;.">尝试将 <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 设置为无效的 <see cref="T:System.Security.SecurityZone" />。</exception>
      <returns vsli:raw="The zone for which the membership condition tests.">要针对其测试成员条件的区域。</returns>
    </member>
    <member name="T:System.Security.PolicyLevelType">
      <summary vsli:raw="Specifies the type of a managed code policy level.">指定托管代码策略级别的类型。</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.AppDomain">
      <summary vsli:raw="Security policy for all managed code in an application.">应用程序中所有托管代码的安全策略。</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.Enterprise">
      <summary vsli:raw="Security policy for all managed code in an enterprise.">企业中所有托管代码的安全策略。</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.Machine">
      <summary vsli:raw="Security policy for all managed code that is run on the computer.">运行于计算机上的所有托管代码的安全策略。</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.User">
      <summary vsli:raw="Security policy for all managed code that is run by the user.">由用户运行的所有托管代码的安全策略。</summary>
    </member>
    <member name="T:System.Security.SecurityContext">
      <summary vsli:raw="Encapsulates and propagates all security-related data for execution contexts transferred across threads. This class cannot be inherited.">封装并传播在线程间传输的执行上下文的所有安全相关数据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.SecurityContext.Capture">
      <summary vsli:raw="Captures the security context for the current thread.">捕获当前线程的安全上下文。</summary>
      <returns vsli:raw="The security context for the current thread.">当前线程的安全上下文。</returns>
    </member>
    <member name="M:System.Security.SecurityContext.CreateCopy">
      <summary vsli:raw="Creates a copy of the current security context.">创建当前安全上下文的副本。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current security context has been previously used, was marshaled across application domains, or was not acquired through the &lt;see cref=&quot;M:System.Security.SecurityContext.Capture&quot; /&gt; method.">当前安全上下文以前已经使用过，在应用程序域间封送过或没有通过 <see cref="M:System.Security.SecurityContext.Capture" /> 方法获得过。</exception>
      <returns vsli:raw="The security context for the current thread.">当前线程的安全上下文。</returns>
    </member>
    <member name="M:System.Security.SecurityContext.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Security.SecurityContext&quot; /&gt; class.">释放 <see cref="T:System.Security.SecurityContext" /> 类的当前实例所使用的所有资源。</summary>
    </member>
    <member name="M:System.Security.SecurityContext.IsFlowSuppressed">
      <summary vsli:raw="Determines whether the flow of the security context has been suppressed.">确定是否已取消安全上下文的流动。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the flow has been suppressed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已取消流动，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed">
      <summary vsli:raw="Determines whether the flow of the Windows identity portion of the current security context has been suppressed.">确定是否已取消当前安全上下文的 Windows 标识部分的流动。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the flow has been suppressed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已取消流动，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.SecurityContext.RestoreFlow">
      <summary vsli:raw="Restores the flow of the security context across asynchronous threads.">在异步线程间恢复安全上下文的流动。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The security context is &lt;see langword=&quot;null&quot; /&gt; or an empty string.">安全上下文为 <see langword="null" /> 或空字符串。</exception>
    </member>
    <member name="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
      <summary vsli:raw="Runs the specified method in the specified security context on the current thread.">在当前线程上指定的安全上下文中运行指定的方法。</summary>
      <param name="securityContext" vsli:raw="The security context to set.">要设置的安全上下文。</param>
      <param name="callback" vsli:raw="The delegate that represents the method to run in the specified security context.">表示要在指定的安全上下文中运行的方法的委托。</param>
      <param name="state" vsli:raw="The object to pass to the callback method.">要传递给回调方法的对象。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;securityContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;securityContext&quot; /&gt; was not acquired through a capture operation.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;securityContext&quot; /&gt; has already been used as the argument to a &lt;see cref=&quot;M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)&quot; /&gt; method call.">
        <paramref name="securityContext" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="securityContext" /> 不是通过捕获操作获取的。  
  
- 或 - 
 已经将 <paramref name="securityContext" /> 用作 <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> 方法调用的参数。</exception>
    </member>
    <member name="M:System.Security.SecurityContext.SuppressFlow">
      <summary vsli:raw="Suppresses the flow of the security context across asynchronous threads.">在异步线程间取消安全上下文的流动。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Threading.AsyncFlowControl&quot; /&gt; structure for restoring the flow.">用于恢复流动的 <see cref="T:System.Threading.AsyncFlowControl" /> 结构。</returns>
    </member>
    <member name="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
      <summary vsli:raw="Suppresses the flow of the Windows identity portion of the current security context across asynchronous threads.">在异步线程间取消当前安全上下文的 Windows 标识部分的流动。</summary>
      <returns vsli:raw="A structure for restoring the flow.">用于恢复流动的结构。</returns>
    </member>
    <member name="T:System.Security.SecurityContextSource">
      <summary vsli:raw="Identifies the source for the security context.">标识安全上下文的源。</summary>
    </member>
    <member name="F:System.Security.SecurityContextSource.CurrentAppDomain">
      <summary vsli:raw="The current application domain is the source for the security context.">当前的应用程序域是安全上下文的源。</summary>
    </member>
    <member name="F:System.Security.SecurityContextSource.CurrentAssembly">
      <summary vsli:raw="The current assembly is the source for the security context.">当前程序集是安全上下文的源。</summary>
    </member>
    <member name="T:System.Security.SecurityManager">
      <summary vsli:raw="Provides the main access point for classes interacting with the security system. This class cannot be inherited.">对与安全系统交互的类提供主访问点。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture">
      <summary vsli:raw="Determines whether the current thread requires a security context capture if its security state has to be re-created at a later point in time.">确定在必须在稍后的某个时间点重新创建当前线程的安全状态的情况下，当前线程是否需要安全上下文捕获。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if the stack contains no partially trusted application domains, no partially trusted assemblies, and no currently active &lt;see cref=&quot;M:System.Security.CodeAccessPermission.PermitOnly&quot; /&gt; or &lt;see cref=&quot;M:System.Security.CodeAccessPermission.Deny&quot; /&gt; modifiers; &lt;see langword=&quot;true&quot; /&gt; if the common language runtime cannot guarantee that the stack contains none of these.">如果堆栈不包含部分信任的应用程序域、部分信任的程序集以及当前活动的 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> 或 <see cref="M:System.Security.CodeAccessPermission.Deny" /> 修饰符，则为 <see langword="false" />；如果公共语言运行时无法保证堆栈不包含其中任一项，则为 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)">
      <summary vsli:raw="Gets a permission set that is safe to grant to an application that has the provided evidence.">获取一个权限集，对具有提供的证据的应用程序授予此权限集是安全的。</summary>
      <param name="evidence" vsli:raw="The host evidence to match to a permission set.">要与某个权限集匹配的主机证据。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;evidence&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="evidence" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="A permission set that can be used as a grant set for the application that has the provided evidence.">一个权限集，它可用作具有提供的证据的应用程序的权限集。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)">
      <summary vsli:raw="Gets the granted zone identity and URL identity permission sets for the current assembly.">获取当前程序集的已授予的区域标识和 URL 标识权限集。</summary>
      <param name="zone" vsli:raw="An output parameter that contains an &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; of granted &lt;see cref=&quot;P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone&quot; /&gt; objects.">一个输出参数，它包含已授予的 <see cref="T:System.Collections.ArrayList" /> 对象的 <see cref="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone" />。</param>
      <param name="origin" vsli:raw="An output parameter that contains an &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; of granted &lt;see cref=&quot;T:System.Security.Permissions.UrlIdentityPermission&quot; /&gt; objects.">一个输出参数，它包含已授予的 <see cref="T:System.Collections.ArrayList" /> 对象的 <see cref="T:System.Security.Permissions.UrlIdentityPermission" />。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The request for &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt; failed.">对 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 的请求失败。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.IsGranted(System.Security.IPermission)">
      <summary vsli:raw="Determines whether a permission is granted to the caller.">确定是否将权限授予调用方。</summary>
      <param name="perm" vsli:raw="The permission to test against the grant of the caller.">针对调用方的权限授予测试的权限。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the permissions granted to the caller include the permission &lt;paramref name=&quot;perm&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果授予调用方的权限包括权限 <paramref name="perm" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; from the specified file.">从指定的文件加载 <see cref="T:System.Security.Policy.PolicyLevel" />。</summary>
      <param name="path" vsli:raw="The physical file path to a file containing the security policy information.">包含安全策略信息的文件的物理文件路径。</param>
      <param name="type" vsli:raw="One of the enumeration values that specifies the type of the policy level to be loaded.">一个枚举值，其指定要加载的策略级别类型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;path&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file indicated by the &lt;paramref name=&quot;path&quot; /&gt; parameter does not exist.">由 <paramref name="path" /> 参数指示的文件不存在。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The code that calls this method does not have &lt;see cref=&quot;F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The code that calls this method does not have &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The code that calls this method does not have &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The code that calls this method does not have &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery&quot; /&gt;.">调用此方法的代码不含 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。  
  
- 或 - 
调用此方法的代码不含 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />。  
  
- 或 - 
调用此方法的代码不含 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />。  
  
- 或 - 
调用此方法的代码不含 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &amp;lt;legacyCasPolicy&amp;gt; element.">此方法使用代码访问安全性 (CAS) 策略，该策略在 .NET Framework 4 中已过时。 若要使 CAS 策略与早期版本的 .NET Framework 兼容，请使用 &lt;legacyCasPolicy&gt; 元素。</exception>
      <returns vsli:raw="The loaded policy level.">已加载的策略级别。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; from the specified string.">从指定的字符串加载 <see cref="T:System.Security.Policy.PolicyLevel" />。</summary>
      <param name="str" vsli:raw="The XML representation of a security policy level in the same form in which it appears in a configuration file.">安全策略级别的 XML 表示形式，与它在配置文件出现的形式相同。</param>
      <param name="type" vsli:raw="One of the enumeration values that specifies the type of the policy level to be loaded.">一个枚举值，其指定要加载的策略级别类型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;str&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;str&quot; /&gt; parameter is not valid.">
        <paramref name="str" /> 参数无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The code that calls this method does not have &lt;see cref=&quot;F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy&quot; /&gt;.">调用此方法的代码不含 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。</exception>
      <returns vsli:raw="The loaded policy level.">已加载的策略级别。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.PolicyHierarchy">
      <summary vsli:raw="Provides an enumerator to access the security policy hierarchy by levels, such as computer policy and user policy.">提供一个枚举器，以按等级访问安全策略层次结构，例如计算机策略和用户策略。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &amp;lt;legacyCasPolicy&amp;gt; element.">此方法使用代码访问安全性 (CAS) 策略，该策略在 .NET Framework 4 中已过时。 若要使 CAS 策略与早期版本的 .NET Framework 兼容，请使用 &lt;legacyCasPolicy&gt; 元素。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The code that calls this method does not have &lt;see cref=&quot;F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy&quot; /&gt;.">调用此方法的代码不含 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。</exception>
      <returns vsli:raw="An enumerator for &lt;see cref=&quot;T:System.Security.Policy.PolicyLevel&quot; /&gt; objects that compose the security policy hierarchy.">构成安全策略层次结构的 <see cref="T:System.Security.Policy.PolicyLevel" /> 对象的枚举器。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary vsli:raw="Determines what permissions to grant to code based on the specified evidence.">根据指定的证据确定向代码授予什么权限。</summary>
      <param name="evidence" vsli:raw="The evidence set used to evaluate policy.">用于评估策略的证据集。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &amp;lt;legacyCasPolicy&amp;gt; element.">此方法使用代码访问安全性 (CAS) 策略，该策略在 .NET Framework 4 中已过时。 若要使 CAS 策略与早期版本的 .NET Framework 兼容，请使用 &lt;legacyCasPolicy&gt; 元素。</exception>
      <returns vsli:raw="The set of permissions that can be granted by the security system.">可由安全系统授予的一组权限。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)">
      <summary vsli:raw="Determines what permissions to grant to code based on the specified evidence and requests.">根据指定的证据和请求确定向代码授予什么权限。</summary>
      <param name="evidence" vsli:raw="The evidence set used to evaluate policy.">用于评估策略的证据集。</param>
      <param name="reqdPset" vsli:raw="The required permissions the code needs to run.">该代码需要运行的所需权限。</param>
      <param name="optPset" vsli:raw="The optional permissions that will be used if granted, but aren't required for the code to run.">将使用的可选权限（如授权），但运行代码不需要它。</param>
      <param name="denyPset" vsli:raw="The denied permissions that must never be granted to the code even if policy otherwise permits it.">决不能授予代码的拒绝权限，即使策略允许。</param>
      <param name="denied" vsli:raw="An output parameter that contains the set of permissions not granted.">包含未授予的权限集的输出参数。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &amp;lt;legacyCasPolicy&amp;gt; element.">此方法使用代码访问安全性 (CAS) 策略，该策略在 .NET Framework 4 中已过时。 若要使 CAS 策略与早期版本的 .NET Framework 兼容，请使用 &lt;legacyCasPolicy&gt; 元素。</exception>
      <exception cref="T:System.Security.Policy.PolicyException" vsli:raw="Policy fails to grant the minimum required permissions specified by the &lt;paramref name=&quot;reqdPset&quot; /&gt; parameter.">策略无法授予 <paramref name="reqdPset" /> 参数指定的所需最小权限。</exception>
      <returns vsli:raw="The set of permissions that would be granted by the security system.">可由安全系统授予的一组权限。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])">
      <summary vsli:raw="Determines what permissions to grant to code based on the specified evidence.">根据指定的证据确定向代码授予什么权限。</summary>
      <param name="evidences" vsli:raw="An array of evidence objects used to evaluate policy.">用于评估策略的证据对象的数组。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &amp;lt;legacyCasPolicy&amp;gt; element.">此方法使用代码访问安全性 (CAS) 策略，该策略在 .NET Framework 4 中已过时。 若要使 CAS 策略与早期版本的 .NET Framework 兼容，请使用 &lt;legacyCasPolicy&gt; 元素。</exception>
      <returns vsli:raw="The set of permissions that is appropriate for all of the provided evidence.">适用于所有提供的证据的权限集。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)">
      <summary vsli:raw="Gets a collection of code groups matching the specified evidence.">获取与指定证据相匹配的代码组集合。</summary>
      <param name="evidence" vsli:raw="The evidence set against which the policy is evaluated.">已评估策略的证据集。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &amp;lt;legacyCasPolicy&amp;gt; element.">此方法使用代码访问安全性 (CAS) 策略，该策略在 .NET Framework 4 中已过时。 若要使 CAS 策略与早期版本的 .NET Framework 兼容，请使用 &lt;legacyCasPolicy&gt; 元素。</exception>
      <returns vsli:raw="An enumeration of the set of code groups matching the evidence.">与证据匹配的代码组集的枚举。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)">
      <summary vsli:raw="Determines which permissions to grant to code based on the specified evidence, excluding the policy for the &lt;see cref=&quot;T:System.AppDomain&quot; /&gt; level.">根据指定的证据确定授予代码的权限，不包括 <see cref="T:System.AppDomain" /> 级别的策略。</summary>
      <param name="evidence" vsli:raw="The evidence set used to evaluate policy.">用于评估策略的证据集。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &amp;lt;legacyCasPolicy&amp;gt; element.">此方法使用代码访问安全性 (CAS) 策略，该策略在 .NET Framework 4 中已过时。 若要使 CAS 策略与早期版本的 .NET Framework 兼容，请使用 &lt;legacyCasPolicy&gt; 元素。</exception>
      <returns vsli:raw="The set of permissions that can be granted by the security system.">可由安全系统授予的一组权限。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.SavePolicy">
      <summary vsli:raw="Saves the modified security policy state.">保存修改的安全策略状态。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &amp;lt;legacyCasPolicy&amp;gt; element.">此方法使用代码访问安全性 (CAS) 策略，该策略在 .NET Framework 4 中已过时。 若要使 CAS 策略与早期版本的 .NET Framework 兼容，请使用 &lt;legacyCasPolicy&gt; 元素。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The code that calls this method does not have &lt;see cref=&quot;F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy&quot; /&gt;.">调用此方法的代码不含 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)">
      <summary vsli:raw="Saves a modified security policy level loaded with &lt;see cref=&quot;M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)&quot; /&gt;.">保存用 <see cref="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)" /> 加载的已修改的安全策略级别。</summary>
      <param name="level" vsli:raw="The policy level object to be saved.">要保存的策略级别对象。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The code that calls this method does not have &lt;see cref=&quot;F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy&quot; /&gt;.">调用此方法的代码不含 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &amp;lt;legacyCasPolicy&amp;gt; element.">此方法使用代码访问安全性 (CAS) 策略，该策略在 .NET Framework 4 中已过时。 若要使 CAS 策略与早期版本的 .NET Framework 兼容，请使用 &lt;legacyCasPolicy&gt; 元素。</exception>
    </member>
    <member name="P:System.Security.SecurityManager.CheckExecutionRights">
      <summary vsli:raw="Gets or sets a value indicating whether code must have &lt;see cref=&quot;F:System.Security.Permissions.SecurityPermissionFlag.Execution&quot; /&gt; in order to execute.">获取或设置一个值，该值指示代码是否必须具有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> 才能执行。</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The code that calls this method does not have &lt;see cref=&quot;F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy&quot; /&gt;.">调用此方法的代码不含 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if code must have &lt;see cref=&quot;F:System.Security.Permissions.SecurityPermissionFlag.Execution&quot; /&gt; in order to execute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果代码必须具有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> 才能执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.SecurityManager.SecurityEnabled">
      <summary vsli:raw="Gets or sets a value indicating whether security is enabled.">获取或设置指示是否启用安全的值。</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The code that calls this method does not have &lt;see cref=&quot;F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy&quot; /&gt;.">调用此方法的代码不含 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if security is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果启用了安全，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.SecurityState">
      <summary vsli:raw="Provides a base class for requesting the security status of an action from the &lt;see cref=&quot;T:System.AppDomainManager&quot; /&gt; object.">提供一个基类，用于从 <see cref="T:System.AppDomainManager" /> 对象中请求操作的安全状态。</summary>
    </member>
    <member name="M:System.Security.SecurityState.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.SecurityState&quot; /&gt; class.">初始化 <see cref="T:System.Security.SecurityState" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.SecurityState.EnsureState">
      <summary vsli:raw="When overridden in a derived class, ensures that the state that is represented by &lt;see cref=&quot;T:System.Security.SecurityState&quot; /&gt; is available on the host.">在派生类中重写时，确保由 <see cref="T:System.Security.SecurityState" /> 表示的状态在宿主上可用。</summary>
    </member>
    <member name="M:System.Security.SecurityState.IsStateAvailable">
      <summary vsli:raw="Gets a value that indicates whether the state for this implementation of the &lt;see cref=&quot;T:System.Security.SecurityState&quot; /&gt; class is available on the current host.">获取一个值，该值指示 <see cref="T:System.Security.SecurityState" /> 类的此实现的状态是否在当前宿主上可用。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the state is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果状态可用，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.SecurityZone">
      <summary vsli:raw="Defines the integer values corresponding to security zones used by security policy.">定义与安全策略所使用的安全区域相对应的整数值。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Internet">
      <summary vsli:raw="The Internet zone is used for the Web sites on the Internet that do not belong to another zone.">对于不属于另一区域的 Internet 上的网站，使用“Internet”区域。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Intranet">
      <summary vsli:raw="The local intranet zone is used for content located on a company's intranet. Because the servers and information would be within a company's firewall, a user or company could assign a higher trust level to the content on the intranet.">本地 Intranet 区域用于公司 Intranet 上的内容。 因为服务器和信息可能在公司的防火墙内，用户或公司可以给 Intranet 上的内容分配较高的信任级别。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.MyComputer">
      <summary vsli:raw="The local computer zone is an implicit zone used for content that exists on the user's computer.">本地计算机区域是一个隐式区域，用于用户计算机上存在的内容。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.NoZone">
      <summary vsli:raw="No zone is specified.">未指定区域。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Trusted">
      <summary vsli:raw="The trusted sites zone is used for content located on Web sites considered more reputable or trustworthy than other sites on the Internet. Users can use this zone to assign a higher trust level to these sites to minimize the number of authentication requests. The URLs of these trusted Web sites need to be mapped into this zone by the user.">受信任站点区域用于位于此类网站的内容，这些网站比 Internet 上的其他站点更可信或更值得信赖。 用户可以使用此区域向这些站点分配更高的信任级别，以最大限度地减少身份验证请求的数量。 这些受信任的网站的 URL 需要由用户映射到该区域中。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Untrusted">
      <summary vsli:raw="The restricted sites zone is used for Web sites with content that could cause, or could have caused, problems when downloaded. The URLs of these untrusted Web sites need to be mapped into this zone by the user.">受限站点区域用于这样的网站，即，其所具有的内容在下载时已经导致过，或可能会导致问题。 这些不受信任的网站的 URL 需要由用户映射到该区域中。</summary>
    </member>
    <member name="T:System.Security.XmlSyntaxException">
      <summary vsli:raw="The exception that is thrown when there is a syntax error in XML parsing. This class cannot be inherited.">在 XML 语法分析中出现语法错误时引发的异常。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.XmlSyntaxException&quot; /&gt; class with default properties.">使用默认属性初始化 <see cref="T:System.Security.XmlSyntaxException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.XmlSyntaxException&quot; /&gt; class with the line number where the exception was detected.">用检测到异常时的行号初始化 <see cref="T:System.Security.XmlSyntaxException" /> 类的新实例。</summary>
      <param name="lineNumber" vsli:raw="The line number of the XML stream where the XML syntax error was detected.">XML 流的行号，在此行中检测到 XML 语法错误。</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.XmlSyntaxException&quot; /&gt; class with a specified error message and the line number where the exception was detected.">用指定的错误信息和检测到异常时的行号初始化 <see cref="T:System.Security.XmlSyntaxException" /> 类的新实例。</summary>
      <param name="lineNumber" vsli:raw="The line number of the XML stream where the XML syntax error was detected.">XML 流的行号，在此行中检测到 XML 语法错误。</param>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.XmlSyntaxException&quot; /&gt; class with a specified error message.">用指定的错误消息初始化 <see cref="T:System.Security.XmlSyntaxException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.XmlSyntaxException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Security.XmlSyntaxException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;inner&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">导致当前异常的异常。 如果 <paramref name="inner" /> 参数不为 <see langword="null" />，则当前异常将在处理内部异常的 <see langword="catch" /> 块中引发。</param>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermission">
      <summary vsli:raw="Allows control of code access security permissions for service controllers.">允许服务控制器对代码访问安全权限的控制。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermission&quot; /&gt; class.">初始化 <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermission&quot; /&gt; class with the specified access to resources.">用指定的对资源的访问权限初始化 <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;state&quot; /&gt; parameter is not a valid value of &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt;.">
        <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermission&quot; /&gt; class with the specified permission access levels, the name of the computer on which the service resides, and the short name that identifies the service to the system.">用指定的权限访问级别、服务所驻留的计算机的名称和向系统标识该服务的简称初始化 <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> 类的新实例。</summary>
      <param name="permissionAccess" vsli:raw="One of the &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 值之一。</param>
      <param name="machineName" vsli:raw="The name of the computer on which the service resides.">服务所驻留的计算机的名称。</param>
      <param name="serviceName" vsli:raw="The short name that identifies the service to the system.">向系统标识该服务的简称。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermission&quot; /&gt; class with the specified permission entries.">用指定的权限项初始化 <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> 类的新实例。</summary>
      <param name="permissionAccessEntries" vsli:raw="An array of &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot; /&gt; objects. The &lt;see cref=&quot;P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries&quot; /&gt; property is set to this value.">一个 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 对象数组。 <see cref="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries" /> 属性被设置为该值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;permissionAccessEntries&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="permissionAccessEntries" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries">
      <summary vsli:raw="Gets the collection of permission entries for this permissions request.">获取此权限请求的权限项集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntryCollection&quot; /&gt; that contains the permission entries for this permissions request.">一个 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" />，它包含此权限请求的权限项。</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAccess">
      <summary vsli:raw="Defines access levels used by &lt;see cref=&quot;T:System.ServiceProcess.ServiceController&quot; /&gt; permission classes.">定义 <see cref="T:System.ServiceProcess.ServiceController" /> 权限类使用的访问级别。</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.ServiceProcess.ServiceController&quot; /&gt; can connect to, but not control, existing services.">
        <see cref="T:System.ServiceProcess.ServiceController" /> 可以连接到现有服务，但不能控制现有服务。</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.ServiceProcess.ServiceController&quot; /&gt; can connect to and control existing services.">
        <see cref="T:System.ServiceProcess.ServiceController" /> 可以连接到并控制现有服务。</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.None">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.ServiceProcess.ServiceController&quot; /&gt; has no permissions.">
        <see cref="T:System.ServiceProcess.ServiceController" /> 没有权限。</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAttribute">
      <summary vsli:raw="Allows declarative service controller permission checks.">允许声明性的服务控制器权限检查。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ServiceProcess.ServiceControllerPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates the permission based on the requested access levels that are set through the &lt;see cref=&quot;P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess&quot; /&gt; property on the attribute.">根据请求的访问级别创建权限，这些访问级别是通过特性上的 <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess" /> 属性设置的。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; that represents the created permission.">一个 <see cref="T:System.Security.IPermission" />，它表示创建的权限。</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName">
      <summary vsli:raw="Gets or sets the name of the computer on which the service resides.">获取或设置服务所驻留的计算机的名称。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName&quot; /&gt; syntax is invalid.">
        <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName" /> 语法无效。</exception>
      <returns vsli:raw="The name of the computer that is running the service associated with the &lt;see cref=&quot;T:System.ServiceProcess.ServiceController&quot; /&gt;.">计算机的名称，该计算机正在运行与 <see cref="T:System.ServiceProcess.ServiceController" /> 关联的服务。</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess">
      <summary vsli:raw="Gets or sets the access levels used in the permissions request.">获取或设置权限请求中使用的访问级别。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 值的按位组合。</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName">
      <summary vsli:raw="Gets or sets the short name that identifies the service to the system.">获取或设置向系统标识该服务的简称。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The syntax of the &lt;see cref=&quot;P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName&quot; /&gt; property is invalid.">
        <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> 属性的语法无效。</exception>
      <returns vsli:raw="The name of the service.">服务的名称。</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntry">
      <summary vsli:raw="Defines the smallest unit of a code access security permission that is set for a &lt;see cref=&quot;T:System.ServiceProcess.ServiceController&quot; /&gt;.">定义为 <see cref="T:System.ServiceProcess.ServiceController" /> 设置的代码访问安全性权限的最小单位。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot; /&gt; class.">初始化 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot; /&gt; class with the specified permission access levels, the name of the computer, and a short name that identifies the service.">用指定的权限访问级别、计算机的名称和标识该服务的简称初始化 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 类的新实例。</summary>
      <param name="permissionAccess" vsli:raw="One of the &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 值之一。</param>
      <param name="machineName" vsli:raw="The name of the computer on which the service resides.">服务所驻留的计算机的名称。</param>
      <param name="serviceName" vsli:raw="The short name that identifies the service to the system.">向系统标识该服务的简称。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;machineName&quot; /&gt; is not valid.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceName&quot; /&gt; is not valid.">
        <paramref name="machineName" /> 无效。  
  
- 或 - 
 <paramref name="serviceName" /> 无效。</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.MachineName">
      <summary vsli:raw="Gets the name of the computer on which the service resides.">获取服务所驻留的计算机的名称。</summary>
      <returns vsli:raw="The name of the computer that is running the service associated with the &lt;see cref=&quot;T:System.ServiceProcess.ServiceController&quot; /&gt;.">计算机的名称，该计算机正在运行与 <see cref="T:System.ServiceProcess.ServiceController" /> 关联的服务。</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess">
      <summary vsli:raw="Gets the access levels used in the permissions request.">获取权限请求中使用的访问级别。</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionAccess&quot; /&gt; values.">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 值的按位组合。</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName">
      <summary vsli:raw="Gets the short name that identifies the service to the system.">获取向系统标识该服务的简称。</summary>
      <returns vsli:raw="The name of the service.">服务的名称。</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection">
      <summary vsli:raw="Contains a strongly-typed collection of &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot; /&gt; objects.">包含 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 对象的强类型集合。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Add(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary vsli:raw="Adds a specified &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot; /&gt; to this collection.">向此集合添加指定的 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot; /&gt; object to add.">要添加的 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 对象。</param>
      <returns vsli:raw="The zero-based index of the added &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot; /&gt; object.">所添加的 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 对象的从零开始的索引。</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary vsli:raw="Appends a set of specified permission entries to this collection.">向此集合中追加一组指定的权限项。</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot; /&gt; objects that contains the permission entries to add.">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 类型对象的数组，它包含要添加的权限项。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)">
      <summary vsli:raw="Appends a set of specified permission entries to this collection.">向此集合中追加一组指定的权限项。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntryCollection&quot; /&gt; that contains the permission entries to add.">一个 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" />，它包含要添加的权限项。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Contains(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary vsli:raw="Determines whether this collection contains a specified &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot; /&gt; object.">确定此集合是否包含指定的 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 对象。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot; /&gt; object to find.">要查找的 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot; /&gt; object belongs to this collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 对象属于此集合，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.CopyTo(System.ServiceProcess.ServiceControllerPermissionEntry[],System.Int32)">
      <summary vsli:raw="Copies the permission entries from this collection to an array, starting at a particular index of the array.">将权限项从此集合复制到数组中（从数组中特定的索引开始复制）。</summary>
      <param name="array" vsli:raw="An array of type &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot; /&gt; that receives the copied permission entries.">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 类型的数组，它接收复制的权限项。</param>
      <param name="index" vsli:raw="The zero-based index at which to begin copying the permission entries.">从零开始的索引，将从此索引位置开始复制权限项。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.IndexOf(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary vsli:raw="Determines the index of a specified permission entry in this collection.">确定指定权限项在此集合中的索引。</summary>
      <param name="value" vsli:raw="The permission entry to search for.">要搜索的权限项。</param>
      <returns vsli:raw="The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.">指定权限项的从零开始的索引；或者，如果集合中未找到该权限项，则为 -1。</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Insert(System.Int32,System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary vsli:raw="Inserts a permission entry into this collection at a specified index.">将权限项插入此集合中指定的索引位置。</summary>
      <param name="index" vsli:raw="The zero-based index of the collection at which to insert the permission entry.">集合的从零开始的索引，将在此索引位置插入权限项。</param>
      <param name="value" vsli:raw="The permission entry to insert into this collection.">将插入此集合中的权限项。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Remove(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary vsli:raw="Removes a specified permission entry from this collection.">从此集合中移除指定的权限项。</summary>
      <param name="value" vsli:raw="The permission entry to remove.">要移除的权限项。</param>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the object at a specified index.">获取或设置指定索引位置的对象。</summary>
      <param name="index" vsli:raw="The zero-based index into the collection.">集合中从零开始的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot; /&gt; object that exists at the specified index.">位于指定索引位置的 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 对象。</returns>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermission">
      <summary vsli:raw="The permission that is demanded by &lt;see cref=&quot;N:System.Transactions&quot; /&gt; when management of a transaction is escalated to MSDTC. This class cannot be inherited.">在事务的管理已升级到 MSDTC 时 <see cref="N:System.Transactions" /> 所要求的权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.DistributedTransactionPermission&quot; /&gt; class.">初始化 <see cref="T:System.Transactions.DistributedTransactionPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current permission.">创建并返回当前权限的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission.">当前权限的副本。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="securityElement" vsli:raw="The XML encoding used to reconstruct the permission.">用于重新构造权限的 XML 编码。</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a permission that is the intersection of the current permission and the specified permission.">创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
      <param name="target" vsli:raw="A permission to intersect with the current permission. It must be the same type as the current permission.">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <returns vsli:raw="A new permission that represents the intersection of the current permission and the specified permission. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Returns a value that indicates whether the current permission is a subset of the specified permission.">返回一个值，该值指示当前权限是否为指定权限的一个子集。</summary>
      <param name="target" vsli:raw="A permission to test for the subset relationship. This permission must be the same type as the current permission.">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; is a subset of the specified &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前 <see cref="T:System.Security.IPermission" /> 是指定 <see cref="T:System.Security.IPermission" /> 的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value that indicates whether unrestricted access to the resource that is protected by the current permission is allowed.">返回一个值，该值指示是否允许对受当前权限保护的资源进行不受限制地访问。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if unrestricted use of the resource protected by the permission is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许不受限制的使用权限所保护的资源，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the security object and its current state.">创建安全对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; that contains the XML encoding of the security object, including any state information.">包含安全对象的 XML 编码（包括所有状态信息）的 <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; that represents the union of the current permission and the specified permission.">代表当前权限和指定权限并集的 <see cref="T:System.Security.IPermission" />。</returns>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Transactions.DistributedTransactionPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Transactions.DistributedTransactionPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.DistributedTransactionPermissionAttribute&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt;.">使用指定的 <see cref="T:System.Transactions.DistributedTransactionPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates a permission object that can then be serialized into binary form and persistently stored along with the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; in an assembly's metadata.">创建一个权限对象，该对象随后可序列化为二进制格式，并与 <see cref="T:System.Security.Permissions.SecurityAction" /> 一起持久地存储在程序集的元数据中。</summary>
      <returns vsli:raw="A serializable permission object.">可序列化的权限对象。</returns>
    </member>
    <member name="P:System.Transactions.DistributedTransactionPermissionAttribute.Unrestricted">
      <summary vsli:raw="Gets or sets a value indicating whether full (unrestricted) permission to the resource protected by the attribute is declared.">获取或设置一个值，该值指示是否声明了对受该特性保护的资源有完全（无限制的）权限。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if full permission to the protected resource is declared; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果声明了对受保护资源的完全权限，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermission">
      <summary vsli:raw="Controls access permissions in ASP.NET hosted environments. This class cannot be inherited.">ASP.NET 寄宿的环境中的控件访问权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Web.AspNetHostingPermission&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; enumeration value.">使用指定的 <see cref="T:System.Security.Permissions.PermissionState" /> 枚举值初始化 <see cref="T:System.Web.AspNetHostingPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; enumeration value.">一个 <see cref="T:System.Security.Permissions.PermissionState" /> 枚举值。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not set to one of the &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; enumeration values.">
        <paramref name="state" /> 未设置为 <see cref="T:System.Security.Permissions.PermissionState" /> 枚举值之一。</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Web.AspNetHostingPermission&quot; /&gt; class with the specified permission level.">使用指定的权限级别初始化 <see cref="T:System.Web.AspNetHostingPermission" /> 类的新实例。</summary>
      <param name="level" vsli:raw="An &lt;see cref=&quot;T:System.Web.AspNetHostingPermissionLevel&quot; /&gt; enumeration value.">一个 <see cref="T:System.Web.AspNetHostingPermissionLevel" /> 枚举值。</param>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Copy">
      <summary vsli:raw="When implemented by a derived class, creates and returns an identical copy of the current permission object.">由派生类实现时，创建并返回当前权限对象的相同副本。</summary>
      <returns vsli:raw="A copy of the current permission object.">当前权限对象的副本。</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a permission object with a specified state from an XML encoding.">从 XML 编码重新构造具有指定状态的权限对象。</summary>
      <param name="securityElement" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; containing the XML encoding to use to reconstruct the permission object.">包含用于重新构造权限对象的 XML 编码的 <see cref="T:System.Security.SecurityElement" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;securityElement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="securityElement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.SecurityElement.Tag&quot; /&gt; property of &lt;paramref name=&quot;securityElement&quot; /&gt; is not equal to &quot;IPermission&quot;.  &#xA;  &#xA;-or-  &#xA;  &#xA; The class &lt;see cref=&quot;M:System.Security.SecurityElement.Attribute(System.String)&quot; /&gt; of &lt;paramref name=&quot;securityElement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;).">
        <paramref name="securityElement" /> 的 <see cref="P:System.Security.SecurityElement.Tag" /> 属性不等于“IPermission”。  
  
- 或 - 
<paramref name="securityElement" /> 的类 <see cref="M:System.Security.SecurityElement.Attribute(System.String)" /> 为 <see langword="null" /> 或空字符串 ("")。</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.">通过派生类实现时，创建和返回是当前权限和指定权限的交集的权限。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not an &lt;see cref=&quot;T:System.Web.AspNetHostingPermission&quot; /&gt;.">
        <paramref name="target" /> 不是 <see cref="T:System.Web.AspNetHostingPermission" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; that represents the intersection of the current permission and the specified permission; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">表示当前权限与指定权限的交集的 <see cref="T:System.Security.IPermission" />；如果交集为空，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Returns a value indicating whether the current permission is a subset of the specified permission.">返回一个值，该值指示当前权限是否为指定权限的一个子集。</summary>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; to combine with the current permission. It must be of the same type as the current &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt;.">与当前权限进行合并的 <see cref="T:System.Security.IPermission" />。 它必须与当前 <see cref="T:System.Security.IPermission" /> 属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not an &lt;see cref=&quot;T:System.Web.AspNetHostingPermission&quot; /&gt;.">
        <paramref name="target" /> 不是 <see cref="T:System.Web.AspNetHostingPermission" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; is a subset of the specified &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前 <see cref="T:System.Security.IPermission" /> 是指定 <see cref="T:System.Security.IPermission" /> 的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsUnrestricted">
      <summary vsli:raw="Returns a value indicating whether unrestricted access to the resource that is protected by the current permission is allowed.">返回一个值，该值指示是否允许对受当前权限保护的资源进行不受限制地访问。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if unrestricted use of the resource protected by the permission is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许不受限制的使用权限所保护的资源，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of the permission object and its current state.">创建权限对象及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.SecurityElement&quot; /&gt; containing the XML encoding of the permission object, including any state information.">包含权限对象的 XML 编码的 <see cref="T:System.Security.SecurityElement" />，包括所有状态信息。</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current permission and the specified permission.">创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <param name="target" vsli:raw="A permission to combine with the current permission. It must be of the same type as the current permission.">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not an &lt;see cref=&quot;T:System.Web.AspNetHostingPermission&quot; /&gt;.">
        <paramref name="target" /> 不是 <see cref="T:System.Web.AspNetHostingPermission" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; that represents the union of the current permission and the specified permission.">代表当前权限和指定权限并集的 <see cref="T:System.Security.IPermission" />。</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermission.Level">
      <summary vsli:raw="Gets or sets the current hosting permission level for an ASP.NET application.">获取或设置 ASP.NET 应用程序的当前宿主权限级别。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Web.AspNetHostingPermissionLevel&quot; /&gt; enumeration values.">
        <see cref="T:System.Web.AspNetHostingPermissionLevel" /> 枚举值之一。</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionAttribute">
      <summary vsli:raw="Allows security actions for &lt;see cref=&quot;T:System.Web.AspNetHostingPermission&quot; /&gt; to be applied to code using declarative security. This class cannot be inherited.">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Web.AspNetHostingPermission" /> 执行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Web.AspNetHostingPermissionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Web.AspNetHostingPermissionAttribute" /> 类的新实例。</summary>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Permissions.SecurityAction&quot; /&gt; enumeration values.">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 枚举值之一。</param>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.CreatePermission">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Web.AspNetHostingPermission&quot; /&gt; with the permission level previously set by the &lt;see cref=&quot;P:System.Web.AspNetHostingPermissionAttribute.Level&quot; /&gt; property.">使用先前由 <see cref="T:System.Web.AspNetHostingPermission" /> 属性设置的权限级别来创建新的 <see cref="P:System.Web.AspNetHostingPermissionAttribute.Level" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.IPermission&quot; /&gt; that is the new &lt;see cref=&quot;T:System.Web.AspNetHostingPermission&quot; /&gt;.">一个 <see cref="T:System.Security.IPermission" />，它是新的 <see cref="T:System.Web.AspNetHostingPermission" />。</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermissionAttribute.Level">
      <summary vsli:raw="Gets or sets the current hosting permission level.">获取或设置当前宿主权限级别。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Web.AspNetHostingPermissionLevel&quot; /&gt; enumeration values.">
        <see cref="T:System.Web.AspNetHostingPermissionLevel" /> 枚举值之一。</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionLevel">
      <summary vsli:raw="Specifies the trust level that is granted to an ASP.NET Web application.">指定授予 ASP.NET Web 应用程序的信任级别。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.High">
      <summary vsli:raw="Indicates that features protected with a demand for any level less than or equal to the &lt;see langword=&quot;High&quot; /&gt; trust level will succeed. This level is intended for highly trusted managed-code applications that need to use most of the managed permissions that support semi-trusted access. It does not grant some of the highest permissions (for example, the ability to call into native code), but it does provide a way to run trusted applications with least privilege or to provide some level of constraints for highly trusted applications. This level is granted by configuring at least the &lt;see cref=&quot;F:System.Web.AspNetHostingPermissionLevel.High&quot; /&gt; trust level in the trust section in a configuration file.">指示要求受到任何小于或等于 <see langword="High" /> 信任级别保护的功能将成功。 此级别适用于高度受信任、托管代码的应用程序，这些应用程序需要使用大多数支持不完全受信任的访问的托管权限。 它不会授予某些最高权限（例如，调用本机代码的能力），但它提供了一种使用最小特权运行受信任的应用程序的方法，或为高度受信任的应用程序提供某种程度上的约束。 通过在配置文件的 trust 节中至少配置 <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> 信任级别，以授予此级别。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Low">
      <summary vsli:raw="Indicates that features protected with a demand for any level less than or equal to the &lt;see cref=&quot;F:System.Web.AspNetHostingPermissionLevel.Low&quot; /&gt; level will succeed. This level is intended to allow read-only access to limited resources in a constrained environment. This level is granted by specifying the &lt;see cref=&quot;F:System.Web.AspNetHostingPermissionLevel.Low&quot; /&gt; trust level in the trust section in a configuration file.">指示要求受到任何小于或等于 <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> 级别保护的功能将成功。 此级别旨在允许对受约束的环境中有限资源的只读访问。 通过在配置文件的 trust 节中指定 <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> 信任级别，以授予此级别。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Medium">
      <summary vsli:raw="Indicates that features protected with a demand for any level less than or equal to the &lt;see cref=&quot;F:System.Web.AspNetHostingPermissionLevel.Medium&quot; /&gt; level will succeed. This level is granted by configuring at least the &lt;see cref=&quot;F:System.Web.AspNetHostingPermissionLevel.Medium&quot; /&gt; trust level in the trust section in a configuration file.">指示要求受到任何小于或等于 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 级别保护的功能将成功。 通过在配置文件的 trust 节中至少配置 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 信任级别，以授予此级别。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Minimal">
      <summary vsli:raw="Indicates that features protected with a demand for the &lt;see cref=&quot;F:System.Web.AspNetHostingPermissionLevel.Minimal&quot; /&gt; level will succeed. This level allows code to execute but not to interact with resources present on the system. This level is granted by configuring at least the &lt;see cref=&quot;F:System.Web.AspNetHostingPermissionLevel.Minimal&quot; /&gt; trust level using the trust section in a configuration file.">指示要求受到 <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> 级别保护的功能将成功。 此级别允许代码执行，但不能与系统上存在的资源进行交互。 通过使用配置文件中的 trust 节至少配置 <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> 信任级别，以授予此级别。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.None">
      <summary vsli:raw="Indicates that no permission is granted. All demands for &lt;see cref=&quot;T:System.Web.AspNetHostingPermission&quot; /&gt; will fail.">指示不授予任何权限。 对 <see cref="T:System.Web.AspNetHostingPermission" /> 的所有要求都将失败。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Unrestricted">
      <summary vsli:raw="Indicates that all demands for permission to use all features of an application will be granted. This is equivalent to granting &lt;see langword=&quot;Full&quot; /&gt; trust level in the trust section in a configuration file.">指示将授予使用应用程序的全部功能所要求的所有权限。 这相当于在配置文件的 trust 节中授予 <see langword="Full" /> 信任级别。</summary>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary vsli:raw="Declares permissions for loading types from assemblies that are used by a XAML reader or writer.">声明权限，这些权限用于加载 XAML 读取器或编写器所使用的程序集中的类型。</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; class, using an enumerable set of specific &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; values.">使用一组可枚举的特定 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 值初始化 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 类的新实例。</summary>
      <param name="allowedAccess" vsli:raw="An enumerable set of specific &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; values.">一组可枚举的特定 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;allowedAccess&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="allowedAccess" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;allowedAccess&quot; /&gt; contained invalid information, such as a null item.">
        <paramref name="allowedAccess" /> 包含无效信息，例如 null 项。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; class, using existing permissions.">使用现有权限初始化 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 类的新实例。</summary>
      <param name="state" vsli:raw="A &lt;see cref=&quot;T:System.Security.Permissions.PermissionState&quot; /&gt; enumeration value.">一个 <see cref="T:System.Security.Permissions.PermissionState" /> 枚举值。</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; class, using a single &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; value.">使用单一 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 值初始化 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 类的新实例。</summary>
      <param name="allowedAccess" vsli:raw="The defining &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; value.">定义的 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;allowedAccess&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="allowedAccess" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary vsli:raw="Creates and returns an identical copy of the current &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt;.">创建并返回当前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 的一个相同副本。</summary>
      <returns vsli:raw="A copy of the current &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt;.">当前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 的副本。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
      <param name="obj" vsli:raw="" />
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary vsli:raw="Reconstructs a security object with a specified state from an XML encoding.">通过 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="elem" vsli:raw="The XML encoding to use to reconstruct the security object.">用于重新构造安全对象的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;elem&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="elem" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;elem&quot; /&gt; does not contain the XML encoding for a &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The version attribute within &lt;paramref name=&quot;elem&quot; /&gt; is not supported.">
        <paramref name="elem" /> 不包含 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 的 XML 编码。  
  
- 或 - 
<paramref name="elem" /> 中的版本特性不受支持。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; includes a specified &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; in its &lt;see cref=&quot;P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess&quot; /&gt; list.">返回此 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 是否在其 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 列表中包含指定的 <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />。</summary>
      <param name="requestedAccess" vsli:raw="The specific &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; to check for.">要检查的特定 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;requestedAccess&quot; /&gt; is null.">
        <paramref name="requestedAccess" /> 为 null。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;requestedAccess&quot; /&gt; exists as an item in the &lt;see cref=&quot;P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess&quot; /&gt; list of the current &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="requestedAccess" /> 是当前 <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> 的 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 列表中的一项，则为 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; that is the intersection of the current &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; and the specified permission.">创建并返回一个 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />，这是当前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 与指定权限的交集。</summary>
      <param name="target" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; to intersect with the current &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt;. Can be &lt;see langword=&quot;null&quot; /&gt;.">要与当前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 相交的 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。 可以为 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; or is not a &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt;.">
        <paramref name="target" /> 不为 <see langword="null" /> 或不是 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。</exception>
      <returns vsli:raw="A new permission that represents the intersection of the current &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; and the specified &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt;. This new permission is &lt;see langword=&quot;null&quot; /&gt; if the intersection is empty.">一项新权限，表示当前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 与指定 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 的交集。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; is a subset of the specified permission.">确定当前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 是否为指定权限的子集。</summary>
      <param name="target" vsli:raw="A permission that is to be tested for the subset relationship. Can be &lt;see langword=&quot;null&quot; /&gt;.">将要测试子集关系的权限。 可以为 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; or is not a &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt;.">
        <paramref name="target" /> 不为 <see langword="null" /> 或不是 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; is a subset of the specified permission; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; denotes unrestricted permissions.">返回此 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 是否表示不受限制的权限。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; denotes unrestricted permissions. &lt;see langword=&quot;false&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; has specific access level restrictions in &lt;see cref=&quot;P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess&quot; /&gt;, or has no permissions.">如果此 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 表示不受限制的权限，则为 <see langword="true" />。 如果此 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 在 <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> 中具有特定访问级别限制，或者没有权限，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary vsli:raw="Creates an XML encoding of this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; and its current state.">创建此 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 及其当前状态的 XML 编码。</summary>
      <returns vsli:raw="An XML encoding of this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt;, including any state information.">此 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary vsli:raw="Creates a permission that is the union of the current &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; and the specified permission.">创建一个权限，该权限是当前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 与指定权限的并集。</summary>
      <param name="other" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; to combine with the current &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt;. Can be &lt;see langword=&quot;null&quot; /&gt;.">要与当前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 进行合并的 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。 可以为 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; or is not a &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt;.">
        <paramref name="other" /> 不为 <see langword="null" /> 或不是 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。</exception>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; that represents the union of the current &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; and the specified &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt;.">新的 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />，它表示当前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 和指定 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 的并集。</returns>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary vsli:raw="Gets the list of all &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; values that this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlLoadPermission&quot; /&gt; represents.">获取此 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 表示的所有 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 值的列表。</summary>
      <returns vsli:raw="A read-only list of &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; values, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 值的只读列表，或者为 <see langword="null" />。</returns>
    </member>
  </members>
</doc>