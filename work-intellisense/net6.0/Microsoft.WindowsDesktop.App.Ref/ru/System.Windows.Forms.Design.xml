<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Forms.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />.</summary>
      <param name="oldSurface">Область разработки, которая утрачивает активацию.</param>
      <param name="newSurface">Область разработки, которая получает активацию.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface">
      <summary>Возвращает область разработки, которая получает активацию.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.Design.DesignSurface" />, который получает активацию.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface">
      <summary>Возвращает область разработки, которая утрачивает активацию.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.Design.DesignSurface" />, который утрачивает активацию.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> объекта <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />. Этот класс не наследуется.</summary>
      <param name="sender">Источник события, <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</param>
      <param name="e">Объект класса <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary>Предоставляет пользовательский интерфейс для редактирования массивов во время разработки.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.ArrayEditor" />, используя указанный для массива тип данных.</summary>
      <param name="type">Тип данных для элементов массива.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary>Возвращает тип данных, для хранения которых разработана эта коллекция.</summary>
      <returns>
        <see cref="T:System.Type" />, указывающий данные какого типа можно хранить в этой коллекции.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary>Возвращает элементы массива.</summary>
      <param name="editValue">Массив, из которого извлекаются элементы.</param>
      <returns>Массив, состоящий из элементов, взятых из указанного массива. Если объект, заданный параметром <paramref name="editValue" />, не является массивом, возвращается новый пустой объект.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary>Задает элементы массива.</summary>
      <param name="editValue">Массив, в который передаются элементы.</param>
      <param name="value">Массив объектов, которые должны стать элементами массива.</param>
      <returns>Экземпляр нового массива. Если объект, определенный параметром <paramref name="editValue" />, не является массивом, возвращается объект, определенный параметром <paramref name="editValue" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.BinaryEditor">
      <summary>Предоставляет пользовательский интерфейс редактирования двоичных данных.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.BinaryEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение указанного объекта с использованием заданного поставщика служб и контекста.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <param name="provider">Объект поставщика услуг, с помощью которого можно получить услуги редактирования.</param>
      <param name="value">Объект, значение которого изменяется.</param>
      <returns>Новое значение объекта. Если значение объекта не изменилось, должен быть возвращен тот же переданный объект.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Получает стиль редактирования, используемый методом <see cref="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Значение перечисления <see langword="enum" />, соответствующее предоставленному стилю редактирования.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ByteViewer">
      <summary>Отображает массив байтов в шестнадцатеричном формате, форматах ANSI и Юникод.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.ByteViewer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetBytes">
      <summary>Возвращает байты из буфера.</summary>
      <returns>Ссылка на массив 1-байтовых целых чисел без знака.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode">
      <summary>Возвращает режим отображения для элемента управления.</summary>
      <returns>Режим отображения, используемый для этого элемента управления. Возвращаемое значение определяется в объекте <see cref="T:System.ComponentModel.Design.DisplayMode" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.KeyDown" />.</summary>
      <param name="e">Объект <see cref="T:System.Windows.Forms.KeyEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.Layout" />.</summary>
      <param name="e">Объект <see cref="T:System.Windows.Forms.LayoutEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.Paint" />.</summary>
      <param name="e">Объект <see cref="T:System.Windows.Forms.PaintEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)">
      <summary>Записывает необработанные данные из буфера данных в файл.</summary>
      <param name="path">Путь к файлу для сохранения данных.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой пустую строку (""), содержащую только пробел или хотя бы один недопустимый символ.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">Ошибка при записи в файл.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Запрошенный доступ не разрешен операционной системой для заданного <paramref name="path" />, например, когда доступ имеет параметр <see langword="Write" /> или <see langword="ReadWrite" />, а файл или каталог установлены на доступ только для чтения.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)">
      <summary>Обрабатывает событие <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> объекта <see cref="T:System.ComponentModel.Design.ByteViewer" /> элемента управления <see cref="T:System.Windows.Forms.ScrollBar" />.</summary>
      <param name="source">Источник события.</param>
      <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])">
      <summary>Задает массив байтов для отображения в средстве просмотра.</summary>
      <param name="bytes">Отображаемый массив байтов.</param>
      <exception cref="T:System.ArgumentNullException">Задан массив байтов <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
      <summary>Задает текущий режим отображения.</summary>
      <param name="mode">Задаваемый режим отображения.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Указанный режим отображения не задан в перечислении <see cref="T:System.ComponentModel.Design.DisplayMode" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)">
      <summary>Задает файл для отображения в средстве просмотра.</summary>
      <param name="path">Путь к загружаемому файлу.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой пустую строку (""), содержащую только пробел или хотя бы один недопустимый символ.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">Ошибка при загрузке файла.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Запрошенный доступ не разрешен операционной системой для заданного <paramref name="path" />, например, когда доступ имеет параметр <see langword="Write" /> или <see langword="ReadWrite" />, а файл или каталог установлены на доступ только для чтения.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)">
      <summary>Задает текущее положение строки для представления <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" />.</summary>
      <param name="line">Текущее положение строки, начиная с которого нужно отображать данные.</param>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary>Предоставляет пользовательский интерфейс, позволяющий редактировать коллекции большинства типов во время разработки.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.CollectionEditor" />, учитывая указанный тип коллекции.</summary>
      <param name="type">Тип коллекции, которую нужно изменить с помощью этого редактора.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary>Отменяет внесенные в коллекцию изменения.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary>Указывает, можно ли удалять исходные элементы коллекции.</summary>
      <param name="value">Удаляемое значение.</param>
      <returns>Если исходные значения можно удалять из коллекции, возвращается значение <see langword="true" />, в противном случае возвращается значение <see langword="false" />. Реализация по умолчанию всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary>Указывает, можно ли выбрать несколько элементов коллекции одновременно.</summary>
      <returns>Если одновременно можно выбрать несколько элементов коллекции, возвращается значение <see langword="true" />, в противном случает возвращается значение <see langword="false" />. По умолчанию этот метод возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary>Создает новую форму для отображения и редактирования текущей коллекции.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />, предоставляемый в качестве пользовательского интерфейса для редактирования коллекции.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary>Возвращает тип данных, содержащихся в этой коллекции.</summary>
      <returns>Тип элементов коллекции или объект <see cref="T:System.Object" />, если у коллекции не удается обнаружить свойство <see langword="Item" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary>Создает новый экземпляр заданного типа элемента коллекции.</summary>
      <param name="itemType">Тип создаваемого элемента.</param>
      <returns>Новый экземпляр заданного объекта.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary>Возвращает типы элементов, которые может содержать этот редактор коллекции.</summary>
      <returns>Массив типов данных, которые может содержать эта коллекция.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary>Уничтожает заданный экземпляр объекта.</summary>
      <param name="instance">Уничтожаемый объект.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение указанного объекта с использованием заданного поставщика служб и контекста.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <param name="provider">Объект поставщика служб, через который осуществляется редакционное обслуживание.</param>
      <param name="value">Объект, значение которого изменяется.</param>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">Попытка попытка извлечь возвращенный в программу управления исходным кодом файл не удалась.</exception>
      <returns>Новое значение объекта. Если значение объекта не изменилось, должен быть возвращен переданный объект.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary>Извлекает отображаемый текст для заданного элемента списка.</summary>
      <param name="value">Элемент списка, для которого требуется извлечь отображаемый текст.</param>
      <returns>Отображаемый текст для <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Возвращает стиль редактирования, используемый в методе <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Значение перечисления <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />, соответствующее предоставленному стилю редактирования. Если метод не поддерживается указанным содержимым, данный метод возвратит идентификатор <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary>Возвращает массив объектов, составляющих заданную коллекцию.</summary>
      <param name="editValue">Редактируемая коллекция.</param>
      <returns>Массив, содержащий коллекцию объектов, или пустой массив объектов, если заданная коллекция не наследуется от интерфейса <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary>Возвращает список, содержащий заданный объект.</summary>
      <param name="instance">Список <see cref="T:System.Collections.ArrayList" />, возвращаемый в качестве объекта.</param>
      <returns>Список <see cref="T:System.Collections.ArrayList" />, содержащий отдельные объекты, которые требуется создать.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary>Возвращает запрашиваемую службу, если она доступна.</summary>
      <param name="serviceType">Тип возвращаемой службы.</param>
      <returns>Экземпляр службы или значение <see langword="null" />, если службу не удается обнаружить.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary>Указанный массив задается в качестве набора элементов коллекции.</summary>
      <param name="editValue">Редактируемая коллекция.</param>
      <param name="value">Массив объектов, которые должны стать элементами коллекции.</param>
      <returns>Новый объект коллекции или, в противном случае, коллекция, определяемая параметром <paramref name="editValue" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary>Отображает для редактора коллекции заданный по умолчанию раздел справки.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary>Возвращает тип данных каждого элемента коллекции.</summary>
      <returns>Тип данных элементов коллекции.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary>Возвращает тип данных объекта коллекции.</summary>
      <returns>Тип данных объекта коллекции.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary>Возвращает дескриптор типа, соответствующий текущему контексту.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, соответствующий текущему используемому контексту, или <see langword="null" />, если контекст недоступен.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary>Возвращает ключевое слово справки и отображает соответствующий раздел справки или список разделов при нажатии клавиши F1 или кнопки Справка диалогового окна редактора.</summary>
      <returns>Ключевое слово справки, в соответствии с которым выводится раздел справки или список разделов при получении запроса из редактора на вывод справки.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary>Возвращает доступные типы элементов, которые можно создавать в этой коллекции.</summary>
      <returns>Типы элементов, которые можно создавать.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary>Предоставляет модальное диалоговое окно для редактирования содержимого коллекции с помощью <see cref="T:System.Drawing.Design.UITypeEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />.</summary>
      <param name="editor">Объект класса <see cref="T:System.ComponentModel.Design.CollectionEditor" />, который используется для редактирования коллекции.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary>Указывает, можно ли удалять исходные элементы коллекции.</summary>
      <param name="value">Удаляемое значение.</param>
      <returns>Если исходные значения можно удалять из коллекции, возвращается значение <see langword="true" />, в противном случае возвращается значение <see langword="false" />. По умолчанию этот метод возвращает значение, возвращенное методом <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> объекта <see cref="T:System.ComponentModel.Design.CollectionEditor" /> этой формы.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary>Указывает, можно ли выбрать несколько элементов коллекции одновременно.</summary>
      <returns>Если одновременно можно выбрать несколько элементов коллекции, возвращается значение <see langword="true" />, в противном случает возвращается значение <see langword="false" />. По умолчанию этот метод возвращает значение, возвращенное методом <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> объекта <see cref="T:System.ComponentModel.Design.CollectionEditor" /> этой формы.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary>Создает новый экземпляр заданного типа элемента коллекции.</summary>
      <param name="itemType">Тип создаваемого элемента.</param>
      <returns>Новый экземпляр заданного объекта или <see langword="null" />, если пользователь решает отменить создание экземпляра.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary>Уничтожает заданный экземпляр объекта.</summary>
      <param name="instance">Уничтожаемый объект.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary>Отображает для пользователя указанное исключение.</summary>
      <param name="e">Исключение для отображения.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary>Возвращает запрашиваемую службу, если она доступна.</summary>
      <param name="serviceType">Тип возвращаемой службы.</param>
      <returns>Экземпляр службы или значение <see langword="null" />, если службу не удается обнаружить.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary>Позволяет запускать обработку при изменении значения коллекции.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary>Отображает диалоговое окно для редактора коллекции, используя заданный объект <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" />.</summary>
      <param name="edSvc">Объект класса <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" />, который может быть использован для отображения диалогового окна.</param>
      <returns>Объект <see cref="T:System.Windows.Forms.DialogResult" /> — содержит код результата, возвращаемый диалоговым окном.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary>Возвращает тип данных каждого элемента коллекции.</summary>
      <returns>Тип данных элементов коллекции.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary>Возвращает тип данных объекта коллекции.</summary>
      <returns>Тип данных объекта коллекции.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary>Возвращает дескриптор типа, соответствующий текущему контексту.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, соответствующий текущему используемому контексту, или <see langword="null" />, если контекст недоступен.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary>Получает или задает редактируемый объект коллекции.</summary>
      <returns>Редактируемый объект коллекции.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary>Получает или задает массив элементов для отображения на данной форме.</summary>
      <returns>Массив объектов для отображения в форме.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary>Возвращает доступные типы элементов, которые можно создавать в этой коллекции.</summary>
      <returns>Типы элементов, которые можно создавать.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary>Расширяет поведение компонента в режиме разработки.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.ComponentDesigner" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary>Создает в файле с исходным кодом подпись метода для события по умолчанию для компонента и устанавливает курсор в позицию, где была создана эта подпись.</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">Попытка извлечь файл, возвращенный в программу управления исходным кодом, не удалась.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary>Пытается извлечь службу заданного типа с узла режима разработки компонента конструктора.</summary>
      <param name="serviceType">Тип запрашиваемой службы.</param>
      <returns>Объект, реализующий запрошенную службу, либо значение <see langword="null" />, если служба не может быть реализована.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Подготавливает конструктор к просмотру, редактированию или разработке заданного компонента.</summary>
      <param name="component">Компонент для данного конструктора.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>Выполняет повторную инициализацию существующего компонента.</summary>
      <param name="defaultValues">Словарь значений и имен по умолчанию для применения к свойствам. Может быть <see langword="null" />, если значения по умолчанию не указаны.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Инициализирует только что созданный компонент.</summary>
      <param name="defaultValues">Словарь значений и имен по умолчанию для применения к свойствам. Может быть <see langword="null" />, если значения по умолчанию не указаны.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary>Инициализирует параметры импортированного компонента, параметры которого уже были инициализированы с использованием параметров, отличных от заданных по умолчанию.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary>Возвращает атрибут <see cref="T:System.ComponentModel.InheritanceAttribute" /> заданного объекта <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
      <param name="toInvoke">Объект <see cref="T:System.ComponentModel.Design.ComponentDesigner" />, атрибут наследования которого должен быть извлечен.</param>
      <returns>Атрибут <see cref="T:System.ComponentModel.InheritanceAttribute" /> заданного конструктора.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary>Задает для компонента свойства по умолчанию.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>Позволяет конструктору изменять или удалять элементы из набора атрибутов, предоставленных через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes">Атрибуты класса компонента.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>Позволяет конструктору изменять или удалять элементы из набора событий, предоставленных через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events">События класса компонента.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>Позволяет конструктору изменять или удалять элементы из набора свойств, предоставленных с использованием класса <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">Свойства класса компонента.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>Позволяет конструктору добавлять элементы к набору атрибутов, предоставленному с использованием класса <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes">Атрибуты класса компонента.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>Позволяет конструктору добавлять элементы к набору событий, предоставленных с использованием класса <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events">События класса компонента.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Позволяет конструктору добавлять элементы к набору свойств, предоставленному с использованием класса <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">Свойства класса компонента.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>Уведомляет службу <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> о том, что данный компонент был изменен.</summary>
      <param name="member">Идентификатор <see cref="T:System.ComponentModel.MemberDescriptor" />, обозначающий измененный элемент.</param>
      <param name="oldValue">Прежнее значение элемента.</param>
      <param name="newValue">Новое значение элемента.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary>Уведомляет службу <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> о том, что компонент будет изменен.</summary>
      <param name="member">Идентификатор <see cref="T:System.ComponentModel.MemberDescriptor" />, который обозначает изменяемый элемент.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>Описание этого элемента содержится в методе <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes">Объекты <see cref="T:System.Attribute" /> класса компонента. Ключи в словаре атрибутов являются значениями <see cref="P:System.Attribute.TypeId" /> атрибутов.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>Описание этого элемента содержится в методе <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events">Объекты <see cref="T:System.ComponentModel.EventDescriptor" />, представляющие события класса компонента. Ключи в словаре событий являются именами событий.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>Описание этого элемента содержится в методе <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties">Объекты <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющие свойства класса компонента. Ключи в словаре свойств являются именами свойств.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>Описание этого элемента содержится в методе <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes">Объекты <see cref="T:System.Attribute" /> класса компонента. Ключи в словаре атрибутов являются значениями <see cref="P:System.Attribute.TypeId" /> атрибутов.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>Описание этого элемента содержится в методе <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events">Объекты <see cref="T:System.ComponentModel.EventDescriptor" />, представляющие события класса компонента. Ключи в словаре событий являются именами событий.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>Описание этого элемента содержится в методе <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties">Объекты <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющие свойства класса компонента. Ключи в словаре свойств являются именами свойств.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary>Возвращает списки действий времени разработки, поддерживаемые компонентом, сопоставленным конструктору.</summary>
      <returns>Списки действий времени разработки, поддерживаемые компонентом, сопоставленным конструктору.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary>Получает коллекцию компонентов, сопоставленных компоненту, который управляется конструктором.</summary>
      <returns>Компоненты, сопоставленные компоненту, который управляется конструктором.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary>Возвращает основной компонент, создаваемый данным конструктором.</summary>
      <returns>Компонент, управляемый конструктором.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary>Возвращает атрибут, обозначающий тип наследования связанного компонента.</summary>
      <returns>Атрибут <see cref="T:System.ComponentModel.InheritanceAttribute" /> связанного компонента.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary>Возвращает значение, определяющее, наследуется ли этот компонент или нет.</summary>
      <returns>Значение <see langword="true" />, если компонент наследуется; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary>Возвращает родительский компонент этого конструктора.</summary>
      <returns>Родительский компонент этого конструктора либо значение <see langword="null" />, если этот конструктор является корневым компонентом.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary>Возвращает коллекцию значений свойств, переопределяющих параметры пользователя.</summary>
      <returns>Коллекция <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />, содержащая теневые свойства документа проекта.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary>Описание этого элемента см. в свойстве <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" />, содержащая коллекцию конструкторов <see cref="T:System.ComponentModel.Design.IDesigner" />, включенных в текущий родительский конструктор.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary>Описание этого элемента см. в свойстве <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" />.</summary>
      <returns>Интерфейс <see cref="T:System.ComponentModel.Design.IDesigner" />, представляющий родительский интерфейс, либо интерфейс <see langword="null" />, если родительский объект отсутствует.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary>Возвращает команды в режиме конструктора, поддерживаемые компонентом, связанным с конструктором.</summary>
      <returns>Коллекция <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> объектов <see cref="T:System.ComponentModel.Design.DesignerVerb" /> или значение <see langword="null" />, если команды конструктора недоступны. Данная реализация по умолчанию всегда возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary>Представляет коллекцию теневых свойств, которые должны переопределять заданные по умолчанию или присвоенные значения определенных свойств. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary>Указывает, существует ли в коллекции свойство с таким именем.</summary>
      <param name="propertyName">Имя свойства, наличие которого в коллекции нужно проверить.</param>
      <returns>Значение <see langword="true" />, если свойство присутствует в коллекции; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary>Получает или задает объект по указанному индексу.</summary>
      <param name="propertyName">Имя свойства в коллекции, к которому требуется получить доступ.</param>
      <returns>Значение заданного свойства, если оно включено в коллекцию. В противном случае в качестве значения свойства извлекается текущее значение не затененного свойства.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DateTimeEditor">
      <summary>Этот редактор времени и даты является объектом <see cref="T:System.Drawing.Design.UITypeEditor" />, который обеспечивает визуальное редактирование объектов <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DateTimeEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение заданного объекта с использованием стиля редактирования, предоставленного GetEditorStyle. Поставщик служб обеспечивает получение любых требуемых служб редактирования.</summary>
      <param name="context">Контекст дескриптора типа, используемый для предоставления дополнительной контекстной информации.</param>
      <param name="provider">Объект поставщика услуг, с помощью которого можно получить услуги редактирования.</param>
      <param name="value">Экземпляр редактируемого значения.</param>
      <returns>Новое значение объекта. Если значение объекта не изменилось, должен быть возвращен тот же переданный объект.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Извлекает стиль редактирования метода <see cref="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue" />. Если этот метод не поддерживается, то возвращается значение None.</summary>
      <param name="context">Контекст дескриптора типа, используемый для предоставления дополнительной контекстной информации.</param>
      <returns>Значение перечисления <see langword="enum" />, соответствующее предоставленному стилю редактирования.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary>Представляет элемент статического заголовка в области смарт-тега. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> с использованием указанной строки имени.</summary>
      <param name="displayName">Текст, отображаемый в заголовке.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> с использованием указанных строк имени и категории.</summary>
      <param name="displayName">Текст, отображаемый в заголовке.</param>
      <param name="category">Чувствительная к регистру строка <see cref="T:System.String" />, которая определяет группировку записей области.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary>Предоставляет базовый класс для типов, которые представляют элемент области смарт-тега.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</summary>
      <param name="displayName">Текст области для данного элемента.</param>
      <param name="category">Чувствительная к регистру строка <see cref="T:System.String" />, которая определяет группировку записей области.</param>
      <param name="description">Дополнительный текст для этого элемента, который может использоваться в всплывающих подсказках или строке состояния.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary>Получает или задает значение, указывающее, разрешается ли поместить этот элемент в группу элементов с одинаковыми значениями свойств <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" />.</summary>
      <returns>Значение <see langword="true" />, если элемент можно включить в группу; в обратном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary>Возвращает имя группы для элемента.</summary>
      <returns>Строка, указывающая группу, элементом которой является элемент.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary>Возвращает дополняющий текст для элемента.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий текст описания для элемента.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary>Получает текст для данного элемента.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий отображаемый текст для данного элемента.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary>Возвращает ссылку на коллекцию, которая может использоваться для хранения определенных программистом пар ключ/значение.</summary>
      <returns>Коллекция, которая реализует <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary>Получает или задает значение, указывающее, отображается ли данный элемент в представлении исходного кода.</summary>
      <returns>Значение <see langword="true" />, если этот элемент отображается в представлении исходного кода; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Добавляет предоставленный объект <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> в текущую коллекцию.</summary>
      <param name="value">Добавляемый объект <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</param>
      <returns>Индекс <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />, по которому было добавлено значение.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Определяет, содержит ли интерфейс <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> определенный элемент.</summary>
      <param name="value">Объект <see cref="T:System.ComponentModel.Design.DesignerActionItem" />, который требуется найти в коллекции <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> содержит указанное значение. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary>Копирует элементы текущей коллекции в заданный массив, начиная с указанного индекса массива.</summary>
      <param name="array">Одномерный массив <see cref="T:System.ComponentModel.Design.DesignerActionItem" />, который является целевым массивом для элементов, копируемых из текущей коллекции. Индекс в массиве должен начинаться с нуля.</param>
      <param name="index">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Определяет индекс определенного элемента в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> для поиска в коллекции.</param>
      <returns>Индекс (с нуля) первого вхождения параметра <paramref name="value" />, если оно найдено в коллекции <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />; в противном случае -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary>Вставляет элемент в коллекцию <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="value" />.</param>
      <param name="value">Вставляемый объект <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Удаляет первое вхождение указанного объекта из коллекции <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
      <param name="value">Элемент <see cref="T:System.ComponentModel.Design.DesignerActionItem" />, который требуется удалить из <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary>Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index">Индекс элемента, отсчитываемый от нуля.</param>
      <returns>Объект <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> по указанному индексу.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary>Предоставляет базовый класс для типов, которые представляют список элементов, используемых для создания области смарт-тега.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <param name="component">Компонент, связанный с типом <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary>Возвращает объект, который указывает службу, предоставленную компонентом, сопоставленным <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <param name="serviceType">Служба, предоставляемая компонентом <see cref="T:System.ComponentModel.Component" />.</param>
      <returns>Объект <see cref="T:System.Object" />, представляющий службу, которую обеспечивает <see cref="T:System.ComponentModel.Component" />. Это значение может быть <see langword="null" />, если класс <see cref="T:System.ComponentModel.Component" /> не предоставляет указанную службу.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ComponentModel.Design.DesignerActionItem" />, содержащихся в списке.</summary>
      <returns>Массив типа <see cref="T:System.ComponentModel.Design.DesignerActionItem" />, который содержит элементы списка.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary>Получает или задает значение, указывающее, должна ли область смарт-тега отображаться автоматически при ее создании.</summary>
      <returns>Значение <see langword="true" /> указывает, что область должна отображаться при создании компонента-владельца; в обратном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary>Возвращает компонент, связанный с типом <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns>Компонент, связанный с типом <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> со значениями по умолчанию.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> с указанными элементами области.</summary>
      <param name="value">Массив объектов <see cref="T:System.ComponentModel.Design.DesignerActionList" /> для заполнения коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary>Добавляет предоставленный объект <see cref="T:System.ComponentModel.Design.DesignerActionList" /> в текущую коллекцию.</summary>
      <param name="value">Добавляемый объект <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
      <returns>Позиция во внутреннем списке коллекции, в которую вставляется новый элемент.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary>Добавляет элементы предоставленного массива <see cref="T:System.ComponentModel.Design.DesignerActionList" /> в конец текущей коллекции.</summary>
      <param name="value">Массив добавляемых объектов <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Добавляет элементы предоставленной коллекции <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> в конец текущей коллекции.</summary>
      <param name="value">Добавляемый объект <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary>Указывает, содержит ли коллекция указанное значение.</summary>
      <param name="value">Объект <see cref="T:System.ComponentModel.Design.DesignerActionList" />, который требуется найти.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит указанное значение, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary>Копирует элементы текущей коллекции в заданный массив, начиная с указанного индекса массива.</summary>
      <param name="array">Одномерный массив типа <see cref="T:System.ComponentModel.Design.DesignerActionList" />, который является объектом назначения для элементов, копируемых из текущей коллекции. Индекс в массиве должен начинаться с нуля.</param>
      <param name="index">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра<paramref name="index" /> меньше 0.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным.  
  
-или- 
Количество элементов в текущей коллекции превышает свободное пространство от индекса <paramref name="index" /> до конца массива назначения.</exception>
      <exception cref="T:System.InvalidCastException">Возникла неполадка при приведении типа элементов текущей коллекции к типу массива назначения, возможно, в результате сбоя при приведении производного типа к базовому.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary>Определяет индекс определенного элемента в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.ComponentModel.Design.DesignerActionList" /> для поиска в коллекции.</param>
      <returns>Индекс <paramref name="value" />, если он существует во внутреннем списке; в противном случае — значение -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary>Вставляет предоставленный объект <see cref="T:System.ComponentModel.Design.DesignerActionList" /> в заданную позицию в коллекции.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="value" />.</param>
      <param name="value">Объект <see cref="T:System.ComponentModel.Design.DesignerActionList" /> для вставки в коллекцию.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="index" /> меньше 0 либо больше или равно числу элементов в текущей коллекции.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary>Выполняет дополнительные пользовательские операции при проверке значения.</summary>
      <param name="value">Объект для проверки.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>Удаляет первое вхождение конкретного объекта <see cref="T:System.ComponentModel.Design.DesignerActionList" /> из коллекции.</summary>
      <param name="value">Объект <see cref="T:System.ComponentModel.Design.DesignerActionList" />, удаляемый из текущей коллекции.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary>Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index">Индекс элемента, отсчитываемый от нуля.</param>
      <returns>Объект <see cref="T:System.ComponentModel.Design.DesignerActionList" /> по указанному индексу.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />.</summary>
      <param name="relatedObject">Объект, сопоставленный коллекции.</param>
      <param name="changeType">Значение, которое указывает, был ли список <see cref="T:System.ComponentModel.Design.DesignerActionList" /> добавлен в коллекцию или удален из нее.</param>
      <param name="actionLists">Коллекция элементов списка после применения этого действия.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary>Возвращает коллекцию объектов <see cref="T:System.ComponentModel.Design.DesignerActionList" />, сопоставленных этому событию.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />, который отражает текущее состояние коллекции.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary>Возвращает флаг, который указывает, был ли добавлен элемент в коллекцию объектов <see cref="T:System.ComponentModel.Design.DesignerActionList" /> или удален из нее.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" />, указывающий тип изменения.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary>Возвращает объект, сопоставленный коллекции объектов <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns>Объект <see cref="T:System.Object" />, сопоставленный управляемой коллекции <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> объекта <see cref="T:System.ComponentModel.Design.DesignerActionService" />. Этот класс не наследуется.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary>Указывает тип изменений, возникающих в коллекции объектов <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary>В коллекцию добавлен один или несколько объектов <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary>Из коллекции удален один или несколько объектов <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary>Представляет элемент области смарт-тега, сопоставленный методу в классе, производном от класса <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> с заданным именем метода и отображаемым именем.</summary>
      <param name="actionList">Объект <see cref="T:System.ComponentModel.Design.DesignerActionList" />, содержащий метод, которому сопоставлен этот элемент.</param>
      <param name="memberName">Чувствительное к регистру имя метода в классе, производном от класса <see cref="T:System.ComponentModel.Design.DesignerActionList" />, который должен вызываться при помощи элемента области.</param>
      <param name="displayName">Текст области для данного элемента.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> с указанным именем метода и отображаемым именем, а также флагом, который указывает, должен ли отображаться элемент в других контекстах пользовательского интерфейса.</summary>
      <param name="actionList">Объект <see cref="T:System.ComponentModel.Design.DesignerActionList" />, содержащий метод, которому сопоставлен этот элемент.</param>
      <param name="memberName">Чувствительное к регистру имя метода в классе, производном от класса <see cref="T:System.ComponentModel.Design.DesignerActionList" />, который должен вызываться при помощи элемента области.</param>
      <param name="displayName">Текст области для данного элемента.</param>
      <param name="includeAsDesignerVerb">Флаг, который указывает, должен ли сопоставленный метод также рассматриваться как команда конструктора.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> с заданными именами метода и категории, а также отображаемым именем.</summary>
      <param name="actionList">Объект <see cref="T:System.ComponentModel.Design.DesignerActionList" />, содержащий метод, которому сопоставлен этот элемент.</param>
      <param name="memberName">Чувствительное к регистру имя метода в классе, производном от класса <see cref="T:System.ComponentModel.Design.DesignerActionList" />, который должен вызываться при помощи элемента области.</param>
      <param name="displayName">Текст области для данного элемента.</param>
      <param name="category">Чувствительная к регистру <see cref="T:System.String" />, которая используется для группировки схожих элементов в области.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> с указанными именами метода и категории, отображаемым именем, а также флагом, который указывает, должен ли отображаться этот элемент в других контекстах пользовательского интерфейса.</summary>
      <param name="actionList">Объект <see cref="T:System.ComponentModel.Design.DesignerActionList" />, содержащий метод, которому сопоставлен этот элемент.</param>
      <param name="memberName">Чувствительное к регистру имя метода в классе, производном от класса <see cref="T:System.ComponentModel.Design.DesignerActionList" />, который должен вызываться при помощи элемента области.</param>
      <param name="displayName">Текст области для данного элемента.</param>
      <param name="category">Чувствительная к регистру <see cref="T:System.String" />, которая используется для группировки схожих элементов в области.</param>
      <param name="includeAsDesignerVerb">Флаг, который указывает, должен ли сопоставленный метод также рассматриваться как команда конструктора для сопоставленного компонента.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> с заданными именами метода и категории, а также отображаемым текстом и описанием.</summary>
      <param name="actionList">Объект <see cref="T:System.ComponentModel.Design.DesignerActionList" />, содержащий метод, которому сопоставлен этот элемент.</param>
      <param name="memberName">Чувствительное к регистру имя метода в классе, производном от класса <see cref="T:System.ComponentModel.Design.DesignerActionList" />, который должен вызываться при помощи элемента области.</param>
      <param name="displayName">Текст области для данного элемента.</param>
      <param name="category">Чувствительная к регистру <see cref="T:System.String" />, которая используется для группировки схожих элементов в области.</param>
      <param name="description">Дополнительный текст для этого элемента, который используется в всплывающих подсказках или строке состояния.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> с указанными именами метода и категории, отображаемым текстом и описанием, а также флагом, который указывает, должен ли отображаться этот элемент в других контекстах пользовательского интерфейса.</summary>
      <param name="actionList">Объект <see cref="T:System.ComponentModel.Design.DesignerActionList" />, содержащий метод, которому сопоставлен этот элемент.</param>
      <param name="memberName">Чувствительное к регистру имя метода в классе, производном от класса <see cref="T:System.ComponentModel.Design.DesignerActionList" />, который должен вызываться при помощи элемента области.</param>
      <param name="displayName">Текст области для данного элемента.</param>
      <param name="category">Чувствительная к регистру <see cref="T:System.String" />, которая используется для группировки схожих элементов в области.</param>
      <param name="description">Дополнительный текст для этого элемента, который используется в всплывающих подсказках или строке состояния.</param>
      <param name="includeAsDesignerVerb">Флаг, который указывает, должен ли сопоставленный метод также рассматриваться как команда конструктора для сопоставленного компонента.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary>Программным способом выполняет метод, сопоставленный элементу <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />.</summary>
      <exception cref="T:System.InvalidOperationException">Не удается найти метод, именованный в свойстве <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary>Возвращает значение, указывающее, что элемент <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> должен отображаться в других контекстах пользовательского интерфейса.</summary>
      <returns>Значение <see langword="true" />, если данный элемент должен использоваться в контекстных меню; в обратном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary>Возвращает имя метода, которому сопоставлен этот объект <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий имя сопоставленного метода.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary>Получает или задает компонент, объекты <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> которого помещаются в текущую область.</summary>
      <returns>Компонент, содержащий подставляемые в область элементы, который должен иметь сопоставленный конструктор, предоставляющий элементы.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary>Представляет элемент области, сопоставленный со свойством в классе, производном от класса <see cref="T:System.ComponentModel.Design.DesignerActionList" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> с заданным именем свойства и отображаемым именем.</summary>
      <param name="memberName">Чувствительное к регистру имя свойства, сопоставленного данному элементу области.</param>
      <param name="displayName">Текст области для данного элемента.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> с заданными именами свойства и категории, а также отображаемым текстом.</summary>
      <param name="memberName">Чувствительное к регистру имя свойства, сопоставленного данному элементу области.</param>
      <param name="displayName">Текст области для данного элемента.</param>
      <param name="category">Чувствительная к регистру <see cref="T:System.String" />, которая используется для группировки схожих элементов в области.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> с заданными именами свойства и категории, а также отображаемым текстом и описанием.</summary>
      <param name="memberName">Чувствительное к регистру имя свойства, сопоставленного данному элементу области.</param>
      <param name="displayName">Текст области для данного элемента.</param>
      <param name="category">Чувствительная к регистру <see cref="T:System.String" />, которая используется для группировки схожих элементов в области.</param>
      <param name="description">Дополнительный текст для этого элемента, который используется в всплывающих подсказках или строке состояния.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary>Возвращает имя свойства, которому сопоставлен данный элемент.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий имя сопоставленного свойства.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary>Получает или задает компонент, элементы которого помещаются в текущую область.</summary>
      <returns>Компонент, содержащий подставляемые в область элементы, который должен иметь сопоставленный конструктор, предоставляющий объекты <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary>Устанавливает службу времени разработки, которая управляет коллекцией объектов <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> для компонентов.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary>Происходит при удалении списка <see cref="T:System.ComponentModel.Design.DesignerActionList" /> или его добавлении для любого компонента.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
      <param name="serviceProvider">Поставщик службы для текущей среды времени разработки.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>Добавляет список <see cref="T:System.ComponentModel.Design.DesignerActionList" /> в текущую коллекцию управляемых смарт-тегов.</summary>
      <param name="comp">Интерфейс <see cref="T:System.ComponentModel.IComponent" />, которому будут сопоставлены смарт-теги.</param>
      <param name="actionList">Список <see cref="T:System.ComponentModel.Design.DesignerActionList" />, содержащий новые элементы смарт-тега, которые должны быть добавлены.</param>
      <exception cref="T:System.ArgumentNullException">По меньшей мере один параметр имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Добавляет список <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> в текущую коллекцию управляемых смарт-тегов.</summary>
      <param name="comp">Интерфейс <see cref="T:System.ComponentModel.IComponent" />, которому будут сопоставлены смарт-теги.</param>
      <param name="designerActionListCollection">Список <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />, содержащий новые элементы смарт-тега, которые должны быть добавлены.</param>
      <exception cref="T:System.ArgumentNullException">По меньшей мере один параметр имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary>Освобождает все компоненты от управления и очищает все списки смарт-тегов модели внедрения.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary>Определяет, управляет ли текущая служба смарт-тегов списками действий для указанного компонента.</summary>
      <param name="comp">Объект <see cref="T:System.ComponentModel.IComponent" />, который требуется найти.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> имеет значение <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если компонент управляется текущей службой; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary>Освобождает все ресурсы, используемые классом <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.DesignerActionService" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary>Возвращает коллекцию списков элементов смарт-тегов, сопоставленных компоненту.</summary>
      <param name="component">Компонент, которому сопоставлены смарт-теги.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> имеет значение <see langword="null" />.</exception>
      <returns>Коллекция смарт-тегов для заданного компонента.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.Windows.Forms.Design.ComponentActionsType)">
      <summary>Возвращает коллекцию списков элементов действия конструктора указанного типа, связанного с компонентом.</summary>
      <param name="component">Компонент, с которым связаны Десигнерактионс.</param>
      <param name="type">Объект <see cref="T:System.ComponentModel.Design.ComponentActionsType" /> для фильтрации связанных действий конструктора с помощью.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> имеет значение <see langword="null" />.</exception>
      <returns>Коллекция действий конструктора указанного типа для указанного компонента.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Извлекает смарт-теги модели извлечения, сопоставленные компоненту.</summary>
      <param name="component">Компонент, которому сопоставлены смарт-теги.</param>
      <param name="actionLists">Коллекция, в которую будут добавлены сопоставленные смарт-теги.</param>
      <exception cref="T:System.ArgumentNullException">По меньшей мере один параметр имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Извлекает смарт-теги модели внедрения, сопоставленные компоненту.</summary>
      <param name="component">Компонент, которому сопоставлены смарт-теги.</param>
      <param name="actionLists">Коллекция, в которую будут добавлены сопоставленные смарт-теги.</param>
      <exception cref="T:System.ArgumentNullException">По меньшей мере один параметр имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>Удаляет заданный список смарт-тегов из всех компонентов, управляемых текущей службой.</summary>
      <param name="actionList">Список смарт-тегов, который следует удалить.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actionList" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary>Удаляет все списки смарт-тегов, сопоставленных заданному компоненту.</summary>
      <param name="comp">Компонент, для которого будет отменено сопоставление смарт-тегов.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>Удаляет заданный смарт-тег из указанного компонента.</summary>
      <param name="comp">Компонент, для которого будет отменено сопоставление смарт-тегов.</param>
      <param name="actionList">Удаляемый список смарт-тегов.</param>
      <exception cref="T:System.ArgumentNullException">По меньшей мере один параметр имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary>Представляет объект статического текста в области смарт-тега.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" />.</summary>
      <param name="displayName">Текст области для данного элемента.</param>
      <param name="category">Категория, используемая для группировки в области схожих элементов.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary>Управляет пользовательским интерфейсом для области смарт-тега. Этот класс не наследуется.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary>Возникает в том случае, если направляется запрос показать или скрыть область смарт-тега.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary>Освобождает все ресурсы, используемые классом <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary>Скрывает область смарт-тега для компонента.</summary>
      <param name="component">Компонент, область смарт-тега которого должна быть скрыта.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary>Обновляет область смарт-тега.</summary>
      <param name="component">Обновляемый объект <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary>Указывает, должна ли автоматически отображаться область смарт-тега.</summary>
      <param name="component">Интерфейс <see cref="T:System.ComponentModel.IComponent" /> для автоматического отображения.</param>
      <returns>Значение <see langword="true" /> указывает, что область смарт-тега должна отображаться автоматически; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary>Отображает область смарт-тега для компонента.</summary>
      <param name="component">Компонент, область смарт-тега которого должна быть отображена.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" />.</summary>
      <param name="relatedObject">Объект, сопоставленный этой области.</param>
      <param name="changeType">Значение, которое указывает, отображается ли область или она скрыта.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary>Получает флаг, который указывает, отображается ли область смарт-тега или она скрыта.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" />, который указывает состояние области.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary>Возвращает объект, сопоставленный данной области смарт-тега.</summary>
      <returns>Объект <see cref="T:System.Object" />, сопоставленный области смарт-тега.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> объекта <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
      <param name="sender">Объект <see cref="T:System.Object" />, вызвавший появление события.</param>
      <param name="e">Сведения о конкретном событии.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary>Определяет состояние отображения для области смарт-тега.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary>Область смарт-тега скрыта.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary>Область смарт-тега обновляется.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary>Область смарт-тега отображается.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary>Представляет базовый класс для средств времени разработки, не наследующих классу <see cref="T:System.ComponentModel.Design.ComponentDesigner" />, которые обеспечивают возможности работы со смарт-тегами или командами конструктора.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerCommandSet" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary>Возвращает коллекцию объектов команды.</summary>
      <param name="name">Тип возвращаемой коллекции, который указывает коллекцию <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> или <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />.</param>
      <returns>Коллекция, которая содержит объекты команды указанного типа — <see cref="T:System.ComponentModel.Design.DesignerActionList" /> или <see cref="T:System.ComponentModel.Design.DesignerVerb" />. Базовая реализация всегда возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary>Возвращает коллекцию всех смарт-тегов, сопоставленных разрабатываемому компоненту.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />, содержащий смарт-теги для сопоставленного компонента, который находится в разработке.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary>Возвращает коллекцию всех команд конструктора, сопоставленных разрабатываемому компоненту.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />, содержащий команды конструктора для сопоставленного компонента, который находится в разработке.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary>Представляет пользовательский интерфейс для разработки компонентов.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary>Происходит при удалении области разработки.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary>Происходит при вызове метода <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> объекта <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary>Происходит по завершении загрузки конструктора.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary>Происходит непосредственно перед загрузкой конструктора.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary>Происходит после выгрузки конструктора.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary>Происходит непосредственно перед выгрузки конструктора.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary>Происходит при вызове метода <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> для объекта <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />, связанный с <see cref="T:System.ComponentModel.Design.DesignSurface" />, удален.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="parentProvider">Поставщик родительской службы либо значение <see langword="null" />, если для разрешения служб не используются родительские объекты.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />, связанный с <see cref="T:System.ComponentModel.Design.DesignSurface" />, удален.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="parentProvider">Поставщик родительской службы либо значение <see langword="null" />, если для разрешения служб не используются родительские объекты.</param>
      <param name="rootComponentType">Тип создаваемого корневого компонента.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />, связанный с <see cref="T:System.ComponentModel.Design.DesignSurface" />, удален.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="rootComponentType">Тип создаваемого корневого компонента.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />, связанный с <see cref="T:System.ComponentModel.Design.DesignSurface" />, удален.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary>Начинает процесс загрузки с заданным загрузчиком конструктора.</summary>
      <param name="loader">Загрузчик конструктора, используемый для загрузки конструктора.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loader" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />, связанный с <see cref="T:System.ComponentModel.Design.DesignSurface" />, удален.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary>Запускает процесс загрузки.</summary>
      <param name="rootComponentType">Тип компонента, создаваемого в режиме разработки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponentType" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />, связанный с <see cref="T:System.ComponentModel.Design.DesignSurface" />, удален.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary>Создает экземпляр компонента.</summary>
      <param name="componentType">Тип создаваемого компонента.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentType" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />, связанный с <see cref="T:System.ComponentModel.Design.DesignSurface" />, удален.</exception>
      <returns>Вновь созданный компонент.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary>Создает конструктор при добавлении компонента в контейнер.</summary>
      <param name="component">Компонент, для которого должен быть создан конструктор.</param>
      <param name="rootDesigner">Значение <see langword="true" /> для создания корневого конструктора; значение <see langword="false" /> для создания обычного конструктора.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />, связанный с <see cref="T:System.ComponentModel.Design.DesignSurface" />, удален.</exception>
      <returns>Экземпляр запрошенного конструктора либо значение <see langword="null" />, если не удалось найти соответствующий конструктор.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary>Создает экземпляр заданного типа.</summary>
      <param name="type">Создаваемый тип данных.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />, связанный с <see cref="T:System.ComponentModel.Design.DesignSurface" />, удален.</exception>
      <returns>Только что созданный объект.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary>Создает контейнер, пригодный для вложения элементов управления или компонентов.</summary>
      <param name="owningComponent">Компонент, который управляет вложенным контейнером.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />, связанный с <see cref="T:System.ComponentModel.Design.DesignSurface" />, удален.</exception>
      <returns>Вложенный контейнер.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary>Создает контейнер, пригодный для вложения элементов управления или компонентов.</summary>
      <param name="owningComponent">Компонент, который управляет вложенным контейнером.</param>
      <param name="containerName">Дополнительное имя для вложенного контейнера.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />, связанный с <see cref="T:System.ComponentModel.Design.DesignSurface" />, удален.</exception>
      <returns>Вложенный контейнер.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary>Выполняет сериализацию изменений, внесенных в область разработки.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary>Получает службу из контейнера служб.</summary>
      <param name="serviceType">Тип возвращаемой службы.</param>
      <returns>Объект, который реализует тип <paramref name="serviceType" />, является его производным классом или представляет собой значение <see langword="null" />, если служба отсутствует в контейнере служб.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" />.</summary>
      <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" />.</summary>
      <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" />.</summary>
      <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />.</summary>
      <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary>Получает реализацию интерфейса <see cref="T:System.ComponentModel.IContainer" /> в области разработки.</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />, связанный с <see cref="T:System.ComponentModel.Design.DesignSurface" />, удален.</exception>
      <returns>Реализация интерфейса <see cref="T:System.ComponentModel.IContainer" /> в области разработки.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary>Получает значение, указывающее, загружается ли список ошибок времени разработки.</summary>
      <returns>
        <see langword="true" /> значение, если Список ошибок времени разработки загружается; в противном случае — <see langword="false" /> .</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary>Получает значение, указывающее, загружена ли область разработки в текущий момент.</summary>
      <returns>Значение <see langword="true" />, если область разработки загружена в настоящий момент; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary>Возвращает коллекцию ошибок загрузки или пустую коллекцию.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" /> ошибок загрузки.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary>Получает контейнер службы.</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />, связанный с <see cref="T:System.ComponentModel.Design.DesignSurface" />, удален.</exception>
      <returns>Контейнер службы, который предоставляет все службы конструкторам, содержащимся в области разработки.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary>Получает представление для корневого конструктора.</summary>
      <exception cref="T:System.InvalidOperationException">Область разработки не загружается, загрузчик конструктора еще не создал базовый конструктор, либо загрузка области разработки завершилась сбоем. Дополнительные сведения см. в описании свойства <see cref="P:System.Exception.InnerException" />.</exception>
      <exception cref="T:System.NotSupportedException">Конструктор загружен, но не предлагает представления для этой плоскости конструирования.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />, связанный с <see cref="T:System.ComponentModel.Design.DesignSurface" />, удален.</exception>
      <returns>Представление для корневого конструктора.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceCollection">
      <summary>Содержит коллекцию рабочих областей конструирования. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)">
      <summary>Копирует элементы коллекции в заданный массив объектов <see cref="T:System.ComponentModel.Design.DesignSurface" />, начиная с заданного индекса назначения.</summary>
      <param name="array">Массив, в который выполняется копирование элементов коллекции.</param>
      <param name="index">Индекс в массиве назначения, начиная с которого нужно вставлять копируемые элементы коллекции.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator">
      <summary>Возвращает перечислитель, с помощью которого можно выполнять итерацию элементов экземпляра <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.IEnumerator" /> для экземпляра класса <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Описание этого элемента содержится в методе <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, который является целевым для значений, копируемых из <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</param>
      <param name="index">Индекс в <paramref name="array" />, с которого начинается копирование.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Описание этого элемента содержится в методе <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.IEnumerator" /> для экземпляра класса <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Count">
      <summary>Возвращает общее количество областей разработки в коллекции <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</summary>
      <returns>Общее количество элементов в коллекции <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)">
      <summary>Возвращает область разработки с заданным индексом.</summary>
      <param name="index">Индекс возвращаемой области разработки.</param>
      <exception cref="T:System.NotSupportedException">Область разработки, заданная по <paramref name="index" />, не поддерживается.</exception>
      <returns>Область разработки с заданным индексом.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count">
      <summary>Описание этого элемента см. в свойстве <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>Число элементов, содержащихся в интерфейсе <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Описание этого элемента см. в свойстве <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="true" />, если доступ к классу <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot">
      <summary>Описание этого элемента см. в свойстве <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Объект, который может быть использован для синхронизации доступа к коллекции <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />.</summary>
      <param name="surface">Создаваемая область разработки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="surface" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface">
      <summary>Возвращает создаваемую область разработки.</summary>
      <returns>Создаваемый объект <see cref="T:System.ComponentModel.Design.DesignSurface" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />. Этот класс не наследуется.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceManager">
      <summary>Управляет коллекцией объектов <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
      <summary>Происходит при изменении активного в текущий момент конструктора.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
      <summary>Происходит при создании конструктора.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
      <summary>Происходит при завершении конструктора.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
      <summary>Возникает при изменении глобального выделения.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
      <param name="parentProvider">Родительский поставщик службы. Запросы на обслуживание направляются этому поставщику в том случае, если они не могут быть разрешены диспетчером области разработки.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <summary>Создает экземпляр области разработки.</summary>
      <returns>Новый экземпляр области разработки.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
      <summary>Создает экземпляр области разработки.</summary>
      <param name="parentProvider">Родительский поставщик службы. Будет создан путем слияния новый поставщик службы, который сначала запросит службу у данного поставщика, а затем делегирует сбои в объект диспетчера областей разработки. Объединенный поставщик будет передан в метод <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentProvider" /> имеет значение <see langword="null" />.</exception>
      <returns>Новый экземпляр области разработки.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
      <summary>Реализация, которая создает область разработки.</summary>
      <param name="parentProvider">Поставщик службы, который должен быть передан в область разработки. Этот объект является экземпляром класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> или объектом, который реализует класс <see cref="T:System.IServiceProvider" /> и отражает слияние поставщика службы класса <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> и переданного извне поставщика.</param>
      <returns>Новый экземпляр области разработки.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
      <summary>Возвращает службу, находящуюся в контейнере служб диспетчера области конструктора.</summary>
      <param name="serviceType">Тип службы для извлечения.</param>
      <returns>Объект, который реализует заданный тип службы или является его производным классом; в обратном случае значение <see langword="null" />, если служба отсутствует в контейнере служб.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
      <summary>Получает или задает активный конструктор.</summary>
      <returns>Активный конструктор.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
      <summary>Возвращает коллекцию областей разработки.</summary>
      <returns>Коллекция областей разработки, которые в текущий момент содержатся в диспетчере областей разработки.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
      <summary>Возвращает свойство <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> диспетчера областей разработки.</summary>
      <returns>Свойство <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> диспетчера областей разработки.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DisplayMode">
      <summary>Определяет идентификаторы, соответствующие режимам отображения, используемым <see cref="T:System.ComponentModel.Design.ByteViewer" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Ansi">
      <summary>Формат отображения ANSI.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Auto">
      <summary>Режим, при котором режим отображения выбирается автоматически. В данном режиме проводится проверка байтов, чтобы определить, содержат ли они шестнадцатеричные числа или отображаемые знаки. Если содержимым байтов являются числа в шестнадцатеричном формате, выбирается режим отображения <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" />. Если содержимое байтов соответствует используемому для вывода данных набору знаков, запускается специальная проверка, определяющая, следует ли использовать режим отображения <see cref="F:System.ComponentModel.Design.DisplayMode.Ansi" /> или <see cref="F:System.ComponentModel.Design.DisplayMode.Unicode" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Hexdump">
      <summary>Формат отображения шестнадцатеричных чисел.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Unicode">
      <summary>Формат отображения Юникод.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.EventBindingService">
      <summary>Предоставляет простую реализацию интерфейса <see cref="T:System.ComponentModel.Design.IEventBindingService" /> .</summary>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.EventBindingService" />.</summary>
      <param name="provider">Поставщик службы, из которого класс <see cref="T:System.ComponentModel.Design.EventBindingService" /> будет направлять запрос службам.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Создает уникальное имя метода.</summary>
      <param name="component">Компонент, для которого будет создано имя метода.</param>
      <param name="e">Событие, для которого должно быть создано имя.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="component" /> или <paramref name="e" /> имеет значение <see langword="null" />.</exception>
      <returns>Уникальное имя метода.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Предоставляет уведомление о том, что в обработчике событий больше не используется конкретный метод.</summary>
      <param name="component">Компонент, к которому привязан метод.</param>
      <param name="e">Дескриптор <see cref="T:System.ComponentModel.EventDescriptor" /> для обработчика событий.</param>
      <param name="methodName">Имя высвобождаемого метода.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>Возвращает коллекцию имен совместимых методов.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.EventDescriptor" />, содержащий совместимый делегат.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> имеет значение <see langword="null" />.</exception>
      <returns>Коллекция строк, представляющих собой имена совместимых методов.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)">
      <summary>Возвращает запрошенную службу из поставщика служб.</summary>
      <param name="serviceType">Тип возвращаемой службы.</param>
      <returns>Ссылка на службу, заданную параметром <paramref name="serviceType" />, либо значение <see langword="null" />, если запрошенная служба недоступна.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode">
      <summary>Отображает пользовательский код.</summary>
      <returns>Значение <see langword="true" />, если код может быть отображен; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Отображает пользовательский код для заданного метода.</summary>
      <param name="component">Компонент, к которому привязан метод.</param>
      <param name="e">Дескриптор <see cref="T:System.ComponentModel.EventDescriptor" /> для обработчика событий.</param>
      <param name="methodName">Имя метода, для которого должен быть отображен код.</param>
      <returns>Значение <see langword="true" />, если код может быть отображен; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)">
      <summary>Отображает пользовательский код в строке с заданным номером.</summary>
      <param name="lineNumber">Отображаемый номер строки.</param>
      <returns>Значение <see langword="true" />, если код может быть отображен; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Создает уникальное имя для метода обработчика событий заданного компонента и события.</summary>
      <param name="component">Экземпляр компонента, с которым связано событие.</param>
      <param name="e">Событие, для которого должно быть создано имя.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="component" /> или <paramref name="e" /> имеет значение <see langword="null" />.</exception>
      <returns>Рекомендованное имя метода обработчика событий для данного события.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>Возвращает коллекцию методов обработчика событий, обладающих сигнатурой метода, совместимой с заданным событием.</summary>
      <param name="e">Событие, для которого необходимо получить совместимые методы обработчика событий.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> имеет значение <see langword="null" />.</exception>
      <returns>Коллекция строк, представляющих собой имена совместимых методов.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary>Возвращает дескриптор <see cref="T:System.ComponentModel.EventDescriptor" /> для события, которое представлено заданным дескриптором свойств, если он отражает событие.</summary>
      <param name="property">Свойство, представляющее событие.</param>
      <returns>Дескриптор <see cref="T:System.ComponentModel.EventDescriptor" /> для события, представляемого свойством, или значение <see langword="null" />, если свойство не представляет событие.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary>Преобразует набор дескрипторов событий в набор дескрипторов свойств.</summary>
      <param name="events">События для преобразования в свойства.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> имеет значение <see langword="null" />.</exception>
      <returns>Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />, описывающих набор событий.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary>Преобразует один дескриптор событий в дескриптор свойств.</summary>
      <param name="e">Преобразуемое событие.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> имеет значение <see langword="null" />.</exception>
      <returns>Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />, описывающий событие.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <summary>Отображает код пользователя для конструктора.</summary>
      <returns>Значение <see langword="true" />, если код отображается; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Отображает код пользователя для заданного события.</summary>
      <param name="component">Компонент, с которым связано событие.</param>
      <param name="e">Отображаемое событие.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> имеет значение <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если код отображается; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
      <summary>Отображает код пользователя для конструктора в заданной строке.</summary>
      <param name="lineNumber">Номер строки для размещения курсора.</param>
      <returns>Значение <see langword="true" />, если код отображается; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Предоставляет уведомление о том, что в обработчике событий больше не используется конкретный метод.</summary>
      <param name="component">Компонент, к которому привязан метод.</param>
      <param name="e">Дескриптор <see cref="T:System.ComponentModel.EventDescriptor" /> для обработчика событий.</param>
      <param name="methodName">Имя метода.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)">
      <summary>Выполняет проверку допустимости предоставленного имени метода для используемого языка или скрипта.</summary>
      <param name="methodName">Проверяемое имя метода.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary>Представляет коллекцию исключений.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="exceptions">Массив типа <see cref="T:System.Exception" />, содержащий объекты для заполнения коллекции.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, которые требуются для сериализации объекта <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для заполнения данными.</param>
      <param name="context">Конечный объект (см. <see cref="T:System.Runtime.Serialization.StreamingContext" />) для этой сериализации.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary>Возвращает массив объектов <see cref="T:System.Exception" />, которые представляют коллекцию исключений.</summary>
      <returns>Массив объектов <see cref="T:System.Exception" />, которые представляют коллекцию исключений.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary>Определяет многоцелевые службы разрешения имен типов в среде времени разработки.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary>Разрешает тип требуемой версии .NET Framework в имя, определенное в сборке.</summary>
      <param name="type">Тип, который требуется разрешить.</param>
      <returns>Свойство <see cref="P:System.Type.AssemblyQualifiedName" /> параметра <paramref name="type" /> в требуемой версии .NET Framework.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary>Предоставляет набор методов, указывающих наследуемые компоненты.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>Добавляет компоненты, которые наследуются заданным компонентом, в объект <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="component">Компонент для поиска наследуемых компонентов, добавляемых для заданного контейнера.</param>
      <param name="container">Контейнер, в который добавляются наследуемые компоненты.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>Добавляет компоненты заданного типа, которые наследуются заданным компонентом, в службу <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="type">Базовый тип для поиска.</param>
      <param name="component">Компонент для поиска наследуемых компонентов, добавляемых для заданного контейнера.</param>
      <param name="container">Контейнер, в который добавляются наследуемые компоненты.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.InheritanceService" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary>Возвращает атрибут наследования для заданного компонента.</summary>
      <param name="component">Компонент, для которого извлекается атрибут наследования.</param>
      <returns>Экземпляр класса <see cref="T:System.ComponentModel.InheritanceAttribute" />, который описывает уровень наследования для данного компонента.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary>Указывает, должен ли игнорироваться заданный элемент.</summary>
      <param name="member">Проверяемый элемент. Этот элемент относится к типу <see cref="T:System.Reflection.FieldInfo" /> или <see cref="T:System.Reflection.MethodInfo" />.</param>
      <param name="component">Экземпляр компонента, с которым связан этот элемент.</param>
      <returns>Значение <see langword="true" />, если заданный элемент должен быть включен в набор наследуемых компонентов; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />.</summary>
      <param name="succeeded">Значение <see langword="true" />, указывающее, что загрузка конструктора успешно завершена; в обратном случае — значение <see langword="false" />.</param>
      <param name="errors">Коллекция ошибок, возникающих при загрузке конструктора.</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary>Возвращает коллекцию ошибок, возникающих при загрузке конструктора.</summary>
      <returns>Коллекция ошибок, возникающих при загрузке конструктора.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary>Возвращает значение, которое указывает, была ли загрузка конструктора выполнена успешно.</summary>
      <returns>Значение <see langword="true" />, если загрузка конструктора выполнена успешно; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> класса <see cref="T:System.ComponentModel.Design.DesignSurface" />. Этот класс не наследуется.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />.</summary>
      <param name="changeType">Тип изменения.</param>
      <param name="command">Команда меню.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType">
      <summary>Возвращает тип изменения, которое вызвало событие <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.Design.MenuCommandsChangedType" />, который стал причиной вызова события <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command">
      <summary>Возвращает команду, которая была добавлена, удалена или изменена.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.Design.MenuCommand" />, который был добавлен, удален или изменен.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> объекта <see cref="T:System.ComponentModel.Design.MenuCommandService" />. Этот класс не наследуется.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedType">
      <summary>Указывает тип действия, выполненного в отношении коллекции <see cref="T:System.Windows.Forms.Design.MenuCommands" /> связанного объекта.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded">
      <summary>Указывает, что выполнено добавление одной или нескольких команд.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged">
      <summary>Указывает, что изменен статус одной или нескольких команд.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved">
      <summary>Указывает, что выполнено удаление одной или нескольких команд.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandService">
      <summary>Реализует интерфейс <see cref="T:System.ComponentModel.Design.IMenuCommandService" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
      <summary>Происходит в результате изменения состояния команды меню.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="serviceProvider">Поставщик службы, используемый этой службой для получения других служб.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>Добавляет обработчик команд в службу команд меню.</summary>
      <param name="command">Добавляемый объект <see cref="T:System.ComponentModel.Design.MenuCommand" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Обработчик команд <paramref name="command" /> уже существует.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>Добавляет команду в таблицу команд объекта <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="verb">Добавляемый объект <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="verb" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose">
      <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
      <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
      <summary>Гарантирует создание списка команд.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>Осуществляет поиск команды <see cref="T:System.ComponentModel.Design.MenuCommand" />, сопоставленной заданному идентификатору команды.</summary>
      <param name="commandID">Искомый объект <see cref="T:System.ComponentModel.Design.CommandID" />.</param>
      <returns>Команда <see cref="T:System.ComponentModel.Design.MenuCommand" />, сопоставленная заданной команде; если команда не найдена, значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
      <summary>Осуществляет поиск команды <see cref="T:System.ComponentModel.Design.MenuCommand" />, сопоставленной заданной команде.</summary>
      <param name="guid">GUID команды.</param>
      <param name="id">Идентификатор команды.</param>
      <returns>Команда <see cref="T:System.ComponentModel.Design.MenuCommand" />, сопоставленная заданной команде; если команда не найдена, значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
      <summary>Возвращает список команд для заданного GUID.</summary>
      <param name="guid">GUID списка команд.</param>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" /> команд.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
      <summary>Возвращает ссылку на запрошенную службу.</summary>
      <param name="serviceType">Тип <see cref="T:System.Type" /> извлекаемой службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> имеет значение <see langword="null" />.</exception>
      <returns>Ссылка на параметр <paramref name="serviceType" />; если служба не обнаружена, значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary>Вызывает заданную команду в локальной форме или в общей среде.</summary>
      <param name="commandID">Вызываемая команда.</param>
      <returns>Значение <see langword="true" />, если команда обнаружена; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <summary>Вызывает заданную команду с заданным параметром в локальной форме или глобальной среде.</summary>
      <param name="commandId">Вызываемая команда.</param>
      <param name="arg">Параметр для вызова.</param>
      <returns>Значение <see langword="true" />, если команда обнаружена; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>Удаляет из документа заданную команду меню.</summary>
      <param name="command">Удаляемая команда.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>Удаляет из документа заданную команду.</summary>
      <param name="verb">Удаляемая команда.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="verb" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary>Отображает контекстное меню с заданным идентификатором команды в указанном месте.</summary>
      <param name="menuID">Отображаемое контекстное меню.</param>
      <param name="x">X-координата расположения контекстного меню.</param>
      <param name="y">Y-координата расположения контекстного меню.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandService.Verbs">
      <summary>Возвращает коллекцию команд конструктора, доступных в настоящий момент.</summary>
      <returns>Коллекция <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> команд конструктора, доступных в текущий момент.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary>Отображает диалоговое окно для редактирования многострочного текста в режиме разработки.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.MultilineStringEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение заданного объекта с использованием стиля редактирования, предоставленного методом <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <param name="provider">Объект поставщика служб, через который осуществляется редакционное обслуживание.</param>
      <param name="value">Экземпляр редактируемого значения.</param>
      <returns>Новое значение объекта. Если значение объекта не изменилось, этот метод возвращает переданный в него объект.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Возвращает стиль редактирования метода <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Значение перечисления <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />, указывающее на поддерживаемые стили редактирования.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Получает значение, указывающее, поддерживает ли данный редактор художественное оформление значения объекта.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Значение <see langword="false" /> указывает, что этот объект <see cref="T:System.Drawing.Design.UITypeEditor" /> не выводит визуальное представление в окне свойств.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary>Реализует основные функциональные возможности, которые могут использоваться для разработки редакторов значений. Эти редакторы, в свою очередь, обеспечивают интерфейс пользователя визуализацией и редактированием значений объектов поддерживаемых типов данных.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary>Представляет текущее значение редактора <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary>Представляет предыдущее значение редактора <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary>Управляет доступностью узелов в иерархической коллекции помеченных элементов.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
      <param name="subObjectSelector">Значение указанного селектора дочерних объектов.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.ApplyTreeViewThemeStyles(System.Windows.Forms.TreeView)">
      <summary>Измените <see cref="T:System.Windows.Forms.TreeView" /> элемент управления Windows Forms для использования  новой темы стиля обозревателя.</summary>
      <param name="treeView">Элемент управления представления дерева, который требуется изменить.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение заданного объекта, используя стиль редактирования, указанный с помощью метода <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <param name="provider">Поставщик <see cref="T:System.IServiceProvider" />, который этот редактор может использовать для получения услуг.</param>
      <param name="value">Редактируемый объект.</param>
      <returns>Новое значение объекта. Если значение объекта не изменилось, этот метод должен возвращать переданный в него объект.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary>Определяет, равен ли указанный объект <see cref="T:System.Object" /> текущему объекту <see cref="T:System.Object" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, с которым сравнивается текущий объект <see cref="T:System.Object" />.</param>
      <returns>Значение <see langword="true" />, если указанный объект <see cref="T:System.Object" /> равен текущему объекту <see cref="T:System.Object" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary>Заполняет иерархичесую коллекцию помеченных элементов, каждый из которых представлен объектом <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <param name="selector">Иерархическая коллекция помеченных элементов.</param>
      <param name="context">Сведения о контексте для компонента.</param>
      <param name="provider">Метод <see cref="M:System.IServiceProvider.GetService(System.Type)" /> данного интерфейса, получающий объект, который предоставляет данную службу.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Получает стиль редактирования, используемый методом <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Значение перечисления <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />, которое указывает стиль редактирования, используемый методом <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary>Устанавливает для текущего редактора <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> указанное значение.</summary>
      <param name="value">Указанное значение.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary>Отображает иерархическую коллекцию помеченных элементов, каждый из которых представлен объектом <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary>Это поле предназначено только для внутреннего использования.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />.</summary>
      <param name="editor">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary>Добавляет новый узел дерева в коллекцию.</summary>
      <param name="label">Метка для узла.</param>
      <param name="value">Объект <see cref="T:System.Object" />, представляющий значение для узла.</param>
      <param name="parent">Родительский объект узла.</param>
      <returns>Атрибут <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />, добавленный в коллекцию.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary>Удаляет все узлы дерева из коллекции.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary>Происходит после выбора узла дерева.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Windows.Forms.TreeViewEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Происходит при нажатии клавиши, если элемент управления имеет фокус.</summary>
      <param name="e">Предоставляет данные для события <see cref="E:System.Windows.Forms.Control.KeyDown" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Происходит при нажатии клавиши, если элемент управления имеет фокус.</summary>
      <param name="e">Предоставляет данные для события <see cref="E:System.Windows.Forms.Control.KeyPress" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary>Происходит при нажатии кнопки мыши, если указатель мыши находится на элементе управления.</summary>
      <param name="e">Предоставляет данные для событий <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" /> и <see cref="E:System.Windows.Forms.Control.MouseMove" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary>Устанавливает конкретное значение для узелов коллекции.</summary>
      <param name="value">Задаваемое значение.</param>
      <param name="nodes">Коллекция узелов.</param>
      <returns>Значение <see langword="true" />, если установлены узлы коллекции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary>Инициализирует службу редактора.</summary>
      <param name="edSvc">Служба редактора.</param>
      <param name="value">Задаваемое значение.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary>Удаляет службу редактора.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <summary>Обрабатывает сообщения Windows.</summary>
      <param name="m">Сообщение <see cref="T:System.Windows.Forms.Message" /> Windows для обработки.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary>Предоставляет узел объекта <see cref="T:System.Windows.Forms.TreeView" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary>Представляет значение для этого узла.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />.</summary>
      <param name="label">Метка для узла.</param>
      <param name="value">Объект <see cref="T:System.Object" />, представляющий значение для узла.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary>Задает требуемую версию .NET Framework для проекта.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" />.</summary>
      <param name="targetFrameworkMoniker">Требуемая версия .NET Framework для проекта.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary>Получает требуемую версию .NET Framework для проекта.</summary>
      <returns>Требуемая версия .NET Framework для проекта.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader">
      <summary>Предоставляет реализацию интерфейса <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary>Запускает процесс загрузки.</summary>
      <param name="host">узел загрузчика конструктора, предназначенный для загрузки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Конструктор уже загружен, или метод <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> был вызван другим узелом загрузчика конструктора.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <paramref name="host" /> был удален.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose">
      <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)">
      <summary>Включает или отключает уведомление о компоненте при помощи <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</summary>
      <param name="enable">Значение <see langword="true" /> для включения уведомления о компоненте при помощи <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />; значение <see langword="false" /> для отключения уведомления о компоненте при помощи <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</param>
      <returns>Значение <see langword="true" />, если уведомление о компоненте было включено до этого вызова; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush">
      <summary>Сбрасывает ожидающие изменения загрузчику конструктора.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)">
      <summary>Возвращает запрашиваемую службу.</summary>
      <param name="serviceType">Объект <see cref="T:System.Type" /> службы.</param>
      <returns>Запрашиваемая служба или значение <see langword="null" />, если не удается найти требуемую службу.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize">
      <summary>Инициализирует службы.</summary>
      <exception cref="T:System.InvalidOperationException">узел <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> не инициализирован.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> удален.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded">
      <summary>Определяет, необходимо ли выполнять повторную загрузку конструктора.</summary>
      <returns>Значение <see langword="true" />, если конструктор следует перезагрузить; в противном случае — <see langword="false" />. Реализация по умолчанию всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad">
      <summary>Уведомляет загрузчика конструктора перед началом загрузки.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload">
      <summary>Уведомляет загрузчика конструктора перед началом выгрузки.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>Уведомляет загрузчика конструктора о завершении загрузки.</summary>
      <param name="successful">Значение <see langword="true" />, если загрузка завершена успешно; в противном случае — <see langword="false" />.</param>
      <param name="errors">Класс <see cref="T:System.Collections.ICollection" />, содержащий объекты (обычно исключения), которые были выведены как ошибки.</param>
      <exception cref="T:System.InvalidOperationException">узел <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> не инициализирован.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> удален.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying">
      <summary>Уведомляет загрузчика конструктора перед началом изменения состояния документа.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Сбрасывает все изменения конструктора.</summary>
      <param name="serializationManager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, использующийся для сохранения состояния загруженных конструкторов.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Загружает конструктор из хранилища.</summary>
      <param name="serializationManager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> используется для загрузки состояния конструкторов.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)">
      <summary>Формирует порядок очереди для перезагрузки конструктора.</summary>
      <param name="flags">Поразрядное сочетание значений <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)">
      <summary>Сообщает об ошибках, возникающих при выполнении сброса изменений.</summary>
      <param name="errors">Коллекция <see cref="T:System.Collections.ICollection" />, содержащая объекты с ошибками (обычно это исключения).</param>
      <exception cref="T:System.InvalidOperationException">Одна или более ошибок возникли при выполнении сброса изменений.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)">
      <summary>Задает полное имя класса базового компонента.</summary>
      <param name="name">Строка, представляющая полное имя создаваемого компонента.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency">
      <summary>Регистрирует внешний компонент как часть процесса загрузки под управлением интерфейса <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</summary>
      <exception cref="T:System.InvalidOperationException">узел <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> не инициализирован.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary>Посылает сигнал о завершении зависимой загрузки.</summary>
      <param name="successful">Значение <see langword="true" /> в случае успешной загрузки; в противном случае — <see langword="false" />.</param>
      <param name="errorCollection">Коллекция <see cref="T:System.Collections.ICollection" />, содержащая ошибки, которые возникли при загрузке.</param>
      <exception cref="T:System.InvalidOperationException">Зависимости загрузки не были добавлены при помощи метода <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" /> или узел <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> не инициализирован.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> удален.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload">
      <summary>Перезагружает документ проекта.</summary>
      <returns>Значение <see langword="true" />, если принят запрос о перезагрузке, либо значение <see langword="false" />, если перезагрузка запрещена.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost">
      <summary>Возвращает узел загрузчика.</summary>
      <exception cref="T:System.InvalidOperationException">узел <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> не инициализирован.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> удален.</exception>
      <returns>узел <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />, переданный методу <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading">
      <summary>Возвращает значение, указывающее на то, выполняет ли загрузчик загрузку поверхности конструктора.</summary>
      <returns>Значение <see langword="true" />, если поверхность конструктора загружается в текущий момент загрузчиком; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified">
      <summary>Возвращает или задает значение, указывающее на то, был ли изменен конструктор.</summary>
      <returns>Значение <see langword="true" />, если конструктор был изменен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider">
      <summary>Возвращает или задает поставщика свойств для диспетчера сериализации, используемого загрузчиком.</summary>
      <exception cref="T:System.InvalidOperationException">узел <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> не инициализирован.</exception>
      <returns>Объект, свойства которого предоставляются диспетчеру сериализации.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending">
      <summary>Возвращает значение, указывающее, существует ли очередь на перезагрузку.</summary>
      <returns>Значение <see langword="true" />, если вызов метода <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> находится в очереди на запрос о перезагрузке; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions">
      <summary>Определяет поведение метода <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />. Возможно сочетание этих флагов при помощи битового <see langword="OR" /> оператора.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Default">
      <summary>Очистка загрузчика конструктора производится перед повторной загрузкой, но повторная загрузка не вызывается принудительно и не задает свойство <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> для значения <see langword="true" /> в случае возникновения ошибок при загрузке.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Force">
      <summary>Загрузчик конструктора принудительно вызывает повторную загрузку. Обычно повторная загрузка происходит, только если метод <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" /> возвращает значение <see langword="true" />. Этот флаг обходит вызов данного метода, и всегда выполняет повторную загрузку.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.ModifyOnError">
      <summary>Загрузчик конструктора задает свойство <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> для значения <see langword="true" /> в случае возникновения ошибок при загрузке. Этот флаг используется, если необходимо выполнить сброс и перезаписать постоянное состояние загрузчика, которое содержит ошибки.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.NoFlush">
      <summary>Загрузчик конструктора прерывает выполнение любых изменений перед повторной загрузкой.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary>Выполняет сериализацию набора компонентов в хранилище сериализации.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> с помощью поставщика указанной службы для обнаружения служб.</summary>
      <param name="provider">Класс <see cref="T:System.IServiceProvider" />, используемый для обнаружения служб.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary>Создает новый экземпляр <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <returns>Новое хранилище сериализованных объектов.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary>Выполняет десериализацию заданного хранилища для создания коллекции объектов.</summary>
      <param name="store">Хранилище <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, из которого выполняется десериализация объектов.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> не является поддерживаемым типом хранилища сериализации. Используйте хранилище, возвращаемое методом <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
      <returns>Коллекция десериализованных компонентов.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>Выполняет десериализацию заданного хранилища и заполняет заданное хранилище <see cref="T:System.ComponentModel.IContainer" /> десериализованными объектами <see cref="T:System.ComponentModel.IComponent" />.</summary>
      <param name="store">Хранилище <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, из которого выполняется десериализация объектов.</param>
      <param name="container">Контейнер, в который добавляются объекты <see cref="T:System.ComponentModel.IComponent" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="store" /> или <paramref name="container" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> не является поддерживаемым типом хранилища сериализации. Используйте хранилище, возвращаемое методом <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
      <returns>Коллекция десериализованных компонентов.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary>Выполняет десериализацию заданного объекта <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> в заданный контейнер (при необходимости применяются значения свойств по умолчанию).</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, из которого выполняется десериализация объектов.</param>
      <param name="container">Контейнер объектов, к которым применяются данные.</param>
      <param name="validateRecycledTypes">Значение <see langword="true" /> для проверки очищенных типов; в противном случае — <see langword="false" />.</param>
      <param name="applyDefaults">Значение <see langword="true" /> для применения значений свойств по умолчанию; в противном случае — <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="store" /> или <paramref name="container" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> не является поддерживаемым типом хранилища сериализации. Используйте хранилище, возвращаемое методом <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary>Загружает хранилище <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> из указанного потока.</summary>
      <param name="stream">Поток, из которого загружается хранилище <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Поток <paramref name="stream" /> поддерживает поиск, но его длина равна 0.</exception>
      <returns>Загруженное хранилище <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Выполняет сериализацию заданного объекта в заданное хранилище <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, в который будет выполнена сериализация параметра <paramref name="value" />.</param>
      <param name="value">Объект для сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="store" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Хранилище <paramref name="store" /> закрыто, или <paramref name="store" /> не является поддерживаемым типом хранилища сериализации. Используйте хранилище, возвращаемое методом <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Выполняет сериализацию заданного объекта, учитывая значения свойств по умолчанию.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, в который будет выполнена сериализация параметра <paramref name="value" />.</param>
      <param name="value">Объект для сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="store" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Хранилище <paramref name="store" /> закрыто, или <paramref name="store" /> не является поддерживаемым типом хранилища сериализации. Используйте хранилище, возвращаемое методом <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Сериализует заданный элемент в заданном объекте.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, в который будет выполнена сериализация параметра <paramref name="member" />.</param>
      <param name="owningObject">Объект, которому принадлежит <paramref name="member" />.</param>
      <param name="member">Заданный элемент.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="store" />, <paramref name="owningObject" /> или <paramref name="member" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Хранилище <paramref name="store" /> закрыто, или <paramref name="store" /> не является поддерживаемым типом хранилища сериализации. Используйте хранилище, возвращаемое методом <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Сериализует заданный элемент в заданный объект, а также сериализует элемент, если он содержит значение свойства по умолчанию.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, в который будет выполнена сериализация параметра <paramref name="member" />.</param>
      <param name="owningObject">Объект, которому принадлежит <paramref name="member" />.</param>
      <param name="member">Заданный элемент.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="store" />, <paramref name="owningObject" /> или <paramref name="member" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Хранилище <paramref name="store" /> закрыто, или <paramref name="store" /> не является поддерживаемым типом хранилища сериализации. Используйте хранилище, возвращаемое методом <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
      <summary>Предоставляет базовый класс для реализации загрузчика конструктора на основе модели CodeDOM.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose">
      <summary>Освобождение ресурсов, используемых классом <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize">
      <summary>Инициализирует службы.</summary>
      <exception cref="T:System.InvalidOperationException">Инициализация класса <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> не была выполнена, либо загрузчик конструктора не поддерживает службу разрешения типов, которая требуется для модели CodeDom.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded">
      <summary>Возвращает значение, определяющее, требуется ли перезагрузка.</summary>
      <exception cref="T:System.NotSupportedException">Язык не предоставляет синтаксический анализатор кода для этого файла; возможно, этот тип файла не поддерживается конструктором.</exception>
      <exception cref="T:System.InvalidOperationException">Класс может быть создан, но это не первый класс в файле, либо не удалось отобразить конструктор для этого файла, так как в нем отсутствуют классы, которые можно создать.</exception>
      <returns>Значение <see langword="true" />, если принимается решение, что методу <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> необходима перезагрузка; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad">
      <summary>Уведомляет загрузчика конструктора перед началом загрузки.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload">
      <summary>Уведомляет загрузчика конструктора перед началом выгрузки.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</summary>
      <param name="component">Компонент, который необходимо переименовать.</param>
      <param name="oldName">Исходное имя компонента.</param>
      <param name="newName">Новое имя компонента.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>Уведомляет загрузчика конструктора о завершении загрузки.</summary>
      <param name="successful">Значение <see langword="true" />, указывающее, что загрузка прошла успешно; в противном случае — <see langword="false" />.</param>
      <param name="errors">Класс <see cref="T:System.Collections.ICollection" /> объектов (обычно исключений), которые были выведены как ошибки.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse">
      <summary>Анализирует текст или другое постоянное хранилище и возвращает объект <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <returns>Объект <see cref="T:System.CodeDom.CodeCompileUnit" />, являющийся результатом операции анализа.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Запрашивает сериализацию корневого компонента конструктора.</summary>
      <param name="manager">Метод <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, из которого запрашивается сериализатор.</param>
      <exception cref="T:System.NotSupportedException">Язык не предоставляет синтаксический анализатор кода для этого файла; возможно, этот тип файла не поддерживается конструктором.</exception>
      <exception cref="T:System.InvalidOperationException">Класс может быть создан, но это не первый класс в файле, либо не удалось отобразить конструктор для этого файла, так как в нем отсутствуют классы, которые можно создать.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Анализирует код от поставщика CodeDOM.</summary>
      <param name="manager">Метод <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, из которого запрашивается сериализатор.</param>
      <exception cref="T:System.NotSupportedException">Язык не предоставляет синтаксический анализатор кода для этого файла; возможно, этот тип файла не поддерживается конструктором.</exception>
      <exception cref="T:System.InvalidOperationException">Класс может быть создан, но это не первый класс в файле, либо не удалось отобразить конструктор для этого файла, так как в нем отсутствуют классы, которые можно создать.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)">
      <summary>Выполняет десериализацию указанного объекта данных сериализации и возвращает коллекцию объектов, представляемых этими данными.</summary>
      <param name="serializationData">Объект, состоящий из сериализованных данных.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="serializationData" /> не является объектом типа <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</exception>
      <returns>Коллекция объектов, представляемая параметром <paramref name="serializationData" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)">
      <summary>Выполняет сериализацию указанной коллекции объектов и сохраняет их в объекте данных сериализации.</summary>
      <param name="objects">Коллекция объектов, которые необходимо сериализовать.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> не найден.</exception>
      <returns>Объект, содержащий сериализованное состояние указанной коллекции объектов.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary>Создает новое имя, которое уникально для всех компонентов в указанном контейнере.</summary>
      <param name="container">Контейнер, в который добавляется новый объект.</param>
      <param name="dataType">Тип данных объекта, которому возвращается имя.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataType" /> имеет значение <see langword="null" />.</exception>
      <returns>Уникальное имя типа данных.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)">
      <summary>Возвращает значение, определяющее, является ли указанное имя допустимым.</summary>
      <param name="name">Имя для проверки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> имеет значение <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если имя является допустимым; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)">
      <summary>Возвращает значение, определяющее, является ли указанное имя допустимым.</summary>
      <param name="name">Имя для проверки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Значение <paramref name="name" /> не является допустимым идентификатором, либо уже существует компонент с тем же именем.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)">
      <summary>Записывает изменения единицы компиляции в постоянное хранилище.</summary>
      <param name="unit">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> для сохранения.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider">
      <summary>Возвращает класс <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />, используемый загрузчиком конструктора.</summary>
      <returns>Класс <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />, используемый загрузчиком конструктора.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService">
      <summary>Возвращает службу разрешения типов для использования с данным загрузчиком конструктора.</summary>
      <returns>Класс <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />, используемый сериализаторами CodeDOM при разрешении типов.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel">
      <summary>Определяет локализацию модели для использования адаптером ресурсов CodeDom.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None">
      <summary>Поставщик локализации должен игнорировать локализованные свойства. В любом случае ресурсы для стерилизуемых объектов и объектов, не поддерживающих генерацию кодов, будут считаны.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyAssignment">
      <summary>Поставщик локализации выполнит считывание локализованных свойств, назначив каждому свойству свой ресурс. При небольшом количестве свойств данная модель работает быстро, но если возрастает количество свойств, содержащих значения по умолчанию, просмотр осуществляется медленно.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyReflection">
      <summary>Поставщик локализации записывает локализованные значения свойств в файл ресурсов и использует класс <see cref="T:System.ComponentModel.ComponentResourceManager" /> для отражения свойств по имени в процессе заполнения в среде выполнения. Данный класс использует отражение в среде выполнения, поэтому просмотр осуществляется медленно, но при большом количестве свойств, содержащих значения по умолчанию, скорость просмотра увеличивается.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider">
      <summary>Предоставляет службу сериализации ресурса CodeDOM. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
      <param name="provider">Класс <see cref="T:System.IServiceProvider" /> используется поставщиком локализации для добавления свойств средства расширения.</param>
      <param name="model">Значение <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" />, указывающее модель локализации для использования адаптером ресурсов CodeDom.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel,System.Globalization.CultureInfo[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
      <param name="provider">Класс <see cref="T:System.IServiceProvider" /> используется поставщиком локализации для добавления свойств средства расширения.</param>
      <param name="model">Значение <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" />, указывающее модель локализации для использования адаптером ресурсов CodeDom.</param>
      <param name="supportedCultures">Массив культур, которые поддерживает этот адаптер ресурсов.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.Dispose">
      <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />.</summary>
      <param name="manager">Диспетчер сериализации, запрашивающий сериализатор.</param>
      <param name="currentSerializer">Экземпляр текущего сериализатора указанного типа. Может иметь значение <see langword="null" />, если сериализатор указанного типа не существует.</param>
      <param name="objectType">Тип данных объекта сериализации.</param>
      <param name="serializerType">Тип данных создаваемого сериализатора.</param>
      <returns>Экземпляр сериализатора запрошенного типа или значение <see langword="null" />, если не удалось выполнить запрос.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary>Выполняет сериализацию графы объекта в серии операторов CodeDOM. Этот класс предоставляет абстрактный базовый класс для сериализатора.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Выполняет десериализацию указанного сериализованного объекта CodeDOM.</summary>
      <param name="manager">Интерфейс диспетчера сериализации, используемый в процессе десериализации.</param>
      <param name="codeObject">Сериализованный объект CodeDOM, предназначенный для десериализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="codeObject" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="codeObject" /> — неподдерживаемый кодовый элемент.</exception>
      <returns>Десериализованный объект CodeDOM.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>Выполняет десериализацию одиночного оператора.</summary>
      <param name="manager">Диспетчер сериализации для использования при выполнении сериализации.</param>
      <param name="statement">Оператор, предназначенная для десериализации.</param>
      <returns>Экземпляр объекта после десериализации <paramref name="statement" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary>Определяет, к какой группе инструкций принадлежит заданная инструкция.</summary>
      <param name="statement">Инструкция <see cref="T:System.CodeDom.CodeStatement" />, для которой необходимо определить группу.</param>
      <param name="expression">Выражение <see cref="T:System.CodeDom.CodeExpression" />, до которого был сокращен параметр <paramref name="statement" />.</param>
      <param name="targetType">Коллекция <see cref="T:System.Type" /> типа <paramref name="statement" />.</param>
      <returns>Имя компонента, с которым будет группироваться инструкция <paramref name="statement" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Выполняет сериализацию заданного объекта в объект CodeDOM.</summary>
      <param name="manager">Диспетчер сериализации, используемый в процессе сериализации.</param>
      <param name="value">Объект для сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <returns>Объект CodeDOM, представляющий сериализованный объект.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Выполняет сериализацию заданного объекта, учитывая значения по умолчанию.</summary>
      <param name="manager">Диспетчер сериализации для использования при выполнении сериализации.</param>
      <param name="value">Объект для сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <returns>Объект CodeDom, представляющий <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Сериализует заданный элемент в заданном объекте.</summary>
      <param name="manager">Диспетчер сериализации для использования при выполнении сериализации.</param>
      <param name="owningObject">Объект, к которому присоединен <paramref name="member" />.</param>
      <param name="member">Элемент для сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="manager" />, <paramref name="owningObject" /> или <paramref name="member" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> не является сериализуемым типом.</exception>
      <returns>Объект <see cref="T:System.CodeDom.CodeStatementCollection" />, представляющий сериализованное состояние <paramref name="member" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Сериализует заданный элемент, учитывая значения по умолчанию.</summary>
      <param name="manager">Диспетчер сериализации для использования при выполнении сериализации.</param>
      <param name="owningObject">Объект, к которому присоединен <paramref name="member" />.</param>
      <param name="member">Элемент для сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="manager" />, <paramref name="owningObject" /> или <paramref name="member" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> не является сериализуемым типом.</exception>
      <returns>Объект CodeDom, представляющий <paramref name="member" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Выполняет сериализацию указанного значения в выражение CodeDOM.</summary>
      <param name="manager">Диспетчер сериализации, используемый в процессе сериализации.</param>
      <param name="value">Объект для сериализации.</param>
      <returns>Сериализованное значение. Возвращает значение <see langword="null" />, если для заданного значения невозможно получить выражение ссылки или не удается выполнить сериализацию значения.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary>Предоставляет базовый класс для классов <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary>Выполняет десериализацию заданного выражения в объект в памяти.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="name">Имя объекта, получаемое от выражения. Возможно значение <see langword="null" />, если нет необходимости именовать объект.</param>
      <param name="expression">Объект <see cref="T:System.CodeDom.CodeExpression" /> для интерпретации.</param>
      <returns>Объект, полученный после интерпретации параметра <paramref name="expression" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary>Возвращает экземпляр заданного типа.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="type">Объект <see cref="T:System.Type" /> возвращаемого экземпляра.</param>
      <param name="parameters">Параметры для передачи в конструктор для параметра <paramref name="type" />.</param>
      <param name="name">Имя десериализованного объекта.</param>
      <param name="addToContainer">Значение <see langword="true" /> для добавления этого объекта в контейнер конструктора; в противном случае — <see langword="false" />. Для этого объект должен реализовать класс <see cref="T:System.ComponentModel.IComponent" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      <returns>Экземпляр <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Выполняет десериализацию свойств заданного объекта из набора ресурсов нейтральной культуры.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="value">Объект, из которого выполняется десериализация свойств.</param>
      <param name="filter">Массив <see cref="T:System.Attribute" />, выполняющий фильтрацию свойств, предназначенных для десериализации.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>Выполняет десериализацию оператора путем обработки и выполнения инструкции CodeDOM.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="statement">Объект <see cref="T:System.CodeDom.CodeStatement" />, предназначенный для выполнения десериализации.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Получает коллекцию атрибутов в соответствии с целевой версией .NET Framework проекта.</summary>
      <param name="manager">Диспетчер сериализации.</param>
      <param name="type">Тип целевого объекта.</param>
      <returns>Коллекция атрибутов в соответствии с целевой версией .NET Framework проекта.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Получает коллекцию атрибутов в соответствии с целевой версией .NET Framework проекта.</summary>
      <param name="manager">Диспетчер сериализации.</param>
      <param name="instance">Объект типа целевого объекта.</param>
      <returns>Коллекция атрибутов в соответствии с целевой версией .NET Framework проекта.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Получает коллекцию событий в соответствии с целевой версией .NET Framework проекта.</summary>
      <param name="manager">Диспетчер сериализации.</param>
      <param name="instance">Объект типа целевого объекта.</param>
      <param name="attributes">Массив атрибутов, передаваемых в целевую версию .NET Framework.</param>
      <returns>Коллекция событий в соответствии с целевой версией .NET Framework проекта.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Возвращает выражение для заданного объекта.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="value">Объект, для которого возвращается выражение.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> имеет значение <see langword="null" />.</exception>
      <returns>Выражение <see cref="T:System.CodeDom.CodeExpression" />, представляющее <paramref name="value" />, или <see langword="null" />, если не существует выражения для <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Получает коллекцию свойств в соответствии с целевой версией .NET Framework проекта.</summary>
      <param name="manager">Диспетчер сериализации.</param>
      <param name="instance">Объект типа целевого объекта.</param>
      <param name="attributes">Массив атрибутов, передаваемых в целевую версию .NET Framework.</param>
      <returns>Коллекция свойств в соответствии с целевой версией .NET Framework проекта.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Получает тип отражения, созданный из метаданных типа.</summary>
      <param name="manager">Диспетчер сериализации.</param>
      <param name="type">Тип, содержащий используемые метаданные.</param>
      <returns>Тип отражения, созданный из метаданных параметра <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Получает тип отражения, созданный из метаданных объекта.</summary>
      <param name="manager">Диспетчер сериализации.</param>
      <param name="instance">Объект, содержащий используемые метаданные.</param>
      <returns>Тип отражения, созданный из метаданных параметра <paramref name="object" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Определяет местоположение сериализатора для значения заданного объекта.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="value">Объект, указывающий загружаемый сериализатор.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <returns>Объект <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />, соответствующий значению параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Определяет местоположение сериализатора для заданного типа.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="valueType">Объект <see cref="T:System.Type" />, указывающий загружаемый сериализатор.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="valueType" /> имеет значение <see langword="null" />.</exception>
      <returns>Объект <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />, соответствующий значению параметра <paramref name="valueType" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary>Получает объект <see cref="T:System.ComponentModel.TypeDescriptionProvider" />, обладающий сведениями о целевой версии .NET Framework, для использования при фильтрации типов.</summary>
      <param name="provider">Служба поставщика описаний типа.</param>
      <param name="instance">Объект, от которого можно наследовать службу поставщика описаний типа, если для параметра <paramref name="provider" /> задано значение <see langword="null" />.</param>
      <returns>Поставщик описаний типа, обладающий сведениями о целевой версии .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Возвращает уникальное имя для заданного объекта.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="value">Объект, для которого будет получено имя.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <returns>Уникальное имя для <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Возвращает значение, указывающее, выполнена ли сериализация заданного объекта.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="value">Тестируемый объект предыдущей сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если <paramref name="value" /> был сериализован; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>Возвращает значение, указывающее, выполнена ли сериализация заданного объекта (при необходимости рассматривается заранее установленное значение).</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="value">Тестируемый объект предыдущей сериализации.</param>
      <param name="honorPreset">Значение <see langword="true" /> для включения заранее установленных выражений; в противном случае — <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если <paramref name="value" /> был сериализован; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary>Возвращает выражение, представляющее создание заданного объекта.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="value">Объект для сериализации.</param>
      <param name="isComplete">Значение <see langword="true" />, если сериализация параметра <paramref name="value" /> полностью завершена; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <returns>Выражение, представляющее создание параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary>Сериализует заданное событие в указанную коллекцию инструкций.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="statements">Объект <see cref="T:System.CodeDom.CodeStatementCollection" />, в который будет сериализовано событие.</param>
      <param name="value">Объект, к которому привязан <paramref name="descriptor" />.</param>
      <param name="descriptor">
        <see cref="T:System.ComponentModel.EventDescriptor" />, указывающий событие для сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> или <paramref name="descriptor" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">Параметр <see cref="T:System.ComponentModel.Design.IEventBindingService" /> недоступен.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Сериализует заданные события в указанную коллекцию инструкций.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="statements">Объект <see cref="T:System.CodeDom.CodeStatementCollection" />, в который будет сериализовано событие.</param>
      <param name="value">Объект, в котором будут сериализованы события.</param>
      <param name="filter">Массив <see cref="T:System.Attribute" />, который фильтрует события для сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="manager" />, <paramref name="value" /> или <paramref name="statements" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Сериализует свойства заданного объекта в указанную коллекцию инструкций.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="statements">Объект <see cref="T:System.CodeDom.CodeStatementCollection" />, в который будут сериализованы свойства.</param>
      <param name="value">Объект, в который будут сериализованы свойства.</param>
      <param name="filter">Массив <see cref="T:System.Attribute" />, который фильтрует свойства для сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="manager" />, <paramref name="value" /> или <paramref name="statements" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Сериализует свойства заданного объекта в набор ресурсов инвариантного языка и региональных параметров.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="statements">Не используется.</param>
      <param name="value">Объект, свойства которого будут сериализованы.</param>
      <param name="filter">Массив <see cref="T:System.Attribute" />, который фильтрует свойства для сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="manager" />, <paramref name="value" /> или <paramref name="statements" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary>Сериализует свойство заданного объекта.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="statements">Объект <see cref="T:System.CodeDom.CodeStatementCollection" />, в который будет сериализовано свойство.</param>
      <param name="value">Объект, в котором будет сериализовано свойство.</param>
      <param name="propertyToSerialize">Сериализуемое свойство.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> или <paramref name="propertyToSerialize" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>Выполняет сериализацию заданного объекта в набор ресурсов, используя заданное имя ресурса.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="resourceName">Имя набора ресурсов, в который выполняется сериализация <paramref name="value" />.</param>
      <param name="value">Объект для сериализации.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>Выполняет сериализацию заданного объекта в набор ресурсов, используя заданное имя ресурса.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="resourceName">Имя набора ресурсов, в который выполняется сериализация <paramref name="value" />.</param>
      <param name="value">Объект для сериализации.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Выполняет сериализацию заданного объекта в выражение.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="value">Объект для сериализации. Может иметь значение <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> имеет значение <see langword="null" />.</exception>
      <returns>Объект <see cref="T:System.CodeDom.CodeExpression" />, если параметр <paramref name="value" /> может быть сериализован; в противном случае — <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Выполняет сериализацию заданного объекта в выражение.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="value">Объект для сериализации.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> имеет значение <see langword="null" />.</exception>
      <returns>Объект <see cref="T:System.CodeDom.CodeExpression" />, содержащий значение параметра <paramref name="value" /> в качестве сериализованного выражения.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>выполняет сериализацию заданного объекта в выражение, соответствующее для нейтральной культуры.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="value">Объект для сериализации.</param>
      <param name="ensureInvariant">Значение <see langword="true" /> для сериализации в нейтральную культуру; в противном случае — <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> имеет значение <see langword="null" />.</exception>
      <returns>Объект <see cref="T:System.CodeDom.CodeExpression" />, содержащий значение параметра <paramref name="value" /> в качестве сериализованного выражения.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary>Связывает объект с выражением.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="value">Объект для сериализации.</param>
      <param name="expression">Выражение <see cref="T:System.CodeDom.CodeExpression" />, с помощью которого выполняется связывание <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="manager" />, <paramref name="value" /> или <paramref name="expression" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary>Связывает объект с выражением (при необходимости указывается заранее установленное выражение).</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для выполнения сериализации.</param>
      <param name="value">Объект для сериализации.</param>
      <param name="expression">Выражение <see cref="T:System.CodeDom.CodeExpression" />, с помощью которого выполняется связывание <paramref name="value" />.</param>
      <param name="isPreset">Значение <see langword="true" /> для указания заранее установленного выражения; в противном случае — <see langword="false" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary>Исключение, которое создается при возникновении ошибки, если доступен номер строки, в которой она произошла.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />, используя указанное исключение и данные строки.</summary>
      <param name="ex">Вызываемое исключение.</param>
      <param name="linePragma">Класс <see cref="T:System.CodeDom.CodeLinePragma" />, показывающий место возникновения исключения.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />.</summary>
      <param name="ex">Вызываемое исключение.</param>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, из которого извлекается контекст.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />, используя заданное сообщение и данные строки.</summary>
      <param name="message">Сообщение, описывающее исключение.</param>
      <param name="linePragma">Класс <see cref="T:System.CodeDom.CodeLinePragma" />, показывающий место возникновения исключения.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />.</summary>
      <param name="message">Сообщение, описывающее исключение.</param>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, из которого извлекается контекст.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает объекту <see cref="T:System.Runtime.Serialization.SerializationInfo" /> имя параметра и дополнительную информацию об исключении.</summary>
      <param name="info">Хранит данные, использовавшиеся при сериализации (десериализации) объекта с помощью класса <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</param>
      <param name="context">Описывает источник и место назначения потока, создающего исключение, а также служит для сохранения этого контекста и дополнительного контекста, определяемого вызывающим в процессе сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary>Возвращает или задает данные строки для ошибки, с которой связано это исключение.</summary>
      <returns>Класс <see cref="T:System.CodeDom.CodeLinePragma" />, определяющий данные строки для ошибки.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary>Выполняет сериализацию коллекции.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary>Проверяет поддержку сериализации методом <paramref name="method" />.</summary>
      <param name="method">Класс <see cref="T:System.Reflection.MethodInfo" /> для проверки атрибутов сериализации.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> имеет значение <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если метод <paramref name="method" /> поддерживает сериализацию; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Выполняет сериализацию заданной коллекции в объект CodeDOM.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для использования во время сериализации.</param>
      <param name="value">Объект для сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <returns>Объект CodeDOM, представляющий значение параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Сериализует заданную коллекцию.</summary>
      <param name="manager">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, предназначенный для использования во время сериализации.</param>
      <param name="targetExpression">Объект <see cref="T:System.CodeDom.CodeExpression" />, который ссылается на коллекцию.</param>
      <param name="targetType">
        <see cref="T:System.Type" /> коллекции.</param>
      <param name="originalCollection">Коллекция, подлежащая сериализации.</param>
      <param name="valuesToSerialize">Значения, подлежащие сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" /> или <paramref name="valuesToSerialize" /> имеет значение <see langword="null" />.</exception>
      <returns>Сериализованная коллекция при успешном завершении процесса сериализации. В противном случае — <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary>Предоставляет реализацию интерфейса <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary>Происходит при создании сеанса.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary>Происходит при завершении сеанса.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary>Возникает, если не удается найти заданное имя в таблице имен диспетчера сериализации с помощью метода <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />.</summary>
      <exception cref="T:System.InvalidOperationException">У диспетчера сериализации нет активных сеансов сериализации.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary>Возникает при завершении сериализации.</summary>
      <exception cref="T:System.InvalidOperationException">У диспетчера сериализации нет активных сеансов сериализации.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> с заданным поставщиком служб.</summary>
      <param name="provider">Объект <see cref="T:System.IServiceProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Создает экземпляр типа.</summary>
      <param name="type">Тип создаваемого экземпляра.</param>
      <param name="arguments">Параметры конструктора типа. Для вызова конструктора без параметров возможно значение <see langword="null" /> или пустая коллекция.</param>
      <param name="name">Имя объекта. Если значение <see langword="null" />, объекту не будет задано имя, пока объект не будет добавлен в контейнер, где ему будет назначено имя.</param>
      <param name="addToContainer">Значение <see langword="true" /> для добавления объекта в контейнер, если объект реализует <see cref="T:System.ComponentModel.IComponent" />; в противном случае — <see langword="false" />.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Параметр <paramref name="type" /> не имеет конструктора, который принимает параметры, содержащиеся в <paramref name="arguments" />.</exception>
      <returns>Новый экземпляр типа, указанного <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary>Создает новый сеанс сериализации.</summary>
      <exception cref="T:System.InvalidOperationException">Диспетчер сериализации уже находится в сеансе. Эта версия <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> не поддерживает одновременные сеансы.</exception>
      <returns>Объект <see cref="T:System.IDisposable" /> представляет новый сеанс сериализации.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary>Получает тип, соответствующий указанному имени типа.</summary>
      <param name="typeName">Имя получаемого типа.</param>
      <returns>Заданный тип.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>Задает сериализатор для указанного типа объекта.</summary>
      <param name="objectType">Тип объекта, для которого загружается сериализатор.</param>
      <param name="serializerType">Тип загружаемого сериализатора.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="objectType" /> или <paramref name="serializerType" /> имеет значение <see langword="null" />.</exception>
      <returns>Сериализатор для типа <paramref name="objectType" /> или значение <see langword="null" />, если он не найден.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary>Возвращает запрашиваемую службу.</summary>
      <param name="serviceType">Тип возвращаемой службы.</param>
      <returns>Запрашиваемая служба или значение <see langword="null" />, если не удается разрешить службу.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary>Возвращает требуемый тип.</summary>
      <param name="typeName">Имя загружаемого типа.</param>
      <returns>Запрашиваемый тип или значение <see langword="null" />, если не удается разрешить тип.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />.</summary>
      <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />.</summary>
      <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Добавляет диспетчеру сериализации пользовательский поставщик сериализации.</summary>
      <param name="provider">Добавляемый поставщик сериализации.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Реализует метод <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />.</summary>
      <param name="type">Создаваемый тип данных.</param>
      <param name="arguments">Аргументы, передаваемые конструктору для данного типа.</param>
      <param name="name">Имя объекта. Это имя используется для доступа к объекту через класс <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />. Если передается значение <see langword="null" />, объект создается, но к нему нельзя получить доступ по имени.</param>
      <param name="addToContainer">Значение <see langword="true" /> для добавления этого объекта в контейнер конструктора. Для этого объект должен реализовать класс <see cref="T:System.ComponentModel.IComponent" />.</param>
      <returns>Только что созданный экземпляр объекта.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary>Извлекает экземпляр созданного объекта с указанным именем.</summary>
      <param name="name">Имя получаемого объекта.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Доступ к данному свойству получен за пределами сеанса сериализации.</exception>
      <returns>Экземпляр объекта с заданным именем либо значение <see langword="null" />, если не удается найти объект с указанным именем.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary>Загружает имя для указанного объекта.</summary>
      <param name="value">Объект, для которого загружается имя.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Доступ к данному свойству получен за пределами сеанса сериализации.</exception>
      <returns>Имя объекта или значение <see langword="null" />, если у объекта нет имени.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary>Получает сериализатор запрошенного типа для указанного типа объекта.</summary>
      <param name="objectType">Тип объекта, для которого получается сериализатор.</param>
      <param name="serializerType">Тип загружаемого сериализатора.</param>
      <returns>Экземпляр запрошенного типа или значение <see langword="null" />, если не удается найти соответствующий сериализатор.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary>Возвращает тип указанного имени.</summary>
      <param name="typeName">Полное имя загружаемого типа.</param>
      <exception cref="T:System.InvalidOperationException">Доступ к данному свойству получен за пределами сеанса сериализации.</exception>
      <returns>Экземпляр типа или значение <see langword="null" />, если не удается загрузить тип.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Удаляет поставщика сериализации, который был добавлен ранее.</summary>
      <param name="provider">Объект <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> для удаления.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary>Используется для создания сообщений об обратимых ошибках в процессе сериализации.</summary>
      <param name="errorInformation">Объект, содержащий информацию об ошибках, обычно является типом <see cref="T:System.String" /> или <see cref="T:System.Exception" />.</param>
      <exception cref="T:System.InvalidOperationException">Доступ к данному свойству получен за пределами сеанса сериализации.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary>Задает имя для указанного объекта.</summary>
      <param name="instance">Объект, для которого задается имя.</param>
      <param name="name">Строка <see cref="T:System.String" />, используемая в качестве имени объекта.</param>
      <exception cref="T:System.ArgumentNullException">По меньшей мере один параметр имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">У объекта, указанного экземпляром, уже есть имя, или имя <paramref name="name" /> уже используется другим именованным объектом.</exception>
      <exception cref="T:System.InvalidOperationException">Доступ к данному свойству получен за пределами сеанса сериализации.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary>Описание этого элемента содержится в методе <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</summary>
      <param name="serviceType">Объект, определяющий тип объекта службы, который необходимо получить.</param>
      <returns>Объект обслуживания типа <paramref name="serviceType" />.  
  
-или- 
 Значение <see langword="null" />, если отсутствует объект службы типа <paramref name="serviceType" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary>Возвращает или задает контейнер для данного диспетчера сериализации.</summary>
      <exception cref="T:System.InvalidOperationException">Диспетчер сериализации в активном сеансе сериализации.</exception>
      <returns>Контейнер <see cref="T:System.ComponentModel.IContainer" />, в который диспетчер сериализации добавит компоненты.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary>Возвращает список ошибок, которые возникли в процессе сериализации или десериализации.</summary>
      <exception cref="T:System.InvalidOperationException">Доступ к данному свойству получен за пределами сеанса сериализации.</exception>
      <returns>Список ошибок, которые возникли в процессе сериализации или десериализации.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary>Возвращает или задает значение, указывающее на то, выполнять ли методу <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> проверку на наличие заданных имен в контейнере.</summary>
      <exception cref="T:System.InvalidOperationException">Это свойство было изменено вне сеанса сериализации.</exception>
      <returns>Значение <see langword="true" />, если метод <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> передаст заданное имя компонента; значение <see langword="false" />, если метод <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> проверит наличие заданных имен в контейнере. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary>Возвращает объект, используемый для предоставления свойств для свойства диспетчера сериализации <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />.</summary>
      <returns>Объект, используемый для предоставления свойств для свойства диспетчера сериализации <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary>Получает или задает значение для обозначения, будет ли метод <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> всегда создавать новый экземпляр типа.</summary>
      <exception cref="T:System.InvalidOperationException">Диспетчер сериализации в активном сеансе сериализации.</exception>
      <returns>Значение <see langword="true" />, если метод <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> возвращает существующий экземпляр; значение <see langword="false" />, если метод <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> создает новый экземпляр типа. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary>Задает стек контекста для этого сеанса сериализации.</summary>
      <exception cref="T:System.InvalidOperationException">Доступ к данному свойству получен за пределами сеанса сериализации.</exception>
      <returns>Класс <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />, где хранятся данные.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary>Реализует свойство <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />.</summary>
      <returns>Класс <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, содержащий свойства, подлежащие сериализации.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary>Получает или задает значение, указывающее, будет ли метод <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> проверять то, что соответствующие имена относятся к одному и тому же типу.</summary>
      <exception cref="T:System.InvalidOperationException">Диспетчер сериализации в активном сеансе сериализации.</exception>
      <returns>Значение <see langword="true" />, если метод <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> проверяет типы; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary>Предоставляет средство передачи состояния контекста сериализаторам. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> с указанным выражением и владельцем.</summary>
      <param name="expression">Заданное выражение кода.</param>
      <param name="expressionType">Тип заданного выражения кода.</param>
      <param name="owner">Владелец заданного выражения кода.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="expression" />, <paramref name="expressionType" /> или <paramref name="owner" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> с использованием текущего значения.</summary>
      <param name="expression">Заданное выражение кода.</param>
      <param name="expressionType">Тип заданного выражения кода.</param>
      <param name="owner">Владелец заданного выражения кода.</param>
      <param name="presetValue">Предустановленное значение заданного выражения кода.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="expression" />, <paramref name="expressionType" /> или <paramref name="owner" /> равно <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary>Возвращает выражение, представленное контекстом.</summary>
      <returns>Выражение, представленное контекстом.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary>Возвращает свойство <see cref="T:System.Type" /> выражения.</summary>
      <returns>Тип <see cref="T:System.Type" /> выражения.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary>Возвращает объект, владеющий этим выражением.</summary>
      <returns>Объект, владеющий этим выражением.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary>Возвращает заранее установленное значение выражения.</summary>
      <returns>Заранее установленное значение этого выражения или значение <see langword="null" />, если не назначено.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload">
      <summary>Предоставляет интерфейс, который можно использовать для оптимизации процесса перезагрузки конструктора.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner(System.CodeDom.CodeCompileUnit)">
      <summary>Указывает на необходимость перезагрузки конструктора, чтобы обеспечить правильное выполнение импорта заданной единицы компиляции.</summary>
      <param name="newTree">Класс <see cref="T:System.CodeDom.CodeCompileUnit" />, содержащий код документа конструктора.</param>
      <returns>Значение <see langword="true" />, если конструктор следует перезагрузить; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary>Предоставляет базовый класс для сериализации примитива отражения в графе объекта.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary>Выполняет сериализацию дескриптора элемента по заданному значению для сборника инструкций.</summary>
      <param name="manager">Диспетчер сериализации для использования при выполнении сериализации.</param>
      <param name="value">Объект, с которым связан элемент.</param>
      <param name="descriptor">Дескриптор элемента для выполнения сериализации.</param>
      <param name="statements">Класс <see cref="T:System.CodeDom.CodeStatementCollection" />, в который будет сериализован <paramref name="descriptor" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Определяет, необходимо ли выполнять сериализацию элемента.</summary>
      <param name="manager">Диспетчер сериализации для использования при выполнении сериализации.</param>
      <param name="value">Объект, с которым связан элемент.</param>
      <param name="descriptor">Дескриптор элемента для выполнения сериализации.</param>
      <returns>Значение <see langword="true" />, если необходимо выполнить сериализацию описанного в <paramref name="descriptor" /> элемента; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary>Содержит таблицу операторов, предложенных классом <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary>Определяет, содержит ли таблица заданного владельца оператора.</summary>
      <param name="statementOwner">Владелец коллекции операторов.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> имеет значение <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если параметр <paramref name="statementOwner" /> в таблице; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary>Заполняет таблицу операторов коллекцией владельцев операторов.</summary>
      <param name="statementOwners">Коллекция владельцев операторов для добавления в таблицу.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary>Заполняет таблицу операторов владельцем оператора.</summary>
      <param name="owner">Владелец оператора для добавления в таблицу.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Описание этого элемента содержится в методе <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary>Возвращает коллекцию операторов для заданного владельца.</summary>
      <param name="statementOwner">Владелец коллекции операторов.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> имеет значение <see langword="null" />.</exception>
      <returns>Коллекции операторов для значения параметра <paramref name="statementOwner" /> или значения <see langword="null" /> параметра <paramref name="statementOwner" /> нет в таблице.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary>Объект <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> добавляет корневой контекст для предоставления определения корневого объекта.  Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.RootContext" />.</summary>
      <param name="expression">Выражение, представляющее корневой объект в графе объектов.</param>
      <param name="value">Корневой объект графы объектов.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary>Возвращает выражение, представляющее корневой объект в графе объектов.</summary>
      <returns>Выражение <see cref="T:System.CodeDom.CodeExpression" />, представляющее корневой объект в графе объектов.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary>Возвращает корневой объект графы объектов.</summary>
      <returns>Корневой объект графы объектов.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary>Указывает, что сериализаторы должны описывать значения по умолчанию. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> с параметром привязки к указанному элементу.</summary>
      <param name="member">Элемент, с которым связан этот контекст. Может иметь значение <see langword="null" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary>Возвращает значение, указывающее, необходимо ли выполнять сериализацию указанного элемента в этом контексте.</summary>
      <param name="member">Элемент, анализируемый для сериализации.</param>
      <returns>Значение <see langword="true" />, если сериализация указанного элемента выполняется в этом контексте; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary>Возвращает элемент, с которым связан этот контекст.</summary>
      <returns>Участник, с которым связан этот контекст, или значение <see langword="null" />, если контекст связан со всеми элементами объекта.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary>Предоставляет расположение, в которое может выполняться сериализация операторов. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary>Возвращает коллекцию инструкций, предложенных контекстом инструкций.</summary>
      <returns>Коллекция <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />, содержащая инструкции, предложенные контекстом инструкций.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary>Выполняет сериализацию объекта нового типа.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>Выполняет десериализацию объявления заданного типа.</summary>
      <param name="manager">Диспетчер сериализации для использования при выполнении сериализации.</param>
      <param name="declaration">Объявление типа для использования при выполнении сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="typeDecl" /> имеет значение <see langword="null" />.</exception>
      <returns>Корневой объект.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary>Возвращает метод, в котором хранятся инструкции, используемые для сериализации элемента.</summary>
      <param name="manager">Диспетчер сериализации для использования при выполнении сериализации.</param>
      <param name="declaration">Объявление типа, которое должно использоваться для сериализации.</param>
      <param name="value">Значение, которое должно использоваться для сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="manager" />, <paramref name="typeDecl" /> или <paramref name="value" /> равно <see langword="null" />.</exception>
      <returns>Метод, используемый для создания всех кодов инициализации для заданного элемента.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>Возвращает массив методов, предназначенных для интерпретации в процессе десериализации.</summary>
      <param name="manager">Диспетчер сериализации для использования при выполнении сериализации.</param>
      <param name="declaration">Объявление типа, которое должно использоваться для сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="typeDecl" /> имеет значение <see langword="null" />.</exception>
      <returns>Массив <see cref="T:System.CodeDom.CodeMemberMethod" /> методов, предназначенных для интерпретации в процессе десериализации.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary>Выполняет сериализацию корня объекта путем создания объявления нового типа, определяющего корень.</summary>
      <param name="manager">Диспетчер сериализации для использования при выполнении сериализации.</param>
      <param name="root">Объект для сериализации.</param>
      <param name="members">Необязательная коллекция элементов. Возможно значение <see langword="null" /> или пустое значение.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="root" /> имеет значение <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeDeclaration" />, определяющий корневой объект.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary>Определяет универсальную функциональность отмены и повтора действия во время разработки.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary>Возникает непосредственно перед выполнением действия отмены.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary>Возникает непосредственно после выполнения действия отмены.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <param name="provider">Поставщик родительской службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Не удается найти требуемую службу. Требуемые службы см. в <see cref="T:System.ComponentModel.Design.UndoEngine" />. Если эта служба была удалена, убедитесь, что для нее предоставлена замена.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>Добавляет объект <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> в стек отмены.</summary>
      <param name="unit">Отменяемый блок для добавления</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary>Создает новый экземпляр <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="name">Имя создаваемого блока.</param>
      <param name="primary">Значение <see langword="true" /> для создания первого вложенного блока из последовательности; значение <see langword="false" /> для создания последующих вложенных блоков.</param>
      <returns>Новый <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> с указанным именем.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>Обнуляет объект <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="unit">Обнуляемый блок.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.UndoEngine" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary>Возвращает запрашиваемую службу.</summary>
      <param name="serviceType">Тип возвращаемой службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="serviceType" /> является обязательным, однако его не удается найти. Если эта служба была удалена, убедитесь, что для нее предоставлена замена.</exception>
      <returns>Возвращает запрошенную службу при ее обнаружении.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary>Возвращает запрашиваемую службу.</summary>
      <param name="serviceType">Тип возвращаемой службы.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> имеет значение <see langword="null" />.</exception>
      <returns>Запрашиваемая служба или значение <see langword="null" />, если не удается найти требуемую службу.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" />.</summary>
      <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" />.</summary>
      <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary>Включает или отключает объект <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <returns>Значение <see langword="true" />, если параметр <see cref="T:System.ComponentModel.Design.UndoEngine" /> включен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary>Определяет, выполняется ли действие отмены.</summary>
      <returns>Значение <see langword="true" />, если действие отмены выполняется; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary>Инкапсулирует блок работы, который может быть отменен пользователем.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="engine">Ядро отмены, владеющее данным блоком отмены.</param>
      <param name="name">Имя данного блока отмены.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="engine" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary>Получает вызов от ядра отмены закрыть этот блок.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Получает вызов от объекта <see cref="T:System.ComponentModel.Design.UndoEngine" /> в ответ на событие <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Получает вызов от объекта <see cref="T:System.ComponentModel.Design.UndoEngine" /> в ответ на событие <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Получает вызов от объекта <see cref="T:System.ComponentModel.Design.UndoEngine" /> в ответ на событие <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>Получает вызов от объекта <see cref="T:System.ComponentModel.Design.UndoEngine" /> в ответ на событие <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Получает вызов от объекта <see cref="T:System.ComponentModel.Design.UndoEngine" /> в ответ на событие <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Получает вызов от объекта <see cref="T:System.ComponentModel.Design.UndoEngine" /> в ответ на событие <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary>Получает вызов от объекта <see cref="T:System.ComponentModel.Design.UndoEngine" /> в ответ на событие <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary>Получает экземпляр запрошенной службы.</summary>
      <param name="serviceType">Тип возвращаемой службы.</param>
      <returns>Экземпляр заданной службы или значение <see langword="null" />, если службу не удается разрешить.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, представляющий текущее имя блока.</summary>
      <returns>Объект <see cref="T:System.String" />, представляющий текущее имя блока.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary>Выполняет действие отмены или повтора.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary>Вызывается методом <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />, для выполнения действия отмены.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary>Возвращает значение, определяющее, отсутствуют ли события в объекте <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> не содержит событий; в обратном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary>Возвращает имя <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <returns>Имя <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary>Возвращает родительскую модель <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />.</summary>
      <returns>Объект <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />, к которому присоединен этот элемент <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.BitmapEditor">
      <summary>Предоставляет пользовательский интерфейс для выбора файлов растрового изображения в обозревателе свойств.</summary>
    </member>
    <member name="F:System.Drawing.Design.BitmapEditor.BitmapExtensions">
      <summary>Предоставляет список расширений файлов по умолчанию, используемый для фильтрации списка файлов.</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.BitmapEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetExtensions">
      <summary>Получает расширения для фильтра списка файлов, который использует редактор для первоначальной фильтрации списка файлов.</summary>
      <returns>Стандартный набор расширений файлов, используемый для фильтрации списка файлов.</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetFileDialogDescription">
      <summary>Возвращает описание стандартного фильтра списка файлов, обеспечиваемого этим редактором.</summary>
      <returns>Описание типа файлов по умолчанию для фильтрации списка файлов.</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.LoadFromStream(System.IO.Stream)">
      <summary>Загружает изображение из указанного потока.</summary>
      <param name="stream">Поток, из которого загружается изображение.</param>
      <returns>Объект <see cref="T:System.Drawing.Image" />, загруженный из потока.</returns>
    </member>
    <member name="T:System.Drawing.Design.ColorEditor">
      <summary>Предоставляет объект <see cref="T:System.Drawing.Design.UITypeEditor" /> для визуального выбора цвета.</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.ColorEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение заданного объекта с использованием стиля редактирования, предоставленного методом <see cref="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <param name="provider">Поставщик служб <see cref="T:System.IServiceProvider" />, при помощи которого можно получить службы редактирования.</param>
      <param name="value">Экземпляр редактируемого значения.</param>
      <returns>Новое значение объекта. Если значение объекта не изменилось, должен быть возвращен переданный объект.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Получает стиль редактирования метода Edit. Если метод не поддерживается, возвращается значение <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Значение перечисления, соответствующее предоставленному стилю редактирования.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Возвращает значение, указывающее, поддерживает ли данный редактор отрисовку визуального представления значения объекта.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Значение <see langword="true" />, если реализован класс <see cref="Overload:System.Drawing.Design.ColorEditor.PaintValue" />, в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Рисует визуальное представление значения данного объекта на предоставленной основе.</summary>
      <param name="e">Объект и место отрисовки.</param>
    </member>
    <member name="T:System.Drawing.Design.ContentAlignmentEditor">
      <summary>Предоставляет редактор <see cref="T:System.Drawing.Design.UITypeEditor" /> для визуального изменения выравнивания содержимого.</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.ContentAlignmentEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение заданного объекта с использованием стиля редактирования, предоставленного методом <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <param name="provider">Поставщик служб <see cref="T:System.IServiceProvider" />, при помощи которого можно получить службы редактирования.</param>
      <param name="value">Экземпляр редактируемого значения.</param>
      <returns>Новое значение объекта. Если значение объекта не изменилось, должен быть возвращен переданный объект.</returns>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Возвращает стиль редактирования метода <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.EditValue" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Значение перечисления <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />, соответствующее предоставленному стилю редактирования. Если метод для извлечения стиля редактирования не поддерживается данный метод возвратит идентификатор <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.CursorEditor">
      <summary>Предоставляет объект <see cref="T:System.Drawing.Design.UITypeEditor" />, который может выполнять стандартный поиск файлов курсора (CUR-файлов).</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.CursorEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение заданного объекта с использованием стиля редактирования, предоставленного методом <see cref="Overload:System.Drawing.Design.CursorEditor.GetEditStyle" />.</summary>
      <param name="context">Контекст дескриптора типа, используемый для предоставления дополнительной контекстной информации.</param>
      <param name="provider">Объект поставщика услуг, с помощью которого можно получить услуги редактирования.</param>
      <param name="value">Экземпляр редактируемого значения.</param>
      <returns>Новое значение объекта. Если значение объекта не изменилось, должен быть возвращен переданный объект.</returns>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Извлекает стиль редактирования метода <see cref="Overload:System.Drawing.Design.CursorEditor.EditValue" />.</summary>
      <param name="context">Контекст дескриптора типа, используемый для предоставления дополнительной контекстной информации.</param>
      <returns>Значение перечисления, соответствующее предоставленному стилю редактирования. Если метод не поддерживается, возвращается значение <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.CursorEditor.IsDropDownResizable">
      <summary>Возвращает значение, указывающее, должен ли пользователь иметь возможность изменять размер редакторов с раскрывающимися списками.</summary>
      <returns>Значение <see langword="true" />, если предоставлена возможность изменять размер редакторов с раскрывающимися списками; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.FontEditor">
      <summary>Предоставляет интерфейс пользователя для выбора и настройки объекта <see cref="T:System.Drawing.Font" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.FontEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение заданного объекта, используя стиль редактирования, указанный с помощью метода <see cref="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <param name="provider">Поставщик <see cref="T:System.IServiceProvider" />, который этот редактор может использовать для получения услуг.</param>
      <param name="value">Редактируемый объект.</param>
      <returns>Новое значение объекта. Если значение объекта не изменилось, то необходимо вернуть тот же самый объект, который был послан.</returns>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Получает стиль редактирования, используемый методом <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Значение перечисления <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />, которое указывает стиль редактирования, используемый методом <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.FontNameEditor">
      <summary>Предоставляет объект <see cref="T:System.Drawing.Design.UITypeEditor" />, выполняющий рисование глифа для определенного имени шрифта.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.FontNameEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Определяет, поддерживает ли данный редактор рисование графического представления значения объекта.</summary>
      <param name="context">Контекст дескриптора типа, используемый для предоставления дополнительной контекстной информации.</param>
      <returns>Значение <see langword="true" />, если реализован класс <see cref="Overload:System.Drawing.Design.FontNameEditor.PaintValue" />, в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Рисует визуальное представление значения данного объекта на предоставленной основе. Рисование должно выполняться в границах предоставленного прямоугольника.</summary>
      <param name="e">Объект и место отрисовки.</param>
    </member>
    <member name="T:System.Drawing.Design.IconEditor">
      <summary>Предоставляет редактор <see cref="T:System.Drawing.Design.UITypeEditor" /> для визуального выбора значка.</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.IconEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)">
      <summary>Создает и возвращает строку, представляющую допустимые расширения файлов для значков.</summary>
      <param name="extensions">Массив строк, в которых содержатся допустимые расширения файлов.</param>
      <param name="sep">Строка, определяющая знак разделителя.</param>
      <returns>Строка, содержащая расширения файлов значков, либо значение <see langword="null" />, если параметр <paramref name="extensions" /> имеет значение <see langword="null" /> или пуст.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateFilterEntry(System.Drawing.Design.IconEditor)">
      <summary>Создает строку фильтра для диалогового окна файлов.</summary>
      <param name="editor">Редактор <see cref="T:System.Drawing.Design.IconEditor" />, для которого будет создана строка фильтра.</param>
      <returns>Строка фильтра, созданная на основе строки, которая возвращается методом <see cref="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение заданного объекта с использованием стиля редактирования, предоставленного методом <see cref="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Контекст дескриптора типа, используемый для предоставления дополнительной контекстной информации.</param>
      <param name="provider">Объект поставщика услуг, с помощью которого можно получить услуги редактирования.</param>
      <param name="value">Экземпляр редактируемого значения.</param>
      <returns>Новое значение объекта. Если значение объекта не изменилось, должен быть возвращен переданный объект.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Извлекает стиль редактирования метода <see cref="Overload:System.Drawing.Design.IconEditor.EditValue" />.</summary>
      <param name="context">Контекст дескриптора типа, используемый для предоставления дополнительной контекстной информации.</param>
      <returns>Одно из значений <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />, определяющих предоставленный стиль редактирования.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetExtensions">
      <summary>Извлекает массив допустимых расширений файлов для значков.</summary>
      <returns>Массив допустимых расширений файлов для значков.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetFileDialogDescription">
      <summary>Возвращает описание стандартного фильтра списка файлов, обеспечиваемого этим редактором.</summary>
      <returns>Описание типа файлов по умолчанию для фильтрации списка файлов.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Определяет, поддерживает ли данный редактор рисование графического представления значения объекта.</summary>
      <param name="context">Контекст дескриптора типа, используемый для предоставления дополнительной контекстной информации.</param>
      <returns>Значение <see langword="true" />, если реализован класс <see cref="Overload:System.Drawing.Design.UITypeEditor.PaintValue" />, в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.LoadFromStream(System.IO.Stream)">
      <summary>Создает новый объект <see cref="T:System.Drawing.Icon" /> из заданного потока.</summary>
      <param name="stream">Исходный поток, из которого будет создан значок.</param>
      <returns>Вновь созданный <see cref="T:System.Drawing.Icon" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Рисует визуальное представление значения данного объекта на предоставленной основе.</summary>
      <param name="e">Объект и место отрисовки.</param>
    </member>
    <member name="T:System.Drawing.Design.ImageEditor">
      <summary>Предоставляет пользовательский интерфейс для выбора изображения свойства в сетке свойств.</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.ImageEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateExtensionsString(System.String[],System.String)">
      <summary>Создает строку расширений имен файлов, используя указанный массив расширений файлов и заданный разделитель</summary>
      <param name="extensions">Фильтруемые расширения.</param>
      <param name="sep">Используемый разделитель.</param>
      <returns>Строка, содержащая указанные расширения имен файлов с определенными разделителями.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateFilterEntry(System.Drawing.Design.ImageEditor)">
      <summary>Создает запись фильтра для диалогового окна списка файлов.</summary>
      <param name="e">Объект <see cref="T:System.Drawing.Design.ImageEditor" />, из которого должна быть получена запись фильтра.</param>
      <returns>Строка новой записи фильтра.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение заданного объекта с использованием стиля редактирования, предоставленного методом <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <param name="provider">Поставщик служб <see cref="T:System.IServiceProvider" />, при помощи которого можно получить службы редактирования.</param>
      <param name="value">Редактируемый объект <see cref="T:System.Object" />.</param>
      <returns>Объект <see cref="T:System.Object" />, представляющий новое значение. Если значение объекта не изменилось, метод <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> возвращает переданный в него объект.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Возвращает стиль редактирования метода <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Одно из значений <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />, определяющих поддерживаемый стиль редактирования.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetExtensions">
      <summary>Получает расширения для фильтра списка файлов, который изначально используется этим редактором для фильтрации списка файлов.</summary>
      <returns>Набор расширений файлов, используемый для фильтрации списка файлов.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetFileDialogDescription">
      <summary>Получает описание фильтра списка файлов по умолчанию, предоставляемого этим редактором.</summary>
      <returns>Описание для фильтра списка файлов по умолчанию.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetImageExtenders">
      <summary>Получает массив поддерживаемых типов изображений.</summary>
      <returns>Массив типов <see cref="T:System.Type" />, представляющих поддерживаемые типы изображений.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Получает значение, указывающее, поддерживает ли данный редактор художественное оформление значения объекта.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Значение <see langword="true" />, если реализован класс <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />, в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.LoadFromStream(System.IO.Stream)">
      <summary>Загружает изображение из указанного потока.</summary>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, содержащий изображение для загрузки.</param>
      <returns>Изображение <see cref="T:System.Drawing.Image" />, которое было загружено.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Рисует значение, определенное заданным аргументом <see cref="T:System.Drawing.Design.PaintValueEventArgs" />.</summary>
      <param name="e">Аргумент <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> указывает объект и место для рисования.</param>
    </member>
    <member name="T:System.Drawing.Design.IToolboxItemProvider">
      <summary>Предоставляет коллекцию элементов панели инструментов.</summary>
    </member>
    <member name="P:System.Drawing.Design.IToolboxItemProvider.Items">
      <summary>Получает коллекцию объектов <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary>Обеспечивает методы и свойства для управления панелью инструментов в среде разработки и выполнения запросов к этой панели.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary>Добавляет создатель нового элемента панели инструментов для заданного формата данных.</summary>
      <param name="creator">Объект <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />, который может создавать компонент при обращении к элементу панели инструментов.</param>
      <param name="format">Формат данных, которым управляет создатель.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Добавляет создатель нового элемента панели инструментов для заданных формата данных и хост-узла конструктора.</summary>
      <param name="creator">Объект <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />, который может создавать компонент при обращении к элементу панели инструментов.</param>
      <param name="format">Формат данных, которым управляет создатель.</param>
      <param name="host">Объект <see cref="T:System.ComponentModel.Design.IDesignerHost" /> представляет хост-узел конструктора, который должен быть сопоставлен создателю.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary>Добавляет заданный связанный с проектом элемент на панель инструментов.</summary>
      <param name="toolboxItem">Связанный объект <see cref="T:System.Drawing.Design.ToolboxItem" />, который требуется добавить на панель инструментов.</param>
      <param name="host">Интерфейс <see cref="T:System.ComponentModel.Design.IDesignerHost" /> для текущего документа проекта.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Добавляет на панель инструментов заданный связанный с проектом элемент определенной категории.</summary>
      <param name="toolboxItem">Связанный объект <see cref="T:System.Drawing.Design.ToolboxItem" />, который требуется добавить на панель инструментов.</param>
      <param name="category">Категория элементов панели инструментов, в которую следует добавить элемент панели инструментов.</param>
      <param name="host">Интерфейс <see cref="T:System.ComponentModel.Design.IDesignerHost" /> для текущего документа проекта.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Добавляет заданный элемент панели инструментов на панель инструментов.</summary>
      <param name="toolboxItem">Объект <see cref="T:System.Drawing.Design.ToolboxItem" />, который требуется добавить на панель инструментов.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>Добавляет указанный элемент заданной категории на панель инструментов.</summary>
      <param name="toolboxItem">Объект <see cref="T:System.Drawing.Design.ToolboxItem" />, который требуется добавить на панель инструментов.</param>
      <param name="category">Категория элементов панели инструментов, в которую должен быть добавлен объект <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary>Получает элемент панели инструментов из указанного объекта, который представляет элемент панели в сериализованной форме.</summary>
      <param name="serializedObject">Объект, содержащий объект <see cref="T:System.Drawing.Design.ToolboxItem" /> для извлечения.</param>
      <returns>Объект <see cref="T:System.Drawing.Design.ToolboxItem" />, созданный на основе сериализованного объекта.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Получает элемент панели инструментов из указанного объекта, который представляет элемент панели в сериализованной форме, с помощью указанного узла конструктора.</summary>
      <param name="serializedObject">Объект, содержащий объект <see cref="T:System.Drawing.Design.ToolboxItem" /> для извлечения.</param>
      <param name="host">Объект <see cref="T:System.ComponentModel.Design.IDesignerHost" />, с которым требуется связать данный <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns>Объект <see cref="T:System.Drawing.Design.ToolboxItem" />, созданный в результате десериализации.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary>Получает выбранный в данный момент элемент панели инструментов.</summary>
      <returns>Объект <see cref="T:System.Drawing.Design.ToolboxItem" />, который выбран в данный момент, либо значение <see langword="null" />, если ни один элемент панели инструментов не выбран.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary>Получает выбранный в данный момент элемент панели инструментов, если это доступно для всех конструкторов или поддерживает определенный конструктор.</summary>
      <param name="host">Интерфейс <see cref="T:System.ComponentModel.Design.IDesignerHost" />, с которым должно быть сопоставлено выбранное средство для его возвращения.</param>
      <returns>Объект <see cref="T:System.Drawing.Design.ToolboxItem" />, который выбран в данный момент, либо значение <see langword="null" />, если ни один элемент панели инструментов не выбран.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary>Получает полную коллекцию элементов панели инструментов из панели инструментов.</summary>
      <returns>Коллекция <see cref="T:System.Drawing.Design.ToolboxItemCollection" />, содержащая текущие элементы панели инструментов.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary>Получает коллекцию элементов панели элементов, связанных с указанным узлом конструктора из панели элементов.</summary>
      <param name="host">Объект <see cref="T:System.ComponentModel.Design.IDesignerHost" />, который связан с извлекаемыми элементами панели инструментов.</param>
      <returns>Коллекция <see cref="T:System.Drawing.Design.ToolboxItemCollection" />, содержащая элементы панели инструментов, сопоставленные указанному хост-узлу конструктора.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary>Получает из панели инструментов коллекцию элементов определенной категории.</summary>
      <param name="category">Категория элемента панели инструментов, в которой необходимо извлечь все элементы из панели инструментов.</param>
      <returns>Коллекция <see cref="T:System.Drawing.Design.ToolboxItemCollection" />, которая содержит элементы текущей панели инструментов, сопоставленные указанной категории.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Получает из панели инструментов коллекцию элементов панели инструментов, которые сопоставлены указанным хост-узлу конструктора и категории.</summary>
      <param name="category">Категория элемента панели инструмента, из которой необходимо извлечь элементы панели инструментов.</param>
      <param name="host">Объект <see cref="T:System.ComponentModel.Design.IDesignerHost" />, который связан с извлекаемыми элементами панели инструментов.</param>
      <returns>Коллекция <see cref="T:System.Drawing.Design.ToolboxItemCollection" />, которая содержит элементы текущей панели инструментов, сопоставленные указанным хост-узлу конструктора и категории.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.Collections.ICollection)">
      <summary>Получает значение, определяющее, соответствует ли указанный объект, который представляет сериализованный элемент панели инструментов, заданным атрибутам.</summary>
      <param name="serializedObject">Объект, содержащий объект <see cref="T:System.Drawing.Design.ToolboxItem" /> для извлечения.</param>
      <param name="filterAttributes">Коллекция <see cref="T:System.Collections.ICollection" />, содержащая атрибуты для проверки сериализованных объектов.</param>
      <returns>Значение <see langword="true" />, если объект соответствует указанным атрибутам; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Получает значение, определяющее, может ли указанный объект, который представляет сериализованный элемент панели инструментов, быть использован указанным хост-узелом конструктора.</summary>
      <param name="serializedObject">Объект, содержащий объект <see cref="T:System.Drawing.Design.ToolboxItem" /> для извлечения.</param>
      <param name="host">Интерфейс <see cref="T:System.ComponentModel.Design.IDesignerHost" /> для проверки поддержки объекта <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns>Значение <see langword="true" />, если указанный объект совместим с указанным хост-узелом конструктора; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary>Получает значение, указывающее, является ли указанный объект сериализованным элементом панели инструментов.</summary>
      <param name="serializedObject">Объект для проверки.</param>
      <returns>Значение <see langword="true" />, если объект содержит объект элемента панели инструментов; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Получает значение, указывающее, является ли заданный объект сериализованным элементом панели инструментов, используя указанный хост-узел конструктора.</summary>
      <param name="serializedObject">Объект для проверки.</param>
      <param name="host">Объект <see cref="T:System.ComponentModel.Design.IDesignerHost" />, создающий этот запрос.</param>
      <returns>Значение <see langword="true" />, если объект содержит объект элемента панели инструментов; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary>Обновляет состояние элементов панели инструментов.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary>Удаляет ранее добавленный разработчик элемента панели инструментов для форматирования указанных данных.</summary>
      <param name="format">Формат данных разработчика, которые требуется удалить.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Удаляет ранее добавленный разработчик, который связан с указанным форматированием данных и определенным узелом конструктора.</summary>
      <param name="format">Формат данных разработчика, которые требуется удалить.</param>
      <param name="host">Объект <see cref="T:System.ComponentModel.Design.IDesignerHost" />, который связан с удаляемым разработчиком.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Удаляет заданный элемент панели инструментов из панели инструментов.</summary>
      <param name="toolboxItem">Объект <see cref="T:System.Drawing.Design.ToolboxItem" />, который нужно удалить из панели инструментов.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>Удаляет заданный элемент панели инструментов из панели инструментов.</summary>
      <param name="toolboxItem">Объект <see cref="T:System.Drawing.Design.ToolboxItem" />, который нужно удалить из панели инструментов.</param>
      <param name="category">Категория элемента панели инструментов, из которой требуется удалить из <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary>Уведомляет службу панели инструментов, что выбранное средство было использовано.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Получает сериализованный объект, который представляет выбранный элемент панели инструментов.</summary>
      <param name="toolboxItem">Экземпляр <see cref="T:System.Drawing.Design.ToolboxItem" /> для сериализации.</param>
      <returns>Объект, представляющий заданный объект <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetCursor">
      <summary>Устанавливает для курсора текущего приложения курсор, представляющий текущее выбранное средство.</summary>
      <returns>Значение <see langword="true" />, если курсор установлен с помощью выбранного в настоящий момент средства, значение <see langword="false" />, если ни одно средство не выбрано и курсор является стандартным курсором Windows.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Выбирает указанный элемент панели инструментов.</summary>
      <param name="toolboxItem">Необходимо выбрать <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary>Получает имена всех категорий средств имеющихся в данный момент на панели инструментов.</summary>
      <returns>Коллекция <see cref="T:System.Drawing.Design.CategoryNameCollection" />, содержащая категории средств.</returns>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary>Получает или задает имя выбранной в данный момент категории средств с панели инструментов.</summary>
      <returns>Имя текущей выбранной категории.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary>Определяет интерфейс для настройки выбранного в данный момент элемента панели инструментов и указания, поддерживает ли конструктор конкретный элемент панели инструментов.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Возвращает значение, определяющее, поддерживается ли указанное средство текущим конструктором.</summary>
      <param name="tool">Необходимо проверить, поддерживает ли панель элементов <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns>
        <see langword="true" />, если средство поддерживается панелью элементов и может быть включено; значение <see langword="false" />, если конструктор документа не знает, как использовать это средство.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Выбирает указанное средство.</summary>
      <param name="tool">Необходимо выбрать <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="T:System.Drawing.Design.MetafileEditor">
      <summary>Предоставляет объект <see cref="T:System.Drawing.Design.UITypeEditor" />, который может выполнять стандартный поиск метафайлов (EMF-файлов).</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.MetafileEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetExtensions">
      <summary>Получает расширения для фильтра списка файлов, который изначально используется этим редактором для фильтрации списка файлов.</summary>
      <returns>Набор расширений файлов, используемый для фильтрации списка файлов.</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetFileDialogDescription">
      <summary>Получает описание фильтра списка файлов по умолчанию, предоставляемого этим редактором.</summary>
      <returns>Описание для фильтра списка файлов по умолчанию.</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.LoadFromStream(System.IO.Stream)">
      <summary>Загружает изображение из указанного потока.</summary>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, содержащий изображение для загрузки.</param>
      <returns>Изображение <see cref="T:System.Drawing.Image" />, которое было загружено.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />, происходящего при добавлении компонентов на панель инструментов.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.#ctor(System.ComponentModel.IComponent[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />.</summary>
      <param name="components">Компоненты, которые нужно включить на панель инструментов.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary>Возвращает или задает массив, содержащий компоненты, добавляемые на панель инструментов.</summary>
      <returns>Массив объектов типа <see cref="T:System.ComponentModel.IComponent" />, определяющий компоненты, добавляемые на панель инструментов.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />, происходящего при добавлении компонентов на панель инструментов.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />.</summary>
      <param name="host">Хост-узел конструктора, создающего запрос.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.DesignerHost">
      <summary>Получает или задает экземпляр <see cref="T:System.ComponentModel.Design.IDesignerHost" />, выдавший запрос для создания компонентов панели инструментов.</summary>
      <returns>Интерфейс <see cref="T:System.ComponentModel.Design.IDesignerHost" />, выдавший запрос для создания компонентов панели инструментов, либо значение <see langword="null" />, если для элемента панели инструментов не был предоставлен хост-узел конструктора.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary>Обеспечивает базовую реализацию элемента панели инструментов.</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary>Происходит непосредственно после создания компонентов.</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary>Происходит непосредственно перед созданием компонентов.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.ToolboxItem" />, который создает определенный тип компонента.</summary>
      <param name="toolType">Тип <see cref="T:System.ComponentModel.IComponent" />, создаваемый элементом панели инструментов.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Drawing.Design.ToolboxItem" /> был заблокирован.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary>Выдает исключение, если элемент панели инструментов заблокирован в данный момент.</summary>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Drawing.Design.ToolboxItem" /> заблокирован.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary>Создает компоненты, для создания которых был сконфигурирован элемент панели инструментов.</summary>
      <returns>Массив созданных объектов интерфейса <see cref="T:System.ComponentModel.IComponent" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary>Создает компоненты, для создания которых был сконфигурирован элемент панели инструментов, используя указанный узел конструктора.</summary>
      <param name="host">Интерфейс <see cref="T:System.ComponentModel.Design.IDesignerHost" />, используемый при создании этих компонентов.</param>
      <returns>Массив созданных объектов интерфейса <see cref="T:System.ComponentModel.IComponent" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary>Создает компоненты, для создания которых был сконфигурирован элемент панели инструментов с использованием указанного узла конструктора и значений по умолчанию.</summary>
      <param name="host">Интерфейс <see cref="T:System.ComponentModel.Design.IDesignerHost" />, используемый при создании этих компонентов.</param>
      <param name="defaultValues">Словарь пар имя/значение для значений по умолчанию, с использованием которых выполняется инициализация компонента.</param>
      <returns>Массив созданных объектов интерфейса <see cref="T:System.ComponentModel.IComponent" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>Создает компонент или массив компонентов при вызове элемента панели инструментов.</summary>
      <param name="host">Интерфейс <see cref="T:System.ComponentModel.Design.IDesignerHost" /> для размещения элемента панели инструментов.</param>
      <returns>Массив созданных объектов интерфейса <see cref="T:System.ComponentModel.IComponent" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary>Создает массив компонентов при вызове элемента панели инструментов.</summary>
      <param name="host">Хост-узел конструктора, используемый при создании компонентов.</param>
      <param name="defaultValues">Словарь пар имя/значение для значений по умолчанию, с использованием которых выполняется инициализация компонента.</param>
      <returns>Массив созданных объектов интерфейса <see cref="T:System.ComponentModel.IComponent" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Загружает статус элемента панели элементов из указанного объекта сведений сериализации.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, и которого выполняется загрузка.</param>
      <param name="context">Класс <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий характеристики потока.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Equals(System.Object)">
      <summary>Определяет, равны ли два экземпляра <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <param name="obj">Объект <see cref="T:System.Drawing.Design.ToolboxItem" />, с которым сравнивается текущий объект <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns>Значение <see langword="true" />, если указанный объект <see cref="T:System.Drawing.Design.ToolboxItem" /> равен текущему объекту <see cref="T:System.Drawing.Design.ToolboxItem" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.FilterPropertyValue(System.String,System.Object)">
      <summary>Выполняет фильтрацию значения свойства перед его возвращением.</summary>
      <param name="propertyName">Имя отбираемого свойства.</param>
      <param name="value">Значение фильтра для свойства.</param>
      <returns>Значение отобранного свойства.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код для текущего объекта <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost)">
      <summary>Включает доступ к типу, который сопоставлен данному элементу панели инструментов.</summary>
      <param name="host">Хост-узел конструктора для запроса интерфейса <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />.</param>
      <returns>Тип, сопоставленный данному элементу панели инструментов.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary>Создает экземпляр указанного типа, при необходимости используя заданные узел конструктора и имя сборки.</summary>
      <param name="host">Объект <see cref="T:System.ComponentModel.Design.IDesignerHost" /> для текущего документа. Это может быть <see langword="null" />.</param>
      <param name="assemblyName">Объект <see cref="T:System.Reflection.AssemblyName" />, указывающий сборку, которая содержит загружаемый тип. Это может быть <see langword="null" />.</param>
      <param name="typeName">Имя типа создаваемого экземпляра.</param>
      <param name="reference">Значение, указывающее, добавлена или нет ссылка на сборку, которая содержит указанный тип, в набор ссылок узла конструктора.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> не задан.</exception>
      <returns>Экземпляр указанного типа, если он может быть обнаружен.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary>Инициализирует текущий элемент панели инструментов создаваемого типа.</summary>
      <param name="type">Тип <see cref="T:System.Type" />, создаваемый элементом панели инструментов.</param>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Drawing.Design.ToolboxItem" /> был заблокирован.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary>Блокирует элемент панели инструментов и предотвращает изменение его свойств.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />.</summary>
      <param name="args">Объект <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />.</summary>
      <param name="args">Объект <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Сохраняет состояние элемента панели элементов в указанный объект данных сериализации.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, в который выполняется сохранение.</param>
      <param name="context">Класс <see cref="T:System.Runtime.Serialization.StreamingContext" />, указывающий характеристики потока.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Описание этого элемента содержится в методе <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для заполнения данными.</param>
      <param name="context">Конечный объект (см. <see cref="T:System.Runtime.Serialization.StreamingContext" />) для этой сериализации.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary>Возвращает значение типа <see cref="T:System.String" />, представляющее текущий объект <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>Объект <see cref="T:System.String" />. представляющий текущий объект <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyType(System.String,System.Object,System.Type,System.Boolean)">
      <summary>Проверяет соответствие объекта заданному типу.</summary>
      <param name="propertyName">Имя проверяемого свойства.</param>
      <param name="value">Необязательное значение, по которому выполняется проверка.</param>
      <param name="expectedType">Ожидаемый тип свойства.</param>
      <param name="allowNull">Значение <see langword="true" />, если допустимо значение <see langword="null" />; в обратном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> равно <see langword="null" />, а <paramref name="allowNull" /> равно <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentException">Тип <paramref name="value" /> отличается от типа, заданного свойством <paramref name="expectedType" />.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyValue(System.String,System.Object)">
      <summary>Проверяет свойство перед его присваиванием словарю свойств.</summary>
      <param name="propertyName">Имя проверяемого свойства.</param>
      <param name="value">Значение, по которому выполняется проверка.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> равно <see langword="null" />, а параметр <paramref name="propertyName" /> имеет значение "IsTransient".</exception>
      <returns>Значение, используемое для выполнения проверки.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary>Получает или задает имя сборки, содержащей тип или типы, созданные элементом панели инструментов.</summary>
      <returns>Атрибут <see cref="T:System.Reflection.AssemblyName" />, указывающий сборку, которая содержит создаваемый тип или типы.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary>Получает или задает растровое изображение для представления элемента панели инструментов на панели.</summary>
      <returns>Объект <see cref="T:System.Drawing.Bitmap" />, представляющий элемент панели инструментов на панели.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Company">
      <summary>Получает или задает имя компании для данного объекта <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>Объект <see cref="T:System.String" />, который указывает компанию для этого объекта <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.ComponentType">
      <summary>Возвращает тип компонента для данного объекта <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>Объект <see cref="T:System.String" />, который указывает тип компонента для этого объекта <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DependentAssemblies">
      <summary>Получает или устанавливает объект <see cref="T:System.Reflection.AssemblyName" /> для элемента панели инструментов.</summary>
      <returns>Массив объектов <see cref="T:System.Reflection.AssemblyName" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Description">
      <summary>Получает или задает описание для этого компонента <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>Объект <see cref="T:System.String" />, который указывает описанию для этого объекта <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary>Получает или задает изображаемое имя для элемента панели инструментов.</summary>
      <returns>Изображаемое имя для данного элемента панели инструментов.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary>Получает или задает фильтр, определяющий, может ли элемент панели инструментов быть использован для конечного компонента.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" /> объектов <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.IsTransient">
      <summary>Возвращает значение, определяющее, является ли данный элемент панели инструментов переходным.</summary>
      <returns>Значение <see langword="true" />, если не следует хранить этот элемент панели инструментов при закрытии приложения, предоставляющего панель инструментов; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary>Возвращает значение, определяющее, заблокирован ли элемент <see cref="T:System.Drawing.Design.ToolboxItem" /> в текущий момент.</summary>
      <returns>Значение <see langword="true" />, если элемент панели инструментов заблокирован; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.OriginalBitmap">
      <summary>Возвращает или задает исходное растровое изображение, которое будет использоваться на панели инструментов для этого элемента.</summary>
      <returns>Объект <see cref="T:System.Drawing.Bitmap" />, представляющий элемент панели инструментов на панели.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Properties">
      <summary>Возвращает словарь свойств.</summary>
      <returns>Словарь пар имя/значения (имена являются именами свойств, а значения — значениями свойств).</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary>Получает или задает полное имя типа <see cref="T:System.ComponentModel.IComponent" />, который создает при вызове элемент панели инструментов.</summary>
      <returns>Полное имя типа компонента, который создал данный элемент панели инструментов.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Version">
      <summary>Возвращает версию для этого объекта <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>Объект <see cref="T:System.String" />, который указывает версию для этого объекта <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary>Представляет коллекцию элементов панели инструментов.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.ToolboxItemCollection" />, используя указанный массив элементов панели инструментов.</summary>
      <param name="value">Массив объектов типа <see cref="T:System.Drawing.Design.ToolboxItem" />, содержащий заполняющие коллекцию элементы панели инструментов.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> с использованием указанной коллекции.</summary>
      <param name="value">Коллекция <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> для заполнения новой коллекции.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary>Указывает, содержит ли коллекция заданный объект <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <param name="value">Объект <see cref="T:System.Drawing.Design.ToolboxItem" /> для поиска в коллекции.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит указанный объект; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary>Копирует коллекцию в указанный массив, начинающийся определенным индексом назначения.</summary>
      <param name="array">Массив для копирования данных.</param>
      <param name="index">Индекс, начиная с которого будет выполняться копирование.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary>Получает индекс указанного объекта <see cref="T:System.Drawing.Design.ToolboxItem" />, если он содержится в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Drawing.Design.ToolboxItem" />, получающий индекс в коллекции.</param>
      <returns>Индекс указанного объекта <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Drawing.Design.ToolboxItem" /> по указанному индексу.</summary>
      <param name="index">Индекс объекта, который требуется возвратить или задать.</param>
      <returns>Объект <see cref="T:System.Drawing.Design.ToolboxItem" /> для каждого допустимого в коллекции индекса.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary>Предоставляет механизм обратного вызова, который может создавать объект <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <param name="serializedObject">Объект, содержащий данные для создания <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <param name="format">Имя формата данных буфера обмена для создания объекта <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns>Десериализованный объект <see cref="T:System.Drawing.Design.ToolboxItem" />, заданный параметром <paramref name="serializedObject" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UCOMITypeLib">
      <summary>Взамен рекомендуется использовать <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>Возвращает строку документации библиотеки, полный файл справки и путь к нему, а также идентификатор контекста для раздела справки библиотеки в файле справки.</summary>
      <param name="index">Индекс описания типа, для которого возвращается документация.</param>
      <param name="strName">Возвращает строку, содержащую имя указанного элемента.</param>
      <param name="strDocString">Возвращает строку, содержащую строку документации для указанного элемента.</param>
      <param name="dwHelpContext">Возвращает идентификатор контекста справки, связанный с указанным элементом.</param>
      <param name="strHelpFile">Возвращает строку, содержащую полное имя файла справки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)">
      <summary>Возвращает структуру, содержащую атрибуты библиотеки.</summary>
      <param name="ppTLibAttr">При удачном возвращении — структура, содержащая атрибуты библиотеки.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoCount">
      <summary>Возвращает число описаний типов в библиотеке типов.</summary>
      <returns>Число описаний типов в библиотеке типов.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary>Возвращает тип описания типа.</summary>
      <param name="index">Индекс описания типа внутри библиотеки типов</param>
      <param name="pTKind">Ссылка на перечисление <see langword="TYPEKIND" /> для описания типа.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.IsName(System.String,System.Int32)">
      <summary>Показывает, содержит ли переданная строка имя типа или члена, описанного в библиотеке.</summary>
      <param name="szNameBuf">Строка для проверки.</param>
      <param name="lHashVal">Хэш-значение для <paramref name="szNameBuf" />.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="szNameBuf" /> обнаружен в библиотеке типов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary>Освобождает структуру <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" />, полученную из метода <see cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr">Освобождаемая структура <see langword="TLIBATTR" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AnchorEditor">
      <summary>Предоставляет пользовательский интерфейс для настройки свойства <see cref="P:System.Windows.Forms.Control.Anchor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.AnchorEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение указанного объекта с использованием заданного поставщика служб и контекста.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <param name="provider">Поставщик служб <see cref="T:System.IServiceProvider" />, при помощи которого можно получить службы редактирования.</param>
      <param name="value">Экземпляр редактируемого значения.</param>
      <returns>Новое значение объекта. Если значение объекта не изменилось, должен быть возвращен тот же переданный объект.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Получает стиль редактирования, используемый методом <see cref="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Одно из значений <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />, определяющих предоставленный стиль редактирования. Если метод не поддерживается, этот метод вернет значение <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary>Импортирует элементы управления ActiveX и создает оболочку, доступную конструктору.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.AxImporter" />.</summary>
      <param name="options">
        <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />, указывающий параметры для используемого средства импорта элементов управления ActiveX.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary>Предоставляет методы обработки ссылок к библиотекам ActiveX, библиотекам типов COM или сборкам, а также к управляемым сборкам.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>Обрабатывает ссылку к указанной библиотеке типов, которая содержит элемент управления ActiveX.</summary>
      <param name="typeLib">Библиотека типов <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />, ссылку к которой нужно обработать.</param>
      <returns>Полный путь к сборке.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary>Обрабатывает ссылку к указанной сборке, которая содержит компонент COM.</summary>
      <param name="name">Имя <see cref="T:System.Reflection.AssemblyName" />, определяющее сборку, ссылку на которую нужно обработать.</param>
      <returns>Полный путь к сборке.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>Обрабатывает ссылку к указанной библиотеке типов, которая содержит компонент COM.</summary>
      <param name="typeLib">Библиотека типов <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />, ссылку к которой нужно обработать.</param>
      <returns>Полный путь к сборке.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary>Обрабатывает ссылку на указанную сборку.</summary>
      <param name="assemName">Имя сборки, ссылку на которую нужно обработать.</param>
      <returns>Полный путь к сборке.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary>Предоставляет набор параметров для <see cref="T:System.Windows.Forms.Design.AxImporter" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary>Определяет, является ли созданная сборка строго именованной и будет ли она подписана позднее.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary>Определяет, необходимо ли создавать источники для оболочки библиотеки типов.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary>Определяет, будут ли использоваться только входные данные из командной строки, а не сведения из зарегистрированной версии.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary>Определяет путь к файлу, содержащему контейнер ключа строгого имени для созданных сборок.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary>Определяет путь к файлу, содержащему ключ строгого имени для созданных сборок.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary>Определяет строгое имя, используемое для созданных сборок.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary>Определяет, выводятся ли ошибки в формате Microsoft Build Engine (MSBuild).</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary>Указывает, отображать ли эмблему инструментария средства импорта ActiveX, когда элемент управления импортируется.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary>Определяет путь к каталогу, в котором будут сформированы созданные сборки.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary>Определяет имя файла для создания оболочки элемента управления ActiveX.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary>Определяет, перезаписать ли существующие файлы при создании сборок.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary>Определяет открытый ключ, используемый для подписи созданных сборок.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary>Определяет <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" /> для использования в обработке типов и ссылок при создании сборок.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary>Определяет, компилировать ли в режиме молчания, который создает меньше отображаемой информации во время компиляции.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary>Определяет, компилировать ли в расширенном режиме, который создает больше отображаемой информации во время компиляции.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary>Управляет коллекцией объектов <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, связанных с интерфейсом пользователя. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary>Инициирует обновление объектов <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> окна декоративного элемента.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary>Инициирует обновление окна графического элемента объектом <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> в рамках данного <see cref="T:System.Drawing.Rectangle" />.</summary>
      <param name="rectangle">Область, которая делается недействительной.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary>Инициирует обновление окна графического элемента объектом <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> в рамках данного <see cref="T:System.Drawing.Region" />.</summary>
      <param name="region">Объект <see cref="T:System.Drawing.Region" />, который делается недействительным.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary>Возвращает или задает объект <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />, связанный с объектом <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
      <returns>Объект <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />, связанный с объектом <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary>Получает или задает значение, определяющее, включен ли объект <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
      <returns>Значение <see langword="true" />, если включен <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary>Возвращает коллекцию <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary>Представляет объекты <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, управляемые данным службой <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> с заданным объектом <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="callParentBehavior">Значение равно <see langword="true" />, если нужно вызвать поведение родительского объекта, если оно существует, если нет, значение равно <see langword="false" />.</param>
      <param name="behaviorService">Используемый <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callParentBehavior" /> равно <see langword="true" />, а <paramref name="behaviorService" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>Перехватывание команд.</summary>
      <param name="commandId">Объект <see cref="T:System.ComponentModel.Design.CommandID" />.</param>
      <returns>Объект <see cref="T:System.ComponentModel.Design.MenuCommand" />. По умолчанию, <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> возвращает <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Разрешает пользовательское поведение перетаскивания.</summary>
      <param name="g">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, для которого следует вызвать поведение перетаскивания.</param>
      <param name="e">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Разрешает пользовательское поведение перетаскивания внутрь.</summary>
      <param name="g">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, для которого следует вызвать поведение перетаскивания внутрь.</param>
      <param name="e">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>Разрешает пользовательское поведение перетаскивания наружу.</summary>
      <param name="g">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, для которого следует вызвать поведение перетаскивания наружу.</param>
      <param name="e">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Разрешает пользовательское поведение сквозного перетаскивания.</summary>
      <param name="g">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, для которого следует вызвать поведение сквозного перетаскивания.</param>
      <param name="e">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Разрешает пользовательское поведение реакции на перетаскивание.</summary>
      <param name="g">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, для которого следует вызвать поведение перетаскивания.</param>
      <param name="e">Объект <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>Вызывается окном декоративного элемента, когда он потерял захват мыши.</summary>
      <param name="g">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, для которого следует вызвать поведение перетаскивания.</param>
      <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Вызывается, когда окно декоративного элемента <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> получает какое-либо сообщение о двойном щелчке.</summary>
      <param name="g">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button">Значение <see cref="T:System.Windows.Forms.MouseButtons" />, указывающее, какая клавиша была нажата.</param>
      <param name="mouseLoc">Расположение, где был выполнен щелчок.</param>
      <returns>
        <see langword="true" />, если сообщение обработано. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Вызывается, когда окно декоративного элемента <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> получает какое-либо сообщение о двойном щелчке.</summary>
      <param name="g">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button">Значение <see cref="T:System.Windows.Forms.MouseButtons" />, указывающее, какая клавиша была нажата.</param>
      <param name="mouseLoc">Расположение, где был выполнен щелчок.</param>
      <returns>
        <see langword="true" />, если сообщение обработано. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Вызывается, когда окно декоративного элемента <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> получает какое-либо сообщение о вводе мыши.</summary>
      <param name="g">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns>
        <see langword="true" />, если сообщение обработано. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary>Вызывается, когда окно графического элемента <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> получает какое-либо сообщение о наведении мыши.</summary>
      <param name="g">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="mouseLoc">Расположение, где было выполнено наведение.</param>
      <returns>
        <see langword="true" />, если сообщение обработано. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Вызывается, когда окно декоративного элемента <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> получает какое-либо сообщение о выходе указателя мыши.</summary>
      <param name="g">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns>
        <see langword="true" />, если сообщение обработано. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Вызывается, когда окно декоративного элемента <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> получает какое-либо сообщение о перемещении мыши.</summary>
      <param name="g">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button">Значение <see cref="T:System.Windows.Forms.MouseButtons" />, указывающее, какая клавиша была нажата.</param>
      <param name="mouseLoc">Расположение, где было выполнено движение.</param>
      <returns>
        <see langword="true" />, если сообщение обработано. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary>Вызывается, когда окно декоративного элемента <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> получает какое-либо сообщение об отпускании кнопки мыши.</summary>
      <param name="g">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button">Значение <see cref="T:System.Windows.Forms.MouseButtons" />, указывающее, какая клавиша была нажата.</param>
      <returns>
        <see langword="true" />, если сообщение обработано. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>Отправляет это событие перетаскивания из окна декоративного элемента в соответствующее поведение <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> или глиф <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, для которого была выполнена проверка нажатия.</summary>
      <param name="g">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="e">Объект <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary>Получает курсор, который должен отображаться для этого поведения.</summary>
      <returns>Объект <see cref="T:System.Windows.Forms.Cursor" />, представляющий курсор, который должен отображаться для этого поведения.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary>Получает значение, определяющее необходимость отключения объектов <see cref="T:System.ComponentModel.Design.MenuCommand" />.</summary>
      <returns>
        <see langword="true" /> Если все <see cref="T:System.ComponentModel.Design.MenuCommand" /> объекты, получаемые конструктором, должны иметь состояние <c>Enabled = false</c> , если оно <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> активно; в противном случае — значение <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary>Предоставляет данные для событий <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> и <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> .</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />.</summary>
      <param name="dragComponents">Коллекция <see cref="T:System.Collections.ICollection" /> объектов <see cref="T:System.ComponentModel.IComponent" />, которые перетаскиваются в настоящий момент.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary>Получает список объектов <see cref="T:System.ComponentModel.IComponent" />. перетаскиваемых в настоящий момент.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" /> объектов <see cref="T:System.ComponentModel.IComponent" />, которые перетаскиваются в настоящий момент.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary>Представляет методы, обрабатывающие события <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> и <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> класса <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />. Этот класс не наследуется.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary>Управляет пользовательским интерфейсом в конструкторе. Этот класс не наследуется.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary>Происходит, когда объект <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> запускает операцию перетаскивания.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary>Происходит по завершении операции перетаскивания объектом <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary>Происходит, когда следует обновить текущее выделение.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary>Переводит <see cref="T:System.Drawing.Point" /> в окне графического элемента в экранные координаты.</summary>
      <param name="p">Преобразуемое значение <see cref="T:System.Drawing.Point" />.</param>
      <returns>Преобразованное значение <see cref="T:System.Drawing.Point" /> в экранных координатах.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary>Получает расположение окна графического элемента в экранных координатах.</summary>
      <returns>Расположение — с левого верхнего угла окна графического элемента, в экранных координатах.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary>Возвращает ограничивающий объект <see cref="T:System.Drawing.Rectangle" /> элемента <see cref="T:System.Windows.Forms.Control" />.</summary>
      <param name="c">Класс <see cref="T:System.Windows.Forms.Control" /> для преобразования.</param>
      <returns>Ограничивающий объект <see cref="T:System.Drawing.Rectangle" /> объекта <see cref="T:System.Windows.Forms.Control" />, преобразованный в координаты окна декоративного элемента.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary>Возвращает расположение элемента <see cref="T:System.Windows.Forms.Control" />, преобразованного в координаты окна декоративного элемента.</summary>
      <param name="c">Класс <see cref="T:System.Windows.Forms.Control" /> для преобразования.</param>
      <returns>Значение <see cref="T:System.Drawing.Point" />, указывающее расположение параметра <paramref name="c" /> в координатах окна графического объекта.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Возвращает поведение <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> сразу после заданного поведения <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> в стеке поведения.</summary>
      <param name="behavior">Поведение <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, предшествующее возвращаемому <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />.</param>
      <returns>Поведение <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> сразу после <paramref name="behavior" /> в стеке поведений или <see langword="null" />, если нет следующего поведения.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary>Делает недействительным окно декоративного элемента объекта <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary>Делает недействительной (в рамках окна декоративного элемента) указанную область объекта <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="rect">Прямоугольная область, которая будет сделана недопустимой.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary>Делает недействительной (в рамках окна декоративного элемента) указанную область объекта <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="r">Область, которая будет сделана недействительной.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary>Преобразовывает точку в системе координат маркера в координаты окна декоративного элемента.</summary>
      <param name="handle">Дескриптор окна графического элемента.</param>
      <param name="pt">Объект <see cref="T:System.Drawing.Point" /> в системе координат маркера.</param>
      <returns>Объект <see cref="T:System.Drawing.Point" /> в координатах окна графического элемента.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Удаляет и возвращает объект <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> в верхней части стека.</summary>
      <param name="behavior">Атрибут <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> для удаления из стека.</param>
      <exception cref="T:System.InvalidOperationException">Стек <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> является пустым.</exception>
      <returns>Объект <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, который удален из стека.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Помещает <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> в стек поведения.</summary>
      <param name="behavior">Принудительно отравляемое поведение <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Помещает <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> в стек поведения и назначает поведению захват мыши.</summary>
      <param name="behavior">Принудительно отравляемое поведение <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary>Переводит точку в экранных координатах в координаты окна графического объекта <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="p">Преобразуемое значение <see cref="T:System.Drawing.Point" />.</param>
      <returns>Преобразованное значение <see cref="T:System.Drawing.Point" /> в координатах окна графического объекта.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary>Синхронизирует все глифы выделения.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary>Возвращает набор <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>Коллекция графических элементов.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary>Получает <see cref="T:System.Drawing.Graphics" /> для окна декоративного элемента.</summary>
      <returns>
        <see cref="T:System.Drawing.Graphics" /> для окна графического элемента.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary>Получает <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, в верхней части стека поведения, не удаляя его.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> в верхней части стека поведения.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary>Хранит объекты <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> в строго типизированной коллекции.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> с заданным массивом.</summary>
      <param name="value">Массив типа <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> для заполнения коллекции.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> с заданной ссылкой <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="behaviorService">Ссылка <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> из существующего класса <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">Объект <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, из которого заполняется коллекция.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Добавляет элемент <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> с указанным значением к <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />, добавляемый в конец коллекции.</param>
      <returns>Индекс, указывающий, куда был вставлен новый элемент.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>Копирует элементы массива в конец <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">Массив типа <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> для копирования в конец коллекции.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Добавляет содержимое другого объекта <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> в конец коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, добавляемый в конец коллекции.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Возвращает значение, указывающее, содержит ли <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> указанную <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
      <param name="value">Искомый объект <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит элемент <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />. В противном случае значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary>Копирует значения <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> в одномерный массив <see cref="T:System.Array" /> по указанному индексу.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, который является целевым для значений, копируемых из <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
      <param name="index">Индекс в <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным.

-или-

Количество элементов в <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> больше, чем может поместиться в свободном пространстве между индексом <paramref name="index" /> и концом массива <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> меньше нижней границы массива <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary>Возвращает перечислитель, с помощью которого можно выполнять итерацию элементов экземпляра <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.IEnumerator" /> для экземпляра класса <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Возвращает индекс объекта <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> в коллекции <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">Искомый объект <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</param>
      <returns>Индекс объекта <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> параметра <paramref name="value" /> в <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, если он найден; в противном случае — -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Вставляет объект <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> в коллекцию <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить <paramref name="value" />.</param>
      <param name="value">Вставляемый объект <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Удаляет определенную <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> из <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">Элемент <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />, который требуется удалить из <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не найден в коллекции.</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary>Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index">Индекс элемента, отсчитываемый от нуля.</param>
      <returns>Элемент <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />, указанный индексом <paramref name="index" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary>Поддерживает выполнение итерации по <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" />.</summary>
      <param name="mappings">Коллекция <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, для которой создается перечислитель.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary>Перемещает перечислитель к следующему элементу коллекции <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>
        <see langword="true" />, если перечислитель был успешно перемещен к следующему элементу; <see langword="false" />, если перечислитель достиг конца коллекции.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary>Устанавливает перечислитель в его начальное положение, т. е. перед первым элементом коллекции.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary>Получает текущий элемент в объекте <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>Текущий элемент в коллекции <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>Описание этого элемента см. в свойстве <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>Получает текущую <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> в коллекции.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary>Связывает <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> с его компонентом.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="relatedComponent">Компонент, с которым связан объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="relatedComponent">Компонент, с которым связан объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, с которым связан <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary>Указывает, должно ли нажатие клавиши мыши в определенной точке обрабатываться объектом <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="p">Точка для проверки нажатия.</param>
      <returns>Объект <see cref="T:System.Windows.Forms.Cursor" />, если объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> связан с <paramref name="p" />, в противном случае значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>Обеспечивает логику рисования.</summary>
      <param name="pe">Объект <see cref="T:System.Windows.Forms.PaintEventArgs" />, содержащий свойство <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" /> объекта <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary>Получает компонент, связанный с <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.IComponent" />, связанный с объектом <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary>Связывает <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> с элементом управления.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="bounds">Объект <see cref="T:System.Drawing.Rectangle" />, который представляет границы <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor">Объект <see cref="T:System.Windows.Forms.Cursor" />, который представляет курсор, отображаемый, когда указатель мыши находится над <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent">Компонент, с которым связан объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, с которым связан <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="bounds">Объект <see cref="T:System.Drawing.Rectangle" />, который представляет границы <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor">Объект <see cref="T:System.Windows.Forms.Cursor" />, который представляет курсор, отображаемый, когда указатель мыши находится над <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent">Компонент, с которым связан объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="designer">Объект <see cref="T:System.Windows.Forms.Design.ControlDesigner" />, с которым связан <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary>Указывает, должно ли нажатие клавиши мыши в определенной точке обрабатываться объектом <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="p">Точка для проверки нажатия.</param>
      <returns>Объект <see cref="T:System.Windows.Forms.Cursor" />, если объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> связан с <paramref name="p" />, в противном случае значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary>Получает границы <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>Прямоугольник <see cref="T:System.Drawing.Rectangle" />, представляющий границы элемента <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary>Представляет отдельный объект пользовательского интерфейса, управляемого <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, связанный с объектом <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. Может иметь значение <see langword="null" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary>Предоставляет логику проверки нажатия.</summary>
      <param name="p">Точка для проверки нажатия.</param>
      <returns>Объект <see cref="T:System.Windows.Forms.Cursor" />, если объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> связан с <paramref name="p" />, в противном случае значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>Обеспечивает логику рисования.</summary>
      <param name="pe">Объект <see cref="T:System.Windows.Forms.PaintEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Изменяет <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, связанный с <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, который требуется связать с объектом <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary>Возвращает ключ <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, ассоциированный с экземпляром <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>Значение, связанное с параметром <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, связано с <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> или <see langword="null" />, если поведение отсутствует.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary>Получает границы <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>Прямоугольник <see cref="T:System.Drawing.Rectangle" />, представляющий границы элемента <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary>Хранит объекты <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> в строго типизированной коллекции.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> с заданным массивом <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="value">Массив типа <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> для заполнения коллекции.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> на основе другого класса <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">Объект <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> для заполнения коллекции.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Добавляет <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> с указанным значением к <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">Объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, добавляемый в конец коллекции.</param>
      <returns>Индекс, указывающий, куда был вставлен новый элемент.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>Копирует элементы массива в конец <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">Массив типа <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> для копирования в конец коллекции.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>Добавляет содержимое другого объекта <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> в конец коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />, добавляемый в конец коллекции.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Возвращает значение, указывающее, содержит ли <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> указанную <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="value">Искомый объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns>Возвращается <see langword="true" />, если коллекция содержит элемент <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. В противном случае возвращается <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary>Копирует значения <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> в одномерный массив <see cref="T:System.Array" /> по указанному индексу.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, который является целевым для значений, копируемых из <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
      <param name="index">Индекс в <paramref name="array" />, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Возвращает индекс <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> в <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">Искомый объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns>Индекс объекта <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> параметра <paramref name="value" /> в <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />, если он найден; в противном случае — -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Вставляет <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> в <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить <paramref name="value" />.</param>
      <param name="value">Вставляемый объект <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Удаляет определенную <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> из <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">Элемент <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, который требуется удалить из <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary>Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index">Индекс элемента, отсчитываемый от нуля.</param>
      <returns>Элемент <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, расположенный в позиции с заданным индексом.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary>Описывает состояние выделения конструктора объекта <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary>Элемент управления <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> не выбран.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary>Элемент управления <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> выбран.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> является основным выделением.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary>Представляет горизонтальный и вертикальный сегменты линий, которые динамически создаются в интерфейсе пользователя, чтобы помогать при работе с макетом времени обработки элементов управления в контейнере. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />, используя указанные тип линии привязки и смещение.</summary>
      <param name="type">Создаваемый тип <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />. Описывает относительное размещение и ориентацию линии привязки.</param>
      <param name="offset">Положение линии привязки в пикселях относительно верхнего левого угла элемента управления-владельца.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />, используя указанные тип линии привязки, смещение и имя фильтра.</summary>
      <param name="type">Создаваемый тип <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />. Описывает относительное размещение и ориентацию линии привязки.</param>
      <param name="offset">Положение линии привязки в пикселях относительно верхнего левого угла элемента управления-владельца.</param>
      <param name="filter">Объект <see cref="T:System.String" />, используемый для указания определенной категории линий привязки.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />, используя указанные тип линии привязки, имя фильтра и приоритет.</summary>
      <param name="type">Создаваемый тип <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />. Описывает относительное размещение и ориентацию линии привязки.</param>
      <param name="offset">Положение линии привязки в пикселях относительно верхнего левого угла элемента управления-владельца.</param>
      <param name="filter">Объект <see cref="T:System.String" />, используемый для указания определенной категории линий привязки.</param>
      <param name="priority">Приоритет <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> линии привязки.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />, используя указанные тип линии привязки, смещение и приоритет.</summary>
      <param name="type">Создаваемый тип <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />. Описывает относительное размещение и ориентацию линии привязки.</param>
      <param name="offset">Положение линии привязки в пикселях относительно верхнего левого угла элемента управления-владельца.</param>
      <param name="priority">Приоритет <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> линии привязки.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary>Настройте свойство <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> линии привязки.</summary>
      <param name="adjustment">Количество пикселей, на которое следует изменить смещение линии привязки.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary>Возвращает значение, указывающее, должна ли заданная линия привязки <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> привязываться к другой линии привязки <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</summary>
      <param name="line1">Указанный <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</param>
      <param name="line2">Линия привязки <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />, к которой должна привязываться указанная линия привязки <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</param>
      <returns>
        <see langword="true" />, если <paramref name="line1" /> должна привязываться к <paramref name="line2" />; в противном случае значение равно <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary>Возвращает строковое представление текущей линии привязки.</summary>
      <returns>Объект <see cref="T:System.String" />. представляющий текущий объект <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary>Получает определенную программистом категорию фильтра, связанную с этой линией привязки.</summary>
      <returns>Объект <see cref="T:System.String" />, определяющий категорию фильтра. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary>Получает значение, указывающее, является ли ориентация линии привязки горизонтальной.</summary>
      <returns>Значение равно <see langword="true" />, если линия привязки является горизонтальной, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary>Возвращает значение, указывающее, является ли ориентация линии привязки вертикальной.</summary>
      <returns>Значение равно <see langword="true" />, если линия привязки является вертикальной, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary>Возвращает количество пикселей, на которое смещается линия привязки от точки начала связанного элемента управления.</summary>
      <returns>Смещение линии привязки в пикселях.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary>Возвращает значение, показывающее относительную важность линии привязки.</summary>
      <returns>Объект <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />, представляющий приоритет категории линии привязки.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary>Возвращает тип линии привязки, определяющий общее расположение и ориентацию.</summary>
      <returns>Тип <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />, представляющий ориентацию и общее расположение относительно краев элемента управления линии привязки.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary>Указывает степень относительной важности линии привязки.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary>Категория приоритет, эквивалентная наивысшему уровню приоритета всех текущих линий привязки. Указывает, что эта категория линии привязки должна всегда быть активной.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary>Это категория наивысшего приоритета.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary>Это категория самого низкого приоритета.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary>Это категория среднего уровня приоритета.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary>Указывает ориентацию и относительное расположение линии привязки.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary>Горизонтальная линия привязки, обычно связанная с основной внутренней функцией элемента управления, например основой текстовой строки в элементе управления <see cref="T:System.Windows.Forms.Label" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary>Горизонтальная линия привязки обычно выравнивается по нижнему краю элемента управления.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary>Горизонтальная линия привязки, не связанная с нижним краем элемента управления.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary>Вертикальная линия привязки обычно выравнивается по левому краю элемента управления.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary>Вертикальная линия привязки обычно выравнивается по правому краю элемента управления.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary>Горизонтальная линия привязки обычно выравнивается по верхнему краю элемента управления.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary>Вертикальная линия привязки, не связанная с нижним краем элемента управления.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.BorderSidesEditor">
      <summary>Предоставляет редактор для задания свойства <see cref="P:System.Windows.Forms.ToolStripStatusLabel.BorderSides" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.BorderSidesEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение заданного объекта с использованием стиля редактирования, предоставленного <see cref="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Контекст <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий сведения об элементе управления или компоненте.</param>
      <param name="provider">Поставщик <see cref="T:System.IServiceProvider" />, предоставляющий настраиваемую поддержку другим объектам.</param>
      <param name="value">Значение объекта, которое следует редактировать.</param>
      <returns>Редактируемый объект.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Извлекает стиль редактирования метода <see langword="EditValue" />.</summary>
      <param name="context">Контекст <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий сведения об элементе управления или компоненте.</param>
      <returns>Одно из значений перечисления <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />. Если метод не поддерживается, этот метод возвращает <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentActionsType">
      <summary>Элементы действий конструктора, которые могут быть связаны с компонентом.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.All">
      <summary>Представляет действия конструктора для типов компонентов и служб.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Component">
      <summary>Представляет действия конструктора для модели получения данных.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Service">
      <summary>Представляет действия конструктора для модели отправки данных.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary>Базовый класс конструктора, расширяющий поведение корневого документа проектирования, поддерживающего вложенные компоненты, в режиме конструктора.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Получает значение, показывающее, поддерживается ли указанный инструментарий конструктором.</summary>
      <param name="tool">Необходимо проверить <see cref="T:System.Drawing.Design.ToolboxItem" /> на предмет поддержки панели элементов.</param>
      <returns>
        <see langword="true" />, если средство должно быть разрешено в области элементов; <see langword="false" />, если конструктор документа не знает, как использовать средство.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Инициализирует конструктор, используя заданный компонент.</summary>
      <param name="component">Объект <see cref="T:System.ComponentModel.IComponent" /> для связи с конструктором.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Настраивает набор свойств, представляемый компонентом через <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />, содержащий свойства класса компонента.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Описание этого члена см. в разделе <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology">
        <see cref="T:System.ComponentModel.Design.ViewTechnology" /> показывает определенную технологию просмотра.</param>
      <returns>Объект, отражающий представление для данного конструктора.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component">Компонент, атрибуты которого необходимо отфильтровать.</param>
      <param name="attributes">Словарь атрибутов, которые можно изменить.</param>
      <returns>Значение <see langword="true" />, если набор отфильтрованных атрибутов должен быть помещен в кэш; значение <see langword="false" />, если служба фильтрации должна снова сделать запрос.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component">Компонент, для которого необходимо отфильтровать события.</param>
      <param name="events">Словарь событий, которые можно изменить.</param>
      <returns>Значение <see langword="true" />, если набор отфильтрованных событий должен быть помещен в кэш; значение <see langword="false" />, если служба фильтрации должна снова сделать запрос.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component">Компонент, для которого необходимо отфильтровать свойства.</param>
      <param name="properties">Словарь свойств, которые можно изменить.</param>
      <returns>Значение <see langword="true" />, если набор отфильтрованных свойств должен быть кэширован; значение <see langword="false" />, если служба фильтрации должна снова делать запрос.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">Необходимо проверить, поддерживает ли панель элементов <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns>
        <see langword="true" />, если средство поддерживается панелью элементов и может быть включено; значение <see langword="false" />, если конструктор документа не знает, как использовать это средство.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">Необходимо выбрать <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary>Получает элементы управления для конструктора.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Control" />, редактируемый конструктором.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns>Массив значений поддерживаемого типа <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary>Получает или задает значение, указывающее, находится ли область компонентов для конструктора в режиме автоматической сортировки.</summary>
      <returns>
        <see langword="true" />, если область компонентов для конструктора находится в режиме автоматической сортировки; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary>Получает или задает значение, указывающее, находится ли область компонентов для конструктора в режиме больших значков.</summary>
      <returns>
        <see langword="true" />, если область компонентов для конструктора находится в режиме больших значков; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary>Предоставляет настройки для области компонентов конструктора.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.ComponentTray" /> с помощью указанного конструктора и поставщика службы.</summary>
      <param name="mainDesigner">
        <see cref="T:System.ComponentModel.Design.IDesigner" /> является главным конструктором или конструктором документа для текущего проекта.</param>
      <param name="serviceProvider">Поставщик <see cref="T:System.IServiceProvider" />, используемый для получения обслуживания в режиме разработки.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary>Добавляет компонент в область.</summary>
      <param name="component">Компонент <see cref="T:System.ComponentModel.IComponent" />, добавляемый в область.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>Получает значение, указывающее, используется ли указанное средство для создания нового компонента.</summary>
      <param name="tool">Объект <see cref="T:System.Drawing.Design.ToolboxItem" /> для проверки.</param>
      <returns>Значение <see langword="true" />, если указанное средство может применяться для создания компонента; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary>Получает значение, указывающее, можно ли отобразить указанный компонент.</summary>
      <param name="component">Объект <see cref="T:System.ComponentModel.IComponent" /> для проверки.</param>
      <returns>Значение <see langword="true" />, если компонент можно отобразить; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>Создает компонент из указанного элемента панели элементов, добавляет компонент в текущий документ и отображает представление компонента в области компонентов.</summary>
      <param name="tool">Элемент <see cref="T:System.Drawing.Design.ToolboxItem" />, из которого создается компонент.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary>Отображает сообщение об ошибке для пользователя со сведениями об указанном исключении.</summary>
      <param name="e">Исключение, о котором следует отобразить сведения.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Windows.Forms.Design.ComponentTray" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary>Получает местоположение указанного компонента относительно верхнего левого угла области компонентов.</summary>
      <param name="receiver">Компонент <see cref="T:System.ComponentModel.IComponent" />, для которого извлекается местоположение.</param>
      <returns>Точка <see cref="T:System.Drawing.Point" />, указывающая координаты заданного компонента или пустая точка <see cref="T:System.Drawing.Point" />, если заданный компонент не может быть обнаружен в области компонентов. Пустая точка <see cref="T:System.Drawing.Point" /> имеет свойство <see cref="P:System.Drawing.Point.IsEmpty" />, равное <see langword="true" />, и обычно имеет свойства <see cref="P:System.Drawing.Point.X" /> и <see cref="P:System.Drawing.Point.Y" />, каждое из которых равно нулю.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary>Подобно методу <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />, этот метод возвращает следующий компонент в области, если задан начальный компонент.</summary>
      <param name="component">Компонент, с которого следует начать перечисление.</param>
      <param name="forward">Значение <see langword="true" />, чтобы выполнять перечисление вперед по списку; в противном случае — значение <see langword="false" /> для выполнения перечисления в обратном направлении.</param>
      <returns>Следующий компонент в области компонентов или значение <see langword="null" />, если достигается конец списка (или начало, если <paramref name="forward" /> равняется <see langword="false" />).</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary>Получает требуемый тип службы.</summary>
      <param name="serviceType">Тип получаемой службы.</param>
      <returns>Экземпляр запрашиваемой службы или значение <see langword="null" />, если службу не удается обнаружить.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary>Получает значение свойства средства расширения <see langword="Location" />.</summary>
      <param name="receiver">Компонент <see cref="T:System.ComponentModel.IComponent" />, который получает свойство средства расширения места.</param>
      <returns>Точка <see cref="T:System.Drawing.Point" />, представляющая место параметра <paramref name="receiver" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary>Проверяет наличие компонента в области компонентов.</summary>
      <param name="comp">Компонент, наличие которого в области компонентов следует проверить.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="comp" /> отображается в области; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Вызывается, когда перетаскиваемый объект опускается в область компонентов.</summary>
      <param name="de">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Вызывается, когда объект перетаскивается и вставляется в область над областью компонентов.</summary>
      <param name="de">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary>Вызывается, когда объект перетаскивается из области над областью компонентов.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> предоставляет данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Вызывается, когда объект перетаскивается над областью компонентов.</summary>
      <param name="de">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Вызывается во время операции перетаскивания объектов OLE для обеспечения возможности выдачи пользователю сигнала о результате опускания объекта на заданную точку из области компонентов.</summary>
      <param name="gfevent">Объект <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.Layout" />.</summary>
      <param name="levent">Объект <see cref="T:System.Windows.Forms.LayoutEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary>Вызывается, когда выбранная операция перетаскивания отменяется.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>Вызывается при двойном нажатии кнопки мыши над областью компонентов.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> предоставляет данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Вызывается при нажатии кнопки мыши.</summary>
      <param name="e">Объект <see cref="T:System.Windows.Forms.MouseEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Вызывается при изменении позиции указателя мыши.</summary>
      <param name="e">Объект <see cref="T:System.Windows.Forms.MouseEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Вызывается при отпускании кнопки мыши.</summary>
      <param name="e">Объект <see cref="T:System.Windows.Forms.MouseEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Вызывается при обновлении представления области компонентов.</summary>
      <param name="pe">Объект <see cref="T:System.Windows.Forms.PaintEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary>Вызывается для установки указателя мыши.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary>Удаляет указанный компонент из области.</summary>
      <param name="component">Компонент <see cref="T:System.ComponentModel.IComponent" />, который нужно удалить из области.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>Отводит место указанному компоненту в заданном месте.</summary>
      <param name="receiver">Компонент <see cref="T:System.ComponentModel.IComponent" />, для которого задается место.</param>
      <param name="location">
        <see cref="T:System.Drawing.Point" /> указывает новое место для заданного компонента.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>Задает значение свойства средства расширения <see langword="Location" />.</summary>
      <param name="receiver">Компонент <see cref="T:System.ComponentModel.IComponent" />, который получает свойство средства расширения места.</param>
      <param name="location">Точка <see cref="T:System.Drawing.Point" />, представляющая место параметра <paramref name="receiver" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />.</summary>
      <param name="extendee">Объект для получения свойств средств расширения.</param>
      <returns>Значение <see langword="true" />, если этот объект может предоставлять свойства средства расширения указанному объекту. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary>Обрабатывает сообщения Windows.</summary>
      <param name="m">Сообщение <see cref="T:System.Windows.Forms.Message" /> для обработки.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary>Получает или задает значение, определяющее, производится ли автоматическое выравнивание элементов области.</summary>
      <returns>Значение <see langword="true" />, если элементы области выравниваются автоматически, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary>Получает число компонентов, которые содержатся в области.</summary>
      <returns>Число компонентов в области.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary>Получает или задает значение, указывающее, отображает ли область большие значки для представления каждого компонента в области.</summary>
      <returns>Значение <see langword="true" />, если большие значки отображаются; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary>Расширяет поведение элемента управления <see cref="T:System.Windows.Forms.Control" /> в режиме разработки.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary>Задает доступный объект для конструктора.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary>Определяет локальную точку <see cref="T:System.Drawing.Point" />, представляющую значения недопустимой точки <see cref="T:System.Drawing.Point" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary>Обрабатывает сообщения Windows.</summary>
      <param name="m">Сообщение <see cref="T:System.Windows.Forms.Message" /> для обработки.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary>Указывает, может ли этот элемент управления конструктора быть порожденным элементом управления заданного конструктора.</summary>
      <param name="parentDesigner">Конструктор <see cref="T:System.ComponentModel.Design.IDesigner" />, управляющий элементом управления, который нужно проверить.</param>
      <returns>Значение <see langword="true" />, если элемент управления, управляемый заданным конструктором, может порождать элемент управления, управляемый этим конструктором; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary>Предоставляет стандартную обработку сообщений Windows.</summary>
      <param name="m">Сообщение <see cref="T:System.Windows.Forms.Message" /> для обработки.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary>Отображает для пользователя информацию об указанном исключении.</summary>
      <param name="e">Отображаемый объект <see cref="T:System.Exception" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Windows.Forms.Design.ControlDesigner" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary>Разрешает функцию разработки для дочернего элемента управления.</summary>
      <param name="child">Дочерний элемент управления, для которого будет разрешен режим разработки.</param>
      <param name="name">Имя параметра <paramref name="child" /> в том виде, в котором оно будет предоставляться конечному пользователю.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="child" /> или <paramref name="name" /> имеет значение <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если дочерний элемент управления может быть разрешен во время разработки; значение <see langword="false" />, если размещающая инфраструктура не поддерживает это.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary>Разрешает или запрещает поддержку операций перетаскивания для проектируемого элемента управления.</summary>
      <param name="value">Значение <see langword="true" /> разрешает поддержку операций перетаскивания для элемента управления; значение <see langword="false" />, если эта поддержка отсутствует. Значение по умолчанию — <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Возвращает <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />, представляющий границы данного элемента управления.</summary>
      <param name="selectionType">Значение <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />, задающее состояние выбора.</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />, представляющий границы данного элемента управления.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Получает коллекцию объектов <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, представляющих границы выделения и токены захвата для стандартного элемента управления.</summary>
      <param name="selectionType">Значение <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />, задающее состояние выбора.</param>
      <returns>Коллекция объектов <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>Указывает, должно ли нажатие клавиши мыши в определенной точке обрабатываться элементом управления.</summary>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> указывает положение мыши при нажатой клавише в координатах экрана.</param>
      <returns>Значение <see langword="true" />, если нажатие клавиши мыши в определенной точке должно обрабатываться элементом управления; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary>Рассылает сообщения от дочерних элементов управления заданного элемента управления в конструктор.</summary>
      <param name="firstChild">Первый дочерний элемент управления <see cref="T:System.Windows.Forms.Control" /> для обработки. Этот метод может рекурсивно вызываться для дочерних элементов элемента управления.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Инициализирует конструктор, используя заданный компонент.</summary>
      <param name="component">Компонент <see cref="T:System.ComponentModel.IComponent" /> для сопоставления с конструктором. Этот компонент должен быть экземпляром элемента управления <see cref="T:System.Windows.Forms.Control" /> или производным от него.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>Повторно инициализирует существующий компонент.</summary>
      <param name="defaultValues">Словарь значений и имен по умолчанию для применения к свойствам. Может быть <see langword="null" />, если значения по умолчанию не указаны.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Инициализирует только что созданный компонент.</summary>
      <param name="defaultValues">Словарь значений и имен по умолчанию для применения к свойствам. Может быть <see langword="null" />, если значения по умолчанию не указаны.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary>Возвращает конструктор внутреннего элемента управления с заданным индексом в <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <param name="internalControlIndex">Заданный индекс для выбора конструктора внутреннего элемента управления. Номера индексов начинаются с нуля.</param>
      <returns>Элемент <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> по указанному индексу.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary>Возвращает число конструкторов внутреннего элемента управления в <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns>Число конструкторов внутреннего элемента управления в <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>Показывает контекстное меню и предоставляет возможность осуществить дополнительную обработку, когда контекстное меню отображается.</summary>
      <param name="x">Координата по оси X, в которой отображается контекстное меню.</param>
      <param name="y">Координата по оси Y, в которой отображается контекстное меню.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary>Предоставляет возможность осуществления дополнительной обработки немедленно после создания дескриптора элемента управления.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>Получает вызов для очистки операции перетаскивания.</summary>
      <param name="de">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Получает вызов, когда перетаскиваемый объект перемещается на представление конструктора элемента управления.</summary>
      <param name="de">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Получает вызов, когда операция перетаскивания входит на представление конструктора элемента управления.</summary>
      <param name="de">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>Получает вызов, когда операция перетаскивания выходит за пределы представления конструктора элемента управления.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> предоставляет данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Получает вызов, когда перетаскиваемый объект перемещается по представлению конструктора элемента управления.</summary>
      <param name="de">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Получает вызов во время выполнения операции перетаскивания для обеспечения визуального слежения за положением мыши при операции перетаскивания.</summary>
      <param name="e">Объект <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>Получает вызов в ответ на нажатие и удерживание левой кнопки мыши над компонентом.</summary>
      <param name="x">Координата Х мыши в экранных координатах.</param>
      <param name="y">Координата Y мыши в экранных координатах.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>Вызывается в конце операции перетаскивания для завершения или отмены операции.</summary>
      <param name="cancel">Значение <see langword="true" /> для отмены перетаскивания; значение <see langword="false" /> для его сохранения.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>Получает вызов для каждого движения мыши во время операции перетаскивания.</summary>
      <param name="x">Координата Х мыши в экранных координатах.</param>
      <param name="y">Координата Y мыши в экранных координатах.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary>Получает вызов, когда указатель мыши в первый раз оказывается на элементе управления.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary>Получает вызов после наведения указателя мыши на элемент управления.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary>Получает вызов, когда указатель мыши в первый раз оказывается на элементе управления.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>Получает вызов, когда элемент управления, управляемый конструктором, украсил свою поверхность, так что конструктор имеет возможность дополнительного украшения верхней части элемента управления.</summary>
      <param name="pe">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> может выбираться конструктором для рисования на элементе управления.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary>Вызывается при инициализации конструктора.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary>Получает вызов каждый раз, когда необходимо установить курсор.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Настраивает набор свойств, предоставляемых компонентом через <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />, содержащий свойства класса компонента.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary>Рассылает сообщения для дочерних элементов заданного элемента управления к каждому элементу управления, а не к родительскому конструктору.</summary>
      <param name="firstChild">Первый дочерний элемент управления <see cref="T:System.Windows.Forms.Control" /> для обработки. Этот метод может рекурсивно вызываться для дочерних элементов элемента управления.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Обрабатывает сообщения Windows и дополнительно пересылает их в элемент управления.</summary>
      <param name="m">Сообщение <see cref="T:System.Windows.Forms.Message" /> для обработки.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary>Получает объект <see cref="T:System.Windows.Forms.AccessibleObject" />, назначенный элементу управления.</summary>
      <returns>Объект <see cref="T:System.Windows.Forms.AccessibleObject" />, присвоенный элементу управления.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary>Получает коллекцию компонентов, сопоставленных компоненту, который управляется конструктором.</summary>
      <returns>Компоненты, сопоставленные компоненту, который управляется конструктором.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary>Получает или задает значение, указывающее, зависит ли распределение дескрипторов изменения размера от значения свойства <see cref="P:System.Windows.Forms.Control.AutoSize" />.</summary>
      <returns>Значение <see langword="true" />, если распределение дескрипторов изменения размера зависит от значения свойств <see cref="P:System.Windows.Forms.Control.AutoSize" /> и <see langword="AutoSizeMode" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary>Получает <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> из среды разработки.</summary>
      <returns>Служба <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> или <see langword="null" />, если эта служба недоступна.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary>Получает элемент управления, создаваемый данным конструктором.</summary>
      <returns>Элемент управления, создаваемый данным конструктором.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary>Получает значение, указывающее, могут ли быть нарисованы перетаскиваемые прямоугольники на данном компоненте конструктора.</summary>
      <returns>Значение <see langword="true" />, если прямоугольники можно изобразить; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary>Получает <see cref="T:System.ComponentModel.InheritanceAttribute" /> конструктора.</summary>
      <returns>
        <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" />, если конструктор является корневым конструктором; в противном случае значение свойства <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> родительского конструктора.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary>Получает родительский компонент для <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns>Родительский компонент для <see cref="T:System.Windows.Forms.Design.ControlDesigner" />; в противном случае — значение <see langword="null" />, если родительский компонент отсутствует.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary>Получает значение, указывающее, разрешит ли <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> выравнивание по линии привязки во время операции перетаскивания.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> разрешает выравнивание по линии привязки во время операции перетаскивания, когда первичный элемент управления перетаскивания находится над этим конструктором; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary>Получает правила выбора, указывающие на возможность перемещения компонентов.</summary>
      <returns>Побитовое сочетание значений <see cref="T:System.Windows.Forms.Design.SelectionRules" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary>Получает список объектов <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />, представляющих важные точки выравнивания для этого элемента управления.</summary>
      <returns>Список объектов <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />, представляющих важные точки выравнивания для этого элемента управления.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary>Предоставляет <see cref="T:System.Windows.Forms.AccessibleObject" /> для <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> с помощью указанного конструктора и элемента управления.</summary>
      <param name="designer">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> для объекта с поддержкой специальных возможностей.</param>
      <param name="control">
        <see cref="T:System.Windows.Forms.Control" /> для объекта с поддержкой специальных возможностей.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary>Извлекает доступный дочерний элемент, соответствующий указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс доступного дочернего элемента.</param>
      <returns>Класс <see cref="T:System.Windows.Forms.AccessibleObject" />, который представляет доступный дочерний элемент, соответствующий указанному индексу.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary>Извлекает число дочерних объектов, принадлежащих доступному объекту.</summary>
      <returns>Число дочерних объектов, принадлежащих доступному объекту.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary>Извлекает объект, получивший фокус ввода.</summary>
      <returns>Объект <see cref="T:System.Windows.Forms.AccessibleObject" />, который указывает дочерний объект, имеющий фокус в настоящий момент. Данный метод возвращает вызывающий объект, если сам объект имеет фокус. Возвращает значение <see langword="null" />, если отсутствует объект, имеющий фокус.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary>Извлекает выбранный в данный момент дочерний объект.</summary>
      <returns>Объект <see cref="T:System.Windows.Forms.AccessibleObject" />, который представляет выбранный в данный момент дочерний объект. Данный метод возвращает вызывающий объект, если выделен сам объект. Возвращает значение <see langword="null" />, если ни один из дочерних объектов в данный момент не выделен, а сам объект не имеет фокус.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary>Получает дочерний объект с указанными экранными координатами.</summary>
      <param name="x">Горизонтальная экранная координата.</param>
      <param name="y">Вертикальная экранная координата.</param>
      <returns>Класс <see cref="T:System.Windows.Forms.AccessibleObject" />, представляющий дочерний объект с указанными экранными координатами. Данный метод возвращает вызывающий объект, если сам объект находится в указанном местоположении. Возвращает значение <see langword="null" />, если в проверяемом местоположении нет объекта.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary>Получает точки, определяющие границы объекта с поддержкой специальных возможностей для конструктора.</summary>
      <returns>
        <see cref="T:System.Drawing.Rectangle" />, указывающий границы объекта с поддержкой специальных возможностей для конструктора.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary>Получает строку, описывающую выполняемое по умолчанию действие заданного объекта.</summary>
      <returns>Описание выполняемого по умолчанию действия для заданного объекта.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary>Получает строку, описывающую внешний вид указанного объекта.</summary>
      <returns>Описание внешнего вида объекта для пользователя или значение <see langword="null" />, если объект не имеет описания.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary>Получает или задает имя объекта.</summary>
      <returns>Имя объекта или значение <see langword="null" />, если свойство не было задано.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary>Возвращает родительский объект доступного объекта.</summary>
      <returns>Объект <see cref="T:System.Windows.Forms.AccessibleObject" />, который представляет родительский элемент доступного объекта или <see langword="null" />, если родительский объект отсутствует.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary>Возвращает роль данного доступного объекта.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Windows.Forms.AccessibleRole" /> или член <see cref="F:System.Windows.Forms.AccessibleRole.None" />, если роль не была указана.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary>Получает состояние данного доступного объекта.</summary>
      <returns>Одно из значений <see cref="T:System.Windows.Forms.AccessibleStates" /> или значение <see cref="F:System.Windows.Forms.AccessibleStates.None" />, если состояние не было задано.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary>Получает или задает значение объекта с поддержкой специальных возможностей.</summary>
      <returns>Значение доступного объекта или значение <see langword="null" />, если значение для объекта не  задано.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary>Предоставляет доступ к получению и заданию значений параметров для конструктора.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.DesignerOptions" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary>Получает или задает значение, которое включает или отключает редактирование на месте для элементов управления <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
      <returns>Значение <see langword="true" />, если для элементов управления <see cref="T:System.Windows.Forms.ToolStrip" /> включено редактирование на месте; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary>Получает или задает значение <see cref="T:System.Drawing.Size" />, представляющее размеры единицы сетки.</summary>
      <returns>Значение <see cref="T:System.Drawing.Size" />, представляющее размеры единицы сетки.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary>Получает или задает значение, указывающее, показывает ли автоматически конструктор область смарт-тега компонента при создании.</summary>
      <returns>Значение <see langword="true" /> указывает, что область смарт-тега компонента должна отображаться автоматически при ее создании; в обратном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary>Получает или задает значение, включающее или отключающее сетку в конструкторе.</summary>
      <returns>
        <see langword="true" />, если сетка включена; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary>Получает или задает значение, определяющее, помещаются ли автоматически элементы управления в координаты сетки.</summary>
      <returns>Значение <see langword="true" />, если привязка к сетке включена, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary>Получает или задает значение, включающее или отключающее кэш компонента.</summary>
      <returns>Значение <see langword="true" />, если включен кэш компонента; в обратном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary>Получает или задает значение, включающее или отключающее смарт-теги в конструкторе.</summary>
      <returns>Значение <see langword="true" />, если смарт-теги в конструкторе включены; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary>Получает или задает значение, включающее или отключающее линии привязки в конструкторе.</summary>
      <returns>Значение <see langword="true" />, если линии привязки в конструкторе включены; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DockEditor">
      <summary>Предоставляет пользовательский интерфейс для задания свойства <see cref="P:System.Windows.Forms.Control.Dock" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.DockEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение заданного объекта с использованием стиля редактирования, предоставленного GetEditorStyle. Поставщик служб обеспечивает получение любых требуемых служб редактирования.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <param name="provider">Объект поставщика услуг, с помощью которого можно получить услуги редактирования.</param>
      <param name="value">Экземпляр редактируемого значения.</param>
      <returns>Новое значение объекта. Если значение объекта не изменилось, должен быть возвращен тот же переданный объект.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Извлекает стиль редактирования метода EditValue. Если этот метод не поддерживается, то возвращается значение None.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Значение перечисления, соответствующее предоставленному стилю редактирования.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary>Базовый класс конструктора для расширения поведения в режиме разработки и обеспечения представления корневого уровня в режиме разработки для элемента управления <see cref="T:System.Windows.Forms.Control" />, который поддерживает вложенные элементы управления и должен получать сообщения прокрутки.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.DocumentDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Windows.Forms.Design.DocumentDesigner" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>Проверяет наличие службы редактора меню и создает ее, если таковой не существует.</summary>
      <param name="c">Компонент <see cref="T:System.ComponentModel.IComponent" />, проверяемый на наличие службы контекстного меню.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Получает коллекцию <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />, представляющую объекты <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="selectionType">Значение <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />, задающее состояние выбора.</param>
      <returns>Коллекция объектов <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Определяет, поддерживается ли указанное средство конструктором.</summary>
      <param name="tool">Необходимо проверить <see cref="T:System.Drawing.Design.ToolboxItem" /> на предмет поддержки панели элементов.</param>
      <returns>
        <see langword="true" />, если средство должно быть разрешено в области элементов; <see langword="false" />, если конструктор документа не знает, как использовать средство.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Инициализирует конструктор, используя заданный компонент.</summary>
      <param name="component">Объект <see cref="T:System.ComponentModel.IComponent" /> для связи с конструктором.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>Вызывается при необходимости отображения контекстного меню.</summary>
      <param name="x">Горизонтальная координата экрана для отображения контекстного меню.</param>
      <param name="y">Вертикальная координата экрана для отображения контекстного меню.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary>Вызывается сразу после создания дескриптора конструктора.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Настраивает набор свойств, предоставляемых компонентом через <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />, содержащий свойства класса компонента.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Описание этого члена см. в разделе <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology">
        <see cref="T:System.ComponentModel.Design.ViewTechnology" /> показывает определенную технологию просмотра.</param>
      <returns>Объект, отражающий представление для данного конструктора.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">Необходимо проверить, поддерживает ли панель элементов <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns>
        <see langword="true" />, если средство поддерживается панелью элементов и может быть включено; значение <see langword="false" />, если конструктор документа не знает, как использовать это средство.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">Необходимо выбрать <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Выбирает указанное средство.</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" />, для которого создается компонент.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Обрабатывает сообщения Windows.</summary>
      <param name="m">Сообщение <see cref="T:System.Windows.Forms.Message" /> для обработки.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary>Получает <see cref="T:System.Windows.Forms.Design.SelectionRules" /> для конструктора.</summary>
      <returns>Побитовое сочетание значений <see cref="T:System.Windows.Forms.Design.SelectionRules" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns>Массив значений поддерживаемого типа <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary>Предоставляет систематический способ управления обработчиками событий для текущего документа.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary>Вызывает событие OnEventHandlerChanged.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.EventHandlerService" />.</summary>
      <param name="focusWnd">Разрабатываемый элемент управления <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary>Получает активный в текущий момент обработчик событий заданного типа.</summary>
      <param name="handlerType">Тип получаемого обработчика.</param>
      <returns>Экземпляр обработчика или значение <see langword="null" />, если обработчик требуемого типа отсутствует.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary>Выводит из стека заданный обработчик.</summary>
      <param name="handler">Обработчик, удаляемый из стека.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary>Помещает в стек новый обработчик событий.</summary>
      <param name="handler">Обработчик, который добавляется в стек.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary>Получает элемент управления, к которому присоединены обработчики событий.</summary>
      <returns>Элемент управления <see cref="T:System.Windows.Forms.Control" />, который был присоединен посредством конструктора.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FileNameEditor">
      <summary>Предоставляет пользовательский интерфейс для выбора имени файла.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.FileNameEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Редактирует заданный объект, используя стиль редактора, предоставляемый с помощью метода <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <param name="provider">Объект поставщика услуг, с помощью которого можно получить услуги редактирования.</param>
      <param name="value">Экземпляр редактируемого значения.</param>
      <returns>Новое значение объекта. Если значение объекта не изменилось, должен быть возвращен тот же переданный объект.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Получает стиль редактирования, используемый методом <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Одно из значений <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />, определяющих предоставленный стиль редактирования.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
      <summary>Инициализирует диалог открытия файла при создании.</summary>
      <param name="openFileDialog">Используемый диалог <see cref="T:System.Windows.Forms.OpenFileDialog" /> для выбора имени файла.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor">
      <summary>Предоставляет пользовательский интерфейс для выбора папки из файловой системы.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.FolderNameEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет заданный объект с использованием стиля редактирования, предоставленного методом <see cref="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <param name="provider">Поставщик объекта службы.</param>
      <param name="value">Задаваемое значение.</param>
      <returns>Новое значение объекта или старое значение, если объект не был обновлен.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Получает стиль редактирования, используемый методом <see cref="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Значение перечисления <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />, соответствующее предоставленному стилю редактирования.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser)">
      <summary>Инициализирует диалоговое окно обозревателя папок.</summary>
      <param name="folderBrowser">Обозреватель <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> для выбора папки.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser">
      <summary>Предоставляет диалоговое окно, которое позволяет пользователю выбирать папку. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog">
      <summary>Отображает диалоговое окно обозревателя папок.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.DialogResult" /> из формы.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary>Отображает диалоговое окно обозревателя папок с заданным владельцем.</summary>
      <param name="owner">Окно верхнего уровня, которому будет принадлежать модальное диалоговое окно (пример: System.Windows.Forms.Form).</param>
      <returns>
        <see cref="T:System.Windows.Forms.DialogResult" /> из формы.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Description">
      <summary>Получает или задает описание, отображаемое над папками.</summary>
      <returns>Описание, отображаемое над папками.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.DirectoryPath">
      <summary>Получает путь к каталогу для объекта, выбранного пользователем.</summary>
      <returns>Путь к каталогу для объекта, выбранного пользователем.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.StartLocation">
      <summary>Получает или задает начальное расположение корневого узла.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder" />, указывающий расположение для обозревателя папок при выполнении первоначального просмотра.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Style">
      <summary>Стили, используемые обозревателем папок при просмотре. Это должно быть сочетанием флагов из перечисления <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" />.</summary>
      <returns>Элемент перечисления <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" />, указывающий поведение, которое должно использоваться <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder">
      <summary>Определяет идентификатор, используемый для указания корневой папки для обозревателя папок, при выполнении первоначального просмотра.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Desktop">
      <summary>Рабочий стол пользователя.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Favorites">
      <summary>Список "Избранное" пользователя.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyComputer">
      <summary>Содержимое значка "Мой компьютер".</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyDocuments">
      <summary>Папка "Мои документы" пользователя.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyPictures">
      <summary>Папка пользователя для хранения рисунков.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetAndDialUpConnections">
      <summary>Сетевые подключения и подключения удаленного доступа.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetworkNeighborhood">
      <summary>Сетевое окружение.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Printers">
      <summary>Папка, содержащая установленные принтеры.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Recent">
      <summary>Папка, содержащая ярлыки недавно отрываемых файлов.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.SendTo">
      <summary>Папка, содержащая ярлыки приложений, в которые нужно оправлять документы.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.StartMenu">
      <summary>Меню "Пуск" пользователя.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Templates">
      <summary>Шаблоны файлов пользователя.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles">
      <summary>Определяет идентификаторы, используемые для задания поведения обозревателя <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForComputer">
      <summary>Обозреватель папок может возвращать только компьютеры. Если пользователь выбирает что-либо, отличное от компьютера, кнопка ОК отображается серым цветом.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForEverything">
      <summary>Обозреватель папок может возвращать любой возвращаемый объект.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForPrinter">
      <summary>Обозреватель папок может возвращать только принтеры. Если пользователь выбирает что-либо, отличное от принтера, кнопка ОК отображается серым цветом.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToDomain">
      <summary>Обозреватель папок не будет включать сетевые папки ниже уровня домена в элементе управления деревом в диалоговом окне или разрешать перемещение в сетевые папки за пределами домена.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToFilesystem">
      <summary>Обозреватель папок будет возвращать только локальные системные каталоги файлов. Если пользователь выбирает папки, которые не являются частью локальной файловой системы, кнопка ОК отображается серым цветом.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToSubfolders">
      <summary>Обозреватель папок будет возвращать только объекты локальной файловой системы, которые находятся внутри корневой папки или во вложенной папке корневой папки. Если пользователь выбирает вложенную папку корневой папки, которая не является частью локальной файловой системы, кнопкаОК отображается серым цветом.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.ShowTextBox">
      <summary>Обозреватель папок содержит элемент управления <see cref="T:System.Windows.Forms.TextBox" /> в диалоговом окне обозревателя, который позволяет пользователю вводить имя элемента.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary>Определяет метод для получения сведений о том, как полосы прокрутки окна должны быть оформлены стилистически при отображении в конструкторе Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary>Получает перечисление объектов <see cref="T:System.Windows.Forms.Design.ThemedScrollbarWindow" />, представляющих окна и способ тематического оформления их строк прокрутки при отображении в конструкторе Visual Studio.</summary>
      <returns>Перечисление объектов, представляющих окна и способ тематического оформления их строк прокрутки при отображении в конструкторе Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary>Сериализирует словари строк.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Десериализирует заданный сериализованный объект CodeDOM в объект.</summary>
      <param name="manager">Интерфейс диспетчера сериализации, используемый в процессе десериализации.</param>
      <param name="codeObject">Сериализованный объект CodeDOM, предназначенный для десериализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="manager" /> или <paramref name="codeObject" /> имеет значение <see langword="null" />.</exception>
      <returns>Десериализованный объект CodeDOM.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Сериализирует заданный объект в объект CodeDOM.</summary>
      <param name="manager">Диспетчер сериализации, используемый в процессе сериализации.</param>
      <param name="value">Объект для сериализации.</param>
      <returns>Объект CodeDOM, представляющий сериализованный объект.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListImageEditor">
      <summary>Предоставляет редактор, который может выполнить стандартный поиск файлов точечного рисунка (BMP-файлов).</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.ImageListImageEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение заданного объекта с использованием стиля редактирования, предоставленного методом <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <param name="provider">Поставщик служб <see cref="T:System.IServiceProvider" />, при помощи которого можно получить службы редактирования.</param>
      <param name="value">Редактируемый объект <see cref="T:System.Object" />.</param>
      <returns>Объект <see cref="T:System.Object" />, представляющий новое значение. Если значение объекта не изменилось, метод <see cref="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> возвращает переданный в него объект.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetFileDialogDescription">
      <summary>Получает описание фильтра списка файлов по умолчанию, предоставляемого этим редактором.</summary>
      <returns>Описание для фильтра списка файлов по умолчанию.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetImageExtenders">
      <summary>Получает массив поддерживаемых типов изображений.</summary>
      <returns>Массив типов <see cref="T:System.Type" />, представляющих поддерживаемые типы изображений.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Получает значение, указывающее, поддерживает ли данный редактор художественное оформление значения объекта.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Значение <see langword="true" />, если реализован класс <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />, в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Рисует значение, определенное заданным аргументом <see cref="T:System.Drawing.Design.PaintValueEventArgs" />.</summary>
      <param name="e">Аргумент <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> указывает объект и место для рисования.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.MaskDescriptor">
      <summary>Определяет набор элементов для производных классов, чтобы предоставить параметры для редактора типов пользовательского интерфейса текстового поля с маской.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.Equals(System.Object)">
      <summary>Определяет, равен ли указанный объект <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> текущему объекту <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />.</summary>
      <param name="maskDescriptor">Объект <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />, с которым сравнивается текущий объект <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />.</param>
      <returns>Значение <see langword="true" />, если указанный объект <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> равен текущему объекту <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.GetHashCode">
      <summary>Выступает в качестве хэш-функции для определенного типа.</summary>
      <returns>Хэш-код для текущего объекта <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor)">
      <summary>Возвращает значение, указывающее, является ли заданный дескриптор маски допустимым и может ли он быть добавлен в список масок.</summary>
      <param name="maskDescriptor">Дескриптор маски, допустимость которого следует проверить.</param>
      <returns>Значение <see langword="true" />, если дескриптор <paramref name="maskDescriptor" /> допустим; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor,System.String@)">
      <summary>Возвращает значение, указывающее, является ли заданный дескриптор маски допустимым, и предоставляет описание ошибки, если дескриптор недопустимый.</summary>
      <param name="maskDescriptor">Дескриптор маски, допустимость которого следует проверить.</param>
      <param name="validationErrorDescription">Строка, содержащая ошибку проверки. Если ошибка проверки не произошла, описание <paramref name="validationErrorDescription" /> является <see cref="F:System.String.Empty" />.</param>
      <returns>Значение <see langword="true" />, если дескриптор <paramref name="maskDescriptor" /> допустим; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.ToString">
      <summary>Возвращает строку, представляющую текущий объект.</summary>
      <returns>Строка, представляющая текущий объект.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Culture">
      <summary>Получает сведения <see cref="T:System.Globalization.CultureInfo" />, представляющие языковой стандарт, для которого создается маска.</summary>
      <returns>Сведения <see cref="T:System.Globalization.CultureInfo" />, представляющие языковой стандарт, для которого создается маска.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Mask">
      <summary>Получает определяемую маску.</summary>
      <returns>
        <see cref="T:System.String" /> содержит определяемую маску.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Name">
      <summary>Получает понятное имя маски.</summary>
      <returns>
        <see cref="T:System.String" /> содержит имя краткого описания для <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Sample">
      <summary>Получает образец форматированной строки для маски.</summary>
      <returns>Строка <see cref="T:System.String" />, содержащая текст, форматируемый при помощи <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType">
      <summary>Получает проверяющий тип, сопоставленный с маской.</summary>
      <returns>Тип <see cref="T:System.Type" />, по которому проверяется форматированная строка.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary>Определяет множество полей <see cref="T:System.ComponentModel.Design.CommandID" />, каждое из которых соответствует командной функции, предоставленной средой узла.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к меню области компонентов.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к меню контейнера.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к странице свойств конструктора.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику метки изменения.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши отмены.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику нажатия клавиши по умолчанию.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши END.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши HOME.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику вызовов смарт-тегов.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши перемещения вниз.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши перемещения влево.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши перемещения вправо.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши перемещения вверх.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши перемещения курсора.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши перемещения курсора при уменьшении высоты.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши перемещения курсора при увеличении высоты.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши перемещения курсора влево.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши перемещения курсора вправо.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши перемещения курсора вверх.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши перемещения курсора при уменьшении ширины.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши перемещения курсора при увеличении ширины.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши противоположной клавише отмены.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику нажатия клавиши выбора следующего.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику нажатия клавиши выбора предыдущего.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиш SHIFT-END.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиш SHIFT-HOME.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши уменьшения размера высоты.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши увеличения размера высоты.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши уменьшения размера ширины.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши увеличения размера ширины.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к обработчику клавиши выбора последовательности перехода.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary>Объект класса <see cref="T:System.ComponentModel.Design.CommandID" />, который может использоваться для доступа к меню выбора.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для задания прямоугольника состояния.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для задания текста прямоугольника состояния.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary>
        <see cref="T:System.ComponentModel.Design.CommandID" /> может использоваться для доступа к меню выбора области.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.MenuCommands" />.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary>Расширяет поведение режима разработки <see cref="T:System.Windows.Forms.Control" />, поддерживающего вложенные элементы управления.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary>Добавляет заполняющие линии привязки.</summary>
      <param name="snapLines">Список <see cref="T:System.Collections.ArrayList" />, содержащий объекты <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary>Вызывается при добавлении компонента в родительский контейнер.</summary>
      <param name="component">Компонент для проверки на ошибки.</param>
      <returns>Значение <see langword="true" />, если может быть добавлен параметр <paramref name="component" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary>Показывает, может ли быть заданный элемент управления дочерним по отношению к элементу управления, управляемому этим конструктором.</summary>
      <param name="control">Объект <see cref="T:System.Windows.Forms.Control" /> для проверки.</param>
      <returns>Значение <see langword="true" />, если заданный элемент управления может быть дочерним по отношению к элементу управления, управляемому этим конструктором; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary>Показывает, может ли данный элемент управления, который управляется заданным конструктором, быть дочерним по отношению к элементу управления, управляемому этим конструктором.</summary>
      <param name="controlDesigner">Конструктор для проверки элемента управления.</param>
      <returns>Значение <see langword="true" />, если данный элемент управления, который управляется заданным конструктором, может быть дочерним по отношению к элементу управления, управляемому этим конструктором; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary>Создает компонент или форму элемента управления при помощи заданного средства и добавляет их в текущий документ проекта.</summary>
      <param name="tool">Элемент <see cref="T:System.Drawing.Design.ToolboxItem" />, из которого создается компонент.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary>Создает компонент или форму элемента управления при помощи заданного средства и добавляет их в текущий документ проекта в заданное местоположение.</summary>
      <param name="tool">Элемент <see cref="T:System.Drawing.Design.ToolboxItem" />, из которого создается компонент.</param>
      <param name="location">Точка <see cref="T:System.Drawing.Point" />, представляющая во время разработки координаты экрана, в которых надо расположить по центру компонент.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary>Создает компонент или форму элемента управления при помощи заданного средства и добавляет их в текущий документ проекта в пределах заданного прямоугольника.</summary>
      <param name="tool">Элемент <see cref="T:System.Drawing.Design.ToolboxItem" />, из которого создается компонент.</param>
      <param name="bounds">
        <see cref="T:System.Drawing.Rectangle" /> определяет местоположение и размеры для компонента, созданного при помощи средства. Значения <see cref="P:System.Drawing.Rectangle.X" /> и <see cref="P:System.Drawing.Rectangle.Y" /> для <see cref="T:System.Drawing.Rectangle" /> указывают на координаты верхнего левого угла компонента в режиме разработки.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Предоставляет основные функциональные возможности для всех методов <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">Элемент <see cref="T:System.Drawing.Design.ToolboxItem" />, из которого создается компонент.</param>
      <param name="x">Горизонтальная позиция (в координатах режима времени разработки) левого края средства, если размеры заданы; горизонтальная позиция центра средства, если размеры не заданы.</param>
      <param name="y">Вертикальная позиция (в координатах режима времени разработки) верхнего края средства, если размеры заданы; вертикальная позиция центра средства, если размеры не заданы.</param>
      <param name="width">Ширина средства. Этот параметр игнорируется, если параметр <paramref name="hasSize" /> задан значением <see langword="false" />.</param>
      <param name="height">Высота средства. Этот параметр игнорируется, если параметр <paramref name="hasSize" /> задан значением <see langword="false" />.</param>
      <param name="hasLocation">Значение <see langword="true" />, если положение для компонента задано; <see langword="false" />, если компонент должен располагаться в центре выбранного в данный момент элемента управления.</param>
      <param name="hasSize">Значение <see langword="true" />, если размеры компонента заданы; <see langword="false" />, если для компонента должны использоваться высота и ширина, заданные по умолчанию.</param>
      <returns>Массив компонентов, созданных при помощи средства.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые журналом <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />, и при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary>Получает элемент управления от конструктора заданного компонента.</summary>
      <param name="component">Компонент, для которого извлекается элемент управления.</param>
      <returns>Элемент управления <see cref="T:System.Windows.Forms.Control" />, к которому принадлежит заданный компонент.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Получает основной глиф, представляющий границы элемента управления.</summary>
      <param name="selectionType">Значение <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />, задающее состояние выбора.</param>
      <returns>Основной глиф, представляющий границы элемента управления.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Получает коллекцию объектов <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, представляющих границы выделения и токены захвата для стандартного элемента управления.</summary>
      <param name="selectionType">Значение <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />, задающее состояние выбора.</param>
      <returns>Коллекция объектов <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary>Используется производными классами для определения, возвращается ли разрабатываемый элемент управления или какой-либо другой контейнер <see cref="T:System.ComponentModel.Container" /> при добавлении к нему компонента.</summary>
      <param name="component">Компонент, для которого извлекается родительский элемент управления <see cref="T:System.Windows.Forms.Control" />.</param>
      <returns>Родительский элемент управления <see cref="T:System.Windows.Forms.Control" /> для компонента.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary>Обновляет позицию заданного прямоугольника, настраивая ее для выравнивания сетки, если режим выравнивания сетки разрешен.</summary>
      <param name="originalRect">
        <see cref="T:System.Drawing.Rectangle" /> показывает начальное расположение обновляемого компонента.</param>
      <param name="dragRect">
        <see cref="T:System.Drawing.Rectangle" /> показывает новое расположение компонента.</param>
      <param name="updateSize">Значение <see langword="true" /> для обновления размеров прямоугольника, если были сделаны изменения; в противном случае — <see langword="false" />.</param>
      <returns>Прямоугольник, указывающий положение компонента в координатах экрана в режиме времени разработки. Если не было сделано изменений, этот метод возвращает исходный прямоугольник.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Инициализирует конструктор, используя заданный компонент.</summary>
      <param name="component">Объект <see cref="T:System.ComponentModel.IComponent" /> для связи с конструктором.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Инициализирует только что созданный компонент.</summary>
      <param name="defaultValues">Словарь значений и имен по умолчанию для применения к свойствам. Может быть <see langword="null" />, если значения по умолчанию не указаны.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary>Создает средство при помощи заданного элемента <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <param name="toInvoke">Конструктор <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />, с которым должно использоваться средство.</param>
      <param name="tool">Элемент <see cref="T:System.Drawing.Design.ToolboxItem" />, из которого создается средство.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>Вызывается для очистки операции перетаскивания.</summary>
      <param name="de">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Вызывается, когда перетаскиваемый объект опускается на представление конструктора элемента управления.</summary>
      <param name="de">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Вызывается, когда операция перетаскивания входит на представление конструктора элемента управления.</summary>
      <param name="de">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>Вызывается, когда операция перетаскивания выходит за представление конструктора элемента управления.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> предоставляет данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Вызывается, когда перетаскиваемый объект проходит над представлением конструктора элемента управления.</summary>
      <param name="de">Объект <see cref="T:System.Windows.Forms.DragEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>Вызывается в ответ на нажатие и удерживание левой кнопки мыши над компонентом.</summary>
      <param name="x">Координата Х мыши в экранных координатах.</param>
      <param name="y">Координата Y мыши в экранных координатах.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>Вызывается в конце операции перетаскивания для завершения или отмены операции.</summary>
      <param name="cancel">Значение <see langword="true" /> для отмены операции перетаскивания; <see langword="false" /> для совершения операции перетаскивания.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>Вызывается для каждого движения мыши во время операции перетаскивания.</summary>
      <param name="x">Координата Х мыши в экранных координатах.</param>
      <param name="y">Координата Y мыши в экранных координатах.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>Вызывается, когда элемент управления, управляемый конструктором, украсил свою поверхность, так что конструктор имеет возможность дополнительного украшения верхней части элемента управления.</summary>
      <param name="pe">Объект <see cref="T:System.Windows.Forms.PaintEventArgs" />, предоставляющий данные для события.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary>Предоставляет возможность изменить текущий курсор мыши.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Настраивает набор свойств, представляемый компонентом через <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />, содержащий свойства класса компонента.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary>Получает значение, указывающее, будут ли выбранные элементы управления повторно порождены.</summary>
      <returns>Значение <see langword="true" />, если элементы управления, выбранные с помощью лассо на поверхности конструктора, будут повторно порождены в этот элемент управления конструктора.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary>Получает значение, указывающее, должно ли быть нарисовано универсальное поле перетаскивания при перетаскивании элемента панели элементов над поверхностью конструктора.</summary>
      <returns>Значение <see langword="true" />, если универсальное поле перетаскивания должно быть нарисовано при перетаскивании элемента панели элементов над поверхностью конструктора; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary>Получает значение, указывающее, должен ли поддерживаться z-порядок перетаскиваемых элементов управления при опускании на <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
      <returns>Значение <see langword="true" />, если z-порядок перетаскиваемых элементов управления должен поддерживаться при опускании на <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary>Получает заданное по умолчанию положение для добавляемого элемента управления в конструкторе.</summary>
      <returns>Точка <see cref="T:System.Drawing.Point" />, показывающая заданное по умолчанию положение для добавляемого элемента управления в конструкторе.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary>Получает или задает значение, показывающее, должна ли рисоваться сетка на элементе управления для этого конструктора.</summary>
      <returns>Значение <see langword="true" />, если сетка должна рисоваться на элементе управления в конструкторе; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary>Возвращает значение, указывающее, рисуются ли конструктором перетаскиваемые прямоугольники.</summary>
      <returns>Значение <see langword="true" />, если перетаскиваемые прямоугольники рисуются; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary>Получает или задает размеры каждого квадрата сетки, которая рисуется, если конструктор находится в режиме рисования сетки.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Size" /> находится за пределами допустимого диапазона для <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" />. Минимальное значение по умолчанию равно 2, а максимальное значение по умолчанию равно 200.</exception>
      <returns>
        <see cref="T:System.Drawing.Size" /> представляет размеры каждого квадрата сетки, которая рисуется в форме или в пользовательском элементе управления.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary>Получает значение, указывающее, содержит ли конструктор допустимое средство во время операции перетаскивания.</summary>
      <returns>Перетаскиваемое средство, если создается компонент, или <see langword="null" />, если средство отсутствует.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary>Получает список объектов <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />, представляющих важные точки выравнивания для этого элемента управления.</summary>
      <returns>Список объектов <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />, представляющих важные точки выравнивания для этого элемента управления.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary>Базовый класс конструктора для расширения поведения элемента управления <see cref="T:System.Windows.Forms.Control" />, который должен получать сообщения прокрутки, в режиме конструктора.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>Указывает, должно ли нажатие клавиши мыши в определенной точке обрабатываться элементом управления.</summary>
      <param name="pt">
        <see cref="T:System.Drawing.Point" /> указывает положение мыши при нажатой клавише в координатах экрана.</param>
      <returns>Значение <see langword="true" />, если нажатие клавиши мыши в определенной точке должно обрабатываться элементом управления; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Обрабатывает сообщения Windows и передает сообщения WM_HSCROLL и WM_VSCROLL элементу управления во время разработки.</summary>
      <param name="m">Сообщение <see cref="T:System.Windows.Forms.Message" /> для обработки.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary>Определяет идентификаторы, используемые при указании правил выбора для компонента.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary>Показывает, что компонент поддерживает изменение размеров во всех направлениях.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary>Показывает, что компонент поддерживает изменение размеров с нижнего края.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary>Показывает, что компонент поддерживает изменение размеров с левого края.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary>Показывает, что компонент заблокирован для контейнера. Переопределяет битовые флаги <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" /> и <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> этого перечисления.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary>Показывает, что компонент поддерживает свойство расположения, которое позволяет перемещать компонент по экрану.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary>Показывает отсутствие особых атрибутов выбора.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary>Показывает, что компонент поддерживает изменение размеров с правого края.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary>Показывает, что компонент поддерживает изменение размеров с верхнего края.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary>Показывает, что компонент имеет форму видимого пользовательского интерфейса и служба выбора рисует границу выделения вокруг данного интерфейса. Если у выбранного компонента это правило установлено, можно предположить, что компонент реализует <see cref="T:System.ComponentModel.IComponent" /> и что он сопоставлен с соответствующим экземпляром конструктора.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ShortcutKeysEditor">
      <summary>Предоставляет редактор для выбора сочетаний клавиш.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.ShortcutKeysEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение заданного объекта с использованием стиля редактирования, предоставленного методом <see cref="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <param name="provider">Поставщик <see cref="T:System.IServiceProvider" />, который этот редактор может использовать для получения услуг.</param>
      <param name="value">
        <see cref="T:System.Object" /> для редактирования.</param>
      <returns>Новое значение свойства <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Получает стиль редактирования, используемый методом <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" />.</summary>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для получения дополнительных сведений о контексте.</param>
      <returns>Значение <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />, которое указывает стиль редактирования, используемый методом <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary>Значение, указывающее, будут ли полосы прокрутки окна и его дочерних элементов оформлены тематически при отображении в конструкторе Visual Studio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary>Окно и все дочерние объекты имеют тематические полосы прокрутки.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary>Окно и все дочерние объекты не имеют тематического оформления.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary>Окно имеет тематические полосы прокрутки, а дочерние объекты не имеют тематического оформления.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary>Представляет окно и значение, указывающее, как полосы прокрутки окна должны быть оформлены тематически при отображении в конструкторе Visual Studio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary>Дескриптор окна.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary>Значение, указывающее, как полосы прокрутки окна должны быть оформлены тематически при отображении в конструкторе Visual Studio.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary>Предоставляет доступ для получения и задания значений параметров для конструктора Windows Forms.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary>Заполняет коллекцию <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</summary>
      <param name="options">Коллекция для заполнения.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary>Получает параметры <see cref="T:System.Windows.Forms.Design.DesignerOptions" />, предоставляемые службой <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</summary>
      <returns>Параметры <see cref="T:System.Windows.Forms.Design.DesignerOptions" />, предоставляемые службой <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</returns>
    </member>
  </members>
</doc>