<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic.Forms</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
      <summary>現在のアプリケーションに関連するプロパティ、メソッド、およびイベントを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)">
      <summary>現在のスレッドが文字列の操作と書式設定に使用しているカルチャを変更します。</summary>
      <param name="cultureName">
        <see langword="String" />. カルチャの名前を表す文字列。 使用可能な名前の一覧については、「<see cref="T:System.Globalization.CultureInfo" />」を参照してください。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> が有効なカルチャ名ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)">
      <summary>現在のスレッドがカルチャ固有のリソースを取得するために使用しているカルチャを変更します。</summary>
      <param name="cultureName">
        <see langword="String" />. カルチャの名前を表す文字列。 使用可能な名前の一覧については、「<see cref="T:System.Globalization.CultureInfo" />」を参照してください。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> が有効なカルチャ名ではありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)">
      <summary>指定した環境変数の値を返します。</summary>
      <param name="name">環境変数の名前を保持する <see langword="String" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> で指定された環境変数が存在しません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元のコードに <see langword="Read" /> アクセスを持つ <see cref="T:System.Security.Permissions.EnvironmentPermission" /> がありません。</exception>
      <returns>環境変数 <paramref name="name" /> の値を保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture">
      <summary>現在のスレッドが文字列の操作と書式設定に使用しているカルチャを取得します。</summary>
      <returns>現在のスレッドが文字列の操作と書式設定に使用しているカルチャを表す <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info">
      <summary>バージョン番号、説明、読み込まれているアセンブリなど、アプリケーションのアセンブリに関する情報を取得するためのプロパティを提供するオブジェクトを取得します。</summary>
      <returns>現在のアプリケーションの <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log">
      <summary>イベントや例外の情報をアプリケーションのログ リスナーに出力するためのプロパティおよびメソッドを提供するオブジェクトを取得します。</summary>
      <returns>現在のアプリケーションの <see cref="T:Microsoft.VisualBasic.Logging.Log" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture">
      <summary>現在のスレッドがカルチャ固有のリソースを取得するために使用しているカルチャを取得します。</summary>
      <returns>現在のスレッドがカルチャ固有のリソースを取得するために使用しているカルチャを表す <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
      <summary>バージョン番号、説明、読み込まれたアセンブリなど、アプリケーションに関する情報を取得するためにプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <summary>指定したアセンブリ情報を使用して、<see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="currentAssembly">
        <see cref="T:System.Reflection.Assembly" />. 情報を取得するアセンブリです。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName">
      <summary>アプリケーションのアセンブリ ファイル名のうち、拡張子を除いた部分を取得します。</summary>
      <returns>ファイル名を保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName">
      <summary>アプリケーションに関連付けられている会社名を取得します。</summary>
      <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyCompanyAttribute" /> 属性がありません。</exception>
      <returns>アプリケーションに関連付けられた会社名を保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright">
      <summary>アプリケーションに関連付けられている著作権表記を取得します。</summary>
      <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyCopyrightAttribute" /> 属性がありません。</exception>
      <returns>アプリケーションに関連付けられた著作権表記を保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description">
      <summary>アプリケーションに関する説明を取得します。</summary>
      <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyDescriptionAttribute" /> 属性がありません。</exception>
      <returns>アプリケーションの説明を保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath">
      <summary>アプリケーションが格納されているディレクトリを取得します。</summary>
      <returns>アプリケーションが格納されているディレクトリを保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies">
      <summary>アプリケーションによって読み込まれたすべてのアセンブリのコレクションを取得します。</summary>
      <exception cref="T:System.AppDomainUnloadedException">アプリケーション ドメインが読み込まれていません。</exception>
      <returns>アプリケーションによって読み込まれたすべてのアセンブリを保持する <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> の <see cref="T:System.Reflection.Assembly" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName">
      <summary>アプリケーションに関連付けられている製品名を取得します。</summary>
      <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyProductAttribute" /> 属性がありません。</exception>
      <returns>アプリケーションに関連付けられた製品名を保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace">
      <summary>現在のスタック トレース情報を取得します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">要求されたスタック トレース情報が指定範囲外です。</exception>
      <returns>現在のスタック トレース情報を保持する <see langword="String" />。 戻り値が <see cref="F:System.String.Empty" /> になる場合もあります。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title">
      <summary>アプリケーションに関連付けられているタイトルを取得します。</summary>
      <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyTitleAttribute" /> 属性がありません。</exception>
      <returns>アプリケーションに関連付けられた <see cref="T:System.Reflection.AssemblyTitleAttribute" /> を保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark">
      <summary>アプリケーションに関連付けられている商標表記を取得します。</summary>
      <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyTrademarkAttribute" /> 属性がありません。</exception>
      <returns>アプリケーションに関連付けられた商標表記を保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version">
      <summary>アプリケーションのバージョン番号を取得します。</summary>
      <exception cref="T:System.Security.SecurityException">アプリケーションがアセンブリのバージョンにアクセスするのに必要なアクセス許可を持っていません。</exception>
      <returns>アプリケーションのバージョン番号を保持する <see cref="T:System.Version" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet">
      <summary>プロセス コンテキストに割り当てられる物理メモリ量を取得します。</summary>
      <exception cref="T:System.Security.SecurityException">ユーザーが部分的に信頼されており、必要なアクセス許可を持っていません。</exception>
      <returns>プロセス コンテキストに割り当てられる物理メモリのバイト数を保持する <see langword="Long" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode">
      <summary>Visual Basic アプリケーションによる、<see langword="My.User" /> オブジェクトのユーザー認証方法を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.ApplicationDefined">
      <summary>
        <see cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" /> コンストラクターは、アプリケーションのメイン スレッドのプリンシパルを初期化しません。 アプリケーションからメイン スレッドのプリンシパルを初期化する必要があります。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows">
      <summary>
        <see cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" /> コンストラクターは、現在のユーザーの Windows ユーザー情報を使って、アプリケーションのメイン スレッドのプリンシパルを初期化します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException">
      <summary>単一インスタンス アプリケーションに対して複数のインスタンスを生成し、2 つ目以降のインスタンスが、1 つ目のアプリケーション インスタンスに接続できなかった場合、この例外がスローされます。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータを使用して、<see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="context">転送元または転送先についてのコンテキスト情報を保持する <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクトです。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String)">
      <summary>指定したエラー メッセージを使用して、<see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラーについて説明するメッセージ。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String,System.Exception)">
      <summary>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラーを説明する <see cref="T:System.String" /> オブジェクト。</param>
      <param name="inner">現在の例外の原因である <see cref="T:System.Exception" /> オブジェクト。 <see cref="P:System.Exception.InnerException" /> パラメーターが null 参照 (Visual Basic の場合は <see langword="Nothing" />) でない場合は、内部例外を処理する <see langword="Catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase">
      <summary>現在のアプリケーションに関連するプロパティ、メソッド、およびイベントを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs">
      <summary>現在のアプリケーションのコマンド ライン引数が文字列として格納されたコレクションを取得します。</summary>
      <returns>現在のアプリケーションのコマンド ライン引数が文字列として格納された、<see langword="String" /> の <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine">
      <summary>現在のアプリケーションのコマンド ライン引数として使用する値を設定します。</summary>
      <returns>
        <see langword="String" /> の <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。現在のアプリケーションのコマンド ライン引数として使用される文字列が格納されます。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException">
      <summary>
        <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" /> プロパティが設定されていなかった場合、Visual Basic アプリケーション モデルによってこの例外がスローされます。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータを使用して、<see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="context">転送元または転送先についてのコンテキスト情報を保持する <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクトです。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.String)">
      <summary>指定したエラー メッセージを使用して、<see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラーについて説明するメッセージ。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.String,System.Exception)">
      <summary>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラーを説明する <see cref="T:System.String" /> オブジェクト。</param>
      <param name="inner">現在の例外の原因である <see cref="T:System.Exception" /> オブジェクト。 <see cref="P:System.Exception.InnerException" /> パラメーターが null 参照 (Visual Basic の場合は <see langword="Nothing" />) でない場合は、内部例外を処理する catch ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler">
      <summary>
        <see langword="My.Application.Shutdown" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを含んでいる <see cref="T:System.EventArgs" /> オブジェクト。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode">
      <summary>Windows フォーム アプリケーションの終了条件を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterAllFormsClose">
      <summary>最後のフォームが閉じた後に終了します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses">
      <summary>メイン フォームが閉じた後に終了します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs">
      <summary>
        <see langword="My.Application.Startup" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="args">アプリケーションのコマンド ライン引数を格納する <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> オブジェクト。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine">
      <summary>アプリケーションのコマンド ライン引数を取得します。</summary>
      <returns>アプリケーションのコマンド ライン引数を格納する <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> オブジェクト。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventHandler">
      <summary>
        <see langword="My.Application.Startup" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを含んでいる <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> オブジェクト。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs">
      <summary>
        <see langword="My.Application.StartupNextInstance" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Boolean)">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="args">後続のアプリケーション インスタンスのコマンド ライン引数を格納する <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> オブジェクト。</param>
      <param name="bringToForegroundFlag">例外ハンドラーの終了時に 1 つ目のアプリケーション インスタンスを前面に移動するかどうかを示す <see cref="T:System.Boolean" />。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground">
      <summary>例外ハンドラーの終了時に 1 つ目のアプリケーション インスタンスを前面に移動するかどうかを示します。</summary>
      <returns>例外ハンドラーの終了時に 1 つ目のアプリケーション インスタンスを前面に移動するかどうかを示す <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.CommandLine">
      <summary>後続のアプリケーション インスタンスのコマンド ライン引数を取得します。</summary>
      <returns>後続のアプリケーション インスタンスのコマンド ライン引数を格納する <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> オブジェクト。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler">
      <summary>
        <see langword="My.Application.StartupNextInstance" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを含んでいる <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> オブジェクト。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs">
      <summary>
        <see langword="My.Application.UnhandledException" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="exitApplication">例外ハンドラーの終了時にアプリケーションを終了するかどうかを示す <see cref="T:System.Boolean" />。</param>
      <param name="exception">発生した <see cref="T:System.Exception" />。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication">
      <summary>例外ハンドラーの終了時にアプリケーションを終了するかどうかを示します。</summary>
      <returns>例外ハンドラーの終了時にアプリケーションを終了するかどうかを示す <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler">
      <summary>
        <see langword="My.Application.UnhandledException" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを含んでいる <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> オブジェクト。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.User">
      <summary>現在のユーザーに関する情報にアクセスします。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)">
      <summary>現在のユーザーが、指定したロールに属しているかどうかを確認します。</summary>
      <param name="role">メンバーシップを確認する対象のロールの名前。</param>
      <returns>現在のユーザーが指定されたロールのメンバーである場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal">
      <summary>ロールベースのセキュリティに関する、現在のプリンシパルを取得または設定します。</summary>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、プリンシパルを設定するために必要なアクセス許可がありません。</exception>
      <returns>セキュリティ コンテキストを表す <see cref="T:System.Security.Principal.IPrincipal" /> 値。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal">
      <summary>現在のユーザーを表すプリンシパル オブジェクトを取得または設定します。</summary>
      <returns>現在のユーザーを表す <see cref="T:System.Security.Principal.IPrincipal" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated">
      <summary>ユーザーが認証されているかどうかを示す値を取得します。</summary>
      <returns>ユーザーが認証されている場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.Name">
      <summary>現在のユーザーの名前を取得します。</summary>
      <returns>
        <see langword="String" />. 現在のユーザーの名前。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase">
      <summary>現在のアプリケーションに関連するプロパティ、メソッド、およびイベントを提供します。</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged">
      <summary>ネットワークの可用性が変更されたときに発生します。</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown">
      <summary>アプリケーションの終了時に発生します。</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup">
      <summary>アプリケーションの起動時に発生します。</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance">
      <summary>単一インスタンスのアプリケーションを起動しようとしたとき、そのアプリケーションが既にアクティブになっている場合に発生します。</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException">
      <summary>ハンドルされない例外がアプリケーションで生じたときに発生します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)">
      <summary>認証モードを指定して、<see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="authenticationMode">アプリケーションの認証モードを指定する列挙値の 1 つ。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents">
      <summary>メッセージ キューに現在ある Windows メッセージをすべて処理します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen">
      <summary>アプリケーションのスプラッシュ スクリーンを非表示にします。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm">
      <summary>派生クラスでオーバーライドされた場合、スプラッシュ スクリーンおよびメイン フォームを設定するためのコードがデザイナーによって出力されます。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen">
      <summary>派生クラスでオーバーライドされた場合、スプラッシュ スクリーンを初期化するためのコードがデザイナーによって出力されます。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>メイン アプリケーション スレッドについて、visual スタイル、テキスト表示スタイル、および (アプリケーションに Windows 認証が使用されている場合) 現在のプリンシパルを設定し、スプラッシュ スクリーンが定義されている場合は、そのスプラッシュ スクリーンを初期化します。</summary>
      <param name="commandLineArgs">現在のアプリケーションのコマンド ライン引数が文字列として格納された読み取り専用コレクション。</param>
      <returns>アプリケーションの起動を続行するかどうかを示す <see cref="T:System.Boolean" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun">
      <summary>初期化が完了した後に、メイン アプリケーションの実行を開始する準備ができたときの開始点を提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションの終了時にコードを実行できるようにします。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションの起動時にコードを実行できるようにします。</summary>
      <param name="eventArgs">アプリケーションのコマンド ライン引数です。アプリケーションの起動を取り消すかどうかを示します。</param>
      <returns>アプリケーションの起動を続行するかどうかを示す <see cref="T:System.Boolean" /> 値。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)">
      <summary>派生クラスでオーバーライドされた場合、単一インスタンス アプリケーションで、後続のインスタンスが起動された場合にコードを実行できるようにします。</summary>
      <param name="eventArgs">後続のアプリケーション インスタンスのコマンド ライン引数です。例外ハンドラーの終了時に 1 つ目のアプリケーション インスタンスを前面に移動するかどうかを示します。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)">
      <summary>派生クラスでオーバーライドされた場合、ハンドルされない例外がアプリケーションで発生したときにコードを実行できるようにします。</summary>
      <param name="e">イベントのデータ。</param>
      <returns>
        <see cref="T:System.Boolean" /> イベントが発生したかどうかを示す <see cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])">
      <summary>Visual Basic アプリケーション モデルをセットアップし、実行を開始します。</summary>
      <param name="commandLine">
        <see langword="Sub Main" /> に渡されたコマンド ラインです。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen">
      <summary>アプリケーションにスプラッシュ スクリーンが定義されているかどうかを判断し、定義されている場合は表示します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext">
      <summary>Windows フォーム アプリケーションの現在のスレッドについて、<see cref="T:System.Windows.Forms.ApplicationContext" /> オブジェクトを取得します。</summary>
      <returns>現在のスレッドに関するコンテキスト情報。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles">
      <summary>このアプリケーションで、ウィンドウやコントロールなどに Windows XP のスタイルを使用するかどうかを決定します。</summary>
      <returns>このアプリケーションが、ウィンドウやコントロールに、XP のウィンドウ スタイルを使用するかどうかを示す <see cref="T:System.Boolean" /> 値。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance">
      <summary>このアプリケーションが単一インスタンスのアプリケーションであるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see langword="True" /> このアプリケーションが単一インスタンスのアプリケーションであることを示すには、次のようにします。それ以外の場合は <see langword="False" /> 。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm">
      <summary>このアプリケーションのメイン フォームを取得または設定します。</summary>
      <returns>このアプリケーションのメインフォーム。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime">
      <summary>スプラッシュ スクリーンを最低限表示させておく時間 (ミリ秒) を取得または設定します。</summary>
      <returns>スプラッシュ スクリーンを表示しておく最短時間 (ミリ秒)。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms">
      <summary>アプリケーションで開かれているすべてのフォームのコレクションを取得します。</summary>
      <returns>アプリケーションの開いているすべてのフォームを含むコレクション。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit">
      <summary>アプリケーションの終了時にユーザー設定を保存するかどうかを決定します。</summary>
      <returns>
        <see langword="True" /> アプリケーションでユーザー設定を終了時に保存することを指定します。 それ以外の場合は、 <see langword="False" /> 設定が暗黙的に保存されないことを示します。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle">
      <summary>アプリケーションのメイン フォームが閉じられたときの動作を決定します。</summary>
      <returns>メインフォームが閉じたときのアプリケーションの動作を示す列挙値の1つ。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen">
      <summary>このアプリケーションのスプラッシュ スクリーンを取得または設定します。</summary>
      <exception cref="T:System.ArgumentNullException">このプロパティと <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" /> プロパティに同じ値が割り当てられます。</exception>
      <returns>アプリケーションのスプラッシュスクリーン。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering">
      <summary>派生クラスでオーバーライドされる際、このプロパティを使用すると、アプリケーションのフォームの既定のテキスト レンダリング エンジンをデザイナーで指定できます。</summary>
      <returns>
        <see langword="Boolean" />. <see langword="False" /> の値は、アプリケーションが Visual Basic 2005 の既定のテキスト レンダリング エンジンを使用する必要があることを示します。 <see langword="True" /> の値は、アプリケーションが Visual Basic .NET 2002 および Visual Basic .NET 2003 のテキスト レンダリング エンジンを使用する必要があることを示します。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.AudioPlayMode">
      <summary>オーディオ メソッドを呼び出すときにサウンドを再生する方法を示します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.Background">
      <summary>サウンドをバックグラウンドで再生するように <see langword="My.Computer.Audio.Play" /> メソッドに指定します。 呼び出し元のコードが引き続き実行されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.BackgroundLoop">
      <summary>
        <see cref="M:Microsoft.VisualBasic.Devices.Audio.Stop" /> メソッドが呼び出されるまでサウンドをバックグラウンドで再生するように、<see langword="My.Computer.Audio.Play" /> メソッドに指定します。 呼び出し元のコードが引き続き実行されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.WaitToComplete">
      <summary>サウンドを再生し、終了まで待機した後、呼び出し元のコードが引き続き実行されるように、<see langword="My.Computer.Audio.Play" /> メソッドに指定します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.HostServices">
      <summary>Visual Basic の現在のホスト ウィンドウへの参照およびホスト ウィンドウについての情報を返します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.HostServices.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.CompilerServices.HostServices" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.HostServices.VBHost">
      <summary>Visual Basic の現在のホスト オブジェクトを取得します。</summary>
      <returns>Visual Basic の現在のホスト ウィンドウへの参照およびホスト ウィンドウについての情報を返す <see cref="P:Microsoft.VisualBasic.CompilerServices.HostServices.VBHost" /> オブジェクト。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IVbHost">
      <summary>Visual Basic のホスト ウィンドウを表します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IVbHost.GetParentWindow">
      <summary>現在の Visual Basic 環境のホスト ウィンドウを取得します。</summary>
      <returns>現在の Visual Basic 環境のホスト ウィンドウ。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IVbHost.GetWindowTitle">
      <summary>現在の Visual Basic 環境のホスト ウィンドウのタイトルを取得します。</summary>
      <returns>現在の Visual Basic 環境のホスト ウィンドウのタイトル。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Audio">
      <summary>サウンドを再生するためのメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.Audio" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.Byte[],Microsoft.VisualBasic.AudioPlayMode)">
      <summary>.wav サウンド ファイルを再生します。</summary>
      <param name="data">サウンド ファイルを表す <see langword="Byte" /> 配列。</param>
      <param name="playMode">サウンドの再生モードを表す <see cref="T:Microsoft.VisualBasic.AudioPlayMode" />。 既定では、<see langword="AudioPlayMode.Background" /> になります。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> が <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 列挙値ではありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーが部分的に信頼されており、必要なアクセス許可を持っていません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.IO.Stream,Microsoft.VisualBasic.AudioPlayMode)">
      <summary>.wav サウンド ファイルを再生します。</summary>
      <param name="stream">サウンド ファイルを表す <see cref="T:System.IO.Stream" />。</param>
      <param name="playMode">サウンドの再生モードを表す <see cref="T:Microsoft.VisualBasic.AudioPlayMode" />。 既定では、<see langword="AudioPlayMode.Background" /> になります。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> が <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 列挙値ではありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーが部分的に信頼されており、必要なアクセス許可を持っていません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String)">
      <summary>.wav サウンド ファイルを再生します。</summary>
      <param name="location">サウンド ファイルの名前を保持する <see langword="String" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="location" /> が空の文字列です。</exception>
      <exception cref="T:System.IO.IOException">ユーザーに <paramref name="location" /> で指定されたファイルにアクセスするための十分なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="location" /> に指定されたファイル パスの形式に誤りがあります。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="location" /> のパス名が長すぎます。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーが部分的に信頼されており、必要なアクセス許可を持っていません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String,Microsoft.VisualBasic.AudioPlayMode)">
      <summary>.wav サウンド ファイルを再生します。</summary>
      <param name="location">サウンド ファイルの名前を保持する <see langword="String" />。</param>
      <param name="playMode">サウンドの再生モードを表す <see cref="T:Microsoft.VisualBasic.AudioPlayMode" />。 既定では、<see langword="AudioPlayMode.Background" /> になります。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="location" /> が空の文字列です。</exception>
      <exception cref="T:System.IO.IOException">ユーザーに <paramref name="location" /> で指定されたファイルにアクセスするための十分なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="location" /> に指定されたファイル パスの形式に誤りがあります。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="location" /> のパス名が長すぎます。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> が <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 列挙値ではありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーが部分的に信頼されており、必要なアクセス許可を持っていません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.PlaySystemSound(System.Media.SystemSound)">
      <summary>システム サウンドを再生する。</summary>
      <param name="systemSound">再生するシステム サウンドを表す <see cref="T:System.Media.SystemSound" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="systemSound" /> が <see langword="Nothing" />です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Stop">
      <summary>背景で再生しているサウンドを停止します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Clock">
      <summary>システム クロックから現在の現地時刻と世界協定時刻 (グリニッジ標準時に相当します) にアクセスするためのプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Clock.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.Clock" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.GmtTime">
      <summary>コンピューターの現在のローカルな日付と時刻を UTC (GMT) で表した <see langword="Date" /> オブジェクトを取得します。</summary>
      <returns>現在の日付と時刻を UTC (GMT) で表す <see langword="Date" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.LocalTime">
      <summary>このコンピューターの現在のローカルな日付と時刻を表す <see langword="Date" /> を取得します。</summary>
      <returns>現在のローカルな日付と時刻を表す <see langword="Date" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.TickCount">
      <summary>コンピューターのシステム タイマーに基づくミリ秒数を取得します。</summary>
      <returns>コンピューターのシステム タイマーに基づくミリ秒数を保持する <see langword="Integer" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Computer">
      <summary>オーディオ、時計、キーボード、ファイル システムなどのコンピューター コンポーネントを操作するためのプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Computer.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.Computer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Audio">
      <summary>サウンドを再生するためのプロパティおよびメソッドを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Audio" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Clipboard">
      <summary>クリップボードを操作するためのメソッドを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Clipboard" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Keyboard">
      <summary>キーボードの現在の状態 (現在、押されているキーなど) にアクセスするためのプロパティのほか、キーストロークをアクティブ ウィンドウに送信するためのメソッドを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Keyboard" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Mouse">
      <summary>ローカル コンピューターに接続されたマウスの形式と構成に関する情報を取得するためのプロパティを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Mouse" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Screen">
      <summary>コンピューターのプライマリ ディスプレイの画面を表す <see cref="T:System.Windows.Forms.Screen" /> オブジェクトを取得します。</summary>
      <returns>コンピューターのプライマリ画面を表す <see cref="T:System.Windows.Forms.Screen" /> オブジェクト。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ComputerInfo">
      <summary>コンピューターのメモリ、読み込まれたアセンブリ、名前、オペレーティング システムに関する情報を取得するためのプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory">
      <summary>コンピューターの空き物理メモリの合計サイズを取得します。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">アプリケーションがメモリ ステータスを取得できません。</exception>
      <returns>コンピューターの空き物理メモリのバイト数を保持する <see langword="ULong" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory">
      <summary>コンピューターの空き仮想アドレス空間の合計サイズを取得します。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">アプリケーションがメモリ ステータスを取得できません。</exception>
      <returns>コンピューターの空き仮想アドレス空間のバイト数を保持する <see langword="ULong" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture">
      <summary>オペレーティング システムにインストールされた現在の UI カルチャを取得します。</summary>
      <returns>
        <see cref="T:System.Globalization.CultureInfo" /> オブジェクトは、コンピューターにインストールされた UI カルチャを表します。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName">
      <summary>オペレーティング システムの完全名を取得します。</summary>
      <exception cref="T:System.Security.SecurityException">呼び出し元のコードが、完全な信頼を与えられていません。</exception>
      <returns>オペレーティング システムの名前を保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform">
      <summary>コンピューターで使用されているオペレーティング システムのプラットフォーム ID を取得します。</summary>
      <exception cref="T:System.ExecutionEngineException">アプリケーションがオペレーティング システムのプラットフォーム情報を取得できません。</exception>
      <returns>コンピューターで使用されているオペレーティング システムのプラットフォーム ID を保持する <see langword="String" />。<see cref="T:System.PlatformID" /> 列挙体のメンバー名から選択されます。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion">
      <summary>コンピューターで使用されているオペレーティング システムのバージョンを取得します。</summary>
      <exception cref="T:System.ExecutionEngineException">アプリケーションがオペレーティング システムのバージョン情報を取得できません。</exception>
      <returns>オペレーティング システムの現在のバージョン番号を保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory">
      <summary>コンピューターの物理メモリの合計サイズを取得します。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">アプリケーションがメモリ ステータスを取得できません。</exception>
      <returns>コンピューターの物理メモリのバイト数を保持する <see langword="ULong" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory">
      <summary>コンピューターの仮想アドレス空間の合計サイズを取得します。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">アプリケーションがメモリ ステータスを取得できません。</exception>
      <returns>コンピューターで利用可能な仮想アドレス空間のバイト数を保持する <see langword="ULong" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Keyboard">
      <summary>現在どのキーが押されているかなど、キーボードの現在の状態にアクセスするためのプロパティを提供します。また、キーストロークを作業中のウィンドウに送るメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)">
      <summary>キーボードから入力する感覚で、1 つまたは複数のキーストロークをアクティブ ウィンドウに送信します。</summary>
      <param name="keys">送信するキーを定義する <see langword="String" />。</param>
      <exception cref="T:System.Security.SecurityException">ユーザーが部分的に信頼されており、必要なアクセス許可を持っていません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)">
      <summary>キーボードから入力する感覚で、1 つまたは複数のキーストロークをアクティブ ウィンドウに送信します。</summary>
      <param name="keys">送信するキーを定義する <see langword="String" />。</param>
      <param name="wait">省略可能。 キーストロークの処理が完了するまで待って、アプリケーションの処理を続行するかどうかを指定する <see langword="Boolean" /> 値。 既定では <see langword="True" /> です。</param>
      <exception cref="T:System.Security.SecurityException">ユーザーが部分的に信頼されており、必要なアクセス許可を持っていません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown">
      <summary>ALT キーが押されているかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="True" /> ALT キーが押されている場合は。それ以外の場合は <see langword="False" /> 。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.CapsLock">
      <summary>CapsLock キーがオンになっているかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="Boolean" />値: <see langword="True" /> capslock がオンになっている場合は。それ以外の場合は <see langword="False" /> 。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown">
      <summary>CTRL キーが押されているかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="True" /> CTRL キーが押されている場合は。それ以外の場合は <see langword="False" /> 。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.NumLock">
      <summary>NumLock キーがオンになっているかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="True" /> NUMLOCK がオンの場合は、それ以外の場合は <see langword="False" /> 。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.ScrollLock">
      <summary>ScrollLock キーがオンになっているかどうかを示す <see langword="Boolean" /> 値を取得します。</summary>
      <returns>
        <see langword="True" /> スクロールロックがオンの場合は。それ以外の場合は <see langword="False" /> 。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown">
      <summary>Shift キーが押されているかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="True" /> SHIFT キーが押されている場合は。それ以外の場合は <see langword="False" /> 。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Mouse">
      <summary>ローカル コンピューターにインストールされているマウスの形式と構成に関する情報を取得するためのプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Mouse.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.Mouse" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped">
      <summary>左右のマウス ボタンの機能が入れ替わっているかどうかを示す <see langword="Boolean" /> 値を取得します。</summary>
      <exception cref="T:System.InvalidOperationException">コンピューターにマウスが接続されていません。</exception>
      <returns>
        <see langword="Boolean" /> 値。左右のマウス ボタンの機能が入れ替わっている場合は <see langword="True" /> を、それ以外の場合は <see langword="False" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.WheelExists">
      <summary>マウスにスクロール ホイールが備わっているかどうかを示す <see langword="Boolean" /> 値を取得します。</summary>
      <exception cref="T:System.InvalidOperationException">コンピューターにマウスが接続されていません。</exception>
      <returns>Boolean 値。マウスにスクロール ホイールが備わっている場合は <see langword="True" /> を、それ以外の場合は <see langword="False" /> を返します。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines">
      <summary>マウス ホイールを 1 段階回転させたときのスクロール量を示す数値を取得します。</summary>
      <exception cref="T:System.InvalidOperationException">マウスにスクロール ホイールがありません。</exception>
      <returns>マウス ホイールを 1 段階回転させたときのスクロール量を示す <see langword="Integer" />。 正の値はスクロールする行数を示し、負の値は 1 画面ずつスクロールすることを意味します。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Network">
      <summary>コンピューターが接続されるネットワークと対話するためのプロパティ、イベント、およびメソッドを提供します。</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged">
      <summary>ネットワークの可用性が変更されたときに発生します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.Network" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)">
      <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
      <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
      <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
      <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)">
      <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
      <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
      <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
      <param name="userName">認証するユーザー名。 既定値は空の文字列 ("") です。</param>
      <param name="password">認証するパスワード。 既定値は空の文字列 ("") です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
      <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
      <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
      <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
      <param name="userName">認証するユーザー名。 既定値は空の文字列 ("") です。</param>
      <param name="password">認証するパスワード。 既定値は空の文字列 ("") です。</param>
      <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="connectionTimeout">
        <see cref="T:System.Int32" />. タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
      <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> が <see langword="False" /> に設定されていますが、コピー先のファイルが既に存在します。</exception>
      <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
      <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
      <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
      <param name="userName">認証するユーザー名。 既定値は空の文字列 ("") です。</param>
      <param name="password">認証するパスワード。 既定値は空の文字列 ("") です。</param>
      <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
      <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="onUserCancel">
        <c>ShowUI</c> が <see langword="True" /> に設定された場合に表示されるダイアログ ボックスで、ユーザーが **[キャンセル] または [いいえ]** をクリックしたときの動作を指定します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> が <see langword="False" /> に設定されていますが、コピー先のファイルが既に存在します。</exception>
      <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)">
      <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
      <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
      <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
      <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)">
      <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
      <param name="address">
        <see langword="String" /> または <see cref="T:System.Uri" />。 ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
      <param name="destinationFileName">
        <see langword="String" />. ダウンロード ファイルの名前およびパス。</param>
      <param name="networkCredentials">
        <see cref="T:System.Net.ICredentials" />. 指定される資格情報。</param>
      <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
      <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> が <see langword="False" /> に設定されていますが、コピー先のファイルが既に存在します。</exception>
      <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
      <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
      <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
      <param name="networkCredentials">指定される資格情報。</param>
      <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
      <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="onUserCancel"> が  に設定された場合に表示されるダイアログ ボックスで、ユーザーが **[キャンセル]** または <paramref name="showUI" />[いいえ]<see langword="True" /> をクリックしたときの動作を指定します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> が <see langword="False" /> に設定されていますが、コピー先のファイルが既に存在します。</exception>
      <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)">
      <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
      <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
      <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
      <param name="userName">認証するユーザー名。 既定値は空の文字列 ("") です。</param>
      <param name="password">認証するパスワード。 既定値は空の文字列 ("") です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
      <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
      <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
      <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
      <param name="userName">認証するユーザー名。 既定値は空の文字列 ("") です。</param>
      <param name="password">認証するパスワード。 既定値は空の文字列 ("") です。</param>
      <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
      <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> が <see langword="False" /> に設定されていますが、コピー先のファイルが既に存在します。</exception>
      <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
      <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
      <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
      <param name="userName">認証するユーザー名。 既定値は空の文字列 ("") です。</param>
      <param name="password">認証するパスワード。 既定値は空の文字列 ("") です。</param>
      <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
      <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="onUserCancel">
        <c>ShowUI</c> が <see langword="True" /> に設定された場合に表示されるダイアログ ボックスで、ユーザーが **[キャンセル] または [いいえ]** をクリックしたときの動作を指定します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> が <see langword="False" /> に設定されていますが、コピー先のファイルが既に存在します。</exception>
      <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)">
      <summary>指定したサーバーに対して ping を実行します。</summary>
      <param name="hostNameOrAddress">ping の送信先サーバーの URL、コンピューター名、または IP アドレス。</param>
      <exception cref="T:System.InvalidOperationException">ネットワーク接続が利用できません。</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL が有効でない場合。</exception>
      <returns>操作が正常に終了した場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)">
      <summary>指定したサーバーに対して ping を実行します。</summary>
      <param name="hostNameOrAddress">ping の送信先サーバーの URL、コンピューター名、または IP アドレス。</param>
      <param name="timeout">接続先からの応答を待機する時間のしきい値 (ミリ秒)。 既定値は 500 です。</param>
      <exception cref="T:System.InvalidOperationException">ネットワーク接続が利用できません。</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL が有効でない場合。</exception>
      <returns>操作が正常に終了した場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)">
      <summary>指定したサーバーに対して ping を実行します。</summary>
      <param name="address">ping の送信先サーバーの URI。</param>
      <exception cref="T:System.InvalidOperationException">ネットワーク接続が利用できません。</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL が有効でない場合。</exception>
      <returns>操作が正常に終了した場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)">
      <summary>指定したサーバーに対して ping を実行します。</summary>
      <param name="address">ping の送信先サーバーの URI。</param>
      <param name="timeout">接続先からの応答を待機する時間のしきい値 (ミリ秒)。 既定値は 500 です。</param>
      <exception cref="T:System.InvalidOperationException">ネットワーク接続が利用できません。</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL が有効でない場合。</exception>
      <returns>操作が正常に終了した場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)">
      <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
      <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
      <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
      <exception cref="T:System.ArgumentException">ソース ファイルのパスが無効です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> にファイル名が含まれていません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)">
      <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
      <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
      <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
      <param name="userName">認証するユーザー名。 既定値は空の文字列 <c>""</c> です。</param>
      <param name="password">認証するパスワード。 既定値は空の文字列 <c>""</c> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> が 0 以下です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> にファイル名が含まれていません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
      <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
      <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
      <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
      <param name="userName">認証するユーザー名。 既定値は空の文字列 <c>""</c> です。</param>
      <param name="password">認証するパスワード。 既定値は空の文字列 <c>""</c> です。</param>
      <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> が 0 以下です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> にファイル名が含まれていません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
      <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
      <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
      <param name="userName">認証するユーザー名。 既定値は空の文字列 <c>""</c> です。</param>
      <param name="password">認証するパスワード。 既定値は空の文字列 <c>""</c> です。</param>
      <param name="showUI">操作の進行状況を表示するかどうか。 既定値は <see langword="False" /> です。</param>
      <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
      <param name="onUserCancel">ユーザーが **[キャンセル]** をクリックしたときに実行されるアクション。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> が 0 以下です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> にファイル名が含まれていません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)">
      <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
      <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
      <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
      <exception cref="T:System.ArgumentException">ソース ファイルのパスが無効です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> にファイル名が含まれていません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)">
      <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
      <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
      <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
      <param name="networkCredentials">認証用の資格情報。</param>
      <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> が 0 以下です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> にファイル名が含まれていません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
      <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
      <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
      <param name="networkCredentials">認証用の資格情報。</param>
      <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
      <param name="onUserCancel">ユーザーが **[キャンセル]** をクリックしたときに実行されるアクション。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> が 0 以下です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> にファイル名が含まれていません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)">
      <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
      <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
      <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
      <param name="userName">認証するユーザー名。 既定値は空の文字列 <c>""</c> です。</param>
      <param name="password">認証するパスワード。 既定値は空の文字列 <c>""</c> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> が 0 以下です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> にファイル名が含まれていません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)">
      <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
      <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
      <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
      <param name="userName">認証するユーザー名。 既定値は空の文字列 <c>""</c> です。</param>
      <param name="password">認証するパスワード。 既定値は空の文字列 <c>""</c> です。</param>
      <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> が 0 以下です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> にファイル名が含まれていません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
      <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
      <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
      <param name="userName">認証するユーザー名。 既定値は空の文字列 <c>""</c> です。</param>
      <param name="password">認証するパスワード。 既定値は空の文字列 <c>""</c> です。</param>
      <param name="showUI">操作の進行状況を表示するかどうか。 既定値は <see langword="False" /> です。</param>
      <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
      <param name="onUserCancel">ユーザーが **[キャンセル]** をクリックしたときに実行されるアクション。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> が 0 以下です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> にファイル名が含まれていません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
      <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
      <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Network.IsAvailable">
      <summary>コンピューターがネットワークに接続されているかどうかを示します。</summary>
      <returns>コンピューターがネットワークに接続されている場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs">
      <summary>
        <see langword="My.Application.NetworkAvailabilityChanged" /> イベントおよび <see langword="My.Computer.Network.NetworkAvailabilityChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.#ctor(System.Boolean)">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="networkAvailable">アプリケーションからネットワークを利用できるかどうかを示す <see cref="T:System.Boolean" /> 値。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable">
      <summary>アプリケーションからネットワークを利用できるかどうかを示す値を取得します。</summary>
      <returns>アプリケーションからネットワークを利用できるかどうかを示す <see cref="T:System.Boolean" /> 値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler">
      <summary>
        <see langword="My.Application.NetworkAvailabilityChanged" /> イベントまたは <see langword="My.Computer.Network.NetworkAvailabilityChanged" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを含んでいる <see cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" /> オブジェクト。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ServerComputer">
      <summary>オーディオ、時計、キーボード、ファイル システムなどのコンピューター コンポーネントを操作するためのプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock">
      <summary>システム時計から現在の現地時刻および世界協定時刻 (グリニッジ標準時と同じ) にアクセスするためのプロパティを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Clock" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem">
      <summary>ドライブ、ファイル、およびディレクトリを操作するためのプロパティとメソッドを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.FileSystem" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Info">
      <summary>コンピューターのメモリ、読み込まれているアセンブリ、コンピューター名、オペレーティング システムなどに関する情報を取得するためのプロパティを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Info" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Name">
      <summary>コンピューター名を取得します。</summary>
      <returns>このコンピューターの名前を保持する <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Network">
      <summary>コンピューターの接続先ネットワークと対話するためのプロパティおよびメソッドを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Network" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry">
      <summary>レジストリを操作するためのプロパティおよびメソッドを備えたオブジェクトを取得します。</summary>
      <returns>コンピューターの <see langword="My.Computer.Registry" /> オブジェクト。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> オブジェクトがログを出力しようとしたときに、空きディスク容量が <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> プロパティに指定された値を下回っていた場合の動作を決定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages">
      <summary>ログ メッセージを破棄します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException">
      <summary>例外をスローします。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
      <summary>ログ出力をファイルに転送する簡単なリスナーを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
      <summary>既定の名前を使用して、<see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
      <summary>指定された名前を使用して、<see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">
        <see langword="String" />. インスタンス オブジェクトの名前。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
      <summary>現在のログ ファイルに使用されているストリームを閉じ、現在のストリームに関連付けられたすべてのリソースを解放します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
      <summary>使用しているストリームを閉じ、選択されたオプションに従って、マネージド リソースを解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="True" />。アンマネージド リソースだけを解放する場合は <see langword="False" />。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
      <summary>現在のログ ファイルへの書き込みに使用しているストリームをフラッシュします。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
      <summary>トレース リスナーによってサポートされるカスタムの XML 構成属性を取得します。</summary>
      <returns>このリスナーで認識可能な XML 構成属性を保持する <see langword="String" /> 配列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>トレース情報、データ オブジェクト、およびイベント情報を出力ファイルまたはストリームに書き込みます。</summary>
      <param name="eventCache">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</param>
      <param name="source">このメソッドを呼び出したトレース ソースの名前。</param>
      <param name="eventType">
        <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</param>
      <param name="id">イベントの数値識別子。</param>
      <param name="data">出力するトレース データ。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>トレース情報、データ オブジェクトの配列、およびイベント情報を出力ファイルまたはストリームに書き込みます。</summary>
      <param name="eventCache">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</param>
      <param name="source">このメソッドを呼び出したトレース ソースの名前。</param>
      <param name="eventType">
        <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</param>
      <param name="id">イベントの数値識別子。</param>
      <param name="data">データとして出力するオブジェクトの配列。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>トレース情報、メッセージ、およびイベント情報を出力ファイルまたはストリームに書き込みます。</summary>
      <param name="eventCache">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</param>
      <param name="source">このメソッドを呼び出したトレース ソースの名前。</param>
      <param name="eventType">
        <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</param>
      <param name="id">イベントの数値識別子。</param>
      <param name="message">書き込むメッセージ。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>トレース情報、書式設定されたオブジェクトの配列、およびイベント情報を出力ファイルまたはストリームに書き込みます。</summary>
      <param name="eventCache">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</param>
      <param name="source">このメソッドを呼び出したトレース ソースの名前。</param>
      <param name="eventType">
        <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</param>
      <param name="id">イベントの数値識別子。</param>
      <param name="format">0 個以上の書式項目を格納している書式指定文字列。<paramref name="args" /> 配列内のオブジェクトに対応します。</param>
      <param name="args">0 個以上の書式設定対象オブジェクトを含んだ <see langword="Object" /> 配列。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
      <summary>文脈情報を付加せずに、メッセージを逐一ディスクに出力します。</summary>
      <param name="message">
        <see langword="String" />. 書き込むカスタム メッセージ。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
      <summary>文脈情報を追加せずに、メッセージを逐一ディスクに出力します。現在行の最後に終端記号が追加されます。</summary>
      <param name="message">
        <see langword="String" />. 書き込むカスタム メッセージ。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
      <summary>現在のファイルに追記するか、新しいファイルまたは既存のファイルに出力するかを決定します。</summary>
      <returns>
        <see langword="Boolean" /> 値。現在のファイルに追記する場合は <see langword="True" />。新しいファイルに出力する場合は <see langword="False" />。 このプロパティの既定の設定は <see langword="True" /> です。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
      <summary>ログ ファイル ストリームに書き込むたびに、バッファーをフラッシュするかどうかを示します。</summary>
      <returns>
        <see langword="Boolean" /> 値。書き込みのたびにストリームがフラッシュされる場合は <see langword="True" />。それ以外の場合、ログ エントリはバッファーに格納されて、より効率よく出力されます。 このプロパティの既定の設定は <see langword="False" /> です。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
      <summary>ログ ファイルの基本名を取得または設定します。ログ ファイルの完全名を生成するときに使用されます。</summary>
      <returns>
        <see langword="String" />. ログ ファイルの基本名。 既定では、アプリケーションの製品名になります。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
      <summary>
        <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> プロパティが <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /> に設定されている場合に、ログ ファイルのディレクトリを取得または設定します。</summary>
      <returns>ログ ファイルのディレクトリ名を表す <see langword="String" />。 このプロパティの既定の設定は、アプリケーション データ用のユーザー ディレクトリです。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
      <summary>ログ メッセージに使用されているフィールド区切り記号を取得または設定します。</summary>
      <returns>ログ メッセージのフィールド区切り記号を表す <see langword="String" />。 このプロパティの既定の設定はタブ文字です。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
      <summary>ログ ファイルへの出力時に、空きディスク容量が <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> プロパティに指定された値を下回っていた場合の動作を決定します。</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />. ログ ファイルへの出力時に、空きディスク容量が <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> プロパティに指定された値を下回っていた場合、または、ログ ファイルのサイズが <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> プロパティの値を超えていた場合の動作を決定します。 既定値は <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" /> です。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
      <summary>新しいログ ファイルを作成する際に使用するエンコーディングを取得または設定します。</summary>
      <returns>新しいログ ファイルを作成する際のエンコーディングを表す <see cref="T:System.Text.Encoding" />。 このプロパティの既定値は <see cref="T:System.Text.UTF8Encoding" /> です。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
      <summary>現在のログ ファイルの完全名を取得します。</summary>
      <returns>現在のログ ファイルの完全名を表す <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
      <summary>ログを記録しているコンピューターのホスト名を出力に含めるかどうかを示します。</summary>
      <returns>
        <see langword="Boolean" />. ホストの識別子を含める場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
      <summary>ログ ファイルの場所を取得または設定します。</summary>
      <returns>ログ ファイルの場所を表す <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />。 既定値は <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" /> です。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
      <summary>ログ ファイルの名前に追加する日付を決定します。</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />. ログ ファイルの名前に追加される日付を示します。 既定値は <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" /> です。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
      <summary>ログ ファイルの最大サイズ (バイト単位) を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">このプロパティが、1000 未満の値に設定されている場合に発生します。</exception>
      <returns>
        <see langword="Long" />. ログ ファイルの最大サイズ (バイト単位) を表します。 既定値は500万です。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
      <summary>確保する空きディスク容量 (バイト単位) を取得または設定します。この容量を下回ると、ログ ファイルにメッセージを出力できなくなります。</summary>
      <exception cref="T:System.ArgumentException">このプロパティが 0 未満の値に設定されている場合に発生します。</exception>
      <returns>
        <see langword="Long" />. 必要な空きディスク容量を表します。 既定値は1000万です。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.Log">
      <summary>イベントと例外の情報をアプリケーションのログ リスナーに書き込むためのプロパティとメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Logging.Log" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Logging.Log" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">
        <see cref="T:System.String" />. <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> プロパティ オブジェクトに割り当てる名前。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists">
      <summary>新しい <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> オブジェクトを作成し、それを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクションに追加します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
      <summary>アプリケーションのログ リスナーにメッセージを書き込みます。</summary>
      <param name="message">必須です。 記録するメッセージ。 <paramref name="message" /> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</param>
      <exception cref="T:System.Security.SecurityException">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
      <summary>アプリケーションのログ リスナーにメッセージを書き込みます。</summary>
      <param name="message">必須です。 記録するメッセージ。 <paramref name="message" /> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</param>
      <param name="severity">メッセージの種類。 既定では、<see langword="TraceEventType.Information" /> になります。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</exception>
      <exception cref="T:System.Security.SecurityException">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <summary>アプリケーションのログ リスナーにメッセージを書き込みます。</summary>
      <param name="message">必須です。 記録するメッセージ。 <paramref name="message" /> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</param>
      <param name="severity">メッセージの種類。 既定では、<see langword="TraceEventType.Information" /> になります。</param>
      <param name="id">メッセージ ID。一般に、メッセージの相関関係を示すために使用されます。 既定では、表に示した <c>entryType</c> と関連付けられます。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</exception>
      <exception cref="T:System.Security.SecurityException">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
      <summary>アプリケーションのログ リスナーに例外情報を書き込みます。</summary>
      <param name="ex">必須です。 記録する例外。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.Security.SecurityException">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
      <summary>アプリケーションのログ リスナーに例外情報を書き込みます。</summary>
      <param name="ex">必須です。 記録する例外。</param>
      <param name="severity">メッセージの種類。 既定では、<see cref="F:System.Diagnostics.TraceEventType.Error" /> になります。</param>
      <param name="additionalInfo">メッセージに追加する文字列。 既定では空の文字列です。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</exception>
      <exception cref="T:System.Security.SecurityException">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
      <summary>アプリケーションのログ リスナーに例外情報を書き込みます。</summary>
      <param name="ex">必須です。 記録する例外。</param>
      <param name="severity">メッセージの種類。 既定では、<see cref="F:System.Diagnostics.TraceEventType.Error" /> になります。</param>
      <param name="additionalInfo">メッセージに追加する文字列。 既定では空の文字列です。</param>
      <param name="id">メッセージ ID。一般に、メッセージの相関関係を示すために使用されます。 既定では、「解説」の表に示した <c>entryType</c> と関連付けられます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</exception>
      <exception cref="T:System.Security.SecurityException">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter">
      <summary>
        <see langword="Log" /> オブジェクトの基になるファイル (<see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> オブジェクト) を取得します。</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />オブジェクトの基になるオブジェクト <see langword="Log" /> 。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
      <summary>
        <see langword="Log" /> オブジェクトの基になる <see cref="T:System.Diagnostics.TraceSource" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.TraceSource" />オブジェクトの基になるオブジェクト <see langword="Log" /> 。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> クラスのログ ファイル名に追加する日付を決定します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily">
      <summary>ログ ファイルの名前に現在の日付を追加します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None">
      <summary>ログ ファイルの名前に日付を追加しません。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly">
      <summary>現在の週の最初の曜日をログ ファイルの名前に追加します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.LogFileLocation">
      <summary>
        <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> クラスがログ ファイルの出力先として使用するパスを定義します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory">
      <summary>すべてのユーザーが共有するアプリケーション データのパスを使用します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom">
      <summary>
        <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" /> に空以外の文字列が指定されている場合、そのパスが使用されます。 それ以外の場合は、ユーザーのアプリケーション データのパスが使用されます。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory">
      <summary>アプリケーションを開始した実行可能ファイルのパスを使用します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory">
      <summary>ユーザーのアプリケーション データのパスを使用します。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory">
      <summary>現在のシステムの一時フォルダーのパスを使用します。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.ClipboardProxy">
      <summary>クリップボードを操作するためのメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear">
      <summary>クリップボードをクリアします。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio">
      <summary>クリップボードにオーディオ データが格納されているかどうかを示します。</summary>
      <returns>オーディオ データがクリップボードに格納されている場合は <see langword="True" />、それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)">
      <summary>指定したカスタム形式のデータがクリップボードに格納されているかどうかを示します。</summary>
      <param name="format">
        <see langword="String" />. チェックするカスタム形式の名前。 必須です。</param>
      <returns>指定されたカスタム形式のデータがクリップボードに格納されている場合は <see langword="True" />、それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList">
      <summary>クリップボードにファイル ドロップ リストが格納されているかどうかを示す <see langword="Boolean" /> 値を返します。</summary>
      <returns>ファイル ドロップ リストがクリップボードに格納されている場合は <see langword="True" />、それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage">
      <summary>クリップボードにイメージが格納されているかどうかを示す <see langword="Boolean" /> 値を返します。</summary>
      <returns>イメージがクリップボードに格納されている場合は <see langword="True" />、それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText">
      <summary>クリップボードにテキストが存在するかどうかを確認します。</summary>
      <returns>クリップボードにテキストが格納されている場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)">
      <summary>クリップボードにテキストが存在するかどうかを確認します。</summary>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. 指定されている場合、チェックするテキスト形式を識別します。 必須です。</param>
      <returns>クリップボードにテキストが格納されている場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream">
      <summary>クリップボードからオーディオ ストリームを取得します。</summary>
      <returns>オーディオ データを格納している <see cref="T:System.IO.Stream" /> オブジェクト。クリップボードにオーディオ データが存在しない場合は <see langword="Nothing" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)">
      <summary>クリップボードからカスタム形式のデータを取得します。</summary>
      <param name="format">
        <see langword="String" />. データ形式の名前。 必須です。</param>
      <returns>クリップボードのデータを表す <see langword="Object" />。指定した形式のデータ、またはその形式に変換できるデータがクリップボードに含まれていない場合は <see langword="Nothing" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject">
      <summary>クリップボードからデータを <see cref="T:System.Windows.Forms.IDataObject" /> として取得します。</summary>
      <returns>現在クリップボードに格納されているデータを表す <see cref="T:System.Windows.Forms.IDataObject" /> オブジェクト。データがクリップボードに格納されていない場合は <see langword="Nothing" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList">
      <summary>ファイル名を表す文字列のコレクションをクリップボードから取得します。</summary>
      <returns>ファイル名を含んだ <see cref="T:System.Collections.Specialized.StringCollection" />。<see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 形式のデータ、またはその形式に変換できるデータがクリップボードに含まれていない場合は <see langword="Nothing" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage">
      <summary>クリップボードからイメージを取得します。</summary>
      <returns>クリップボードのイメージ データを表す <see cref="T:System.Drawing.Image" />。<see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> 形式のデータ、またはその形式に変換できるデータがクリップボードに含まれていない場合は <see langword="Nothing" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText">
      <summary>クリップボードからテキストを取得します。</summary>
      <returns>クリップボードのテキスト データ。オペレーティング システムに応じた <see cref="F:System.Windows.Forms.DataFormats.Text" /> 形式または <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 形式のデータがクリップボードに含まれていない場合は空の文字列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)">
      <summary>クリップボードからテキストを取得します。</summary>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. 指定されている場合、取得するテキストの形式を識別します。 既定値は <see cref="F:System.Windows.Forms.TextDataFormat.CommaSeparatedValue" /> です。 必須です。</param>
      <returns>クリップボードのテキスト データ。指定した形式のデータがクリップボードに含まれていない場合は空の文字列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])">
      <summary>オーディオ データをクリップボードに書き込みます。</summary>
      <param name="audioBytes">
        <see langword="Byte" /> 配列 クリップボードに書き込むオーディオ データ。 必須です。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)">
      <summary>オーディオ データをクリップボードに書き込みます。</summary>
      <param name="audioStream">
        <see cref="T:System.IO.Stream" />。クリップボードに書き込むオーディオ データ。 必須です。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)">
      <summary>クリップボードにカスタム形式のデータを書き込みます。</summary>
      <param name="format">
        <see langword="String" />. データの形式。 必須です。</param>
      <param name="data">
        <see langword="Object" />. クリップボードに書き込むデータ オブジェクト。 必須です。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)">
      <summary>
        <see cref="T:System.Windows.Forms.DataObject" /> をクリップボードに書き込みます。</summary>
      <param name="data">
        <see cref="T:System.Windows.Forms.DataObject" />. クリップボードに書き込むデータ オブジェクト。 必須です。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)">
      <summary>ファイル パスを表す文字列のコレクションをクリップボードに書き込みます。</summary>
      <param name="filePaths">
        <see cref="T:System.Collections.Specialized.StringCollection" />. ファイル名のリスト。 必須です。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)">
      <summary>イメージをクリップボードに書き込みます。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" />. 書き込むイメージ。 必須です。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)">
      <summary>テキストをクリップボードに書き込みます。</summary>
      <param name="text">
        <see langword="String" />. 書き込むテキスト。 必須です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> が空の文字列です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> が <see langword="Nothing" />です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)">
      <summary>テキストをクリップボードに書き込みます。</summary>
      <param name="text">
        <see langword="String" />. 書き込むテキスト。 必須です。</param>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. テキストの書き込み時に使用する形式。 既定値は <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> です。 必須です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> が空の文字列です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> が <see langword="Nothing" />です。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.FileSystemProxy">
      <summary>ドライブ、ファイル、ディレクトリを操作するためのプロパティとメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)">
      <summary>2 つのパスを結合し、適切な形式のパスを返します。</summary>
      <param name="baseDirectory">
        <see langword="String" />. 結合する 1 つ目のパス。</param>
      <param name="relativePath">
        <see langword="String" />. 結合する 2 つ目のパス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> または <paramref name="relativePath" /> のパスの形式が正しくありません。</exception>
      <returns>指定されたパスの組み合わせ。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)">
      <summary>あるディレクトリを別のディレクトリにコピーします。</summary>
      <param name="sourceDirectoryName">コピーするディレクトリ。</param>
      <param name="destinationDirectoryName">ディレクトリのコピー先の場所。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">コピー元のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">コピー元とコピー先のパスが同じです。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">コピー先のファイルは存在しますが、アクセスできません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>あるディレクトリを別のディレクトリにコピーします。</summary>
      <param name="sourceDirectoryName">コピーするディレクトリ。</param>
      <param name="destinationDirectoryName">ディレクトリのコピー先の場所。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">コピー元のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">コピー元とコピー先のパスが同じです。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">コピー先のファイルは存在しますが、アクセスできません。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> が <see langword="UIOption.AllDialogs" /> に設定されている場合にユーザーが操作を取り消したか、ディレクトリ内の 1 つ以上のファイルをコピーできません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>あるディレクトリを別のディレクトリにコピーします。</summary>
      <param name="sourceDirectoryName">コピーするディレクトリ。</param>
      <param name="destinationDirectoryName">ディレクトリのコピー先の場所。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="onUserCancel">操作中にユーザーが **[キャンセル]** をクリックした場合の処理を指定します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">コピー元のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">コピー元とコピー先のパスが同じです。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">コピー先のファイルは存在しますが、アクセスできません。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> が <see langword="UIOption.AllDialogs" /> に設定されている場合にユーザーが操作を取り消したか、ディレクトリ内の 1 つ以上のファイルをコピーできません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>あるディレクトリを別のディレクトリにコピーします。</summary>
      <param name="sourceDirectoryName">コピーするディレクトリ。</param>
      <param name="destinationDirectoryName">ディレクトリのコピー先の場所。</param>
      <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">コピー元のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">コピー元とコピー先のパスが同じです。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">コピー先のファイルは存在しますが、アクセスできません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)">
      <summary>ファイルを新しい場所にコピーします。</summary>
      <param name="sourceFileName">コピーするファイル。</param>
      <param name="destinationFileName">ファイルのコピー先となる場所。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">コピー先のディレクトリにある同じ名前のファイルが使用中です。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>ファイルを新しい場所にコピーします。</summary>
      <param name="sourceFileName">コピーするファイル。</param>
      <param name="destinationFileName">ファイルのコピー先となる場所。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>ファイルを新しい場所にコピーします。</summary>
      <param name="sourceFileName">コピーするファイル。</param>
      <param name="destinationFileName">ファイルのコピー先となる場所。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="onUserCancel">操作中にユーザーが **[キャンセル]** をクリックした場合の処理を指定します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> が <see langword="ThrowException" /> に設定されている場合にユーザーが操作を取り消したか、不特定の I/O エラーが発生しました。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)">
      <summary>ファイルを新しい場所にコピーします。</summary>
      <param name="sourceFileName">コピーするファイル。</param>
      <param name="destinationFileName">ファイルのコピー先となる場所。</param>
      <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)">
      <summary>ディレクトリを作成します。</summary>
      <param name="directory">ディレクトリの名前および場所。</param>
      <exception cref="T:System.ArgumentException">ディレクトリ名が不正な場合。 たとえば、無効な文字が含まれているか、空白のみであることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException">ディレクトリ名が長すぎます。</exception>
      <exception cref="T:System.NotSupportedException">ディレクトリ名にコロン (":") だけが指定されている場合</exception>
      <exception cref="T:System.IO.IOException">作成するディレクトリの親ディレクトリが読み取り専用です。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーがディレクトリを作成するためのアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>ディレクトリを削除します。</summary>
      <param name="directory">削除するディレクトリ。</param>
      <param name="onDirectoryNotEmpty">削除するディレクトリにファイルまたはディレクトリが含まれている場合に実行する操作を指定します。 既定値は <see langword="DeleteDirectoryOption.DeleteAllContents" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。 パスがデバイス パスです (\\.\ で始まる)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しないか、ファイルが指定されています。</exception>
      <exception cref="T:System.IO.IOException">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</exception>
      <exception cref="T:System.NotSupportedException">ディレクトリ名にコロン (:) が含まれています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.OperationCanceledException">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>ディレクトリを削除します。</summary>
      <param name="directory">削除するディレクトリ。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="recycle">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。 既定値は <see langword="RecycleOption.DeletePermanently" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。 パスがデバイス パスです (\\.\ で始まる)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しないか、ファイルが指定されています。</exception>
      <exception cref="T:System.IO.IOException">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</exception>
      <exception cref="T:System.NotSupportedException">ディレクトリ名にコロン (:) が含まれています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.OperationCanceledException">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>ディレクトリを削除します。</summary>
      <param name="directory">削除するディレクトリ。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="recycle">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。 既定値は <see langword="RecycleOption.DeletePermanently" /> です。</param>
      <param name="onUserCancel">ユーザーが **[キャンセル]** をクリックした場合に例外をスローするかどうかを指定します。</param>
      <exception cref="T:System.ArgumentException">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。 パスがデバイス パスです (\\.\ で始まる)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しないか、ファイルが指定されています。</exception>
      <exception cref="T:System.IO.IOException">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</exception>
      <exception cref="T:System.NotSupportedException">ディレクトリ名にコロン (:) が含まれています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.OperationCanceledException">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)">
      <summary>ファイルを削除します。</summary>
      <param name="file">削除対象のファイルの名前とパス。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.IOException">ファイルが使用中です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>ファイルを削除します。</summary>
      <param name="file">削除対象のファイルの名前とパス。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="recycle">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。 既定値は <see langword="RecycleOption.DeletePermanently" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.IOException">ファイルが使用中です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>ファイルを削除します。</summary>
      <param name="file">削除対象のファイルの名前とパス。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうか。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="recycle">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。 既定値は <see langword="RecycleOption.DeletePermanently" /> です。</param>
      <param name="onUserCancel">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。 既定値は <see langword="UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.IO.IOException">ファイルが使用中です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</exception>
      <exception cref="T:System.OperationCanceledException">ユーザーが操作を取り消し、かつ <paramref name="onUserCancel" /> が <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> に設定されています。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)">
      <summary>指定されたディレクトリが存在する場合、<see langword="True" /> を返します。</summary>
      <param name="directory">ディレクトリのパス。</param>
      <returns>ディレクトリが存在する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)">
      <summary>指定されたファイルが存在する場合、<see langword="True" /> を返します。</summary>
      <param name="file">ファイルの名前とパス。</param>
      <exception cref="T:System.ArgumentException">ファイル名がバックスラッシュ (\) で終わっています。</exception>
      <returns>ファイルが存在する場合は <see langword="True" /> を返します。それ以外の場合は <see langword="False" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</summary>
      <param name="directory">検索するディレクトリ。</param>
      <param name="containsText">検索文字列。</param>
      <param name="ignoreCase">検索時に大文字と小文字を区別する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="True" /> です。</param>
      <param name="searchType">サブフォルダーを含めるかどうか。 既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</param>
      <exception cref="T:System.ArgumentException">次のいずれかの理由でパスが無効です: 長さが0の文字列です。これには、空白のみが含まれます。無効な文字が含まれています。またはデバイスパス ( <c> \\ . \</c>で始まる) です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">指定されたディレクトリが既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">指定されたディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <returns>指定されたテキストを含んでいるファイルの名前の読み取り専用コレクション。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</summary>
      <param name="directory">検索するディレクトリ。</param>
      <param name="containsText">検索文字列。</param>
      <param name="ignoreCase">検索時に大文字と小文字を区別する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="True" /> です。</param>
      <param name="searchType">サブフォルダーを含めるかどうか。 既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</param>
      <param name="fileWildcards">検索に使用するパターン。</param>
      <exception cref="T:System.ArgumentException">次のいずれかの理由でパスが無効です: 長さが0の文字列です。これには、空白のみが含まれます。無効な文字が含まれています。またはデバイスパス ( <c> \\ . \</c>で始まる) です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">指定されたディレクトリが既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">指定されたディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <returns>指定されたテキストを含んでいるファイルの名前の読み取り専用コレクション。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)">
      <summary>ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</summary>
      <param name="directory">ディレクトリの名前とパス。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">指定されたディレクトリが既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <returns>指定されたディレクトリに存在するサブディレクトリのパス名の読み取り専用コレクション。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</summary>
      <param name="directory">ディレクトリの名前とパス。</param>
      <param name="searchType">サブフォルダーを含めるかどうか。 既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</param>
      <param name="wildcards">名前の検索に使用するパターン。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">指定したワイルドカード文字の中に、<see langword="Nothing" />、空の文字列、または空白のみが含まれています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定されたディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">指定されたディレクトリが既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <returns>指定されたディレクトリに存在するサブディレクトリのパス名の読み取り専用コレクション。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)">
      <summary>指定したパスの <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを返します。</summary>
      <param name="directory">
        <see langword="String" />. ディレクトリのパス。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">ディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <returns>指定されたパスの <see cref="T:System.IO.DirectoryInfo" /> オブジェクト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)">
      <summary>指定したドライブの <see cref="T:System.IO.DriveInfo" /> オブジェクトを返します。</summary>
      <param name="drive">確認するドライブ。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <returns>指定されたドライブの <see cref="T:System.IO.DriveInfo" /> オブジェクト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)">
      <summary>指定したファイルの <see cref="T:System.IO.FileInfo" /> オブジェクトを返します。</summary>
      <param name="file">ファイルの名前とパス。</param>
      <exception cref="T:System.ArgumentException">パス名が不適切である場合。 たとえば、無効な文字が含まれている場合や、空白のみの場合などがあります。 ファイル名の末尾にスラッシュ記号が付いています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.NotSupportedException">パス文字列の途中にコロンが含まれています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスが長すぎます。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">当該ファイルに対して、ユーザーがアクセス制御リスト (ACL: access control list) のアクセス許可を保持していません。</exception>
      <returns>指定されたファイルの <see cref="T:System.IO.FileInfo" /> オブジェクト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)">
      <summary>ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</summary>
      <param name="directory">検索するディレクトリ。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">検索対象のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> が既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <returns>指定されたディレクトリから取得されたファイル名の読み取り専用コレクション。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</summary>
      <param name="directory">検索するディレクトリ。</param>
      <param name="searchType">サブフォルダーを含めるかどうか。 既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</param>
      <param name="wildcards">検索に使用するパターン。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">検索対象のディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> が既存のファイルを指しています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <returns>指定されたディレクトリから取得されたファイル名の読み取り専用コレクション。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)">
      <summary>指定されたパスからファイル名を解析し、取り出します。</summary>
      <param name="path">必須です。 解析対象のパス。 <see langword="String" />.</param>
      <returns>指定されたパスのファイル名部分。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)">
      <summary>指定されたパスの親パスを返します。</summary>
      <param name="path">確認するパス。</param>
      <exception cref="T:System.ArgumentException">パスがルート パスであるため、親パスが存在しません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <returns>指定されたパスの親パス。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName">
      <summary>一意な名前を持つ 0 バイトの一時ファイルをディスク上に作成し、そのファイルへの完全パスを返します。</summary>
      <returns>一時ファイルの完全パスを保持する <see langword="String" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)">
      <summary>ディレクトリの場所を移動します。</summary>
      <param name="sourceDirectoryName">移動するディレクトリのパス。</param>
      <param name="destinationDirectoryName">ソース ディレクトリの移動先となるディレクトリのパス。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">移動先がルート ディレクトリであるか、移動元と移動先のパスが同じです。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>ディレクトリの場所を移動します。</summary>
      <param name="sourceDirectoryName">移動するディレクトリのパス。</param>
      <param name="destinationDirectoryName">ソース ディレクトリの移動先となるディレクトリのパス。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">ターゲット ディレクトリが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>ディレクトリの場所を移動します。</summary>
      <param name="sourceDirectoryName">移動するディレクトリのパス。</param>
      <param name="destinationDirectoryName">ソース ディレクトリの移動先となるディレクトリのパス。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="onUserCancel">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。 既定値は <see langword="UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されており、ファイルのサブディレクトリをコピーできません。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されている場合にユーザーが操作を取り消したか、操作を完了できませんでした。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>ディレクトリの場所を移動します。</summary>
      <param name="sourceDirectoryName">移動するディレクトリのパス。</param>
      <param name="destinationDirectoryName">ソース ディレクトリの移動先となるディレクトリのパス。</param>
      <param name="overwrite">既存のディレクトリを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\.\ で始まっている) ことが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">ターゲット ディレクトリが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.InvalidOperationException">操作が巡回しています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)">
      <summary>ファイルを新しい場所に移動します。</summary>
      <param name="sourceFileName">移動するファイルのパス。</param>
      <param name="destinationFileName">ファイルの移動先となるディレクトリのパス。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>ファイルを新しい場所に移動します。</summary>
      <param name="sourceFileName">移動するファイルのパス。</param>
      <param name="destinationFileName">ファイルの移動先となるディレクトリのパス。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>ファイルを新しい場所に移動します。</summary>
      <param name="sourceFileName">移動するファイルのパス。</param>
      <param name="destinationFileName">ファイルの移動先となるディレクトリのパス。</param>
      <param name="showUI">操作の進行状況を視覚的に追跡するかどうかを指定します。 既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</param>
      <param name="onUserCancel">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。 既定値は <see langword="UICancelOption.ThrowException" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されている場合に、ユーザーが操作を取り消したか、不特定の I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)">
      <summary>ファイルを新しい場所に移動します。</summary>
      <param name="sourceFileName">移動するファイルのパス。</param>
      <param name="destinationFileName">ファイルの移動先となるディレクトリのパス。</param>
      <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ソース ファイルが有効でないか、存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)">
      <summary>
        <see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。 <see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</summary>
      <param name="file">
        <see langword="TextFieldParser" /> で開くファイル。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">指定の書式を使用して行を解析できません。 例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <returns>指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>
        <see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。 <see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</summary>
      <param name="file">
        <see langword="TextFieldParser" /> で開くファイル。</param>
      <param name="fieldWidths">フィールドの幅。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">指定の書式を使用して行を解析できません。 例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <returns>指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])">
      <summary>
        <see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。 <see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</summary>
      <param name="file">
        <see langword="TextFieldParser" /> で開くファイル。</param>
      <param name="delimiters">フィールドの区切り記号。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">指定の書式を使用して行を解析できません。 例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <returns>指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)">
      <summary>
        <see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</summary>
      <param name="file">読み取るファイル。</param>
      <exception cref="T:System.ArgumentException">ファイル名がバックスラッシュ (\) で終わっています。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定されたファイルが見つかりません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがファイルの読み取りに必要なアクセス許可を保持していません。</exception>
      <returns>ファイルから読み取る <see cref="T:System.IO.StreamReader" /> オブジェクト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>
        <see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</summary>
      <param name="file">読み取るファイル。</param>
      <param name="encoding">ファイルの内容に使用されるエンコーディング。 既定値は ASCII です。</param>
      <exception cref="T:System.ArgumentException">ファイル名がバックスラッシュ (\) で終わっています。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定されたファイルが見つかりません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがファイルの読み取りに必要なアクセス許可を保持していません。</exception>
      <returns>ファイルから読み取る <see cref="T:System.IO.StreamReader" /> オブジェクト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>
        <see cref="T:System.IO.StreamWriter" /> オブジェクトを開いて指定されたファイルに書き込みます。</summary>
      <param name="file">書き込み先のファイル。</param>
      <param name="append">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">ファイル名の末尾にスラッシュが付いています。</exception>
      <returns>指定したファイルに書き込む <see cref="T:System.IO.StreamWriter" /> オブジェクト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>
        <see cref="T:System.IO.StreamWriter" /> を開いて指定されたファイルに書き込みます。</summary>
      <param name="file">書き込み先のファイル。</param>
      <param name="append">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="encoding">ファイルへの書き込み時に使用するエンコーディング。 既定値は ASCII です。</param>
      <exception cref="T:System.ArgumentException">ファイル名の末尾にスラッシュが付いています。</exception>
      <returns>指定したファイルに書き込む <see cref="T:System.IO.StreamWriter" /> オブジェクト。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)">
      <summary>テキスト ファイルの内容をバイト配列として返します。</summary>
      <param name="file">読み取るファイル。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <returns>ファイルの内容を保持する <see langword="Byte" /> 配列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)">
      <summary>テキスト ファイルの内容を <see langword="String" /> として返します。</summary>
      <param name="file">読み取るファイルの名前とパス。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <returns>ファイルの内容を保持する <see langword="String" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)">
      <summary>テキスト ファイルの内容を <see langword="String" /> として返します。</summary>
      <param name="file">読み取るファイルの名前とパス。</param>
      <param name="encoding">ファイルの読み取り時に使用する文字エンコーディング。 既定値は UTF-8 です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <returns>ファイルの内容を保持する <see langword="String" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)">
      <summary>ディレクトリ名を変更します。</summary>
      <param name="directory">名前を変更するディレクトリのパスおよび名前。</param>
      <param name="newName">ディレクトリの新しい名前。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> にパス情報が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> が <see langword="Nothing" />です。  
  
- または - 
 <paramref name="newName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">ディレクトリが存在しません。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="newName" /> で指定したのと同じ名前のファイルまたはディレクトリが既に存在します。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)">
      <summary>ファイル名を変更します。</summary>
      <param name="file">名前を変更するファイル。</param>
      <param name="newName">新しいファイル名。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> にパス情報が含まれているか、末尾にバックスラッシュ (\) が付いています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" />です。  
  
- または - 
 <paramref name="newName" /> が <see langword="Nothing" /> または空の文字列です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="newName" /> で指定したのと同じ名前のファイルまたはディレクトリが既に存在します。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>バイナリ ファイルにデータを書き込みます。</summary>
      <param name="file">書き込み先のファイルのパスと名前。</param>
      <param name="data">ファイルに書き込むデータ。</param>
      <param name="append">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>ファイルにテキストを書き込みます。</summary>
      <param name="file">書き込み先のファイル。</param>
      <param name="text">ファイルに書き込まれるテキスト。</param>
      <param name="append">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>ファイルにテキストを書き込みます。</summary>
      <param name="file">書き込み先のファイル。</param>
      <param name="text">ファイルに書き込まれるテキスト。</param>
      <param name="append">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
      <param name="encoding">ファイルへの書き込み時に使用するエンコーディングを指定します。 既定値は UTF-8 です。</param>
      <exception cref="T:System.ArgumentException">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\.\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイルが存在しません。</exception>
      <exception cref="T:System.IO.IOException">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.IO.PathTooLongException">パスがシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.NotSupportedException">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</exception>
      <exception cref="T:System.OutOfMemoryException">文字列をバッファーに書き込むための十分なメモリがありません。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory">
      <summary>現在のディレクトリを取得または設定します。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが無効です。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ユーザーに必要なアクセス許可がありません。</exception>
      <returns>ファイル I/O 操作の現在のディレクトリ。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives">
      <summary>利用可能なすべてのドライブ名の読み取り専用コレクションを返します。</summary>
      <returns>
        <see cref="T:System.IO.DriveInfo" /> オブジェクトとして使用できるすべてのドライブの読み取り専用コレクション。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories">
      <summary>頻繁に参照されるディレクトリにアクセスするためのプロパティを備えたオブジェクトを取得します。</summary>
      <returns>このプロパティは、コンピューターの <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" /> オブジェクトを返します。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1">
      <summary>このクラスは、Visual Basic の <see langword="My" /> をサポートします。</summary>
      <typeparam name="T">格納するオブジェクトの型。</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor">
      <summary>このクラスは、Visual Basic の <see langword="My" /> をサポートします。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value">
      <summary>このプロパティは、Visual Basic の <see langword="My" /> をサポートします。</summary>
      <returns>このクラスに関連付けられている値。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.RegistryProxy">
      <summary>レジストリを操作するためのプロパティとメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)">
      <summary>レジストリ キーから値を取得します。</summary>
      <param name="keyName">
        <see langword="String" />. 値の取得元のキー。 必須です。</param>
      <param name="valueName">
        <see langword="String" />. 取得する値。 必須です。</param>
      <param name="defaultValue">
        <see langword="Object" />. 値が存在しなかった場合に使用される既定値。 必須です。</param>
      <exception cref="T:System.Security.SecurityException">ユーザーに、レジストリ キーからの読み取りに必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.IOException">指定された値を格納する <see cref="T:Microsoft.Win32.RegistryKey" /> は、削除対象としてマークされています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> が有効なレジストリ ルートから始まっていません。</exception>
      <returns>レジストリ キーから値を取得します。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)">
      <summary>レジストリ キーに値を書き込みます。</summary>
      <param name="keyName">
        <see langword="String" />. 書き込み先のキーの名前。 必須です。</param>
      <param name="valueName">
        <see langword="String" />. 書き込む値の名前。 必須です。</param>
      <param name="value">
        <see langword="Object" />. 書き込む値。 必須です。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> が有効なレジストリ ルートから始まっていません。  
  
- または - 
 <paramref name="valueName" /> が許容される最大長 (255 文字) を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="T:Microsoft.Win32.RegistryKey" /> が読み取り専用であるため、このキーに書き込むことはできません。ルート レベル ノードの場合や、書き込みアクセスが設定された状態でキーが開かれていない場合などです。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーに、レジストリ キーの作成または変更に必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
      <summary>レジストリ キーに値を書き込みます。</summary>
      <param name="keyName">
        <see langword="String" />. 書き込み先のキーの名前。 必須です。</param>
      <param name="valueName">
        <see langword="String" />. 書き込む値の名前。 必須です。</param>
      <param name="value">
        <see langword="Object" />. 書き込む値。 必須です。</param>
      <param name="valueKind">
        <see cref="T:Microsoft.Win32.RegistryValueKind" />. 必須です。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="Nothing" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> が有効なレジストリ ルートから始まっていません。  
  
- または - 
 <paramref name="keyName" /> が許容される最大長 (255 文字) を超えています。  
  
- または - 
<paramref name="value" /> の型が <paramref name="valueKind" /> で指定したレジストリ データ型と一致しないため、データを適切に変換できません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="T:Microsoft.Win32.RegistryKey" /> が読み取り専用であるため、このキーに書き込むことはできません。ルートレベル ノードの場合や、書き込みアクセスが設定された状態でキーが開かれていない場合などです。</exception>
      <exception cref="T:System.Security.SecurityException">ユーザーに、レジストリ キーの作成または変更に必要なアクセス許可がありません。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot">
      <summary>
        <see langword="HKEY_CLASSES_ROOT" /> へのアクセスを提供する <see cref="T:Microsoft.Win32.RegistryKey" /> 型を返します。</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig">
      <summary>
        <see langword="HKEY_CURRENT_CONFIG" /> へのアクセスを提供する <see cref="T:Microsoft.Win32.RegistryKey" /> 型を返します。</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser">
      <summary>
        <see langword="HKEY_CURRENT_USER" /> へのアクセスを提供する <see cref="T:Microsoft.Win32.RegistryKey" /> 型を返します。</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine">
      <summary>
        <see langword="HKEY_LOCAL_MACHINE" /> へのアクセスを提供する <see cref="T:Microsoft.Win32.RegistryKey" /> 型を返します。</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData">
      <summary>
        <see langword="HKEY_PERFORMANCE_DATA" /> へのアクセスを提供する <see cref="T:Microsoft.Win32.RegistryKey" /> 型を返します。</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users">
      <summary>
        <see langword="HKEY_USERS" /> へのアクセスを提供する <see cref="T:Microsoft.Win32.RegistryKey" /> 型を返します。</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
      <summary>一般的に参照されるディレクトリにアクセスするためのプロパティを提供します。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData">
      <summary>すべてのユーザー用の Application Data ディレクトリへのパス名を取得します。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
      <returns>すべてのユーザー用の Application Data ディレクトリへのパス。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData">
      <summary>現在のユーザー用の Application Data ディレクトリへのパス名を取得します。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
      <returns>現在のユーザー用の Application Data ディレクトリへのパス。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop">
      <summary>デスクトップ ディレクトリへのパス名を取得します。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
      <returns>デスクトップ ディレクトリへのパス。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments">
      <summary>マイ ドキュメント ディレクトリを指すパス名を取得します。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
      <returns>マイ ドキュメント ディレクトリへのパス。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic">
      <summary>My Music ディレクトリへのパス名を取得します。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
      <returns>マイ ミュージック ディレクトリへのパス。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures">
      <summary>My Pictures ディレクトリへのパス名を取得します。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
      <returns>マイ ピクチャ ディレクトリへのパス。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles">
      <summary>Program Files ディレクトリへのパスを取得します。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
      <returns>Program Filesディレクトリへのパス。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs">
      <summary>Programs ディレクトリへのパス名を取得します。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
      <returns>Programs ディレクトリへのパス。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp">
      <summary>Temp ディレクトリへのパス名を取得します。</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">パスが空です。通常は、オペレーティング システムでディレクトリがサポートされていないことが原因です。</exception>
      <returns>Temp ディレクトリへのパス。</returns>
    </member>
  </members>
</doc>