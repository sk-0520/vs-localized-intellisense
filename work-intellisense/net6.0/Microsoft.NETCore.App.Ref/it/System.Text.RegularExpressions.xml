<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Text.RegularExpressions</name>
  </assembly>
  <members>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary vsli:raw="Represents the results from a single successful subexpression capture.">Rappresenta i risultati di una singola acquisizione di sottoespressione riuscita.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary vsli:raw="Retrieves the captured substring from the input string by calling the &lt;see cref=&quot;P:System.Text.RegularExpressions.Capture.Value&quot; /&gt; property.">Recupera la sottostringa acquisita dalla stringa di input chiamando la proprietà <see cref="P:System.Text.RegularExpressions.Capture.Value" />.</summary>
      <returns vsli:raw="The substring that was captured by the match.">Sottostringa acquisita dalla corrispondenza.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary vsli:raw="The position in the original string where the first character of the captured substring is found.">Posizione nella stringa originale in cui si trova il primo carattere della sottostringa acquisita.</summary>
      <returns vsli:raw="The zero-based starting position in the original string where the captured substring is found.">Posizione iniziale con inizio zero nella stringa originale in cui si trova la sottostringa acquisita.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary vsli:raw="Gets the length of the captured substring.">Ottiene la lunghezza della sottostringa acquisita.</summary>
      <returns vsli:raw="The length of the captured substring.">Lunghezza della sottostringa acquisita.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary vsli:raw="Gets the captured substring from the input string.">Ottiene la sottostringa acquisita dalla stringa di input.</summary>
      <returns vsli:raw="The substring that is captured by the match.">Sottostringa acquisita dalla corrispondenza.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary vsli:raw="Represents the set of captures made by a single capturing group. The collection is immutable (read-only) and has no public constructor.">Rappresenta il set di acquisizioni eseguite da un singolo gruppo di acquisizione. La raccolta non è modificabile (sola lettura) e non ha costruttori pubblici.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">Copia tutti gli elementi della raccolta nella matrice indicata a partire dall'indice specificato.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Matrice in cui copiare la raccolta.</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where copying is to begin.">Posizione nella matrice di destinazione in cui iniziare la copiatura.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> non rientra nei limiti di <paramref name="array" />.  
  
-oppure- 
 <paramref name="arrayIndex" /> e <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> non rientrano nei limiti di <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia gli elementi della raccolta in un oggetto <see cref="T:System.Array" />, a partire da uno specifico indice di <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'insieme. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than 0.">
        <paramref name="arrayIndex" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source collection is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Il numero degli elementi nella raccolta di origine è maggiore dello spazio disponibile da <paramref name="arrayIndex" /> alla fine del parametro <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Fornisce un enumeratore che scorre la raccolta.</summary>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Capture&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">Oggetto contenente tutti gli oggetti <see cref="T:System.Text.RegularExpressions.Capture" /> all'interno di <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to add to the collection.">Oggetto da aggiungere alla raccolta.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">Determina se la raccolta contiene un valore specifico.</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">Oggetto da individuare nella raccolta.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore <paramref name="item" /> viene trovato nella raccolta. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to remove from the collection.">Oggetto da rimuovere dalla raccolta.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Enumeratore che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Determina l'indice di un elemento specifico dell'insieme.</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">Oggetto da individuare nella raccolta.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;item&quot; /&gt; if found in the list; otherwise, -1.">Indice di <paramref name="item" />, se presente nell'elenco; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted.">Indice in base zero nel quale <paramref name="item" /> deve essere inserito.</param>
      <param name="item" vsli:raw="The object to insert into the collection.">Oggetto da inserire nella raccolta.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The object to add to the collection.">Oggetto da aggiungere alla raccolta.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">Determina se la raccolta contiene un valore specifico.</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">Oggetto da individuare nella raccolta.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> viene trovato nell'insieme; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Determina l'indice di un elemento specifico dell'insieme.</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">Oggetto da individuare nella raccolta.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">Indice di <paramref name="value" />, se presente nell'elenco; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</param>
      <param name="value" vsli:raw="The object to insert into the collection.">Oggetto da inserire nella raccolta.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The object to remove from the collection.">Oggetto da rimuovere dalla raccolta.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary vsli:raw="Gets the number of substrings captured by the group.">Ottiene il numero delle sottostringhe acquisite dal gruppo.</summary>
      <returns vsli:raw="The number of items in the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">Numero di elementi presenti nel controllo <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized (thread-safe).">Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">Ottiene un singolo membro della raccolta.</summary>
      <param name="i" vsli:raw="Index into the capture collection.">Indice nella raccolta di acquisizioni.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt;.">
        <paramref name="i" /> è minore di 0 o maggiore di <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />.</exception>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">Sottostringa acquisita alla posizione <paramref name="i" /> della raccolta.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection.">Oggetto che può essere utilizzato per sincronizzare l'accesso alla raccolta.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">Ottiene l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">Indice in base zero dell'elemento da ottenere.</param>
      <returns vsli:raw="The element at the specified index.">Elemento in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the collection has a fixed size.">Ottiene un valore che indica se la dimensione della raccolta è fissa.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, since the collection has a fixed size.">
        <see langword="true" />, perché le dimensioni della raccolta sono fisse.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">Ottiene l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">Indice in base zero dell'elemento da ottenere.</param>
      <returns vsli:raw="The element at the specified index.">Elemento in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary vsli:raw="Represents the results from a single capturing group.">Rappresenta i risultati di un singolo gruppo di acquisizione.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Group&quot; /&gt; object equivalent to the one supplied that is safe to share between multiple threads.">Restituisce un oggetto <see langword="Group" /> equivalente a quello fornito che può essere condiviso tra più thread.</summary>
      <param name="inner" vsli:raw="The input &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; object.">Oggetto <see cref="T:System.Text.RegularExpressions.Group" /> di input.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inner" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A regular expression &lt;see langword=&quot;Group&quot; /&gt; object.">Oggetto <see langword="Group" /> dell'espressione regolare.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary vsli:raw="Gets a collection of all the captures matched by the capturing group, in innermost-leftmost-first order (or innermost-rightmost-first order if the regular expression is modified with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option). The collection may have zero or more items.">Ottiene una raccolta di tutte le acquisizioni rilevate dal gruppo di acquisizione, nel primo ordine più interno e più a sinistra (o nel primo ordine più interno e più a destra se l'espressione regolare viene modificata con l'opzione <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />). La raccolta può avere zero o più elementi.</summary>
      <returns vsli:raw="The collection of substrings matched by the group.">Raccolta delle sottostringhe individuate dal gruppo.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Name">
      <summary vsli:raw="Returns the name of the capturing group represented by the current instance.">Restituisce nome del gruppo di acquisizione rappresentato dall'istanza corrente.</summary>
      <returns vsli:raw="The name of the capturing group represented by the current instance.">Nome del gruppo di acquisizione rappresentato dall'istanza corrente.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary vsli:raw="Gets a value indicating whether the match is successful.">Ottiene un valore che indica se la ricerca di corrispondenze ha avuto esito positivo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the match is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la corrispondenza dà esito positivo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary vsli:raw="Returns the set of captured groups in a single match. The collection is immutable (read-only) and has no public constructor.">Restituisce il set di gruppi acquisiti in un'unica corrispondenza. La raccolta non è modificabile (sola lettura) e non ha costruttori pubblici.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the group collection contains a captured group identified by the specified name.">Determina se la raccolta di gruppi contiene un gruppo acquisito identificato dal nome specificato.</summary>
      <param name="key" vsli:raw="A string with the name of the captured group to locate.">Stringa con il nome del gruppo acquisito da individuare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group collection contains a captured group identified by &lt;paramref name=&quot;key&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> se la raccolta di gruppi contiene un gruppo acquisito identificato da <paramref name="key" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">Copia tutti gli elementi della raccolta nella matrice indicata a partire dall'indice specificato.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Matrice in cui copiare la raccolta.</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where the copying is to begin.">Posizione nella matrice di destinazione in cui iniziare la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.GroupCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> non rientra nei limiti di <paramref name="array" />.

-oppure-

<paramref name="arrayIndex" /> e <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> non rientrano nei limiti di <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Text.RegularExpressions.Group[],System.Int32)">
      <summary vsli:raw="Copies the elements of the group collection to a &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; array, starting at a particular array index.">Copia gli elementi della raccolta di gruppi in una matrice <see cref="T:System.Text.RegularExpressions.Group" />, a partire da un indice della matrice specifico.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the group collection. The array must have zero-based indexing.">Matrice unidimensionale che rappresenta la destinazione degli elementi copiati dalla raccolta di gruppi. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is null.">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; is greater than the length of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> è minore di zero.

-oppure-

<paramref name="arrayIndex" /> è maggiore della lunghezza di <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;array&quot; /&gt; - &lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the group collection count.">La lunghezza di <paramref name="array" /> - <paramref name="arrayIndex" /> è inferiore al numero di raccolte di gruppi.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Fornisce un enumeratore che scorre la raccolta.</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">Enumeratore contenente tutti gli oggetti <see cref="T:System.Text.RegularExpressions.Group" /> presenti in <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Add(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The group to add to the collection.">Gruppo da aggiungere alla raccolta.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Contains(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">Determina se la raccolta di gruppi contiene un elemento gruppo specifico.</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">Gruppo da individuare nella raccolta di gruppi.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> se l'elemento gruppo viene trovato nella raccolta di gruppi. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Remove(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The group to remove.">Gruppo da rimuovere.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Text#RegularExpressions#Group}}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">Fornisce un enumeratore che scorre la raccolta di gruppi.</summary>
      <returns vsli:raw="An enumerator that contains all names and objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; collection.">Enumeratore contenente tutti i nomi e gli oggetti nella raccolta <see cref="T:System.Text.RegularExpressions.Group" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Group}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">Fornisce un enumeratore che scorre la raccolta di gruppi.</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the group collection.">Enumeratore contenente tutti gli oggetti <see cref="T:System.Text.RegularExpressions.Group" /> nella raccolta di gruppi.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#IndexOf(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">Determina l'indice di un gruppo specifico nella raccolta di gruppi.</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">Gruppo da individuare nella raccolta di gruppi.</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">Indice di <paramref name="item" /> se trovato. In caso contrario,-1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Insert(System.Int32,System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">Posizione in cui inserire il gruppo.</param>
      <param name="item" vsli:raw="The group to insert.">Gruppo da inserire.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">Indice in base zero del gruppo da rimuovere.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The object to add to the group collection.">Oggetto da aggiungere alla raccolta di gruppi.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">Determina se la raccolta di gruppi contiene un elemento gruppo specifico.</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">Gruppo da individuare nella raccolta di gruppi.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> se l'elemento gruppo viene trovato nella raccolta di gruppi. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">Determina l'indice di un gruppo specifico nella raccolta di gruppi.</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">Gruppo da individuare nella raccolta di gruppi.</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">Indice di <paramref name="item" /> se trovato. In caso contrario,-1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">Posizione in cui inserire il gruppo.</param>
      <param name="value" vsli:raw="The group to insert.">Gruppo da inserire.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The group to remove.">Gruppo da rimuovere.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">Indice in base zero del gruppo da rimuovere.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.TryGetValue(System.String,System.Text.RegularExpressions.Group@)">
      <summary vsli:raw="Attempts to retrieve a group identified by the provided name key, if it exists in the group collection.">Tenta di recuperare un gruppo identificato dalla chiave del nome specificate, se esistente nella raccolta di gruppi.</summary>
      <param name="key" vsli:raw="A string with the group name key to look for.">Stringa con la chiave del nome del gruppo da cercare.</param>
      <param name="value" vsli:raw="When the method returns, the group whose name is &lt;paramref name=&quot;key&quot; /&gt;, if it is found; otherwise, &lt;see langword=&quot;null&quot; /&gt; if not found.">Al termine del metodo, il gruppo con il nome <paramref name="key" />, se viene trovato. In caso contrario <see langword="null" />, se non viene trovato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a group identified by the provided name key exists; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> se esiste un gruppo identificato dalla chiave del nome specificata. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary vsli:raw="Returns the number of groups in the collection.">Restituisce il numero di gruppi nella raccolta.</summary>
      <returns vsli:raw="The number of groups in the collection.">Numero di gruppi nella raccolta.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read-only.">Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt; is synchronized (thread-safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Text.RegularExpressions.GroupCollection" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary vsli:raw="Enables access to a member of the collection by integer index.">Consente l'accesso a un membro della raccolta in base a un indice intero.</summary>
      <param name="groupnum" vsli:raw="The zero-based index of the collection member to be retrieved.">Indice in base zero del membro della raccolta da recuperare.</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupnum&quot; /&gt;.">Membro della raccolta specificata da <paramref name="groupnum" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary vsli:raw="Enables access to a member of the collection by string index.">Consente l'accesso a un membro della raccolta in base a un indice stringa.</summary>
      <param name="groupname" vsli:raw="The name of a capturing group.">Nome di un gruppo di acquisizione.</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupname&quot; /&gt;.">Membro della raccolta specificata da <paramref name="groupname" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Keys">
      <summary vsli:raw="Gets a string enumeration that contains the name keys of the group collection.">Ottiene un'enumerazione di stringhe contenente le chiavi del nome della raccolta di gruppi.</summary>
      <returns vsli:raw="The name keys of the group collection.">Chiavi del nome della raccolta di gruppi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</summary>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object to synchronize.">Copia dell'oggetto <see cref="T:System.Text.RegularExpressions.Match" /> da sincronizzare.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Item(System.Int32)">
      <summary vsli:raw="Gets the group at the specified position in the collection.">Ottiene il gruppo in corrispondenza della posizione specificata nella raccolta.</summary>
      <param name="index" vsli:raw="The zero-based index of the group in the group collection.">Indice in base zero del gruppo nella raccolta di gruppi.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">Impossibile impostare un elemento. Si tratta di un insieme in sola lettura.</exception>
      <returns vsli:raw="The group in the desired position.">Gruppo nella posizione desiderata.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the group collection has a fixed size.">Ottiene un valore che indica se la dimensione della raccolta di gruppi è fissa.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; always.">Sempre <see langword="true" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the group in the desired position.">Ottiene il gruppo nella posizione desiderata.</summary>
      <param name="index" vsli:raw="The zero-index position of the group in the group collection.">Posizione in corrispondenza dell'indice zero del gruppo nella raccolta di gruppi.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">Impossibile impostare un elemento. Si tratta di un insieme in sola lettura.</exception>
      <returns vsli:raw="The group in the desired position.">Gruppo nella posizione desiderata.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Values">
      <summary vsli:raw="Gets a group enumeration with all the groups in the group collection.">Ottiene un'enumerazione dei gruppi con tutti i gruppi nella raccolta di gruppi.</summary>
      <returns vsli:raw="A group enumeration.">Enumerazione del gruppo.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary vsli:raw="Represents the results from a single regular expression match.">Rappresenta i risultati di una singola corrispondenza di un'espressione regolare.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).">Restituisce un nuovo oggetto <see cref="T:System.Text.RegularExpressions.Match" /> con i risultati relativi alla corrispondenza successiva, partendo dalla posizione in cui terminava l'ultima corrispondenza (dal carattere dopo l'ultimo carattere corrispondente).</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Si è verificato un timeout.</exception>
      <returns vsli:raw="The next regular expression match.">Corrispondenza dell'espressione regolare successiva.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary vsli:raw="Returns the expansion of the specified replacement pattern.">Restituisce l'espansione del criterio di sostituzione specificato.</summary>
      <param name="replacement" vsli:raw="The replacement pattern to use.">Criterio di sostituzione da usare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="replacement" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Expansion is not allowed for this pattern.">L'espansione non è consentita per questo criterio.</exception>
      <returns vsli:raw="The expanded version of the &lt;paramref name=&quot;replacement&quot; /&gt; parameter.">Versione espansa del parametro <paramref name="replacement" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; instance equivalent to the one supplied that is suitable to share between multiple threads.">Restituisce un'istanza di <see cref="T:System.Text.RegularExpressions.Match" /> equivalente a quella fornita che può essere condivisa tra più thread.</summary>
      <param name="inner" vsli:raw="A regular expression match equivalent to the one expected.">Corrispondenza di un'espressione regolare equivalente a quella prevista.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inner" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A regular expression match that is suitable to share between multiple threads.">Corrispondenza di un'espressione regolare che può essere condivisa tra più thread.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary vsli:raw="Gets the empty group. All failed matches return this empty match.">Ottiene il gruppo vuoto. Tutte le corrispondenze non riuscite restituiscono questa corrispondenza vuota.</summary>
      <returns vsli:raw="An empty match.">Corrispondenza vuota.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary vsli:raw="Gets a collection of groups matched by the regular expression.">Ottiene una raccolta di gruppi corrispondenti all'espressione regolare.</summary>
      <returns vsli:raw="The character groups matched by the pattern.">Gruppi di caratteri corrispondenti al criterio.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary vsli:raw="Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.  The collection is immutable (read-only) and has no public constructor. The &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex.Matches(System.String)&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt; object.">Rappresenta il gruppo di corrispondenze corrette individuate applicando in modo iterativo un modello di espressione regolare alla stringa di input.  La raccolta non è modificabile (sola lettura) e non ha costruttori pubblici. Il metodo <see cref="T:System.Text.RegularExpressions.Regex.Matches(System.String)" /> restituisce un oggetto <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array starting at the given index.">Copia tutti gli elementi della raccolta nella matrice indicata a partire dall'indice specificato.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Matrice in cui copiare la raccolta.</param>
      <param name="arrayIndex" vsli:raw="The position in the array where copying is to begin.">Posizione nella matrice in cui iniziare la copiatura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a multi-dimensional array.">
        <paramref name="array" /> è una matrice multidimensionale.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> non rientra nei limiti di <paramref name="array" />.  
  
-oppure- 
 <paramref name="arrayIndex" /> e <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> non rientrano nei limiti di <paramref name="array" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Si è verificato un timeout.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Text.RegularExpressions.Match[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia gli elementi della raccolta in un oggetto <see cref="T:System.Array" />, a partire da uno specifico indice di <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'insieme. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Fornisce un enumeratore che scorre la raccolta.</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Si è verificato un timeout.</exception>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt;.">Oggetto contenente tutti gli oggetti <see cref="T:System.Text.RegularExpressions.Match" /> all'interno di <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Add(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to add to the collection.">Oggetto da aggiungere alla raccolta.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Contains(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">Determina se la raccolta contiene un valore specifico.</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">Oggetto da individuare nella raccolta.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore <paramref name="item" /> viene trovato nella raccolta. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Remove(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to remove from the collection.">Oggetto da rimuovere dalla raccolta.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was successfully removed from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is not found in the original collection.">
        <see langword="true" /> se l'oggetto <paramref name="item" /> è stato rimosso correttamente dalla raccolta; in caso contrario, <see langword="false" />. Questo metodo restituisce <see langword="false" /> anche se l'oggetto <paramref name="item" /> non viene trovato nella raccolta originale.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Match}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Enumeratore che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#IndexOf(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Determina l'indice di un elemento specifico dell'insieme.</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">Oggetto da individuare nella raccolta.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;item&quot; /&gt; if found in the list; otherwise, -1.">Indice di <paramref name="item" />, se presente nell'elenco; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Insert(System.Int32,System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted.">Indice in base zero nel quale <paramref name="item" /> deve essere inserito.</param>
      <param name="item" vsli:raw="The object to insert into the collection.">Oggetto da inserire nella raccolta.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The object to add to the collection.">Oggetto da aggiungere alla raccolta.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Removes all items from the collection.">Rimuove tutti gli elementi dalla raccolta.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">Determina se la raccolta contiene un valore specifico.</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">Oggetto da individuare nella raccolta.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> viene trovato nell'insieme; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Determina l'indice di un elemento specifico dell'insieme.</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">Oggetto da individuare nella raccolta.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">Indice di <paramref name="value" />, se presente nell'elenco; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</param>
      <param name="value" vsli:raw="The object to insert into the collection.">Oggetto da inserire nella raccolta.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The object to remove from the collection.">Oggetto da rimuovere dalla raccolta.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Raccolta in sola lettura.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary vsli:raw="Gets the number of matches.">Ottiene il numero di corrispondenze.</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Si è verificato un timeout.</exception>
      <returns vsli:raw="The number of matches.">Numero di corrispondenze.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread-safe).">Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">Ottiene un singolo membro della raccolta.</summary>
      <param name="i" vsli:raw="Index into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; collection.">Indice nella raccolta <see cref="T:System.Text.RegularExpressions.Match" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt;.">
        <paramref name="i" /> è minore di 0 oppure maggiore o uguale a <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Si è verificato un timeout.</exception>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">Sottostringa acquisita alla posizione <paramref name="i" /> della raccolta.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection. This property always returns the object itself.">Oggetto che può essere utilizzato per sincronizzare l'accesso alla raccolta. Questa proprietà restituisce sempre l'oggetto stesso.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">Ottiene l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">Indice in base zero dell'elemento da ottenere.</param>
      <returns vsli:raw="The element at the specified index.">Elemento in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the collection has a fixed size.">Ottiene un valore che indica se la dimensione della raccolta è fissa.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">Ottiene l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">Indice in base zero dell'elemento da ottenere.</param>
      <returns vsli:raw="The element at the specified index.">Elemento in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary vsli:raw="Represents the method that is called each time a regular expression match is found during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">Rappresenta il metodo chiamato ogni volta che si individua una corrispondenza di un'espressione regolare durante un'operazione del metodo <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object that represents a single regular expression match during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">Oggetto <see cref="T:System.Text.RegularExpressions.Match" /> che rappresenta una corrispondenza di un'espressione regolare singola durante un'operazione del metodo <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</param>
      <returns vsli:raw="A string returned by the method that is represented by the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Stringa restituita dal metodo rappresentato dal delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary vsli:raw="Represents an immutable regular expression.">Rappresenta un'espressione regolare non modificabile.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capnames">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.caps">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.factory">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout">
      <summary vsli:raw="Specifies that a pattern-matching operation should not time out.">Specifica che per un'operazione di criteri di ricerca non è previsto un timeout.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.internalMatchTimeout">
      <summary vsli:raw="The maximum amount of time that can elapse in a pattern-matching operation before the operation times out.">Il tempo massimo che può trascorrere in un'operazione di criteri di ricerca prima del timeout dell'operazione.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class by using serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.Regex" /> usando i dati serializzati.</summary>
      <param name="info" vsli:raw="The object that contains a serialized pattern and &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; information.">Oggetto in cui sono contenuti un modello serializzato e le informazioni relative a <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</param>
      <param name="context" vsli:raw="The destination for this serialization. (This parameter is not used; specify &lt;see langword=&quot;null&quot; /&gt;.)">Destinazione per questa serializzazione. Questo parametro non viene usato; specificare <see langword="null" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The pattern that &lt;paramref name=&quot;info&quot; /&gt; contains is &lt;see langword=&quot;null&quot; /&gt;.">Il criterio contenuto nel parametro <paramref name="info" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; contains an invalid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; flag.">Il parametro <paramref name="info" /> contiene un flag <see cref="T:System.Text.RegularExpressions.RegexOptions" /> non valido.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression.">Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.Regex" /> per l'espressione regolare specificata.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern.">Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.Regex" /> per l'espressione regolare specificata, con opzioni che modificano il criterio.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">Combinazione bit per bit dei valori di enumerazione che modificano l'espressione regolare.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; contains an invalid flag.">Il parametro <paramref name="options" /> contiene un flag non valido.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern and a value that specifies how long a pattern matching method should attempt a match before it times out.">Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.Regex" /> per l'espressione regolare specificata, con le opzioni che modificano il criterio e un valore che specifica per quanto tempo un metodo di criteri di ricerca deve provare a trovare una corrispondenza prima del timeout.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">Combinazione bit per bit dei valori di enumerazione che modificano l'espressione regolare.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che per il metodo non è previsto un timeout.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> non è un valore valido di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
-oppure- 
 <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly.">Compila uno o più oggetti <see cref="T:System.Text.RegularExpressions.Regex" /> specificati in un assembly denominato.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Matrice che descrive le espressioni regolari da compilare.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">Nome file dell'assembly.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">Il valore della proprietà <see cref="P:System.Reflection.AssemblyName.Name" /> del parametro <paramref name="assemblyname" /> è una stringa vuota o null.  
  
-oppure- 
Il criterio di ricerca di espressioni regolari di uno o più oggetti in <paramref name="regexinfos" /> contiene una sintassi non valida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> o <paramref name="regexinfos" /> è <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">.NET core solo: la creazione di un assembly di espressioni regolari compilate non è supportata.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly with the specified attributes.">Compila uno o più oggetti <see cref="T:System.Text.RegularExpressions.Regex" /> specificati in un assembly denominato con gli attributi specificati.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Matrice che descrive le espressioni regolari da compilare.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">Nome file dell'assembly.</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">Matrice che definisce gli attributi da applicare all'assembly.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">Il valore della proprietà <see cref="P:System.Reflection.AssemblyName.Name" /> del parametro <paramref name="assemblyname" /> è una stringa vuota o null.  
  
-oppure- 
Il criterio di ricerca di espressioni regolari di uno o più oggetti in <paramref name="regexinfos" /> contiene una sintassi non valida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> o <paramref name="regexinfos" /> è <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">.NET core solo: la creazione di un assembly di espressioni regolari compilate non è supportata.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects and a specified resource file to a named assembly with the specified attributes.">Compila uno o più oggetti <see cref="T:System.Text.RegularExpressions.Regex" /> specificati e un file di risorse specificato in un assembly denominato con gli attributi specificati.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Matrice che descrive le espressioni regolari da compilare.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">Nome file dell'assembly.</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">Matrice che definisce gli attributi da applicare all'assembly.</param>
      <param name="resourceFile" vsli:raw="The name of the Win32 resource file to include in the assembly.">Nome del file di risorse Win32 da includere nell'assembly.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">Il valore della proprietà <see cref="P:System.Reflection.AssemblyName.Name" /> del parametro <paramref name="assemblyname" /> è una stringa vuota o null.  
  
-oppure- 
Il criterio di ricerca di espressioni regolari di uno o più oggetti in <paramref name="regexinfos" /> contiene una sintassi non valida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> o <paramref name="regexinfos" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="The &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter designates an invalid Win32 resource file.">Il parametro <paramref name="resourceFile" /> definisce un file di risorse Win32 non valido.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file designated by the &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter cannot be found.">Impossibile trovare il file designato dal parametro <paramref name="resourceFile" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">.NET core solo: la creazione di un assembly di espressioni regolari compilate non è supportata.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary vsli:raw="Escapes a minimal set of characters (\, *, +, ?, |, {, [, (,), ^, $, ., #, and white space) by replacing them with their escape codes. This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.">Ignora un set minimo di caratteri (\, *, +, ?, |, {, [, (,), ^, $,., # e spazio) sostituendoli con i rispettivi codici di escape. In questo modo il motore delle espressioni regolari interpreta questi caratteri letteralmente anziché come metacaratteri.</summary>
      <param name="str" vsli:raw="The input string that contains the text to convert.">Stringa di input che contiene il testo da convertire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A string of characters with metacharacters converted to their escaped form.">Stringa di caratteri con metacaratteri convertiti nel relativo formato di escape.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary vsli:raw="Returns an array of capturing group names for the regular expression.">Restituisce una matrice di nomi di gruppi di acquisizione per l'espressione regolare.</summary>
      <returns vsli:raw="A string array of group names.">Matrice di stringhe di nomi di gruppi.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary vsli:raw="Returns an array of capturing group numbers that correspond to group names in an array.">Restituisce una matrice di numeri di gruppi di acquisizione che corrispondono ai nomi dei gruppi in una matrice.</summary>
      <returns vsli:raw="An integer array of group numbers.">Matrice di interi di numeri di gruppi.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary vsli:raw="Gets the group name that corresponds to the specified group number.">Ottiene un nome di gruppo che corrisponde al numero di gruppo specificato.</summary>
      <param name="i" vsli:raw="The group number to convert to the corresponding group name.">Numero di gruppo da convertire nel nome di gruppo corrispondente.</param>
      <returns vsli:raw="A string that contains the group name associated with the specified group number. If there is no group name that corresponds to &lt;paramref name=&quot;i&quot; /&gt;, the method returns &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">Stringa contenente il nome di gruppo associato al numero di gruppo specificato. Se nessun nome di gruppo corrisponde a <paramref name="i" />, il metodo restituisce <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary vsli:raw="Returns the group number that corresponds to the specified group name.">Restituisce il numero di gruppo che corrisponde al nome di gruppo specificato.</summary>
      <param name="name" vsli:raw="The group name to convert to the corresponding group number.">Nome di gruppo da convertire nel numero di gruppo corrispondente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> è <see langword="null" />.</exception>
      <returns vsli:raw="The group number that corresponds to the specified group name, or -1 if &lt;paramref name=&quot;name&quot; /&gt; is not a valid group name.">Numero di gruppo che corrisponde al nome di gruppo specificato o -1 se <paramref name="name" /> non è un nome di gruppo valido.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.InitializeReferences">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="References have already been initialized.">I riferimenti sono già stati inizializzati.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in a specified input string.">Indica se l'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" /> trova una corrispondenza in una stringa di input specificata.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'espressione regolare individua una corrispondenza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in the specified input string, beginning at the specified starting position in the string.">Indica se l'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" /> trova una corrispondenza nella stringa di input specificata, a partire dalla posizione iniziale specificata nella stringa.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="startat" vsli:raw="The character position at which to start the search.">Posizione del carattere dalla quale iniziare la ricerca.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'espressione regolare individua una corrispondenza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string.">Indica se l'espressione regolare specificata trova una corrispondenza nella stringa di input specificata.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'espressione regolare individua una corrispondenza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.">Indica se l'espressione regolare specificata trova una corrispondenza nella stringa di input specificata usando le opzioni di corrispondenza specificate.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.">
        <paramref name="options" /> non è un valore valido di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'espressione regolare individua una corrispondenza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options and time-out interval.">Indica se l'espressione regolare specificata trova una corrispondenza nella stringa di input specificata usando le opzioni di corrispondenza specificate e l'intervallo di timeout.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che per il metodo non è previsto un timeout.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> non è un valore valido di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
-oppure- 
 <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Si è verificato un timeout.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'espressione regolare individua una corrispondenza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Cerca nella stringa di input specificata la prima ricorrenza dell'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="An object that contains information about the match.">Oggetto contenente informazioni sulla corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.">Cerca nella stringa di input la prima occorrenza di un'espressione regolare, a partire dalla posizione iniziale specificata nella stringa.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="startat" vsli:raw="The zero-based character position at which to start the search.">Posizione del carattere in base zero dalla quale iniziare la ricerca.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="An object that contains information about the match.">Oggetto contenente informazioni sulla corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.">Cerca nella stringa di input la prima occorrenza di un'espressione regolare, a partire dalla posizione iniziale specificata e cercando solo nel numero di caratteri specificato.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="beginning" vsli:raw="The zero-based character position in the input string that defines the leftmost position to be searched.">Posizione del carattere in base zero nella stringa di input che definisce la posizione più a sinistra in cui cercare.</param>
      <param name="length" vsli:raw="The number of characters in the substring to include in the search.">Numero di caratteri nella sottostringa da includere nella ricerca.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;beginning&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;length&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;beginning&quot; /&gt;&lt;see langword=&quot;+&quot; /&gt;&lt;paramref name=&quot;length&quot; /&gt;&lt;see langword=&quot;-1&quot; /&gt; identifies a position that is outside the range of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="beginning" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.  
  
-oppure- 
 <paramref name="length" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.  
  
-oppure- 
 <paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> identifica una posizione esterna all'intervallo di <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="An object that contains information about the match.">Oggetto contenente informazioni sulla corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the specified regular expression.">Cerca nella stringa di input specificata la prima occorrenza dell'espressione regolare specificata.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="An object that contains information about the match.">Oggetto contenente informazioni sulla corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.">Cerca nella stringa di input la prima occorrenza dell'espressione regolare specificata usando le opzioni di corrispondenza specificate.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="An object that contains information about the match.">Oggetto contenente informazioni sulla corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options and time-out interval.">Cerca nella stringa di input la prima occorrenza dell'espressione regolare specificata usando le opzioni di corrispondenza e l'intervallo di timeout specificati.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che per il metodo non è previsto un timeout.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
-oppure- 
 <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="An object that contains information about the match.">Oggetto contenente informazioni sulla corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression.">Cerca nella stringa di input specificata tutte le occorrenze di un'espressione regolare.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Raccolta di oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca. Se non vengono trovate corrispondenze, il metodo restituisce un oggetto raccolta vuoto.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.">Cerca nella stringa di input specificata tutte le occorrenze di un'espressione regolare, partendo dalla posizione iniziale specificata nella stringa.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="startat" vsli:raw="The character position in the input string at which to start the search.">Posizione del carattere nella stringa di input dalla quale iniziare la ricerca.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Raccolta di oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca. Se non vengono trovate corrispondenze, il metodo restituisce un oggetto raccolta vuoto.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression.">Cerca nella stringa di input specificata tutte le occorrenze di un'espressione regolare specificata.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Raccolta di oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca. Se non vengono trovate corrispondenze, il metodo restituisce un oggetto raccolta vuoto.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.">Cerca nella stringa di input specificata tutte le occorrenze di un'espressione regolare specificata usando le opzioni di corrispondenza specificate.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">Combinazione bit per bit dei valori di enumerazione che specificano le opzioni per la corrispondenza.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Raccolta di oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca. Se non vengono trovate corrispondenze, il metodo restituisce un oggetto raccolta vuoto.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options and time-out interval.">Cerca nella stringa di input specificata tutte le occorrenze di un'espressione regolare specificata usando le opzioni di corrispondenza e l'intervallo di timeout specificati.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">Combinazione bit per bit dei valori di enumerazione che specificano le opzioni per la corrispondenza.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che per il metodo non è previsto un timeout.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
-oppure- 
 <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Raccolta di oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca. Se non vengono trovate corrispondenze, il metodo restituisce un oggetto raccolta vuoto.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.">In una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un criterio di espressione regolare con una stringa di sostituzione specificata.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="replacement" vsli:raw="The replacement string.">Stringa di sostituzione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="replacement" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Stringa nuova identica alla stringa di input, a eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione. Se il criterio di espressione regolare non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">In una stringa di input specificata, sostituisce un numero massimo di stringhe specificato corrispondenti a un criterio di espressione regolare con una stringa di sostituzione specificata.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="replacement" vsli:raw="The replacement string.">Stringa di sostituzione.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement can occur.">Numero massimo di volte in cui la sostituzione può aver luogo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="replacement" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Stringa nuova identica alla stringa di input, a eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione. Se il criterio di espressione regolare non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">In una sottostringa di input specificata, sostituisce un numero massimo di stringhe specificato corrispondenti a un criterio di espressione regolare con una stringa di sostituzione specificata.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="replacement" vsli:raw="The replacement string.">Stringa di sostituzione.</param>
      <param name="count" vsli:raw="Maximum number of times the replacement can occur.">Numero massimo di volte in cui la sostituzione può aver luogo.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">Posizione del carattere nella stringa di input da cui avrà inizio la ricerca.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="replacement" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Stringa nuova identica alla stringa di input, a eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione. Se il criterio di espressione regolare non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.">In una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa di sostituzione specificata.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="replacement" vsli:raw="The replacement string.">Stringa di sostituzione.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="replacement" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Stringa nuova identica alla stringa di input, a eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione. Se <paramref name="pattern" /> non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation.">In una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa di sostituzione specificata. Le opzioni specificate modificano l'operazione di corrispondenza.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="replacement" vsli:raw="The replacement string.">Stringa di sostituzione.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="replacement" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Stringa nuova identica alla stringa di input, a eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione. Se <paramref name="pattern" /> non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">In una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa di sostituzione specificata. I parametri aggiuntivi specificano le opzioni che modificano l'operazione di corrispondenza e un intervallo di timeout se non viene trovata alcuna corrispondenza.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="replacement" vsli:raw="The replacement string.">Stringa di sostituzione.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che per il metodo non è previsto un timeout.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="replacement" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
-oppure- 
 <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Stringa nuova identica alla stringa di input, a eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione. Se <paramref name="pattern" /> non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">In una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="evaluator" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione. Se <paramref name="pattern" /> non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Specified options modify the matching operation.">In una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. Le opzioni specificate modificano l'operazione di corrispondenza.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="evaluator" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione. Se <paramref name="pattern" /> non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all substrings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">In una stringa di input specificata, sostituisce tutte le sottostringhe corrispondenti a un'espressione regolare specificata con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. I parametri aggiuntivi specificano le opzioni che modificano l'operazione di corrispondenza e un intervallo di timeout se non viene trovata alcuna corrispondenza.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <param name="options" vsli:raw="A bitwise combination of enumeration values that provide options for matching.">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che per il metodo non è previsto un timeout.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="evaluator" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
-oppure- 
 <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Stringa nuova identica alla stringa di input, a eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione. Se <paramref name="pattern" /> non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">In una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="evaluator" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione. Se il criterio di espressione regolare non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">In una stringa di input specificata, sostituisce un numero massimo di stringhe specificato corrispondenti a un criterio di espressione regolare con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">Numero massimo di volte in cui la sostituzione avrà luogo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="evaluator" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione. Se il criterio di espressione regolare non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">In una sottostringa di input specificata, sostituisce un numero massimo di stringhe specificato corrispondenti a un criterio di espressione regolare con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Stringa nella quale cercare una corrispondenza.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">Numero massimo di volte in cui la sostituzione avrà luogo.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">Posizione del carattere nella stringa di input da cui avrà inizio la ricerca.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="evaluator" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione. Se il criterio di espressione regolare non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Suddivide una stringa di input in una matrice di sottostringhe in corrispondenza delle posizioni definite da un criterio di espressione regolare specificato nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to split.">Stringa da dividere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="An array of strings.">Matrice di stringhe.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Suddivide una stringa di input per un numero massimo di volte specificato in una matrice di sottostringhe in corrispondenza delle posizioni definite da un'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to be split.">Stringa da suddividere.</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">Numero massimo di volte in cui la suddivisione può aver luogo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="An array of strings.">Matrice di stringhe.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor. The search for the regular expression pattern starts at a specified character position in the input string.">Suddivide una stringa di input per un numero massimo di volte specificato in una matrice di sottostringhe in corrispondenza delle posizioni definite da un'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" />. La ricerca del criterio di espressione regolare inizia da una posizione del carattere specificata nella stringa di input.</summary>
      <param name="input" vsli:raw="The string to be split.">Stringa da suddividere.</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">Numero massimo di volte in cui la suddivisione può aver luogo.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search will begin.">Posizione del carattere nella stringa di input da cui avrà inizio la ricerca.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="An array of strings.">Matrice di stringhe.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern.">Suddivide una stringa di input in una matrice di sottostringhe in corrispondenza delle posizioni definite da un criterio di espressione regolare.</summary>
      <param name="input" vsli:raw="The string to split.">Stringa da dividere.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="An array of strings.">Matrice di stringhe.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Specified options modify the matching operation.">Suddivide una stringa di input in una matrice di sottostringhe in corrispondenza delle posizioni definite da un criterio di espressione regolare specificato. Le opzioni specificate modificano l'operazione di corrispondenza.</summary>
      <param name="input" vsli:raw="The string to split.">Stringa da dividere.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="An array of strings.">Matrice di stringhe.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">Suddivide una stringa di input in una matrice di sottostringhe in corrispondenza delle posizioni definite da un criterio di espressione regolare specificato. I parametri aggiuntivi specificano le opzioni che modificano l'operazione di corrispondenza e un intervallo di timeout se non viene trovata alcuna corrispondenza.</summary>
      <param name="input" vsli:raw="The string to split.">Stringa da dividere.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che per il metodo non è previsto un timeout.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
-oppure- 
 <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns vsli:raw="A string array.">Matrice di stringhe.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data necessary to deserialize the current &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object.">Popola un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati necessari per deserializzare l'oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> corrente.</summary>
      <param name="si" vsli:raw="The object to populate with serialization information.">Oggetto da popolare con le informazioni sulla serializzazione.</param>
      <param name="context" vsli:raw="The place to store and retrieve serialized data. This parameter is reserved for future use.">Posizione di archiviazione e recupero dei dati serializzati. Questo parametro è riservato per usi futuri.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary vsli:raw="Returns the regular expression pattern that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">Restituisce il criterio di espressione regolare passato al costruttore <see langword="Regex" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;pattern&quot; /&gt; parameter that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">Parametro <paramref name="pattern" /> passato al costruttore <see langword="Regex" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary vsli:raw="Converts any escaped characters in the input string.">Converte tutti i caratteri di escape presenti nella stringa di input.</summary>
      <param name="str" vsli:raw="The input string containing the text to convert.">Stringa di input contenente il testo da convertire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; includes an unrecognized escape sequence.">
        <paramref name="str" /> include una sequenza di escape non riconosciuta.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A string of characters with any escaped characters converted to their unescaped form.">Stringa di caratteri con eventuali caratteri di escape convertiti nel relativo formato non di escape.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionC">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la proprietà <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contiene l'opzione <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la proprietà <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contiene l'opzione <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)">
      <summary vsli:raw="Checks whether a time-out interval is within an acceptable range.">Verifica se un intervallo di timeout si trova all'interno di un intervallo di valori accettabili.</summary>
      <param name="matchTimeout" vsli:raw="The time-out interval to check.">Intervallo di timeout da verificare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The specified time-out is not within a valid range.">Il timeout specificato non è compreso in un intervallo valido.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary vsli:raw="Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.">Ottiene o imposta il numero massimo di voci nella cache statica corrente di espressioni regolari compilate.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value in a set operation is less than zero.">Il valore in un'operazione set è minore di zero.</exception>
      <returns vsli:raw="The maximum number of entries in the static cache.">Numero massimo di voci nella cache statica.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CapNames">
      <summary vsli:raw="Gets or sets a dictionary that maps named capturing groups to their index values.">Ottiene o imposta un dizionario che esegue il mapping di gruppi di acquisizione denominati ai valori di indice corrispondenti.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.CapNames&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">Il valore assegnato alla proprietà <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> in un'operazione set è <see langword="null" />.</exception>
      <returns vsli:raw="A dictionary that maps named capturing groups to their index values.">Dizionario che esegue il mapping di gruppi di acquisizione denominati ai valori di indice corrispondenti.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Caps">
      <summary vsli:raw="Gets or sets a dictionary that maps numbered capturing groups to their index values.">Ottiene o imposta un dizionario che esegue il mapping di gruppi di acquisizione numerati nei relativi valori di indice.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Caps&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">Il valore assegnato alla proprietà <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> in un'operazione set è <see langword="null" />.</exception>
      <returns vsli:raw="A dictionary that maps numbered capturing groups to their index values.">Un dizionario che esegue il mapping di gruppi di acquisizione numerati nei relativi valori di indice.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval of the current instance.">Ottiene l'intervallo di timeout dell'istanza corrente.</summary>
      <returns vsli:raw="The maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">Intervallo di tempo massimo che può trascorrere in un'operazione di criteri di ricerca prima che venga generata un'eccezione <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> se i timeout sono disabilitati.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary vsli:raw="Gets the options that were passed into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Ottiene le opzioni passate al costruttore <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns vsli:raw="One or more members of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; enumeration that represent options that were passed to the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Uno o più membri dell'enumerazione <see cref="T:System.Text.RegularExpressions.RegexOptions" /> che rappresentano le opzioni passate al costruttore <see cref="T:System.Text.RegularExpressions.Regex" /></returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary vsli:raw="Gets a value that indicates whether the regular expression searches from right to left.">Ottiene un valore che indica se l'espressione regolare effettua la ricerca da destra a sinistra.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression searches from right to left; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'espressione regolare effettua la ricerca da destra a sinistra; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexCompilationInfo">
      <summary vsli:raw="Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.">Fornisce le informazioni su un'espressione regolare utilizzate per compilare un'espressione regolare in un assembly autonomo.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression to be included in an assembly.">Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> che contiene informazioni su un'espressione regolare da includere in un assembly.</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">Espressione regolare da compilare.</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">Opzioni dell'espressione regolare da utilizzare per compilare l'espressione regolare.</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">Nome del tipo che rappresenta l'espressione regolare compilata.</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">Spazio dei nomi al quale appartiene il nuovo tipo.</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per rendere l'espressione regolare compilata visibile pubblicamente; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> è <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="name" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="fullnamespace" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression with a specified time-out value to be included in an assembly.">Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> che contiene informazioni su un'espressione regolare con un valore di timeout specificato da includere in un assembly.</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">Espressione regolare da compilare.</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">Opzioni dell'espressione regolare da utilizzare per compilare l'espressione regolare.</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">Nome del tipo che rappresenta l'espressione regolare compilata.</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">Spazio dei nomi al quale appartiene il nuovo tipo.</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per rendere l'espressione regolare compilata visibile pubblicamente; in caso contrario, <see langword="false" />.</param>
      <param name="matchTimeout" vsli:raw="The default time-out interval for the regular expression.">L'intervallo di timeout predefinito per l'espressione regolare.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> è <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="name" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="fullnamespace" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
      <summary vsli:raw="Gets or sets a value that indicates whether the compiled regular expression has public visibility.">Ottiene o imposta un valore che indica se l'espressione regolare compilata ha visibilità pubblica.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression has public visibility; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'espressione regolare ha visibilità pubblica; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
      <summary vsli:raw="Gets or sets the regular expression's default time-out interval.">Ottiene o imposta l'intervallo di timeout predefinito dell'espressione regolare.</summary>
      <returns vsli:raw="The default maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">L'intervallo di tempo massimo predefinito che può trascorrere in un'operazione di corrispondenza dei modelli prima che <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> venga generato o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> se i timeout sono disabilitati.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
      <summary vsli:raw="Gets or sets the name of the type that represents the compiled regular expression.">Ottiene o imposta il nome del tipo che rappresenta l'espressione regolare compilata.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">Il valore di questa proprietà è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value for this property is an empty string.">Il valore per questa proprietà è una stringa vuota.</exception>
      <returns vsli:raw="The name of the new type.">Nome del nuovo tipo.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
      <summary vsli:raw="Gets or sets the namespace to which the new type belongs.">Ottiene o imposta lo spazio dei nomi cui appartiene il nuovo tipo.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">Il valore di questa proprietà è <see langword="null" />.</exception>
      <returns vsli:raw="The namespace of the new type.">Spazio dei nomi del nuovo tipo.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
      <summary vsli:raw="Gets or sets the options to use when compiling the regular expression.">Ottiene o imposta le opzioni da utilizzare per compilare l'espressione regolare.</summary>
      <returns vsli:raw="A bitwise combination of the enumeration values.">Combinazione bit per bit dei valori dell'enumerazione.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
      <summary vsli:raw="Gets or sets the regular expression to compile.">Ottiene o imposta l'espressione regolare da compilare.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">Il valore di questa proprietà è <see langword="null" />.</exception>
      <returns vsli:raw="The regular expression to compile.">Espressione regolare da compilare.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
      <summary vsli:raw="The exception that is thrown when the execution time of a regular expression pattern-matching method exceeds its time-out interval.">Eccezione generata quando il tempo di esecuzione di un metodo dei criteri di ricerca di espressioni regolari supera l'intervallo di timeout.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a system-supplied message.">Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con un messaggio fornito dal sistema.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="The object that contains the serialized data.">Oggetto che contiene i dati serializzati.</param>
      <param name="context" vsli:raw="The stream that contains the serialized data.">Flusso che contiene i dati serializzati.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with the specified message string.">Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con la stringa di messaggio specificata.</summary>
      <param name="message" vsli:raw="A string that describes the exception.">Stringa che descrive l'eccezione.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="A string that describes the exception.">Stringa che descrive l'eccezione.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">Eccezione che ha determinato l'eccezione corrente.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with information about the regular expression pattern, the input text, and the time-out interval.">Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con le informazioni sul modello di espressione regolare, il testo di input e l'intervallo di timeout.</summary>
      <param name="regexInput" vsli:raw="The input text processed by the regular expression engine when the time-out occurred.">Il testo di input elaborato dal motore delle espressioni regolari quando si è verificato il timeout.</param>
      <param name="regexPattern" vsli:raw="The pattern used by the regular expression engine when the time-out occurred.">Modello utilizzato dal motore delle espressioni regolari quando si verifica il timeout.</param>
      <param name="matchTimeout" vsli:raw="The time-out interval.">Intervallo di timeout.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data needed to serialize a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; object.">Popola un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati necessari per serializzare un oggetto <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />.</summary>
      <param name="info" vsli:raw="The serialization information object to populate with data.">Oggetto informazioni di serializzazione da popolare con i dati.</param>
      <param name="context" vsli:raw="The destination for this serialization.">Destinazione per questa serializzazione.</param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
      <summary vsli:raw="Gets the input text that the regular expression engine was processing when the time-out occurred.">Ottiene il testo di input che il motore delle espressioni regolari stava elaborando quando si è verificato il timeout.</summary>
      <returns vsli:raw="The regular expression input text.">Testo di input dell'espressione regolare.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval for a regular expression match.">Ottiene l'intervallo di timeout per una corrispondenza di espressione regolare.</summary>
      <returns vsli:raw="The time-out interval.">Intervallo di timeout.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
      <summary vsli:raw="Gets the regular expression pattern that was used in the matching operation when the time-out occurred.">Ottiene il modello di espressione regolare utilizzato nell'operazione di confronto nel momento in cui si è verificato il timeout.</summary>
      <returns vsli:raw="The regular expression pattern.">Il modello di espressione regolare.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary vsli:raw="Provides enumerated values to use to set regular expression options.">Fornisce valori enumerati da usare per impostare le opzioni delle espressioni regolari.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary vsli:raw="Specifies that the regular expression is compiled to MSIL code, instead of being interpreted. Compiled regular expressions maximize run-time performance at the expense of initialization time. This value should not be assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexCompilationInfo.Options&quot; /&gt; property when calling the &lt;see cref=&quot;M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)&quot; /&gt; method. For more information, see the &quot;Compiled Regular Expressions&quot; section in the Regular Expression Options article.">Specifica che l'espressione regolare è compilata in un assembly. Questa situazione determina un'esecuzione più rapida ma aumenta i tempi di avvio. Questo valore non deve essere assegnato alla proprietà <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /> quando viene chiamato il metodo <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />. Per ulteriori informazioni, vedere la sezione "espressioni regolari compilate" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary vsli:raw="Specifies that cultural differences in language is ignored. For more information, see the &quot;Comparison Using the Invariant Culture&quot; section in the Regular Expression Options article.">Specifica che le differenze culturali della lingua vengono ignorate. Per altre informazioni, vedere la sezione "confronto usando la lingua inglese" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary vsli:raw="&lt;para&gt;Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.IgnoreCase&quot; /&gt;, &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Multiline&quot; /&gt;, and &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; values. The use of this value with any other values results in an exception.&lt;/para&gt;&lt;para&gt;For more information on the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.ECMAScript&quot; /&gt; option, see the &quot;ECMAScript Matching Behavior&quot; section in the Regular Expression Options article.&lt;/para&gt;">Consente un comportamento conforme a ECMAScript per l'espressione. Questo valore può essere utilizzato soltanto in combinazione con i valori <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" />, <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /> e <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />. L'uso di questo valore con qualsiasi altro valore determina un'eccezione.  
  
Per ulteriori informazioni sull' <see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" /> opzione, vedere la sezione "comportamento di corrispondenza ECMAScript" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary vsli:raw="Specifies that the only valid captures are explicitly named or numbered groups of the form (?&amp;lt;name&amp;gt;...). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:...). For more information, see the &quot;Explicit Captures Only&quot; section in the Regular Expression Options article.">Specifica che le uniche acquisizioni valide sono i gruppi denominati o numerati in modo esplicito del modulo (? &lt; nome &gt; ...). In questo modo le parentesi senza nome possono fungere da gruppi di non acquisizione senza la goffaggine sintattica dell'espressione (?:...). Per ulteriori informazioni, vedere la sezione "solo acquisizioni esplicite" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary vsli:raw="Specifies case-insensitive matching. For more information, see the &quot;Case-Insensitive Matching &quot; section in the Regular Expression Options article.">Specifica una corrispondenza senza distinzione tra maiuscole e minuscole. Per ulteriori informazioni, vedere la sezione "corrispondenza senza distinzione tra maiuscole e minuscole" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary vsli:raw="Eliminates unescaped white space from the pattern and enables comments marked with #. However, this value does not affect or eliminate white space in character classes, numeric quantifiers, or tokens that mark the beginning of individual regular expression language elements. For more information, see the &quot;Ignore White Space&quot; section of the Regular Expression Options article.">Elimina uno spazio vuoto non preceduto da un carattere di escape dal criterio e consente i commenti contrassegnati da #. Tuttavia, questo valore non influisce né elimina gli spazi in classi di caratteri, quantificatori numerici o token che contrassegnano l'inizio di singoli elementi del linguaggio di espressioni regolari. Per altre informazioni, vedere la sezione "Ignora spazi vuoti" nell'articolo Opzioni di espressioni regolari.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary vsli:raw="Multiline mode. Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string. For more information, see the &quot;Multiline Mode&quot; section in the Regular Expression Options article.">Modalità multiriga. Modifica il significato dei simboli ^ e $ in modo che corrispondano rispettivamente all'inizio e alla fine di qualsiasi riga e non solo dell'intera stringa. Per altre informazioni, vedere la sezione "modalità multiriga" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary vsli:raw="Specifies that no options are set. For more information about the default behavior of the regular expression engine, see the &quot;Default Options&quot; section in the Regular Expression Options article.">Specifica che non sono state impostate opzioni. Per ulteriori informazioni sul comportamento predefinito del motore delle espressioni regolari, vedere la sezione "opzioni predefinite" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary vsli:raw="Specifies that the search will be from right to left instead of from left to right. For more information, see the &quot;Right-to-Left Mode&quot; section in the Regular Expression Options article.">Specifica che la ricerca verrà eseguita da destra a sinistra anziché da sinistra a destra. Per altre informazioni, vedere la sezione "modalità da destra a sinistra" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary vsli:raw="Specifies single-line mode. Changes the meaning of the dot (.) so it matches every character (instead of every character except \n). For more information, see the &quot;Single-line Mode&quot; section in the Regular Expression Options article.">Specifica la modalità a riga singola. Modifica il significato del punto (.) in modo che corrisponda a ogni carattere (anziché a ogni carattere eccetto \n). Per altre informazioni, vedere la sezione "modalità a riga singola" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexParseError">
      <summary vsli:raw="Specifies the detailed underlying reason why a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexParseException&quot; /&gt; is thrown when a regular expression contains a parsing error.">Specifica il motivo dettagliato per cui viene generata una <see cref="T:System.Text.RegularExpressions.RegexParseException" /> quando un'espressione regolare contiene un errore di analisi.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasComment">
      <summary vsli:raw="An alternation construct in a regular expression contains a comment.">Un costrutto di alternanza in un'espressione regolare contiene un commento.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedCondition">
      <summary vsli:raw="An alternation in a regular expression has a malformed condition.">Un'alternanza in un'espressione regolare presenta una condizione con formato non valido.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedReference">
      <summary vsli:raw="An alternation construct in a regular expression contains a malformed reference.">Un costrutto di alternanza in un'espressione regolare contiene un riferimento non valido.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasNamedCapture">
      <summary vsli:raw="An alternation construct in a regular expression uses a named capture.">Un costrutto di alternanza in un'espressione regolare usa un'acquisizione denominata.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasTooManyConditions">
      <summary vsli:raw="An alternation in a regular expression has too many conditions.">Un'alternanza in un'espressione regolare presenta troppe condizioni.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasUndefinedReference">
      <summary vsli:raw="An alternation construct in a regular expression contains an undefined reference.">Un costrutto di alternanza in un'espressione regolare contiene un riferimento non definito.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.CaptureGroupNameInvalid">
      <summary vsli:raw="The group name of a captured group in a regular expression is invalid.">Il nome di gruppo di un gruppo acquisito in un'espressione regolare non è valido.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.CaptureGroupOfZero">
      <summary vsli:raw="A regular expression defines a numbered subexpression named zero.">Un'espressione regolare definisce una sottoespressione numerata denominata zero.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ExclusionGroupNotLast">
      <summary vsli:raw="A character class in a regular expression with an exclusion group is not the last part of the character class.">Una classe di caratteri in un'espressione regolare con un gruppo di esclusione non è l'ultima parte della classe di caratteri.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientClosingParentheses">
      <summary vsli:raw="A regular expression has a non-escaped left parenthesis, or misses a closing right parenthesis.">Un'espressione regolare presenta una parentesi aperta senza escape oppure manca una parentesi chiusa.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientOpeningParentheses">
      <summary vsli:raw="A regular expression has a non-escaped right parenthesis, or misses an opening left parenthesis.">Un'espressione regolare presenta una parentesi chiusa senza escape oppure manca una parentesi aperta.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientOrInvalidHexDigits">
      <summary vsli:raw="A hexadecimal escape sequence in a regular expression does not have enough digits, or contains invalid digits.">Una sequenza di escape esadecimale in un'espressione regolare non include cifre sufficienti o contiene cifre non valide.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InvalidGroupingConstruct">
      <summary vsli:raw="A grouping construct in a regular expression is invalid or malformed.">Un costrutto di raggruppamento in un'espressione regolare non è valido o è in formato non corretto.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InvalidUnicodePropertyEscape">
      <summary vsli:raw="A Unicode property escape in a regular expression is invalid or unknown.">Un escape di proprietà Unicode in un'espressione regolare non è valido o è sconosciuto.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MalformedNamedReference">
      <summary vsli:raw="A named reference in a regular expression is malformed.">Un riferimento denominato in un'espressione regolare non è valido.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MalformedUnicodePropertyEscape">
      <summary vsli:raw="A Unicode property escape is malformed.">Un escape di proprietà Unicode non è valido.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MissingControlCharacter">
      <summary vsli:raw="A control character in a regular expression is missing.">Manca un carattere di controllo in un'espressione regolare.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.NestedQuantifiersNotParenthesized">
      <summary vsli:raw="Repeated quantifiers on another quantifier inside a regular expression are not grouped in parentheses.">I quantificatori ripetuti in un altro quantificatore all'interno di un'espressione regolare non sono raggruppati tra parentesi.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.QuantifierAfterNothing">
      <summary vsli:raw="A quantifier in a regular expression is in a position where it cannot quantify anything, like at the beginning of a regular expression or in a group.">Un quantificatore in un'espressione regolare si trova in una posizione in cui non è in grado di quantificare alcunché, ad esempio all'inizio di un'espressione regolare o in un gruppo.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.QuantifierOrCaptureGroupOutOfRange">
      <summary vsli:raw="A captured group or a quantifier in a regular expression is not within range, that is, it is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Un gruppo acquisito o un quantificatore in un'espressione regolare non è compreso nell'intervallo, ovvero è maggiore di <see cref="F:System.Int32.MaxValue" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ReversedCharacterRange">
      <summary vsli:raw="A character class in a regular expression contains an inverse character range, like z-a instead of a-z.">Una classe di caratteri in un'espressione regolare contiene un intervallo di caratteri inversi, ad esempio z-a anziché a-z.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ReversedQuantifierRange">
      <summary vsli:raw="A quantifier range in a regular expression is inverse, like &lt;c&gt;{10,1}&lt;/c&gt; instead of &lt;c&gt;(1,10}&lt;/c&gt;.">Un intervallo del quantificatore in un'espressione regolare è inverso, ad esempio <code>{10,1}</code> invece di <code>(1,10}</code>.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ShorthandClassInCharacterRange">
      <summary vsli:raw="A character-class in a regular expression contains a short-hand class that is not allowed inside a character class.">Una classe di caratteri in un'espressione regolare contiene una classe a sintassi abbreviata che non è consentita all'interno di una classe di caratteri.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UndefinedNamedReference">
      <summary vsli:raw="A used named reference in a regular expression is not defined.">Un riferimento denominato usato in un'espressione regolare non è definito.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UndefinedNumberedReference">
      <summary vsli:raw="A used numbered reference in a regular expression is not defined.">Un riferimento numerato usato in un'espressione regolare non è definito.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnescapedEndingBackslash">
      <summary vsli:raw="A regular expression ends with a non-escaped ending backslash.">Un'espressione regolare termina con una barra rovesciata finale senza escape.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.Unknown">
      <summary vsli:raw="An unknown regular expression parse error.">Errore di analisi dell'espressione regolare sconosciuto.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedControlCharacter">
      <summary vsli:raw="A control character in a regular expression is not recognized.">Un carattere di controllo in un'espressione regolare non è riconosciuto.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedEscape">
      <summary vsli:raw="An escape character or sequence in a regular expression is invalid.">Una sequenza o un carattere di escape in un'espressione regolare non è valido.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedUnicodeProperty">
      <summary vsli:raw="A unicode property in a regular expression is not recognized, or invalid.">Una proprietà Unicode in un'espressione regolare non è riconosciuta o non è valida.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnterminatedBracket">
      <summary vsli:raw="A regular expression has a non-escaped left square bracket, or misses a closing right square bracket.">Un'espressione regolare presenta una parentesi quadra aperta senza escape o manca una parentesi quadra chiusa.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnterminatedComment">
      <summary vsli:raw="A comment in a regular expression is not terminated.">Un commento in un'espressione regolare non è terminato.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexParseException">
      <summary vsli:raw="An exception as a result of a parse error in a regular expression, with detailed information in the &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexParseException.Error&quot; /&gt; and &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexParseException.Offset&quot; /&gt; properties.">Eccezione risultante da un errore di analisi in un'espressione regolare, con informazioni dettagliate nelle proprietà <see cref="P:System.Text.RegularExpressions.RegexParseException.Error" /> e <see cref="P:System.Text.RegularExpressions.RegexParseException.Offset" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;paramref name=&quot;info&quot; /&gt; object with the parameter name and additional exception information.">Imposta l'oggetto <paramref name="info" /> con il nome del parametro e informazioni aggiuntive sull'eccezione.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> costruito in modo predefinito è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexParseException.Error">
      <summary vsli:raw="Gets the error that happened during parsing.">Ottiene l'errore che si è verificato durante l'analisi.</summary>
      <returns vsli:raw="The error that occured during parsing.">Errore che si è verificato durante l'analisi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexParseException.Offset">
      <summary vsli:raw="Gets the zero-based character offset in the regular expression pattern where the parse error occurs.">Ottiene l'offset del carattere in base zero nel criterio dell'espressione regolare in cui si verifica l'errore di analisi.</summary>
      <returns vsli:raw="The offset at which the parse error occurs.">Offset in corrispondenza del quale si verifica l'errore di analisi.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunner">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class is the base class for compiled regular expressions.">La classe <see cref="T:System.Text.RegularExpressions.RegexRunner" /> è la classe base per le espressioni regolari compilate.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runmatch">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runregex">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtext">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextbeg">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextend">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextstart">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackcount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexRunner" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum" vsli:raw="A capture number.">Numero di acquisizione.</param>
      <param name="start" vsli:raw="The starting position of the capture.">Posizione iniziale dell'acquisizione.</param>
      <param name="end" vsli:raw="The ending position of the capture.">Posizione finale dell'acquisizione.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method. Determines whether a character is in a character class.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />. Determina se un carattere è contenuto in una classe di caratteri.</summary>
      <param name="ch" vsli:raw="A character to test.">Carattere da verificare.</param>
      <param name="charClass" vsli:raw="The internal name of a character class.">Nome interno di una classe di caratteri.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;ch&quot; /&gt; parameter is in the character class specified by the &lt;paramref name=&quot;charClass&quot; /&gt; parameter.">
        <see langword="true" /> se il parametro <paramref name="ch" /> è contenuto nella classe di caratteri specificata dal parametro <paramref name="charClass" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="ch" vsli:raw="A character.">Carattere.</param>
      <param name="set" vsli:raw="The character set.">Set di caratteri.</param>
      <param name="category" vsli:raw="The character category.">Categoria del carattere.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CheckTimeout">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="i" vsli:raw="A number to save.">Numero da salvare.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Restituisce <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleStack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleTrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.EnsureStorage">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.FindFirstChar">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Go">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.InitTrackCount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index" vsli:raw="The possible boundary position.">Possibile posizione limite.</param>
      <param name="startpos" vsli:raw="The starting position.">Posizione iniziale.</param>
      <param name="endpos" vsli:raw="The ending position.">Posizione finale.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index" vsli:raw="The possible ECMA boundary position.">Possibile posizione dei limiti ECMA.</param>
      <param name="startpos" vsli:raw="The starting position.">Posizione iniziale.</param>
      <param name="endpos" vsli:raw="The ending position.">Posizione finale.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">Numero di acquisizione.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">Numero di acquisizione.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Restituisce <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">Numero di acquisizione.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Restituisce <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Popcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Restituisce <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">Istanza del motore delle espressioni regolari.</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">Testo da analizzare per trovare una corrispondenza di criteri.</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">Posizione iniziale in base zero in <paramref name="text" /> dove il motore delle espressioni regolari cerca una corrispondenza.</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">Posizione finale in base zero in <paramref name="text" /> dove il motore delle espressioni regolari cerca una corrispondenza.</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">Posizione iniziale in base zero dove cercare questa corrispondenza.</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">Numero di caratteri nella corrispondenza precedente.</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per cercare una corrispondenza in modo rapido; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="A match.">Corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">Istanza del motore delle espressioni regolari.</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">Testo da analizzare per trovare una corrispondenza di criteri.</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">Posizione iniziale in base zero in <paramref name="text" /> dove il motore delle espressioni regolari cerca una corrispondenza.</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">Posizione finale in base zero in <paramref name="text" /> dove il motore delle espressioni regolari cerca una corrispondenza.</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">Posizione iniziale in base zero dove cercare questa corrispondenza.</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">Numero di caratteri nella corrispondenza precedente.</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per cercare una corrispondenza in modo rapido; in caso contrario, <see langword="false" />.</param>
      <param name="timeout" vsli:raw="The timeout interval.">Intervallo di timeout.</param>
      <returns vsli:raw="A match.">Corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum" vsli:raw="A capture number.">Numero di acquisizione.</param>
      <param name="uncapnum" vsli:raw="A saved capture number.">Numero di acquisizioni salvato.</param>
      <param name="start" vsli:raw="The starting position.">Posizione iniziale.</param>
      <param name="end" vsli:raw="The ending position.">Posizione finale.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Uncapture">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunnerFactory">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class for a compiled regular expression.">Crea una classe <see cref="T:System.Text.RegularExpressions.RegexRunner" /> per un'espressione regolare compilata.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunnerFactory&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexRunnerFactory" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
      <summary vsli:raw="When overridden in a derived class, creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object for a specific compiled regular expression.">Se sottoposta a override in una classe derivata, consente di creare un oggetto <see cref="T:System.Text.RegularExpressions.RegexRunner" /> per un'espressione regolare compilata specifica.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object designed to execute a specific compiled regular expression.">Oggetto <see cref="T:System.Text.RegularExpressions.RegexRunner" /> progettato per eseguire un'espressione regolare compilata specifica.</returns>
    </member>
  </members>
</doc>