<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Numerics</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.BigInteger">
      <summary>Rappresenta un intero con segno arbitrariamente grande.</summary>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando i valori di una matrice di byte.</summary>
      <param name="value">Matrice di valori byte in ordine little-endian.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un valore <see cref="T:System.Decimal" />.</summary>
      <param name="value">Numero decimale.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Double)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un valore a virgola mobile con precisione doppia.</summary>
      <param name="value">Valore a virgola mobile e precisione doppia.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un Signed Integer a 32 bit.</summary>
      <param name="value">Intero con segno a 32 bit.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Int64)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> usando un valore intero con segno a 64 bit.</summary>
      <param name="value">Intero con segno a 64 bit.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean,System.Boolean)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> usando i valori in un intervallo di byte di sola lettura e indicando facoltativamente la codifica con firma e l'ordine dei byte.</summary>
      <param name="value">Intervallo di byte di sola lettura che rappresentano i dati big integer.</param>
      <param name="isUnsigned">
        <see langword="true" /> per indicare che <paramref name="value" /> usa la codifica senza segno; in caso contrario, <see langword="false" /> (valore predefinito).</param>
      <param name="isBigEndian">
        <see langword="true" /> per indicare che <paramref name="value" /> è nell'ordine dei byte big endian; in caso contrario, <see langword="false" /> (valore predefinito).</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Single)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un valore a virgola mobile con precisione singola.</summary>
      <param name="value">Valore a virgola mobile e precisione singola.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> o <see cref="F:System.Single.PositiveInfinity" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un valore Unsigned Integer a 32 bit.</summary>
      <param name="value">Valore intero senza segno a 32 bit.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> con un valore Unsigned Integer a 64 bit.</summary>
      <param name="value">Intero senza segno a 64 bit.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
      <summary>Ottiene il valore assoluto di un oggetto <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value">Numero.</param>
      <returns>Valore assoluto di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Somma due valori <see cref="T:System.Numerics.BigInteger" /> e restituisce il risultato.</summary>
      <param name="left">Primo valore da sommare.</param>
      <param name="right">Secondo valore da sommare.</param>
      <returns>Somma di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Confronta due valori <see cref="T:System.Numerics.BigInteger" /> e restituisce un Integer che indica se il primo valore è minore, uguale o maggiore rispetto al secondo valore.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>Intero con segno che indica i valori relativi di <paramref name="left" /> e <paramref name="right" />, come illustrato nella tabella seguente.  
  
 <list type="table"><listheader><term> Valore</term><description> Condizione</description></listheader><item><term> Minore di zero</term><description><paramref name="left" /> è minore di <paramref name="right" />.</description></item><item><term> Zero</term><description><paramref name="left" /> è uguale a <paramref name="right" />.</description></item><item><term> Maggiore di zero</term><description><paramref name="left" /> è maggiore di <paramref name="right" />.</description></item></list></returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
      <summary>Confronta questa istanza con un intero con segno a 64 bit e restituisce un intero che indica se il valore di questa istanza è minore, uguale o maggiore del valore dell'intero con segno a 64 bit.</summary>
      <param name="other">Intero con segno a 64 bit da confrontare.</param>
      <returns>Signed Integer che indica la relazione dell'istanza con <paramref name="other" />, come illustrato nella tabella seguente.  
  
 <list type="table"><listheader><term> Valore restituito</term><description> Descrizione</description></listheader><item><term> Minore di zero</term><description> L'istanza corrente è minore di <paramref name="other" />.</description></item><item><term> Zero</term><description> L'istanza corrente è uguale a <paramref name="other" />.</description></item><item><term> Maggiore di zero</term><description> L'istanza corrente è maggiore di <paramref name="other" />.</description></item></list></returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
      <summary>Confronta questa istanza con un secondo <see cref="T:System.Numerics.BigInteger" /> e restituisce un Integer che indica se il valore di questa istanza è minore, uguale o maggiore rispetto al valore dell'oggetto specificato.</summary>
      <param name="other">Oggetto da confrontare.</param>
      <returns>Signed Integer che indica la relazione dell'istanza con <paramref name="other" />, come illustrato nella tabella seguente.  
  
 <list type="table"><listheader><term> Valore restituito</term><description> Descrizione</description></listheader><item><term> Minore di zero</term><description> L'istanza corrente è minore di <paramref name="other" />.</description></item><item><term> Zero</term><description> L'istanza corrente è uguale a <paramref name="other" />.</description></item><item><term> Maggiore di zero</term><description> L'istanza corrente è maggiore di <paramref name="other" />.</description></item></list></returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Object)">
      <summary>Confronta questa istanza con un oggetto specificato e restituisce un intero che indica se il valore di questa istanza è minore, uguale o maggiore rispetto al valore dell'oggetto specificato.</summary>
      <param name="obj">Oggetto da confrontare.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> non è un oggetto <see cref="T:System.Numerics.BigInteger" />.</exception>
      <returns>Signed Integer che indica la relazione dell'istanza corrente con il parametro <paramref name="obj" />, come illustrato nella tabella seguente.  
  
 <list type="table"><listheader><term> Valore restituito</term><description> Descrizione</description></listheader><item><term> Minore di zero</term><description> L'istanza corrente è minore di <paramref name="obj" />.</description></item><item><term> Zero</term><description> L'istanza corrente è uguale a <paramref name="obj" />.</description></item><item><term> Maggiore di zero</term><description> L'istanza corrente è maggiore di <paramref name="obj" />, oppure il parametro <paramref name="obj" /> è <see langword="null" />.</description></item></list></returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
      <summary>Confronta questa istanza con un intero senza segno a 64 bit e restituisce un intero che indica se il valore di questa istanza è minore, uguale o maggiore del valore dell'intero senza segno a 64 bit.</summary>
      <param name="other">Intero senza segno a 64 bit da confrontare.</param>
      <returns>Signed Integer che indica il valore relativo dell'istanza e <paramref name="other" />, come illustrato nella tabella seguente.
          <list type="table"><listheader><term>Valore restituito</term><description>Descrizione</description></listheader><item><term>Minore di zero</term><description>L'istanza corrente è minore di <paramref name="other" />.</description></item><item><term>Zero</term><description>L'istanza corrente è uguale a <paramref name="other" />.</description></item><item><term>Maggiore di zero</term><description>L'istanza corrente è maggiore di <paramref name="other" />.</description></item></list></returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Divide un valore <see cref="T:System.Numerics.BigInteger" /> per un altro e restituisce il risultato.</summary>
      <param name="dividend">Valore da dividere.</param>
      <param name="divisor">Valore per cui dividere.</param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="divisor" /> è 0 (zero).</exception>
      <returns>Quoziente della divisione.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
      <summary>Divide un valore <see cref="T:System.Numerics.BigInteger" /> per un altro, restituisce il risultato e restituisce il resto in un parametro di output.</summary>
      <param name="dividend">Valore da dividere.</param>
      <param name="divisor">Valore per cui dividere.</param>
      <param name="remainder">Quando termina, questo metodo contiene un valore <see cref="T:System.Numerics.BigInteger" /> che rappresenta il resto dalla divisione. Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="divisor" /> è 0 (zero).</exception>
      <returns>Quoziente della divisione.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Int64)">
      <summary>Restituisce un valore che indica se l'istanza corrente e un intero con segno a 64 bit hanno lo stesso valore.</summary>
      <param name="other">Valore intero con segno a 64 bit da confrontare.</param>
      <returns>
        <see langword="true" /> se il Signed Integer a 64 bit e l'istanza corrente hanno lo stesso valore; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se l'istanza corrente e un oggetto <see cref="T:System.Numerics.BigInteger" /> specificato hanno lo stesso valore.</summary>
      <param name="other">Oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se questo oggetto <see cref="T:System.Numerics.BigInteger" /> e <paramref name="other" /> hanno lo stesso valore; <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l'istanza corrente e un oggetto specificato hanno lo stesso valore.</summary>
      <param name="obj">Oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se l'argomento di <paramref name="obj" /> è un oggetto <see cref="T:System.Numerics.BigInteger" /> e se il valore è uguale a quello dell'istanza <see cref="T:System.Numerics.BigInteger" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.UInt64)">
      <summary>Restituisce un valore che indica se l'istanza corrente e un intero senza segno a 64 bit hanno lo stesso valore.</summary>
      <param name="other">Intero senza segno a 64 bit da confrontare.</param>
      <returns>
        <see langword="true" /> se l'Unsigned Integer a 64 bit e l'istanza corrente hanno lo stesso valore; <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GetBitLength">
      <summary>Ottiene il numero di bit necessari per la rappresentazione del complemento a due più breve dell'istanza corrente senza il bit più significativo.</summary>
      <returns>Numero minimo non negativo di bit nella notazione di complemento a due senza il bit più significativo.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GetByteCount(System.Boolean)">
      <summary>Ottiene il numero di byte che saranno restituiti da <see cref="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" /> e <see cref="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" />.</summary>
      <param name="isUnsigned">
        <see langword="true" /> per usare la codifica senza segno; in caso contrario, <see langword="false" />.</param>
      <returns>Numero di byte.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GetHashCode">
      <summary>Restituisce il codice hash per l'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Trova il massimo comune divisore di due valori <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore.</param>
      <param name="right">Secondo valore.</param>
      <returns>Massimo comune divisore di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
      <summary>Restituisce il logaritmo naturale (in base <see langword="e" />) di un numero specificato.</summary>
      <param name="value">Numero di cui è necessario trovare il logaritmo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il logaritmo naturale di <paramref name="value" /> non è compreso nell'intervallo del tipo di dati <see cref="T:System.Double" />.</exception>
      <returns>Logaritmo naturale (di base <see langword="e" />) di <paramref name="value" />, come mostrato nella tabella della sezione Osservazioni.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
      <summary>Restituisce il logaritmo del numero specificato in una base specificata.</summary>
      <param name="value">Numero di cui trovare il logaritmo.</param>
      <param name="baseValue">Base del logaritmo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il logaritmo di <paramref name="value" /> non è compreso nell'intervallo del tipo di dati <see cref="T:System.Double" />.</exception>
      <returns>Logaritmo di base <paramref name="baseValue" /> di <paramref name="value" />, come mostrato nella tabella della sezione Osservazioni.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
      <summary>Restituisce il logaritmo in base 10 del numero specificato.</summary>
      <param name="value">Numero di cui trovare il logaritmo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il logaritmo a base 10 di <paramref name="value" /> non è compreso nell'intervallo del tipo di dati <see cref="T:System.Double" />.</exception>
      <returns>Logaritmo in base 10 di <paramref name="value" />, come mostrato nella tabella della sezione Osservazioni.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Restituisce il maggiore di due valori <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>Parametro <paramref name="left" /> o <paramref name="right" />, qualunque sia il maggiore.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Restituisce il minore di due valori <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>Parametro <paramref name="left" /> o <paramref name="right" />, qualunque sia il minore.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Esegue la divisione con modulo per un numero elevato alla potenza di un altro numero.</summary>
      <param name="value">Numero da elevare alla potenza di <paramref name="exponent" /></param>
      <param name="exponent">Esponente per il quale elevare alla potenza <paramref name="value" />.</param>
      <param name="modulus">Numero per il quale eseguire la divisione di <paramref name="value" /> elevato alla potenza di <paramref name="exponent" />.</param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="modulus" /> è zero.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="exponent" /> è negativo.</exception>
      <returns>Resto risultante dalla divisione di <paramref name="value" />exponent per <paramref name="modulus" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Restituisce il prodotto di due valori <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo numero da moltiplicare.</param>
      <param name="right">Secondo numero da moltiplicare.</param>
      <returns>Prodotto dei parametri <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
      <summary>Nega un valore <see cref="T:System.Numerics.BigInteger" /> specificato.</summary>
      <param name="value">Valore da negare.</param>
      <returns>Risultato del parametro <paramref name="value" /> moltiplicato per il valore uno negativo (-1).</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Somma i valori di due oggetti <see cref="T:System.Numerics.BigInteger" /> specificati.</summary>
      <param name="left">Primo valore da sommare.</param>
      <param name="right">Secondo valore da sommare.</param>
      <returns>Somma di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Esegue un'operazione <see langword="And" /> bit per bit su due valori <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore.</param>
      <param name="right">Secondo valore.</param>
      <returns>Risultato dell'operazione <see langword="And" /> bit per bit.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Esegue un'operazione <see langword="Or" /> bit per bit su due valori <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore.</param>
      <param name="right">Secondo valore.</param>
      <returns>Risultato dell'operazione <see langword="Or" /> bit per bit.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
      <summary>Decrementa un valore <see cref="T:System.Numerics.BigInteger" /> di 1.</summary>
      <param name="value">Il valore da decrementare.</param>
      <returns>Valore del parametro <paramref name="value" /> decrementato di 1.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Divide un valore <see cref="T:System.Numerics.BigInteger" /> specificato per un altro valore <see cref="T:System.Numerics.BigInteger" /> specificato tramite una divisione intera.</summary>
      <param name="dividend">Valore da dividere.</param>
      <param name="divisor">Valore per cui dividere.</param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="divisor" /> è 0 (zero).</exception>
      <returns>Risultato integrale della divisione.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un valore Signed Long Integer e un valore <see cref="T:System.Numerics.BigInteger" /> sono uguali.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
      <summary>Restituisce un valore che indica se un valore Signed Long Integer e un valore <see cref="T:System.Numerics.BigInteger" /> sono uguali.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se i valori di due oggetti <see cref="T:System.Numerics.BigInteger" /> sono uguali.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
      <summary>Restituisce un valore che indica se un valore Unsigned Long Integer e un valore <see cref="T:System.Numerics.BigInteger" /> sono uguali.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un valore Unsigned Long Integer e un valore <see cref="T:System.Numerics.BigInteger" /> sono uguali.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Esegue un'operazione <see langword="Or" /> (<see langword="XOr" />) bit per bit esclusiva su due valori <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore.</param>
      <param name="right">Secondo valore.</param>
      <returns>Risultato dell'operazione <see langword="Or" /> bit per bit.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Decimal" /> in un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
      <summary>Definisce una conversione esplicita di un valore <see cref="T:System.Double" /> in un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore byte senza segno.</summary>
      <param name="value">Valore da convertire in un <see cref="T:System.Byte" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</exception>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore <see cref="T:System.Decimal" />.</summary>
      <param name="value">Valore da convertire in un <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Decimal.MinValue" /> o maggiore di <see cref="F:System.Decimal.MaxValue" />.</exception>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore <see cref="T:System.Double" />.</summary>
      <param name="value">Valore da convertire in un <see cref="T:System.Double" />.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore Signed Integer a 16 bit.</summary>
      <param name="value">Valore da convertire in un intero con segno a 16 bit.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Int16.MinValue" /> o è maggiore di <see cref="F:System.Int16.MaxValue" />.</exception>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore intero con segno a 32 bit.</summary>
      <param name="value">Valore da convertire in un intero con segno a 32 bit.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Int32.MinValue" /> o è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore intero con segno a 64 bit.</summary>
      <param name="value">Valore da convertire in un intero con segno a 64 bit.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Int64.MinValue" /> o è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore a 8 bit con segno.  
  
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="T:System.Int16" />.</summary>
      <param name="value">Valore da convertire in un valore con segno a 8 bit.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.SByte.MinValue" /> o è maggiore di <see cref="F:System.SByte.MaxValue" />.</exception>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore in virgola mobile a precisione singola.</summary>
      <param name="value">Valore da convertire in un valore a virgola mobile e precisione singola.</param>
      <returns>Oggetto che contiene la rappresentazione più vicina possibile del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore Unsigned Integer a 16 bit.  
  
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="T:System.Int32" />.</summary>
      <param name="value">Valore da convertire in un intero senza segno a 16 bit.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.UInt16.MinValue" /> o è maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore intero senza segno a 32 bit.  
  
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="T:System.Int64" />.</summary>
      <param name="value">Valore da convertire in un intero senza segno a 32 bit.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.UInt32.MinValue" /> o è maggiore di <see cref="F:System.UInt32.MaxValue" />.</exception>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
      <summary>Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore intero senza segno a 64 bit.  
  
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="T:System.Double" />.</summary>
      <param name="value">Valore da convertire in un intero senza segno a 64 bit.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.UInt64.MinValue" /> o è maggiore di <see cref="F:System.UInt64.MaxValue" />.</exception>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
      <summary>Definisce una conversione esplicita di un valore <see cref="T:System.Single" /> in un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" /> o <see cref="F:System.Single.NegativeInfinity" />.</exception>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un Signed Integer a 64 bit è maggiore di un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
      <summary>Restituisce un valore che indica se un <see cref="T:System.Numerics.BigInteger" /> è maggiore di un valore Signed Integer a 64 bit.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore di un altro valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore di un Unsigned Integer a 64 bit.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore di un Unsigned Integer a 64 bit.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un Signed Integer a 64 bit è maggiore o uguale a un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore o uguale a un valore Signed Integer a 64 bit.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore o uguale a un altro valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore o uguale a un valore Unsigned Integer a 64 bit.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un Unsigned Integer a 64 bit è maggiore o uguale a un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
      <summary>Definisce una conversione implicita di un byte senza segno in un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
      <summary>Definisce una conversione implicita di un Signed Integer a 16 bit in un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
      <summary>Definisce una conversione implicita di un intero con segno a 32 bit in un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
      <summary>Definisce una conversione implicita di un intero con segno a 64 bit in un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
      <summary>Definisce una conversione implicita di un Signed Integer a 8 bit in un valore <see cref="T:System.Numerics.BigInteger" />.  
  
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</summary>
      <param name="value">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
      <summary>Definisce una conversione implicita di un Unsigned Integer a 16 bit in un valore <see cref="T:System.Numerics.BigInteger" />.  
  
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</summary>
      <param name="value">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
      <summary>Definisce una conversione implicita di un intero senza segno a 32 bit in un valore <see cref="T:System.Numerics.BigInteger" />.  
  
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</summary>
      <param name="value">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
      <summary>Definisce una conversione implicita di un intero senza segno a 64 bit in un valore <see cref="T:System.Numerics.BigInteger" />.  
  
Questa API non è conforme a CLS. L'alternativa conforme è <see cref="T:System.Double" />.</summary>
      <param name="value">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
      <summary>Incrementa un valore <see cref="T:System.Numerics.BigInteger" /> di 1.</summary>
      <param name="value">Valore da incrementare.</param>
      <returns>Valore del parametro <paramref name="value" /> incrementato di 1.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un Signed Integer a 64 bit e un valore <see cref="T:System.Numerics.BigInteger" /> non sono uguali.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> e un Signed Integer a 64 bit non sono uguali.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se due oggetti <see cref="T:System.Numerics.BigInteger" /> hanno valori diversi.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> e un Unsigned Integer a 64 bit non sono uguali.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un Unsigned Integer a 64 bit e un valore <see cref="T:System.Numerics.BigInteger" /> non sono uguali.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
      <summary>Sposta un valore <see cref="T:System.Numerics.BigInteger" /> di un numero specificato di bit verso sinistra.</summary>
      <param name="value">Valore di cui spostare i bit.</param>
      <param name="shift">Numero di bit <paramref name="value" /> da spostare a sinistra.</param>
      <returns>Valore spostato a sinistra del numero specificato di bit.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un Signed Integer a 64 bit è minore di un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore di un Signed Integer a 64 bit.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore di un altro valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore di un Unsigned Integer a 64 bit.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un Unsigned Integer a 64 bit è minore di un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un Signed Integer a 64 bit è minore o uguale a un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore o uguale a un Signed Integer a 64 bit.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore o uguale a un altro valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
      <summary>Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore o uguale a un Unsigned Integer a 64 bit.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
      <summary>Restituisce un valore che indica se un Unsigned Integer a 64 bit è minore o uguale a un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Restituisce il resto risultante dalla divisione di due valori <see cref="T:System.Numerics.BigInteger" /> specificati.</summary>
      <param name="dividend">Valore da dividere.</param>
      <param name="divisor">Valore per cui dividere.</param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="divisor" /> è 0 (zero).</exception>
      <returns>Resto risultante dalla divisione.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Moltiplica due valori <see cref="T:System.Numerics.BigInteger" /> specificati.</summary>
      <param name="left">Primo valore da moltiplicare.</param>
      <param name="right">Secondo valore da moltiplicare.</param>
      <returns>Prodotto di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
      <summary>Restituisce il complemento a uno bit per bit di un valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value">Valore intero.</param>
      <returns>Complemento a uno bit per bit dell'oggetto <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
      <summary>Sposta un valore <see cref="T:System.Numerics.BigInteger" /> di un numero specificato di bit verso destra.</summary>
      <param name="value">Valore di cui spostare i bit.</param>
      <param name="shift">Numero di bit in base al quale spostare <paramref name="value" /> a destra.</param>
      <returns>Valore spostato a destra del numero specificato di bit.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Sottrae un valore <see cref="T:System.Numerics.BigInteger" /> da un altro valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left">Valore da cui sottrarre (minuendo).</param>
      <param name="right">Valore da sottrarre (sottraendo).</param>
      <returns>Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
      <summary>Nega un valore BigInteger specificato.</summary>
      <param name="value">Valore da negare.</param>
      <returns>Risultato del parametro <paramref name="value" /> moltiplicato per il valore uno negativo (-1).</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
      <summary>Restituisce il valore dell'operando <see cref="T:System.Numerics.BigInteger" />. Il segno dell'operando resta invariato.</summary>
      <param name="value">Valore intero.</param>
      <returns>Valore dell'operando <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converte la rappresentazione di un numero, contenuto nell'intervallo di caratteri di sola lettura specificato, in uno stile specificato nell'equivalente <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value">Intervallo di caratteri di sola lettura che contiene il numero da convertire.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che specifica il formato consentito di <paramref name="value" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> non è un valore di <see cref="T:System.Globalization.NumberStyles" />.  
  
-oppure- 
 <paramref name="style" /> include il contrassegno <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> insieme a un altro valore.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è conforme al criterio di input specificato da <paramref name="style" />.</exception>
      <returns>Valore equivalente al numero specificato nel parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String)">
      <summary>Converte la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è corretto.</exception>
      <returns>Valore equivalente al numero specificato nel parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente.</summary>
      <param name="value">Stringa contenente un numero da convertire.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che specifica il formato consentito di <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> non è un valore di <see cref="T:System.Globalization.NumberStyles" />.  
  
-oppure- 
 <paramref name="style" /> include il contrassegno <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> insieme a un altro valore.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è conforme al criterio di input specificato da <see cref="T:System.Globalization.NumberStyles" />.</exception>
      <returns>Valore equivalente al numero specificato nel parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in uno stile specificato e un formato specifico delle impostazioni cultura indicato nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente.</summary>
      <param name="value">Stringa contenente un numero da convertire.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che specifica il formato consentito di <paramref name="value" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> non è un valore di <see cref="T:System.Globalization.NumberStyles" />.  
  
-oppure- 
 <paramref name="style" /> include il contrassegno <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> insieme a un altro valore.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è conforme al criterio di input specificato da <paramref name="style" />.</exception>
      <returns>Valore equivalente al numero specificato nel parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa di un numero in un formato specifico delle impostazioni cultura indicato nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente.</summary>
      <param name="value">Stringa contenente un numero da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è corretto.</exception>
      <returns>Valore equivalente al numero specificato nel parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
      <summary>Eleva alla potenza di un valore specificato il valore <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value">Numero da elevare alla potenza di <paramref name="exponent" /></param>
      <param name="exponent">Esponente per il quale elevare alla potenza <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="exponent" /> è negativo.</exception>
      <returns>Risultato di <paramref name="value" /> elevato alla potenza di <paramref name="exponent" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Esegue una divisione intera su due valori <see cref="T:System.Numerics.BigInteger" /> e restituisce il resto.</summary>
      <param name="dividend">Valore da dividere.</param>
      <param name="divisor">Valore per cui dividere.</param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="divisor" /> è 0 (zero).</exception>
      <returns>Resto risultante dalla divisione di <paramref name="dividend" /> per <paramref name="divisor" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Sottrae un valore <see cref="T:System.Numerics.BigInteger" /> da un altro e restituisce il risultato.</summary>
      <param name="left">Valore da cui sottrarre (minuendo).</param>
      <param name="right">Valore da sottrarre (sottraendo).</param>
      <returns>Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToByteArray">
      <summary>Converte un valore <see cref="T:System.Numerics.BigInteger" /> in una matrice di byte.</summary>
      <returns>Valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente convertito in una matrice di byte.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)">
      <summary>Restituisce il valore di <see cref="T:System.Numerics.BigInteger" /> come matrice di byte usando il minor numero possibile di byte. Se il valore è zero, restituisce una matrice di un byte il cui elemento è 0x00.</summary>
      <param name="isUnsigned">
        <see langword="true" /> per usare la codifica senza segno; in caso contrario, <see langword="false" />.</param>
      <param name="isBigEndian">
        <see langword="true" /> per scrivere i byte in un ordine di byte big endian; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.OverflowException">Se <paramref name="isUnsigned" /> è <see langword="true" /> e <see cref="P:System.Numerics.BigInteger.Sign" /> è negativo.</exception>
      <returns>Valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente convertito in una matrice di byte.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString">
      <summary>Converte il valore numerico dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore <see cref="T:System.Numerics.BigInteger" /> corrente.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
      <summary>Converte il valore numerico dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente nella rappresentazione di stringa equivalente usando le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa del valore <see cref="T:System.Numerics.BigInteger" /> corrente nel formato specificato dal parametro <paramref name="provider" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.String)">
      <summary>Converte il valore numerico dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente nella rappresentazione di stringa equivalente, usando il formato specificato.</summary>
      <param name="format">Stringa di formato numerico standard o personalizzato.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è una stringa di formato valida.</exception>
      <returns>Rappresentazione di stringa del valore <see cref="T:System.Numerics.BigInteger" /> corrente nel formato specificato dal parametro <paramref name="format" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore numerico dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="format">Stringa di formato numerico standard o personalizzato.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è una stringa di formato valida.</exception>
      <returns>Rappresentazione di stringa del valore corrente di <see cref="T:System.Numerics.BigInteger" />, come specificato dai parametri <paramref name="format" /> e <paramref name="provider" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
      <summary>Formatta questa istanza di big integer in un intervallo di caratteri.</summary>
      <param name="destination">Intervallo di caratteri in cui verrà scritta l'istanza.</param>
      <param name="charsWritten">Quando termina, questo metodo contiene la lunghezza dell'intervallo in numero di caratteri.</param>
      <param name="format">Intervallo di caratteri di sola lettura che specifica il formato per l'operazione di formattazione.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="value" />.</param>
      <returns>
        <see langword="true" /> se l'operazione di formattazione ha esito positivo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
      <summary>Prova a convertire la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <param name="value">Rappresentazione di un numero come intervallo di caratteri di sola lettura.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="value" />. Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="value" />.</param>
      <param name="result">Quando questo metodo restituisce un risultato, esso contiene <see cref="T:System.Numerics.BigInteger" /> equivalente al numero contenuto in <paramref name="value" />, oppure <see cref="P:System.Numerics.BigInteger.Zero" /> in caso di errore nella conversione. La conversione non viene eseguita se il parametro <paramref name="value" /> è un intervallo di caratteri vuoto oppure è in un formato non conforme a <paramref name="style" />. Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> non è un valore di <see cref="T:System.Globalization.NumberStyles" />.  
  
-oppure- 
 <paramref name="style" /> include il contrassegno <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> insieme a un altro valore.</exception>
      <returns>
        <see langword="true" /> se <paramref name="value" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Numerics.BigInteger@)">
      <summary>Prova a convertire la rappresentazione di un numero contenuto nell'intervallo di caratteri di sola lettura specificato nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <param name="value">Rappresentazione di un numero come intervallo di caratteri di sola lettura.</param>
      <param name="result">Quando questo metodo restituisce un risultato, esso contiene <see cref="T:System.Numerics.BigInteger" /> equivalente al numero contenuto in <paramref name="value" />, oppure zero (0) in caso di errore nella conversione. La conversione non viene eseguita se il parametro <paramref name="value" /> è un intervallo di caratteri vuoto o non è nel formato corretto. Questo parametro viene passato non inizializzato.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
      <summary>Prova a convertire la rappresentazione di stringa di un numero in uno stile specificato e un formato specifico delle impostazioni cultura indicato nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <param name="value">Rappresentazione di stringa di un numero. La stringa viene interpreta usando lo stile specificato da <paramref name="style" />.</param>
      <param name="style">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <paramref name="value" />. Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relativamente a <paramref name="value" />.</param>
      <param name="result">Quando questo metodo restituisce un risultato, esso contiene <see cref="T:System.Numerics.BigInteger" /> equivalente al numero contenuto in <paramref name="value" />, oppure <see cref="P:System.Numerics.BigInteger.Zero" /> in caso di errore nella conversione. La conversione non viene eseguita se il parametro <paramref name="value" /> è <see langword="null" /> oppure è in un formato non conforme a <paramref name="style" />. Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> non è un valore di <see cref="T:System.Globalization.NumberStyles" />.  
  
-oppure- 
 <paramref name="style" /> include il contrassegno <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> insieme a un altro valore.</exception>
      <returns>
        <see langword="true" /> se il parametro <paramref name="value" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
      <summary>Prova a convertire la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</summary>
      <param name="value">Rappresentazione di stringa di un numero.</param>
      <param name="result">Quando questo metodo restituisce un risultato, esso contiene <see cref="T:System.Numerics.BigInteger" /> equivalente al numero contenuto in <paramref name="value" />, oppure zero (0) in caso di errore nella conversione. La conversione non viene eseguita se il parametro <paramref name="value" /> è <see langword="null" />, o non è nel formato corretto. Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <paramref name="value" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)">
      <summary>Copia il valore di <see cref="T:System.Numerics.BigInteger" /> come byte di complemento a due little endian usando il minor numero possibile di byte. Se il valore è zero, restituisce un byte il cui elemento è 0x00.</summary>
      <param name="destination">Intervallo di destinazione in cui devono essere scritti i byte risultanti.</param>
      <param name="bytesWritten">Numero di byte scritti in <paramref name="destination" />.</param>
      <param name="isUnsigned">
        <see langword="true" /> per usare la codifica senza segno; in caso contrario, <see langword="false" />.</param>
      <param name="isBigEndian">
        <see langword="true" /> per scrivere i byte in un ordine di byte big endian; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="isUnsigned" /> è <see langword="true" /> e <see cref="P:System.Numerics.BigInteger.Sign" /> è negativo.</exception>
      <returns>
        <see langword="true" /> se è possibile inserire i byte in <paramref name="destination" />; <see langword="false" /> se non è possibile scrivere tutti i byte per mancanza di spazio.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsEven">
      <summary>Indica se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente è un numero pari.</summary>
      <returns>
        <see langword="true" /> se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> è un numero pari; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsOne">
      <summary>Indica se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente è <see cref="P:System.Numerics.BigInteger.One" />.</summary>
      <returns>
        <see langword="true" /> se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> è <see cref="P:System.Numerics.BigInteger.One" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsPowerOfTwo">
      <summary>Indica se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente è una potenza di due.</summary>
      <returns>
        <see langword="true" /> se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> è una potenza di due; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsZero">
      <summary>Indica se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente è <see cref="P:System.Numerics.BigInteger.Zero" />.</summary>
      <returns>
        <see langword="true" /> se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> è <see cref="P:System.Numerics.BigInteger.Zero" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.MinusOne">
      <summary>Ottiene un valore che rappresenta il numero negativo uno (-1).</summary>
      <returns>Intero il cui valore è il numero negativo uno (-1).</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.One">
      <summary>Ottiene un valore che rappresenta il numero uno (1).</summary>
      <returns>Oggetto il cui valore è il numero uno (1).</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.Sign">
      <summary>Ottiene un numero che indica il segno (negativo, positivo o zero) dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente.</summary>
      <returns>Numero che indica il segno dell'oggetto <see cref="T:System.Numerics.BigInteger" />, come illustrato nella tabella seguente.  
  
 <list type="table"><listheader><term> Number</term><description> Descrizione</description></listheader><item><term> -1</term><description> Il valore di questo oggetto è negativo.</description></item><item><term> 0</term><description> Il valore di questo oggetto è 0 (zero).</description></item><item><term> 1</term><description> Il valore di questo oggetto è positivo.</description></item></list></returns>
    </member>
    <member name="P:System.Numerics.BigInteger.Zero">
      <summary>Ottiene un valore che rappresenta il numero 0 (zero).</summary>
      <returns>Intero il cui valore è 0 (zero).</returns>
    </member>
    <member name="T:System.Numerics.Complex">
      <summary>Rappresenta un numero complesso.</summary>
    </member>
    <member name="F:System.Numerics.Complex.ImaginaryOne">
      <summary>Restituisce una nuova istanza di <see cref="T:System.Numerics.Complex" /> con un numero reale uguale a zero e un numero immaginario uguale a uno.</summary>
    </member>
    <member name="F:System.Numerics.Complex.Infinity">
      <summary>Rappresenta l'infinito come numero complesso.</summary>
    </member>
    <member name="F:System.Numerics.Complex.NaN">
      <summary>Rappresenta un'istanza complessa che non è un numero (NaN).</summary>
    </member>
    <member name="F:System.Numerics.Complex.One">
      <summary>Restituisce una nuova istanza di <see cref="T:System.Numerics.Complex" /> con un numero reale uguale a uno e un numero immaginario uguale a zero.</summary>
    </member>
    <member name="F:System.Numerics.Complex.Zero">
      <summary>Restituisce una nuova istanza di <see cref="T:System.Numerics.Complex" /> con un numero reale uguale a zero e un numero immaginario uguale a zero.</summary>
    </member>
    <member name="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.Complex" /> usando i valori reali e immaginari specificati.</summary>
      <param name="real">Parte reale del numero complesso.</param>
      <param name="imaginary">Parte immaginaria del numero complesso.</param>
    </member>
    <member name="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
      <summary>Ottiene il valore assoluto (o grandezza) di un numero complesso.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Valore assoluto di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
      <summary>Restituisce l'angolo che costituisce l'arcocoseno del numero complesso specificato.</summary>
      <param name="value">Numero complesso che rappresenta un coseno.</param>
      <returns>Angolo espresso in radianti che costituisce l'arcocoseno di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Double,System.Numerics.Complex)">
      <summary>Aggiunge un numero reale a precisione doppia a un numero complesso e restituisce il risultato.</summary>
      <param name="left">Valore reale a precisione doppia da aggiungere.</param>
      <param name="right">Valore complesso da aggiungere.</param>
      <returns>Somma di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Double)">
      <summary>Aggiunge un numero complesso a un numero reale a precisione doppia e restituisce il risultato.</summary>
      <param name="left">Valore complesso da aggiungere.</param>
      <param name="right">Valore reale a precisione doppia da aggiungere.</param>
      <returns>Somma di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Somma due numeri complessi e restituisce il risultato.</summary>
      <param name="left">Primo numero complesso da sommare.</param>
      <param name="right">Secondo numero complesso da sommare.</param>
      <returns>Somma di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
      <summary>Restituisce l'angolo che costituisce l'arcoseno del numero complesso specificato.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Angolo che costituisce l'arcoseno di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
      <summary>Restituisce l'angolo che costituisce l'arcotangente del numero complesso specificato.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Angolo che costituisce l'arcotangente di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
      <summary>Calcola il coniugato di un numero complesso e restituisce il risultato.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Coniugato di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
      <summary>Restituisce il coseno del numero complesso specificato.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Coseno di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
      <summary>Restituisce il coseno iperbolico del numero complesso specificato.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Coseno iperbolico di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Double,System.Numerics.Complex)">
      <summary>Divide un numero reale a precisione doppia per un numero complesso e restituisce il risultato.</summary>
      <param name="dividend">Numero reale a precisione doppia da dividere.</param>
      <param name="divisor">Numero complesso per cui dividere.</param>
      <returns>Quoziente della divisione.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Double)">
      <summary>Divide un numero complesso per un numero reale a precisione doppia e restituisce il risultato.</summary>
      <param name="dividend">Numero complesso da dividere.</param>
      <param name="divisor">Numero reale a precisione doppia per cui dividere.</param>
      <returns>Quoziente della divisione.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Divide un numero complesso per un altro e restituisce il risultato.</summary>
      <param name="dividend">Numero complesso da dividere.</param>
      <param name="divisor">Numero complesso per cui dividere.</param>
      <returns>Quoziente della divisione.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
      <summary>Restituisce un valore che indica se l'istanza corrente e un numero complesso specificato hanno lo stesso valore.</summary>
      <param name="value">Numero complesso da confrontare.</param>
      <returns>
        <see langword="true" /> se questo numero complesso e <paramref name="value" /> presentano lo stesso valore. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l'istanza corrente e un oggetto specificato hanno lo stesso valore.</summary>
      <param name="obj">Oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se il parametro <paramref name="obj" /> è un oggetto <see cref="T:System.Numerics.Complex" /> o un tipo in grado di eseguire la conversione implicita in un oggetto <see cref="T:System.Numerics.Complex" /> e il relativo valore è uguale all'oggetto <see cref="T:System.Numerics.Complex" /> corrente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
      <summary>Restituisce <see langword="e" /> elevato alla potenza specificata da un numero complesso.</summary>
      <param name="value">Numero complesso che specifica una potenza.</param>
      <returns>Numero <see langword="e" /> elevato alla potenza <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
      <summary>Crea un numero complesso dalle coordinate polari di un punto.</summary>
      <param name="magnitude">La grandezza che è la distanza dall'origine (l'intersezione dell'asse x con l'asse y) al numero.</param>
      <param name="phase">La fase che è l'angolo dalla riga all'asse orizzontale, espresso nei radianti.</param>
      <returns>Numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.GetHashCode">
      <summary>Restituisce il codice hash per l'oggetto <see cref="T:System.Numerics.Complex" /> corrente.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="M:System.Numerics.Complex.IsFinite(System.Numerics.Complex)">
      <summary>Determina se il numero complesso specificato è finito.</summary>
      <param name="value">Numero complesso.</param>
      <returns>
        <see langword="true" /> se entrambe le parti, reale e immaginaria, sono finite (zero, subnormali o normali); in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.IsInfinity(System.Numerics.Complex)">
      <summary>Restituisce un valore che indica se il numero complesso specificato restituisce l'infinito.</summary>
      <param name="value">Numero complesso.</param>
      <returns>
        <see langword="true" /> se una delle due parti, reale o immaginaria, è <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NegativeInfinity" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.IsNaN(System.Numerics.Complex)">
      <summary>Restituisce un valore che indica se l'istanza complessa specificata non è un numero (NaN).</summary>
      <param name="value">Numero complesso.</param>
      <returns>
        <see langword="true" /> se il valore specificato non è finito o infinito; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
      <summary>Restituisce <see langword="e" />, la base del logaritmo naturale del numero complesso specificato.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Logaritmo naturale (base <see langword="e" />) di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
      <summary>Restituisce il logaritmo del numero complesso specificato nella base specificata.</summary>
      <param name="value">Numero complesso.</param>
      <param name="baseValue">Base del logaritmo.</param>
      <returns>Logaritmo di <paramref name="value" /> in base <paramref name="baseValue" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
      <summary>Restituisce il logaritmo in base 10 del numero complesso specificato.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Logaritmo in base 10 di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Double,System.Numerics.Complex)">
      <summary>Restituisce il prodotto di un numero reale a precisione doppia e un numero complesso.</summary>
      <param name="left">Numero reale a precisione doppia da moltiplicare.</param>
      <param name="right">Numero complesso da moltiplicare.</param>
      <returns>Prodotto dei parametri <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Double)">
      <summary>Restituisce il prodotto di un numero complesso e un numero reale a precisione doppia.</summary>
      <param name="left">Numero complesso da moltiplicare.</param>
      <param name="right">Numero reale a precisione doppia da moltiplicare.</param>
      <returns>Prodotto dei parametri <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Restituisce il prodotto di due numeri complessi.</summary>
      <param name="left">Primo numero complesso da moltiplicare.</param>
      <param name="right">Secondo numero complesso da moltiplicare.</param>
      <returns>Prodotto dei parametri <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
      <summary>Restituisce l'inverso additivo di un numero complesso specificato.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Risultato dei componenti <see cref="P:System.Numerics.Complex.Real" /> e <see cref="P:System.Numerics.Complex.Imaginary" /> del parametro <paramref name="value" /> moltiplicato per -1.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Double,System.Numerics.Complex)">
      <summary>Aggiunge un numero reale a precisione doppia a un numero complesso.</summary>
      <param name="left">Valore reale a precisione doppia da aggiungere.</param>
      <param name="right">Valore complesso da aggiungere.</param>
      <returns>Somma di <paramref name="left" /> e <paramref name="right" /> espressa come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Double)">
      <summary>Aggiunge un numero complesso a un numero reale a precisione doppia.</summary>
      <param name="left">Valore complesso da aggiungere.</param>
      <param name="right">Valore reale a precisione doppia da aggiungere.</param>
      <returns>Somma di <paramref name="left" /> e <paramref name="right" /> espressa come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Somma due numeri complessi.</summary>
      <param name="left">Primo valore complesso da aggiungere.</param>
      <param name="right">Secondo valore complesso da aggiungere.</param>
      <returns>Somma di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Double,System.Numerics.Complex)">
      <summary>Divide un numero reale a precisione doppia specificato per un numero complesso specificato.</summary>
      <param name="left">Valore reale a precisione doppia da dividere.</param>
      <param name="right">Valore complesso per cui dividere.</param>
      <returns>Risultato della divisione di <paramref name="left" /> per <paramref name="right" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Double)">
      <summary>Divide un numero complesso specificato per un numero reale a precisione doppia specificato.</summary>
      <param name="left">Valore complesso da dividere.</param>
      <param name="right">Valore reale a precisione doppia per cui dividere.</param>
      <returns>Risultato della divisione di <paramref name="left" /> per <paramref name="right" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Divide un numero complesso specificato per un altro numero complesso specificato.</summary>
      <param name="left">Valore complesso da dividere.</param>
      <param name="right">Valore complesso per cui dividere.</param>
      <returns>Risultato della divisione di <paramref name="left" /> in base a <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Restituisce un valore che indica se due numeri complessi sono uguali.</summary>
      <param name="left">Primo numero complesso da confrontare.</param>
      <param name="right">Secondo numero complesso da confrontare.</param>
      <returns>
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
      <summary>Definisce una conversione esplicita di un valore <see cref="T:System.Decimal" /> in un numero complesso.</summary>
      <param name="value">Valore da convertire in un numero complesso.</param>
      <returns>Numero complesso contenente un componente reale uguale a <paramref name="value" /> e un componente immaginario uguale a zero.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
      <summary>Definisce una conversione esplicita di un valore <see cref="T:System.Numerics.BigInteger" /> in un numero complesso.</summary>
      <param name="value">Valore da convertire in un numero complesso.</param>
      <returns>Numero complesso contenente un componente reale uguale a <paramref name="value" /> e un componente immaginario uguale a zero.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
      <summary>Definisce una conversione implicita di un byte senza segno in un numero complesso.</summary>
      <param name="value">Valore da convertire in un numero complesso.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
      <summary>Definisce una conversione implicita di un numero a virgola mobile a precisione doppia in un numero complesso.</summary>
      <param name="value">Valore da convertire in un numero complesso.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
      <summary>Definisce una conversione implicita di un intero con segno a 16 bit in un numero complesso.</summary>
      <param name="value">Valore da convertire in un numero complesso.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
      <summary>Definisce una conversione implicita di un Intero con segno a 32 bit in un numero complesso.</summary>
      <param name="value">Valore da convertire in un numero complesso.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
      <summary>Definisce una conversione implicita di un Intero con segno a 64 bit in un numero complesso.</summary>
      <param name="value">Valore da convertire in un numero complesso.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
      <summary>Definisce una conversione implicita di un byte con segno in un numero complesso.   
           
Questa API non è conforme a CLS.</summary>
      <param name="value">Valore da convertire in un numero complesso.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
      <summary>Definisce una conversione implicita di un numero a virgola mobile a precisione singola in un numero complesso.</summary>
      <param name="value">Valore da convertire in un numero complesso.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
      <summary>Definisce una conversione implicita di un intero senza segno a 16 bit in un numero complesso.   
           
Questa API non è conforme a CLS.</summary>
      <param name="value">Valore da convertire in un numero complesso.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
      <summary>Definisce una conversione implicita di un intero senza segno a 32 bit in un numero complesso.   
           
Questa API non è conforme a CLS.</summary>
      <param name="value">Valore da convertire in un numero complesso.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
      <summary>Definisce una conversione implicita di un intero senza segno a 64 bit in un numero complesso.   
           
Questa API non è conforme a CLS.</summary>
      <param name="value">Valore da convertire in un numero complesso.</param>
      <returns>Oggetto contenente il valore del parametro <paramref name="value" /> come parte reale e zero come parte immaginaria.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Restituisce un valore che indica se due numeri complessi non sono uguali.</summary>
      <param name="left">Primo valore da confrontare.</param>
      <param name="right">Secondo valore da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Double,System.Numerics.Complex)">
      <summary>Moltiplica un numero reale a precisione doppia specificato per un numero complesso specificato.</summary>
      <param name="left">Valore reale a precisione doppia da moltiplicare.</param>
      <param name="right">Valore complesso da moltiplicare.</param>
      <returns>Prodotto di <paramref name="left" /> e <paramref name="right" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Double)">
      <summary>Moltiplica il numero complesso specificato per un numero reale a precisione doppia specificato.</summary>
      <param name="left">Valore complesso da moltiplicare.</param>
      <param name="right">Valore reale a precisione doppia da moltiplicare.</param>
      <returns>Prodotto di <paramref name="left" /> e <paramref name="right" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Moltiplica due numeri complessi specificati.</summary>
      <param name="left">Primo valore complesso da moltiplicare.</param>
      <param name="right">Secondo valore complesso da moltiplicare.</param>
      <returns>Prodotto di <paramref name="left" /> e <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Double,System.Numerics.Complex)">
      <summary>Sottrae un numero complesso da un numero reale a precisione doppia.</summary>
      <param name="left">Valore reale a precisione doppia da cui sottrarre (minuendo).</param>
      <param name="right">Valore complesso da sottrarre (sottraendo).</param>
      <returns>Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Double)">
      <summary>Sottrae un numero reale a precisione doppia da un numero complesso.</summary>
      <param name="left">Valore complesso da cui sottrarre (minuendo).</param>
      <param name="right">Valore reale a precisione doppia da sottrarre (sottraendo).</param>
      <returns>Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Sottrae un numero complesso da un altro numero complesso.</summary>
      <param name="left">Valore da cui sottrarre (minuendo).</param>
      <param name="right">Valore da sottrarre (sottraendo).</param>
      <returns>Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
      <summary>Restituisce l'inverso additivo di un numero complesso specificato.</summary>
      <param name="value">Valore da negare.</param>
      <returns>Risultato dei componenti <see cref="P:System.Numerics.Complex.Real" /> e <see cref="P:System.Numerics.Complex.Imaginary" /> del parametro <paramref name="value" /> moltiplicato per -1.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
      <summary>Restituisce un numero complesso specificato elevato a una potenza specificata da un numero a virgola mobile a precisione doppia.</summary>
      <param name="value">Numero complesso da elevare a una potenza.</param>
      <param name="power">Numero a virgola mobile a precisione doppia che specifica una potenza.</param>
      <returns>Numero complesso <paramref name="value" /> elevato alla potenza <paramref name="power" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Restituisce un numero complesso specificato elevato a una potenza specificata da un numero complesso.</summary>
      <param name="value">Numero complesso da elevare a una potenza.</param>
      <param name="power">Numero complesso che specifica una potenza.</param>
      <returns>Numero complesso <paramref name="value" /> elevato alla potenza <paramref name="power" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
      <summary>Restituisce il reciproco moltiplicativo di un numero complesso.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Reciproco di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
      <summary>Restituisce il seno del numero complesso specificato.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Seno di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
      <summary>Restituisce il seno iperbolico del numero complesso specificato.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Seno iperbolico di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
      <summary>Restituisce la radice quadrata del numero complesso specificato.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Radice quadrata di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Double,System.Numerics.Complex)">
      <summary>Sottrae un numero complesso da un numero reale a precisione doppia e restituisce il risultato.</summary>
      <param name="left">Valore reale a precisione doppia da cui sottrarre (minuendo).</param>
      <param name="right">Valore complesso da sottrarre (sottraendo).</param>
      <returns>Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Double)">
      <summary>Sottrae un numero reale a precisione doppia da un numero complesso e restituisce il risultato.</summary>
      <param name="left">Valore complesso da cui sottrarre (minuendo).</param>
      <param name="right">Valore reale a precisione doppia da sottrarre (sottraendo).</param>
      <returns>Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" /> espresso come numero complesso.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Sottrae un numero complesso da un altro e restituisce il risultato.</summary>
      <param name="left">Valore da cui sottrarre (minuendo).</param>
      <param name="right">Valore da sottrarre (sottraendo).</param>
      <returns>Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
      <summary>Restituisce la tangente del numero complesso specificato.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Tangente di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
      <summary>Restituisce la tangente iperbolica del numero complesso specificato.</summary>
      <param name="value">Numero complesso.</param>
      <returns>Tangente iperbolica di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString">
      <summary>Converte il valore del numero complesso corrente nella relativa rappresentazione di stringa equivalente in formato cartesiano.</summary>
      <returns>Rappresentazione di stringa dell'istanza corrente in formato cartesiano.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
      <summary>Converte il valore del numero complesso corrente nella relativa rappresentazione di stringa equivalente in formato cartesiano usando le informazioni di formattazione relative alle impostazioni cultura specificate.</summary>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa dell'istanza corrente in formato cartesiano, come specificato da <paramref name="provider" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.String)">
      <summary>Converte il valore del numero complesso corrente nella relativa rappresentazione di stringa equivalente in formato cartesiano usando il formato specificato per le parti reale e immaginaria.</summary>
      <param name="format">Stringa di formato numerico standard o personalizzato.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è una stringa di formato valida.</exception>
      <returns>Rappresentazione di stringa dell'istanza corrente in formato cartesiano.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
      <summary>Converte il valore del numero complesso corrente nella relativa rappresentazione di stringa equivalente in formato cartesiano usando il formato specificato e le informazioni sul formato relative alle impostazioni cultura per le parti reale e immaginaria.</summary>
      <param name="format">Stringa di formato numerico standard o personalizzato.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è una stringa di formato valida.</exception>
      <returns>Rappresentazione di stringa dell'istanza corrente in formato cartesiano, come specificato da <paramref name="format" /> e da <paramref name="provider" />.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Imaginary">
      <summary>Ottiene il componente immaginario dell'oggetto <see cref="T:System.Numerics.Complex" /> corrente.</summary>
      <returns>Componente immaginario di un numero complesso.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Magnitude">
      <summary>Ottiene la grandezza (o valore assoluto) di un numero complesso.</summary>
      <returns>Grandezza dell'istanza corrente.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Phase">
      <summary>Ottiene la fase di un numero complesso.</summary>
      <returns>Fase di un numero complesso, in radianti.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Real">
      <summary>Ottiene il componente reale dell'oggetto <see cref="T:System.Numerics.Complex" /> corrente.</summary>
      <returns>Componente reale di un numero complesso.</returns>
    </member>
  </members>
</doc>