<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Json</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DateTimeFormat">
      <summary>Specifica le opzioni di formato di data e ora.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.DateTimeFormat" /> utilizzando la stringa del formato.</summary>
      <param name="formatString">Stringa di formato.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.DateTimeFormat" /> utilizzando la stringa e il provider del formato.</summary>
      <param name="formatString">Stringa di formato.</param>
      <param name="formatProvider">Provider di formato.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.DateTimeStyles">
      <summary>Ottiene o imposta le opzioni di formattazione per la personalizzazione della modalità di analisi dell'ora e il giorno.</summary>
      <returns>Opzioni di formattazione per la personalizzazione della modalità di analisi dell'ora e il giorno.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatProvider">
      <summary>Ottiene un oggetto che controlla la formattazione.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatString">
      <summary>Ottiene le stringhe di formato per controllare la formattazione prodotta quando una data o un'ora è rappresentata come stringa.</summary>
      <returns>Le stringhe di formato per controllare la formattazione prodotta quando una data o un'ora è rappresentata come stringa.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EmitTypeInformation">
      <summary>Specifica la frequenza di generazione delle informazioni sul tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Always">
      <summary>Generare sempre informazioni sul tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.AsNeeded">
      <summary>In base alle necessità, genera informazioni sul tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Never">
      <summary>Mai generare informazioni sul tipo.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary>Serializza gli oggetti in JSON (JavaScript Object Notation) e deserializza i dati JSON in oggetti. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> per serializzare o deserializzare un oggetto del tipo specificato.</summary>
      <param name="type">Tipo delle istanze serializzato o deserializzato.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> per serializzare o deserializzare un oggetto del tipo specificato, con una raccolta di tipi noti che possono essere presenti nell'oggetto grafico.</summary>
      <param name="type">Tipo delle istanze serializzate o deserializzate.</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Type" /> contenente i tipi che possono essere presenti nell'oggetto grafico.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> per serializzare o deserializzare un oggetto del tipo e delle impostazioni del serializzatore specificati.</summary>
      <param name="type">Tipo delle istanze serializzato o deserializzato.</param>
      <param name="settings">Impostazioni del serializzatore JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> per serializzare o deserializzare un oggetto di un tipo specificato utilizzando l'elemento radice XML specificato da un parametro.</summary>
      <param name="type">Tipo delle istanze serializzato o deserializzato.</param>
      <param name="rootName">Nome dell'elemento XML che include il contenuto da serializzare o deserializzare.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> per serializzare o deserializzare un oggetto di un tipo specificato utilizzando l'elemento radice XML specificato da un parametro, con una raccolta di tipi noti che possono essere presenti nell'oggetto grafico.</summary>
      <param name="type">Tipo delle istanze serializzato o deserializzato.</param>
      <param name="rootName">Nome dell'elemento XML che include il contenuto da serializzare o deserializzare. Il valore predefinito è "root".</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Type" /> contenente i tipi che possono essere presenti nell'oggetto grafico.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> per serializzare o deserializzare un oggetto di un tipo specificato utilizzando l'elemento radice XML specificato da un parametro di tipo <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type">Tipo delle istanze serializzato o deserializzato.</param>
      <param name="rootName">Classe <see cref="T:System.Xml.XmlDictionaryString" /> contenente il nome dell'elemento radice del contenuto.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> per serializzare o deserializzare un oggetto di un tipo specificato utilizzando l'elemento radice XML specificato da un parametro di tipo <see cref="T:System.Xml.XmlDictionaryString" />, con una raccolta di tipi noti che possono essere presenti nell'oggetto grafico.</summary>
      <param name="type">Tipo delle istanze serializzato o deserializzato.</param>
      <param name="rootName">Classe <see cref="T:System.Xml.XmlDictionaryString" /> contenente il nome dell'elemento radice del contenuto.</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Type" /> contenente i tipi che possono essere presenti nell'oggetto grafico.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Ottiene un valore che specifica se la classe <see cref="T:System.Xml.XmlDictionaryReader" /> è posizionata su un elemento XML che rappresenta un oggetto da cui il serializzatore può eseguire la deserializzazione.</summary>
      <param name="reader">Classe <see cref="T:System.Xml.XmlDictionaryReader" /> utilizzata per leggere il flusso XML mappato da JSON.</param>
      <returns>
        <see langword="true" /> se il lettore è posizionato correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Determina se la classe <see cref="T:System.Xml.XmlReader" /> è posizionata su un oggetto che può essere deserializzato.</summary>
      <param name="reader">Classe <see cref="T:System.Xml.XmlReader" /> utilizzata per leggere il flusso XML.</param>
      <returns>
        <see langword="true" /> se il lettore è posizionato correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary>Legge un flusso di documenti in formato JSON (JavaScript Object Notation) e restituisce l'oggetto deserializzato.</summary>
      <param name="stream">Classe <see cref="T:System.IO.Stream" /> da leggere.</param>
      <returns>Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>Legge il documento XML mappato da JSON (JavaScript Object Notation) con una classe <see cref="T:System.Xml.XmlDictionaryReader" /> e restituisce l'oggetto deserializzato.</summary>
      <param name="reader">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> utilizzato per leggere il documento XML mappato da JSON.</param>
      <returns>Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Legge il documento XML mappato da JSON con una classe <see cref="T:System.Xml.XmlDictionaryReader" /> e restituisce l'oggetto deserializzato. Consente inoltre di specificare se il serializzatore deve verificare il corretto posizionamento su un elemento appropriato prima di eseguire il tentativo di serializzazione.</summary>
      <param name="reader">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> utilizzato per leggere il documento XML mappato da JSON.</param>
      <param name="verifyObjectName">
        <see langword="true" /> per verificare se il nome e lo spazio dei nomi dell'elemento XML di inclusione corrispondono al nome e allo spazio dei nomi previsti; in caso contrario, <see langword="false" /> per ignorare la verifica. Il valore predefinito è <see langword="true" />.</param>
      <returns>Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Legge il documento XML mappato da JSON (JavaScript Object Notation) con una classe <see cref="T:System.Xml.XmlReader" /> e restituisce l'oggetto deserializzato.</summary>
      <param name="reader">Oggetto <see cref="T:System.Xml.XmlReader" /> utilizzato per leggere il documento XML mappato da JSON.</param>
      <returns>Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Legge un documento XML mappato da JSON con una classe <see cref="T:System.Xml.XmlReader" /> e restituisce l'oggetto deserializzato. Consente inoltre di specificare se il serializzatore deve verificare il corretto posizionamento su un elemento appropriato prima di eseguire il tentativo di serializzazione.</summary>
      <param name="reader">Oggetto <see cref="T:System.Xml.XmlReader" /> utilizzato per leggere il documento XML mappato da JSON.</param>
      <param name="verifyObjectName">
        <see langword="true" /> per verificare se il nome e lo spazio dei nomi dell'elemento XML di inclusione corrispondono al nome e allo spazio dei nomi previsto; in caso contrario, <see langword="false" /> per ignorare la verifica. Il valore predefinito è <see langword="true" />.</param>
      <returns>Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Scrive l'elemento XML di chiusura in un documento XML, utilizzando una classe <see cref="T:System.Xml.XmlDictionaryWriter" />, che può essere mappato a JSON (JavaScript Object Notation).</summary>
      <param name="writer">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere il documento XML da mappare a JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Scrive l'elemento XML di chiusura in un documento XML, utilizzando una classe <see cref="T:System.Xml.XmlWriter" />, che può essere mappato a JSON (JavaScript Object Notation).</summary>
      <param name="writer">Classe <see cref="T:System.Xml.XmlWriter" /> utilizzata per scrivere il documento XML mappato a JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>Serializza un oggetto specificato in dati JSON (JavaScript Object Notation) e scrive il risultato JSON in un flusso.</summary>
      <param name="stream">Classe <see cref="T:System.IO.Stream" /> in cui viene eseguita la scrittura.</param>
      <param name="graph">Oggetto che contiene i dati da scrivere nel flusso.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Si è verificato un problema durante la scrittura dell'istanza.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Serializza un oggetto in XML che può essere mappato a JSON (JavaScript Object Notation). Scrive tutti i dati dell'oggetto, inclusi l'elemento XML di apertura, il contenuto e l'elemento di chiusura, con una classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere il documento o il flusso XML da mappare a JSON.</param>
      <param name="graph">Oggetto che contiene il dati da scrivere.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Si è verificato un problema durante la scrittura dell'istanza.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Serializza un oggetto in XML che può essere mappato a JSON (JavaScript Object Notation). Scrive tutti i dati dell'oggetto, inclusi l'elemento XML di apertura, il contenuto e l'elemento di chiusura, con una classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Classe <see cref="T:System.Xml.XmlWriter" /> utilizzata per scrivere il documento XML da mappare a JSON.</param>
      <param name="graph">Oggetto che contiene il dati da scrivere.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Si è verificato un problema durante la scrittura dell'istanza.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Scrive il contenuto XML che può essere mappato a JSON (JavaScript Object Notation) utilizzando la classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> in cui scrivere.</param>
      <param name="graph">Oggetto da scrivere.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Si è verificato un problema durante la scrittura dell'istanza.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Scrive il contenuto XML che può essere mappato a JSON (JavaScript Object Notation) utilizzando la classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Classe <see cref="T:System.Xml.XmlWriter" /> utilizzata per la scrittura.</param>
      <param name="graph">Oggetto da scrivere.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Si è verificato un problema durante la scrittura dell'istanza.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Scrive l'elemento XML di apertura per la serializzazione di un oggetto in XML che può essere mappato a JSON (JavaScript Object Notation) utilizzando una classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere l'elemento XML di apertura.</param>
      <param name="graph">Oggetto da scrivere.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Scrive l'elemento XML di apertura per la serializzazione di un oggetto in XML che può essere mappato a JSON (JavaScript Object Notation) utilizzando una classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Classe <see cref="T:System.Xml.XmlWriter" /> utilizzata per scrivere l'elemento XML di apertura.</param>
      <param name="graph">Oggetto da scrivere.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
      <summary>Ottiene il formato degli elementi di tipo data e ora in un oggetto grafico.</summary>
      <returns>Il formato degli elementi di tipo data e ora in un oggetto grafico.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
      <summary>Ottiene o imposta le impostazioni del serializzatore JSON del contratto dati per generare informazioni sul tipo.</summary>
      <returns>Le impostazioni del serializzatore del contratto dati JSON per generare informazioni sul tipo.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
      <summary>Ottiene un valore che specifica se i dati sconosciuti vengono ignorati durante la deserializzazione e se l'interfaccia <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> viene ignorata durante la serializzazione.</summary>
      <returns>
        <see langword="true" /> per ignorare i dati sconosciuti e l'interfaccia <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary>Ottiene una raccolta di tipi che possono essere presenti nell'oggetto grafico serializzato utilizzando l'istanza di <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
      <returns>Classe <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> contenente tipi previsti passati come tipi conosciuti al costruttore <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
      <summary>Ottiene il numero massimo di elementi in un oggetto grafico che il serializzatore serializza o deserializza in una chiamata di lettura o scrittura.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di elementi supera il valore massimo.</exception>
      <returns>Numero massimo di elementi da serializzare o deserializzare.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
      <summary>Ottiene o imposta un valore che specifica se serializzare i tipi di sola lettura.</summary>
      <returns>
        <see langword="true" /> per serializzare i tipi di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
      <summary>Ottiene un valore che specifica se usare un formato di dizionario semplice.</summary>
      <returns>
        <see langword="true" /> per utilizzare un formato di dizionario semplice; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings">
      <summary>Specifica le impostazioni per <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat">
      <summary>Ottiene o imposta DateTimeFormat che definisce il formato culturalmente appropriato per la visualizzazione della data e dell'ora.</summary>
      <returns>Valore DateTimeFormat che definisce il formato culturalmente appropriato per la visualizzazione della data e dell'ora.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation">
      <summary>Ottiene o imposta le impostazioni del serializzatore JSON del contratto dati per generare informazioni sul tipo.</summary>
      <returns>Le impostazioni del serializzatore del contratto dati JSON per generare informazioni sul tipo.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.IgnoreExtensionDataObject">
      <summary>Ottiene o imposta un valore che specifica se ignorare i dati forniti da un'estensione della classe, durante la serializzazione o la deserializzazione della classe stessa.</summary>
      <returns>
        <see langword="true" /> per ignorare i dati forniti da un'estensione della classe, durante la serializzazione o la deserializzazione della classe stessa. in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes">
      <summary>Ottiene o imposta una raccolta di tipi che possono essere presenti nel grafico di oggetti serializzato utilizzando l'istanza di DataContractJsonSerializerSettings.</summary>
      <returns>Raccolta dei tipi che possono essere presenti nel grafico di oggetti serializzato utilizzando l'istanza di DataContractJsonSerializerSettings.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph">
      <summary>Ottiene o imposta il numero massimo di elementi nell'oggetto grafico da serializzare o deserializzare.</summary>
      <returns>Numero massimo di elementi di un oggetto grafico da serializzare o deserializzare.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName">
      <summary>Ottiene o imposta il nome radice dell'oggetto selezionato.</summary>
      <returns>Nome radice dell'oggetto selezionato.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes">
      <summary>Ottiene o imposta un valore che specifica se serializzare i tipi di sola lettura.</summary>
      <returns>
        <see langword="true" /> per serializzare i tipi di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat">
      <summary>Ottiene o imposta un valore che specifica se utilizzare un formato di dizionario semplice.</summary>
      <returns>
        <see langword="true" /> per utilizzare un formato di dizionario semplice; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
      <summary>Specifica l'interfaccia per l'inizializzazione di un lettore JSON (JavaScript Object Notation) quando si riutilizzano oggetti per la lettura da un flusso o da un buffer specificato.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinizializza un lettore abilitato JSON (JavaScript Object Notation) per un buffer specificato contenente dati con codifica JSON.</summary>
      <param name="buffer">Matrice del buffer <see cref="T:System.Byte" /> di input da cui eseguire la lettura.</param>
      <param name="offset">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="encoding">Classe <see cref="T:System.Text.Encoding" /> utilizzata dal lettore.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare.</param>
      <param name="onClose">Delegato <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />da chiamare quando il lettore viene chiuso.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinizializza un lettore abilitato JSON (JavaScript Object Notation) per un flusso specificato contenente dati con codifica JSON.</summary>
      <param name="stream">Classe <see cref="T:System.IO.Stream" /> di input da cui eseguire la lettura.</param>
      <param name="encoding">Classe <see cref="T:System.Text.Encoding" /> utilizzata dal lettore.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare.</param>
      <param name="onClose">Delegato da chiamare quando il reader viene chiuso.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
      <summary>Specifica l'interfaccia per l'inizializzazione di un writer JSON (JavaScript Object Notation) quando si riutilizzano oggetti per la scrittura in un flusso di output specificato.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Inizializza (o reinizializza) un writer JSON (JavaScript Object Notation) per un flusso di output specificato con la codifica dei caratteri specificata.</summary>
      <param name="stream">Oggetto <see cref="T:System.IO.Stream" /> di output in cui il writer esegue la scrittura.</param>
      <param name="encoding">Oggetto <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri del flusso di output.</param>
      <param name="ownsStream">Se <see langword="true" />, al termine il flusso di output viene chiuso dal writer. In caso contrario, <see langword="false" />.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary>Produce istanze di <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati codificati con JSON (JavaScript Object Notation) da un flusso o da un buffer e mapparli a un InfoSet XML, nonché istanze di <see cref="T:System.Xml.XmlDictionaryWriter" /> in grado di mappare un InfoSet XML a JSON e scrivere dati con codifica JSON in un flusso.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare buffer codificati con JSON (JavaScript Object Notation) e con dimensioni, offset e codifica dei caratteri specificati a un InfoSet XML.</summary>
      <param name="buffer">Matrice del buffer <see cref="T:System.Byte" /> di input da cui eseguire la lettura.</param>
      <param name="offset">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="encoding">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal lettore. Se come valore è specificato <see langword="null" />, il lettore tenta di rilevare automaticamente la codifica.</param>
      <param name="quotas">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</param>
      <param name="onClose">Delegato <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />da chiamare quando il lettore viene chiuso. Il valore predefinito è <see langword="null" />.</param>
      <returns>Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare buffer codificati con JSON (JavaScript Object Notation) e con dimensioni e offset specificati a un InfoSet XML.</summary>
      <param name="buffer">Matrice del buffer <see cref="T:System.Byte" /> di input da cui eseguire la lettura.</param>
      <param name="offset">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="quotas">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</param>
      <returns>Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare buffer codificati con JSON (JavaScript Object Notation) a un InfoSet XML.</summary>
      <param name="buffer">Matrice del buffer <see cref="T:System.Byte" /> di input da cui eseguire la lettura.</param>
      <param name="quotas">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</param>
      <returns>Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di elaborare dati JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare flussi codificati con JSON (JavaScript Object Notation) e con dimensioni e offset specificati a un InfoSet XML.</summary>
      <param name="stream">Classe <see cref="T:System.IO.Stream" /> di input da cui eseguire la lettura.</param>
      <param name="encoding">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal lettore. Se come valore è specificato <see langword="null" />, il lettore tenta di rilevare automaticamente la codifica.</param>
      <param name="quotas">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</param>
      <param name="onClose">Delegato <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />da chiamare quando il lettore viene chiuso.</param>
      <returns>Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare flussi codificati con JSON (JavaScript Object Notation) a un InfoSet XML.</summary>
      <param name="stream">Classe <see cref="T:System.IO.Stream" /> di input da cui eseguire la lettura.</param>
      <param name="quotas">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</param>
      <returns>Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary>Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso.</summary>
      <param name="stream">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</param>
      <returns>Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso con una codifica dei caratteri specificata.</summary>
      <param name="stream">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</param>
      <param name="encoding">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal writer. La codifica predefinita è UTF-8.</param>
      <returns>Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso con una codifica dei caratteri specificata.</summary>
      <param name="stream">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</param>
      <param name="encoding">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal writer. La codifica predefinita è UTF-8.</param>
      <param name="ownsStream">Se <see langword="true" />, al termine il flusso di output viene chiuso dal writer. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</param>
      <returns>Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso con un carattere specificato.</summary>
      <param name="stream">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</param>
      <param name="encoding">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal writer. La codifica predefinita è UTF-8.</param>
      <param name="ownsStream">Se <see langword="true" />, al termine il flusso di output viene chiuso dal writer. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</param>
      <param name="indent">Se <see langword="true" />, nell'output viene utilizzato il formato multiriga, impostando un adeguato rientro per ogni livello; in caso contrario, <see langword="false" />.</param>
      <returns>Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)">
      <summary>Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso con un carattere specificato.</summary>
      <param name="stream">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</param>
      <param name="encoding">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal writer. La codifica predefinita è UTF-8.</param>
      <param name="ownsStream">Se <see langword="true" />, al termine il flusso di output viene chiuso dal writer. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</param>
      <param name="indent">Se <see langword="true" />, nell'output viene utilizzato il formato multiriga, impostando un adeguato rientro per ogni livello; in caso contrario, <see langword="false" />.</param>
      <param name="indentChars">Stringa utilizzata per impostare un rientro per ogni livello.</param>
      <returns>Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</returns>
    </member>
  </members>
</doc>