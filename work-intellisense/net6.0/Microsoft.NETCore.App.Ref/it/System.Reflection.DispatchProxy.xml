<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Reflection.DispatchProxy</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.DispatchProxy">
      <summary>Specifica un meccanismo per creare un'istanza di oggetti proxy e gestirne l'invio del metodo.</summary>
    </member>
    <member name="M:System.Reflection.DispatchProxy.#ctor" />
    <member name="M:System.Reflection.DispatchProxy.Create``2">
      <summary>Crea un'istanza dell'oggetto che deriva dalla classe <typeparamref name="TProxy" /> e implementa l'interfaccia <typeparamref name="T" />.</summary>
      <typeparam name="T">Interfaccia che deve essere implementata dal proxy.</typeparam>
      <typeparam name="TProxy">Classe di base da utilizzare per la classe proxy.</typeparam>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="T" /> è una classe oppure <typeparamref name="TProxy" /> è sealed o non ha un costruttore senza parametri.</exception>
      <returns>Istanza dell'oggetto che implementa <typeparamref name="T" />.</returns>
    </member>
    <member name="M:System.Reflection.DispatchProxy.Invoke(System.Reflection.MethodInfo,System.Object[])">
      <summary>Ogni volta che viene chiamato un metodo nel tipo di proxy generato, questo metodo viene richiamato per l'invio del controllo.</summary>
      <param name="targetMethod">Metodo richiamato dal chiamante.</param>
      <param name="args">Argomenti che il chiamante ha passato al metodo.</param>
      <returns>Oggetto da restituire al chiamante, o <see langword="null" /> per i metodi void.</returns>
    </member>
  </members>
</doc>