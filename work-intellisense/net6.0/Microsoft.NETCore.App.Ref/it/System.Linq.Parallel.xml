<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Linq.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Linq.OrderedParallelQuery`1">
      <summary vsli:raw="Represents a sorted, parallel sequence.">Rappresenta una sequenza parallela e ordinata.</summary>
      <typeparam name="TSource" vsli:raw="The type of elements in the source collection.">Tipo degli elementi nella raccolta di origine.</typeparam>
    </member>
    <member name="M:System.Linq.OrderedParallelQuery`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">Restituisce un enumeratore che scorre la sequenza.</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">Enumeratore che scorre la sequenza.</returns>
    </member>
    <member name="T:System.Linq.ParallelEnumerable">
      <summary vsli:raw="Provides a set of methods for querying objects that implement ParallelQuery{TSource}. This is the parallel equivalent of &lt;see cref=&quot;T:System.Linq.Enumerable&quot; /&gt;.">Fornisce un set di metodi per l'esecuzione di query su oggetti che implementano ParallelQuery{TSource}. È l'equivalente parallelo di <see cref="T:System.Linq.Enumerable" />.</summary>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence.">Applica in parallelo una funzione accumulatore a una sequenza.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Una sequenza su cui aggregare.</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">Funzione accumulatore da richiamare per ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="func" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The final accumulator value.">Valore finale dell'accumulatore.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. The specified seed value is used as the initial accumulator value.">Applica in parallelo una funzione accumulatore a una sequenza. Il valore di inizializzazione specificato viene usato come valore iniziale dell'accumulatore.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Una sequenza su cui aggregare.</param>
      <param name="seed" vsli:raw="The initial accumulator value.">Valore iniziale dell'accumulatore.</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">Funzione accumulatore da richiamare per ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">Tipo del valore dell'accumulatore.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="func" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The final accumulator value.">Valore finale dell'accumulatore.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. This overload is not available in the sequential implementation.">Applica in parallelo una funzione accumulatore a una sequenza. Questo overload non è disponibile nell'implementazione sequenziale.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Una sequenza su cui aggregare.</param>
      <param name="seed" vsli:raw="The initial accumulator value.">Valore iniziale dell'accumulatore.</param>
      <param name="updateAccumulatorFunc" vsli:raw="An accumulator function to be invoked on each element in a partition.">Funzione accumulatore da richiamare su ogni elemento in una partizione.</param>
      <param name="combineAccumulatorsFunc" vsli:raw="An accumulator function to be invoked on the yielded accumulator result from each partition.">Funzione accumulatore da richiamare sul risultato dell'accumulatore prodotto da ogni partizione.</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">Una funzione per trasformare il valore finale dell'accumulatore nel valore risultante.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">Tipo del valore dell'accumulatore.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">Il tipo del valore risultante.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;updateAccumulatorFunc&quot; /&gt; or &lt;paramref name=&quot;combineAccumulatorsFunc&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="updateAccumulatorFunc" /> o <paramref name="combineAccumulatorsFunc" /> o <paramref name="resultSelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The transformed final accumulator value.">Il valore finale trasformato dell'accumulatore.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.">Applica in parallelo una funzione accumulatore a una sequenza. Il valore di inizializzazione specificato viene usato come valore iniziale dell'accumulatore e la funzione specificata viene usata per selezionare il valore risultante.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Una sequenza su cui aggregare.</param>
      <param name="seed" vsli:raw="The initial accumulator value.">Valore iniziale dell'accumulatore.</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">Funzione accumulatore da richiamare per ogni elemento.</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">Una funzione per trasformare il valore finale dell'accumulatore nel valore risultante.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">Tipo del valore dell'accumulatore.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">Il tipo del valore risultante.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="func" /> o <paramref name="resultSelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The transformed final accumulator value.">Il valore finale trasformato dell'accumulatore.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. This overload is not available in the sequential implementation.">Applica in parallelo una funzione accumulatore a una sequenza. Questo overload non è disponibile nell'implementazione sequenziale.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Una sequenza su cui aggregare.</param>
      <param name="seedFactory" vsli:raw="A function that returns the initial accumulator value.">Funzione che restituisce il valore iniziale dell'accumulatore.</param>
      <param name="updateAccumulatorFunc" vsli:raw="An accumulator function to be invoked on each element in a partition.">Funzione accumulatore da richiamare su ogni elemento in una partizione.</param>
      <param name="combineAccumulatorsFunc" vsli:raw="An accumulator function to be invoked on the yielded accumulator result from each partition.">Funzione accumulatore da richiamare sul risultato dell'accumulatore prodotto da ogni partizione.</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">Una funzione per trasformare il valore finale dell'accumulatore nel valore risultante.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">Tipo del valore dell'accumulatore.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">Il tipo del valore risultante.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;seedFactory&quot; /&gt; or &lt;paramref name=&quot;updateAccumulatorFunc&quot; /&gt; or &lt;paramref name=&quot;combineAccumulatorsFunc&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="seedFactory" /> o <paramref name="updateAccumulatorFunc" /> o <paramref name="combineAccumulatorsFunc" /> o <paramref name="resultSelector" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The transformed final accumulator value.">Il valore finale trasformato dell'accumulatore.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Determines in parallel whether all elements of a sequence satisfy a condition.">Determina in parallelo se tutti gli elementi di una sequenza soddisfano una condizione.</summary>
      <param name="source" vsli:raw="A sequence whose elements to apply the predicate to.">Sequenza ai cui elementi applicare il predicato.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Funzione per testare ogni elemento rispetto a una condizione.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se ogni elemento della sequenza di origine supera il test per il predicato specificato o se la sequenza è vuota; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Determines whether a parallel sequence contains any elements.">Determina se una sequenza parallela contiene elementi.</summary>
      <param name="source" vsli:raw="The sequence to check for emptiness.">Sequenza di cui verificare il contenuto.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains any elements; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la sequenza di origine contiene elementi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Determines in parallel whether any element of a sequence satisfies a condition.">Determina in parallelo se un elemento di una sequenza soddisfa una condizione.</summary>
      <param name="source" vsli:raw="A sequence to whose elements the predicate will be applied.">Sequenza ai cui elementi sarà applicato il predicato.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Funzione per testare ogni elemento rispetto a una condizione.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any elements in the source sequence pass the test in the specified predicate; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli elementi nella sequenza di origine superano il test per il predicato specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; into an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to force sequential evaluation of the query.">Converte un oggetto <see cref="T:System.Linq.ParallelQuery`1" /> in <see cref="T:System.Collections.Generic.IEnumerable`1" /> per forzare la valutazione sequenziale della query.</summary>
      <param name="source" vsli:raw="The sequence to cast as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">Sequenza di cui eseguire il cast come oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <returns vsli:raw="The input sequence typed as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">Sequenza di input digitata come oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
      <summary vsli:raw="Enables treatment of a data source as if it were ordered, overriding the default of unordered. AsOrdered may only be invoked on non-generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.">Consente di trattare un'origine dati come se fosse ordinata, eseguendo l'override dell'impostazione predefinita non ordinata. AsOrdered può essere richiamato solo in sequenze non generiche restituite da AsParallel, ParallelEnumerable.Range e ParallelEnumerable.Repeat.</summary>
      <param name="source" vsli:raw="The input sequence.">Sequenza di input.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="thrown if &lt;paramref name=&quot;source&quot; /&gt; contains no elements&#xA;&#xA; -or-&#xA;&#xA; if &lt;see langword=&quot;AsOrdered&quot; /&gt; is called midway through a query. It is allowed to be called immediately after &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)&quot; /&gt;, &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)&quot; /&gt;, or &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;source&quot; /&gt; is not one of &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)&quot; /&gt;, &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)&quot; /&gt;, or &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)&quot; /&gt;.">generata se <paramref name="source" /> non contiene elementi 
-oppure- 
se <see langword="AsOrdered" /> viene chiamato a metà percorso tramite una query. Può essere chiamato immediatamente dopo <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> o <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" />.

-oppure-

<paramref name="source" /> non è uno di <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> o <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" />.</exception>
      <returns vsli:raw="The source sequence which will maintain the original ordering in the subsequent query operators.">Sequenza di origine che manterrà l'ordine originale nei successivi operatori di query.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Enables treatment of a data source as if it were ordered, overriding the default of unordered. AsOrdered may only be invoked on generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.">Consente di trattare un'origine dati come se fosse ordinata, eseguendo l'override dell'impostazione predefinita non ordinata. AsOrdered può essere richiamato solo in sequenze generiche restituite da AsParallel, ParallelEnumerable.Range e ParallelEnumerable.Repeat.</summary>
      <param name="source" vsli:raw="The input sequence.">Sequenza di input.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;source&quot; /&gt; is not one of AsParallel, ParallelEnumerable.Range, or ParallelEnumerable.Repeat.">Generata se <paramref name="source" /> non contiene elementi 
-oppure- 
se <paramref name="source" /> non è AsParallel, ParallelEnumerable.Range o ParallelEnumerable.Repeat.</exception>
      <returns vsli:raw="The source sequence which will maintain the original ordering in the subsequent query operators.">Sequenza di origine che manterrà l'ordine originale nei successivi operatori di query.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
      <summary vsli:raw="Enables parallelization of a query.">Consente la parallelizzazione di una query.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.Linq.ParallelQuery&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> da convertire in <see cref="T:System.Linq.ParallelQuery" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <returns vsli:raw="The source as a ParallelQuery to bind to ParallelEnumerable extension methods.">Origine come ParallelQuery da associare ai metodi di estensione ParallelEnumerable.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
      <summary vsli:raw="Enables parallelization of a query, as sourced by a custom partitioner that is responsible for splitting the input sequence into partitions.">Consente la parallelizzazione di una query, come viene originata da un partitioner che è responsabile della suddivisione della sequenza di input in partizioni.</summary>
      <param name="source" vsli:raw="A partitioner over the input sequence.">Partitioner sulla sequenza di input.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <returns vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; as a ParallelQuery to bind to ParallelEnumerable extension methods.">Elemento <paramref name="source" /> come ParallelQuery da associare ai metodi di estensione ParallelEnumerable.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Enables parallelization of a query.">Consente la parallelizzazione di una query.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> da convertire in <see cref="T:System.Linq.ParallelQuery`1" />.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <returns vsli:raw="The source as a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; to bind to ParallelEnumerable extension methods.">Origine come <see cref="T:System.Linq.ParallelQuery`1" /> da associare ai metodi di estensione ParallelEnumerable.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; into an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to force sequential evaluation of the query.">Converte un oggetto <see cref="T:System.Linq.ParallelQuery`1" /> in <see cref="T:System.Collections.Generic.IEnumerable`1" /> per forzare la valutazione sequenziale della query.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; to convert to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">Oggetto <see cref="T:System.Linq.ParallelQuery`1" /> da convertire in <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <returns vsli:raw="The source as an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to bind to sequential extension methods.">Origine come <see cref="T:System.Collections.Generic.IEnumerable`1" /> da associare ai metodi di estensione sequenziale.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Allows an intermediate query to be treated as if no ordering is implied among the elements.">Consente di trattare una query intermedia come se non vi fosse alcun ordinamento implicito tra gli elementi.</summary>
      <param name="source" vsli:raw="The input sequence.">Sequenza di input.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <returns vsli:raw="The source sequence with arbitrary order.">Sequenza di origine con ordine arbitrario.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcola in parallelo la media di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcola in parallelo la media di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcola in parallelo la media di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma o il conteggio degli elementi della sequenza è superiore a <see cref="F:System.Int32.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcola in parallelo la media di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma o il conteggio degli elementi della sequenza è superiore a <see cref="F:System.Int32.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcola in parallelo la media di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcola in parallelo la media di una sequenza di valori.</summary>
      <param name="source" vsli:raw="The source sequence.">Sequenza di origine.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> è <see langword="null" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcola in parallelo la media di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma o il conteggio degli elementi della sequenza è superiore a <see cref="F:System.Int32.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcola in parallelo la media di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma o il conteggio degli elementi della sequenza è superiore a <see cref="F:System.Int32.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcola in parallelo la media di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcola in parallelo la media di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">Generata come eccezione interna in <see cref="T:System.AggregateException" />. La funzione <paramref name="selector" /> restituisce un valore maggiore di MaxValue per il tipo di elemento.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">Generata come eccezione interna in <see cref="T:System.AggregateException" />. La funzione <paramref name="selector" /> restituisce un valore maggiore di MaxValue per il tipo di elemento.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma o il conteggio degli elementi della sequenza è superiore a <see cref="F:System.Int32.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">Generata come eccezione interna in <see cref="T:System.AggregateException" />. La funzione <paramref name="selector" /> restituisce un valore maggiore di MaxValue per il tipo di elemento.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma o il conteggio degli elementi della sequenza è superiore a <see cref="F:System.Int32.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">Generata come eccezione interna in <see cref="T:System.AggregateException" />. La funzione <paramref name="selector" /> restituisce un valore maggiore di MaxValue per il tipo di elemento.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">Generata come eccezione interna in <see cref="T:System.AggregateException" />. La funzione <paramref name="selector" /> restituisce un valore maggiore di MaxValue per il tipo di elemento.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">Generata come eccezione interna in <see cref="T:System.AggregateException" />. La funzione <paramref name="selector" /> restituisce un valore maggiore di MaxValue per il tipo di elemento.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma o il conteggio degli elementi della sequenza è superiore a <see cref="F:System.Int32.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">Generata come eccezione interna in <see cref="T:System.AggregateException" />. La funzione <paramref name="selector" /> restituisce un valore maggiore di MaxValue per il tipo di elemento.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma o il conteggio degli elementi della sequenza è superiore a <see cref="F:System.Int64.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">Generata come eccezione interna in <see cref="T:System.AggregateException" />. La funzione <paramref name="selector" /> restituisce un valore maggiore di MaxValue per il tipo di elemento.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">Generata come eccezione interna in <see cref="T:System.AggregateException" />. La funzione <paramref name="selector" /> restituisce un valore maggiore di MaxValue per il tipo di elemento.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la media di una sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Una sequenza di valori usata per calcolare una media.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">Generata come eccezione interna in <see cref="T:System.AggregateException" />. La funzione <paramref name="selector" /> restituisce un valore maggiore di MaxValue per il tipo di elemento.</exception>
      <returns vsli:raw="The average of the sequence of values.">Media della sequenza dei valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
      <summary vsli:raw="Converts the elements of a ParallelQuery to the specified type.">Converte gli elementi di un oggetto ParallelQuery nel tipo specificato.</summary>
      <param name="source" vsli:raw="The sequence that contains the elements to be converted.">Sequenza che contiene gli elementi da convertire.</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of &lt;paramref name=&quot;source&quot; /&gt; to.">Tipo in cui convertire gli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source sequence could not be converted to &lt;paramref name=&quot;TResult&quot; /&gt;.">Il tipo di sequenza di origine potrebbe non essere convertito a <paramref name="TResult" />.</exception>
      <returns vsli:raw="A sequence that contains each element of the source sequence converted to the specified type.">Sequenza che contiene ogni elemento della sequenza di origine convertito nel tipo specificato.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Concat overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Questo overload di Concat non dovrebbe mai essere chiamato. Questo metodo è contrassegnato come obsoleto e genera sempre <see cref="T:System.NotSupportedException" /> quando viene chiamato.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="second" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Eccezione che si verifica quando viene chiamato questo metodo.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Questo overload genera sempre <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Concatenates two parallel sequences.">Concatena due sequenze parallele.</summary>
      <param name="first" vsli:raw="The first sequence to concatenate.">Prima sequenza da concatenare.</param>
      <param name="second" vsli:raw="The sequence to concatenate to the first sequence.">Sequenza da concatenare alla prima sequenza.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Tipo degli elementi delle sequenze di input.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> o <paramref name="second" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <returns vsli:raw="A sequence that contains the concatenated elements of the two input sequences.">Sequenza che contiene gli elementi concatenati delle due sequenze di input.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
      <summary vsli:raw="Determines in parallel whether a sequence contains a specified element by using the default equality comparer.">Determina in parallelo se una sequenza contiene un elemento specificato usando l'operatore di confronto di uguaglianza predefinito.</summary>
      <param name="source" vsli:raw="A sequence in which to locate a value.">Sequenza in cui individuare un valore.</param>
      <param name="value" vsli:raw="The value to locate in the sequence.">Valore da individuare nella sequenza .</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la sequenza di origine contiene un elemento con il valore specificato; altrimenti, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines in parallel whether a sequence contains a specified element by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">Determina in parallelo se una sequenza contiene un elemento specificato usando un oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> specificato.</summary>
      <param name="source" vsli:raw="A sequence in which to locate a value.">Sequenza in cui individuare un valore.</param>
      <param name="value" vsli:raw="The value to locate in the sequence.">Valore da individuare nella sequenza .</param>
      <param name="comparer" vsli:raw="An equality comparer to compare values.">Operatore di confronto uguaglianze per confrontare valori.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la sequenza di origine contiene un elemento con il valore specificato; altrimenti, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the number of elements in a parallel sequence.">Restituisce il numero di elementi in una sequenza parallela.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">Sequenza che contiene gli elementi da contare.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. (In this case the InnerException is &lt;see cref=&quot;T:System.OverflowException&quot; /&gt;) -or- One or more exceptions occurred during the evaluation of the query.">Il numero di elementi nel database di origine è maggiore di <see cref="F:System.Int32.MaxValue" />. (In questo caso l'InnerException è <see cref="T:System.OverflowException" />) oppure si sono verificate una o più eccezioni durante la valutazione della query.</exception>
      <returns vsli:raw="The number of elements in the input sequence.">Numero di elementi nella sequenza di input.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns a number that represents how many elements in the specified parallel sequence satisfy a condition.">Restituisce un valore che rappresenta il numero di elementi nella sequenza parallela specificata che soddisfano una condizione.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">Sequenza che contiene gli elementi da contare.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Funzione per testare ogni elemento rispetto a una condizione.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. (In this case the InnerException is &lt;see cref=&quot;T:System.OverflowException&quot; /&gt;) -or- One or more exceptions occurred during the evaluation of the query.">Il numero di elementi nel database di origine è maggiore di <see cref="F:System.Int32.MaxValue" />. (In questo caso l'InnerException è <see cref="T:System.OverflowException" />) oppure si sono verificate una o più eccezioni durante la valutazione della query.</exception>
      <returns vsli:raw="A number that represents how many elements in the sequence satisfy the condition in the predicate function.">Numero che rappresenta quanti elementi nella sequenza specificata soddisfano la condizione nella funzione predicato.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the elements of the specified parallel sequence or the type parameter's default value in a singleton collection if the sequence is empty.">Restituisce gli elementi della sequenza parallela specificata o il valore predefinito del parametro di tipo in una raccolta singleton se la sequenza è vuota.</summary>
      <param name="source" vsli:raw="The sequence to return a default value for if it is empty.">Sequenza per cui restituire un valore predefinito se è vuota.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">Sequenza che contiene default(TSource) se <paramref name="source" /> è vuoto; in caso contrario, <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
      <summary vsli:raw="Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.">Restituisce gli elementi della sequenza parallela specificata o il valore specificato in una raccolta singleton se la sequenza è vuota.</summary>
      <param name="source" vsli:raw="The sequence to return the specified value for if it is empty.">Sequenza per cui restituire il valore specificato se è vuota.</param>
      <param name="defaultValue" vsli:raw="The value to return if the sequence is empty.">Valore da restituire se la sequenza è vuota.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains defaultValue if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">Sequenza che contiene defaultValue se <paramref name="source" /> è vuoto; in caso contrario, <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.">Restituisce elementi distinti da una sequenza parallela usando l'operatore di confronto di uguaglianza predefinito per confrontare i valori.</summary>
      <param name="source" vsli:raw="The sequence to remove duplicate elements from.">Sequenza da cui rimuovere elementi duplicati.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains distinct elements from the source sequence.">Sequenza che contiene elementi distinti dalla sequenza di origine.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Returns distinct elements from a parallel sequence by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">Restituisce elementi distinti da una sequenza parallela usando un oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> specificato per confrontare valori.</summary>
      <param name="source" vsli:raw="The sequence to remove duplicate elements from.">Sequenza da cui rimuovere elementi duplicati.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare i valori.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains distinct elements from the source sequence.">Sequenza che contiene elementi distinti dalla sequenza di origine.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a parallel sequence.">Restituisce l'elemento in corrispondenza dell'indice specificato in una sequenza parallela.</summary>
      <param name="source" vsli:raw="A sequence to return an element from.">Sequenza dalla quale viene restituito un elemento.</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">Indice in base zero dell'elemento da recuperare.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than or equal to the number of elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="index" /> è minore di 0 oppure maggiore o uguale al numero di elementi di <paramref name="source" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The element at the specified position in the source sequence.">L'elemento alla posizione specificata nella sequenza di origine.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a parallel sequence or a default value if the index is out of range.">Restituisce l'elemento in corrispondenza di un indice specificato in una sequenza parallela o un valore predefinito se l'indice non è incluso nell'intervallo.</summary>
      <param name="source" vsli:raw="A sequence to return an element from.">Sequenza dalla quale viene restituito un elemento.</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">Indice in base zero dell'elemento da recuperare.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="default(TSource) if the index is outside the bounds of the source sequence; otherwise, the element at the specified position in the source sequence.">default(TSource) se l'indice è esterno ai limiti della sequenza di origine; in caso contrario, l'elemento in corrispondenza della posizione specificata nella sequenza di origine.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Empty``1">
      <summary vsli:raw="Returns an empty ParallelQuery{TResult} that has the specified type argument.">Restituisce un oggetto ParallelQuery{TResult} vuoto con l'argomento di tipo specificato.</summary>
      <typeparam name="TResult" vsli:raw="The type to assign to the type parameter of the returned generic sequence.">Tipo da assegnare al parametro di tipo della sequenza generica restituita.</typeparam>
      <returns vsli:raw="An empty sequence whose type argument is &lt;paramref name=&quot;TResult&quot; /&gt;.">Sequenza vuota il cui argomento di tipo è <paramref name="TResult" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Except overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Questo overload di Except non dovrebbe mai essere chiamato. Questo metodo è contrassegnato come obsoleto e genera sempre <see cref="T:System.NotSupportedException" /> quando viene chiamato.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="second" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Eccezione che si verifica quando viene chiamato questo metodo.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Questo overload genera sempre <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Except overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Questo overload di Except non dovrebbe mai essere chiamato. Questo metodo è contrassegnato come obsoleto e genera sempre <see cref="T:System.NotSupportedException" /> quando viene chiamato.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="second" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Eccezione che si verifica quando viene chiamato questo metodo.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Questo overload genera sempre <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set difference of two parallel sequences by using the default equality comparer to compare values.">Produce la differenza di set di due sequenze parallele usando l'operatore di confronto di uguaglianza predefinito per confrontare i valori.</summary>
      <param name="first" vsli:raw="A sequence whose elements that are not also in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">Verrà restituita una sequenza i cui elementi non si trovano anche in <paramref name="second" />.</param>
      <param name="second" vsli:raw="A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.">Sequenza i cui elementi, se presenti anche nella prima sequenza, saranno rimossi dalla sequenza restituita.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Tipo degli elementi delle sequenze di input.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> o <paramref name="second" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains the set difference of the elements of two sequences.">Sequenza che contiene la differenza insiemistica degli elementi delle due sequenze.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set difference of two parallel sequences by using the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">Produce la differenza di set di due sequenze parallele usando l'oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> specificato per confrontare i valori.</summary>
      <param name="first" vsli:raw="A sequence whose elements that are not also in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">Verrà restituita una sequenza i cui elementi non si trovano anche in <paramref name="second" />.</param>
      <param name="second" vsli:raw="A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.">Sequenza i cui elementi, se presenti anche nella prima sequenza, saranno rimossi dalla sequenza restituita.</param>
      <param name="comparer" vsli:raw="&lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare i valori.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Tipo degli elementi delle sequenze di input.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> o <paramref name="second" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains the set difference of the elements of two sequences.">Sequenza che contiene la differenza insiemistica degli elementi delle due sequenze.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the first element of a parallel sequence.">Restituisce il primo elemento di una sequenza parallela.</summary>
      <param name="source" vsli:raw="The sequence to return the first element of.">Sequenza di cui restituire il primo elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The first element in the specified sequence.">Il primo elemento nella sequenza specificata.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the first element in a parallel sequence that satisfies a specified condition.">Restituisce il primo elemento in una sequenza parallela che soddisfa una condizione specificata.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Sequenza dalla quale viene restituito un elemento.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Funzione per testare ogni elemento rispetto a una condizione.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element in &lt;paramref name=&quot;source&quot; /&gt; satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">Nessun elemento in <paramref name="source" /> soddisfa la condizione in <paramref name="predicate" />.</exception>
      <returns vsli:raw="The first element in the sequence that passes the test in the specified predicate function.">Il primo elemento nella sequenza che supera il test nella funzione predicato specificata.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.">Restituisce il primo elemento di una sequenza parallela o un valore predefinito se la sequenza non contiene elementi.</summary>
      <param name="source" vsli:raw="The sequence to return the first element of.">Sequenza di cui restituire il primo elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt;.">default(TSource) se <paramref name="source" /> è vuoto; in caso contrario, il primo elemento di <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the first element of the parallel sequence that satisfies a condition or a default value if no such element is found.">Restituisce il primo elemento della sequenza parallela che soddisfa una condizione o un valore predefinito se un tale elemento non viene trovato.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Sequenza dalla quale viene restituito un elemento.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Funzione per testare ogni elemento rispetto a una condizione.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty or if no element passes the test specified by predicate; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt; that passes the test specified by predicate.">default(TSource) se <paramref name="source" /> è vuoto o se nessun elemento supera il test specificato dal predicato; in caso contrario, il primo elemento di <paramref name="source" /> che supera il test specificato dal predicato.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
      <summary vsli:raw="Invokes in parallel the specified action for each element in the &lt;paramref name=&quot;source&quot; /&gt;.">Richiama in parallelo l'azione specificata per ogni elemento in <paramref name="source" />.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; whose elements will be processed by &lt;paramref name=&quot;action&quot; /&gt;.">Oggetto <see cref="T:System.Linq.ParallelQuery`1" /> i cui elementi verranno elaborati da <paramref name="action" />.</param>
      <param name="action" vsli:raw="An Action to invoke on each element.">Elemento Action da richiamare su ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function.">Raggruppa in parallelo gli elementi di una sequenza secondo una funzione selettore di chiave specificata.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource}that contains elements to sort.">Oggetto OrderedParallelQuery{TSource} che contiene elementi da ordinare.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Funzione per estrarre una chiave da un elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">Sequenza di gruppi in ordine decrescente sulla base di <paramref name="TKey" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and compares the keys by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt;.">Raggruppa in parallelo gli elementi di una sequenza secondo una funzione selettore di chiave specificata e confronta le chiavi usando un oggetto <see cref="T:System.Collections.Generic.IComparer`1" /> specificato.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.OrderedParallelQuery`1&quot; /&gt; that contains elements to sort.">Oggetto <see cref="T:System.Linq.OrderedParallelQuery`1" /> che contiene gli elementi da ordinare.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Funzione per estrarre una chiave da un elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">Oggetto <see cref="T:System.Collections.Generic.IComparer`1" /> per confrontare le chiavi.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita da <paramref name="keySelector" /> &gt; .</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">Sequenza di gruppi in ordine decrescente sulla base di <paramref name="TKey" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.">Raggruppa in parallelo gli elementi di una sequenza in base a una funzione selettore di chiave specificata e proietta gli elementi di ogni gruppo usando una funzione specificata.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.OrderedParallelQuery`1&quot; /&gt; that contains elements to sort.">Oggetto <see cref="T:System.Linq.OrderedParallelQuery`1" /> che contiene gli elementi da ordinare.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Funzione per estrarre una chiave da un elemento.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">Funzione per eseguire il mapping di ogni elemento di origine a un elemento in un oggetto <see cref="T:System.Linq.IGrouping`2" />.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">Tipo degli elementi contenuti nell'oggetto <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">Sequenza di gruppi in ordine decrescente sulla base di <paramref name="TKey" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a key selector function. The keys are compared by using a comparer and each group's elements are projected by using a specified function.">Raggruppa in parallelo gli elementi di una sequenza secondo una funzione selettore di chiave. Le chiavi vengono confrontate usando un operatore di confronto e gli elementi di ogni gruppo vengono proiettati usando una funzione specificata.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource}that contains elements to sort.">Oggetto OrderedParallelQuery{TSource} che contiene elementi da ordinare.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Funzione per estrarre una chiave da un elemento.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping.">Funzione per eseguire il mapping di ogni elemento di origine a un elemento di IGrouping.</param>
      <param name="comparer" vsli:raw="An IComparer{TSource} to compare keys.">Oggetto IComparer{TSource} per confrontare le chiavi.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the IGrouping.">Tipo degli elementi contenuti in IGrouping.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">Sequenza di gruppi in ordine decrescente sulla base di <paramref name="TKey" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.">Raggruppa in parallelo gli elementi di una sequenza in base a una funzione selettore di chiave specificata e crea un valore risultante da ciascun gruppo e relativa chiave.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">Sequenza di cui raggruppare gli elementi.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">Funzione per estrarre la chiave per ogni elemento.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">Funzione per creare un valore di risultato da ogni gruppo.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">Tipo del valore restituito dall'oggetto <paramref name="resultSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">Sequenza di elementi di tipo <paramref name="TResult" /> dove ogni elemento rappresenta una proiezione su un gruppo e sulla relativa chiave.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The keys are compared by using a specified comparer.">Raggruppa in parallelo gli elementi di una sequenza in base a una funzione selettore di chiave specificata e crea un valore risultante da ciascun gruppo e relativa chiave. Le chiavi vengono confrontati usando un operatore di confronto specificato.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">Sequenza di cui raggruppare gli elementi.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">Funzione per estrarre la chiave per ogni elemento.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">Funzione per creare un valore di risultato da ogni gruppo.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare le chiavi.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">Tipo del valore restituito dall'oggetto <paramref name="resultSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence of groups.">Sequenza di gruppi.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The elements of each group are projected by using a specified function.">Raggruppa in parallelo gli elementi di una sequenza in base a una funzione selettore di chiave specificata e crea un valore risultante da ciascun gruppo e relativa chiave. Gli elementi di ogni gruppo vengono proiettati usando una funzione specificata.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">Sequenza di cui raggruppare gli elementi.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">Funzione per estrarre la chiave per ogni elemento.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping&amp;lt;TKey, TElement&amp;gt;.">Funzione per eseguire il mapping di ogni elemento di origine a un elemento di IGrouping&lt;TKey, TElement&gt;.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">Funzione per creare un valore di risultato da ogni gruppo.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each IGrouping{TKey, TElement}.">Tipo degli elementi in ogni IGrouping{TKey, TElement}.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">Tipo del valore restituito dall'oggetto <paramref name="resultSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> o <paramref name="keySelector" /> o <paramref name="elementSelector" /> o <paramref name="resultSelector" /> è <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">Sequenza di elementi di tipo <paramref name="TResult" /> dove ogni elemento rappresenta una proiezione su un gruppo e sulla relativa chiave.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.">Raggruppa gli elementi di una sequenza in base a una funzione del selettore principale specificata e crea un valore risultante da ciascun gruppo e relativa chiave. I valori delle chiavi vengono confrontati usando un operatore di confronto specificato e gli elementi di ogni gruppo vengono proiettati usando una funzione specificata.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">Sequenza di cui raggruppare gli elementi.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">Funzione per estrarre la chiave per ogni elemento.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping{Key, TElement}.">Funzione per eseguire il mapping di ogni elemento di origine a un elemento di IGrouping{Key, TElement}.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">Funzione per creare un valore di risultato da ogni gruppo.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare le chiavi.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each IGrouping{TKey, TElement}.">Tipo degli elementi in ogni IGrouping{TKey, TElement}.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">Tipo del valore restituito dall'oggetto <paramref name="resultSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> o <paramref name="keySelector" /> o <paramref name="elementSelector" /> o <paramref name="resultSelector" /> è <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">Sequenza di elementi di tipo <paramref name="TResult" /> dove ogni elemento rappresenta una proiezione su un gruppo e sulla relativa chiave.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary vsli:raw="This GroupJoin overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Questo overload di GroupJoin non dovrebbe mai essere chiamato. Questo metodo è contrassegnato come obsoleto e genera sempre <see cref="T:System.NotSupportedException" /> quando viene chiamato.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="inner" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Eccezione che si verifica quando viene chiamato questo metodo.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Questo overload genera sempre <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="This GroupJoin overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Questo overload di GroupJoin non dovrebbe mai essere chiamato. Questo metodo è contrassegnato come obsoleto e genera sempre <see cref="T:System.NotSupportedException" /> quando viene chiamato.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="inner" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Eccezione che si verifica quando viene chiamato questo metodo.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Questo overload genera sempre <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on equality of keys and groups the results. The default equality comparer is used to compare keys.">Correla in parallelo gli elementi di due sequenze in base all'uguaglianza delle chiavi e raggruppa i risultati. Per confrontare le chiavi viene usato l'operatore di confronto uguaglianze predefinito.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">Prima sequenza da unire.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">Sequenza da unire alla prima sequenza.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">Funzione per estrarre la chiave di aggiunta da ogni elemento della prima sequenza.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">Funzione per estrarre la chiave di aggiunta da ogni elemento della seconda sequenza.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">Funzione per creare un elemento di risultato da un elemento dalla prima sequenza e una raccolta di elementi corrispondenti dalla seconda sequenza.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">Tipo degli elementi della prima sequenza.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">Tipo degli elementi della seconda sequenza.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">Tipo delle chiavi restituite dalle funzioni del selettore principale.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">Tipo degli elementi di risultato.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> o <paramref name="outer" /> o <paramref name="inner" /> o <paramref name="outerKeySelector" /> o <paramref name="innerKeySelector" /> o <paramref name="resultSelector" /> è <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing a grouped join on two sequences.">Sequenza che contiene elementi di tipo <paramref name="TResult" /> ottenuti eseguendo un join raggruppato di due sequenze.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on key equality and groups the results. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">Correla in parallelo gli elementi di due sequenze in base all'uguaglianza delle chiavi e raggruppa i risultati. Per confrontare le chiavi, viene usato un oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> specificato.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">Prima sequenza da unire.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">Sequenza da unire alla prima sequenza.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">Funzione per estrarre la chiave di aggiunta da ogni elemento della prima sequenza.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">Funzione per estrarre la chiave di aggiunta da ogni elemento della seconda sequenza.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">Funzione per creare un elemento di risultato da un elemento dalla prima sequenza e una raccolta di elementi corrispondenti dalla seconda sequenza.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per la codifica hash e il confronto delle chiavi.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">Tipo degli elementi della prima sequenza.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">Tipo degli elementi della seconda sequenza.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">Tipo delle chiavi restituite dalle funzioni del selettore principale.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">Tipo degli elementi di risultato.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> o <paramref name="outer" /> o <paramref name="inner" /> o <paramref name="outerKeySelector" /> o <paramref name="innerKeySelector" /> o <paramref name="resultSelector" /> è <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing a grouped join on two sequences.">Sequenza che contiene elementi di tipo <paramref name="TResult" /> ottenuti eseguendo un join raggruppato di due sequenze.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Intersect overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Questo overload di Intersect non dovrebbe mai essere chiamato. Questo metodo è contrassegnato come obsoleto e genera sempre <see cref="T:System.NotSupportedException" /> quando viene chiamato.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="second" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Eccezione che si verifica quando viene chiamato questo metodo.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Questo overload genera sempre <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Intersect overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Questo overload di Intersect non dovrebbe mai essere chiamato. Questo metodo è contrassegnato come obsoleto e genera sempre <see cref="T:System.NotSupportedException" /> quando viene chiamato.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="second" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Eccezione che si verifica quando viene chiamato questo metodo.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Questo overload genera sempre <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set intersection of two parallel sequences by using the default equality comparer to compare values.">Produce l'intersezione di set di due sequenze parallele usando l'operatore di confronto di uguaglianza predefinito per confrontare i valori.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements that also appear in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">Sequenza di cui vengono restituiti gli elementi distinti presenti anche in <paramref name="second" />.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements that also appear in the first sequence will be returned.">Sequenza di cui vengono restituiti gli elementi distinti presenti anche nella prima sequenza.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Tipo degli elementi delle sequenze di input.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains the elements that form the set intersection of two sequences.">Sequenza che contiene gli elementi che formano l'intersezione insiemistica delle due sequenze.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set intersection of two parallel sequences by using the specified IEqualityComparer{T} to compare values.">Produce l'intersezione di set di due sequenze parallele usando l'oggetto IEqualityComparer{T} specificato per confrontare i valori.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements that also appear in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">Sequenza di cui vengono restituiti gli elementi distinti presenti anche in <paramref name="second" />.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements that also appear in the first sequence will be returned.">Sequenza di cui vengono restituiti gli elementi distinti presenti anche nella prima sequenza.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare i valori.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Tipo degli elementi delle sequenze di input.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains the elements that form the set intersection of two sequences.">Sequenza che contiene gli elementi che formano l'intersezione insiemistica delle due sequenze.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary vsli:raw="This Join overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">Questo overload di Join non dovrebbe mai essere chiamato. Questo metodo è contrassegnato come obsoleto e genera sempre <see cref="T:System.NotSupportedException" /> quando viene richiamato.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="inner" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Eccezione che si verifica quando viene chiamato questo metodo.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Questo overload genera sempre <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="This Join overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">Questo overload di Join non dovrebbe mai essere chiamato. Questo metodo è contrassegnato come obsoleto e genera sempre <see cref="T:System.NotSupportedException" /> quando viene richiamato.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="inner" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Eccezione che si verifica quando viene chiamato questo metodo.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Questo overload genera sempre <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on matching keys. The default equality comparer is used to compare keys.">Correla in parallelo gli elementi di due sequenze in base alle chiavi corrispondenti. Per confrontare le chiavi viene usato l'operatore di confronto uguaglianze predefinito.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">Prima sequenza da unire.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">Sequenza da unire alla prima sequenza.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">Funzione per estrarre la chiave di aggiunta da ogni elemento della prima sequenza.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">Funzione per estrarre la chiave di aggiunta da ogni elemento della seconda sequenza.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">Funzione per creare un elemento di risultato da due elementi corrispondenti.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">Tipo degli elementi della prima sequenza.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">Tipo degli elementi della seconda sequenza.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">Tipo delle chiavi restituite dalle funzioni del selettore principale.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">Tipo degli elementi di risultato.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> o <paramref name="outer" /> o <paramref name="inner" /> o <paramref name="outerKeySelector" /> o <paramref name="innerKeySelector" /> o <paramref name="resultSelector" /> è <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing an inner join on two sequences.">Sequenza che contiene elementi di tipo <paramref name="TResult" /> ottenuti eseguendo un inner join di due sequenze.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on matching keys. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">Correla in parallelo gli elementi di due sequenze in base alle chiavi corrispondenti. Per confrontare le chiavi, viene usato un oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> specificato.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">Prima sequenza da unire.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">Sequenza da unire alla prima sequenza.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">Funzione per estrarre la chiave di aggiunta da ogni elemento della prima sequenza.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">Funzione per estrarre la chiave di aggiunta da ogni elemento della seconda sequenza.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">Funzione per creare un elemento di risultato da due elementi corrispondenti.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per la codifica hash e il confronto delle chiavi.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">Tipo degli elementi della prima sequenza.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">Tipo degli elementi della seconda sequenza.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">Tipo delle chiavi restituite dalle funzioni del selettore principale.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">Tipo degli elementi di risultato.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> o <paramref name="action" /> o <paramref name="outer" /> o <paramref name="inner" /> o <paramref name="outerKeySelector" /> o <paramref name="innerKeySelector" /> o <paramref name="resultSelector" /> è <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing an inner join on two sequences.">Sequenza che contiene elementi di tipo <paramref name="TResult" /> ottenuti eseguendo un inner join di due sequenze.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the last element of a parallel sequence.">Restituisce l'ultimo elemento di una sequenza parallela.</summary>
      <param name="source" vsli:raw="The sequence to return the last element from.">Sequenza dalla quale viene restituito l'ultimo elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The value at the last position in the source sequence.">Il valore dell'ultima posizione nella sequenza di origine.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the last element of a parallel sequence that satisfies a specified condition.">Restituisce l'ultimo elemento di una sequenza parallela che soddisfa una condizione specificata.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Sequenza dalla quale viene restituito un elemento.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Funzione per testare ogni elemento rispetto a una condizione.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element in &lt;paramref name=&quot;source&quot; /&gt; satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">Nessun elemento in <paramref name="source" /> soddisfa la condizione in <paramref name="predicate" />.</exception>
      <returns vsli:raw="The last element in the sequence that passes the test in the specified predicate function.">Ultimo elemento nella sequenza che supera il test nella funzione predicato specificata.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.">Restituisce l'ultimo elemento di una sequenza parallela o un valore predefinito se la sequenza non contiene elementi.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Sequenza dalla quale viene restituito un elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="default() if the source sequence is empty; otherwise, the last element in the sequence.">default() se la sequenza di origine è vuota; in caso contrario, l'ultimo elemento nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the last element of a parallel sequence that satisfies a condition, or a default value if no such element is found.">Restituisce l'ultimo elemento di una sequenza parallela che soddisfa una condizione o un valore predefinito se un elemento di tale tipo non viene trovato.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Sequenza dalla quale viene restituito un elemento.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Funzione per testare ogni elemento rispetto a una condizione.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="default() if the sequence is empty or if no elements pass the test in the predicate function; otherwise, the last element that passes the test in the predicate function.">default() se la sequenza è vuota o se nessun elemento supera il test nella funzione predicato; in caso contrario, l'ultimo elemento che supera il test nella funzione predicato.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns an Int64 that represents the total number of elements in a parallel sequence.">Restituisce un oggetto Int64 che rappresenta il numero totale di elementi in una sequenza parallela.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">Sequenza che contiene gli elementi da contare.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Il numero di elementi nel database di origine è maggiore di <see cref="F:System.Int32.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The computed result is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Il risultato calcolato è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns vsli:raw="The number of elements in the input sequence.">Numero di elementi nella sequenza di input.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns an Int64 that represents how many elements in a parallel sequence satisfy a condition.">Restituisce un oggetto Int64 che rappresenta quanti elementi in una sequenza parallela soddisfano una condizione.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">Sequenza che contiene gli elementi da contare.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Funzione per testare ogni elemento rispetto a una condizione.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Il numero di elementi nel database di origine è maggiore di <see cref="F:System.Int32.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The computed result is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Il risultato calcolato è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns vsli:raw="A number that represents how many elements in the sequence satisfy the condition in the predicate function.">Numero che rappresenta quanti elementi nella sequenza specificata soddisfano la condizione nella funzione predicato.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Restituisce il valore massimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Restituisce il valore massimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Restituisce il valore massimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Restituisce il valore massimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Restituisce il valore massimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Restituisce il valore massimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Restituisce il valore massimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Restituisce il valore massimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Restituisce il valore massimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Restituisce il valore massimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Restituisce il valore massimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <typeparam name="TSource" vsli:raw="The type of elements in the source sequence.">Tipo degli elementi nella sequenza di origine.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore massimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Sequenza di valori di cui determinare il valore massimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">Tipo del valore restituito dall'oggetto <paramref name="selector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The maximum value in the sequence.">Valore massimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Restituisce il valore minimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Restituisce il valore minimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Restituisce il valore minimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Restituisce il valore minimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Restituisce il valore minimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Restituisce il valore minimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Restituisce il valore minimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Restituisce il valore minimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Restituisce il valore minimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Restituisce il valore minimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Restituisce il valore minimo in una sequenza parallela di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> non contiene elementi.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Richiama in parallelo una funzione di trasformazione su ogni elemento di una sequenza e restituisce il valore minimo.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Sequenza di valori di cui determinare il valore minimo.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">Tipo del valore restituito dall'oggetto <paramref name="selector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> non contiene elementi e <paramref name="TSource" /> è un tipo di valore non nullable.</exception>
      <returns vsli:raw="The minimum value in the sequence.">Valore minimo della sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
      <summary vsli:raw="Filters the elements of a ParallelQuery based on a specified type.">Filtra gli elementi di un oggetto ParallelQuery in base a un tipo specificato.</summary>
      <param name="source" vsli:raw="The sequence with elements to filter.">La sequenza con elementi da filtrare.</param>
      <typeparam name="TResult" vsli:raw="The type to filter the elements of the sequence on.">Il tipo in base al quale filtrare gli elementi della sequenza.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains elements from the input sequence filtered by type.">Sequenza che contiene elementi della sequenza di input filtrati per tipo.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in ascending order according to a key.">Dispone in parallelo gli elementi di una sequenza in ordine crescente in base a una chiave.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">Sequenza di valori da ordinare.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Funzione per estrarre una chiave da un elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">Oggetto OrderedParallelQuery{TSource} i cui elementi sono ordinati in base a una chiave.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in ascending order by using a specified comparer.">Dispone in parallelo gli elementi di una sequenza in ordine crescente usando un operatore di confronto specificato.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">Sequenza di valori da ordinare.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Funzione per estrarre una chiave da un elemento.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">Oggetto IComparer{TKey} per confrontare chiavi.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">Oggetto OrderedParallelQuery{TSource} i cui elementi sono ordinati in base a una chiave.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in descending order according to a key.">Dispone in parallelo gli elementi di una sequenza in ordine decrescente in base a una chiave.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">Sequenza di valori da ordinare.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Funzione per estrarre una chiave da un elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.">Oggetto OrderedParallelQuery{TSource} i cui elementi sono disposti in ordine decrescente in base a una chiave.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the elements of a sequence in descending order by using a specified comparer.">Ordina in senso decrescente gli elementi di una sequenza usando un operatore di confronto specificato.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">Sequenza di valori da ordinare.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Funzione per estrarre una chiave da un elemento.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">Oggetto IComparer{TKey} per confrontare chiavi.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;KeySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="KeySelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.">Oggetto OrderedParallelQuery{TSource} i cui elementi sono disposti in ordine decrescente in base a una chiave.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
      <summary vsli:raw="Generates a parallel sequence of integral numbers within a specified range.">Genera una sequenza parallela di numeri integrali all'interno di un intervallo specificato.</summary>
      <param name="start" vsli:raw="The value of the first integer in the sequence.">Il primo valore intero della sequenza.</param>
      <param name="count" vsli:raw="The number of sequential integers to generate.">Il numero di valori interi sequenziali da generare</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than 0 -or- &lt;paramref name=&quot;start&quot; /&gt; + &lt;paramref name=&quot;count&quot; /&gt; - 1 is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="count" /> è minore di 0 oppure <paramref name="start" /> + <paramref name="count" /> - 1 è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns vsli:raw="An IEnumerable&amp;lt;Int32&amp;gt; in C# or IEnumerable(Of Int32) in Visual Basic that contains a range of sequential integral numbers.">Elemento IEnumerable&lt;Int32&gt; in C# o IEnumerable(Of Int32) in Visual Basic che contiene un intervallo di numeri integrali sequenziali.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
      <summary vsli:raw="Generates a parallel sequence that contains one repeated value.">Genera una sequenza parallela che contiene un valore ripetuto.</summary>
      <param name="element" vsli:raw="The value to be repeated.">Valore da ripetere.</param>
      <param name="count" vsli:raw="The number of times to repeat the value in the generated sequence.">Numero che esprime quante volte il valore è ripetuto nella sequenza generata.</param>
      <typeparam name="TResult" vsli:raw="The type of the value to be repeated in the result sequence.">Il tipo del valore da ripetere nella sequenza di risultato.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="count" /> è minore di 0.</exception>
      <returns vsli:raw="A sequence that contains a repeated value.">Sequenza che contiene un valore ripetuto.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Inverts the order of the elements in a parallel sequence.">Inverte l'ordine degli elementi in una sequenza parallela.</summary>
      <param name="source" vsli:raw="A sequence of values to reverse.">Sequenza di valori da invertire.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence whose elements correspond to those of the input sequence in reverse order.">Sequenza i cui elementi corrispondono a quelli della sequenza di input, in ordine inverso.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects in parallel each element of a sequence into a new form.">Proietta in parallelo ogni elemento di una sequenza in un nuovo form.</summary>
      <param name="source" vsli:raw="A sequence of values to invoke a transform function on.">Sequenza di valori su cui richiamare una funzione di trasformazione.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements returned by selector.">Tipo di elementi restituiti dal selettore.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">Sequenza i cui elementi sono il risultato della chiamata alla funzione di trasformazione su ogni elemento di <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
      <summary vsli:raw="Projects in parallel each element of a sequence into a new form by incorporating the element's index.">Proietta in parallelo ogni elemento di una sequenza in un nuovo form incorporando l'indice dell'elemento.</summary>
      <param name="source" vsli:raw="A sequence of values to invoke a transform function on.">Sequenza di valori su cui richiamare una funzione di trasformazione.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements returned by selector.">Tipo di elementi restituiti dal selettore.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query. This condition might occur in streaming scenarios.">Il numero di elementi enumerati dalla query è superiore a <see cref="F:System.Int32.MaxValue" />. Questa condizione può verificarsi in scenari di flusso.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;, based on the index supplied to &lt;paramref name=&quot;selector&quot; /&gt;.">Sequenza i cui elementi sono il risultato del richiamo alla funzione di trasformazione su ogni elemento di <paramref name="source" />, in base all'indice fornito a <paramref name="selector" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
      <summary vsli:raw="Projects in parallel each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; and flattens the resulting sequences into one sequence.">Proietta in parallelo ogni elemento di una sequenza a un oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> e semplifica le sequenze risultanti in un'unica sequenza.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">Sequenza di valori da proiettare.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by selector.">Tipo degli elementi della sequenza restituita dal selettore.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.">Sequenza i cui elementi sono il risultato della chiamata alla funzione di trasformazione uno-a-molti su ogni elemento della sequenza di input.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
      <summary vsli:raw="Projects in parallel each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, and flattens the resulting sequences into one sequence. The index of each source element is used in the projected form of that element.">Proietta in parallelo ogni elemento di una sequenza a un oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> e semplifica le sequenze risultanti in un'unica sequenza. L'indice di ogni elemento di origine viene usato nella maschera proiettata di tale elemento.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">Sequenza di valori da proiettare.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by selector.">Tipo degli elementi della sequenza restituita dal selettore.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Il numero di elementi enumerati dalla query è superiore a <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.">Sequenza i cui elementi sono il risultato della chiamata alla funzione di trasformazione uno-a-molti su ogni elemento della sequenza di input.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.">Proietta ogni elemento di una sequenza a un oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" />, semplifica le sequenze risultanti in un'unica sequenza e richiama una funzione del selettore di risultato su ogni elemento al suo interno.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">Sequenza di valori da proiettare.</param>
      <param name="collectionSelector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">Funzione di trasformazione da applicare a ogni elemento di origine; il secondo parametro della funzione rappresenta l'indice dell'elemento di origine.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">Funzione per creare un elemento di risultato da un elemento dalla prima sequenza e una raccolta di elementi corrispondenti dalla seconda sequenza.</param>
      <typeparam name="TSource" vsli:raw="The type of the intermediate elements collected by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">Tipo degli elementi intermedi raccolti da <paramref name="collectionSelector" />.</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements in the result sequence.">Tipo degli elementi nella sequenza risultante.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Il numero di elementi enumerati dalla query è superiore a <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; based on the index supplied to &lt;paramref name=&quot;collectionSelector&quot; /&gt;, and then mapping each of those sequence elements and their corresponding source element to a result element.">Sequenza i cui elementi sono il risultato ottenuto richiamando la funzione di trasformazione uno-a-molti <paramref name="collectionSelector" /> su ogni elemento di <paramref name="source" /> basato sull'indice fornito a <paramref name="collectionSelector" /> ed eseguendo quindi il mapping di ogni elemento della sequenza e del corrispondente elemento di origine a un elemento di risultato.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein. The index of each source element is used in the intermediate projected form of that element.">Proietta ogni elemento di una sequenza a un oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" />, semplifica le sequenze risultanti in un'unica sequenza e richiama una funzione del selettore di risultato su ogni elemento al suo interno. L'indice di ogni elemento di origine viene usato nella maschera intermedia proiettata di tale elemento.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">Sequenza di valori da proiettare.</param>
      <param name="collectionSelector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">Funzione di trasformazione da applicare a ogni elemento di origine; il secondo parametro della funzione rappresenta l'indice dell'elemento di origine.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">Funzione per creare un elemento di risultato da un elemento dalla prima sequenza e una raccolta di elementi corrispondenti dalla seconda sequenza.</param>
      <typeparam name="TSource" vsli:raw="The type of the intermediate elements collected by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">Tipo degli elementi intermedi raccolti da <paramref name="collectionSelector" />.</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements to return.">Tipo degli elementi da restituire.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Il numero di elementi enumerati dalla query è superiore a <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; based on the index supplied to &lt;paramref name=&quot;collectionSelector&quot; /&gt;, and then mapping each of those sequence elements and their corresponding source element to a result element.">Sequenza i cui elementi sono il risultato ottenuto richiamando la funzione di trasformazione uno-a-molti <paramref name="collectionSelector" /> su ogni elemento di <paramref name="source" /> basato sull'indice fornito a <paramref name="collectionSelector" /> ed eseguendo quindi il mapping di ogni elemento della sequenza e del corrispondente elemento di origine a un elemento di risultato.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This SequenceEqual overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Questo overload di SequenceEqual non dovrebbe mai essere chiamato. Questo metodo è contrassegnato come obsoleto e genera sempre <see cref="T:System.NotSupportedException" /> quando viene chiamato.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="second" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="Thrown every time this method is called.">Generato ogni volta che viene chiamato questo metodo.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Questo overload genera sempre <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This SequenceEqual overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Questo overload di SequenceEqual non dovrebbe mai essere chiamato. Questo metodo è contrassegnato come obsoleto e genera sempre <see cref="T:System.NotSupportedException" /> quando viene chiamato.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="second" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="Thrown every time this method is called.">Generato ogni volta che viene chiamato questo metodo.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Questo overload genera sempre <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Determines whether two parallel sequences are equal by comparing the elements by using the default equality comparer for their type.">Determina se due sequenze parallele sono uguali confrontando gli elementi mediante l'operatore di confronto di uguaglianza predefinito per il relativo tipo.</summary>
      <param name="first" vsli:raw="A sequence to compare to second.">Sequenza da confrontare alla seconda.</param>
      <param name="second" vsli:raw="A sequence to compare to the first input sequence.">Sequenza da confrontare alla prima sequenza di input.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Tipo degli elementi delle sequenze di input.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> o <paramref name="second" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le due sequenze di origine sono di lunghezza uguale e gli elementi corrispondenti risultano uguali secondo l’operatore di confronto uguaglianze per il loro tipo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines whether two parallel sequences are equal by comparing their elements by using a specified IEqualityComparer{T}.">Determina se due sequenze parallele sono uguali confrontandone gli elementi mediante un oggetto IEqualityComparer{T} specificato.</summary>
      <param name="first" vsli:raw="A sequence to compare to &lt;paramref name=&quot;second&quot; /&gt;.">Sequenza da confrontare con <paramref name="second" />.</param>
      <param name="second" vsli:raw="A sequence to compare to the first input sequence.">Sequenza da confrontare alla prima sequenza di input.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to use to compare elements.">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da usare per confrontare gli elementi.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Tipo degli elementi delle sequenze di input.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> o <paramref name="second" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le due sequenze di origine sono di lunghezza uguale e gli elementi corrispondenti risultano uguali secondo l’operatore di confronto uguaglianze per il loro tipo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.">Restituisce l'unico elemento di una sequenza parallela e genera un'eccezione se nella sequenza non è presente esattamente un solo elemento.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">Sequenza di cui restituire il singolo elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The input sequence contains more than one element. -or- The input sequence is empty.">La sequenza di input contiene più elementi. oppure la sequenza di input è vuota.</exception>
      <returns vsli:raw="The single element of the input sequence.">Singolo elemento della sequenza di input.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the only element of a parallel sequence that satisfies a specified condition, and throws an exception if more than one such element exists.">Restituisce l'unico elemento di una sequenza parallela che soddisfa una condizione specificata e genera un'eccezione se esistono più elementi di tale tipo.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">Sequenza di cui restituire il singolo elemento.</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">Funzione per testare un elemento per una condizione.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;. -or- More than one element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">Nessun elemento soddisfa la condizione in <paramref name="predicate" />. -oppure- Nessun elemento soddisfa la condizione in <paramref name="predicate" />.</exception>
      <returns vsli:raw="The single element of the input sequence that satisfies a condition.">Singolo elemento della sequenza di input che soddisfa una condizione.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.">Restituisce l'unico elemento di una sequenza parallela o un valore predefinito se la sequenza è vuota. Questo metodo genera un'eccezione se nella sequenza esiste più di un elemento.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">Sequenza di cui restituire il singolo elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; has more than one element.">
        <paramref name="source" /> presenta più di un elemento.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The single element of the input sequence, or default() if the sequence contains no elements.">Il singolo elemento della sequenza di input o default() se la sequenza non contiene elementi.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the only element of a parallel sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.">Restituisce l'unico elemento di una sequenza parallela che soddisfa una condizione specificata o un valore predefinito se tale elemento esiste. Questo metodo genera un'eccezione se più di un elemento soddisfa la condizione.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">Sequenza di cui restituire il singolo elemento.</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">Funzione per testare un elemento per una condizione.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is empty or multiple elements are returned.">
        <paramref name="source" /> è vuoto oppure restituisce più elementi.</exception>
      <returns vsli:raw="The single element of the input sequence that satisfies the condition, or default() if no such element is found.">Il singolo elemento della sequenza di input che soddisfa la condizione o default() se tale elemento non viene trovato.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Bypasses a specified number of elements in a parallel sequence and then returns the remaining elements.">Ignora un numero specificato di elementi in una sequenza parallela e restituisce gli elementi rimanenti.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Sequenza dalla quale vengono restituiti gli elementi.</param>
      <param name="count" vsli:raw="The number of elements to skip before returning the remaining elements.">Il numero di elementi da ignorare prima di restituire gli elementi rimanenti.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Count is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;">Il numero è maggiore di <see cref="F:System.Int32.MaxValue" /></exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains the elements that occur after the specified index in the input sequence.">Sequenza che contiene gli elementi presenti dopo l'indice specificato nella sequenza di input.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.">Ignora gli elementi in una sequenza parallela finché la condizione specificata non restituisce true, quindi restituisce gli elementi rimanenti.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Sequenza dalla quale vengono restituiti gli elementi.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Funzione per testare ogni elemento rispetto a una condizione.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.">Sequenza che contiene gli elementi dalla sequenza di input a partire dal primo elemento nella serie lineare che non supera il test specificato dal predicato.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements. The element's index is used in the logic of the predicate function.">Ignora gli elementi in una sequenza parallela finché la condizione specificata non restituisce true, quindi restituisce gli elementi rimanenti. L'indice dell'elemento viene usato nella logica della funzione predicativa.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Sequenza dalla quale vengono restituiti gli elementi.</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">Funzione per verificare ogni elemento di origine per una condizione; il secondo parametro della funzione rappresenta l'indice dell'elemento di origine.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Il numero di elementi enumerati dalla query è superiore a <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.">Sequenza che contiene gli elementi dalla sequenza di input a partire dal primo elemento nella serie lineare che non supera il test specificato dal predicato.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcola in parallelo la somma di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Decimal.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcola in parallelo la somma di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Double.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcola in parallelo la somma di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Int32.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcola in parallelo la somma di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Int64.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcola in parallelo la somma di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Decimal.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcola in parallelo la somma di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Double.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcola in parallelo la somma di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Int32.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcola in parallelo la somma di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Int64.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcola in parallelo la somma di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or-  One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Single.MaxValue" />. oppure una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcola in parallelo la somma di una sequenza di valori.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Single.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Decimal.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Double.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements in the source sequence.">Tipo degli elementi nella sequenza di origine.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Int32.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Int64.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Decimal.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Double.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Int32.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Int64.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or-  One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Single.MaxValue" />. oppure una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcola in parallelo la somma della sequenza di valori ottenuti richiamando una funzione di trasformazione su ogni elemento della sequenza di input.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Sequenza di valori di cui calcolare la somma.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Funzione di trasformazione da applicare a ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="selector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somma è maggiore di <see cref="F:System.Single.MaxValue" />. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somma dei valori previsti nella sequenza.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns a specified number of contiguous elements from the start of a parallel sequence.">Restituisce un numero specificato di elementi contigui dall'inizio di una sequenza parallela.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Sequenza dalla quale vengono restituiti gli elementi.</param>
      <param name="count" vsli:raw="The number of elements to return.">Numero di elementi da restituire.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains the specified number of elements from the start of the input sequence.">Sequenza che contiene il numero specificato di elementi, dall'inizio della sequenza di input.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns elements from a parallel sequence as long as a specified condition is true.">Restituisce elementi di una sequenza parallela finché una condizione specificata restituisce true.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Sequenza dalla quale vengono restituiti gli elementi.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Funzione per testare ogni elemento rispetto a una condizione.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains the elements from the input sequence that occur before the element at which the test no longer passes.">Sequenza che contiene gli elementi della sequenza di input che precedono l'elemento in corrispondenza del quale il test non viene più superato.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Returns elements from a parallel sequence as long as a specified condition is true. The element's index is used in the logic of the predicate function.">Restituisce elementi di una sequenza parallela finché una condizione specificata restituisce true. L'indice dell'elemento viene usato nella logica della funzione predicativa.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Sequenza dalla quale vengono restituiti gli elementi.</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">Funzione per verificare ogni elemento di origine per una condizione; il secondo parametro della funzione rappresenta l'indice dell'elemento di origine.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by this query.">Più di <see cref="F:System.Int32.MaxValue" /> elementi vengono enumerati da questa query.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains elements from the input sequence that occur before the element at which the test no longer passes.">Sequenza che contiene gli elementi della sequenza di input che precedono l'elemento in corrispondenza del quale il test non viene più superato.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in ascending order according to a key.">Esegue in parallelo un ordinamento successivo crescente in base a una chiave degli elementi di una sequenza.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">Oggetto OrderedParallelQuery{TSource} che contiene elementi da ordinare.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Funzione per estrarre una chiave da un elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">Oggetto OrderedParallelQuery{TSource} i cui elementi sono ordinati in base a una chiave.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.">Esegue in parallelo un ordinamento successivo in senso crescente degli elementi di una sequenza usando un operatore di confronto specificato.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">Oggetto OrderedParallelQuery{TSource} che contiene elementi da ordinare.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Funzione per estrarre una chiave da un elemento.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">Oggetto IComparer{TKey} per confrontare chiavi.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">Oggetto OrderedParallelQuery{TSource} i cui elementi sono ordinati in base a una chiave.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in descending order, according to a key.">Esegue in parallelo un ordinamento successivo decrescente in base a una chiave degli elementi di una sequenza.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">Oggetto OrderedParallelQuery{TSource} che contiene elementi da ordinare.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Funzione per estrarre una chiave da un elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence whose elements are sorted descending according to a key.">Sequenza i cui elementi vengono ordinati in senso decrescente in base a una chiave.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.">Esegue in parallelo un ordinamento successivo in senso decrescente degli elementi di una sequenza usando un operatore di confronto specificato.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">Oggetto OrderedParallelQuery{TSource} che contiene elementi da ordinare.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Funzione per estrarre una chiave da un elemento.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">Oggetto IComparer{TKey} per confrontare chiavi.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence whose elements are sorted descending according to a key.">Sequenza i cui elementi vengono ordinati in senso decrescente in base a una chiave.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Creates an array from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">Crea una matrice da un oggetto <see cref="T:System.Linq.ParallelQuery`1" />.</summary>
      <param name="source" vsli:raw="A sequence to create an array from.">Sequenza da cui creare una matrice.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="An array that contains the elements from the input sequence.">Oggetto che contiene gli elementi dalla sequenza di input .</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function.">Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> da un oggetto <see cref="T:System.Linq.ParallelQuery`1" /> secondo una funzione del selettore principale specificata.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">Sequenza da cui creare un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Funzione per estrarre una chiave da ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> produce una chiave che è un riferimento Null (Nothing in Visual Basic). oppure <paramref name="keySelector" /> genera chiavi duplicate per due elementi. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains keys and values.">Oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene chiavi e valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function and key comparer.">Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> da un oggetto <see cref="T:System.Linq.ParallelQuery`1" /> secondo una funzione del selettore principale specificata e un operatore di confronto principale.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">Sequenza da cui creare un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare le chiavi.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> produce una chiave che è un riferimento Null (Nothing in Visual Basic). oppure <paramref name="keySelector" /> genera chiavi duplicate per due elementi. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains keys and values.">Oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene chiavi e valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to specified key selector and element selector functions.">Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> da un oggetto <see cref="T:System.Linq.ParallelQuery`1" /> secondo le funzioni specificate del selettore principale e del selettore di elementi.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">Sequenza da cui creare un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">Tipo del valore restituito dall'oggetto <paramref name="elementSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> o <paramref name="elementSelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> produce una chiave che è un riferimento Null (Nothing in Visual Basic). oppure <paramref name="keySelector" /> genera chiavi duplicate per due elementi. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">Oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene valori di tipo <paramref name="TElement" /> selezionati dalla sequenza di input.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function, a comparer, and an element selector function.">Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> da un oggetto <see cref="T:System.Linq.ParallelQuery`1" /> secondo una funzione specificata del selettore principale, un operatore di confronto principale e una funzione del selettore di elementi.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">Sequenza da cui creare un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare le chiavi.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">Tipo del valore restituito dall'oggetto <paramref name="elementSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> o <paramref name="elementSelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> produce una chiave che è un riferimento Null (Nothing in Visual Basic). oppure <paramref name="keySelector" /> genera chiavi duplicate per due elementi. -oppure- Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">Oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene valori di tipo <paramref name="TElement" /> selezionati dalla sequenza di input.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; from an &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">Crea un oggetto <see cref="T:System.Collections.Generic.List`1" /> da un oggetto <see cref="T:System.Linq.ParallelQuery`1" />.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; from.">Sequenza da cui creare un oggetto <see cref="T:System.Collections.Generic.List`1" />.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that contains elements from the input sequence.">Oggetto <see cref="T:System.Collections.Generic.List`1" /> che contiene gli elementi dalla sequenza di input.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function.">Crea un oggetto <see cref="T:System.Linq.ILookup`2" /> da un oggetto <see cref="T:System.Linq.ParallelQuery`1" /> secondo una funzione del selettore principale specificata.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">Sequenza da cui creare un oggetto <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Funzione per estrarre una chiave da ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains keys and values.">Oggetto <see cref="T:System.Linq.ILookup`2" /> che contiene chiavi e valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function and key comparer.">Crea un oggetto <see cref="T:System.Linq.ILookup`2" /> da un oggetto <see cref="T:System.Linq.ParallelQuery`1" /> secondo una funzione del selettore principale specificata e un operatore di confronto principale.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">Sequenza da cui creare un oggetto <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare le chiavi.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains keys and values.">Oggetto <see cref="T:System.Linq.ILookup`2" /> che contiene chiavi e valori.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to specified key selector and element selector functions.">Crea un oggetto <see cref="T:System.Linq.ILookup`2" /> da un oggetto <see cref="T:System.Linq.ParallelQuery`1" /> secondo le funzioni specificate del selettore principale e del selettore di elementi.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">Sequenza da cui creare un oggetto <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">Tipo del valore restituito dall'oggetto <paramref name="elementSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> o <paramref name="elementSelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">Oggetto <see cref="T:System.Linq.ILookup`2" /> che contiene valori di tipo <paramref name="TElement" /> selezionati dalla sequenza di input.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function, a comparer and an element selector function.">Crea un oggetto <see cref="T:System.Linq.ILookup`2" /> da un oggetto <see cref="T:System.Linq.ParallelQuery`1" /> secondo una funzione specificata del selettore principale, un operatore di confronto principale e una funzione del selettore di elementi.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">Sequenza da cui creare un oggetto <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare le chiavi.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo della chiave restituita dall'oggetto <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">Tipo del valore restituito dall'oggetto <paramref name="elementSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="keySelector" /> o <paramref name="elementSelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A Lookup&amp;lt;(Of &amp;lt;(TKey, TElement&amp;gt;)&amp;gt;) that contains values of type TElement selected from the input sequence.">Elemento Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;) che contiene valori di tipo TElement selezionati dalla sequenza di input.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Union overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Questo overload di Union non dovrebbe mai essere chiamato. Questo metodo è contrassegnato come obsoleto e genera sempre <see cref="T:System.NotSupportedException" /> quando viene chiamato.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="second" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Eccezione che si verifica quando viene chiamato questo metodo.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Questo overload genera sempre <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Union overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Questo overload di Union non dovrebbe mai essere chiamato. Questo metodo è contrassegnato come obsoleto e genera sempre <see cref="T:System.NotSupportedException" /> quando viene chiamato.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="second" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Eccezione che si verifica quando viene chiamato questo metodo.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Questo overload genera sempre <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set union of two parallel sequences by using the default equality comparer.">Produce l'unione di set delle due sequenze parallele usando l'operatore di confronto di uguaglianza predefinito.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements form the first set for the union.">Sequenza i cui elementi distinti formano il primo set dell'unione.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements form the second set for the union.">Sequenza i cui elementi distinti formano il secondo set dell'unione.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Tipo degli elementi delle sequenze di input.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> o <paramref name="second" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains the elements from both input sequences, excluding duplicates.">Sequenza che contiene gli elementi di entrambe le sequenze di input, tranne i duplicati.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set union of two parallel sequences by using a specified IEqualityComparer{T}.">Produce l'unione di set di due sequenze parallele usando un oggetto IEqualityComparer{T} specificato.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements form the first set for the union.">Sequenza i cui elementi distinti formano il primo set dell'unione.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements form the second set for the union.">Sequenza i cui elementi distinti formano il secondo set dell'unione.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare i valori.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Tipo degli elementi delle sequenze di input.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> o <paramref name="second" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains the elements from both input sequences, excluding duplicates.">Sequenza che contiene gli elementi di entrambe le sequenze di input, tranne i duplicati.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters in parallel a sequence of values based on a predicate.">Filtra in parallelo una sequenza di valori in base a un predicato.</summary>
      <param name="source" vsli:raw="A sequence to filter.">Sequenza da filtrare.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Funzione per testare ogni elemento rispetto a una condizione.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of source.">Tipo degli elementi di origine.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains elements from the input sequence that satisfy the condition.">Sequenza che contiene elementi della sequenza di input che soddisfano la condizione.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Filters in parallel a sequence of values based on a predicate. Each element's index is used in the logic of the predicate function.">Filtra in parallelo una sequenza di valori in base a un predicato. L'indice di ogni elemento viene usato nella logica della funzione predicato.</summary>
      <param name="source" vsli:raw="A sequence to filter.">Sequenza da filtrare.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Funzione per testare ogni elemento rispetto a una condizione.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of source.">Tipo degli elementi di origine.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> o <paramref name="predicate" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Il numero di elementi enumerati dalla query è superiore a <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that contains elements from the input sequence that satisfy the condition.">Sequenza che contiene elementi della sequenza di input che soddisfano la condizione.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; to associate with the query.">Imposta l'oggetto <see cref="T:System.Threading.CancellationToken" /> da associare alla query.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">Oggetto ParallelQuery su cui impostare l'opzione.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Token di annullamento.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;paramref name=&quot;cancellationToken&quot; /&gt; has been disposed.">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <paramref name="cancellationToken" /> è stato eliminato.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt; is used multiple times in the query.">
        <paramref name="WithCancellation" /> viene utilizzato più volte nella query.</exception>
      <returns vsli:raw="A ParallelQuery representing the same query as &lt;paramref name=&quot;source&quot; /&gt;, but with the registered cancellation token.">Oggetto ParallelQuery che rappresenta la stessa query come origine, ma con il token di annullamento registrato.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Sets the degree of parallelism to use in a query. Degree of parallelism is the maximum number of concurrently executing tasks that will be used to process the query.">Imposta il grado di parallelismo da usare in una query. Il grado di parallelismo è il numero massimo di attività eseguite contemporaneamente che saranno usate per elaborare la query.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the limit on the degrees of parallelism.">Oggetto ParallelQuery su cui impostare il limite in gradi di parallelismo.</param>
      <param name="degreeOfParallelism" vsli:raw="The degree of parallelism for the query.">Grado di parallelismo per la query.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;degreeOfParallelism&quot; /&gt; is less than 1 or greater than 512.">
        <paramref name="degreeOfParallelism" /> è minore di 1 o maggiore di 512.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="WithDegreeOfParallelism is used multiple times in the query.">WithDegreeOfParallelism viene utilizzato più volte nella query.</exception>
      <returns vsli:raw="ParallelQuery representing the same query as source, with the limit on the degrees of parallelism set.">Oggetto ParallelQuery che rappresenta la stessa query come origine, con il limite di gradi di parallelismo impostato.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
      <summary vsli:raw="Sets the execution mode of the query.">Imposta la modalità di esecuzione della query.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">Oggetto ParallelQuery su cui impostare l'opzione.</param>
      <param name="executionMode" vsli:raw="The mode in which to execute the query.">Modalità in cui eseguire la query.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;executionMode&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Linq.ParallelExecutionMode&quot; /&gt; value.">
        <paramref name="executionMode" /> non è un valore valido di <see cref="T:System.Linq.ParallelExecutionMode" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="WithExecutionMode is used multiple times in the query.">WithExecutionMode viene utilizzato più volte nella query.</exception>
      <returns vsli:raw="ParallelQuery representing the same query as source, but with the registered execution mode.">Oggetto ParallelQuery che rappresenta la stessa query come origine, ma con la modalità di esecuzione registrata.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
      <summary vsli:raw="Sets the merge options for this query, which specify how the query will buffer output.">Imposta le opzioni di unione per la query, che specificano la modalità di memorizzazione dell'output nel buffer da parte della query.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">Oggetto ParallelQuery su cui impostare l'opzione.</param>
      <param name="mergeOptions" vsli:raw="The merge options to set for this query.">Opzioni di unione da impostare per la query.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> è un riferimento null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mergeOptions&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Linq.ParallelMergeOptions&quot; /&gt; value.">
        <paramref name="mergeOptions" /> non è un valore valido di <see cref="T:System.Linq.ParallelMergeOptions" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;WithMergeOptions&quot; /&gt; is used multiple times in the query.">
        <paramref name="WithMergeOptions" /> viene utilizzato più volte nella query.</exception>
      <returns vsli:raw="ParallelQuery representing the same query as source, but with the registered merge options.">Oggetto ParallelQuery che rappresenta la stessa query come origine, ma con le opzioni di unione registrate.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
      <summary vsli:raw="This Zip overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">Questo overload di Zip non dovrebbe mai essere chiamato. Questo metodo è contrassegnato come obsoleto e genera sempre <see cref="T:System.NotSupportedException" /> quando viene richiamato.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="second" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Questo parametro non viene usato.</param>
      <typeparam name="TFirst" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <typeparam name="TSecond" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Questo parametro di tipo non viene usato.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Eccezione che si verifica quando viene chiamato questo metodo.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Questo overload genera sempre <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
      <summary vsli:raw="Merges in parallel two sequences by using the specified predicate function.">Unisce in parallelo due sequenze tramite la funzione predicato specificata.</summary>
      <param name="first" vsli:raw="The first sequence to zip.">Prima sequenza da comprimere.</param>
      <param name="second" vsli:raw="The second sequence to zip.">Seconda sequenza da comprimere.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">Funzione per creare un elemento di risultato da due elementi corrispondenti.</param>
      <typeparam name="TFirst" vsli:raw="The type of the elements of the first sequence.">Tipo degli elementi della prima sequenza.</typeparam>
      <typeparam name="TSecond" vsli:raw="The type of the elements of the second sequence.">Tipo degli elementi della seconda sequenza.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the return elements.">Tipo degli elementi restituiti.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> o <paramref name="second" /> o <paramref name="resultSelector" /> è un riferimento Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La query è stata annullata con il token passato tramite <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Una o più eccezioni si sono verificate durante la valutazione della query.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing &lt;paramref name=&quot;resultSelector&quot; /&gt; pairwise on two sequences. If the sequence lengths are unequal, this truncates to the length of the shorter sequence.">Sequenza che contiene elementi di tipo <paramref name="TResult" /> ottenuti eseguendo un pairwise <paramref name="resultSelector" /> su due sequenze. Se le sequenze hanno lunghezze diverse, la sequenza più lunga viene troncata in base alla lunghezza della sequenza più corta.</returns>
    </member>
    <member name="T:System.Linq.ParallelExecutionMode">
      <summary vsli:raw="The query execution mode is a hint that specifies how the system should handle performance trade-offs when parallelizing queries.">La modalità di esecuzione delle query è un suggerimento che specifica come il sistema deve gestire i compromessi in termini di prestazioni durante la parallelizzazione delle query.</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.Default">
      <summary vsli:raw="This is the default setting. PLINQ will examine the query's structure and will only parallelize the query if will likely result in speedup. If the query structure indicates that speedup is not likely to be obtained, then PLINQ will execute the query as an ordinary LINQ to Objects query.">Si tratta dell'impostazione predefinita. PLINQ esaminerà la struttura della query e la parallelizzerà solo se ciò comporterà una maggiore velocità. Se la struttura della query indica che non è possibile ottenere l'aumento di velocità, PLINQ eseguirà la query come una comune query LINQ to Objects.</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.ForceParallelism">
      <summary vsli:raw="Parallelize the entire query, even if that means using high-overhead algorithms. Use this flag in cases where you know that parallel execution of the query will result in speedup, but PLINQ in the Default mode would execute it as sequential.">Parallelizzare l'intera query, anche se ciò comporta l'utilizzo di algoritmi con sovraccarico elevato. Utilizzare questo flag nei casi in cui si sa che l'esecuzione parallela della query comporterà un aumento di velocità, ma PLINQ nella modalità predefinita l'eseguirebbe come sequenziale.</summary>
    </member>
    <member name="T:System.Linq.ParallelMergeOptions">
      <summary vsli:raw="Specifies the preferred type of output merge to use in a query. In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence. This is a hint only, and may not be respected by the system when parallelizing all queries.">Specifica il tipo preferito di merge di output da utilizzare in una query. In altre parole, indica come PLINQ deve unire i risultati dalle varie partizioni in una singola sequenza di risultati. Si tratta solo di un suggerimento, che potrebbe non essere rispettato dal sistema durante la parallelizzazione di tutte le query.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.AutoBuffered">
      <summary vsli:raw="Use a merge with output buffers of a size chosen by the system. Results will accumulate into an output buffer before they are available to the consumer of the query.">Utilizzare un'unione con i buffer di output di una dimensione scelta dal sistema. I risultati verranno accumulati in un buffer di output prima di essere disponibili all'utente della query.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.Default">
      <summary vsli:raw="Use the default merge type, which is AutoBuffered.">Utilizzare il tipo di unione predefinito, ovvero AutoBuffered.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.FullyBuffered">
      <summary vsli:raw="Use a merge with full output buffers. The system will accumulate all of the results before making any of them available to the consumer of the query.">Utilizzare un'unione con buffer di output completi. Tutti i risultati verranno accumulati dal sistema in un buffer di output prima di essere resi disponibili all'utente della query.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.NotBuffered">
      <summary vsli:raw="Use a merge without output buffers. As soon as result elements have been computed, make that element available to the consumer of the query.">Utilizzare un'unione senza buffer di output. Non appena gli elementi del risultato sono stati calcolati, vengono resi disponibili all'utente della query.</summary>
    </member>
    <member name="T:System.Linq.ParallelQuery">
      <summary vsli:raw="Represents a parallel sequence.">Rappresenta una sequenza parallela.</summary>
    </member>
    <member name="M:System.Linq.ParallelQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">Restituisce un enumeratore che scorre la sequenza.</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">Enumeratore che scorre la sequenza.</returns>
    </member>
    <member name="T:System.Linq.ParallelQuery`1">
      <summary vsli:raw="Represents a parallel sequence.">Rappresenta una sequenza parallela.</summary>
      <typeparam name="TSource" vsli:raw="The type of element in the source sequence.">Tipo di elemento nella sequenza di origine.</typeparam>
    </member>
    <member name="M:System.Linq.ParallelQuery`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">Restituisce un enumeratore che scorre la sequenza.</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">Enumeratore che scorre la sequenza.</returns>
    </member>
  </members>
</doc>