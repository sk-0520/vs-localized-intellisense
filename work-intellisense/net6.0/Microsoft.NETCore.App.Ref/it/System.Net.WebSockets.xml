<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ValueWebSocketReceiveResult">
      <summary>Rappresenta il risultato dell'esecuzione di una singola operazione <see cref="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" /> su un elemento <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ValueWebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>Inizializza una nuova istanza dell'elemento struct <see cref="T:System.Net.WebSockets.ValueWebSocketReceiveResult" />. Un'istanza di questo elemento struct rappresenta il risultato dell'esecuzione di una singola operazione <c>ReceiveAsync</c> su un elemento <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
      <param name="count">Numero di byte ricevuti da <see cref="T:System.Net.WebSockets.WebSocket" />.</param>
      <param name="messageType">Uno dei valori di enumerazione che indicano se il messaggio corrente è un messaggio UTF-8 o binario.</param>
      <param name="endOfMessage">
        <see langword="true" /> se il messaggio è stato ricevuto completamente; in caso contrario <see langword="false" />.</param>
    </member>
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.Count">
      <summary>Ottiene il numero di byte ricevuti da <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
      <returns>Numero di byte ricevuti da <see cref="T:System.Net.WebSockets.WebSocket" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.EndOfMessage">
      <summary>Ottiene un valore che indica se il messaggio è stato ricevuto completamente.</summary>
      <returns>
        <see langword="true" /> Se il messaggio è stato ricevuto completamente; in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.MessageType">
      <summary>Ottiene il tipo del messaggio corrente.</summary>
      <returns>Uno dei valori di enumerazione che specifica se il messaggio corrente è un messaggio UTF-8, binario o di chiusura.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocket">
      <summary>La classe WebSocket consente alle applicazioni di inviare e ricevere dati al termine dell'aggiornamento WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.#ctor">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Abort">
      <summary>Interrompe la connessione WebSocket e annulla tutte le operazioni di I/O in corso.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Chiude la connessione WebSocket come operazione asincrona usando l'handshake di chiusura definito nella sezione 7 della specifica del protocollo WebSocket.</summary>
      <param name="closeStatus">Indica il motivo della chiusura della connessione WebSocket.</param>
      <param name="statusDescription">Specifica una spiegazione leggibile del motivo della chiusura della connessione.</param>
      <param name="cancellationToken">Token che può essere utilizzato per propagare la notifica della richiesta di annullamento delle operazioni.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Avvia o completa l'handshake di chiusura definito nella sezione 7 della specifica del protocollo WebSocket.</summary>
      <param name="closeStatus">Indica il motivo della chiusura della connessione WebSocket.</param>
      <param name="statusDescription">Consente alle applicazioni di specificare una spiegazione leggibile sul motivo della chiusura della connessione.</param>
      <param name="cancellationToken">Token che può essere usato per propagare la notifica che l'operazione deve essere annullata.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)">
      <summary>Creare i buffer client da utilizzare con questa istanza di <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
      <param name="receiveBufferSize">Dimensione, in byte, del buffer di ricezione del client.</param>
      <param name="sendBufferSize">Dimensioni, in byte, del buffer di invio.</param>
      <returns>Una matrice con i buffer client.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
      <summary>Consente ai chiamanti di creare una classe WebSocket lato client che utilizzerà il WSPC a scopo di framing.</summary>
      <param name="innerStream">Connessione da utilizzare per le operazioni di I/O.</param>
      <param name="subProtocol">Sottoprotocollo accettato dal client.</param>
      <param name="receiveBufferSize">Dimensioni, in byte, del buffer di ricezione WebSocket del client.</param>
      <param name="sendBufferSize">Dimensioni, in byte, del buffer di invio WebSocket del client.</param>
      <param name="keepAliveInterval">Determina la frequenza con la quale un frame viene inviato sulla connessione come keep-alive. Si applica solo quando la connessione è inattiva.</param>
      <param name="useZeroMaskingKey">Indica se una chiave casuale o una chiave statica (solo zeri) deve essere utilizzata per il mascheramento WebSocket.</param>
      <param name="internalBuffer">Verrà utilizzato come buffer interno del WPC. Le dimensioni devono essere pari almeno a <c>2 * ReceiveBufferSize + SendBufferSize + 256 + 20 (16 su 32 bit)</c>.</param>
      <returns>Restituisce <see cref="T:System.Net.WebSockets.WebSocket" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateFromStream(System.IO.Stream,System.Boolean,System.String,System.TimeSpan)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Net.WebSockets.WebSocket" /> che opera sul flusso specificato, che rappresenta una connessione Web Socket.</summary>
      <param name="stream">Flusso per la connessione.</param>
      <param name="isServer">
        <see langword="true" /> per indicare che si tratta del lato server della connessione. <see langword="false" /> se è il lato client.</param>
      <param name="subProtocol">Il protocollo secondario concordato usato durante la creazione della connessione.</param>
      <param name="keepAliveInterval">Intervallo keep-alive da usare o <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> per disabilitare i Keep-Alive.</param>
      <returns>Nuovo Web Socket.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)">
      <summary>Crea un buffer server di WebSocket.</summary>
      <param name="receiveBufferSize">Dimensione, in byte, del buffer desiderato.</param>
      <returns>Restituisce <see cref="T:System.ArraySegment`1" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Dispose">
      <summary>Usato per pulire le risorse non gestite per implementazioni ASP.NET e self-hosted.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.IsApplicationTargeting45">
      <summary>Restituisce un valore che indica se l'istanza di WebSocket è destinata a .NET Framework 4.5.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Net.WebSockets.WebSocket" /> è destinato a .NET Framework 4.5; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)">
      <summary>Restituisce un valore che indica se lo stato dell'istanza di WebSocket è Chiuso o Interrotto.</summary>
      <param name="state">Stato corrente di WebSocket.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Net.WebSockets.WebSocket" /> viene chiuso o interrotto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>Riceve i dati dalla connessione <see cref="T:System.Net.WebSockets.WebSocket" /> in modo asincrono.</summary>
      <param name="buffer">Fa riferimento al buffer dell'applicazione che è il percorso di archiviazione per i dati ricevuti.</param>
      <param name="cancellationToken">Propaga la notifica di richiesta di annullamento delle operazioni.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> sull'oggetto attività restituisce un oggetto <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> che rappresenta i dati ricevuti.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Riceve i dati dalla connessione <see cref="T:System.Net.WebSockets.WebSocket" /> in modo asincrono.</summary>
      <param name="buffer">Buffer dell'applicazione che è il percorso di archiviazione per i dati ricevuti.</param>
      <param name="cancellationToken">Token di annullamento da usare per annullare l'operazione di ricezione.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> sull'oggetto attività restituisce un oggetto <see cref="T:System.Net.WebSockets.ValueWebSocketReceiveResult" /> che rappresenta i dati ricevuti.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.RegisterPrefixes">
      <summary>Consente ai chiamanti di registrare prefissi per le richieste WebSocket (ws e wss).</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Invia i dati sulla connessione <see cref="T:System.Net.WebSockets.WebSocket" /> in modo asincrono.</summary>
      <param name="buffer">Buffer da inviare sulla connessione.</param>
      <param name="messageType">Indica se l'applicazione invia un messaggio binario o di testo.</param>
      <param name="endOfMessage">Indica se i dati in "buffer" sono l'ultima parte di un messaggio.</param>
      <param name="cancellationToken">Token che propaga la notifica che l'operazione deve essere annullata.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Invia i dati sulla connessione <see cref="T:System.Net.WebSockets.WebSocket" /> in modo asincrono.</summary>
      <param name="buffer">Buffer da inviare sulla connessione.</param>
      <param name="messageType">Uno dei valori di enumerazione che indica se l'applicazione invia un messaggio binario o di testo.</param>
      <param name="endOfMessage">
        <see langword="true" /> per indicare che i dati in "buffer" sono l'ultima parte di un messaggio. In caso contrario, <see langword="false" />.</param>
      <param name="cancellationToken">Token di annullamento usato per annullare l'operazione di invio.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])">
      <summary>Verifica che la connessione sia in uno stato previsto.</summary>
      <param name="state">Lo stato corrente di WebSocket di cui eseguire il test con l'elenco degli stati validi.</param>
      <param name="validStates">Elenco di stati di connessione validi.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatus">
      <summary>Indica il motivo per cui l'endpoint remoto ha avviato l'handshake di chiusura.</summary>
      <returns>Restituisce <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatusDescription">
      <summary>Consente all'endpoint remoto di descrivere il motivo per cui la connessione è stata chiusa.</summary>
      <returns>Restituisce <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval">
      <summary>Ottiene l'intervallo keep-alive del protocollo WebSocket predefinito.</summary>
      <returns>Intervallo keep-alive del protocollo WebSocket predefinito. Il valore tipico per questo intervallo è 30 secondi, come definito dal sistema operativo o dalla piattaforma .NET. Viene usato per inizializzare il <see cref="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval" /> valore.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.State">
      <summary>Restituisce lo stato corrente della connessione WebSocket.</summary>
      <returns>Stato corrente della connessione WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.SubProtocol">
      <summary>Ottiene il protocollo secondario negoziato durante l'handshake di apertura.</summary>
      <returns>Sottoprotocollo negoziato durante l'handshake di apertura.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketCloseStatus">
      <summary>Rappresenta i codici di chiusura WebSocket noti, come definito nella sezione 11.7 della specifica del protocollo WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.Empty">
      <summary>Nessun errore specificato.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.EndpointUnavailable">
      <summary>(1001) Indica che è in corso la rimozione di un endpoint. Il server o il client non sarà più disponibile.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InternalServerError">
      <summary>(1011) La connessione verrà chiusa dal server a causa di un errore nel server.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidMessageType">
      <summary>(1003) Il client o il server terminerà la connessione perché non può accettare il tipo di dati ricevuto.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidPayloadData">
      <summary>(1007) Il client o il server sta terminando la connessione poiché ha ricevuto dati non coerenti con il tipo di messaggio.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MandatoryExtension">
      <summary>(1010) Il client terminerà la connessione perché si aspettava che il server negoziasse un'estensione.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MessageTooBig">
      <summary>(1009) Il client o il server terminerà la connessione poiché ha ricevuto un messaggio troppo grande per l'elaborazione.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.NormalClosure">
      <summary>(1000) La connessione è stata chiusa dopo l'evasione della richiesta.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.PolicyViolation">
      <summary>(1008) La connessione verrà chiusa poiché un endpoint ha ricevuto un messaggio che ne viola i criteri.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.ProtocolError">
      <summary>(1002) Il client o il server sta terminando la connessione a causa di un errore di protocollo.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketContext">
      <summary>Utilizzato per accedere alle informazioni nell'handshake di WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketContext.#ctor">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketContext" />.</summary>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.CookieCollection">
      <summary>Cookie passati al server durante l'handshake di apertura.</summary>
      <returns>Restituisce <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.Headers">
      <summary>Le intestazioni HTTP inviati al server durante l'handshake di apertura.</summary>
      <returns>Restituisce <see cref="T:System.Collections.Specialized.NameValueCollection" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsAuthenticated">
      <summary>Se il client di WebSocket è autenticato.</summary>
      <returns>Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsLocal">
      <summary>Se il client di WebSocket si è connesso dal computer locale.</summary>
      <returns>Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsSecureConnection">
      <summary>Se la connessione di WebSocket è protetta utilizzando SSL (Secure Sockets Layer).</summary>
      <returns>Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.Origin">
      <summary>Valore dell'intestazione HTTP di origine inclusa nell'handshake di apertura.</summary>
      <returns>Restituisce <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.RequestUri">
      <summary>URI richiesto dal client WebSocket.</summary>
      <returns>Restituisce <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketKey">
      <summary>Valore dell'intestazione HTTP di SecWebSocketKey inclusa nell'handshake di apertura.</summary>
      <returns>Restituisce <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketProtocols">
      <summary>Valore dell'intestazione HTTP di SecWebSocketKey inclusa nell'handshake di apertura.</summary>
      <returns>Restituisce <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketVersion">
      <summary>L'elenco dei sottoprotocolli richiesti dal client WebSocket.</summary>
      <returns>Restituisce <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.User">
      <summary>Oggetto utilizzato per ottenere identità, informazioni di autenticazione e ruoli di sicurezza per il client WebSocket.</summary>
      <returns>Restituisce <see cref="T:System.Security.Principal.IPrincipal" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.WebSocket">
      <summary>Istanza di WebSocket utilizzata per interagire (inviare/ricevere/chiudere e così via) con la connessione WebSocket.</summary>
      <returns>Restituisce <see cref="T:System.Net.WebSockets.WebSocket" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketError">
      <summary>Contiene l'elenco degli errori possibili WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.ConnectionClosedPrematurely">
      <summary>Indica che la connessione è stata interrotta in modo imprevisto.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Faulted">
      <summary>Indica un errore generale.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.HeaderError">
      <summary>Indica un errore verificatosi in fase di analisi delle intestazioni HTTP durante l'handshake di apertura.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidMessageType">
      <summary>Indica che è stato ricevuto un frame di WebSocket con un codice operativo sconosciuto.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidState">
      <summary>Indica che il WebSocket è uno stato non valido per l'operazione specificata (ad esempio, chiuso o interrotto).</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NativeError">
      <summary>Indica che si è verificato un errore nativo sconosciuto.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NotAWebSocket">
      <summary>Indica che la richiesta in ingresso non è una richiesta WebSocket valida.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Success">
      <summary>Indica che non erano presenti informazioni sugli errori nativi per l'eccezione.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedProtocol">
      <summary>Indica che il client ha richiesto una versione non supportata del sottoprotocollo WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedVersion">
      <summary>Indica che il client ha richiesto una versione non supportata del protocollo WebSocket.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketException">
      <summary>Rappresenta un'eccezione che si è verificata durante l'esecuzione di un'operazione in una connessione WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="nativeError">Codice di errore nativo per l'eccezione.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.Exception)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="nativeError">Codice di errore nativo per l'eccezione.</param>
      <param name="innerException">Indica l'eccezione precedente che ha causato l'eccezione corrente.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.String)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="nativeError">Codice di errore nativo per l'eccezione.</param>
      <param name="message">Descrizione dell'errore.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Errore dall'enumerazione WebSocketError.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Exception)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Errore dall'enumerazione WebSocketError.</param>
      <param name="innerException">Indica l'eccezione precedente che ha causato l'eccezione corrente.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Errore dall'enumerazione WebSocketError.</param>
      <param name="nativeError">Codice di errore nativo per l'eccezione.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.Exception)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Errore dall'enumerazione WebSocketError.</param>
      <param name="nativeError">Codice di errore nativo per l'eccezione.</param>
      <param name="innerException">Indica l'eccezione precedente che ha causato l'eccezione corrente.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Errore dall'enumerazione WebSocketError.</param>
      <param name="nativeError">Codice di errore nativo per l'eccezione.</param>
      <param name="message">Descrizione dell'errore.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String,System.Exception)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Errore dall'enumerazione WebSocketError.</param>
      <param name="nativeError">Codice di errore nativo per l'eccezione.</param>
      <param name="message">Descrizione dell'errore.</param>
      <param name="innerException">Indica l'eccezione precedente che ha causato l'eccezione corrente.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Errore dall'enumerazione WebSocketError.</param>
      <param name="message">Descrizione dell'errore.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String,System.Exception)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Errore dall'enumerazione WebSocketError.</param>
      <param name="message">Descrizione dell'errore.</param>
      <param name="innerException">Indica l'eccezione precedente che ha causato l'eccezione corrente.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="message">Descrizione dell'errore.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String,System.Exception)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="message">Descrizione dell'errore.</param>
      <param name="innerException">Indica l'eccezione precedente che ha causato l'eccezione corrente.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Imposta l'oggetto SerializationInfo con il nome file e il numero di riga in cui si è verificata l'eccezione.</summary>
      <param name="info">Oggetto SerializationInfo.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.ErrorCode">
      <summary>Codice di errore nativo per l'eccezione che si è verificata.</summary>
      <returns>Restituisce <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.WebSocketErrorCode">
      <summary>Restituisce un WebSocketError che indica il tipo di errore che si è verificato.</summary>
      <returns>Restituisce <see cref="T:System.Net.WebSockets.WebSocketError" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketMessageType">
      <summary>Indica il tipo di messaggio.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Binary">
      <summary>Il messaggio è in formato binario.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Close">
      <summary>È stata completata una ricezione perché è stato ricevuto un messaggio di chiusura.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Text">
      <summary>Il messaggio in testo non crittografato.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketReceiveResult">
      <summary>Un'istanza di questa classe rappresenta il risultato dell'esecuzione di una singola operazione ReceiveAsync su un WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" />.</summary>
      <param name="count">Numero di byte ricevuti.</param>
      <param name="messageType">Tipo di messaggio ricevuto.</param>
      <param name="endOfMessage">Indica se il messaggio è finale.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" />.</summary>
      <param name="count">Numero di byte ricevuti.</param>
      <param name="messageType">Tipo di messaggio ricevuto.</param>
      <param name="endOfMessage">Indica se il messaggio è finale.</param>
      <param name="closeStatus">Indica l'oggetto <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /> della connessione.</param>
      <param name="closeStatusDescription">Descrizione di <paramref name="closeStatus" />.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus">
      <summary>Indica il motivo per cui l'endpoint remoto ha avviato l'handshake di chiusura.</summary>
      <returns>Restituisce <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription">
      <summary>Restituisce la descrizione facoltativa che descrive perché l'handshake di chiusura è stato avviato dall'endpoint remoto.</summary>
      <returns>Restituisce <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.Count">
      <summary>Indica il numero di byte ricevuti dal protocollo WebSocket.</summary>
      <returns>Restituisce <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage">
      <summary>Indica se il messaggio è stato ricevuto completamente.</summary>
      <returns>Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.MessageType">
      <summary>Indica se il messaggio corrente è un messaggio UTF-8 o binario.</summary>
      <returns>Restituisce <see cref="T:System.Net.WebSockets.WebSocketMessageType" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketState">
      <summary>Definisce i diversi stati in cui può trovarsi un'istanza di WebSockets.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Aborted">
      <summary>Riservato per usi futuri.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Closed">
      <summary>Indica che l'handshake di chiusura WebSocket è stato completato correttamente.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseReceived">
      <summary>Un messaggio di chiusura è stato ricevuto dall'endpoint remoto.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseSent">
      <summary>Un messaggio di chiusura è stato inviato all'endpoint remoto.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Connecting">
      <summary>La connessione sta negoziando l'handshake con l'endpoint remoto.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.None">
      <summary>Riservato per usi futuri.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Open">
      <summary>Lo stato iniziale dopo che l'handshake HTTP è stato completato.</summary>
    </member>
  </members>
</doc>